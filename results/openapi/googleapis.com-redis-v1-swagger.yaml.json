{
  "apiTitle": "Google Cloud Memorystore for Redis",
  "apiVersion": "v1",
  "apiFileName": "googleapis.com-redis-v1-swagger.yaml",
  "apiFormat": "OPENAPI",
  "measurementDate": "2019/12/13",
  "measurement": [
    {
      "metricName": "BiggestRootCoverage",
      "metricValue": 1.0,
      "additionalInformation": "Biggest root coverage: /v1 with 11 operation(s) from overall 11 operation(s)"
    },
    {
      "metricName": "ServiceInterfaceDataCohesion",
      "metricValue": 0.6364,
      "additionalInformation": "Metric value range: [0-1]; Set of pairwise operations with at least one common parameter: [[redis.projects.locations.instances.patch, redis.projects.locations.operations.list], [redis.projects.locations.instances.import, redis.projects.locations.operations.list], [redis.projects.locations.instances.failover, redis.projects.locations.operations.list], [redis.projects.locations.instances.get, redis.projects.locations.operations.cancel], [redis.projects.locations.instances.delete, redis.projects.locations.instances.export], [redis.projects.locations.instances.create, redis.projects.locations.instances.failover], [redis.projects.locations.instances.delete, redis.projects.locations.instances.list], [redis.projects.locations.instances.delete, redis.projects.locations.operations.list], [redis.projects.locations.instances.patch, redis.projects.locations.instances.failover], [redis.projects.locations.list, redis.projects.locations.instances.export], [redis.projects.locations.instances.list, redis.projects.locations.instances.export], [redis.projects.locations.instances.list, redis.projects.locations.operations.list], [redis.projects.locations.operations.cancel, redis.projects.locations.instances.failover], [redis.projects.locations.instances.delete, redis.projects.locations.list], [redis.projects.locations.instances.patch, redis.projects.locations.list], [redis.projects.locations.instances.create, redis.projects.locations.list], [redis.projects.locations.instances.import, redis.projects.locations.instances.delete], [redis.projects.locations.instances.delete, redis.projects.locations.instances.patch], [redis.projects.locations.instances.get, redis.projects.locations.instances.export], [redis.projects.locations.instances.list, redis.projects.locations.instances.failover], [redis.projects.locations.instances.export, redis.projects.locations.operations.list], [redis.projects.locations.operations.cancel, redis.projects.locations.operations.list], [redis.projects.locations.instances.create, redis.projects.locations.operations.list], [redis.projects.locations.instances.import, redis.projects.locations.instances.failover], [redis.projects.locations.instances.patch, redis.projects.locations.instances.export], [redis.projects.locations.instances.import, redis.projects.locations.instances.patch], [redis.projects.locations.instances.create, redis.projects.locations.instances.get], [redis.projects.locations.list, redis.projects.locations.instances.failover], [redis.projects.locations.instances.import, redis.projects.locations.instances.create], [redis.projects.locations.instances.list, redis.projects.locations.operations.cancel], [redis.projects.locations.instances.delete, redis.projects.locations.instances.failover], [redis.projects.locations.instances.delete, redis.projects.locations.operations.cancel], [redis.projects.locations.instances.get, redis.projects.locations.operations.list], [redis.projects.locations.instances.list, redis.projects.locations.list], [redis.projects.locations.instances.get, redis.projects.locations.list], [redis.projects.locations.instances.export, redis.projects.locations.instances.failover], [redis.projects.locations.instances.create, redis.projects.locations.instances.list], [redis.projects.locations.instances.patch, redis.projects.locations.operations.cancel], [redis.projects.locations.list, redis.projects.locations.operations.list], [redis.projects.locations.instances.get, redis.projects.locations.instances.failover], [redis.projects.locations.list, redis.projects.locations.operations.cancel], [redis.projects.locations.instances.create, redis.projects.locations.instances.export], [redis.projects.locations.instances.export, redis.projects.locations.operations.cancel], [redis.projects.locations.instances.delete, redis.projects.locations.instances.get], [redis.projects.locations.instances.create, redis.projects.locations.instances.patch], [redis.projects.locations.instances.import, redis.projects.locations.list], [redis.projects.locations.instances.get, redis.projects.locations.instances.list], [redis.projects.locations.instances.import, redis.projects.locations.instances.export], [redis.projects.locations.instances.list, redis.projects.locations.instances.patch], [redis.projects.locations.instances.import, redis.projects.locations.instances.list], [redis.projects.locations.instances.delete, redis.projects.locations.instances.create], [redis.projects.locations.instances.create, redis.projects.locations.operations.cancel], [redis.projects.locations.instances.import, redis.projects.locations.instances.get], [redis.projects.locations.instances.import, redis.projects.locations.operations.cancel], [redis.projects.locations.instances.get, redis.projects.locations.instances.patch]]; Set of pairwise operations with common return type: [[redis.projects.locations.instances.create, redis.projects.locations.instances.export], [redis.projects.locations.instances.import, redis.projects.locations.instances.create], [redis.projects.locations.instances.create, redis.projects.locations.instances.patch], [redis.projects.locations.instances.import, redis.projects.locations.instances.delete], [redis.projects.locations.instances.delete, redis.projects.locations.instances.failover], [redis.projects.locations.instances.delete, redis.projects.locations.instances.patch], [redis.projects.locations.instances.import, redis.projects.locations.instances.export], [redis.projects.locations.instances.delete, redis.projects.locations.instances.export], [redis.projects.locations.instances.export, redis.projects.locations.instances.failover], [redis.projects.locations.instances.create, redis.projects.locations.instances.failover], [redis.projects.locations.instances.delete, redis.projects.locations.instances.create], [redis.projects.locations.instances.import, redis.projects.locations.instances.failover], [redis.projects.locations.instances.patch, redis.projects.locations.instances.export], [redis.projects.locations.instances.import, redis.projects.locations.instances.patch], [redis.projects.locations.instances.patch, redis.projects.locations.instances.failover]]; Number of operations: 11.0"
    },
    {
      "metricName": "WeightedServiceInterfaceCount",
      "metricValue": 11.0,
      "additionalInformation": "Number of different operations: 11"
    },
    {
      "metricName": "LackOfMessageLevelCohesion",
      "metricValue": 0.5254
    },
    {
      "metricName": "NumberOfRootPaths",
      "metricValue": 1.0,
      "additionalInformation": "all root paths: /v1"
    },
    {
      "metricName": "LongestPath",
      "metricValue": 3.0,
      "additionalInformation": "Longest path: /v1/{name}/locations, Length: 3"
    },
    {
      "metricName": "DistinctMessageRatio",
      "metricValue": 0.6364
    },
    {
      "metricName": "DataWeight",
      "metricValue": 226.0
    },
    {
      "metricName": "ArgumentsPerOperation",
      "metricValue": 13.3636
    },
    {
      "metricName": "AveragePathLength",
      "metricValue": 2.375
    }
  ]
}