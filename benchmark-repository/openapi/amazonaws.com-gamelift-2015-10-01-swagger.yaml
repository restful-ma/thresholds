openapi: 3.0.0
info:
  version: 2015-10-01
  x-release: v4
  title: Amazon GameLift
  description: '<fullname>Amazon GameLift Service</fullname> <p> Amazon GameLift is a
    managed service for developers who need a scalable, dedicated server
    solution for their multiplayer games. Use Amazon GameLift for these tasks:
    (1) set up computing resources and deploy your game servers, (2) run game
    sessions and get players into games, (3) automatically scale your resources
    to meet player demand and manage costs, and (4) track in-depth metrics on
    game server performance and player usage.</p> <p>When setting up hosting
    resources, you can deploy your custom game server or use the Amazon GameLift
    Realtime Servers. Realtime Servers gives you the ability to quickly stand up
    lightweight, efficient game servers with the core Amazon GameLift
    infrastructure already built in.</p> <p> <b>Get Amazon GameLift Tools and
    Resources</b> </p> <p>This reference guide describes the low-level service
    API for Amazon GameLift and provides links to language-specific SDK
    reference topics. See also <a
    href="https://docs.aws.amazon.com/gamelift/latest/developerguide/gamelift-components.html">
    Amazon GameLift Tools and Resources</a>.</p> <p> <b>API Summary</b> </p>
    <p>The Amazon GameLift service API includes two key sets of actions:</p>
    <ul> <li> <p>Manage game sessions and player access -- Integrate this
    functionality into game client services in order to create new game
    sessions, retrieve information on existing game sessions; reserve a player
    slot in a game session, request matchmaking, etc.</p> </li> <li>
    <p>Configure and manage game server resources -- Manage your Amazon GameLift
    hosting resources, including builds, scripts, fleets, queues, and aliases.
    Set up matchmakers, configure auto-scaling, retrieve game logs, and get
    hosting and game metrics.</p> </li> </ul> <p> <b> <a
    href="https://docs.aws.amazon.com/gamelift/latest/developerguide/reference-awssdk.html">
    Task-based list of API actions</a> </b> </p>'
  x-logo:
    url: https://twitter.com/awscloud/profile_image?size=original
    backgroundColor: "#FFFFFF"
  termsOfService: https://aws.amazon.com/service-terms/
  contact:
    name: Mike Ralphson
    email: mike.ralphson@gmail.com
    url: https://github.com/mermade/aws2openapi
    x-twitter: PermittedSoc
  license:
    name: Apache 2.0 License
    url: http://www.apache.org/licenses/
  x-providerName: amazonaws.com
  x-serviceName: gamelift
  x-origin:
    - contentType: application/json
      url: https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/gamelift-2015-10-01.normal.json
      converter:
        url: https://github.com/mermade/aws2openapi
        version: 1.0.0
      x-apisguru-direct: true
  x-apiClientRegistration:
    url: https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct
  x-apisguru-categories:
    - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: https://docs.aws.amazon.com/gamelift/
x-hasEquivalentPaths: true
security:
  - hmac: []
paths:
  /#X-Amz-Target=GameLift.AcceptMatch:
    post:
      operationId: AcceptMatch
      description: "<p>Registers a player's acceptance or rejection of a proposed FlexMatch
        match. A matchmaking configuration may require player acceptance; if so,
        then matches built with that configuration cannot be completed unless
        all players accept the proposed match within a specified time limit.
        </p> <p>When FlexMatch builds a match, all the matchmaking tickets
        involved in the proposed match are placed into status
        <code>REQUIRES_ACCEPTANCE</code>. This is a trigger for your game to get
        acceptance from all players in the ticket. Acceptances are only valid
        for tickets when they are in this status; all other acceptances result
        in an error.</p> <p>To register acceptance, specify the ticket ID, a
        response, and one or more players. Once all players have registered
        acceptance, the matchmaking tickets advance to status
        <code>PLACING</code>, where a new game session is created for the match.
        </p> <p>If any player rejects the match, or if acceptances are not
        received before a specified timeout, the proposed match is dropped. The
        matchmaking tickets are then handled in one of two ways: For tickets
        where one or more players rejected the match, the ticket status is
        returned to <code>SEARCHING</code> to find a new match. For tickets
        where one or more players failed to respond, the ticket status is set to
        <code>CANCELLED</code>, and processing is terminated. A new matchmaking
        request for these players can be submitted as needed. </p> <p> <b>Learn
        more</b> </p> <p> <a
        href=\"https://docs.aws.amazon.com/gamelift/latest/developerguide/match\
        -client.html\"> Add FlexMatch to a Game Client</a> </p> <p> <a
        href=\"https://docs.aws.amazon.com/gamelift/latest/developerguide/match\
        -events.html\"> FlexMatch Events Reference</a> </p> <p> <b>Related
        operations</b> </p> <ul> <li> <p> <a>StartMatchmaking</a> </p> </li>
        <li> <p> <a>DescribeMatchmaking</a> </p> </li> <li> <p>
        <a>StopMatchmaking</a> </p> </li> <li> <p> <a>AcceptMatch</a> </p> </li>
        <li> <p> <a>StartMatchBackfill</a> </p> </li> </ul>"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AcceptMatchOutput"
        "480":
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRequestException"
        "481":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "482":
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServiceException"
        "483":
          description: UnsupportedRegionException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnsupportedRegionException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - GameLift.AcceptMatch
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AcceptMatchInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=GameLift.CreateAlias:
    post:
      operationId: CreateAlias
      description: "<p>Creates an alias for a fleet. In most situations, you can use an
        alias ID in place of a fleet ID. By using a fleet alias instead of a
        specific fleet ID, you can switch gameplay and players to a new fleet
        without changing your game client or other game components. For example,
        for games in production, using an alias allows you to seamlessly
        redirect your player base to a new game server update. </p> <p>Amazon
        GameLift supports two types of routing strategies for aliases: simple
        and terminal. A simple alias points to an active fleet. A terminal alias
        is used to display messaging or link to a URL instead of routing players
        to an active fleet. For example, you might use a terminal alias when a
        game version is no longer supported and you want to direct players to an
        upgrade site. </p> <p>To create a fleet alias, specify an alias name,
        routing strategy, and optional description. Each simple alias can point
        to only one fleet, but a fleet can have multiple aliases. If successful,
        a new alias record is returned, including an alias ID, which you can
        reference when creating a game session. You can reassign an alias to
        another fleet by calling <code>UpdateAlias</code>.</p> <ul> <li> <p>
        <a>CreateAlias</a> </p> </li> <li> <p> <a>ListAliases</a> </p> </li>
        <li> <p> <a>DescribeAlias</a> </p> </li> <li> <p> <a>UpdateAlias</a>
        </p> </li> <li> <p> <a>DeleteAlias</a> </p> </li> <li> <p>
        <a>ResolveAlias</a> </p> </li> </ul>"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateAliasOutput"
        "480":
          description: UnauthorizedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthorizedException"
        "481":
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRequestException"
        "482":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "483":
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServiceException"
        "484":
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - GameLift.CreateAlias
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateAliasInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=GameLift.CreateBuild:
    post:
      operationId: CreateBuild
      description: <p>Creates a new Amazon GameLift build record for your game server
        binary files and points to the location of your game server build files
        in an Amazon Simple Storage Service (Amazon S3) location. </p> <p>Game
        server binaries must be combined into a <code>.zip</code> file for use
        with Amazon GameLift. </p> <important> <p>To create new builds quickly
        and easily, use the AWS CLI command <b> <a
        href="https://docs.aws.amazon.com/cli/latest/reference/gamelift/upload-build.html">upload-build</a>
        </b>. This helper command uploads your build and creates a new build
        record in one step, and automatically handles the necessary permissions.
        </p> </important> <p>The <code>CreateBuild</code> operation should be
        used only when you need to manually upload your build files, as in the
        following scenarios:</p> <ul> <li> <p>Store a build file in an Amazon S3
        bucket under your own AWS account. To use this option, you must first
        give Amazon GameLift access to that Amazon S3 bucket. To create a new
        build record using files in your Amazon S3 bucket, call
        <code>CreateBuild</code> and specify a build name, operating system, and
        the storage location of your game build.</p> </li> <li> <p>Upload a
        build file directly to Amazon GameLift's Amazon S3 account. To use this
        option, you first call <code>CreateBuild</code> with a build name and
        operating system. This action creates a new build record and returns an
        Amazon S3 storage location (bucket and key only) and temporary access
        credentials. Use the credentials to manually upload your build file to
        the storage location (see the Amazon S3 topic <a
        href="https://docs.aws.amazon.com/AmazonS3/latest/dev/UploadingObjects.html">Uploading
        Objects</a>). You can upload files to a location only once. </p> </li>
        </ul> <p>If successful, this operation creates a new build record with a
        unique build ID and places it in <code>INITIALIZED</code> status. You
        can use <a>DescribeBuild</a> to check the status of your build. A build
        must be in <code>READY</code> status before it can be used to create
        fleets.</p> <p> <b>Learn more</b> </p> <p> <a
        href="https://docs.aws.amazon.com/gamelift/latest/developerguide/gamelift-build-intro.html">Uploading
        Your Game</a> </p> <p> <a
        href="https://docs.aws.amazon.com/gamelift/latest/developerguide/gamelift-build-cli-uploading.html#gamelift-build-cli-uploading-create-build">
        Create a Build with Files in Amazon S3</a> </p> <p> <b>Related
        operations</b> </p> <ul> <li> <p> <a>CreateBuild</a> </p> </li> <li> <p>
        <a>ListBuilds</a> </p> </li> <li> <p> <a>DescribeBuild</a> </p> </li>
        <li> <p> <a>UpdateBuild</a> </p> </li> <li> <p> <a>DeleteBuild</a> </p>
        </li> </ul>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateBuildOutput"
        "480":
          description: UnauthorizedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthorizedException"
        "481":
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRequestException"
        "482":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "483":
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServiceException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - GameLift.CreateBuild
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateBuildInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=GameLift.CreateFleet:
    post:
      operationId: CreateFleet
      description: "<p>Creates a new fleet to run your game servers. whether they are
        custom game builds or Realtime Servers with game-specific script. A
        fleet is a set of Amazon Elastic Compute Cloud (Amazon EC2) instances,
        each of which can host multiple game sessions. When creating a fleet,
        you choose the hardware specifications, set some configuration options,
        and specify the game server to deploy on the new fleet. </p> <p>To
        create a new fleet, you must provide the following: (1) a fleet name,
        (2) an EC2 instance type and fleet type (spot or on-demand), (3) the
        build ID for your game build or script ID if using Realtime Servers, and
        (4) a run-time configuration, which determines how game servers will run
        on each instance in the fleet. </p> <note> <p>When creating a Realtime
        Servers fleet, we recommend using a minimal version of the Realtime
        script (see this <a
        href=\"https://docs.aws.amazon.com/gamelift/latest/developerguide/realt\
        ime-script.html#realtime-script-examples\"> working code example </a>).
        This will make it much easier to troubleshoot any fleet creation issues.
        Once the fleet is active, you can update your Realtime script as
        needed.</p> </note> <p>If the <code>CreateFleet</code> call is
        successful, Amazon GameLift performs the following tasks. You can track
        the process of a fleet by checking the fleet status or by monitoring
        fleet creation events:</p> <ul> <li> <p>Creates a fleet record. Status:
        <code>NEW</code>.</p> </li> <li> <p>Begins writing events to the fleet
        event log, which can be accessed in the Amazon GameLift console.</p>
        <p>Sets the fleet's target capacity to 1 (desired instances), which
        triggers Amazon GameLift to start one new EC2 instance.</p> </li> <li>
        <p>Downloads the game build or Realtime script to the new instance and
        installs it. Statuses: <code>DOWNLOADING</code>,
        <code>VALIDATING</code>, <code>BUILDING</code>. </p> </li> <li>
        <p>Starts launching server processes on the instance. If the fleet is
        configured to run multiple server processes per instance, Amazon
        GameLift staggers each launch by a few seconds. Status:
        <code>ACTIVATING</code>.</p> </li> <li> <p>Sets the fleet's status to
        <code>ACTIVE</code> as soon as one server process is ready to host a
        game session.</p> </li> </ul> <p> <b>Learn more</b> </p> <p> <a
        href=\"https://docs.aws.amazon.com/gamelift/latest/developerguide/fleet\
        s-intro.html\"> Working with Fleets</a> </p> <p> <a
        href=\"https://docs.aws.amazon.com/gamelift/latest/developerguide/fleet\
        s-creating-debug.html\"> Debug Fleet Creation Issues</a> </p> <p>
        <b>Related operations</b> </p> <ul> <li> <p> <a>CreateFleet</a> </p>
        </li> <li> <p> <a>ListFleets</a> </p> </li> <li> <p> <a>DeleteFleet</a>
        </p> </li> <li> <p>Describe fleets:</p> <ul> <li> <p>
        <a>DescribeFleetAttributes</a> </p> </li> <li> <p>
        <a>DescribeFleetCapacity</a> </p> </li> <li> <p>
        <a>DescribeFleetPortSettings</a> </p> </li> <li> <p>
        <a>DescribeFleetUtilization</a> </p> </li> <li> <p>
        <a>DescribeRuntimeConfiguration</a> </p> </li> <li> <p>
        <a>DescribeEC2InstanceLimits</a> </p> </li> <li> <p>
        <a>DescribeFleetEvents</a> </p> </li> </ul> </li> <li> <p>Update
        fleets:</p> <ul> <li> <p> <a>UpdateFleetAttributes</a> </p> </li> <li>
        <p> <a>UpdateFleetCapacity</a> </p> </li> <li> <p>
        <a>UpdateFleetPortSettings</a> </p> </li> <li> <p>
        <a>UpdateRuntimeConfiguration</a> </p> </li> </ul> </li> <li> <p>Manage
        fleet actions:</p> <ul> <li> <p> <a>StartFleetActions</a> </p> </li>
        <li> <p> <a>StopFleetActions</a> </p> </li> </ul> </li> </ul>"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateFleetOutput"
        "480":
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServiceException"
        "481":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "482":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "483":
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
        "484":
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRequestException"
        "485":
          description: UnauthorizedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthorizedException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - GameLift.CreateFleet
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateFleetInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=GameLift.CreateGameSession:
    post:
      operationId: CreateGameSession
      description: <p>Creates a multiplayer game session for players. This action creates a
        game session record and assigns an available server process in the
        specified fleet to host the game session. A fleet must have an
        <code>ACTIVE</code> status before a game session can be created in
        it.</p> <p>To create a game session, specify either fleet ID or alias ID
        and indicate a maximum number of players to allow in the game session.
        You can also provide a name and game-specific properties for this game
        session. If successful, a <a>GameSession</a> object is returned
        containing the game session properties and other settings you
        specified.</p> <p> <b>Idempotency tokens.</b> You can add a token that
        uniquely identifies game session requests. This is useful for ensuring
        that game session requests are idempotent. Multiple requests with the
        same idempotency token are processed only once; subsequent requests
        return the original result. All response values are the same with the
        exception of game session status, which may change.</p> <p> <b>Resource
        creation limits.</b> If you are creating a game session on a fleet with
        a resource creation limit policy in force, then you must specify a
        creator ID. Without this ID, Amazon GameLift has no way to evaluate the
        policy for this new game session request.</p> <p> <b>Player acceptance
        policy.</b> By default, newly created game sessions are open to new
        players. You can restrict new player access by using
        <a>UpdateGameSession</a> to change the game session's player session
        creation policy.</p> <p> <b>Game session logs.</b> Logs are retained for
        all active game sessions for 14 days. To access the logs, call
        <a>GetGameSessionLogUrl</a> to download the log files.</p> <p>
        <i>Available in Amazon GameLift Local.</i> </p> <ul> <li> <p>
        <a>CreateGameSession</a> </p> </li> <li> <p> <a>DescribeGameSessions</a>
        </p> </li> <li> <p> <a>DescribeGameSessionDetails</a> </p> </li> <li>
        <p> <a>SearchGameSessions</a> </p> </li> <li> <p>
        <a>UpdateGameSession</a> </p> </li> <li> <p> <a>GetGameSessionLogUrl</a>
        </p> </li> <li> <p>Game session placements</p> <ul> <li> <p>
        <a>StartGameSessionPlacement</a> </p> </li> <li> <p>
        <a>DescribeGameSessionPlacement</a> </p> </li> <li> <p>
        <a>StopGameSessionPlacement</a> </p> </li> </ul> </li> </ul>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateGameSessionOutput"
        "480":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "481":
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServiceException"
        "482":
          description: UnauthorizedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthorizedException"
        "483":
          description: InvalidFleetStatusException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidFleetStatusException"
        "484":
          description: TerminalRoutingStrategyException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TerminalRoutingStrategyException"
        "485":
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRequestException"
        "486":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "487":
          description: FleetCapacityExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FleetCapacityExceededException"
        "488":
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
        "489":
          description: IdempotentParameterMismatchException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/IdempotentParameterMismatchException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - GameLift.CreateGameSession
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateGameSessionInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=GameLift.CreateGameSessionQueue:
    post:
      operationId: CreateGameSessionQueue
      description: <p>Establishes a new queue for processing requests to place new game
        sessions. A queue identifies where new game sessions can be hosted -- by
        specifying a list of destinations (fleets or aliases) -- and how long
        requests can wait in the queue before timing out. You can set up a queue
        to try to place game sessions on fleets in multiple regions. To add
        placement requests to a queue, call <a>StartGameSessionPlacement</a> and
        reference the queue name.</p> <p> <b>Destination order.</b> When
        processing a request for a game session, Amazon GameLift tries each
        destination in order until it finds one with available resources to host
        the new game session. A queue's default order is determined by how
        destinations are listed. The default order is overridden when a game
        session placement request provides player latency information. Player
        latency information enables Amazon GameLift to prioritize destinations
        where players report the lowest average latency, as a result placing the
        new game session where the majority of players will have the best
        possible gameplay experience.</p> <p> <b>Player latency policies.</b>
        For placement requests containing player latency information, use player
        latency policies to protect individual players from very high latencies.
        With a latency cap, even when a destination can deliver a low latency
        for most players, the game is not placed where any individual player is
        reporting latency higher than a policy's maximum. A queue can have
        multiple latency policies, which are enforced consecutively starting
        with the policy with the lowest latency cap. Use multiple policies to
        gradually relax latency controls; for example, you might set a policy
        with a low latency cap for the first 60 seconds, a second policy with a
        higher cap for the next 60 seconds, etc. </p> <p>To create a new queue,
        provide a name, timeout value, a list of destinations and, if desired, a
        set of latency policies. If successful, a new queue object is
        returned.</p> <ul> <li> <p> <a>CreateGameSessionQueue</a> </p> </li>
        <li> <p> <a>DescribeGameSessionQueues</a> </p> </li> <li> <p>
        <a>UpdateGameSessionQueue</a> </p> </li> <li> <p>
        <a>DeleteGameSessionQueue</a> </p> </li> </ul>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateGameSessionQueueOutput"
        "480":
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServiceException"
        "481":
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRequestException"
        "482":
          description: UnauthorizedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthorizedException"
        "483":
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - GameLift.CreateGameSessionQueue
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateGameSessionQueueInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=GameLift.CreateMatchmakingConfiguration:
    post:
      operationId: CreateMatchmakingConfiguration
      description: '<p>Defines a new matchmaking configuration for use with FlexMatch. A
        matchmaking configuration sets out guidelines for matching players and
        getting the matches into games. You can set up multiple matchmaking
        configurations to handle the scenarios needed for your game. Each
        matchmaking ticket (<a>StartMatchmaking</a> or
        <a>StartMatchBackfill</a>) specifies a configuration for the match and
        provides player attributes to support the configuration being used. </p>
        <p>To create a matchmaking configuration, at a minimum you must specify
        the following: configuration name; a rule set that governs how to
        evaluate players and find acceptable matches; a game session queue to
        use when placing a new game session for the match; and the maximum time
        allowed for a matchmaking attempt.</p> <p>There are two ways to track
        the progress of matchmaking tickets: (1) polling ticket status with
        <a>DescribeMatchmaking</a>; or (2) receiving notifications with Amazon
        Simple Notification Service (SNS). To use notifications, you first need
        to set up an SNS topic to receive the notifications, and provide the
        topic ARN in the matchmaking configuration. Since notifications promise
        only "best effort" delivery, we recommend calling
        <code>DescribeMatchmaking</code> if no notifications are received within
        30 seconds.</p> <p> <b>Learn more</b> </p> <p> <a
        href="https://docs.aws.amazon.com/gamelift/latest/developerguide/match-configuration.html">
        Design a FlexMatch Matchmaker</a> </p> <p> <a
        href="https://docs.aws.amazon.com/gamelift/latest/developerguide/match-notification.html">
        Setting up Notifications for Matchmaking</a> </p> <p> <b>Related
        operations</b> </p> <ul> <li> <p> <a>CreateMatchmakingConfiguration</a>
        </p> </li> <li> <p> <a>DescribeMatchmakingConfigurations</a> </p> </li>
        <li> <p> <a>UpdateMatchmakingConfiguration</a> </p> </li> <li> <p>
        <a>DeleteMatchmakingConfiguration</a> </p> </li> <li> <p>
        <a>CreateMatchmakingRuleSet</a> </p> </li> <li> <p>
        <a>DescribeMatchmakingRuleSets</a> </p> </li> <li> <p>
        <a>ValidateMatchmakingRuleSet</a> </p> </li> <li> <p>
        <a>DeleteMatchmakingRuleSet</a> </p> </li> </ul>'
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateMatchmakingConfigurationOutput"
        "480":
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRequestException"
        "481":
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
        "482":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "483":
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServiceException"
        "484":
          description: UnsupportedRegionException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnsupportedRegionException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - GameLift.CreateMatchmakingConfiguration
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateMatchmakingConfigurationInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=GameLift.CreateMatchmakingRuleSet:
    post:
      operationId: CreateMatchmakingRuleSet
      description: <p>Creates a new rule set for FlexMatch matchmaking. A rule set
        describes the type of match to create, such as the number and size of
        teams, and sets the parameters for acceptable player matches, such as
        minimum skill level or character type. A rule set is used by a
        <a>MatchmakingConfiguration</a>. </p> <p>To create a matchmaking rule
        set, provide unique rule set name and the rule set body in JSON format.
        Rule sets must be defined in the same region as the matchmaking
        configuration they are used with.</p> <p>Since matchmaking rule sets
        cannot be edited, it is a good idea to check the rule set syntax using
        <a>ValidateMatchmakingRuleSet</a> before creating a new rule set.</p>
        <p> <b>Learn more</b> </p> <ul> <li> <p> <a
        href="https://docs.aws.amazon.com/gamelift/latest/developerguide/match-rulesets.html">Build
        a Rule Set</a> </p> </li> <li> <p> <a
        href="https://docs.aws.amazon.com/gamelift/latest/developerguide/match-configuration.html">Design
        a Matchmaker</a> </p> </li> <li> <p> <a
        href="https://docs.aws.amazon.com/gamelift/latest/developerguide/match-intro.html">Matchmaking
        with FlexMatch</a> </p> </li> </ul> <p> <b>Related operations</b> </p>
        <ul> <li> <p> <a>CreateMatchmakingConfiguration</a> </p> </li> <li> <p>
        <a>DescribeMatchmakingConfigurations</a> </p> </li> <li> <p>
        <a>UpdateMatchmakingConfiguration</a> </p> </li> <li> <p>
        <a>DeleteMatchmakingConfiguration</a> </p> </li> <li> <p>
        <a>CreateMatchmakingRuleSet</a> </p> </li> <li> <p>
        <a>DescribeMatchmakingRuleSets</a> </p> </li> <li> <p>
        <a>ValidateMatchmakingRuleSet</a> </p> </li> <li> <p>
        <a>DeleteMatchmakingRuleSet</a> </p> </li> </ul>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateMatchmakingRuleSetOutput"
        "480":
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRequestException"
        "481":
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServiceException"
        "482":
          description: UnsupportedRegionException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnsupportedRegionException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - GameLift.CreateMatchmakingRuleSet
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateMatchmakingRuleSetInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=GameLift.CreatePlayerSession:
    post:
      operationId: CreatePlayerSession
      description: <p>Reserves an open player slot in an active game session. Before a
        player can be added, a game session must have an <code>ACTIVE</code>
        status, have a creation policy of <code>ALLOW_ALL</code>, and have an
        open player slot. To add a group of players to a game session, use
        <a>CreatePlayerSessions</a>. When the player connects to the game server
        and references a player session ID, the game server contacts the Amazon
        GameLift service to validate the player reservation and accept the
        player.</p> <p>To create a player session, specify a game session ID,
        player ID, and optionally a string of player data. If successful, a slot
        is reserved in the game session for the player and a new
        <a>PlayerSession</a> object is returned. Player sessions cannot be
        updated. </p> <p> <i>Available in Amazon GameLift Local.</i> </p> <ul>
        <li> <p> <a>CreatePlayerSession</a> </p> </li> <li> <p>
        <a>CreatePlayerSessions</a> </p> </li> <li> <p>
        <a>DescribePlayerSessions</a> </p> </li> <li> <p>Game session
        placements</p> <ul> <li> <p> <a>StartGameSessionPlacement</a> </p> </li>
        <li> <p> <a>DescribeGameSessionPlacement</a> </p> </li> <li> <p>
        <a>StopGameSessionPlacement</a> </p> </li> </ul> </li> </ul>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreatePlayerSessionOutput"
        "480":
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServiceException"
        "481":
          description: UnauthorizedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthorizedException"
        "482":
          description: InvalidGameSessionStatusException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidGameSessionStatusException"
        "483":
          description: GameSessionFullException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GameSessionFullException"
        "484":
          description: TerminalRoutingStrategyException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TerminalRoutingStrategyException"
        "485":
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRequestException"
        "486":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - GameLift.CreatePlayerSession
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreatePlayerSessionInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=GameLift.CreatePlayerSessions:
    post:
      operationId: CreatePlayerSessions
      description: <p>Reserves open slots in a game session for a group of players. Before
        players can be added, a game session must have an <code>ACTIVE</code>
        status, have a creation policy of <code>ALLOW_ALL</code>, and have an
        open player slot. To add a single player to a game session, use
        <a>CreatePlayerSession</a>. When a player connects to the game server
        and references a player session ID, the game server contacts the Amazon
        GameLift service to validate the player reservation and accept the
        player.</p> <p>To create player sessions, specify a game session ID, a
        list of player IDs, and optionally a set of player data strings. If
        successful, a slot is reserved in the game session for each player and a
        set of new <a>PlayerSession</a> objects is returned. Player sessions
        cannot be updated.</p> <p> <i>Available in Amazon GameLift Local.</i>
        </p> <ul> <li> <p> <a>CreatePlayerSession</a> </p> </li> <li> <p>
        <a>CreatePlayerSessions</a> </p> </li> <li> <p>
        <a>DescribePlayerSessions</a> </p> </li> <li> <p>Game session
        placements</p> <ul> <li> <p> <a>StartGameSessionPlacement</a> </p> </li>
        <li> <p> <a>DescribeGameSessionPlacement</a> </p> </li> <li> <p>
        <a>StopGameSessionPlacement</a> </p> </li> </ul> </li> </ul>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreatePlayerSessionsOutput"
        "480":
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServiceException"
        "481":
          description: UnauthorizedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthorizedException"
        "482":
          description: InvalidGameSessionStatusException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidGameSessionStatusException"
        "483":
          description: GameSessionFullException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GameSessionFullException"
        "484":
          description: TerminalRoutingStrategyException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TerminalRoutingStrategyException"
        "485":
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRequestException"
        "486":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - GameLift.CreatePlayerSessions
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreatePlayerSessionsInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=GameLift.CreateScript:
    post:
      operationId: CreateScript
      description: "<p>Creates a new script record for your Realtime Servers script.
        Realtime scripts are JavaScript that provide configuration settings and
        optional custom game logic for your game. The script is deployed when
        you create a Realtime Servers fleet to host your game sessions. Script
        logic is executed during an active game session. </p> <p>To create a new
        script record, specify a script name and provide the script file(s). The
        script files and all dependencies must be zipped into a single file. You
        can pull the zip file from either of these locations: </p> <ul> <li>
        <p>A locally available directory. Use the <i>ZipFile</i> parameter for
        this option.</p> </li> <li> <p>An Amazon Simple Storage Service (Amazon
        S3) bucket under your AWS account. Use the <i>StorageLocation</i>
        parameter for this option. You'll need to have an Identity Access
        Management (IAM) role that allows the Amazon GameLift service to access
        your S3 bucket. </p> </li> </ul> <p>If the call is successful, a new
        script record is created with a unique script ID. If the script file is
        provided as a local file, the file is uploaded to an Amazon
        GameLift-owned S3 bucket and the script record's storage location
        reflects this location. If the script file is provided as an S3 bucket,
        Amazon GameLift accesses the file at this storage location as needed for
        deployment.</p> <p> <b>Learn more</b> </p> <p> <a
        href=\"https://docs.aws.amazon.com/gamelift/latest/developerguide/realt\
        ime-intro.html\">Amazon GameLift Realtime Servers</a> </p> <p> <a
        href=\"https://docs.aws.amazon.com/gamelift/latest/developerguide/setti\
        ng-up-role.html\">Set Up a Role for Amazon GameLift Access</a> </p> <p>
        <b>Related operations</b> </p> <ul> <li> <p> <a>CreateScript</a> </p>
        </li> <li> <p> <a>ListScripts</a> </p> </li> <li> <p>
        <a>DescribeScript</a> </p> </li> <li> <p> <a>UpdateScript</a> </p> </li>
        <li> <p> <a>DeleteScript</a> </p> </li> </ul>"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateScriptOutput"
        "480":
          description: UnauthorizedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthorizedException"
        "481":
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRequestException"
        "482":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "483":
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServiceException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - GameLift.CreateScript
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateScriptInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=GameLift.CreateVpcPeeringAuthorization:
    post:
      operationId: CreateVpcPeeringAuthorization
      description: "<p>Requests authorization to create or delete a peer connection between
        the VPC for your Amazon GameLift fleet and a virtual private cloud (VPC)
        in your AWS account. VPC peering enables the game servers on your fleet
        to communicate directly with other AWS resources. Once you've received
        authorization, call <a>CreateVpcPeeringConnection</a> to establish the
        peering connection. For more information, see <a
        href=\"https://docs.aws.amazon.com/gamelift/latest/developerguide/vpc-p\
        eering.html\">VPC Peering with Amazon GameLift Fleets</a>.</p> <p>You
        can peer with VPCs that are owned by any AWS account you have access to,
        including the account that you use to manage your Amazon GameLift
        fleets. You cannot peer with VPCs that are in different regions.</p>
        <p>To request authorization to create a connection, call this operation
        from the AWS account with the VPC that you want to peer to your Amazon
        GameLift fleet. For example, to enable your game servers to retrieve
        data from a DynamoDB table, use the account that manages that DynamoDB
        resource. Identify the following values: (1) The ID of the VPC that you
        want to peer with, and (2) the ID of the AWS account that you use to
        manage Amazon GameLift. If successful, VPC peering is authorized for the
        specified VPC. </p> <p>To request authorization to delete a connection,
        call this operation from the AWS account with the VPC that is peered
        with your Amazon GameLift fleet. Identify the following values: (1) VPC
        ID that you want to delete the peering connection for, and (2) ID of the
        AWS account that you use to manage Amazon GameLift. </p> <p>The
        authorization remains valid for 24 hours unless it is canceled by a call
        to <a>DeleteVpcPeeringAuthorization</a>. You must create or delete the
        peering connection while the authorization is valid. </p> <ul> <li> <p>
        <a>CreateVpcPeeringAuthorization</a> </p> </li> <li> <p>
        <a>DescribeVpcPeeringAuthorizations</a> </p> </li> <li> <p>
        <a>DeleteVpcPeeringAuthorization</a> </p> </li> <li> <p>
        <a>CreateVpcPeeringConnection</a> </p> </li> <li> <p>
        <a>DescribeVpcPeeringConnections</a> </p> </li> <li> <p>
        <a>DeleteVpcPeeringConnection</a> </p> </li> </ul>"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateVpcPeeringAuthorizationOutput"
        "480":
          description: UnauthorizedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthorizedException"
        "481":
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRequestException"
        "482":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "483":
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServiceException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - GameLift.CreateVpcPeeringAuthorization
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateVpcPeeringAuthorizationInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=GameLift.CreateVpcPeeringConnection:
    post:
      operationId: CreateVpcPeeringConnection
      description: "<p>Establishes a VPC peering connection between a virtual private cloud
        (VPC) in an AWS account with the VPC for your Amazon GameLift fleet. VPC
        peering enables the game servers on your fleet to communicate directly
        with other AWS resources. You can peer with VPCs in any AWS account that
        you have access to, including the account that you use to manage your
        Amazon GameLift fleets. You cannot peer with VPCs that are in different
        regions. For more information, see <a
        href=\"https://docs.aws.amazon.com/gamelift/latest/developerguide/vpc-p\
        eering.html\">VPC Peering with Amazon GameLift Fleets</a>.</p> <p>Before
        calling this operation to establish the peering connection, you first
        need to call <a>CreateVpcPeeringAuthorization</a> and identify the VPC
        you want to peer with. Once the authorization for the specified VPC is
        issued, you have 24 hours to establish the connection. These two
        operations handle all tasks necessary to peer the two VPCs, including
        acceptance, updating routing tables, etc. </p> <p>To establish the
        connection, call this operation from the AWS account that is used to
        manage the Amazon GameLift fleets. Identify the following values: (1)
        The ID of the fleet you want to be enable a VPC peering connection for;
        (2) The AWS account with the VPC that you want to peer with; and (3) The
        ID of the VPC you want to peer with. This operation is asynchronous. If
        successful, a <a>VpcPeeringConnection</a> request is created. You can
        use continuous polling to track the request's status using
        <a>DescribeVpcPeeringConnections</a>, or by monitoring fleet events for
        success or failure using <a>DescribeFleetEvents</a>. </p> <ul> <li> <p>
        <a>CreateVpcPeeringAuthorization</a> </p> </li> <li> <p>
        <a>DescribeVpcPeeringAuthorizations</a> </p> </li> <li> <p>
        <a>DeleteVpcPeeringAuthorization</a> </p> </li> <li> <p>
        <a>CreateVpcPeeringConnection</a> </p> </li> <li> <p>
        <a>DescribeVpcPeeringConnections</a> </p> </li> <li> <p>
        <a>DeleteVpcPeeringConnection</a> </p> </li> </ul>"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateVpcPeeringConnectionOutput"
        "480":
          description: UnauthorizedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthorizedException"
        "481":
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRequestException"
        "482":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "483":
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServiceException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - GameLift.CreateVpcPeeringConnection
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateVpcPeeringConnectionInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=GameLift.DeleteAlias:
    post:
      operationId: DeleteAlias
      description: <p>Deletes an alias. This action removes all record of the alias. Game
        clients attempting to access a server process using the deleted alias
        receive an error. To delete an alias, specify the alias ID to be
        deleted.</p> <ul> <li> <p> <a>CreateAlias</a> </p> </li> <li> <p>
        <a>ListAliases</a> </p> </li> <li> <p> <a>DescribeAlias</a> </p> </li>
        <li> <p> <a>UpdateAlias</a> </p> </li> <li> <p> <a>DeleteAlias</a> </p>
        </li> <li> <p> <a>ResolveAlias</a> </p> </li> </ul>
      responses:
        "200":
          description: Success
        "480":
          description: UnauthorizedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthorizedException"
        "481":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "482":
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRequestException"
        "483":
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServiceException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - GameLift.DeleteAlias
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeleteAliasInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=GameLift.DeleteBuild:
    post:
      operationId: DeleteBuild
      description: <p>Deletes a build. This action permanently deletes the build record and
        any uploaded build files.</p> <p>To delete a build, specify its ID.
        Deleting a build does not affect the status of any active fleets using
        the build, but you can no longer create new fleets with the deleted
        build.</p> <p> <b>Learn more</b> </p> <p> <a
        href="https://docs.aws.amazon.com/gamelift/latest/developerguide/build-intro.html">
        Working with Builds</a> </p> <p> <b>Related operations</b> </p> <ul>
        <li> <p> <a>CreateBuild</a> </p> </li> <li> <p> <a>ListBuilds</a> </p>
        </li> <li> <p> <a>DescribeBuild</a> </p> </li> <li> <p>
        <a>UpdateBuild</a> </p> </li> <li> <p> <a>DeleteBuild</a> </p> </li>
        </ul>
      responses:
        "200":
          description: Success
        "480":
          description: UnauthorizedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthorizedException"
        "481":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "482":
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServiceException"
        "483":
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRequestException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - GameLift.DeleteBuild
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeleteBuildInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=GameLift.DeleteFleet:
    post:
      operationId: DeleteFleet
      description: <p>Deletes everything related to a fleet. Before deleting a fleet, you
        must set the fleet's desired capacity to zero. See
        <a>UpdateFleetCapacity</a>.</p> <p>If the fleet being deleted has a VPC
        peering connection, you first need to get a valid authorization (good
        for 24 hours) by calling <a>CreateVpcPeeringAuthorization</a>. You do
        not need to explicitly delete the VPC peering connection--this is done
        as part of the delete fleet process.</p> <p>This action removes the
        fleet's resources and the fleet record. Once a fleet is deleted, you can
        no longer use that fleet.</p> <p> <b>Learn more</b> </p> <p> <a
        href="https://docs.aws.amazon.com/gamelift/latest/developerguide/fleets-intro.html">
        Working with Fleets</a>.</p> <p> <b>Related operations</b> </p> <ul>
        <li> <p> <a>CreateFleet</a> </p> </li> <li> <p> <a>ListFleets</a> </p>
        </li> <li> <p> <a>DeleteFleet</a> </p> </li> <li> <p>Describe
        fleets:</p> <ul> <li> <p> <a>DescribeFleetAttributes</a> </p> </li> <li>
        <p> <a>DescribeFleetCapacity</a> </p> </li> <li> <p>
        <a>DescribeFleetPortSettings</a> </p> </li> <li> <p>
        <a>DescribeFleetUtilization</a> </p> </li> <li> <p>
        <a>DescribeRuntimeConfiguration</a> </p> </li> <li> <p>
        <a>DescribeEC2InstanceLimits</a> </p> </li> <li> <p>
        <a>DescribeFleetEvents</a> </p> </li> </ul> </li> <li> <p>Update
        fleets:</p> <ul> <li> <p> <a>UpdateFleetAttributes</a> </p> </li> <li>
        <p> <a>UpdateFleetCapacity</a> </p> </li> <li> <p>
        <a>UpdateFleetPortSettings</a> </p> </li> <li> <p>
        <a>UpdateRuntimeConfiguration</a> </p> </li> </ul> </li> <li> <p>Manage
        fleet actions:</p> <ul> <li> <p> <a>StartFleetActions</a> </p> </li>
        <li> <p> <a>StopFleetActions</a> </p> </li> </ul> </li> </ul>
      responses:
        "200":
          description: Success
        "480":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "481":
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServiceException"
        "482":
          description: InvalidFleetStatusException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidFleetStatusException"
        "483":
          description: UnauthorizedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthorizedException"
        "484":
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRequestException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - GameLift.DeleteFleet
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeleteFleetInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=GameLift.DeleteGameSessionQueue:
    post:
      operationId: DeleteGameSessionQueue
      description: <p>Deletes a game session queue. This action means that any
        <a>StartGameSessionPlacement</a> requests that reference this queue will
        fail. To delete a queue, specify the queue name.</p> <ul> <li> <p>
        <a>CreateGameSessionQueue</a> </p> </li> <li> <p>
        <a>DescribeGameSessionQueues</a> </p> </li> <li> <p>
        <a>UpdateGameSessionQueue</a> </p> </li> <li> <p>
        <a>DeleteGameSessionQueue</a> </p> </li> </ul>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteGameSessionQueueOutput"
        "480":
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServiceException"
        "481":
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRequestException"
        "482":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "483":
          description: UnauthorizedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthorizedException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - GameLift.DeleteGameSessionQueue
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeleteGameSessionQueueInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=GameLift.DeleteMatchmakingConfiguration:
    post:
      operationId: DeleteMatchmakingConfiguration
      description: <p>Permanently removes a FlexMatch matchmaking configuration. To delete,
        specify the configuration name. A matchmaking configuration cannot be
        deleted if it is being used in any active matchmaking tickets.</p> <p>
        <b>Related operations</b> </p> <ul> <li> <p>
        <a>CreateMatchmakingConfiguration</a> </p> </li> <li> <p>
        <a>DescribeMatchmakingConfigurations</a> </p> </li> <li> <p>
        <a>UpdateMatchmakingConfiguration</a> </p> </li> <li> <p>
        <a>DeleteMatchmakingConfiguration</a> </p> </li> <li> <p>
        <a>CreateMatchmakingRuleSet</a> </p> </li> <li> <p>
        <a>DescribeMatchmakingRuleSets</a> </p> </li> <li> <p>
        <a>ValidateMatchmakingRuleSet</a> </p> </li> <li> <p>
        <a>DeleteMatchmakingRuleSet</a> </p> </li> </ul>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteMatchmakingConfigurationOutput"
        "480":
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRequestException"
        "481":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "482":
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServiceException"
        "483":
          description: UnsupportedRegionException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnsupportedRegionException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - GameLift.DeleteMatchmakingConfiguration
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeleteMatchmakingConfigurationInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=GameLift.DeleteMatchmakingRuleSet:
    post:
      operationId: DeleteMatchmakingRuleSet
      description: <p>Deletes an existing matchmaking rule set. To delete the rule set,
        provide the rule set name. Rule sets cannot be deleted if they are
        currently being used by a matchmaking configuration. </p> <p> <b>Learn
        more</b> </p> <ul> <li> <p> <a
        href="https://docs.aws.amazon.com/gamelift/latest/developerguide/match-rulesets.html">Build
        a Rule Set</a> </p> </li> </ul> <p> <b>Related operations</b> </p> <ul>
        <li> <p> <a>CreateMatchmakingConfiguration</a> </p> </li> <li> <p>
        <a>DescribeMatchmakingConfigurations</a> </p> </li> <li> <p>
        <a>UpdateMatchmakingConfiguration</a> </p> </li> <li> <p>
        <a>DeleteMatchmakingConfiguration</a> </p> </li> <li> <p>
        <a>CreateMatchmakingRuleSet</a> </p> </li> <li> <p>
        <a>DescribeMatchmakingRuleSets</a> </p> </li> <li> <p>
        <a>ValidateMatchmakingRuleSet</a> </p> </li> <li> <p>
        <a>DeleteMatchmakingRuleSet</a> </p> </li> </ul>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteMatchmakingRuleSetOutput"
        "480":
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRequestException"
        "481":
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServiceException"
        "482":
          description: UnsupportedRegionException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnsupportedRegionException"
        "483":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - GameLift.DeleteMatchmakingRuleSet
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeleteMatchmakingRuleSetInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=GameLift.DeleteScalingPolicy:
    post:
      operationId: DeleteScalingPolicy
      description: <p>Deletes a fleet scaling policy. This action means that the policy is
        no longer in force and removes all record of it. To delete a scaling
        policy, specify both the scaling policy name and the fleet ID it is
        associated with.</p> <p>To temporarily suspend scaling policies, call
        <a>StopFleetActions</a>. This operation suspends all policies for the
        fleet.</p> <ul> <li> <p> <a>DescribeFleetCapacity</a> </p> </li> <li>
        <p> <a>UpdateFleetCapacity</a> </p> </li> <li> <p>
        <a>DescribeEC2InstanceLimits</a> </p> </li> <li> <p>Manage scaling
        policies:</p> <ul> <li> <p> <a>PutScalingPolicy</a> (auto-scaling)</p>
        </li> <li> <p> <a>DescribeScalingPolicies</a> (auto-scaling)</p> </li>
        <li> <p> <a>DeleteScalingPolicy</a> (auto-scaling)</p> </li> </ul> </li>
        <li> <p>Manage fleet actions:</p> <ul> <li> <p> <a>StartFleetActions</a>
        </p> </li> <li> <p> <a>StopFleetActions</a> </p> </li> </ul> </li> </ul>
      responses:
        "200":
          description: Success
        "480":
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServiceException"
        "481":
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRequestException"
        "482":
          description: UnauthorizedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthorizedException"
        "483":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - GameLift.DeleteScalingPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeleteScalingPolicyInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=GameLift.DeleteScript:
    post:
      operationId: DeleteScript
      description: <p>Deletes a Realtime script. This action permanently deletes the script
        record. If script files were uploaded, they are also deleted (files
        stored in an S3 bucket are not deleted). </p> <p>To delete a script,
        specify the script ID. Before deleting a script, be sure to terminate
        all fleets that are deployed with the script being deleted. Fleet
        instances periodically check for script updates, and if the script
        record no longer exists, the instance will go into an error state and be
        unable to host game sessions.</p> <p> <b>Learn more</b> </p> <p> <a
        href="https://docs.aws.amazon.com/gamelift/latest/developerguide/realtime-intro.html">Amazon
        GameLift Realtime Servers</a> </p> <p> <b>Related operations</b> </p>
        <ul> <li> <p> <a>CreateScript</a> </p> </li> <li> <p> <a>ListScripts</a>
        </p> </li> <li> <p> <a>DescribeScript</a> </p> </li> <li> <p>
        <a>UpdateScript</a> </p> </li> <li> <p> <a>DeleteScript</a> </p> </li>
        </ul>
      responses:
        "200":
          description: Success
        "480":
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRequestException"
        "481":
          description: UnauthorizedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthorizedException"
        "482":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "483":
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServiceException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - GameLift.DeleteScript
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeleteScriptInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=GameLift.DeleteVpcPeeringAuthorization:
    post:
      operationId: DeleteVpcPeeringAuthorization
      description: <p>Cancels a pending VPC peering authorization for the specified VPC. If
        you need to delete an existing VPC peering connection, call
        <a>DeleteVpcPeeringConnection</a>. </p> <ul> <li> <p>
        <a>CreateVpcPeeringAuthorization</a> </p> </li> <li> <p>
        <a>DescribeVpcPeeringAuthorizations</a> </p> </li> <li> <p>
        <a>DeleteVpcPeeringAuthorization</a> </p> </li> <li> <p>
        <a>CreateVpcPeeringConnection</a> </p> </li> <li> <p>
        <a>DescribeVpcPeeringConnections</a> </p> </li> <li> <p>
        <a>DeleteVpcPeeringConnection</a> </p> </li> </ul>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteVpcPeeringAuthorizationOutput"
        "480":
          description: UnauthorizedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthorizedException"
        "481":
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRequestException"
        "482":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "483":
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServiceException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - GameLift.DeleteVpcPeeringAuthorization
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeleteVpcPeeringAuthorizationInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=GameLift.DeleteVpcPeeringConnection:
    post:
      operationId: DeleteVpcPeeringConnection
      description: <p>Removes a VPC peering connection. To delete the connection, you must
        have a valid authorization for the VPC peering connection that you want
        to delete. You can check for an authorization by calling
        <a>DescribeVpcPeeringAuthorizations</a> or request a new one using
        <a>CreateVpcPeeringAuthorization</a>. </p> <p>Once a valid authorization
        exists, call this operation from the AWS account that is used to manage
        the Amazon GameLift fleets. Identify the connection to delete by the
        connection ID and fleet ID. If successful, the connection is removed.
        </p> <ul> <li> <p> <a>CreateVpcPeeringAuthorization</a> </p> </li> <li>
        <p> <a>DescribeVpcPeeringAuthorizations</a> </p> </li> <li> <p>
        <a>DeleteVpcPeeringAuthorization</a> </p> </li> <li> <p>
        <a>CreateVpcPeeringConnection</a> </p> </li> <li> <p>
        <a>DescribeVpcPeeringConnections</a> </p> </li> <li> <p>
        <a>DeleteVpcPeeringConnection</a> </p> </li> </ul>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteVpcPeeringConnectionOutput"
        "480":
          description: UnauthorizedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthorizedException"
        "481":
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRequestException"
        "482":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "483":
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServiceException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - GameLift.DeleteVpcPeeringConnection
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeleteVpcPeeringConnectionInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=GameLift.DescribeAlias:
    post:
      operationId: DescribeAlias
      description: <p>Retrieves properties for an alias. This operation returns all alias
        metadata and settings. To get an alias's target fleet ID only, use
        <code>ResolveAlias</code>. </p> <p>To get alias properties, specify the
        alias ID. If successful, the requested alias record is returned.</p>
        <ul> <li> <p> <a>CreateAlias</a> </p> </li> <li> <p> <a>ListAliases</a>
        </p> </li> <li> <p> <a>DescribeAlias</a> </p> </li> <li> <p>
        <a>UpdateAlias</a> </p> </li> <li> <p> <a>DeleteAlias</a> </p> </li>
        <li> <p> <a>ResolveAlias</a> </p> </li> </ul>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeAliasOutput"
        "480":
          description: UnauthorizedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthorizedException"
        "481":
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRequestException"
        "482":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "483":
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServiceException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - GameLift.DescribeAlias
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DescribeAliasInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=GameLift.DescribeBuild:
    post:
      operationId: DescribeBuild
      description: <p>Retrieves properties for a build. To request a build record, specify
        a build ID. If successful, an object containing the build properties is
        returned.</p> <p> <b>Learn more</b> </p> <p> <a
        href="https://docs.aws.amazon.com/gamelift/latest/developerguide/build-intro.html">
        Working with Builds</a> </p> <p> <b>Related operations</b> </p> <ul>
        <li> <p> <a>CreateBuild</a> </p> </li> <li> <p> <a>ListBuilds</a> </p>
        </li> <li> <p> <a>DescribeBuild</a> </p> </li> <li> <p>
        <a>UpdateBuild</a> </p> </li> <li> <p> <a>DeleteBuild</a> </p> </li>
        </ul>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeBuildOutput"
        "480":
          description: UnauthorizedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthorizedException"
        "481":
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRequestException"
        "482":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "483":
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServiceException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - GameLift.DescribeBuild
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DescribeBuildInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=GameLift.DescribeEC2InstanceLimits:
    post:
      operationId: DescribeEC2InstanceLimits
      description: <p>Retrieves the following information for the specified EC2 instance
        type:</p> <ul> <li> <p>maximum number of instances allowed per AWS
        account (service limit)</p> </li> <li> <p>current usage level for the
        AWS account</p> </li> </ul> <p>Service limits vary depending on region.
        Available regions for Amazon GameLift can be found in the AWS Management
        Console for Amazon GameLift (see the drop-down list in the upper right
        corner).</p> <p> <b>Learn more</b> </p> <p> <a
        href="https://docs.aws.amazon.com/gamelift/latest/developerguide/fleets-intro.html">
        Working with Fleets</a>.</p> <p> <b>Related operations</b> </p> <ul>
        <li> <p> <a>CreateFleet</a> </p> </li> <li> <p> <a>ListFleets</a> </p>
        </li> <li> <p> <a>DeleteFleet</a> </p> </li> <li> <p>Describe
        fleets:</p> <ul> <li> <p> <a>DescribeFleetAttributes</a> </p> </li> <li>
        <p> <a>DescribeFleetCapacity</a> </p> </li> <li> <p>
        <a>DescribeFleetPortSettings</a> </p> </li> <li> <p>
        <a>DescribeFleetUtilization</a> </p> </li> <li> <p>
        <a>DescribeRuntimeConfiguration</a> </p> </li> <li> <p>
        <a>DescribeEC2InstanceLimits</a> </p> </li> <li> <p>
        <a>DescribeFleetEvents</a> </p> </li> </ul> </li> <li> <p>Update
        fleets:</p> <ul> <li> <p> <a>UpdateFleetAttributes</a> </p> </li> <li>
        <p> <a>UpdateFleetCapacity</a> </p> </li> <li> <p>
        <a>UpdateFleetPortSettings</a> </p> </li> <li> <p>
        <a>UpdateRuntimeConfiguration</a> </p> </li> </ul> </li> <li> <p>Manage
        fleet actions:</p> <ul> <li> <p> <a>StartFleetActions</a> </p> </li>
        <li> <p> <a>StopFleetActions</a> </p> </li> </ul> </li> </ul>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeEC2InstanceLimitsOutput"
        "480":
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRequestException"
        "481":
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServiceException"
        "482":
          description: UnauthorizedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthorizedException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - GameLift.DescribeEC2InstanceLimits
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DescribeEC2InstanceLimitsInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=GameLift.DescribeFleetAttributes:
    post:
      operationId: DescribeFleetAttributes
      description: <p>Retrieves fleet properties, including metadata, status, and
        configuration, for one or more fleets. You can request attributes for
        all fleets, or specify a list of one or more fleet IDs. When requesting
        multiple fleets, use the pagination parameters to retrieve results as a
        set of sequential pages. If successful, a <a>FleetAttributes</a> object
        is returned for each requested fleet ID. When specifying a list of fleet
        IDs, attribute objects are returned only for fleets that currently
        exist. </p> <note> <p>Some API actions may limit the number of fleet IDs
        allowed in one request. If a request exceeds this limit, the request
        fails and the error message includes the maximum allowed.</p> </note>
        <p> <b>Learn more</b> </p> <p> <a
        href="https://docs.aws.amazon.com/gamelift/latest/developerguide/fleets-intro.html">
        Working with Fleets</a>.</p> <p> <b>Related operations</b> </p> <ul>
        <li> <p> <a>CreateFleet</a> </p> </li> <li> <p> <a>ListFleets</a> </p>
        </li> <li> <p> <a>DeleteFleet</a> </p> </li> <li> <p>Describe
        fleets:</p> <ul> <li> <p> <a>DescribeFleetAttributes</a> </p> </li> <li>
        <p> <a>DescribeFleetCapacity</a> </p> </li> <li> <p>
        <a>DescribeFleetPortSettings</a> </p> </li> <li> <p>
        <a>DescribeFleetUtilization</a> </p> </li> <li> <p>
        <a>DescribeRuntimeConfiguration</a> </p> </li> <li> <p>
        <a>DescribeEC2InstanceLimits</a> </p> </li> <li> <p>
        <a>DescribeFleetEvents</a> </p> </li> </ul> </li> <li> <p>Update
        fleets:</p> <ul> <li> <p> <a>UpdateFleetAttributes</a> </p> </li> <li>
        <p> <a>UpdateFleetCapacity</a> </p> </li> <li> <p>
        <a>UpdateFleetPortSettings</a> </p> </li> <li> <p>
        <a>UpdateRuntimeConfiguration</a> </p> </li> </ul> </li> <li> <p>Manage
        fleet actions:</p> <ul> <li> <p> <a>StartFleetActions</a> </p> </li>
        <li> <p> <a>StopFleetActions</a> </p> </li> </ul> </li> </ul>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeFleetAttributesOutput"
        "480":
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServiceException"
        "481":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "482":
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRequestException"
        "483":
          description: UnauthorizedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthorizedException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - GameLift.DescribeFleetAttributes
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DescribeFleetAttributesInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=GameLift.DescribeFleetCapacity:
    post:
      operationId: DescribeFleetCapacity
      description: <p>Retrieves the current status of fleet capacity for one or more
        fleets. This information includes the number of instances that have been
        requested for the fleet and the number currently active. You can request
        capacity for all fleets, or specify a list of one or more fleet IDs.
        When requesting multiple fleets, use the pagination parameters to
        retrieve results as a set of sequential pages. If successful, a
        <a>FleetCapacity</a> object is returned for each requested fleet ID.
        When specifying a list of fleet IDs, attribute objects are returned only
        for fleets that currently exist. </p> <note> <p>Some API actions may
        limit the number of fleet IDs allowed in one request. If a request
        exceeds this limit, the request fails and the error message includes the
        maximum allowed.</p> </note> <p> <b>Learn more</b> </p> <p> <a
        href="https://docs.aws.amazon.com/gamelift/latest/developerguide/fleets-intro.html">
        Working with Fleets</a>.</p> <p> <b>Related operations</b> </p> <ul>
        <li> <p> <a>CreateFleet</a> </p> </li> <li> <p> <a>ListFleets</a> </p>
        </li> <li> <p> <a>DeleteFleet</a> </p> </li> <li> <p>Describe
        fleets:</p> <ul> <li> <p> <a>DescribeFleetAttributes</a> </p> </li> <li>
        <p> <a>DescribeFleetCapacity</a> </p> </li> <li> <p>
        <a>DescribeFleetPortSettings</a> </p> </li> <li> <p>
        <a>DescribeFleetUtilization</a> </p> </li> <li> <p>
        <a>DescribeRuntimeConfiguration</a> </p> </li> <li> <p>
        <a>DescribeEC2InstanceLimits</a> </p> </li> <li> <p>
        <a>DescribeFleetEvents</a> </p> </li> </ul> </li> <li> <p>Update
        fleets:</p> <ul> <li> <p> <a>UpdateFleetAttributes</a> </p> </li> <li>
        <p> <a>UpdateFleetCapacity</a> </p> </li> <li> <p>
        <a>UpdateFleetPortSettings</a> </p> </li> <li> <p>
        <a>UpdateRuntimeConfiguration</a> </p> </li> </ul> </li> <li> <p>Manage
        fleet actions:</p> <ul> <li> <p> <a>StartFleetActions</a> </p> </li>
        <li> <p> <a>StopFleetActions</a> </p> </li> </ul> </li> </ul>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeFleetCapacityOutput"
        "480":
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServiceException"
        "481":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "482":
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRequestException"
        "483":
          description: UnauthorizedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthorizedException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - GameLift.DescribeFleetCapacity
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DescribeFleetCapacityInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=GameLift.DescribeFleetEvents:
    post:
      operationId: DescribeFleetEvents
      description: <p>Retrieves entries from the specified fleet's event log. You can
        specify a time range to limit the result set. Use the pagination
        parameters to retrieve results as a set of sequential pages. If
        successful, a collection of event log entries matching the request are
        returned.</p> <p> <b>Learn more</b> </p> <p> <a
        href="https://docs.aws.amazon.com/gamelift/latest/developerguide/fleets-intro.html">
        Working with Fleets</a>.</p> <p> <b>Related operations</b> </p> <ul>
        <li> <p> <a>CreateFleet</a> </p> </li> <li> <p> <a>ListFleets</a> </p>
        </li> <li> <p> <a>DeleteFleet</a> </p> </li> <li> <p>Describe
        fleets:</p> <ul> <li> <p> <a>DescribeFleetAttributes</a> </p> </li> <li>
        <p> <a>DescribeFleetCapacity</a> </p> </li> <li> <p>
        <a>DescribeFleetPortSettings</a> </p> </li> <li> <p>
        <a>DescribeFleetUtilization</a> </p> </li> <li> <p>
        <a>DescribeRuntimeConfiguration</a> </p> </li> <li> <p>
        <a>DescribeEC2InstanceLimits</a> </p> </li> <li> <p>
        <a>DescribeFleetEvents</a> </p> </li> </ul> </li> <li> <p>Update
        fleets:</p> <ul> <li> <p> <a>UpdateFleetAttributes</a> </p> </li> <li>
        <p> <a>UpdateFleetCapacity</a> </p> </li> <li> <p>
        <a>UpdateFleetPortSettings</a> </p> </li> <li> <p>
        <a>UpdateRuntimeConfiguration</a> </p> </li> </ul> </li> <li> <p>Manage
        fleet actions:</p> <ul> <li> <p> <a>StartFleetActions</a> </p> </li>
        <li> <p> <a>StopFleetActions</a> </p> </li> </ul> </li> </ul>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeFleetEventsOutput"
        "480":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "481":
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServiceException"
        "482":
          description: UnauthorizedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthorizedException"
        "483":
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRequestException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - GameLift.DescribeFleetEvents
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DescribeFleetEventsInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=GameLift.DescribeFleetPortSettings:
    post:
      operationId: DescribeFleetPortSettings
      description: <p>Retrieves the inbound connection permissions for a fleet. Connection
        permissions include a range of IP addresses and port settings that
        incoming traffic can use to access server processes in the fleet. To get
        a fleet's inbound connection permissions, specify a fleet ID. If
        successful, a collection of <a>IpPermission</a> objects is returned for
        the requested fleet ID. If the requested fleet has been deleted, the
        result set is empty.</p> <p> <b>Learn more</b> </p> <p> <a
        href="https://docs.aws.amazon.com/gamelift/latest/developerguide/fleets-intro.html">
        Working with Fleets</a>.</p> <p> <b>Related operations</b> </p> <ul>
        <li> <p> <a>CreateFleet</a> </p> </li> <li> <p> <a>ListFleets</a> </p>
        </li> <li> <p> <a>DeleteFleet</a> </p> </li> <li> <p>Describe
        fleets:</p> <ul> <li> <p> <a>DescribeFleetAttributes</a> </p> </li> <li>
        <p> <a>DescribeFleetCapacity</a> </p> </li> <li> <p>
        <a>DescribeFleetPortSettings</a> </p> </li> <li> <p>
        <a>DescribeFleetUtilization</a> </p> </li> <li> <p>
        <a>DescribeRuntimeConfiguration</a> </p> </li> <li> <p>
        <a>DescribeEC2InstanceLimits</a> </p> </li> <li> <p>
        <a>DescribeFleetEvents</a> </p> </li> </ul> </li> <li> <p>Update
        fleets:</p> <ul> <li> <p> <a>UpdateFleetAttributes</a> </p> </li> <li>
        <p> <a>UpdateFleetCapacity</a> </p> </li> <li> <p>
        <a>UpdateFleetPortSettings</a> </p> </li> <li> <p>
        <a>UpdateRuntimeConfiguration</a> </p> </li> </ul> </li> <li> <p>Manage
        fleet actions:</p> <ul> <li> <p> <a>StartFleetActions</a> </p> </li>
        <li> <p> <a>StopFleetActions</a> </p> </li> </ul> </li> </ul>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeFleetPortSettingsOutput"
        "480":
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServiceException"
        "481":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "482":
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRequestException"
        "483":
          description: UnauthorizedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthorizedException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - GameLift.DescribeFleetPortSettings
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DescribeFleetPortSettingsInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=GameLift.DescribeFleetUtilization:
    post:
      operationId: DescribeFleetUtilization
      description: <p>Retrieves utilization statistics for one or more fleets. You can
        request utilization data for all fleets, or specify a list of one or
        more fleet IDs. When requesting multiple fleets, use the pagination
        parameters to retrieve results as a set of sequential pages. If
        successful, a <a>FleetUtilization</a> object is returned for each
        requested fleet ID. When specifying a list of fleet IDs, utilization
        objects are returned only for fleets that currently exist. </p> <note>
        <p>Some API actions may limit the number of fleet IDs allowed in one
        request. If a request exceeds this limit, the request fails and the
        error message includes the maximum allowed.</p> </note> <p> <b>Learn
        more</b> </p> <p> <a
        href="https://docs.aws.amazon.com/gamelift/latest/developerguide/fleets-intro.html">
        Working with Fleets</a>.</p> <p> <b>Related operations</b> </p> <ul>
        <li> <p> <a>CreateFleet</a> </p> </li> <li> <p> <a>ListFleets</a> </p>
        </li> <li> <p> <a>DeleteFleet</a> </p> </li> <li> <p>Describe
        fleets:</p> <ul> <li> <p> <a>DescribeFleetAttributes</a> </p> </li> <li>
        <p> <a>DescribeFleetCapacity</a> </p> </li> <li> <p>
        <a>DescribeFleetPortSettings</a> </p> </li> <li> <p>
        <a>DescribeFleetUtilization</a> </p> </li> <li> <p>
        <a>DescribeRuntimeConfiguration</a> </p> </li> <li> <p>
        <a>DescribeEC2InstanceLimits</a> </p> </li> <li> <p>
        <a>DescribeFleetEvents</a> </p> </li> </ul> </li> <li> <p>Update
        fleets:</p> <ul> <li> <p> <a>UpdateFleetAttributes</a> </p> </li> <li>
        <p> <a>UpdateFleetCapacity</a> </p> </li> <li> <p>
        <a>UpdateFleetPortSettings</a> </p> </li> <li> <p>
        <a>UpdateRuntimeConfiguration</a> </p> </li> </ul> </li> <li> <p>Manage
        fleet actions:</p> <ul> <li> <p> <a>StartFleetActions</a> </p> </li>
        <li> <p> <a>StopFleetActions</a> </p> </li> </ul> </li> </ul>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeFleetUtilizationOutput"
        "480":
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServiceException"
        "481":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "482":
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRequestException"
        "483":
          description: UnauthorizedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthorizedException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - GameLift.DescribeFleetUtilization
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DescribeFleetUtilizationInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=GameLift.DescribeGameSessionDetails:
    post:
      operationId: DescribeGameSessionDetails
      description: "<p>Retrieves properties, including the protection policy in force, for
        one or more game sessions. This action can be used in several ways: (1)
        provide a <code>GameSessionId</code> or <code>GameSessionArn</code> to
        request details for a specific game session; (2) provide either a
        <code>FleetId</code> or an <code>AliasId</code> to request properties
        for all game sessions running on a fleet. </p> <p>To get game session
        record(s), specify just one of the following: game session ID, fleet ID,
        or alias ID. You can filter this request by game session status. Use the
        pagination parameters to retrieve results as a set of sequential pages.
        If successful, a <a>GameSessionDetail</a> object is returned for each
        session matching the request.</p> <ul> <li> <p> <a>CreateGameSession</a>
        </p> </li> <li> <p> <a>DescribeGameSessions</a> </p> </li> <li> <p>
        <a>DescribeGameSessionDetails</a> </p> </li> <li> <p>
        <a>SearchGameSessions</a> </p> </li> <li> <p> <a>UpdateGameSession</a>
        </p> </li> <li> <p> <a>GetGameSessionLogUrl</a> </p> </li> <li> <p>Game
        session placements</p> <ul> <li> <p> <a>StartGameSessionPlacement</a>
        </p> </li> <li> <p> <a>DescribeGameSessionPlacement</a> </p> </li> <li>
        <p> <a>StopGameSessionPlacement</a> </p> </li> </ul> </li> </ul>"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeGameSessionDetailsOutput"
        "480":
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServiceException"
        "481":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "482":
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRequestException"
        "483":
          description: UnauthorizedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthorizedException"
        "484":
          description: TerminalRoutingStrategyException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TerminalRoutingStrategyException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - GameLift.DescribeGameSessionDetails
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DescribeGameSessionDetailsInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=GameLift.DescribeGameSessionPlacement:
    post:
      operationId: DescribeGameSessionPlacement
      description: <p>Retrieves properties and current status of a game session placement
        request. To get game session placement details, specify the placement
        ID. If successful, a <a>GameSessionPlacement</a> object is returned.</p>
        <ul> <li> <p> <a>CreateGameSession</a> </p> </li> <li> <p>
        <a>DescribeGameSessions</a> </p> </li> <li> <p>
        <a>DescribeGameSessionDetails</a> </p> </li> <li> <p>
        <a>SearchGameSessions</a> </p> </li> <li> <p> <a>UpdateGameSession</a>
        </p> </li> <li> <p> <a>GetGameSessionLogUrl</a> </p> </li> <li> <p>Game
        session placements</p> <ul> <li> <p> <a>StartGameSessionPlacement</a>
        </p> </li> <li> <p> <a>DescribeGameSessionPlacement</a> </p> </li> <li>
        <p> <a>StopGameSessionPlacement</a> </p> </li> </ul> </li> </ul>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeGameSessionPlacementOutput"
        "480":
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServiceException"
        "481":
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRequestException"
        "482":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "483":
          description: UnauthorizedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthorizedException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - GameLift.DescribeGameSessionPlacement
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DescribeGameSessionPlacementInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=GameLift.DescribeGameSessionQueues:
    post:
      operationId: DescribeGameSessionQueues
      description: <p>Retrieves the properties for one or more game session queues. When
        requesting multiple queues, use the pagination parameters to retrieve
        results as a set of sequential pages. If successful, a
        <a>GameSessionQueue</a> object is returned for each requested queue.
        When specifying a list of queues, objects are returned only for queues
        that currently exist in the region.</p> <ul> <li> <p>
        <a>CreateGameSessionQueue</a> </p> </li> <li> <p>
        <a>DescribeGameSessionQueues</a> </p> </li> <li> <p>
        <a>UpdateGameSessionQueue</a> </p> </li> <li> <p>
        <a>DeleteGameSessionQueue</a> </p> </li> </ul>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeGameSessionQueuesOutput"
        "480":
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServiceException"
        "481":
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRequestException"
        "482":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "483":
          description: UnauthorizedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthorizedException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - GameLift.DescribeGameSessionQueues
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DescribeGameSessionQueuesInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=GameLift.DescribeGameSessions:
    post:
      operationId: DescribeGameSessions
      description: "<p>Retrieves a set of one or more game sessions. Request a specific
        game session or request all game sessions on a fleet. Alternatively, use
        <a>SearchGameSessions</a> to request a set of active game sessions that
        are filtered by certain criteria. To retrieve protection policy settings
        for game sessions, use <a>DescribeGameSessionDetails</a>.</p> <p>To get
        game sessions, specify one of the following: game session ID, fleet ID,
        or alias ID. You can filter this request by game session status. Use the
        pagination parameters to retrieve results as a set of sequential pages.
        If successful, a <a>GameSession</a> object is returned for each game
        session matching the request.</p> <p> <i>Available in Amazon GameLift
        Local.</i> </p> <ul> <li> <p> <a>CreateGameSession</a> </p> </li> <li>
        <p> <a>DescribeGameSessions</a> </p> </li> <li> <p>
        <a>DescribeGameSessionDetails</a> </p> </li> <li> <p>
        <a>SearchGameSessions</a> </p> </li> <li> <p> <a>UpdateGameSession</a>
        </p> </li> <li> <p> <a>GetGameSessionLogUrl</a> </p> </li> <li> <p>Game
        session placements</p> <ul> <li> <p> <a>StartGameSessionPlacement</a>
        </p> </li> <li> <p> <a>DescribeGameSessionPlacement</a> </p> </li> <li>
        <p> <a>StopGameSessionPlacement</a> </p> </li> </ul> </li> </ul>"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeGameSessionsOutput"
        "480":
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServiceException"
        "481":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "482":
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRequestException"
        "483":
          description: UnauthorizedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthorizedException"
        "484":
          description: TerminalRoutingStrategyException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TerminalRoutingStrategyException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - GameLift.DescribeGameSessions
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DescribeGameSessionsInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=GameLift.DescribeInstances:
    post:
      operationId: DescribeInstances
      description: <p>Retrieves information about a fleet's instances, including instance
        IDs. Use this action to get details on all instances in the fleet or get
        details on one specific instance.</p> <p>To get a specific instance,
        specify fleet ID and instance ID. To get all instances in a fleet,
        specify a fleet ID only. Use the pagination parameters to retrieve
        results as a set of sequential pages. If successful, an <a>Instance</a>
        object is returned for each result.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeInstancesOutput"
        "480":
          description: UnauthorizedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthorizedException"
        "481":
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRequestException"
        "482":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "483":
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServiceException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - GameLift.DescribeInstances
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DescribeInstancesInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=GameLift.DescribeMatchmaking:
    post:
      operationId: DescribeMatchmaking
      description: <p>Retrieves one or more matchmaking tickets. Use this operation to
        retrieve ticket information, including status and--once a successful
        match is made--acquire connection information for the resulting new game
        session. </p> <p>You can use this operation to track the progress of
        matchmaking requests (through polling) as an alternative to using event
        notifications. See more details on tracking matchmaking requests through
        polling or notifications in <a>StartMatchmaking</a>. </p> <p>To request
        matchmaking tickets, provide a list of up to 10 ticket IDs. If the
        request is successful, a ticket object is returned for each requested ID
        that currently exists.</p> <p> <b>Learn more</b> </p> <p> <a
        href="https://docs.aws.amazon.com/gamelift/latest/developerguide/match-client.html">
        Add FlexMatch to a Game Client</a> </p> <p> <a
        href="https://docs.aws.amazon.com/gamelift/latest/developerguidematch-notification.html">
        Set Up FlexMatch Event Notification</a> </p> <p> <b>Related
        operations</b> </p> <ul> <li> <p> <a>StartMatchmaking</a> </p> </li>
        <li> <p> <a>DescribeMatchmaking</a> </p> </li> <li> <p>
        <a>StopMatchmaking</a> </p> </li> <li> <p> <a>AcceptMatch</a> </p> </li>
        <li> <p> <a>StartMatchBackfill</a> </p> </li> </ul>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeMatchmakingOutput"
        "480":
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRequestException"
        "481":
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServiceException"
        "482":
          description: UnsupportedRegionException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnsupportedRegionException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - GameLift.DescribeMatchmaking
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DescribeMatchmakingInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=GameLift.DescribeMatchmakingConfigurations:
    post:
      operationId: DescribeMatchmakingConfigurations
      description: '<p>Retrieves the details of FlexMatch matchmaking configurations. With
        this operation, you have the following options: (1) retrieve all
        existing configurations, (2) provide the names of one or more
        configurations to retrieve, or (3) retrieve all configurations that use
        a specified rule set name. When requesting multiple items, use the
        pagination parameters to retrieve results as a set of sequential pages.
        If successful, a configuration is returned for each requested name. When
        specifying a list of names, only configurations that currently exist are
        returned. </p> <p> <b>Learn more</b> </p> <p> <a
        href="https://docs.aws.amazon.com/gamelift/latest/developerguide/matchmaker-build.html">
        Setting Up FlexMatch Matchmakers</a> </p> <p> <b>Related operations</b>
        </p> <ul> <li> <p> <a>CreateMatchmakingConfiguration</a> </p> </li> <li>
        <p> <a>DescribeMatchmakingConfigurations</a> </p> </li> <li> <p>
        <a>UpdateMatchmakingConfiguration</a> </p> </li> <li> <p>
        <a>DeleteMatchmakingConfiguration</a> </p> </li> <li> <p>
        <a>CreateMatchmakingRuleSet</a> </p> </li> <li> <p>
        <a>DescribeMatchmakingRuleSets</a> </p> </li> <li> <p>
        <a>ValidateMatchmakingRuleSet</a> </p> </li> <li> <p>
        <a>DeleteMatchmakingRuleSet</a> </p> </li> </ul>'
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeMatchmakingConfigurationsOutput"
        "480":
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRequestException"
        "481":
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServiceException"
        "482":
          description: UnsupportedRegionException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnsupportedRegionException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - GameLift.DescribeMatchmakingConfigurations
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DescribeMatchmakingConfigurationsInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=GameLift.DescribeMatchmakingRuleSets:
    post:
      operationId: DescribeMatchmakingRuleSets
      description: <p>Retrieves the details for FlexMatch matchmaking rule sets. You can
        request all existing rule sets for the region, or provide a list of one
        or more rule set names. When requesting multiple items, use the
        pagination parameters to retrieve results as a set of sequential pages.
        If successful, a rule set is returned for each requested name. </p> <p>
        <b>Learn more</b> </p> <ul> <li> <p> <a
        href="https://docs.aws.amazon.com/gamelift/latest/developerguide/match-rulesets.html">Build
        a Rule Set</a> </p> </li> </ul> <p> <b>Related operations</b> </p> <ul>
        <li> <p> <a>CreateMatchmakingConfiguration</a> </p> </li> <li> <p>
        <a>DescribeMatchmakingConfigurations</a> </p> </li> <li> <p>
        <a>UpdateMatchmakingConfiguration</a> </p> </li> <li> <p>
        <a>DeleteMatchmakingConfiguration</a> </p> </li> <li> <p>
        <a>CreateMatchmakingRuleSet</a> </p> </li> <li> <p>
        <a>DescribeMatchmakingRuleSets</a> </p> </li> <li> <p>
        <a>ValidateMatchmakingRuleSet</a> </p> </li> <li> <p>
        <a>DeleteMatchmakingRuleSet</a> </p> </li> </ul>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeMatchmakingRuleSetsOutput"
        "480":
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRequestException"
        "481":
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServiceException"
        "482":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "483":
          description: UnsupportedRegionException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnsupportedRegionException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - GameLift.DescribeMatchmakingRuleSets
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DescribeMatchmakingRuleSetsInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=GameLift.DescribePlayerSessions:
    post:
      operationId: DescribePlayerSessions
      description: "<p>Retrieves properties for one or more player sessions. This action
        can be used in several ways: (1) provide a <code>PlayerSessionId</code>
        to request properties for a specific player session; (2) provide a
        <code>GameSessionId</code> to request properties for all player sessions
        in the specified game session; (3) provide a <code>PlayerId</code> to
        request properties for all player sessions of a specified player. </p>
        <p>To get game session record(s), specify only one of the following: a
        player session ID, a game session ID, or a player ID. You can filter
        this request by player session status. Use the pagination parameters to
        retrieve results as a set of sequential pages. If successful, a
        <a>PlayerSession</a> object is returned for each session matching the
        request.</p> <p> <i>Available in Amazon GameLift Local.</i> </p> <ul>
        <li> <p> <a>CreatePlayerSession</a> </p> </li> <li> <p>
        <a>CreatePlayerSessions</a> </p> </li> <li> <p>
        <a>DescribePlayerSessions</a> </p> </li> <li> <p>Game session
        placements</p> <ul> <li> <p> <a>StartGameSessionPlacement</a> </p> </li>
        <li> <p> <a>DescribeGameSessionPlacement</a> </p> </li> <li> <p>
        <a>StopGameSessionPlacement</a> </p> </li> </ul> </li> </ul>"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribePlayerSessionsOutput"
        "480":
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServiceException"
        "481":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "482":
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRequestException"
        "483":
          description: UnauthorizedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthorizedException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - GameLift.DescribePlayerSessions
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DescribePlayerSessionsInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=GameLift.DescribeRuntimeConfiguration:
    post:
      operationId: DescribeRuntimeConfiguration
      description: <p>Retrieves the current run-time configuration for the specified fleet.
        The run-time configuration tells Amazon GameLift how to launch server
        processes on instances in the fleet.</p> <p> <b>Learn more</b> </p> <p>
        <a
        href="https://docs.aws.amazon.com/gamelift/latest/developerguide/fleets-intro.html">
        Working with Fleets</a>.</p> <p> <b>Related operations</b> </p> <ul>
        <li> <p> <a>CreateFleet</a> </p> </li> <li> <p> <a>ListFleets</a> </p>
        </li> <li> <p> <a>DeleteFleet</a> </p> </li> <li> <p>Describe
        fleets:</p> <ul> <li> <p> <a>DescribeFleetAttributes</a> </p> </li> <li>
        <p> <a>DescribeFleetCapacity</a> </p> </li> <li> <p>
        <a>DescribeFleetPortSettings</a> </p> </li> <li> <p>
        <a>DescribeFleetUtilization</a> </p> </li> <li> <p>
        <a>DescribeRuntimeConfiguration</a> </p> </li> <li> <p>
        <a>DescribeEC2InstanceLimits</a> </p> </li> <li> <p>
        <a>DescribeFleetEvents</a> </p> </li> </ul> </li> <li> <p>Update
        fleets:</p> <ul> <li> <p> <a>UpdateFleetAttributes</a> </p> </li> <li>
        <p> <a>UpdateFleetCapacity</a> </p> </li> <li> <p>
        <a>UpdateFleetPortSettings</a> </p> </li> <li> <p>
        <a>UpdateRuntimeConfiguration</a> </p> </li> </ul> </li> <li> <p>Manage
        fleet actions:</p> <ul> <li> <p> <a>StartFleetActions</a> </p> </li>
        <li> <p> <a>StopFleetActions</a> </p> </li> </ul> </li> </ul>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeRuntimeConfigurationOutput"
        "480":
          description: UnauthorizedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthorizedException"
        "481":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "482":
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServiceException"
        "483":
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRequestException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - GameLift.DescribeRuntimeConfiguration
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DescribeRuntimeConfigurationInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=GameLift.DescribeScalingPolicies:
    post:
      operationId: DescribeScalingPolicies
      description: <p>Retrieves all scaling policies applied to a fleet.</p> <p>To get a
        fleet's scaling policies, specify the fleet ID. You can filter this
        request by policy status, such as to retrieve only active scaling
        policies. Use the pagination parameters to retrieve results as a set of
        sequential pages. If successful, set of <a>ScalingPolicy</a> objects is
        returned for the fleet.</p> <p>A fleet may have all of its scaling
        policies suspended (<a>StopFleetActions</a>). This action does not
        affect the status of the scaling policies, which remains ACTIVE. To see
        whether a fleet's scaling policies are in force or suspended, call
        <a>DescribeFleetAttributes</a> and check the stopped actions.</p> <ul>
        <li> <p> <a>DescribeFleetCapacity</a> </p> </li> <li> <p>
        <a>UpdateFleetCapacity</a> </p> </li> <li> <p>
        <a>DescribeEC2InstanceLimits</a> </p> </li> <li> <p>Manage scaling
        policies:</p> <ul> <li> <p> <a>PutScalingPolicy</a> (auto-scaling)</p>
        </li> <li> <p> <a>DescribeScalingPolicies</a> (auto-scaling)</p> </li>
        <li> <p> <a>DeleteScalingPolicy</a> (auto-scaling)</p> </li> </ul> </li>
        <li> <p>Manage fleet actions:</p> <ul> <li> <p> <a>StartFleetActions</a>
        </p> </li> <li> <p> <a>StopFleetActions</a> </p> </li> </ul> </li> </ul>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeScalingPoliciesOutput"
        "480":
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServiceException"
        "481":
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRequestException"
        "482":
          description: UnauthorizedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthorizedException"
        "483":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - GameLift.DescribeScalingPolicies
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DescribeScalingPoliciesInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=GameLift.DescribeScript:
    post:
      operationId: DescribeScript
      description: <p>Retrieves properties for a Realtime script. </p> <p>To request a
        script record, specify the script ID. If successful, an object
        containing the script properties is returned.</p> <p> <b>Learn more</b>
        </p> <p> <a
        href="https://docs.aws.amazon.com/gamelift/latest/developerguide/realtime-intro.html">Amazon
        GameLift Realtime Servers</a> </p> <p> <b>Related operations</b> </p>
        <ul> <li> <p> <a>CreateScript</a> </p> </li> <li> <p> <a>ListScripts</a>
        </p> </li> <li> <p> <a>DescribeScript</a> </p> </li> <li> <p>
        <a>UpdateScript</a> </p> </li> <li> <p> <a>DeleteScript</a> </p> </li>
        </ul>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeScriptOutput"
        "480":
          description: UnauthorizedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthorizedException"
        "481":
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRequestException"
        "482":
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServiceException"
        "483":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - GameLift.DescribeScript
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DescribeScriptInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=GameLift.DescribeVpcPeeringAuthorizations:
    post:
      operationId: DescribeVpcPeeringAuthorizations
      description: <p>Retrieves valid VPC peering authorizations that are pending for the
        AWS account. This operation returns all VPC peering authorizations and
        requests for peering. This includes those initiated and received by this
        account. </p> <ul> <li> <p> <a>CreateVpcPeeringAuthorization</a> </p>
        </li> <li> <p> <a>DescribeVpcPeeringAuthorizations</a> </p> </li> <li>
        <p> <a>DeleteVpcPeeringAuthorization</a> </p> </li> <li> <p>
        <a>CreateVpcPeeringConnection</a> </p> </li> <li> <p>
        <a>DescribeVpcPeeringConnections</a> </p> </li> <li> <p>
        <a>DeleteVpcPeeringConnection</a> </p> </li> </ul>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeVpcPeeringAuthorizationsOutput"
        "480":
          description: UnauthorizedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthorizedException"
        "481":
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRequestException"
        "482":
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServiceException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - GameLift.DescribeVpcPeeringAuthorizations
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DescribeVpcPeeringAuthorizationsInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=GameLift.DescribeVpcPeeringConnections:
    post:
      operationId: DescribeVpcPeeringConnections
      description: <p>Retrieves information on VPC peering connections. Use this operation
        to get peering information for all fleets or for one specific fleet ID.
        </p> <p>To retrieve connection information, call this operation from the
        AWS account that is used to manage the Amazon GameLift fleets. Specify a
        fleet ID or leave the parameter empty to retrieve all connection
        records. If successful, the retrieved information includes both active
        and pending connections. Active connections identify the IpV4 CIDR block
        that the VPC uses to connect. </p> <ul> <li> <p>
        <a>CreateVpcPeeringAuthorization</a> </p> </li> <li> <p>
        <a>DescribeVpcPeeringAuthorizations</a> </p> </li> <li> <p>
        <a>DeleteVpcPeeringAuthorization</a> </p> </li> <li> <p>
        <a>CreateVpcPeeringConnection</a> </p> </li> <li> <p>
        <a>DescribeVpcPeeringConnections</a> </p> </li> <li> <p>
        <a>DeleteVpcPeeringConnection</a> </p> </li> </ul>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeVpcPeeringConnectionsOutput"
        "480":
          description: UnauthorizedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthorizedException"
        "481":
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRequestException"
        "482":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "483":
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServiceException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - GameLift.DescribeVpcPeeringConnections
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DescribeVpcPeeringConnectionsInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=GameLift.GetGameSessionLogUrl:
    post:
      operationId: GetGameSessionLogUrl
      description: <p>Retrieves the location of stored game session logs for a specified
        game session. When a game session is terminated, Amazon GameLift
        automatically stores the logs in Amazon S3 and retains them for 14 days.
        Use this URL to download the logs.</p> <note> <p>See the <a
        href="https://docs.aws.amazon.com/general/latest/gr/aws_service_limits.html#limits_gamelift">AWS
        Service Limits</a> page for maximum log file sizes. Log files that
        exceed this limit are not saved.</p> </note> <ul> <li> <p>
        <a>CreateGameSession</a> </p> </li> <li> <p> <a>DescribeGameSessions</a>
        </p> </li> <li> <p> <a>DescribeGameSessionDetails</a> </p> </li> <li>
        <p> <a>SearchGameSessions</a> </p> </li> <li> <p>
        <a>UpdateGameSession</a> </p> </li> <li> <p> <a>GetGameSessionLogUrl</a>
        </p> </li> <li> <p>Game session placements</p> <ul> <li> <p>
        <a>StartGameSessionPlacement</a> </p> </li> <li> <p>
        <a>DescribeGameSessionPlacement</a> </p> </li> <li> <p>
        <a>StopGameSessionPlacement</a> </p> </li> </ul> </li> </ul>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetGameSessionLogUrlOutput"
        "480":
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServiceException"
        "481":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "482":
          description: UnauthorizedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthorizedException"
        "483":
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRequestException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - GameLift.GetGameSessionLogUrl
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GetGameSessionLogUrlInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=GameLift.GetInstanceAccess:
    post:
      operationId: GetInstanceAccess
      description: <p>Requests remote access to a fleet instance. Remote access is useful
        for debugging, gathering benchmarking data, or watching activity in real
        time. </p> <p>Access requires credentials that match the operating
        system of the instance. For a Windows instance, Amazon GameLift returns
        a user name and password as strings for use with a Windows Remote
        Desktop client. For a Linux instance, Amazon GameLift returns a user
        name and RSA private key, also as strings, for use with an SSH client.
        The private key must be saved in the proper format to a
        <code>.pem</code> file before using. If you're making this request using
        the AWS CLI, saving the secret can be handled as part of the
        GetInstanceAccess request. (See the example later in this topic). For
        more information on remote access, see <a
        href="https://docs.aws.amazon.com/gamelift/latest/developerguide/fleets-remote-access.html">Remotely
        Accessing an Instance</a>.</p> <p>To request access to a specific
        instance, specify the IDs of both the instance and the fleet it belongs
        to. You can retrieve a fleet's instance IDs by calling
        <a>DescribeInstances</a>. If successful, an <a>InstanceAccess</a> object
        is returned containing the instance's IP address and a set of
        credentials.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetInstanceAccessOutput"
        "480":
          description: UnauthorizedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthorizedException"
        "481":
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRequestException"
        "482":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "483":
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServiceException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - GameLift.GetInstanceAccess
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GetInstanceAccessInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=GameLift.ListAliases:
    post:
      operationId: ListAliases
      description: <p>Retrieves all aliases for this AWS account. You can filter the result
        set by alias name and/or routing strategy type. Use the pagination
        parameters to retrieve results in sequential pages.</p> <note>
        <p>Returned aliases are not listed in any particular order.</p> </note>
        <ul> <li> <p> <a>CreateAlias</a> </p> </li> <li> <p> <a>ListAliases</a>
        </p> </li> <li> <p> <a>DescribeAlias</a> </p> </li> <li> <p>
        <a>UpdateAlias</a> </p> </li> <li> <p> <a>DeleteAlias</a> </p> </li>
        <li> <p> <a>ResolveAlias</a> </p> </li> </ul>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListAliasesOutput"
        "480":
          description: UnauthorizedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthorizedException"
        "481":
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRequestException"
        "482":
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServiceException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - GameLift.ListAliases
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ListAliasesInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=GameLift.ListBuilds:
    post:
      operationId: ListBuilds
      description: <p>Retrieves build records for all builds associated with the AWS
        account in use. You can limit results to builds that are in a specific
        status by using the <code>Status</code> parameter. Use the pagination
        parameters to retrieve results in a set of sequential pages. </p> <note>
        <p>Build records are not listed in any particular order.</p> </note> <p>
        <b>Learn more</b> </p> <p> <a
        href="https://docs.aws.amazon.com/gamelift/latest/developerguide/build-intro.html">
        Working with Builds</a> </p> <p> <b>Related operations</b> </p> <ul>
        <li> <p> <a>CreateBuild</a> </p> </li> <li> <p> <a>ListBuilds</a> </p>
        </li> <li> <p> <a>DescribeBuild</a> </p> </li> <li> <p>
        <a>UpdateBuild</a> </p> </li> <li> <p> <a>DeleteBuild</a> </p> </li>
        </ul>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListBuildsOutput"
        "480":
          description: UnauthorizedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthorizedException"
        "481":
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRequestException"
        "482":
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServiceException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - GameLift.ListBuilds
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ListBuildsInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=GameLift.ListFleets:
    post:
      operationId: ListFleets
      description: <p>Retrieves a collection of fleet records for this AWS account. You can
        filter the result set to find only those fleets that are deployed with a
        specific build or script. Use the pagination parameters to retrieve
        results in sequential pages.</p> <note> <p>Fleet records are not listed
        in a particular order.</p> </note> <p> <b>Learn more</b> </p> <p> <a
        href="https://docs.aws.amazon.com/gamelift/latest/developerguide/fleets-intro.html">
        Set Up Fleets</a>.</p> <p> <b>Related operations</b> </p> <ul> <li> <p>
        <a>CreateFleet</a> </p> </li> <li> <p> <a>ListFleets</a> </p> </li> <li>
        <p> <a>DeleteFleet</a> </p> </li> <li> <p>Describe fleets:</p> <ul> <li>
        <p> <a>DescribeFleetAttributes</a> </p> </li> <li> <p>
        <a>DescribeFleetCapacity</a> </p> </li> <li> <p>
        <a>DescribeFleetPortSettings</a> </p> </li> <li> <p>
        <a>DescribeFleetUtilization</a> </p> </li> <li> <p>
        <a>DescribeRuntimeConfiguration</a> </p> </li> <li> <p>
        <a>DescribeEC2InstanceLimits</a> </p> </li> <li> <p>
        <a>DescribeFleetEvents</a> </p> </li> </ul> </li> <li> <p>Update
        fleets:</p> <ul> <li> <p> <a>UpdateFleetAttributes</a> </p> </li> <li>
        <p> <a>UpdateFleetCapacity</a> </p> </li> <li> <p>
        <a>UpdateFleetPortSettings</a> </p> </li> <li> <p>
        <a>UpdateRuntimeConfiguration</a> </p> </li> </ul> </li> <li> <p>Manage
        fleet actions:</p> <ul> <li> <p> <a>StartFleetActions</a> </p> </li>
        <li> <p> <a>StopFleetActions</a> </p> </li> </ul> </li> </ul>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListFleetsOutput"
        "480":
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServiceException"
        "481":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "482":
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRequestException"
        "483":
          description: UnauthorizedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthorizedException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - GameLift.ListFleets
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ListFleetsInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=GameLift.ListScripts:
    post:
      operationId: ListScripts
      description: <p>Retrieves script records for all Realtime scripts that are associated
        with the AWS account in use. </p> <p> <b>Learn more</b> </p> <p> <a
        href="https://docs.aws.amazon.com/gamelift/latest/developerguide/realtime-intro.html">Amazon
        GameLift Realtime Servers</a> </p> <p> <b>Related operations</b> </p>
        <ul> <li> <p> <a>CreateScript</a> </p> </li> <li> <p> <a>ListScripts</a>
        </p> </li> <li> <p> <a>DescribeScript</a> </p> </li> <li> <p>
        <a>UpdateScript</a> </p> </li> <li> <p> <a>DeleteScript</a> </p> </li>
        </ul>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListScriptsOutput"
        "480":
          description: UnauthorizedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthorizedException"
        "481":
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRequestException"
        "482":
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServiceException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - GameLift.ListScripts
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ListScriptsInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=GameLift.PutScalingPolicy:
    post:
      operationId: PutScalingPolicy
      description: "<p>Creates or updates a scaling policy for a fleet. Scaling policies
        are used to automatically scale a fleet's hosting capacity to meet
        player demand. An active scaling policy instructs Amazon GameLift to
        track a fleet metric and automatically change the fleet's capacity when
        a certain threshold is reached. There are two types of scaling policies:
        target-based and rule-based. Use a target-based policy to quickly and
        efficiently manage fleet scaling; this option is the most commonly used.
        Use rule-based policies when you need to exert fine-grained control over
        auto-scaling. </p> <p>Fleets can have multiple scaling policies of each
        type in force at the same time; you can have one target-based policy,
        one or multiple rule-based scaling policies, or both. We recommend
        caution, however, because multiple auto-scaling policies can have
        unintended consequences.</p> <p>You can temporarily suspend all scaling
        policies for a fleet by calling <a>StopFleetActions</a> with the fleet
        action AUTO_SCALING. To resume scaling policies, call
        <a>StartFleetActions</a> with the same fleet action. To stop just one
        scaling policy--or to permanently remove it, you must delete the policy
        with <a>DeleteScalingPolicy</a>.</p> <p>Learn more about how to work
        with auto-scaling in <a
        href=\"https://docs.aws.amazon.com/gamelift/latest/developerguide/fleet\
        s-autoscaling.html\">Set Up Fleet Automatic Scaling</a>.</p> <p>
        <b>Target-based policy</b> </p> <p>A target-based policy tracks a single
        metric: PercentAvailableGameSessions. This metric tells us how much of a
        fleet's hosting capacity is ready to host game sessions but is not
        currently in use. This is the fleet's buffer; it measures the additional
        player demand that the fleet could handle at current capacity. With a
        target-based policy, you set your ideal buffer size and leave it to
        Amazon GameLift to take whatever action is needed to maintain that
        target. </p> <p>For example, you might choose to maintain a 10% buffer
        for a fleet that has the capacity to host 100 simultaneous game
        sessions. This policy tells Amazon GameLift to take action whenever the
        fleet's available capacity falls below or rises above 10 game sessions.
        Amazon GameLift will start new instances or stop unused instances in
        order to return to the 10% buffer. </p> <p>To create or update a
        target-based policy, specify a fleet ID and name, and set the policy
        type to \"TargetBased\". Specify the metric to track
        (PercentAvailableGameSessions) and reference a
        <a>TargetConfiguration</a> object with your desired buffer value.
        Exclude all other parameters. On a successful request, the policy name
        is returned. The scaling policy is automatically in force as soon as
        it's successfully created. If the fleet's auto-scaling actions are
        temporarily suspended, the new policy will be in force once the fleet
        actions are restarted.</p> <p> <b>Rule-based policy</b> </p> <p>A
        rule-based policy tracks specified fleet metric, sets a threshold value,
        and specifies the type of action to initiate when triggered. With a
        rule-based policy, you can select from several available fleet metrics.
        Each policy specifies whether to scale up or scale down (and by how
        much), so you need one policy for each type of action. </p> <p>For
        example, a policy may make the following statement: \"If the percentage
        of idle instances is greater than 20% for more than 15 minutes, then
        reduce the fleet capacity by 10%.\"</p> <p>A policy's rule statement has
        the following structure:</p> <p>If <code>[MetricName]</code> is
        <code>[ComparisonOperator]</code> <code>[Threshold]</code> for
        <code>[EvaluationPeriods]</code> minutes, then
        <code>[ScalingAdjustmentType]</code> to/by
        <code>[ScalingAdjustment]</code>.</p> <p>To implement the example, the
        rule statement would look like this:</p> <p>If
        <code>[PercentIdleInstances]</code> is
        <code>[GreaterThanThreshold]</code> <code>[20]</code> for
        <code>[15]</code> minutes, then <code>[PercentChangeInCapacity]</code>
        to/by <code>[10]</code>.</p> <p>To create or update a scaling policy,
        specify a unique combination of name and fleet ID, and set the policy
        type to \"RuleBased\". Specify the parameter values for a policy rule
        statement. On a successful request, the policy name is returned. Scaling
        policies are automatically in force as soon as they're successfully
        created. If the fleet's auto-scaling actions are temporarily suspended,
        the new policy will be in force once the fleet actions are
        restarted.</p> <ul> <li> <p> <a>DescribeFleetCapacity</a> </p> </li>
        <li> <p> <a>UpdateFleetCapacity</a> </p> </li> <li> <p>
        <a>DescribeEC2InstanceLimits</a> </p> </li> <li> <p>Manage scaling
        policies:</p> <ul> <li> <p> <a>PutScalingPolicy</a> (auto-scaling)</p>
        </li> <li> <p> <a>DescribeScalingPolicies</a> (auto-scaling)</p> </li>
        <li> <p> <a>DeleteScalingPolicy</a> (auto-scaling)</p> </li> </ul> </li>
        <li> <p>Manage fleet actions:</p> <ul> <li> <p> <a>StartFleetActions</a>
        </p> </li> <li> <p> <a>StopFleetActions</a> </p> </li> </ul> </li>
        </ul>"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PutScalingPolicyOutput"
        "480":
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServiceException"
        "481":
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRequestException"
        "482":
          description: UnauthorizedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthorizedException"
        "483":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - GameLift.PutScalingPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PutScalingPolicyInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=GameLift.RequestUploadCredentials:
    post:
      operationId: RequestUploadCredentials
      description: <p>Retrieves a fresh set of credentials for use when uploading a new set
        of game build files to Amazon GameLift's Amazon S3. This is done as part
        of the build creation process; see <a>CreateBuild</a>.</p> <p>To request
        new credentials, specify the build ID as returned with an initial
        <code>CreateBuild</code> request. If successful, a new set of
        credentials are returned, along with the S3 storage location associated
        with the build ID.</p> <p> <b>Learn more</b> </p> <p> <a
        href="https://docs.aws.amazon.com/gamelift/latest/developerguide/gamelift-build-intro.html">Uploading
        Your Game</a> </p> <p> <b>Related operations</b> </p> <ul> <li> <p>
        <a>CreateBuild</a> </p> </li> <li> <p> <a>ListBuilds</a> </p> </li> <li>
        <p> <a>DescribeBuild</a> </p> </li> <li> <p> <a>UpdateBuild</a> </p>
        </li> <li> <p> <a>DeleteBuild</a> </p> </li> </ul>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RequestUploadCredentialsOutput"
        "480":
          description: UnauthorizedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthorizedException"
        "481":
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRequestException"
        "482":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "483":
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServiceException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - GameLift.RequestUploadCredentials
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RequestUploadCredentialsInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=GameLift.ResolveAlias:
    post:
      operationId: ResolveAlias
      description: <p>Retrieves the fleet ID that a specified alias is currently pointing
        to.</p> <ul> <li> <p> <a>CreateAlias</a> </p> </li> <li> <p>
        <a>ListAliases</a> </p> </li> <li> <p> <a>DescribeAlias</a> </p> </li>
        <li> <p> <a>UpdateAlias</a> </p> </li> <li> <p> <a>DeleteAlias</a> </p>
        </li> <li> <p> <a>ResolveAlias</a> </p> </li> </ul>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResolveAliasOutput"
        "480":
          description: UnauthorizedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthorizedException"
        "481":
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRequestException"
        "482":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "483":
          description: TerminalRoutingStrategyException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TerminalRoutingStrategyException"
        "484":
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServiceException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - GameLift.ResolveAlias
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ResolveAliasInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=GameLift.SearchGameSessions:
    post:
      operationId: SearchGameSessions
      description: "<p>Retrieves all active game sessions that match a set of search
        criteria and sorts them in a specified order. You can search or sort by
        the following game session attributes:</p> <ul> <li> <p>
        <b>gameSessionId</b> -- Unique identifier for the game session. You can
        use either a <code>GameSessionId</code> or <code>GameSessionArn</code>
        value. </p> </li> <li> <p> <b>gameSessionName</b> -- Name assigned to a
        game session. This value is set when requesting a new game session with
        <a>CreateGameSession</a> or updating with <a>UpdateGameSession</a>. Game
        session names do not need to be unique to a game session.</p> </li> <li>
        <p> <b>gameSessionProperties</b> -- Custom data defined in a game
        session's <code>GameProperty</code> parameter. <code>GameProperty</code>
        values are stored as key:value pairs; the filter expression must
        indicate the key and a string to search the data values for. For
        example, to search for game sessions with custom data containing the
        key:value pair \"gameMode:brawl\", specify the following:
        <code>gameSessionProperties.gameMode = \"brawl\"</code>. All custom data
        values are searched as strings.</p> </li> <li> <p>
        <b>maximumSessions</b> -- Maximum number of player sessions allowed for
        a game session. This value is set when requesting a new game session
        with <a>CreateGameSession</a> or updating with
        <a>UpdateGameSession</a>.</p> </li> <li> <p> <b>creationTimeMillis</b>
        -- Value indicating when a game session was created. It is expressed in
        Unix time as milliseconds.</p> </li> <li> <p> <b>playerSessionCount</b>
        -- Number of players currently connected to a game session. This value
        changes rapidly as players join the session or drop out.</p> </li> <li>
        <p> <b>hasAvailablePlayerSessions</b> -- Boolean value indicating
        whether a game session has reached its maximum number of players. It is
        highly recommended that all search requests include this filter
        attribute to optimize search performance and return only sessions that
        players can join. </p> </li> </ul> <note> <p>Returned values for
        <code>playerSessionCount</code> and
        <code>hasAvailablePlayerSessions</code> change quickly as players join
        sessions and others drop out. Results should be considered a snapshot in
        time. Be sure to refresh search results often, and handle sessions that
        fill up before a player can join. </p> </note> <p>To search or sort,
        specify either a fleet ID or an alias ID, and provide a search filter
        expression, a sort expression, or both. If successful, a collection of
        <a>GameSession</a> objects matching the request is returned. Use the
        pagination parameters to retrieve results as a set of sequential pages.
        </p> <p>You can search for game sessions one fleet at a time only. To
        find game sessions across multiple fleets, you must search each fleet
        separately and combine the results. This search feature finds only game
        sessions that are in <code>ACTIVE</code> status. To locate games in
        statuses other than active, use <a>DescribeGameSessionDetails</a>.</p>
        <ul> <li> <p> <a>CreateGameSession</a> </p> </li> <li> <p>
        <a>DescribeGameSessions</a> </p> </li> <li> <p>
        <a>DescribeGameSessionDetails</a> </p> </li> <li> <p>
        <a>SearchGameSessions</a> </p> </li> <li> <p> <a>UpdateGameSession</a>
        </p> </li> <li> <p> <a>GetGameSessionLogUrl</a> </p> </li> <li> <p>Game
        session placements</p> <ul> <li> <p> <a>StartGameSessionPlacement</a>
        </p> </li> <li> <p> <a>DescribeGameSessionPlacement</a> </p> </li> <li>
        <p> <a>StopGameSessionPlacement</a> </p> </li> </ul> </li> </ul>"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SearchGameSessionsOutput"
        "480":
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServiceException"
        "481":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "482":
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRequestException"
        "483":
          description: UnauthorizedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthorizedException"
        "484":
          description: TerminalRoutingStrategyException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TerminalRoutingStrategyException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - GameLift.SearchGameSessions
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SearchGameSessionsInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=GameLift.StartFleetActions:
    post:
      operationId: StartFleetActions
      description: <p>Resumes activity on a fleet that was suspended with
        <a>StopFleetActions</a>. Currently, this operation is used to restart a
        fleet's auto-scaling activity. </p> <p>To start fleet actions, specify
        the fleet ID and the type of actions to restart. When auto-scaling fleet
        actions are restarted, Amazon GameLift once again initiates scaling
        events as triggered by the fleet's scaling policies. If actions on the
        fleet were never stopped, this operation will have no effect. You can
        view a fleet's stopped actions using <a>DescribeFleetAttributes</a>.</p>
        <p> <b>Learn more</b> </p> <p> <a
        href="https://docs.aws.amazon.com/gamelift/latest/developerguide/fleets-intro.html">
        Working with Fleets</a>.</p> <p> <b>Related operations</b> </p> <ul>
        <li> <p> <a>CreateFleet</a> </p> </li> <li> <p> <a>ListFleets</a> </p>
        </li> <li> <p> <a>DeleteFleet</a> </p> </li> <li> <p>Describe
        fleets:</p> <ul> <li> <p> <a>DescribeFleetAttributes</a> </p> </li> <li>
        <p> <a>DescribeFleetCapacity</a> </p> </li> <li> <p>
        <a>DescribeFleetPortSettings</a> </p> </li> <li> <p>
        <a>DescribeFleetUtilization</a> </p> </li> <li> <p>
        <a>DescribeRuntimeConfiguration</a> </p> </li> <li> <p>
        <a>DescribeEC2InstanceLimits</a> </p> </li> <li> <p>
        <a>DescribeFleetEvents</a> </p> </li> </ul> </li> <li> <p>Update
        fleets:</p> <ul> <li> <p> <a>UpdateFleetAttributes</a> </p> </li> <li>
        <p> <a>UpdateFleetCapacity</a> </p> </li> <li> <p>
        <a>UpdateFleetPortSettings</a> </p> </li> <li> <p>
        <a>UpdateRuntimeConfiguration</a> </p> </li> </ul> </li> <li> <p>Manage
        fleet actions:</p> <ul> <li> <p> <a>StartFleetActions</a> </p> </li>
        <li> <p> <a>StopFleetActions</a> </p> </li> </ul> </li> </ul>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StartFleetActionsOutput"
        "480":
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServiceException"
        "481":
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRequestException"
        "482":
          description: UnauthorizedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthorizedException"
        "483":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - GameLift.StartFleetActions
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/StartFleetActionsInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=GameLift.StartGameSessionPlacement:
    post:
      operationId: StartGameSessionPlacement
      description: <p>Places a request for a new game session in a queue (see
        <a>CreateGameSessionQueue</a>). When processing a placement request,
        Amazon GameLift searches for available resources on the queue's
        destinations, scanning each until it finds resources or the placement
        request times out.</p> <p>A game session placement request can also
        request player sessions. When a new game session is successfully
        created, Amazon GameLift creates a player session for each player
        included in the request.</p> <p>When placing a game session, by default
        Amazon GameLift tries each fleet in the order they are listed in the
        queue configuration. Ideally, a queue's destinations are listed in
        preference order.</p> <p>Alternatively, when requesting a game session
        with players, you can also provide latency data for each player in
        relevant regions. Latency data indicates the performance lag a player
        experiences when connected to a fleet in the region. Amazon GameLift
        uses latency data to reorder the list of destinations to place the game
        session in a region with minimal lag. If latency data is provided for
        multiple players, Amazon GameLift calculates each region's average lag
        for all players and reorders to get the best game play across all
        players. </p> <p>To place a new game session request, specify the
        following:</p> <ul> <li> <p>The queue name and a set of game session
        properties and settings</p> </li> <li> <p>A unique ID (such as a UUID)
        for the placement. You use this ID to track the status of the placement
        request</p> </li> <li> <p>(Optional) A set of player data and a unique
        player ID for each player that you are joining to the new game session
        (player data is optional, but if you include it, you must also provide a
        unique ID for each player)</p> </li> <li> <p>Latency data for all
        players (if you want to optimize game play for the players)</p> </li>
        </ul> <p>If successful, a new game session placement is created.</p>
        <p>To track the status of a placement request, call
        <a>DescribeGameSessionPlacement</a> and check the request's status. If
        the status is <code>FULFILLED</code>, a new game session has been
        created and a game session ARN and region are referenced. If the
        placement request times out, you can resubmit the request or retry it
        with a different queue. </p> <ul> <li> <p> <a>CreateGameSession</a> </p>
        </li> <li> <p> <a>DescribeGameSessions</a> </p> </li> <li> <p>
        <a>DescribeGameSessionDetails</a> </p> </li> <li> <p>
        <a>SearchGameSessions</a> </p> </li> <li> <p> <a>UpdateGameSession</a>
        </p> </li> <li> <p> <a>GetGameSessionLogUrl</a> </p> </li> <li> <p>Game
        session placements</p> <ul> <li> <p> <a>StartGameSessionPlacement</a>
        </p> </li> <li> <p> <a>DescribeGameSessionPlacement</a> </p> </li> <li>
        <p> <a>StopGameSessionPlacement</a> </p> </li> </ul> </li> </ul>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StartGameSessionPlacementOutput"
        "480":
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServiceException"
        "481":
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRequestException"
        "482":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "483":
          description: UnauthorizedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthorizedException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - GameLift.StartGameSessionPlacement
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/StartGameSessionPlacementInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=GameLift.StartMatchBackfill:
    post:
      operationId: StartMatchBackfill
      description: <p>Finds new players to fill open slots in an existing game session.
        This operation can be used to add players to matched games that start
        with fewer than the maximum number of players or to replace players when
        they drop out. By backfilling with the same matchmaker used to create
        the original match, you ensure that new players meet the match criteria
        and maintain a consistent experience throughout the game session. You
        can backfill a match anytime after a game session has been created. </p>
        <p>To request a match backfill, specify a unique ticket ID, the existing
        game session's ARN, a matchmaking configuration, and a set of data that
        describes all current players in the game session. If successful, a
        match backfill ticket is created and returned with status set to QUEUED.
        The ticket is placed in the matchmaker's ticket pool and processed.
        Track the status of the ticket to respond as needed. </p> <p>The process
        of finding backfill matches is essentially identical to the initial
        matchmaking process. The matchmaker searches the pool and groups tickets
        together to form potential matches, allowing only one backfill ticket
        per potential match. Once the a match is formed, the matchmaker creates
        player sessions for the new players. All tickets in the match are
        updated with the game session's connection information, and the
        <a>GameSession</a> object is updated to include matchmaker data on the
        new players. For more detail on how match backfill requests are
        processed, see <a
        href="https://docs.aws.amazon.com/gamelift/latest/developerguide/gamelift-match.html">
        How Amazon GameLift FlexMatch Works</a>. </p> <p> <b>Learn more</b> </p>
        <p> <a
        href="https://docs.aws.amazon.com/gamelift/latest/developerguide/match-backfill.html">
        Backfill Existing Games with FlexMatch</a> </p> <p> <a
        href="https://docs.aws.amazon.com/gamelift/latest/developerguide/gamelift-match.html">
        How GameLift FlexMatch Works</a> </p> <p> <b>Related operations</b> </p>
        <ul> <li> <p> <a>StartMatchmaking</a> </p> </li> <li> <p>
        <a>DescribeMatchmaking</a> </p> </li> <li> <p> <a>StopMatchmaking</a>
        </p> </li> <li> <p> <a>AcceptMatch</a> </p> </li> <li> <p>
        <a>StartMatchBackfill</a> </p> </li> </ul>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StartMatchBackfillOutput"
        "480":
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRequestException"
        "481":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "482":
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServiceException"
        "483":
          description: UnsupportedRegionException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnsupportedRegionException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - GameLift.StartMatchBackfill
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/StartMatchBackfillInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=GameLift.StartMatchmaking:
    post:
      operationId: StartMatchmaking
      description: '<p>Uses FlexMatch to create a game match for a group of players based
        on custom matchmaking rules, and starts a new game for the matched
        players. Each matchmaking request specifies the type of match to build
        (team configuration, rules for an acceptable match, etc.). The request
        also specifies the players to find a match for and where to host the new
        game session for optimal performance. A matchmaking request might start
        with a single player or a group of players who want to play together.
        FlexMatch finds additional players as needed to fill the match. Match
        type, rules, and the queue used to place a new game session are defined
        in a <code>MatchmakingConfiguration</code>. </p> <p>To start
        matchmaking, provide a unique ticket ID, specify a matchmaking
        configuration, and include the players to be matched. You must also
        include a set of player attributes relevant for the matchmaking
        configuration. If successful, a matchmaking ticket is returned with
        status set to <code>QUEUED</code>. Track the status of the ticket to
        respond as needed and acquire game session connection information for
        successfully completed matches.</p> <p> <b>Tracking ticket status</b> --
        A couple of options are available for tracking the status of matchmaking
        requests: </p> <ul> <li> <p>Polling -- Call
        <code>DescribeMatchmaking</code>. This operation returns the full ticket
        object, including current status and (for completed tickets) game
        session connection info. We recommend polling no more than once every 10
        seconds.</p> </li> <li> <p>Notifications -- Get event notifications for
        changes in ticket status using Amazon Simple Notification Service (SNS).
        Notifications are easy to set up (see
        <a>CreateMatchmakingConfiguration</a>) and typically deliver match
        status changes faster and more efficiently than polling. We recommend
        that you use polling to back up to notifications (since delivery is not
        guaranteed) and call <code>DescribeMatchmaking</code> only when
        notifications are not received within 30 seconds.</p> </li> </ul> <p>
        <b>Processing a matchmaking request</b> -- FlexMatch handles a
        matchmaking request as follows: </p> <ol> <li> <p>Your client code
        submits a <code>StartMatchmaking</code> request for one or more players
        and tracks the status of the request ticket. </p> </li> <li>
        <p>FlexMatch uses this ticket and others in process to build an
        acceptable match. When a potential match is identified, all tickets in
        the proposed match are advanced to the next status. </p> </li> <li>
        <p>If the match requires player acceptance (set in the matchmaking
        configuration), the tickets move into status
        <code>REQUIRES_ACCEPTANCE</code>. This status triggers your client code
        to solicit acceptance from all players in every ticket involved in the
        match, and then call <a>AcceptMatch</a> for each player. If any player
        rejects or fails to accept the match before a specified timeout, the
        proposed match is dropped (see <code>AcceptMatch</code> for more
        details).</p> </li> <li> <p>Once a match is proposed and accepted, the
        matchmaking tickets move into status <code>PLACING</code>. FlexMatch
        locates resources for a new game session using the game session queue
        (set in the matchmaking configuration) and creates the game session
        based on the match data. </p> </li> <li> <p>When the match is
        successfully placed, the matchmaking tickets move into
        <code>COMPLETED</code> status. Connection information (including game
        session endpoint and player session) is added to the matchmaking
        tickets. Matched players can use the connection information to join the
        game. </p> </li> </ol> <p> <b>Learn more</b> </p> <p> <a
        href="https://docs.aws.amazon.com/gamelift/latest/developerguide/match-client.html">
        Add FlexMatch to a Game Client</a> </p> <p> <a
        href="https://docs.aws.amazon.com/gamelift/latest/developerguide/match-notification.html">
        Set Up FlexMatch Event Notification</a> </p> <p> <a
        href="https://docs.aws.amazon.com/gamelift/latest/developerguide/match-tasks.html">
        FlexMatch Integration Roadmap</a> </p> <p> <a
        href="https://docs.aws.amazon.com/gamelift/latest/developerguide/gamelift-match.html">
        How GameLift FlexMatch Works</a> </p> <p> <b>Related operations</b> </p>
        <ul> <li> <p> <a>StartMatchmaking</a> </p> </li> <li> <p>
        <a>DescribeMatchmaking</a> </p> </li> <li> <p> <a>StopMatchmaking</a>
        </p> </li> <li> <p> <a>AcceptMatch</a> </p> </li> <li> <p>
        <a>StartMatchBackfill</a> </p> </li> </ul>'
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StartMatchmakingOutput"
        "480":
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRequestException"
        "481":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "482":
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServiceException"
        "483":
          description: UnsupportedRegionException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnsupportedRegionException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - GameLift.StartMatchmaking
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/StartMatchmakingInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=GameLift.StopFleetActions:
    post:
      operationId: StopFleetActions
      description: <p>Suspends activity on a fleet. Currently, this operation is used to
        stop a fleet's auto-scaling activity. It is used to temporarily stop
        scaling events triggered by the fleet's scaling policies. The policies
        can be retained and auto-scaling activity can be restarted using
        <a>StartFleetActions</a>. You can view a fleet's stopped actions using
        <a>DescribeFleetAttributes</a>.</p> <p>To stop fleet actions, specify
        the fleet ID and the type of actions to suspend. When auto-scaling fleet
        actions are stopped, Amazon GameLift no longer initiates scaling events
        except to maintain the fleet's desired instances setting
        (<a>FleetCapacity</a>. Changes to the fleet's capacity must be done
        manually using <a>UpdateFleetCapacity</a>. </p> <p> <b>Learn more</b>
        </p> <p> <a
        href="https://docs.aws.amazon.com/gamelift/latest/developerguide/fleets-intro.html">
        Working with Fleets</a>.</p> <p> <b>Related operations</b> </p> <ul>
        <li> <p> <a>CreateFleet</a> </p> </li> <li> <p> <a>ListFleets</a> </p>
        </li> <li> <p> <a>DeleteFleet</a> </p> </li> <li> <p>Describe
        fleets:</p> <ul> <li> <p> <a>DescribeFleetAttributes</a> </p> </li> <li>
        <p> <a>DescribeFleetCapacity</a> </p> </li> <li> <p>
        <a>DescribeFleetPortSettings</a> </p> </li> <li> <p>
        <a>DescribeFleetUtilization</a> </p> </li> <li> <p>
        <a>DescribeRuntimeConfiguration</a> </p> </li> <li> <p>
        <a>DescribeEC2InstanceLimits</a> </p> </li> <li> <p>
        <a>DescribeFleetEvents</a> </p> </li> </ul> </li> <li> <p>Update
        fleets:</p> <ul> <li> <p> <a>UpdateFleetAttributes</a> </p> </li> <li>
        <p> <a>UpdateFleetCapacity</a> </p> </li> <li> <p>
        <a>UpdateFleetPortSettings</a> </p> </li> <li> <p>
        <a>UpdateRuntimeConfiguration</a> </p> </li> </ul> </li> <li> <p>Manage
        fleet actions:</p> <ul> <li> <p> <a>StartFleetActions</a> </p> </li>
        <li> <p> <a>StopFleetActions</a> </p> </li> </ul> </li> </ul>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StopFleetActionsOutput"
        "480":
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServiceException"
        "481":
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRequestException"
        "482":
          description: UnauthorizedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthorizedException"
        "483":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - GameLift.StopFleetActions
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/StopFleetActionsInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=GameLift.StopGameSessionPlacement:
    post:
      operationId: StopGameSessionPlacement
      description: <p>Cancels a game session placement that is in <code>PENDING</code>
        status. To stop a placement, provide the placement ID values. If
        successful, the placement is moved to <code>CANCELLED</code> status.</p>
        <ul> <li> <p> <a>CreateGameSession</a> </p> </li> <li> <p>
        <a>DescribeGameSessions</a> </p> </li> <li> <p>
        <a>DescribeGameSessionDetails</a> </p> </li> <li> <p>
        <a>SearchGameSessions</a> </p> </li> <li> <p> <a>UpdateGameSession</a>
        </p> </li> <li> <p> <a>GetGameSessionLogUrl</a> </p> </li> <li> <p>Game
        session placements</p> <ul> <li> <p> <a>StartGameSessionPlacement</a>
        </p> </li> <li> <p> <a>DescribeGameSessionPlacement</a> </p> </li> <li>
        <p> <a>StopGameSessionPlacement</a> </p> </li> </ul> </li> </ul>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StopGameSessionPlacementOutput"
        "480":
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServiceException"
        "481":
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRequestException"
        "482":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "483":
          description: UnauthorizedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthorizedException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - GameLift.StopGameSessionPlacement
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/StopGameSessionPlacementInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=GameLift.StopMatchmaking:
    post:
      operationId: StopMatchmaking
      description: <p>Cancels a matchmaking ticket or match backfill ticket that is
        currently being processed. To stop the matchmaking operation, specify
        the ticket ID. If successful, work on the ticket is stopped, and the
        ticket status is changed to <code>CANCELLED</code>.</p> <p>This call is
        also used to turn off automatic backfill for an individual game session.
        This is for game sessions that are created with a matchmaking
        configuration that has automatic backfill enabled. The ticket ID is
        included in the <code>MatchmakerData</code> of an updated game session
        object, which is provided to the game server.</p> <note> <p>If the
        action is successful, the service sends back an empty JSON struct with
        the HTTP 200 response (not an empty HTTP body).</p> </note> <p> <b>Learn
        more</b> </p> <p> <a
        href="https://docs.aws.amazon.com/gamelift/latest/developerguide/match-client.html">
        Add FlexMatch to a Game Client</a> </p> <p> <b>Related operations</b>
        </p> <ul> <li> <p> <a>StartMatchmaking</a> </p> </li> <li> <p>
        <a>DescribeMatchmaking</a> </p> </li> <li> <p> <a>StopMatchmaking</a>
        </p> </li> <li> <p> <a>AcceptMatch</a> </p> </li> <li> <p>
        <a>StartMatchBackfill</a> </p> </li> </ul>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StopMatchmakingOutput"
        "480":
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRequestException"
        "481":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "482":
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServiceException"
        "483":
          description: UnsupportedRegionException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnsupportedRegionException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - GameLift.StopMatchmaking
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/StopMatchmakingInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=GameLift.UpdateAlias:
    post:
      operationId: UpdateAlias
      description: <p>Updates properties for an alias. To update properties, specify the
        alias ID to be updated and provide the information to be changed. To
        reassign an alias to another fleet, provide an updated routing strategy.
        If successful, the updated alias record is returned.</p> <ul> <li> <p>
        <a>CreateAlias</a> </p> </li> <li> <p> <a>ListAliases</a> </p> </li>
        <li> <p> <a>DescribeAlias</a> </p> </li> <li> <p> <a>UpdateAlias</a>
        </p> </li> <li> <p> <a>DeleteAlias</a> </p> </li> <li> <p>
        <a>ResolveAlias</a> </p> </li> </ul>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateAliasOutput"
        "480":
          description: UnauthorizedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthorizedException"
        "481":
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRequestException"
        "482":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "483":
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServiceException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - GameLift.UpdateAlias
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateAliasInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=GameLift.UpdateBuild:
    post:
      operationId: UpdateBuild
      description: <p>Updates metadata in a build record, including the build name and
        version. To update the metadata, specify the build ID to update and
        provide the new values. If successful, a build object containing the
        updated metadata is returned.</p> <p> <b>Learn more</b> </p> <p> <a
        href="https://docs.aws.amazon.com/gamelift/latest/developerguide/build-intro.html">
        Working with Builds</a> </p> <p> <b>Related operations</b> </p> <ul>
        <li> <p> <a>CreateBuild</a> </p> </li> <li> <p> <a>ListBuilds</a> </p>
        </li> <li> <p> <a>DescribeBuild</a> </p> </li> <li> <p>
        <a>UpdateBuild</a> </p> </li> <li> <p> <a>DeleteBuild</a> </p> </li>
        </ul>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateBuildOutput"
        "480":
          description: UnauthorizedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthorizedException"
        "481":
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRequestException"
        "482":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "483":
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServiceException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - GameLift.UpdateBuild
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateBuildInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=GameLift.UpdateFleetAttributes:
    post:
      operationId: UpdateFleetAttributes
      description: <p>Updates fleet properties, including name and description, for a
        fleet. To update metadata, specify the fleet ID and the property values
        that you want to change. If successful, the fleet ID for the updated
        fleet is returned.</p> <p> <b>Learn more</b> </p> <p> <a
        href="https://docs.aws.amazon.com/gamelift/latest/developerguide/fleets-intro.html">
        Working with Fleets</a>.</p> <p> <b>Related operations</b> </p> <ul>
        <li> <p> <a>CreateFleet</a> </p> </li> <li> <p> <a>ListFleets</a> </p>
        </li> <li> <p> <a>DeleteFleet</a> </p> </li> <li> <p>Describe
        fleets:</p> <ul> <li> <p> <a>DescribeFleetAttributes</a> </p> </li> <li>
        <p> <a>DescribeFleetCapacity</a> </p> </li> <li> <p>
        <a>DescribeFleetPortSettings</a> </p> </li> <li> <p>
        <a>DescribeFleetUtilization</a> </p> </li> <li> <p>
        <a>DescribeRuntimeConfiguration</a> </p> </li> <li> <p>
        <a>DescribeEC2InstanceLimits</a> </p> </li> <li> <p>
        <a>DescribeFleetEvents</a> </p> </li> </ul> </li> <li> <p>Update
        fleets:</p> <ul> <li> <p> <a>UpdateFleetAttributes</a> </p> </li> <li>
        <p> <a>UpdateFleetCapacity</a> </p> </li> <li> <p>
        <a>UpdateFleetPortSettings</a> </p> </li> <li> <p>
        <a>UpdateRuntimeConfiguration</a> </p> </li> </ul> </li> <li> <p>Manage
        fleet actions:</p> <ul> <li> <p> <a>StartFleetActions</a> </p> </li>
        <li> <p> <a>StopFleetActions</a> </p> </li> </ul> </li> </ul>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateFleetAttributesOutput"
        "480":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "481":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "482":
          description: InvalidFleetStatusException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidFleetStatusException"
        "483":
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
        "484":
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServiceException"
        "485":
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRequestException"
        "486":
          description: UnauthorizedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthorizedException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - GameLift.UpdateFleetAttributes
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateFleetAttributesInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=GameLift.UpdateFleetCapacity:
    post:
      operationId: UpdateFleetCapacity
      description: <p>Updates capacity settings for a fleet. Use this action to specify the
        number of EC2 instances (hosts) that you want this fleet to contain.
        Before calling this action, you may want to call
        <a>DescribeEC2InstanceLimits</a> to get the maximum capacity based on
        the fleet's EC2 instance type.</p> <p>Specify minimum and maximum number
        of instances. Amazon GameLift will not change fleet capacity to values
        fall outside of this range. This is particularly important when using
        auto-scaling (see <a>PutScalingPolicy</a>) to allow capacity to adjust
        based on player demand while imposing limits on automatic
        adjustments.</p> <p>To update fleet capacity, specify the fleet ID and
        the number of instances you want the fleet to host. If successful,
        Amazon GameLift starts or terminates instances so that the fleet's
        active instance count matches the desired instance count. You can view a
        fleet's current capacity information by calling
        <a>DescribeFleetCapacity</a>. If the desired instance count is higher
        than the instance type's limit, the "Limit Exceeded" exception
        occurs.</p> <p> <b>Learn more</b> </p> <p> <a
        href="https://docs.aws.amazon.com/gamelift/latest/developerguide/fleets-intro.html">
        Working with Fleets</a>.</p> <p> <b>Related operations</b> </p> <ul>
        <li> <p> <a>CreateFleet</a> </p> </li> <li> <p> <a>ListFleets</a> </p>
        </li> <li> <p> <a>DeleteFleet</a> </p> </li> <li> <p>Describe
        fleets:</p> <ul> <li> <p> <a>DescribeFleetAttributes</a> </p> </li> <li>
        <p> <a>DescribeFleetCapacity</a> </p> </li> <li> <p>
        <a>DescribeFleetPortSettings</a> </p> </li> <li> <p>
        <a>DescribeFleetUtilization</a> </p> </li> <li> <p>
        <a>DescribeRuntimeConfiguration</a> </p> </li> <li> <p>
        <a>DescribeEC2InstanceLimits</a> </p> </li> <li> <p>
        <a>DescribeFleetEvents</a> </p> </li> </ul> </li> <li> <p>Update
        fleets:</p> <ul> <li> <p> <a>UpdateFleetAttributes</a> </p> </li> <li>
        <p> <a>UpdateFleetCapacity</a> </p> </li> <li> <p>
        <a>UpdateFleetPortSettings</a> </p> </li> <li> <p>
        <a>UpdateRuntimeConfiguration</a> </p> </li> </ul> </li> <li> <p>Manage
        fleet actions:</p> <ul> <li> <p> <a>StartFleetActions</a> </p> </li>
        <li> <p> <a>StopFleetActions</a> </p> </li> </ul> </li> </ul>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateFleetCapacityOutput"
        "480":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "481":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "482":
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
        "483":
          description: InvalidFleetStatusException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidFleetStatusException"
        "484":
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServiceException"
        "485":
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRequestException"
        "486":
          description: UnauthorizedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthorizedException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - GameLift.UpdateFleetCapacity
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateFleetCapacityInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=GameLift.UpdateFleetPortSettings:
    post:
      operationId: UpdateFleetPortSettings
      description: <p>Updates port settings for a fleet. To update settings, specify the
        fleet ID to be updated and list the permissions you want to update. List
        the permissions you want to add in
        <code>InboundPermissionAuthorizations</code>, and permissions you want
        to remove in <code>InboundPermissionRevocations</code>. Permissions to
        be removed must match existing fleet permissions. If successful, the
        fleet ID for the updated fleet is returned.</p> <p> <b>Learn more</b>
        </p> <p> <a
        href="https://docs.aws.amazon.com/gamelift/latest/developerguide/fleets-intro.html">
        Working with Fleets</a>.</p> <p> <b>Related operations</b> </p> <ul>
        <li> <p> <a>CreateFleet</a> </p> </li> <li> <p> <a>ListFleets</a> </p>
        </li> <li> <p> <a>DeleteFleet</a> </p> </li> <li> <p>Describe
        fleets:</p> <ul> <li> <p> <a>DescribeFleetAttributes</a> </p> </li> <li>
        <p> <a>DescribeFleetCapacity</a> </p> </li> <li> <p>
        <a>DescribeFleetPortSettings</a> </p> </li> <li> <p>
        <a>DescribeFleetUtilization</a> </p> </li> <li> <p>
        <a>DescribeRuntimeConfiguration</a> </p> </li> <li> <p>
        <a>DescribeEC2InstanceLimits</a> </p> </li> <li> <p>
        <a>DescribeFleetEvents</a> </p> </li> </ul> </li> <li> <p>Update
        fleets:</p> <ul> <li> <p> <a>UpdateFleetAttributes</a> </p> </li> <li>
        <p> <a>UpdateFleetCapacity</a> </p> </li> <li> <p>
        <a>UpdateFleetPortSettings</a> </p> </li> <li> <p>
        <a>UpdateRuntimeConfiguration</a> </p> </li> </ul> </li> <li> <p>Manage
        fleet actions:</p> <ul> <li> <p> <a>StartFleetActions</a> </p> </li>
        <li> <p> <a>StopFleetActions</a> </p> </li> </ul> </li> </ul>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateFleetPortSettingsOutput"
        "480":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "481":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "482":
          description: InvalidFleetStatusException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidFleetStatusException"
        "483":
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
        "484":
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServiceException"
        "485":
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRequestException"
        "486":
          description: UnauthorizedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthorizedException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - GameLift.UpdateFleetPortSettings
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateFleetPortSettingsInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=GameLift.UpdateGameSession:
    post:
      operationId: UpdateGameSession
      description: <p>Updates game session properties. This includes the session name,
        maximum player count, protection policy, which controls whether or not
        an active game session can be terminated during a scale-down event, and
        the player session creation policy, which controls whether or not new
        players can join the session. To update a game session, specify the game
        session ID and the values you want to change. If successful, an updated
        <a>GameSession</a> object is returned. </p> <ul> <li> <p>
        <a>CreateGameSession</a> </p> </li> <li> <p> <a>DescribeGameSessions</a>
        </p> </li> <li> <p> <a>DescribeGameSessionDetails</a> </p> </li> <li>
        <p> <a>SearchGameSessions</a> </p> </li> <li> <p>
        <a>UpdateGameSession</a> </p> </li> <li> <p> <a>GetGameSessionLogUrl</a>
        </p> </li> <li> <p>Game session placements</p> <ul> <li> <p>
        <a>StartGameSessionPlacement</a> </p> </li> <li> <p>
        <a>DescribeGameSessionPlacement</a> </p> </li> <li> <p>
        <a>StopGameSessionPlacement</a> </p> </li> </ul> </li> </ul>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateGameSessionOutput"
        "480":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "481":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "482":
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServiceException"
        "483":
          description: UnauthorizedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthorizedException"
        "484":
          description: InvalidGameSessionStatusException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidGameSessionStatusException"
        "485":
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRequestException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - GameLift.UpdateGameSession
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateGameSessionInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=GameLift.UpdateGameSessionQueue:
    post:
      operationId: UpdateGameSessionQueue
      description: <p>Updates settings for a game session queue, which determines how new
        game session requests in the queue are processed. To update settings,
        specify the queue name to be updated and provide the new settings. When
        updating destinations, provide a complete list of destinations. </p>
        <ul> <li> <p> <a>CreateGameSessionQueue</a> </p> </li> <li> <p>
        <a>DescribeGameSessionQueues</a> </p> </li> <li> <p>
        <a>UpdateGameSessionQueue</a> </p> </li> <li> <p>
        <a>DeleteGameSessionQueue</a> </p> </li> </ul>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateGameSessionQueueOutput"
        "480":
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServiceException"
        "481":
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRequestException"
        "482":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "483":
          description: UnauthorizedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthorizedException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - GameLift.UpdateGameSessionQueue
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateGameSessionQueueInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=GameLift.UpdateMatchmakingConfiguration:
    post:
      operationId: UpdateMatchmakingConfiguration
      description: <p>Updates settings for a FlexMatch matchmaking configuration. These
        changes affect all matches and game sessions that are created after the
        update. To update settings, specify the configuration name to be updated
        and provide the new settings. </p> <p> <b>Learn more</b> </p> <p> <a
        href="https://docs.aws.amazon.com/gamelift/latest/developerguide/match-configuration.html">
        Design a FlexMatch Matchmaker</a> </p> <p> <b>Related operations</b>
        </p> <ul> <li> <p> <a>CreateMatchmakingConfiguration</a> </p> </li> <li>
        <p> <a>DescribeMatchmakingConfigurations</a> </p> </li> <li> <p>
        <a>UpdateMatchmakingConfiguration</a> </p> </li> <li> <p>
        <a>DeleteMatchmakingConfiguration</a> </p> </li> <li> <p>
        <a>CreateMatchmakingRuleSet</a> </p> </li> <li> <p>
        <a>DescribeMatchmakingRuleSets</a> </p> </li> <li> <p>
        <a>ValidateMatchmakingRuleSet</a> </p> </li> <li> <p>
        <a>DeleteMatchmakingRuleSet</a> </p> </li> </ul>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateMatchmakingConfigurationOutput"
        "480":
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRequestException"
        "481":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "482":
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServiceException"
        "483":
          description: UnsupportedRegionException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnsupportedRegionException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - GameLift.UpdateMatchmakingConfiguration
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateMatchmakingConfigurationInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=GameLift.UpdateRuntimeConfiguration:
    post:
      operationId: UpdateRuntimeConfiguration
      description: <p>Updates the current run-time configuration for the specified fleet,
        which tells Amazon GameLift how to launch server processes on instances
        in the fleet. You can update a fleet's run-time configuration at any
        time after the fleet is created; it does not need to be in an
        <code>ACTIVE</code> status.</p> <p>To update run-time configuration,
        specify the fleet ID and provide a <code>RuntimeConfiguration</code>
        object with an updated set of server process configurations.</p> <p>Each
        instance in a Amazon GameLift fleet checks regularly for an updated
        run-time configuration and changes how it launches server processes to
        comply with the latest version. Existing server processes are not
        affected by the update; run-time configuration changes are applied
        gradually as existing processes shut down and new processes are launched
        during Amazon GameLift's normal process recycling activity.</p> <p>
        <b>Learn more</b> </p> <p> <a
        href="https://docs.aws.amazon.com/gamelift/latest/developerguide/fleets-intro.html">
        Working with Fleets</a>.</p> <p> <b>Related operations</b> </p> <ul>
        <li> <p> <a>CreateFleet</a> </p> </li> <li> <p> <a>ListFleets</a> </p>
        </li> <li> <p> <a>DeleteFleet</a> </p> </li> <li> <p>Describe
        fleets:</p> <ul> <li> <p> <a>DescribeFleetAttributes</a> </p> </li> <li>
        <p> <a>DescribeFleetCapacity</a> </p> </li> <li> <p>
        <a>DescribeFleetPortSettings</a> </p> </li> <li> <p>
        <a>DescribeFleetUtilization</a> </p> </li> <li> <p>
        <a>DescribeRuntimeConfiguration</a> </p> </li> <li> <p>
        <a>DescribeEC2InstanceLimits</a> </p> </li> <li> <p>
        <a>DescribeFleetEvents</a> </p> </li> </ul> </li> <li> <p>Update
        fleets:</p> <ul> <li> <p> <a>UpdateFleetAttributes</a> </p> </li> <li>
        <p> <a>UpdateFleetCapacity</a> </p> </li> <li> <p>
        <a>UpdateFleetPortSettings</a> </p> </li> <li> <p>
        <a>UpdateRuntimeConfiguration</a> </p> </li> </ul> </li> <li> <p>Manage
        fleet actions:</p> <ul> <li> <p> <a>StartFleetActions</a> </p> </li>
        <li> <p> <a>StopFleetActions</a> </p> </li> </ul> </li> </ul>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateRuntimeConfigurationOutput"
        "480":
          description: UnauthorizedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthorizedException"
        "481":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "482":
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServiceException"
        "483":
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRequestException"
        "484":
          description: InvalidFleetStatusException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidFleetStatusException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - GameLift.UpdateRuntimeConfiguration
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateRuntimeConfigurationInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=GameLift.UpdateScript:
    post:
      operationId: UpdateScript
      description: <p>Updates Realtime script metadata and content.</p> <p>To update script
        metadata, specify the script ID and provide updated name and/or version
        values. </p> <p>To update script content, provide an updated zip file by
        pointing to either a local file or an Amazon S3 bucket location. You can
        use either method regardless of how the original script was uploaded.
        Use the <i>Version</i> parameter to track updates to the script.</p>
        <p>If the call is successful, the updated metadata is stored in the
        script record and a revised script is uploaded to the Amazon GameLift
        service. Once the script is updated and acquired by a fleet instance,
        the new version is used for all new game sessions. </p> <p> <b>Learn
        more</b> </p> <p> <a
        href="https://docs.aws.amazon.com/gamelift/latest/developerguide/realtime-intro.html">Amazon
        GameLift Realtime Servers</a> </p> <p> <b>Related operations</b> </p>
        <ul> <li> <p> <a>CreateScript</a> </p> </li> <li> <p> <a>ListScripts</a>
        </p> </li> <li> <p> <a>DescribeScript</a> </p> </li> <li> <p>
        <a>UpdateScript</a> </p> </li> <li> <p> <a>DeleteScript</a> </p> </li>
        </ul>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateScriptOutput"
        "480":
          description: UnauthorizedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthorizedException"
        "481":
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRequestException"
        "482":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "483":
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServiceException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - GameLift.UpdateScript
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateScriptInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=GameLift.ValidateMatchmakingRuleSet:
    post:
      operationId: ValidateMatchmakingRuleSet
      description: <p>Validates the syntax of a matchmaking rule or rule set. This
        operation checks that the rule set is using syntactically correct JSON
        and that it conforms to allowed property expressions. To validate
        syntax, provide a rule set JSON string.</p> <p> <b>Learn more</b> </p>
        <ul> <li> <p> <a
        href="https://docs.aws.amazon.com/gamelift/latest/developerguide/match-rulesets.html">Build
        a Rule Set</a> </p> </li> </ul> <p> <b>Related operations</b> </p> <ul>
        <li> <p> <a>CreateMatchmakingConfiguration</a> </p> </li> <li> <p>
        <a>DescribeMatchmakingConfigurations</a> </p> </li> <li> <p>
        <a>UpdateMatchmakingConfiguration</a> </p> </li> <li> <p>
        <a>DeleteMatchmakingConfiguration</a> </p> </li> <li> <p>
        <a>CreateMatchmakingRuleSet</a> </p> </li> <li> <p>
        <a>DescribeMatchmakingRuleSets</a> </p> </li> <li> <p>
        <a>ValidateMatchmakingRuleSet</a> </p> </li> <li> <p>
        <a>DeleteMatchmakingRuleSet</a> </p> </li> </ul>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidateMatchmakingRuleSetOutput"
        "480":
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServiceException"
        "481":
          description: UnsupportedRegionException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnsupportedRegionException"
        "482":
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRequestException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - GameLift.ValidateMatchmakingRuleSet
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ValidateMatchmakingRuleSetInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
servers:
  - url: http://gamelift.{region}.amazonaws.com
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-south-1
          - sa-east-1
        default: us-east-1
    description: The Amazon GameLift multi-region endpoint
  - url: https://gamelift.{region}.amazonaws.com
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-south-1
          - sa-east-1
        default: us-east-1
    description: The Amazon GameLift multi-region endpoint
  - url: http://gamelift.{region}.amazonaws.com.cn
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The Amazon GameLift endpoint for China (Beijing) and China (Ningxia)
  - url: https://gamelift.{region}.amazonaws.com.cn
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The Amazon GameLift endpoint for China (Beijing) and China (Ningxia)
components:
  parameters:
    X-Amz-Content-Sha256:
      name: X-Amz-Content-Sha256
      in: header
      required: false
      schema:
        type: string
    X-Amz-Date:
      name: X-Amz-Date
      in: header
      required: false
      schema:
        type: string
    X-Amz-Algorithm:
      name: X-Amz-Algorithm
      in: header
      required: false
      schema:
        type: string
    X-Amz-Credential:
      name: X-Amz-Credential
      in: header
      required: false
      schema:
        type: string
    X-Amz-Security-Token:
      name: X-Amz-Security-Token
      in: header
      required: false
      schema:
        type: string
    X-Amz-Signature:
      name: X-Amz-Signature
      in: header
      required: false
      schema:
        type: string
    X-Amz-SignedHeaders:
      name: X-Amz-SignedHeaders
      in: header
      required: false
      schema:
        type: string
  securitySchemes:
    hmac:
      type: apiKey
      name: Authorization
      in: header
      description: Amazon Signature authorization v4
      x-amazon-apigateway-authtype: awsSigv4
  schemas:
    AcceptMatchOutput:
      type: object
      properties: {}
    AcceptMatchInput:
      type: object
      required:
        - TicketId
        - PlayerIds
        - AcceptanceType
      properties:
        TicketId:
          $ref: "#/components/schemas/MatchmakingIdStringModel"
        PlayerIds:
          $ref: "#/components/schemas/StringList"
        AcceptanceType:
          $ref: "#/components/schemas/AcceptanceType"
      description: Represents the input for a request action.
    InvalidRequestException: {}
    NotFoundException: {}
    InternalServiceException: {}
    UnsupportedRegionException: {}
    CreateAliasOutput:
      type: object
      properties:
        Alias:
          $ref: "#/components/schemas/Alias"
      description: Represents the returned data in response to a request action.
    CreateAliasInput:
      type: object
      required:
        - Name
        - RoutingStrategy
      properties:
        Name:
          $ref: "#/components/schemas/NonBlankAndLengthConstraintString"
        Description:
          $ref: "#/components/schemas/NonZeroAndMaxString"
        RoutingStrategy:
          $ref: "#/components/schemas/RoutingStrategy"
      description: Represents the input for a request action.
    UnauthorizedException: {}
    ConflictException: {}
    LimitExceededException: {}
    CreateBuildOutput:
      type: object
      properties:
        Build:
          $ref: "#/components/schemas/Build"
        UploadCredentials:
          $ref: "#/components/schemas/AwsCredentials"
        StorageLocation:
          $ref: "#/components/schemas/S3Location"
      description: Represents the returned data in response to a request action.
    CreateBuildInput:
      type: object
      properties:
        Name:
          $ref: "#/components/schemas/NonZeroAndMaxString"
        Version:
          $ref: "#/components/schemas/NonZeroAndMaxString"
        StorageLocation:
          $ref: "#/components/schemas/S3Location"
        OperatingSystem:
          $ref: "#/components/schemas/OperatingSystem"
      description: Represents the input for a request action.
    CreateFleetOutput:
      type: object
      properties:
        FleetAttributes:
          $ref: "#/components/schemas/FleetAttributes"
      description: Represents the returned data in response to a request action.
    CreateFleetInput:
      type: object
      required:
        - Name
        - EC2InstanceType
      properties:
        Name:
          $ref: "#/components/schemas/NonZeroAndMaxString"
        Description:
          $ref: "#/components/schemas/NonZeroAndMaxString"
        BuildId:
          $ref: "#/components/schemas/BuildId"
        ScriptId:
          $ref: "#/components/schemas/ScriptId"
        ServerLaunchPath:
          $ref: "#/components/schemas/NonZeroAndMaxString"
        ServerLaunchParameters:
          $ref: "#/components/schemas/NonZeroAndMaxString"
        LogPaths:
          $ref: "#/components/schemas/StringList"
        EC2InstanceType:
          $ref: "#/components/schemas/EC2InstanceType"
        EC2InboundPermissions:
          $ref: "#/components/schemas/IpPermissionsList"
        NewGameSessionProtectionPolicy:
          $ref: "#/components/schemas/ProtectionPolicy"
        RuntimeConfiguration:
          $ref: "#/components/schemas/RuntimeConfiguration"
        ResourceCreationLimitPolicy:
          $ref: "#/components/schemas/ResourceCreationLimitPolicy"
        MetricGroups:
          $ref: "#/components/schemas/MetricGroupList"
        PeerVpcAwsAccountId:
          $ref: "#/components/schemas/NonZeroAndMaxString"
        PeerVpcId:
          $ref: "#/components/schemas/NonZeroAndMaxString"
        FleetType:
          $ref: "#/components/schemas/FleetType"
        InstanceRoleArn:
          $ref: "#/components/schemas/NonEmptyString"
        CertificateConfiguration:
          $ref: "#/components/schemas/CertificateConfiguration"
      description: Represents the input for a request action.
    CreateGameSessionOutput:
      type: object
      properties:
        GameSession:
          $ref: "#/components/schemas/GameSession"
      description: Represents the returned data in response to a request action.
    CreateGameSessionInput:
      type: object
      required:
        - MaximumPlayerSessionCount
      properties:
        FleetId:
          $ref: "#/components/schemas/FleetId"
        AliasId:
          $ref: "#/components/schemas/AliasId"
        MaximumPlayerSessionCount:
          $ref: "#/components/schemas/WholeNumber"
        Name:
          $ref: "#/components/schemas/NonZeroAndMaxString"
        GameProperties:
          $ref: "#/components/schemas/GamePropertyList"
        CreatorId:
          $ref: "#/components/schemas/NonZeroAndMaxString"
        GameSessionId:
          $ref: "#/components/schemas/IdStringModel"
        IdempotencyToken:
          $ref: "#/components/schemas/IdStringModel"
        GameSessionData:
          $ref: "#/components/schemas/GameSessionData"
      description: Represents the input for a request action.
    InvalidFleetStatusException: {}
    TerminalRoutingStrategyException: {}
    FleetCapacityExceededException: {}
    IdempotentParameterMismatchException: {}
    CreateGameSessionQueueOutput:
      type: object
      properties:
        GameSessionQueue:
          $ref: "#/components/schemas/GameSessionQueue"
      description: Represents the returned data in response to a request action.
    CreateGameSessionQueueInput:
      type: object
      required:
        - Name
      properties:
        Name:
          $ref: "#/components/schemas/GameSessionQueueName"
        TimeoutInSeconds:
          $ref: "#/components/schemas/WholeNumber"
        PlayerLatencyPolicies:
          $ref: "#/components/schemas/PlayerLatencyPolicyList"
        Destinations:
          $ref: "#/components/schemas/GameSessionQueueDestinationList"
      description: Represents the input for a request action.
    CreateMatchmakingConfigurationOutput:
      type: object
      properties:
        Configuration:
          $ref: "#/components/schemas/MatchmakingConfiguration"
      description: Represents the returned data in response to a request action.
    CreateMatchmakingConfigurationInput:
      type: object
      required:
        - Name
        - GameSessionQueueArns
        - RequestTimeoutSeconds
        - AcceptanceRequired
        - RuleSetName
      properties:
        Name:
          $ref: "#/components/schemas/MatchmakingIdStringModel"
        Description:
          $ref: "#/components/schemas/NonZeroAndMaxString"
        GameSessionQueueArns:
          $ref: "#/components/schemas/QueueArnsList"
        RequestTimeoutSeconds:
          $ref: "#/components/schemas/MatchmakingRequestTimeoutInteger"
        AcceptanceTimeoutSeconds:
          $ref: "#/components/schemas/MatchmakingAcceptanceTimeoutInteger"
        AcceptanceRequired:
          $ref: "#/components/schemas/BooleanModel"
        RuleSetName:
          $ref: "#/components/schemas/MatchmakingIdStringModel"
        NotificationTarget:
          $ref: "#/components/schemas/SnsArnStringModel"
        AdditionalPlayerCount:
          $ref: "#/components/schemas/WholeNumber"
        CustomEventData:
          $ref: "#/components/schemas/CustomEventData"
        GameProperties:
          $ref: "#/components/schemas/GamePropertyList"
        GameSessionData:
          $ref: "#/components/schemas/GameSessionData"
        BackfillMode:
          $ref: "#/components/schemas/BackfillMode"
      description: Represents the input for a request action.
    CreateMatchmakingRuleSetOutput:
      type: object
      required:
        - RuleSet
      properties:
        RuleSet:
          $ref: "#/components/schemas/MatchmakingRuleSet"
      description: Represents the returned data in response to a request action.
    CreateMatchmakingRuleSetInput:
      type: object
      required:
        - Name
        - RuleSetBody
      properties:
        Name:
          $ref: "#/components/schemas/MatchmakingIdStringModel"
        RuleSetBody:
          $ref: "#/components/schemas/RuleSetBody"
      description: Represents the input for a request action.
    CreatePlayerSessionOutput:
      type: object
      properties:
        PlayerSession:
          $ref: "#/components/schemas/PlayerSession"
      description: Represents the returned data in response to a request action.
    CreatePlayerSessionInput:
      type: object
      required:
        - GameSessionId
        - PlayerId
      properties:
        GameSessionId:
          $ref: "#/components/schemas/ArnStringModel"
        PlayerId:
          $ref: "#/components/schemas/NonZeroAndMaxString"
        PlayerData:
          $ref: "#/components/schemas/PlayerData"
      description: Represents the input for a request action.
    InvalidGameSessionStatusException: {}
    GameSessionFullException: {}
    CreatePlayerSessionsOutput:
      type: object
      properties:
        PlayerSessions:
          $ref: "#/components/schemas/PlayerSessionList"
      description: Represents the returned data in response to a request action.
    CreatePlayerSessionsInput:
      type: object
      required:
        - GameSessionId
        - PlayerIds
      properties:
        GameSessionId:
          $ref: "#/components/schemas/ArnStringModel"
        PlayerIds:
          $ref: "#/components/schemas/PlayerIdList"
        PlayerDataMap:
          $ref: "#/components/schemas/PlayerDataMap"
      description: Represents the input for a request action.
    CreateScriptOutput:
      type: object
      properties:
        Script:
          $ref: "#/components/schemas/Script"
    CreateScriptInput:
      type: object
      properties:
        Name:
          $ref: "#/components/schemas/NonZeroAndMaxString"
        Version:
          $ref: "#/components/schemas/NonZeroAndMaxString"
        StorageLocation:
          $ref: "#/components/schemas/S3Location"
        ZipFile:
          $ref: "#/components/schemas/ZipBlob"
    CreateVpcPeeringAuthorizationOutput:
      type: object
      properties:
        VpcPeeringAuthorization:
          $ref: "#/components/schemas/VpcPeeringAuthorization"
      description: Represents the returned data in response to a request action.
    CreateVpcPeeringAuthorizationInput:
      type: object
      required:
        - GameLiftAwsAccountId
        - PeerVpcId
      properties:
        GameLiftAwsAccountId:
          $ref: "#/components/schemas/NonZeroAndMaxString"
        PeerVpcId:
          $ref: "#/components/schemas/NonZeroAndMaxString"
      description: Represents the input for a request action.
    CreateVpcPeeringConnectionOutput:
      type: object
      properties: {}
    CreateVpcPeeringConnectionInput:
      type: object
      required:
        - FleetId
        - PeerVpcAwsAccountId
        - PeerVpcId
      properties:
        FleetId:
          $ref: "#/components/schemas/FleetId"
        PeerVpcAwsAccountId:
          $ref: "#/components/schemas/NonZeroAndMaxString"
        PeerVpcId:
          $ref: "#/components/schemas/NonZeroAndMaxString"
      description: Represents the input for a request action.
    DeleteAliasInput:
      type: object
      required:
        - AliasId
      properties:
        AliasId:
          $ref: "#/components/schemas/AliasId"
      description: Represents the input for a request action.
    DeleteBuildInput:
      type: object
      required:
        - BuildId
      properties:
        BuildId:
          $ref: "#/components/schemas/BuildId"
      description: Represents the input for a request action.
    DeleteFleetInput:
      type: object
      required:
        - FleetId
      properties:
        FleetId:
          $ref: "#/components/schemas/FleetId"
      description: Represents the input for a request action.
    DeleteGameSessionQueueOutput:
      type: object
      properties: {}
    DeleteGameSessionQueueInput:
      type: object
      required:
        - Name
      properties:
        Name:
          $ref: "#/components/schemas/GameSessionQueueName"
      description: Represents the input for a request action.
    DeleteMatchmakingConfigurationOutput:
      type: object
      properties: {}
    DeleteMatchmakingConfigurationInput:
      type: object
      required:
        - Name
      properties:
        Name:
          $ref: "#/components/schemas/MatchmakingIdStringModel"
      description: Represents the input for a request action.
    DeleteMatchmakingRuleSetOutput:
      type: object
      properties: {}
      description: Represents the returned data in response to a request action.
    DeleteMatchmakingRuleSetInput:
      type: object
      required:
        - Name
      properties:
        Name:
          $ref: "#/components/schemas/MatchmakingIdStringModel"
      description: Represents the input for a request action.
    DeleteScalingPolicyInput:
      type: object
      required:
        - Name
        - FleetId
      properties:
        Name:
          $ref: "#/components/schemas/NonZeroAndMaxString"
        FleetId:
          $ref: "#/components/schemas/FleetId"
      description: Represents the input for a request action.
    DeleteScriptInput:
      type: object
      required:
        - ScriptId
      properties:
        ScriptId:
          $ref: "#/components/schemas/ScriptId"
    DeleteVpcPeeringAuthorizationOutput:
      type: object
      properties: {}
    DeleteVpcPeeringAuthorizationInput:
      type: object
      required:
        - GameLiftAwsAccountId
        - PeerVpcId
      properties:
        GameLiftAwsAccountId:
          $ref: "#/components/schemas/NonZeroAndMaxString"
        PeerVpcId:
          $ref: "#/components/schemas/NonZeroAndMaxString"
      description: Represents the input for a request action.
    DeleteVpcPeeringConnectionOutput:
      type: object
      properties: {}
    DeleteVpcPeeringConnectionInput:
      type: object
      required:
        - FleetId
        - VpcPeeringConnectionId
      properties:
        FleetId:
          $ref: "#/components/schemas/FleetId"
        VpcPeeringConnectionId:
          $ref: "#/components/schemas/NonZeroAndMaxString"
      description: Represents the input for a request action.
    DescribeAliasOutput:
      type: object
      properties:
        Alias:
          $ref: "#/components/schemas/Alias"
      description: Represents the returned data in response to a request action.
    DescribeAliasInput:
      type: object
      required:
        - AliasId
      properties:
        AliasId:
          $ref: "#/components/schemas/AliasId"
      description: Represents the input for a request action.
    DescribeBuildOutput:
      type: object
      properties:
        Build:
          $ref: "#/components/schemas/Build"
      description: Represents the returned data in response to a request action.
    DescribeBuildInput:
      type: object
      required:
        - BuildId
      properties:
        BuildId:
          $ref: "#/components/schemas/BuildId"
      description: Represents the input for a request action.
    DescribeEC2InstanceLimitsOutput:
      type: object
      properties:
        EC2InstanceLimits:
          $ref: "#/components/schemas/EC2InstanceLimitList"
      description: Represents the returned data in response to a request action.
    DescribeEC2InstanceLimitsInput:
      type: object
      properties:
        EC2InstanceType:
          $ref: "#/components/schemas/EC2InstanceType"
      description: Represents the input for a request action.
    DescribeFleetAttributesOutput:
      type: object
      properties:
        FleetAttributes:
          $ref: "#/components/schemas/FleetAttributesList"
        NextToken:
          $ref: "#/components/schemas/NonZeroAndMaxString"
      description: Represents the returned data in response to a request action.
    DescribeFleetAttributesInput:
      type: object
      properties:
        FleetIds:
          $ref: "#/components/schemas/FleetIdList"
        Limit:
          $ref: "#/components/schemas/PositiveInteger"
        NextToken:
          $ref: "#/components/schemas/NonZeroAndMaxString"
      description: Represents the input for a request action.
    DescribeFleetCapacityOutput:
      type: object
      properties:
        FleetCapacity:
          $ref: "#/components/schemas/FleetCapacityList"
        NextToken:
          $ref: "#/components/schemas/NonZeroAndMaxString"
      description: Represents the returned data in response to a request action.
    DescribeFleetCapacityInput:
      type: object
      properties:
        FleetIds:
          $ref: "#/components/schemas/FleetIdList"
        Limit:
          $ref: "#/components/schemas/PositiveInteger"
        NextToken:
          $ref: "#/components/schemas/NonZeroAndMaxString"
      description: Represents the input for a request action.
    DescribeFleetEventsOutput:
      type: object
      properties:
        Events:
          $ref: "#/components/schemas/EventList"
        NextToken:
          $ref: "#/components/schemas/NonZeroAndMaxString"
      description: Represents the returned data in response to a request action.
    DescribeFleetEventsInput:
      type: object
      required:
        - FleetId
      properties:
        FleetId:
          $ref: "#/components/schemas/FleetId"
        StartTime:
          $ref: "#/components/schemas/Timestamp"
        EndTime:
          $ref: "#/components/schemas/Timestamp"
        Limit:
          $ref: "#/components/schemas/PositiveInteger"
        NextToken:
          $ref: "#/components/schemas/NonZeroAndMaxString"
      description: Represents the input for a request action.
    DescribeFleetPortSettingsOutput:
      type: object
      properties:
        InboundPermissions:
          $ref: "#/components/schemas/IpPermissionsList"
      description: Represents the returned data in response to a request action.
    DescribeFleetPortSettingsInput:
      type: object
      required:
        - FleetId
      properties:
        FleetId:
          $ref: "#/components/schemas/FleetId"
      description: Represents the input for a request action.
    DescribeFleetUtilizationOutput:
      type: object
      properties:
        FleetUtilization:
          $ref: "#/components/schemas/FleetUtilizationList"
        NextToken:
          $ref: "#/components/schemas/NonZeroAndMaxString"
      description: Represents the returned data in response to a request action.
    DescribeFleetUtilizationInput:
      type: object
      properties:
        FleetIds:
          $ref: "#/components/schemas/FleetIdList"
        Limit:
          $ref: "#/components/schemas/PositiveInteger"
        NextToken:
          $ref: "#/components/schemas/NonZeroAndMaxString"
      description: Represents the input for a request action.
    DescribeGameSessionDetailsOutput:
      type: object
      properties:
        GameSessionDetails:
          $ref: "#/components/schemas/GameSessionDetailList"
        NextToken:
          $ref: "#/components/schemas/NonZeroAndMaxString"
      description: Represents the returned data in response to a request action.
    DescribeGameSessionDetailsInput:
      type: object
      properties:
        FleetId:
          $ref: "#/components/schemas/FleetId"
        GameSessionId:
          $ref: "#/components/schemas/ArnStringModel"
        AliasId:
          $ref: "#/components/schemas/AliasId"
        StatusFilter:
          $ref: "#/components/schemas/NonZeroAndMaxString"
        Limit:
          $ref: "#/components/schemas/PositiveInteger"
        NextToken:
          $ref: "#/components/schemas/NonZeroAndMaxString"
      description: Represents the input for a request action.
    DescribeGameSessionPlacementOutput:
      type: object
      properties:
        GameSessionPlacement:
          $ref: "#/components/schemas/GameSessionPlacement"
      description: Represents the returned data in response to a request action.
    DescribeGameSessionPlacementInput:
      type: object
      required:
        - PlacementId
      properties:
        PlacementId:
          $ref: "#/components/schemas/IdStringModel"
      description: Represents the input for a request action.
    DescribeGameSessionQueuesOutput:
      type: object
      properties:
        GameSessionQueues:
          $ref: "#/components/schemas/GameSessionQueueList"
        NextToken:
          $ref: "#/components/schemas/NonZeroAndMaxString"
      description: Represents the returned data in response to a request action.
    DescribeGameSessionQueuesInput:
      type: object
      properties:
        Names:
          $ref: "#/components/schemas/GameSessionQueueNameList"
        Limit:
          $ref: "#/components/schemas/PositiveInteger"
        NextToken:
          $ref: "#/components/schemas/NonZeroAndMaxString"
      description: Represents the input for a request action.
    DescribeGameSessionsOutput:
      type: object
      properties:
        GameSessions:
          $ref: "#/components/schemas/GameSessionList"
        NextToken:
          $ref: "#/components/schemas/NonZeroAndMaxString"
      description: Represents the returned data in response to a request action.
    DescribeGameSessionsInput:
      type: object
      properties:
        FleetId:
          $ref: "#/components/schemas/FleetId"
        GameSessionId:
          $ref: "#/components/schemas/ArnStringModel"
        AliasId:
          $ref: "#/components/schemas/AliasId"
        StatusFilter:
          $ref: "#/components/schemas/NonZeroAndMaxString"
        Limit:
          $ref: "#/components/schemas/PositiveInteger"
        NextToken:
          $ref: "#/components/schemas/NonZeroAndMaxString"
      description: Represents the input for a request action.
    DescribeInstancesOutput:
      type: object
      properties:
        Instances:
          $ref: "#/components/schemas/InstanceList"
        NextToken:
          $ref: "#/components/schemas/NonZeroAndMaxString"
      description: Represents the returned data in response to a request action.
    DescribeInstancesInput:
      type: object
      required:
        - FleetId
      properties:
        FleetId:
          $ref: "#/components/schemas/FleetId"
        InstanceId:
          $ref: "#/components/schemas/InstanceId"
        Limit:
          $ref: "#/components/schemas/PositiveInteger"
        NextToken:
          $ref: "#/components/schemas/NonZeroAndMaxString"
      description: Represents the input for a request action.
    DescribeMatchmakingOutput:
      type: object
      properties:
        TicketList:
          $ref: "#/components/schemas/MatchmakingTicketList"
      description: Represents the returned data in response to a request action.
    DescribeMatchmakingInput:
      type: object
      required:
        - TicketIds
      properties:
        TicketIds:
          $ref: "#/components/schemas/MatchmakingIdList"
      description: Represents the input for a request action.
    DescribeMatchmakingConfigurationsOutput:
      type: object
      properties:
        Configurations:
          $ref: "#/components/schemas/MatchmakingConfigurationList"
        NextToken:
          $ref: "#/components/schemas/NonZeroAndMaxString"
      description: Represents the returned data in response to a request action.
    DescribeMatchmakingConfigurationsInput:
      type: object
      properties:
        Names:
          $ref: "#/components/schemas/MatchmakingIdList"
        RuleSetName:
          $ref: "#/components/schemas/MatchmakingIdStringModel"
        Limit:
          $ref: "#/components/schemas/PositiveInteger"
        NextToken:
          $ref: "#/components/schemas/NonZeroAndMaxString"
      description: Represents the input for a request action.
    DescribeMatchmakingRuleSetsOutput:
      type: object
      required:
        - RuleSets
      properties:
        RuleSets:
          $ref: "#/components/schemas/MatchmakingRuleSetList"
        NextToken:
          $ref: "#/components/schemas/NonZeroAndMaxString"
      description: Represents the returned data in response to a request action.
    DescribeMatchmakingRuleSetsInput:
      type: object
      properties:
        Names:
          $ref: "#/components/schemas/MatchmakingRuleSetNameList"
        Limit:
          $ref: "#/components/schemas/RuleSetLimit"
        NextToken:
          $ref: "#/components/schemas/NonZeroAndMaxString"
      description: Represents the input for a request action.
    DescribePlayerSessionsOutput:
      type: object
      properties:
        PlayerSessions:
          $ref: "#/components/schemas/PlayerSessionList"
        NextToken:
          $ref: "#/components/schemas/NonZeroAndMaxString"
      description: Represents the returned data in response to a request action.
    DescribePlayerSessionsInput:
      type: object
      properties:
        GameSessionId:
          $ref: "#/components/schemas/ArnStringModel"
        PlayerId:
          $ref: "#/components/schemas/NonZeroAndMaxString"
        PlayerSessionId:
          $ref: "#/components/schemas/PlayerSessionId"
        PlayerSessionStatusFilter:
          $ref: "#/components/schemas/NonZeroAndMaxString"
        Limit:
          $ref: "#/components/schemas/PositiveInteger"
        NextToken:
          $ref: "#/components/schemas/NonZeroAndMaxString"
      description: Represents the input for a request action.
    DescribeRuntimeConfigurationOutput:
      type: object
      properties:
        RuntimeConfiguration:
          $ref: "#/components/schemas/RuntimeConfiguration"
      description: Represents the returned data in response to a request action.
    DescribeRuntimeConfigurationInput:
      type: object
      required:
        - FleetId
      properties:
        FleetId:
          $ref: "#/components/schemas/FleetId"
      description: Represents the input for a request action.
    DescribeScalingPoliciesOutput:
      type: object
      properties:
        ScalingPolicies:
          $ref: "#/components/schemas/ScalingPolicyList"
        NextToken:
          $ref: "#/components/schemas/NonZeroAndMaxString"
      description: Represents the returned data in response to a request action.
    DescribeScalingPoliciesInput:
      type: object
      required:
        - FleetId
      properties:
        FleetId:
          $ref: "#/components/schemas/FleetId"
        StatusFilter:
          $ref: "#/components/schemas/ScalingStatusType"
        Limit:
          $ref: "#/components/schemas/PositiveInteger"
        NextToken:
          $ref: "#/components/schemas/NonZeroAndMaxString"
      description: Represents the input for a request action.
    DescribeScriptOutput:
      type: object
      properties:
        Script:
          $ref: "#/components/schemas/Script"
    DescribeScriptInput:
      type: object
      required:
        - ScriptId
      properties:
        ScriptId:
          $ref: "#/components/schemas/ScriptId"
    DescribeVpcPeeringAuthorizationsOutput:
      type: object
      properties:
        VpcPeeringAuthorizations:
          $ref: "#/components/schemas/VpcPeeringAuthorizationList"
    DescribeVpcPeeringAuthorizationsInput:
      type: object
      properties: {}
    DescribeVpcPeeringConnectionsOutput:
      type: object
      properties:
        VpcPeeringConnections:
          $ref: "#/components/schemas/VpcPeeringConnectionList"
      description: Represents the returned data in response to a request action.
    DescribeVpcPeeringConnectionsInput:
      type: object
      properties:
        FleetId:
          $ref: "#/components/schemas/FleetId"
      description: Represents the input for a request action.
    GetGameSessionLogUrlOutput:
      type: object
      properties:
        PreSignedUrl:
          $ref: "#/components/schemas/NonZeroAndMaxString"
      description: Represents the returned data in response to a request action.
    GetGameSessionLogUrlInput:
      type: object
      required:
        - GameSessionId
      properties:
        GameSessionId:
          $ref: "#/components/schemas/ArnStringModel"
      description: Represents the input for a request action.
    GetInstanceAccessOutput:
      type: object
      properties:
        InstanceAccess:
          $ref: "#/components/schemas/InstanceAccess"
      description: Represents the returned data in response to a request action.
    GetInstanceAccessInput:
      type: object
      required:
        - FleetId
        - InstanceId
      properties:
        FleetId:
          $ref: "#/components/schemas/FleetId"
        InstanceId:
          $ref: "#/components/schemas/InstanceId"
      description: Represents the input for a request action.
    ListAliasesOutput:
      type: object
      properties:
        Aliases:
          $ref: "#/components/schemas/AliasList"
        NextToken:
          $ref: "#/components/schemas/NonEmptyString"
      description: Represents the returned data in response to a request action.
    ListAliasesInput:
      type: object
      properties:
        RoutingStrategyType:
          $ref: "#/components/schemas/RoutingStrategyType"
        Name:
          $ref: "#/components/schemas/NonEmptyString"
        Limit:
          $ref: "#/components/schemas/PositiveInteger"
        NextToken:
          $ref: "#/components/schemas/NonEmptyString"
      description: Represents the input for a request action.
    ListBuildsOutput:
      type: object
      properties:
        Builds:
          $ref: "#/components/schemas/BuildList"
        NextToken:
          $ref: "#/components/schemas/NonEmptyString"
      description: Represents the returned data in response to a request action.
    ListBuildsInput:
      type: object
      properties:
        Status:
          $ref: "#/components/schemas/BuildStatus"
        Limit:
          $ref: "#/components/schemas/PositiveInteger"
        NextToken:
          $ref: "#/components/schemas/NonEmptyString"
      description: Represents the input for a request action.
    ListFleetsOutput:
      type: object
      properties:
        FleetIds:
          $ref: "#/components/schemas/FleetIdList"
        NextToken:
          $ref: "#/components/schemas/NonZeroAndMaxString"
      description: Represents the returned data in response to a request action.
    ListFleetsInput:
      type: object
      properties:
        BuildId:
          $ref: "#/components/schemas/BuildId"
        ScriptId:
          $ref: "#/components/schemas/ScriptId"
        Limit:
          $ref: "#/components/schemas/PositiveInteger"
        NextToken:
          $ref: "#/components/schemas/NonZeroAndMaxString"
      description: Represents the input for a request action.
    ListScriptsOutput:
      type: object
      properties:
        Scripts:
          $ref: "#/components/schemas/ScriptList"
        NextToken:
          $ref: "#/components/schemas/NonEmptyString"
    ListScriptsInput:
      type: object
      properties:
        Limit:
          $ref: "#/components/schemas/PositiveInteger"
        NextToken:
          $ref: "#/components/schemas/NonEmptyString"
    PutScalingPolicyOutput:
      type: object
      properties:
        Name:
          $ref: "#/components/schemas/NonZeroAndMaxString"
      description: Represents the returned data in response to a request action.
    PutScalingPolicyInput:
      type: object
      required:
        - Name
        - FleetId
        - MetricName
      properties:
        Name:
          $ref: "#/components/schemas/NonZeroAndMaxString"
        FleetId:
          $ref: "#/components/schemas/FleetId"
        ScalingAdjustment:
          $ref: "#/components/schemas/Integer"
        ScalingAdjustmentType:
          $ref: "#/components/schemas/ScalingAdjustmentType"
        Threshold:
          $ref: "#/components/schemas/Double"
        ComparisonOperator:
          $ref: "#/components/schemas/ComparisonOperatorType"
        EvaluationPeriods:
          $ref: "#/components/schemas/PositiveInteger"
        MetricName:
          $ref: "#/components/schemas/MetricName"
        PolicyType:
          $ref: "#/components/schemas/PolicyType"
        TargetConfiguration:
          $ref: "#/components/schemas/TargetConfiguration"
      description: Represents the input for a request action.
    RequestUploadCredentialsOutput:
      type: object
      properties:
        UploadCredentials:
          $ref: "#/components/schemas/AwsCredentials"
        StorageLocation:
          $ref: "#/components/schemas/S3Location"
      description: Represents the returned data in response to a request action.
    RequestUploadCredentialsInput:
      type: object
      required:
        - BuildId
      properties:
        BuildId:
          $ref: "#/components/schemas/BuildId"
      description: Represents the input for a request action.
    ResolveAliasOutput:
      type: object
      properties:
        FleetId:
          $ref: "#/components/schemas/FleetId"
      description: Represents the returned data in response to a request action.
    ResolveAliasInput:
      type: object
      required:
        - AliasId
      properties:
        AliasId:
          $ref: "#/components/schemas/AliasId"
      description: Represents the input for a request action.
    SearchGameSessionsOutput:
      type: object
      properties:
        GameSessions:
          $ref: "#/components/schemas/GameSessionList"
        NextToken:
          $ref: "#/components/schemas/NonZeroAndMaxString"
      description: Represents the returned data in response to a request action.
    SearchGameSessionsInput:
      type: object
      properties:
        FleetId:
          $ref: "#/components/schemas/FleetId"
        AliasId:
          $ref: "#/components/schemas/AliasId"
        FilterExpression:
          $ref: "#/components/schemas/NonZeroAndMaxString"
        SortExpression:
          $ref: "#/components/schemas/NonZeroAndMaxString"
        Limit:
          $ref: "#/components/schemas/PositiveInteger"
        NextToken:
          $ref: "#/components/schemas/NonZeroAndMaxString"
      description: Represents the input for a request action.
    StartFleetActionsOutput:
      type: object
      properties: {}
    StartFleetActionsInput:
      type: object
      required:
        - FleetId
        - Actions
      properties:
        FleetId:
          $ref: "#/components/schemas/FleetId"
        Actions:
          $ref: "#/components/schemas/FleetActionList"
    StartGameSessionPlacementOutput:
      type: object
      properties:
        GameSessionPlacement:
          $ref: "#/components/schemas/GameSessionPlacement"
      description: Represents the returned data in response to a request action.
    StartGameSessionPlacementInput:
      type: object
      required:
        - PlacementId
        - GameSessionQueueName
        - MaximumPlayerSessionCount
      properties:
        PlacementId:
          $ref: "#/components/schemas/IdStringModel"
        GameSessionQueueName:
          $ref: "#/components/schemas/GameSessionQueueName"
        GameProperties:
          $ref: "#/components/schemas/GamePropertyList"
        MaximumPlayerSessionCount:
          $ref: "#/components/schemas/WholeNumber"
        GameSessionName:
          $ref: "#/components/schemas/NonZeroAndMaxString"
        PlayerLatencies:
          $ref: "#/components/schemas/PlayerLatencyList"
        DesiredPlayerSessions:
          $ref: "#/components/schemas/DesiredPlayerSessionList"
        GameSessionData:
          $ref: "#/components/schemas/GameSessionData"
      description: Represents the input for a request action.
    StartMatchBackfillOutput:
      type: object
      properties:
        MatchmakingTicket:
          $ref: "#/components/schemas/MatchmakingTicket"
      description: Represents the returned data in response to a request action.
    StartMatchBackfillInput:
      type: object
      required:
        - ConfigurationName
        - GameSessionArn
        - Players
      properties:
        TicketId:
          $ref: "#/components/schemas/MatchmakingIdStringModel"
        ConfigurationName:
          $ref: "#/components/schemas/MatchmakingIdStringModel"
        GameSessionArn:
          $ref: "#/components/schemas/ArnStringModel"
        Players:
          $ref: "#/components/schemas/PlayerList"
      description: Represents the input for a request action.
    StartMatchmakingOutput:
      type: object
      properties:
        MatchmakingTicket:
          $ref: "#/components/schemas/MatchmakingTicket"
      description: Represents the returned data in response to a request action.
    StartMatchmakingInput:
      type: object
      required:
        - ConfigurationName
        - Players
      properties:
        TicketId:
          $ref: "#/components/schemas/MatchmakingIdStringModel"
        ConfigurationName:
          $ref: "#/components/schemas/MatchmakingIdStringModel"
        Players:
          $ref: "#/components/schemas/PlayerList"
      description: Represents the input for a request action.
    StopFleetActionsOutput:
      type: object
      properties: {}
    StopFleetActionsInput:
      type: object
      required:
        - FleetId
        - Actions
      properties:
        FleetId:
          $ref: "#/components/schemas/FleetId"
        Actions:
          $ref: "#/components/schemas/FleetActionList"
    StopGameSessionPlacementOutput:
      type: object
      properties:
        GameSessionPlacement:
          $ref: "#/components/schemas/GameSessionPlacement"
      description: Represents the returned data in response to a request action.
    StopGameSessionPlacementInput:
      type: object
      required:
        - PlacementId
      properties:
        PlacementId:
          $ref: "#/components/schemas/IdStringModel"
      description: Represents the input for a request action.
    StopMatchmakingOutput:
      type: object
      properties: {}
    StopMatchmakingInput:
      type: object
      required:
        - TicketId
      properties:
        TicketId:
          $ref: "#/components/schemas/MatchmakingIdStringModel"
      description: Represents the input for a request action.
    UpdateAliasOutput:
      type: object
      properties:
        Alias:
          $ref: "#/components/schemas/Alias"
      description: Represents the returned data in response to a request action.
    UpdateAliasInput:
      type: object
      required:
        - AliasId
      properties:
        AliasId:
          $ref: "#/components/schemas/AliasId"
        Name:
          $ref: "#/components/schemas/NonBlankAndLengthConstraintString"
        Description:
          $ref: "#/components/schemas/NonZeroAndMaxString"
        RoutingStrategy:
          $ref: "#/components/schemas/RoutingStrategy"
      description: Represents the input for a request action.
    UpdateBuildOutput:
      type: object
      properties:
        Build:
          $ref: "#/components/schemas/Build"
      description: Represents the returned data in response to a request action.
    UpdateBuildInput:
      type: object
      required:
        - BuildId
      properties:
        BuildId:
          $ref: "#/components/schemas/BuildId"
        Name:
          $ref: "#/components/schemas/NonZeroAndMaxString"
        Version:
          $ref: "#/components/schemas/NonZeroAndMaxString"
      description: Represents the input for a request action.
    UpdateFleetAttributesOutput:
      type: object
      properties:
        FleetId:
          $ref: "#/components/schemas/FleetId"
      description: Represents the returned data in response to a request action.
    UpdateFleetAttributesInput:
      type: object
      required:
        - FleetId
      properties:
        FleetId:
          $ref: "#/components/schemas/FleetId"
        Name:
          $ref: "#/components/schemas/NonZeroAndMaxString"
        Description:
          $ref: "#/components/schemas/NonZeroAndMaxString"
        NewGameSessionProtectionPolicy:
          $ref: "#/components/schemas/ProtectionPolicy"
        ResourceCreationLimitPolicy:
          $ref: "#/components/schemas/ResourceCreationLimitPolicy"
        MetricGroups:
          $ref: "#/components/schemas/MetricGroupList"
      description: Represents the input for a request action.
    UpdateFleetCapacityOutput:
      type: object
      properties:
        FleetId:
          $ref: "#/components/schemas/FleetId"
      description: Represents the returned data in response to a request action.
    UpdateFleetCapacityInput:
      type: object
      required:
        - FleetId
      properties:
        FleetId:
          $ref: "#/components/schemas/FleetId"
        DesiredInstances:
          $ref: "#/components/schemas/WholeNumber"
        MinSize:
          $ref: "#/components/schemas/WholeNumber"
        MaxSize:
          $ref: "#/components/schemas/WholeNumber"
      description: Represents the input for a request action.
    UpdateFleetPortSettingsOutput:
      type: object
      properties:
        FleetId:
          $ref: "#/components/schemas/FleetId"
      description: Represents the returned data in response to a request action.
    UpdateFleetPortSettingsInput:
      type: object
      required:
        - FleetId
      properties:
        FleetId:
          $ref: "#/components/schemas/FleetId"
        InboundPermissionAuthorizations:
          $ref: "#/components/schemas/IpPermissionsList"
        InboundPermissionRevocations:
          $ref: "#/components/schemas/IpPermissionsList"
      description: Represents the input for a request action.
    UpdateGameSessionOutput:
      type: object
      properties:
        GameSession:
          $ref: "#/components/schemas/GameSession"
      description: Represents the returned data in response to a request action.
    UpdateGameSessionInput:
      type: object
      required:
        - GameSessionId
      properties:
        GameSessionId:
          $ref: "#/components/schemas/ArnStringModel"
        MaximumPlayerSessionCount:
          $ref: "#/components/schemas/WholeNumber"
        Name:
          $ref: "#/components/schemas/NonZeroAndMaxString"
        PlayerSessionCreationPolicy:
          $ref: "#/components/schemas/PlayerSessionCreationPolicy"
        ProtectionPolicy:
          $ref: "#/components/schemas/ProtectionPolicy"
      description: Represents the input for a request action.
    UpdateGameSessionQueueOutput:
      type: object
      properties:
        GameSessionQueue:
          $ref: "#/components/schemas/GameSessionQueue"
      description: Represents the returned data in response to a request action.
    UpdateGameSessionQueueInput:
      type: object
      required:
        - Name
      properties:
        Name:
          $ref: "#/components/schemas/GameSessionQueueName"
        TimeoutInSeconds:
          $ref: "#/components/schemas/WholeNumber"
        PlayerLatencyPolicies:
          $ref: "#/components/schemas/PlayerLatencyPolicyList"
        Destinations:
          $ref: "#/components/schemas/GameSessionQueueDestinationList"
      description: Represents the input for a request action.
    UpdateMatchmakingConfigurationOutput:
      type: object
      properties:
        Configuration:
          $ref: "#/components/schemas/MatchmakingConfiguration"
      description: Represents the returned data in response to a request action.
    UpdateMatchmakingConfigurationInput:
      type: object
      required:
        - Name
      properties:
        Name:
          $ref: "#/components/schemas/MatchmakingIdStringModel"
        Description:
          $ref: "#/components/schemas/NonZeroAndMaxString"
        GameSessionQueueArns:
          $ref: "#/components/schemas/QueueArnsList"
        RequestTimeoutSeconds:
          $ref: "#/components/schemas/MatchmakingRequestTimeoutInteger"
        AcceptanceTimeoutSeconds:
          $ref: "#/components/schemas/MatchmakingAcceptanceTimeoutInteger"
        AcceptanceRequired:
          $ref: "#/components/schemas/BooleanModel"
        RuleSetName:
          $ref: "#/components/schemas/MatchmakingIdStringModel"
        NotificationTarget:
          $ref: "#/components/schemas/SnsArnStringModel"
        AdditionalPlayerCount:
          $ref: "#/components/schemas/WholeNumber"
        CustomEventData:
          $ref: "#/components/schemas/CustomEventData"
        GameProperties:
          $ref: "#/components/schemas/GamePropertyList"
        GameSessionData:
          $ref: "#/components/schemas/GameSessionData"
        BackfillMode:
          $ref: "#/components/schemas/BackfillMode"
      description: Represents the input for a request action.
    UpdateRuntimeConfigurationOutput:
      type: object
      properties:
        RuntimeConfiguration:
          $ref: "#/components/schemas/RuntimeConfiguration"
      description: Represents the returned data in response to a request action.
    UpdateRuntimeConfigurationInput:
      type: object
      required:
        - FleetId
        - RuntimeConfiguration
      properties:
        FleetId:
          $ref: "#/components/schemas/FleetId"
        RuntimeConfiguration:
          $ref: "#/components/schemas/RuntimeConfiguration"
      description: Represents the input for a request action.
    UpdateScriptOutput:
      type: object
      properties:
        Script:
          $ref: "#/components/schemas/Script"
    UpdateScriptInput:
      type: object
      required:
        - ScriptId
      properties:
        ScriptId:
          $ref: "#/components/schemas/ScriptId"
        Name:
          $ref: "#/components/schemas/NonZeroAndMaxString"
        Version:
          $ref: "#/components/schemas/NonZeroAndMaxString"
        StorageLocation:
          $ref: "#/components/schemas/S3Location"
        ZipFile:
          $ref: "#/components/schemas/ZipBlob"
    ValidateMatchmakingRuleSetOutput:
      type: object
      properties:
        Valid:
          $ref: "#/components/schemas/BooleanModel"
      description: Represents the returned data in response to a request action.
    ValidateMatchmakingRuleSetInput:
      type: object
      required:
        - RuleSetBody
      properties:
        RuleSetBody:
          $ref: "#/components/schemas/RuleSetBody"
      description: Represents the input for a request action.
    MatchmakingIdStringModel:
      type: string
      pattern: "[a-zA-Z0-9-\\.]*"
      maxLength: 128
    StringList:
      type: array
      items:
        $ref: "#/components/schemas/NonZeroAndMaxString"
    AcceptanceType:
      type: string
      enum:
        - ACCEPT
        - REJECT
    AliasId:
      type: string
      pattern: ^alias-\S+
    NonBlankAndLengthConstraintString:
      type: string
      pattern: .*\S.*
      minLength: 1
      maxLength: 1024
    ArnStringModel:
      type: string
      pattern: "[a-zA-Z0-9:/-]+"
      minLength: 1
      maxLength: 256
    FreeText:
      type: string
    RoutingStrategy:
      type: object
      properties:
        Type:
          $ref: "#/components/schemas/RoutingStrategyType"
        FleetId:
          $ref: "#/components/schemas/FleetId"
        Message:
          $ref: "#/components/schemas/FreeText"
      description: <p>Routing configuration for a fleet alias.</p> <ul> <li> <p>
        <a>CreateAlias</a> </p> </li> <li> <p> <a>ListAliases</a> </p> </li>
        <li> <p> <a>DescribeAlias</a> </p> </li> <li> <p> <a>UpdateAlias</a>
        </p> </li> <li> <p> <a>DeleteAlias</a> </p> </li> <li> <p>
        <a>ResolveAlias</a> </p> </li> </ul>
    Timestamp:
      type: string
      format: date-time
    Alias:
      type: object
      properties:
        AliasId:
          $ref: "#/components/schemas/AliasId"
        Name:
          $ref: "#/components/schemas/NonBlankAndLengthConstraintString"
        AliasArn:
          $ref: "#/components/schemas/ArnStringModel"
        Description:
          $ref: "#/components/schemas/FreeText"
        RoutingStrategy:
          $ref: "#/components/schemas/RoutingStrategy"
        CreationTime:
          $ref: "#/components/schemas/Timestamp"
        LastUpdatedTime:
          $ref: "#/components/schemas/Timestamp"
      description: <p>Properties describing a fleet alias.</p> <ul> <li> <p>
        <a>CreateAlias</a> </p> </li> <li> <p> <a>ListAliases</a> </p> </li>
        <li> <p> <a>DescribeAlias</a> </p> </li> <li> <p> <a>UpdateAlias</a>
        </p> </li> <li> <p> <a>DeleteAlias</a> </p> </li> <li> <p>
        <a>ResolveAlias</a> </p> </li> </ul>
    AliasList:
      type: array
      items:
        $ref: "#/components/schemas/Alias"
    NonZeroAndMaxString:
      type: string
      minLength: 1
      maxLength: 1024
    DoubleObject:
      type: number
      format: double
    StringDoubleMap:
      type: object
      additionalProperties:
        $ref: "#/components/schemas/DoubleObject"
    AttributeValue:
      type: object
      properties:
        S:
          $ref: "#/components/schemas/NonZeroAndMaxString"
        N:
          $ref: "#/components/schemas/DoubleObject"
        SL:
          $ref: "#/components/schemas/StringList"
        SDM:
          $ref: "#/components/schemas/StringDoubleMap"
      description: "Values for use in <a>Player</a> attribute key:value pairs. This object
        lets you specify an attribute value using any of the valid data types:
        string, number, string array, or data map. Each
        <code>AttributeValue</code> object can use only one of the available
        properties."
    NonEmptyString:
      type: string
      minLength: 1
    AwsCredentials:
      type: object
      properties:
        AccessKeyId:
          $ref: "#/components/schemas/NonEmptyString"
        SecretAccessKey:
          $ref: "#/components/schemas/NonEmptyString"
        SessionToken:
          $ref: "#/components/schemas/NonEmptyString"
      description: Temporary access credentials used for uploading game build files to
        Amazon GameLift. They are valid for a limited time. If they expire
        before you upload your game build, get a new set by calling
        <a>RequestUploadCredentials</a>.
    BackfillMode:
      type: string
      enum:
        - AUTOMATIC
        - MANUAL
    BooleanModel:
      type: boolean
    BuildId:
      type: string
      pattern: ^build-\S+
    BuildStatus:
      type: string
      enum:
        - INITIALIZED
        - READY
        - FAILED
    PositiveLong:
      type: integer
      minimum: 1
    OperatingSystem:
      type: string
      enum:
        - WINDOWS_2012
        - AMAZON_LINUX
    Build:
      type: object
      properties:
        BuildId:
          $ref: "#/components/schemas/BuildId"
        Name:
          $ref: "#/components/schemas/FreeText"
        Version:
          $ref: "#/components/schemas/FreeText"
        Status:
          $ref: "#/components/schemas/BuildStatus"
        SizeOnDisk:
          $ref: "#/components/schemas/PositiveLong"
        OperatingSystem:
          $ref: "#/components/schemas/OperatingSystem"
        CreationTime:
          $ref: "#/components/schemas/Timestamp"
      description: <p>Properties describing a custom game build.</p> <p> <b>Related
        operations</b> </p> <ul> <li> <p> <a>CreateBuild</a> </p> </li> <li> <p>
        <a>ListBuilds</a> </p> </li> <li> <p> <a>DescribeBuild</a> </p> </li>
        <li> <p> <a>UpdateBuild</a> </p> </li> <li> <p> <a>DeleteBuild</a> </p>
        </li> </ul>
    BuildList:
      type: array
      items:
        $ref: "#/components/schemas/Build"
    CertificateType:
      type: string
      enum:
        - DISABLED
        - GENERATED
    CertificateConfiguration:
      type: object
      required:
        - CertificateType
      properties:
        CertificateType:
          $ref: "#/components/schemas/CertificateType"
    ComparisonOperatorType:
      type: string
      enum:
        - GreaterThanOrEqualToThreshold
        - GreaterThanThreshold
        - LessThanThreshold
        - LessThanOrEqualToThreshold
    S3Location:
      type: object
      properties:
        Bucket:
          $ref: "#/components/schemas/NonEmptyString"
        Key:
          $ref: "#/components/schemas/NonEmptyString"
        RoleArn:
          $ref: "#/components/schemas/NonEmptyString"
        ObjectVersion:
          $ref: "#/components/schemas/NonEmptyString"
      description: "Location in Amazon Simple Storage Service (Amazon S3) where build or
        script files are stored for access by Amazon GameLift. This location is
        specified in <a>CreateBuild</a>, <a>CreateScript</a>, and
        <a>UpdateScript</a> requests. "
    ScriptId:
      type: string
      pattern: ^script-\S+|^arn:.*script-\S+
    EC2InstanceType:
      type: string
      enum:
        - t2.micro
        - t2.small
        - t2.medium
        - t2.large
        - c3.large
        - c3.xlarge
        - c3.2xlarge
        - c3.4xlarge
        - c3.8xlarge
        - c4.large
        - c4.xlarge
        - c4.2xlarge
        - c4.4xlarge
        - c4.8xlarge
        - r3.large
        - r3.xlarge
        - r3.2xlarge
        - r3.4xlarge
        - r3.8xlarge
        - r4.large
        - r4.xlarge
        - r4.2xlarge
        - r4.4xlarge
        - r4.8xlarge
        - r4.16xlarge
        - m3.medium
        - m3.large
        - m3.xlarge
        - m3.2xlarge
        - m4.large
        - m4.xlarge
        - m4.2xlarge
        - m4.4xlarge
        - m4.10xlarge
    IpPermissionsList:
      type: array
      items:
        $ref: "#/components/schemas/IpPermission"
      maxItems: 50
    ProtectionPolicy:
      type: string
      enum:
        - NoProtection
        - FullProtection
    RuntimeConfiguration:
      type: object
      properties:
        ServerProcesses:
          $ref: "#/components/schemas/ServerProcessList"
        MaxConcurrentGameSessionActivations:
          $ref: "#/components/schemas/MaxConcurrentGameSessionActivations"
        GameSessionActivationTimeoutSeconds:
          $ref: "#/components/schemas/GameSessionActivationTimeoutSeconds"
      description: <p>A collection of server process configurations that describe what
        processes to run on each instance in a fleet. Server processes run
        either a custom game build executable or a Realtime Servers script. Each
        instance in the fleet starts the specified server processes and
        continues to start new processes as existing processes end. An instance
        regularly checks for an updated run-time configuration. </p> <p>The
        run-time configuration enables the instances in a fleet to run multiple
        processes simultaneously. Learn more about <a
        href="https://docs.aws.amazon.com/gamelift/latest/developerguide/fleets-multiprocess.html">
        Running Multiple Processes on a Fleet </a>.</p> <p>A Amazon GameLift
        instance is limited to 50 processes running simultaneously. To calculate
        the total number of processes in a run-time configuration, add the
        values of the <code>ConcurrentExecutions</code> parameter for each
        <a>ServerProcess</a> object.</p> <ul> <li> <p> <a>CreateFleet</a> </p>
        </li> <li> <p> <a>ListFleets</a> </p> </li> <li> <p> <a>DeleteFleet</a>
        </p> </li> <li> <p>Describe fleets:</p> <ul> <li> <p>
        <a>DescribeFleetAttributes</a> </p> </li> <li> <p>
        <a>DescribeFleetCapacity</a> </p> </li> <li> <p>
        <a>DescribeFleetPortSettings</a> </p> </li> <li> <p>
        <a>DescribeFleetUtilization</a> </p> </li> <li> <p>
        <a>DescribeRuntimeConfiguration</a> </p> </li> <li> <p>
        <a>DescribeEC2InstanceLimits</a> </p> </li> <li> <p>
        <a>DescribeFleetEvents</a> </p> </li> </ul> </li> <li> <p>Update
        fleets:</p> <ul> <li> <p> <a>UpdateFleetAttributes</a> </p> </li> <li>
        <p> <a>UpdateFleetCapacity</a> </p> </li> <li> <p>
        <a>UpdateFleetPortSettings</a> </p> </li> <li> <p>
        <a>UpdateRuntimeConfiguration</a> </p> </li> </ul> </li> <li> <p>Manage
        fleet actions:</p> <ul> <li> <p> <a>StartFleetActions</a> </p> </li>
        <li> <p> <a>StopFleetActions</a> </p> </li> </ul> </li> </ul>
    ResourceCreationLimitPolicy:
      type: object
      properties:
        NewGameSessionsPerCreator:
          $ref: "#/components/schemas/WholeNumber"
        PolicyPeriodInMinutes:
          $ref: "#/components/schemas/WholeNumber"
      description: '<p>Policy that limits the number of game sessions a player can create
        on the same fleet. This optional policy gives game owners control over
        how players can consume available game server resources. A resource
        creation policy makes the following statement: "An individual player can
        create a maximum number of new game sessions within a specified time
        period".</p> <p>The policy is evaluated when a player tries to create a
        new game session. For example, with a policy of 10 new game sessions and
        a time period of 60 minutes, on receiving a
        <code>CreateGameSession</code> request, Amazon GameLift checks that the
        player (identified by <code>CreatorId</code>) has created fewer than 10
        game sessions in the past 60 minutes.</p>'
    MetricGroupList:
      type: array
      items:
        $ref: "#/components/schemas/MetricGroup"
      maxItems: 1
    FleetType:
      type: string
      enum:
        - ON_DEMAND
        - SPOT
    FleetAttributes:
      type: object
      properties:
        FleetId:
          $ref: "#/components/schemas/FleetId"
        FleetArn:
          $ref: "#/components/schemas/ArnStringModel"
        FleetType:
          $ref: "#/components/schemas/FleetType"
        InstanceType:
          $ref: "#/components/schemas/EC2InstanceType"
        Description:
          $ref: "#/components/schemas/NonZeroAndMaxString"
        Name:
          $ref: "#/components/schemas/NonZeroAndMaxString"
        CreationTime:
          $ref: "#/components/schemas/Timestamp"
        TerminationTime:
          $ref: "#/components/schemas/Timestamp"
        Status:
          $ref: "#/components/schemas/FleetStatus"
        BuildId:
          $ref: "#/components/schemas/BuildId"
        ScriptId:
          $ref: "#/components/schemas/ScriptId"
        ServerLaunchPath:
          $ref: "#/components/schemas/NonZeroAndMaxString"
        ServerLaunchParameters:
          $ref: "#/components/schemas/NonZeroAndMaxString"
        LogPaths:
          $ref: "#/components/schemas/StringList"
        NewGameSessionProtectionPolicy:
          $ref: "#/components/schemas/ProtectionPolicy"
        OperatingSystem:
          $ref: "#/components/schemas/OperatingSystem"
        ResourceCreationLimitPolicy:
          $ref: "#/components/schemas/ResourceCreationLimitPolicy"
        MetricGroups:
          $ref: "#/components/schemas/MetricGroupList"
        StoppedActions:
          $ref: "#/components/schemas/FleetActionList"
        InstanceRoleArn:
          $ref: "#/components/schemas/NonEmptyString"
        CertificateConfiguration:
          $ref: "#/components/schemas/CertificateConfiguration"
      description: <p>General properties describing a fleet.</p> <ul> <li> <p>
        <a>CreateFleet</a> </p> </li> <li> <p> <a>ListFleets</a> </p> </li> <li>
        <p> <a>DeleteFleet</a> </p> </li> <li> <p>Describe fleets:</p> <ul> <li>
        <p> <a>DescribeFleetAttributes</a> </p> </li> <li> <p>
        <a>DescribeFleetCapacity</a> </p> </li> <li> <p>
        <a>DescribeFleetPortSettings</a> </p> </li> <li> <p>
        <a>DescribeFleetUtilization</a> </p> </li> <li> <p>
        <a>DescribeRuntimeConfiguration</a> </p> </li> <li> <p>
        <a>DescribeEC2InstanceLimits</a> </p> </li> <li> <p>
        <a>DescribeFleetEvents</a> </p> </li> </ul> </li> <li> <p>Update
        fleets:</p> <ul> <li> <p> <a>UpdateFleetAttributes</a> </p> </li> <li>
        <p> <a>UpdateFleetCapacity</a> </p> </li> <li> <p>
        <a>UpdateFleetPortSettings</a> </p> </li> <li> <p>
        <a>UpdateRuntimeConfiguration</a> </p> </li> </ul> </li> <li> <p>Manage
        fleet actions:</p> <ul> <li> <p> <a>StartFleetActions</a> </p> </li>
        <li> <p> <a>StopFleetActions</a> </p> </li> </ul> </li> </ul>
    FleetId:
      type: string
      pattern: ^fleet-\S+
    WholeNumber:
      type: integer
      minimum: 0
    GamePropertyList:
      type: array
      items:
        $ref: "#/components/schemas/GameProperty"
      maxItems: 16
    IdStringModel:
      type: string
      pattern: "[a-zA-Z0-9-]+"
      minLength: 1
      maxLength: 48
    GameSessionData:
      type: string
      minLength: 1
      maxLength: 4096
    GameSession:
      type: object
      properties:
        GameSessionId:
          $ref: "#/components/schemas/NonZeroAndMaxString"
        Name:
          $ref: "#/components/schemas/NonZeroAndMaxString"
        FleetId:
          $ref: "#/components/schemas/FleetId"
        CreationTime:
          $ref: "#/components/schemas/Timestamp"
        TerminationTime:
          $ref: "#/components/schemas/Timestamp"
        CurrentPlayerSessionCount:
          $ref: "#/components/schemas/WholeNumber"
        MaximumPlayerSessionCount:
          $ref: "#/components/schemas/WholeNumber"
        Status:
          $ref: "#/components/schemas/GameSessionStatus"
        StatusReason:
          $ref: "#/components/schemas/GameSessionStatusReason"
        GameProperties:
          $ref: "#/components/schemas/GamePropertyList"
        IpAddress:
          $ref: "#/components/schemas/IpAddress"
        DnsName:
          $ref: "#/components/schemas/DnsName"
        Port:
          $ref: "#/components/schemas/PortNumber"
        PlayerSessionCreationPolicy:
          $ref: "#/components/schemas/PlayerSessionCreationPolicy"
        CreatorId:
          $ref: "#/components/schemas/NonZeroAndMaxString"
        GameSessionData:
          $ref: "#/components/schemas/GameSessionData"
        MatchmakerData:
          $ref: "#/components/schemas/MatchmakerData"
      description: <p>Properties describing a game session.</p> <p>A game session in ACTIVE
        status can host players. When a game session ends, its status is set to
        <code>TERMINATED</code>. </p> <p>Once the session ends, the game session
        object is retained for 30 days. This means you can reuse idempotency
        token values after this time. Game session logs are retained for 14
        days.</p> <ul> <li> <p> <a>CreateGameSession</a> </p> </li> <li> <p>
        <a>DescribeGameSessions</a> </p> </li> <li> <p>
        <a>DescribeGameSessionDetails</a> </p> </li> <li> <p>
        <a>SearchGameSessions</a> </p> </li> <li> <p> <a>UpdateGameSession</a>
        </p> </li> <li> <p> <a>GetGameSessionLogUrl</a> </p> </li> <li> <p>Game
        session placements</p> <ul> <li> <p> <a>StartGameSessionPlacement</a>
        </p> </li> <li> <p> <a>DescribeGameSessionPlacement</a> </p> </li> <li>
        <p> <a>StopGameSessionPlacement</a> </p> </li> </ul> </li> </ul>
    GameSessionQueueName:
      type: string
      pattern: "[a-zA-Z0-9-]+"
      minLength: 1
      maxLength: 128
    PlayerLatencyPolicyList:
      type: array
      items:
        $ref: "#/components/schemas/PlayerLatencyPolicy"
    GameSessionQueueDestinationList:
      type: array
      items:
        $ref: "#/components/schemas/GameSessionQueueDestination"
    GameSessionQueue:
      type: object
      properties:
        Name:
          $ref: "#/components/schemas/GameSessionQueueName"
        GameSessionQueueArn:
          $ref: "#/components/schemas/ArnStringModel"
        TimeoutInSeconds:
          $ref: "#/components/schemas/WholeNumber"
        PlayerLatencyPolicies:
          $ref: "#/components/schemas/PlayerLatencyPolicyList"
        Destinations:
          $ref: "#/components/schemas/GameSessionQueueDestinationList"
      description: <p>Configuration of a queue that is used to process game session
        placement requests. The queue configuration identifies several game
        features:</p> <ul> <li> <p>The destinations where a new game session can
        potentially be hosted. Amazon GameLift tries these destinations in an
        order based on either the queue's default order or player latency
        information, if provided in a placement request. With latency
        information, Amazon GameLift can place game sessions where the majority
        of players are reporting the lowest possible latency. </p> </li> <li>
        <p>The length of time that placement requests can wait in the queue
        before timing out. </p> </li> <li> <p>A set of optional latency policies
        that protect individual players from high latencies, preventing game
        sessions from being placed where any individual player is reporting
        latency higher than a policy's maximum.</p> </li> </ul> <ul> <li> <p>
        <a>CreateGameSessionQueue</a> </p> </li> <li> <p>
        <a>DescribeGameSessionQueues</a> </p> </li> <li> <p>
        <a>UpdateGameSessionQueue</a> </p> </li> <li> <p>
        <a>DeleteGameSessionQueue</a> </p> </li> </ul>
    QueueArnsList:
      type: array
      items:
        $ref: "#/components/schemas/ArnStringModel"
    MatchmakingRequestTimeoutInteger:
      type: integer
      minimum: 1
      maximum: 43200
    MatchmakingAcceptanceTimeoutInteger:
      type: integer
      minimum: 1
      maximum: 600
    SnsArnStringModel:
      type: string
      pattern: "[a-zA-Z0-9:_/-]*"
      minLength: 0
      maxLength: 300
    CustomEventData:
      type: string
      minLength: 0
      maxLength: 256
    MatchmakingConfiguration:
      type: object
      properties:
        Name:
          $ref: "#/components/schemas/MatchmakingIdStringModel"
        Description:
          $ref: "#/components/schemas/NonZeroAndMaxString"
        GameSessionQueueArns:
          $ref: "#/components/schemas/QueueArnsList"
        RequestTimeoutSeconds:
          $ref: "#/components/schemas/MatchmakingRequestTimeoutInteger"
        AcceptanceTimeoutSeconds:
          $ref: "#/components/schemas/MatchmakingAcceptanceTimeoutInteger"
        AcceptanceRequired:
          $ref: "#/components/schemas/BooleanModel"
        RuleSetName:
          $ref: "#/components/schemas/MatchmakingIdStringModel"
        NotificationTarget:
          $ref: "#/components/schemas/SnsArnStringModel"
        AdditionalPlayerCount:
          $ref: "#/components/schemas/WholeNumber"
        CustomEventData:
          $ref: "#/components/schemas/CustomEventData"
        CreationTime:
          $ref: "#/components/schemas/Timestamp"
        GameProperties:
          $ref: "#/components/schemas/GamePropertyList"
        GameSessionData:
          $ref: "#/components/schemas/GameSessionData"
        BackfillMode:
          $ref: "#/components/schemas/BackfillMode"
      description: Guidelines for use with FlexMatch to match players into games. All
        matchmaking requests must specify a matchmaking configuration.
    RuleSetBody:
      type: string
      minLength: 1
      maxLength: 65535
    MatchmakingRuleSet:
      type: object
      required:
        - RuleSetBody
      properties:
        RuleSetName:
          $ref: "#/components/schemas/MatchmakingIdStringModel"
        RuleSetBody:
          $ref: "#/components/schemas/RuleSetBody"
        CreationTime:
          $ref: "#/components/schemas/Timestamp"
      description: <p>Set of rule statements, used with FlexMatch, that determine how to
        build your player matches. Each rule set describes a type of group to be
        created and defines the parameters for acceptable player matches. Rule
        sets are used in <a>MatchmakingConfiguration</a> objects.</p> <p>A rule
        set may define the following elements for a match. For detailed
        information and examples showing how to construct a rule set, see <a
        href="https://docs.aws.amazon.com/gamelift/latest/developerguide/match-rulesets.html">Build
        a FlexMatch Rule Set</a>. </p> <ul> <li> <p>Teams -- Required. A rule
        set must define one or multiple teams for the match and set minimum and
        maximum team sizes. For example, a rule set might describe a 4x4 match
        that requires all eight slots to be filled. </p> </li> <li> <p>Player
        attributes -- Optional. These attributes specify a set of player
        characteristics to evaluate when looking for a match. Matchmaking
        requests that use a rule set with player attributes must provide the
        corresponding attribute values. For example, an attribute might specify
        a player's skill or level.</p> </li> <li> <p>Rules -- Optional. Rules
        define how to evaluate potential players for a match based on player
        attributes. A rule might specify minimum requirements for individual
        players, teams, or entire matches. For example, a rule might require
        each player to meet a certain skill level, each team to have at least
        one player in a certain role, or the match to have a minimum average
        skill level. or may describe an entire group--such as all teams must be
        evenly matched or have at least one player in a certain role. </p> </li>
        <li> <p>Expansions -- Optional. Expansions allow you to relax the rules
        after a period of time when no acceptable matches are found. This
        feature lets you balance getting players into games in a reasonable
        amount of time instead of making them wait indefinitely for the best
        possible match. For example, you might use an expansion to increase the
        maximum skill variance between players after 30 seconds.</p> </li> </ul>
    PlayerData:
      type: string
      minLength: 1
      maxLength: 2048
    PlayerSession:
      type: object
      properties:
        PlayerSessionId:
          $ref: "#/components/schemas/PlayerSessionId"
        PlayerId:
          $ref: "#/components/schemas/NonZeroAndMaxString"
        GameSessionId:
          $ref: "#/components/schemas/NonZeroAndMaxString"
        FleetId:
          $ref: "#/components/schemas/FleetId"
        CreationTime:
          $ref: "#/components/schemas/Timestamp"
        TerminationTime:
          $ref: "#/components/schemas/Timestamp"
        Status:
          $ref: "#/components/schemas/PlayerSessionStatus"
        IpAddress:
          $ref: "#/components/schemas/IpAddress"
        DnsName:
          $ref: "#/components/schemas/DnsName"
        Port:
          $ref: "#/components/schemas/PortNumber"
        PlayerData:
          $ref: "#/components/schemas/PlayerData"
      description: <p>Properties describing a player session. Player session objects are
        created either by creating a player session for a specific game session,
        or as part of a game session placement. A player session represents
        either a player reservation for a game session (status
        <code>RESERVED</code>) or actual player activity in a game session
        (status <code>ACTIVE</code>). A player session object (including player
        data) is automatically passed to a game session when the player connects
        to the game session and is validated.</p> <p>When a player disconnects,
        the player session status changes to <code>COMPLETED</code>. Once the
        session ends, the player session object is retained for 30 days and then
        removed.</p> <ul> <li> <p> <a>CreatePlayerSession</a> </p> </li> <li>
        <p> <a>CreatePlayerSessions</a> </p> </li> <li> <p>
        <a>DescribePlayerSessions</a> </p> </li> <li> <p>Game session
        placements</p> <ul> <li> <p> <a>StartGameSessionPlacement</a> </p> </li>
        <li> <p> <a>DescribeGameSessionPlacement</a> </p> </li> <li> <p>
        <a>StopGameSessionPlacement</a> </p> </li> </ul> </li> </ul>
    PlayerIdList:
      type: array
      items:
        $ref: "#/components/schemas/NonZeroAndMaxString"
      minItems: 1
      maxItems: 25
    PlayerDataMap:
      type: object
      additionalProperties:
        $ref: "#/components/schemas/PlayerData"
    PlayerSessionList:
      type: array
      items:
        $ref: "#/components/schemas/PlayerSession"
    ZipBlob:
      type: string
      maxLength: 5000000
    Script:
      type: object
      properties:
        ScriptId:
          $ref: "#/components/schemas/ScriptId"
        Name:
          $ref: "#/components/schemas/NonZeroAndMaxString"
        Version:
          $ref: "#/components/schemas/NonZeroAndMaxString"
        SizeOnDisk:
          $ref: "#/components/schemas/PositiveLong"
        CreationTime:
          $ref: "#/components/schemas/Timestamp"
        StorageLocation:
          $ref: "#/components/schemas/S3Location"
      description: <p>Properties describing a Realtime script.</p> <p> <b>Related
        operations</b> </p> <ul> <li> <p> <a>CreateScript</a> </p> </li> <li>
        <p> <a>ListScripts</a> </p> </li> <li> <p> <a>DescribeScript</a> </p>
        </li> <li> <p> <a>UpdateScript</a> </p> </li> <li> <p>
        <a>DeleteScript</a> </p> </li> </ul>
    VpcPeeringAuthorization:
      type: object
      properties:
        GameLiftAwsAccountId:
          $ref: "#/components/schemas/NonZeroAndMaxString"
        PeerVpcAwsAccountId:
          $ref: "#/components/schemas/NonZeroAndMaxString"
        PeerVpcId:
          $ref: "#/components/schemas/NonZeroAndMaxString"
        CreationTime:
          $ref: "#/components/schemas/Timestamp"
        ExpirationTime:
          $ref: "#/components/schemas/Timestamp"
      description: <p>Represents an authorization for a VPC peering connection between the
        VPC for an Amazon GameLift fleet and another VPC on an account you have
        access to. This authorization must exist and be valid for the peering
        connection to be established. Authorizations are valid for 24 hours
        after they are issued.</p> <ul> <li> <p>
        <a>CreateVpcPeeringAuthorization</a> </p> </li> <li> <p>
        <a>DescribeVpcPeeringAuthorizations</a> </p> </li> <li> <p>
        <a>DeleteVpcPeeringAuthorization</a> </p> </li> <li> <p>
        <a>CreateVpcPeeringConnection</a> </p> </li> <li> <p>
        <a>DescribeVpcPeeringConnections</a> </p> </li> <li> <p>
        <a>DeleteVpcPeeringConnection</a> </p> </li> </ul>
    EC2InstanceLimitList:
      type: array
      items:
        $ref: "#/components/schemas/EC2InstanceLimit"
    FleetIdList:
      type: array
      items:
        $ref: "#/components/schemas/FleetId"
      minItems: 1
    PositiveInteger:
      type: integer
      minimum: 1
    FleetAttributesList:
      type: array
      items:
        $ref: "#/components/schemas/FleetAttributes"
    FleetCapacityList:
      type: array
      items:
        $ref: "#/components/schemas/FleetCapacity"
    EventList:
      type: array
      items:
        $ref: "#/components/schemas/Event"
    FleetUtilizationList:
      type: array
      items:
        $ref: "#/components/schemas/FleetUtilization"
    GameSessionDetailList:
      type: array
      items:
        $ref: "#/components/schemas/GameSessionDetail"
    GameSessionPlacement:
      type: object
      properties:
        PlacementId:
          $ref: "#/components/schemas/IdStringModel"
        GameSessionQueueName:
          $ref: "#/components/schemas/GameSessionQueueName"
        Status:
          $ref: "#/components/schemas/GameSessionPlacementState"
        GameProperties:
          $ref: "#/components/schemas/GamePropertyList"
        MaximumPlayerSessionCount:
          $ref: "#/components/schemas/WholeNumber"
        GameSessionName:
          $ref: "#/components/schemas/NonZeroAndMaxString"
        GameSessionId:
          $ref: "#/components/schemas/NonZeroAndMaxString"
        GameSessionArn:
          $ref: "#/components/schemas/NonZeroAndMaxString"
        GameSessionRegion:
          $ref: "#/components/schemas/NonZeroAndMaxString"
        PlayerLatencies:
          $ref: "#/components/schemas/PlayerLatencyList"
        StartTime:
          $ref: "#/components/schemas/Timestamp"
        EndTime:
          $ref: "#/components/schemas/Timestamp"
        IpAddress:
          $ref: "#/components/schemas/IpAddress"
        DnsName:
          $ref: "#/components/schemas/DnsName"
        Port:
          $ref: "#/components/schemas/PortNumber"
        PlacedPlayerSessions:
          $ref: "#/components/schemas/PlacedPlayerSessionList"
        GameSessionData:
          $ref: "#/components/schemas/GameSessionData"
        MatchmakerData:
          $ref: "#/components/schemas/MatchmakerData"
      description: <p>Object that describes a <a>StartGameSessionPlacement</a> request.
        This object includes the full details of the original request plus the
        current status and start/end time stamps.</p> <p>Game session
        placement-related operations include:</p> <ul> <li> <p>
        <a>StartGameSessionPlacement</a> </p> </li> <li> <p>
        <a>DescribeGameSessionPlacement</a> </p> </li> <li> <p>
        <a>StopGameSessionPlacement</a> </p> </li> </ul>
    GameSessionQueueNameList:
      type: array
      items:
        $ref: "#/components/schemas/GameSessionQueueName"
    GameSessionQueueList:
      type: array
      items:
        $ref: "#/components/schemas/GameSessionQueue"
    GameSessionList:
      type: array
      items:
        $ref: "#/components/schemas/GameSession"
    InstanceId:
      type: string
      pattern: "[a-zA-Z0-9\\.-]+"
    InstanceList:
      type: array
      items:
        $ref: "#/components/schemas/Instance"
    MatchmakingIdList:
      type: array
      items:
        $ref: "#/components/schemas/MatchmakingIdStringModel"
    MatchmakingConfigurationList:
      type: array
      items:
        $ref: "#/components/schemas/MatchmakingConfiguration"
    MatchmakingTicketList:
      type: array
      items:
        $ref: "#/components/schemas/MatchmakingTicket"
    MatchmakingRuleSetNameList:
      type: array
      items:
        $ref: "#/components/schemas/MatchmakingIdStringModel"
      minItems: 1
      maxItems: 10
    RuleSetLimit:
      type: integer
      minimum: 1
      maximum: 10
    MatchmakingRuleSetList:
      type: array
      items:
        $ref: "#/components/schemas/MatchmakingRuleSet"
    PlayerSessionId:
      type: string
      pattern: ^psess-\S+
    ScalingStatusType:
      type: string
      enum:
        - ACTIVE
        - UPDATE_REQUESTED
        - UPDATING
        - DELETE_REQUESTED
        - DELETING
        - DELETED
        - ERROR
    ScalingPolicyList:
      type: array
      items:
        $ref: "#/components/schemas/ScalingPolicy"
    VpcPeeringAuthorizationList:
      type: array
      items:
        $ref: "#/components/schemas/VpcPeeringAuthorization"
    VpcPeeringConnectionList:
      type: array
      items:
        $ref: "#/components/schemas/VpcPeeringConnection"
    DesiredPlayerSession:
      type: object
      properties:
        PlayerId:
          $ref: "#/components/schemas/NonZeroAndMaxString"
        PlayerData:
          $ref: "#/components/schemas/PlayerData"
      description: Player information for use when creating player sessions using a game
        session placement request with <a>StartGameSessionPlacement</a>.
    DesiredPlayerSessionList:
      type: array
      items:
        $ref: "#/components/schemas/DesiredPlayerSession"
    DnsName:
      type: string
    Double:
      type: number
      format: double
    EC2InstanceCounts:
      type: object
      properties:
        DESIRED:
          $ref: "#/components/schemas/WholeNumber"
        MINIMUM:
          $ref: "#/components/schemas/WholeNumber"
        MAXIMUM:
          $ref: "#/components/schemas/WholeNumber"
        PENDING:
          $ref: "#/components/schemas/WholeNumber"
        ACTIVE:
          $ref: "#/components/schemas/WholeNumber"
        IDLE:
          $ref: "#/components/schemas/WholeNumber"
        TERMINATING:
          $ref: "#/components/schemas/WholeNumber"
      description: <p>Current status of fleet capacity. The number of active instances
        should match or be in the process of matching the number of desired
        instances. Pending and terminating counts are non-zero only if fleet
        capacity is adjusting to an <a>UpdateFleetCapacity</a> request, or if
        access to resources is temporarily affected.</p> <ul> <li> <p>
        <a>CreateFleet</a> </p> </li> <li> <p> <a>ListFleets</a> </p> </li> <li>
        <p> <a>DeleteFleet</a> </p> </li> <li> <p>Describe fleets:</p> <ul> <li>
        <p> <a>DescribeFleetAttributes</a> </p> </li> <li> <p>
        <a>DescribeFleetCapacity</a> </p> </li> <li> <p>
        <a>DescribeFleetPortSettings</a> </p> </li> <li> <p>
        <a>DescribeFleetUtilization</a> </p> </li> <li> <p>
        <a>DescribeRuntimeConfiguration</a> </p> </li> <li> <p>
        <a>DescribeEC2InstanceLimits</a> </p> </li> <li> <p>
        <a>DescribeFleetEvents</a> </p> </li> </ul> </li> <li> <p>Update
        fleets:</p> <ul> <li> <p> <a>UpdateFleetAttributes</a> </p> </li> <li>
        <p> <a>UpdateFleetCapacity</a> </p> </li> <li> <p>
        <a>UpdateFleetPortSettings</a> </p> </li> <li> <p>
        <a>UpdateRuntimeConfiguration</a> </p> </li> </ul> </li> <li> <p>Manage
        fleet actions:</p> <ul> <li> <p> <a>StartFleetActions</a> </p> </li>
        <li> <p> <a>StopFleetActions</a> </p> </li> </ul> </li> </ul>
    EC2InstanceLimit:
      type: object
      properties:
        EC2InstanceType:
          $ref: "#/components/schemas/EC2InstanceType"
        CurrentInstances:
          $ref: "#/components/schemas/WholeNumber"
        InstanceLimit:
          $ref: "#/components/schemas/WholeNumber"
      description: Maximum number of instances allowed based on the Amazon Elastic Compute
        Cloud (Amazon EC2) instance type. Instance limits can be retrieved by
        calling <a>DescribeEC2InstanceLimits</a>.
    EventCode:
      type: string
      enum:
        - GENERIC_EVENT
        - FLEET_CREATED
        - FLEET_DELETED
        - FLEET_SCALING_EVENT
        - FLEET_STATE_DOWNLOADING
        - FLEET_STATE_VALIDATING
        - FLEET_STATE_BUILDING
        - FLEET_STATE_ACTIVATING
        - FLEET_STATE_ACTIVE
        - FLEET_STATE_ERROR
        - FLEET_INITIALIZATION_FAILED
        - FLEET_BINARY_DOWNLOAD_FAILED
        - FLEET_VALIDATION_LAUNCH_PATH_NOT_FOUND
        - FLEET_VALIDATION_EXECUTABLE_RUNTIME_FAILURE
        - FLEET_VALIDATION_TIMED_OUT
        - FLEET_ACTIVATION_FAILED
        - FLEET_ACTIVATION_FAILED_NO_INSTANCES
        - FLEET_NEW_GAME_SESSION_PROTECTION_POLICY_UPDATED
        - SERVER_PROCESS_INVALID_PATH
        - SERVER_PROCESS_SDK_INITIALIZATION_TIMEOUT
        - SERVER_PROCESS_PROCESS_READY_TIMEOUT
        - SERVER_PROCESS_CRASHED
        - SERVER_PROCESS_TERMINATED_UNHEALTHY
        - SERVER_PROCESS_FORCE_TERMINATED
        - SERVER_PROCESS_PROCESS_EXIT_TIMEOUT
        - GAME_SESSION_ACTIVATION_TIMEOUT
        - FLEET_CREATION_EXTRACTING_BUILD
        - FLEET_CREATION_RUNNING_INSTALLER
        - FLEET_CREATION_VALIDATING_RUNTIME_CONFIG
        - FLEET_VPC_PEERING_SUCCEEDED
        - FLEET_VPC_PEERING_FAILED
        - FLEET_VPC_PEERING_DELETED
        - INSTANCE_INTERRUPTED
    Event:
      type: object
      properties:
        EventId:
          $ref: "#/components/schemas/NonZeroAndMaxString"
        ResourceId:
          $ref: "#/components/schemas/NonZeroAndMaxString"
        EventCode:
          $ref: "#/components/schemas/EventCode"
        Message:
          $ref: "#/components/schemas/NonEmptyString"
        EventTime:
          $ref: "#/components/schemas/Timestamp"
        PreSignedLogUrl:
          $ref: "#/components/schemas/NonZeroAndMaxString"
      description: Log entry describing an event that involves Amazon GameLift resources
        (such as a fleet). In addition to tracking activity, event codes and
        messages can provide additional information for troubleshooting and
        debugging problems.
    FleetAction:
      type: string
      enum:
        - AUTO_SCALING
    FleetActionList:
      type: array
      items:
        $ref: "#/components/schemas/FleetAction"
      minItems: 1
      maxItems: 1
    FleetStatus:
      type: string
      enum:
        - NEW
        - DOWNLOADING
        - VALIDATING
        - BUILDING
        - ACTIVATING
        - ACTIVE
        - DELETING
        - ERROR
        - TERMINATED
    FleetCapacity:
      type: object
      properties:
        FleetId:
          $ref: "#/components/schemas/FleetId"
        InstanceType:
          $ref: "#/components/schemas/EC2InstanceType"
        InstanceCounts:
          $ref: "#/components/schemas/EC2InstanceCounts"
      description: <p>Information about the fleet's capacity. Fleet capacity is measured in
        EC2 instances. By default, new fleets have a capacity of one instance,
        but can be updated as needed. The maximum number of instances for a
        fleet is determined by the fleet's instance type.</p> <ul> <li> <p>
        <a>CreateFleet</a> </p> </li> <li> <p> <a>ListFleets</a> </p> </li> <li>
        <p> <a>DeleteFleet</a> </p> </li> <li> <p>Describe fleets:</p> <ul> <li>
        <p> <a>DescribeFleetAttributes</a> </p> </li> <li> <p>
        <a>DescribeFleetCapacity</a> </p> </li> <li> <p>
        <a>DescribeFleetPortSettings</a> </p> </li> <li> <p>
        <a>DescribeFleetUtilization</a> </p> </li> <li> <p>
        <a>DescribeRuntimeConfiguration</a> </p> </li> <li> <p>
        <a>DescribeEC2InstanceLimits</a> </p> </li> <li> <p>
        <a>DescribeFleetEvents</a> </p> </li> </ul> </li> <li> <p>Update
        fleets:</p> <ul> <li> <p> <a>UpdateFleetAttributes</a> </p> </li> <li>
        <p> <a>UpdateFleetCapacity</a> </p> </li> <li> <p>
        <a>UpdateFleetPortSettings</a> </p> </li> <li> <p>
        <a>UpdateRuntimeConfiguration</a> </p> </li> </ul> </li> <li> <p>Manage
        fleet actions:</p> <ul> <li> <p> <a>StartFleetActions</a> </p> </li>
        <li> <p> <a>StopFleetActions</a> </p> </li> </ul> </li> </ul>
    FleetUtilization:
      type: object
      properties:
        FleetId:
          $ref: "#/components/schemas/FleetId"
        ActiveServerProcessCount:
          $ref: "#/components/schemas/WholeNumber"
        ActiveGameSessionCount:
          $ref: "#/components/schemas/WholeNumber"
        CurrentPlayerSessionCount:
          $ref: "#/components/schemas/WholeNumber"
        MaximumPlayerSessionCount:
          $ref: "#/components/schemas/WholeNumber"
      description: <p>Current status of fleet utilization, including the number of game and
        player sessions being hosted.</p> <ul> <li> <p> <a>CreateFleet</a> </p>
        </li> <li> <p> <a>ListFleets</a> </p> </li> <li> <p> <a>DeleteFleet</a>
        </p> </li> <li> <p>Describe fleets:</p> <ul> <li> <p>
        <a>DescribeFleetAttributes</a> </p> </li> <li> <p>
        <a>DescribeFleetCapacity</a> </p> </li> <li> <p>
        <a>DescribeFleetPortSettings</a> </p> </li> <li> <p>
        <a>DescribeFleetUtilization</a> </p> </li> <li> <p>
        <a>DescribeRuntimeConfiguration</a> </p> </li> <li> <p>
        <a>DescribeEC2InstanceLimits</a> </p> </li> <li> <p>
        <a>DescribeFleetEvents</a> </p> </li> </ul> </li> <li> <p>Update
        fleets:</p> <ul> <li> <p> <a>UpdateFleetAttributes</a> </p> </li> <li>
        <p> <a>UpdateFleetCapacity</a> </p> </li> <li> <p>
        <a>UpdateFleetPortSettings</a> </p> </li> <li> <p>
        <a>UpdateRuntimeConfiguration</a> </p> </li> </ul> </li> <li> <p>Manage
        fleet actions:</p> <ul> <li> <p> <a>StartFleetActions</a> </p> </li>
        <li> <p> <a>StopFleetActions</a> </p> </li> </ul> </li> </ul>
    Float:
      type: number
      format: float
    GamePropertyKey:
      type: string
      maxLength: 32
    GamePropertyValue:
      type: string
      maxLength: 96
    GameProperty:
      type: object
      required:
        - Key
        - Value
      properties:
        Key:
          $ref: "#/components/schemas/GamePropertyKey"
        Value:
          $ref: "#/components/schemas/GamePropertyValue"
      description: Set of key-value pairs that contain information about a game session.
        When included in a game session request, these properties communicate
        details to be used when setting up the new game session, such as to
        specify a game mode, level, or map. Game properties are passed to the
        game server process when initiating a new game session; the server
        process uses the properties as appropriate. For more information, see
        the <a
        href="https://docs.aws.amazon.com/gamelift/latest/developerguide/gamelift-sdk-client-api.html#gamelift-sdk-client-api-create">
        Amazon GameLift Developer Guide</a>.
    GameSessionStatus:
      type: string
      enum:
        - ACTIVE
        - ACTIVATING
        - TERMINATED
        - TERMINATING
        - ERROR
    GameSessionStatusReason:
      type: string
      enum:
        - INTERRUPTED
    IpAddress:
      type: string
    PortNumber:
      type: integer
      minimum: 1
      maximum: 60000
    PlayerSessionCreationPolicy:
      type: string
      enum:
        - ACCEPT_ALL
        - DENY_ALL
    MatchmakerData:
      type: string
      minLength: 1
      maxLength: 390000
    GameSessionActivationTimeoutSeconds:
      type: integer
      minimum: 1
      maximum: 600
    StringModel:
      type: string
    MatchedPlayerSessionList:
      type: array
      items:
        $ref: "#/components/schemas/MatchedPlayerSession"
    GameSessionConnectionInfo:
      type: object
      properties:
        GameSessionArn:
          $ref: "#/components/schemas/ArnStringModel"
        IpAddress:
          $ref: "#/components/schemas/StringModel"
        DnsName:
          $ref: "#/components/schemas/DnsName"
        Port:
          $ref: "#/components/schemas/PositiveInteger"
        MatchedPlayerSessions:
          $ref: "#/components/schemas/MatchedPlayerSessionList"
      description: Connection information for the new game session that is created with
        matchmaking. (with <a>StartMatchmaking</a>). Once a match is set, the
        FlexMatch engine places the match and creates a new game session for it.
        This information, including the game session endpoint and player
        sessions for each player in the original matchmaking request, is added
        to the <a>MatchmakingTicket</a>, which can be retrieved by calling
        <a>DescribeMatchmaking</a>.
    GameSessionDetail:
      type: object
      properties:
        GameSession:
          $ref: "#/components/schemas/GameSession"
        ProtectionPolicy:
          $ref: "#/components/schemas/ProtectionPolicy"
      description: A game session's properties plus the protection policy currently in
        force.
    GameSessionPlacementState:
      type: string
      enum:
        - PENDING
        - FULFILLED
        - CANCELLED
        - TIMED_OUT
        - FAILED
    PlayerLatencyList:
      type: array
      items:
        $ref: "#/components/schemas/PlayerLatency"
    PlacedPlayerSessionList:
      type: array
      items:
        $ref: "#/components/schemas/PlacedPlayerSession"
    GameSessionQueueDestination:
      type: object
      properties:
        DestinationArn:
          $ref: "#/components/schemas/ArnStringModel"
      description: <p>Fleet designated in a game session queue. Requests for new game
        sessions in the queue are fulfilled by starting a new game session on
        any destination configured for a queue. </p> <ul> <li> <p>
        <a>CreateGameSessionQueue</a> </p> </li> <li> <p>
        <a>DescribeGameSessionQueues</a> </p> </li> <li> <p>
        <a>UpdateGameSessionQueue</a> </p> </li> <li> <p>
        <a>DeleteGameSessionQueue</a> </p> </li> </ul>
    InstanceAccess:
      type: object
      properties:
        FleetId:
          $ref: "#/components/schemas/FleetId"
        InstanceId:
          $ref: "#/components/schemas/InstanceId"
        IpAddress:
          $ref: "#/components/schemas/IpAddress"
        OperatingSystem:
          $ref: "#/components/schemas/OperatingSystem"
        Credentials:
          $ref: "#/components/schemas/InstanceCredentials"
      description: "Information required to remotely connect to a fleet instance. Access is
        requested by calling <a>GetInstanceAccess</a>. "
    InstanceStatus:
      type: string
      enum:
        - PENDING
        - ACTIVE
        - TERMINATING
    Instance:
      type: object
      properties:
        FleetId:
          $ref: "#/components/schemas/FleetId"
        InstanceId:
          $ref: "#/components/schemas/InstanceId"
        IpAddress:
          $ref: "#/components/schemas/IpAddress"
        DnsName:
          $ref: "#/components/schemas/DnsName"
        OperatingSystem:
          $ref: "#/components/schemas/OperatingSystem"
        Type:
          $ref: "#/components/schemas/EC2InstanceType"
        Status:
          $ref: "#/components/schemas/InstanceStatus"
        CreationTime:
          $ref: "#/components/schemas/Timestamp"
      description: Properties that describe an instance of a virtual computing resource
        that hosts one or more game servers. A fleet may contain zero or more
        instances.
    InstanceCredentials:
      type: object
      properties:
        UserName:
          $ref: "#/components/schemas/NonEmptyString"
        Secret:
          $ref: "#/components/schemas/NonEmptyString"
      description: Set of credentials required to remotely access a fleet instance. Access
        credentials are requested by calling <a>GetInstanceAccess</a> and
        returned in an <a>InstanceAccess</a> object.
    Integer:
      type: integer
    NonBlankString:
      type: string
      pattern: "[^\\s]+"
    IpProtocol:
      type: string
      enum:
        - TCP
        - UDP
    IpPermission:
      type: object
      required:
        - FromPort
        - ToPort
        - IpRange
        - Protocol
      properties:
        FromPort:
          $ref: "#/components/schemas/PortNumber"
        ToPort:
          $ref: "#/components/schemas/PortNumber"
        IpRange:
          $ref: "#/components/schemas/NonBlankString"
        Protocol:
          $ref: "#/components/schemas/IpProtocol"
      description: A range of IP addresses and port settings that allow inbound traffic to
        connect to server processes on an Amazon GameLift. New game sessions
        that are started on the fleet are assigned an IP address/port number
        combination, which must fall into the fleet's allowed ranges. For fleets
        created with a custom game server, the ranges reflect the server's game
        session assignments. For Realtime Servers fleets, Amazon GameLift
        automatically opens two port ranges, one for TCP messaging and one for
        UDP for use by the Realtime servers.
    LatencyMap:
      type: object
      additionalProperties:
        $ref: "#/components/schemas/PositiveInteger"
    RoutingStrategyType:
      type: string
      enum:
        - SIMPLE
        - TERMINAL
    ScriptList:
      type: array
      items:
        $ref: "#/components/schemas/Script"
    MatchedPlayerSession:
      type: object
      properties:
        PlayerId:
          $ref: "#/components/schemas/NonZeroAndMaxString"
        PlayerSessionId:
          $ref: "#/components/schemas/PlayerSessionId"
      description: <p>Represents a new player session that is created as a result of a
        successful FlexMatch match. A successful match automatically creates new
        player sessions for every player ID in the original matchmaking request.
        </p> <p>When players connect to the match's game session, they must
        include both player ID and player session ID in order to claim their
        assigned player slot.</p>
    MatchmakingConfigurationStatus:
      type: string
      enum:
        - CANCELLED
        - COMPLETED
        - FAILED
        - PLACING
        - QUEUED
        - REQUIRES_ACCEPTANCE
        - SEARCHING
        - TIMED_OUT
    PlayerList:
      type: array
      items:
        $ref: "#/components/schemas/Player"
    MatchmakingTicket:
      type: object
      properties:
        TicketId:
          $ref: "#/components/schemas/MatchmakingIdStringModel"
        ConfigurationName:
          $ref: "#/components/schemas/MatchmakingIdStringModel"
        Status:
          $ref: "#/components/schemas/MatchmakingConfigurationStatus"
        StatusReason:
          $ref: "#/components/schemas/StringModel"
        StatusMessage:
          $ref: "#/components/schemas/StringModel"
        StartTime:
          $ref: "#/components/schemas/Timestamp"
        EndTime:
          $ref: "#/components/schemas/Timestamp"
        Players:
          $ref: "#/components/schemas/PlayerList"
        GameSessionConnectionInfo:
          $ref: "#/components/schemas/GameSessionConnectionInfo"
        EstimatedWaitTime:
          $ref: "#/components/schemas/WholeNumber"
      description: Ticket generated to track the progress of a matchmaking request. Each
        ticket is uniquely identified by a ticket ID, supplied by the requester,
        when creating a matchmaking request with <a>StartMatchmaking</a>.
        Tickets can be retrieved by calling <a>DescribeMatchmaking</a> with the
        ticket ID.
    MaxConcurrentGameSessionActivations:
      type: integer
      minimum: 1
      maximum: 2147483647
    MetricGroup:
      type: string
      minLength: 1
      maxLength: 255
    MetricName:
      type: string
      enum:
        - ActivatingGameSessions
        - ActiveGameSessions
        - ActiveInstances
        - AvailableGameSessions
        - AvailablePlayerSessions
        - CurrentPlayerSessions
        - IdleInstances
        - PercentAvailableGameSessions
        - PercentIdleInstances
        - QueueDepth
        - WaitTime
    PlacedPlayerSession:
      type: object
      properties:
        PlayerId:
          $ref: "#/components/schemas/NonZeroAndMaxString"
        PlayerSessionId:
          $ref: "#/components/schemas/PlayerSessionId"
      description: <p>Information about a player session that was created as part of a
        <a>StartGameSessionPlacement</a> request. This object contains only the
        player ID and player session ID. To retrieve full details on a player
        session, call <a>DescribePlayerSessions</a> with the player session
        ID.</p> <ul> <li> <p> <a>CreatePlayerSession</a> </p> </li> <li> <p>
        <a>CreatePlayerSessions</a> </p> </li> <li> <p>
        <a>DescribePlayerSessions</a> </p> </li> <li> <p>Game session
        placements</p> <ul> <li> <p> <a>StartGameSessionPlacement</a> </p> </li>
        <li> <p> <a>DescribeGameSessionPlacement</a> </p> </li> <li> <p>
        <a>StopGameSessionPlacement</a> </p> </li> </ul> </li> </ul>
    PlayerAttributeMap:
      type: object
      additionalProperties:
        $ref: "#/components/schemas/AttributeValue"
    Player:
      type: object
      properties:
        PlayerId:
          $ref: "#/components/schemas/NonZeroAndMaxString"
        PlayerAttributes:
          $ref: "#/components/schemas/PlayerAttributeMap"
        Team:
          $ref: "#/components/schemas/NonZeroAndMaxString"
        LatencyInMs:
          $ref: "#/components/schemas/LatencyMap"
      description: Represents a player in matchmaking. When starting a matchmaking request,
        a player has a player ID, attributes, and may have latency data. Team
        information is added after a match has been successfully completed.
    PlayerLatency:
      type: object
      properties:
        PlayerId:
          $ref: "#/components/schemas/NonZeroAndMaxString"
        RegionIdentifier:
          $ref: "#/components/schemas/NonZeroAndMaxString"
        LatencyInMilliseconds:
          $ref: "#/components/schemas/Float"
      description: "Regional latency information for a player, used when requesting a new
        game session with <a>StartGameSessionPlacement</a>. This value indicates
        the amount of time lag that exists when the player is connected to a
        fleet in the specified region. The relative difference between a
        player's latency values for multiple regions are used to determine which
        fleets are best suited to place a new game session for the player. "
    PlayerLatencyPolicy:
      type: object
      properties:
        MaximumIndividualPlayerLatencyMilliseconds:
          $ref: "#/components/schemas/WholeNumber"
        PolicyDurationSeconds:
          $ref: "#/components/schemas/WholeNumber"
      description: <p>Queue setting that determines the highest latency allowed for
        individual players when placing a game session. When a latency policy is
        in force, a game session cannot be placed at any destination in a region
        where a player is reporting latency higher than the cap. Latency
        policies are only enforced when the placement request contains player
        latency information.</p> <ul> <li> <p> <a>CreateGameSessionQueue</a>
        </p> </li> <li> <p> <a>DescribeGameSessionQueues</a> </p> </li> <li> <p>
        <a>UpdateGameSessionQueue</a> </p> </li> <li> <p>
        <a>DeleteGameSessionQueue</a> </p> </li> </ul>
    PlayerSessionStatus:
      type: string
      enum:
        - RESERVED
        - ACTIVE
        - COMPLETED
        - TIMEDOUT
    PolicyType:
      type: string
      enum:
        - RuleBased
        - TargetBased
    ScalingAdjustmentType:
      type: string
      enum:
        - ChangeInCapacity
        - ExactCapacity
        - PercentChangeInCapacity
    TargetConfiguration:
      type: object
      required:
        - TargetValue
      properties:
        TargetValue:
          $ref: "#/components/schemas/Double"
      description: <p>Settings for a target-based scaling policy (see <a>ScalingPolicy</a>.
        A target-based policy tracks a particular fleet metric specifies a
        target value for the metric. As player usage changes, the policy
        triggers Amazon GameLift to adjust capacity so that the metric returns
        to the target value. The target configuration specifies settings as
        needed for the target based policy, including the target value. </p>
        <ul> <li> <p> <a>DescribeFleetCapacity</a> </p> </li> <li> <p>
        <a>UpdateFleetCapacity</a> </p> </li> <li> <p>
        <a>DescribeEC2InstanceLimits</a> </p> </li> <li> <p>Manage scaling
        policies:</p> <ul> <li> <p> <a>PutScalingPolicy</a> (auto-scaling)</p>
        </li> <li> <p> <a>DescribeScalingPolicies</a> (auto-scaling)</p> </li>
        <li> <p> <a>DeleteScalingPolicy</a> (auto-scaling)</p> </li> </ul> </li>
        <li> <p>Manage fleet actions:</p> <ul> <li> <p> <a>StartFleetActions</a>
        </p> </li> <li> <p> <a>StopFleetActions</a> </p> </li> </ul> </li> </ul>
    ServerProcessList:
      type: array
      items:
        $ref: "#/components/schemas/ServerProcess"
      minItems: 1
      maxItems: 50
    ScalingPolicy:
      type: object
      properties:
        FleetId:
          $ref: "#/components/schemas/FleetId"
        Name:
          $ref: "#/components/schemas/NonZeroAndMaxString"
        Status:
          $ref: "#/components/schemas/ScalingStatusType"
        ScalingAdjustment:
          $ref: "#/components/schemas/Integer"
        ScalingAdjustmentType:
          $ref: "#/components/schemas/ScalingAdjustmentType"
        ComparisonOperator:
          $ref: "#/components/schemas/ComparisonOperatorType"
        Threshold:
          $ref: "#/components/schemas/Double"
        EvaluationPeriods:
          $ref: "#/components/schemas/PositiveInteger"
        MetricName:
          $ref: "#/components/schemas/MetricName"
        PolicyType:
          $ref: "#/components/schemas/PolicyType"
        TargetConfiguration:
          $ref: "#/components/schemas/TargetConfiguration"
      description: <p>Rule that controls how a fleet is scaled. Scaling policies are
        uniquely identified by the combination of name and fleet ID.</p> <ul>
        <li> <p> <a>DescribeFleetCapacity</a> </p> </li> <li> <p>
        <a>UpdateFleetCapacity</a> </p> </li> <li> <p>
        <a>DescribeEC2InstanceLimits</a> </p> </li> <li> <p>Manage scaling
        policies:</p> <ul> <li> <p> <a>PutScalingPolicy</a> (auto-scaling)</p>
        </li> <li> <p> <a>DescribeScalingPolicies</a> (auto-scaling)</p> </li>
        <li> <p> <a>DeleteScalingPolicy</a> (auto-scaling)</p> </li> </ul> </li>
        <li> <p>Manage fleet actions:</p> <ul> <li> <p> <a>StartFleetActions</a>
        </p> </li> <li> <p> <a>StopFleetActions</a> </p> </li> </ul> </li> </ul>
    ServerProcess:
      type: object
      required:
        - LaunchPath
        - ConcurrentExecutions
      properties:
        LaunchPath:
          $ref: "#/components/schemas/NonZeroAndMaxString"
        Parameters:
          $ref: "#/components/schemas/NonZeroAndMaxString"
        ConcurrentExecutions:
          $ref: "#/components/schemas/PositiveInteger"
      description: A set of instructions for launching server processes on each instance in
        a fleet. Server processes run either a custom game build executable or a
        Realtime Servers script. Each instruction set identifies the location of
        the custom game build executable or Realtime launch script, optional
        launch parameters, and the number of server processes with this
        configuration to maintain concurrently on the instance. Server process
        configurations make up a fleet's <code> <a>RuntimeConfiguration</a>
        </code>.
    VpcPeeringConnectionStatus:
      type: object
      properties:
        Code:
          $ref: "#/components/schemas/NonZeroAndMaxString"
        Message:
          $ref: "#/components/schemas/NonZeroAndMaxString"
      description: Represents status information for a VPC peering connection. Status is
        associated with a <a>VpcPeeringConnection</a> object. Status codes and
        messages are provided from EC2 (see <a
        href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_VpcPeeringConnectionStateReason.html">VpcPeeringConnectionStateReason</a>).
        Connection status information is also communicated as a fleet
        <a>Event</a>.
    VpcPeeringConnection:
      type: object
      properties:
        FleetId:
          $ref: "#/components/schemas/FleetId"
        IpV4CidrBlock:
          $ref: "#/components/schemas/NonZeroAndMaxString"
        VpcPeeringConnectionId:
          $ref: "#/components/schemas/NonZeroAndMaxString"
        Status:
          $ref: "#/components/schemas/VpcPeeringConnectionStatus"
        PeerVpcId:
          $ref: "#/components/schemas/NonZeroAndMaxString"
        GameLiftVpcId:
          $ref: "#/components/schemas/NonZeroAndMaxString"
      description: <p>Represents a peering connection between a VPC on one of your AWS
        accounts and the VPC for your Amazon GameLift fleets. This record may be
        for an active peering connection or a pending connection that has not
        yet been established.</p> <ul> <li> <p>
        <a>CreateVpcPeeringAuthorization</a> </p> </li> <li> <p>
        <a>DescribeVpcPeeringAuthorizations</a> </p> </li> <li> <p>
        <a>DeleteVpcPeeringAuthorization</a> </p> </li> <li> <p>
        <a>CreateVpcPeeringConnection</a> </p> </li> <li> <p>
        <a>DescribeVpcPeeringConnections</a> </p> </li> <li> <p>
        <a>DeleteVpcPeeringConnection</a> </p> </li> </ul>
