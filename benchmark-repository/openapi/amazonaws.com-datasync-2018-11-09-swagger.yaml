openapi: 3.0.0
info:
  version: 2018-11-09
  x-release: v4
  title: AWS DataSync
  description: <fullname>AWS DataSync</fullname> <p>AWS DataSync is a managed data transfer
    service that makes it simpler for you to automate moving data between
    on-premises storage and Amazon Simple Storage Service (Amazon S3) or Amazon
    Elastic File System (Amazon EFS). </p> <p>This API interface reference for
    AWS DataSync contains documentation for a programming interface that you can
    use to manage AWS DataSync.</p>
  x-logo:
    url: https://twitter.com/awscloud/profile_image?size=original
    backgroundColor: "#FFFFFF"
  termsOfService: https://aws.amazon.com/service-terms/
  contact:
    name: Mike Ralphson
    email: mike.ralphson@gmail.com
    url: https://github.com/mermade/aws2openapi
    x-twitter: PermittedSoc
  license:
    name: Apache 2.0 License
    url: http://www.apache.org/licenses/
  x-providerName: amazonaws.com
  x-serviceName: datasync
  x-origin:
    - contentType: application/json
      url: https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/datasync-2018-11-09.normal.json
      converter:
        url: https://github.com/mermade/aws2openapi
        version: 1.0.0
      x-apisguru-direct: true
  x-apiClientRegistration:
    url: https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct
  x-apisguru-categories:
    - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: https://docs.aws.amazon.com/datasync/
x-hasEquivalentPaths: true
security:
  - hmac: []
paths:
  /#X-Amz-Target=FmrsService.CancelTaskExecution:
    post:
      operationId: CancelTaskExecution
      description: <p>Cancels execution of a task. </p> <p>When you cancel a task
        execution, the transfer of some files are abruptly interrupted. The
        contents of files that are transferred to the destination might be
        incomplete or inconsistent with the source files. However, if you start
        a new task execution on the same task and you allow the task execution
        to complete, file content on the destination is complete and consistent.
        This applies to other unexpected failures that interrupt a task
        execution. In all of these cases, AWS DataSync successfully complete the
        transfer when you start the next task execution.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CancelTaskExecutionResponse"
        "480":
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRequestException"
        "481":
          description: InternalException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - FmrsService.CancelTaskExecution
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CancelTaskExecutionRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=FmrsService.CreateAgent:
    post:
      operationId: CreateAgent
      description: <p>Activates an AWS DataSync agent that you have deployed on your host.
        The activation process associates your agent with your account. In the
        activation process, you specify information such as the AWS Region that
        you want to activate the agent in. You activate the agent in the AWS
        Region where your target locations (in Amazon S3 or Amazon EFS) reside.
        Your tasks are created in this AWS Region.</p> <p>You can activate the
        agent in a VPC (Virtual private Cloud) or provide the agent access to a
        VPC endpoint so you can run tasks without going over the public
        Internet.</p> <p>You can use an agent for more than one location. If a
        task uses multiple agents, all of them need to have status AVAILABLE for
        the task to run. If you use multiple agents for a source location, the
        status of all the agents must be AVAILABLE for the task to run. </p>
        <p>Agents are automatically updated by AWS on a regular basis, using a
        mechanism that ensures minimal interruption to your tasks.</p> <p/>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateAgentResponse"
        "480":
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRequestException"
        "481":
          description: InternalException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - FmrsService.CreateAgent
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateAgentRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=FmrsService.CreateLocationEfs:
    post:
      operationId: CreateLocationEfs
      description: Creates an endpoint for an Amazon EFS file system.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateLocationEfsResponse"
        "480":
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRequestException"
        "481":
          description: InternalException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - FmrsService.CreateLocationEfs
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateLocationEfsRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=FmrsService.CreateLocationNfs:
    post:
      operationId: CreateLocationNfs
      description: Creates an endpoint for a Network File System (NFS) file system.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateLocationNfsResponse"
        "480":
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRequestException"
        "481":
          description: InternalException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - FmrsService.CreateLocationNfs
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateLocationNfsRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=FmrsService.CreateLocationS3:
    post:
      operationId: CreateLocationS3
      description: <p>Creates an endpoint for an Amazon S3 bucket.</p> <p>For AWS DataSync
        to access a destination S3 bucket, it needs an AWS Identity and Access
        Management (IAM) role that has the required permissions. You can set up
        the required permissions by creating an IAM policy that grants the
        required permissions and attaching the policy to the role. An example of
        such a policy is shown in the examples section.</p> <p>For more
        information, see
        https://docs.aws.amazon.com/datasync/latest/userguide/working-with-locations.html#create-s3-location
        in the <i>AWS DataSync User Guide.</i> </p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateLocationS3Response"
        "480":
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRequestException"
        "481":
          description: InternalException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - FmrsService.CreateLocationS3
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateLocationS3Request"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=FmrsService.CreateLocationSmb:
    post:
      operationId: CreateLocationSmb
      description: Creates an endpoint for a Server Message Block (SMB) file system.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateLocationSmbResponse"
        "480":
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRequestException"
        "481":
          description: InternalException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - FmrsService.CreateLocationSmb
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateLocationSmbRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=FmrsService.CreateTask:
    post:
      operationId: CreateTask
      description: <p>Creates a task. A task is a set of two locations (source and
        destination) and a set of Options that you use to control the behavior
        of a task. If you don't specify Options when you create a task, AWS
        DataSync populates them with service defaults.</p> <p>When you create a
        task, it first enters the CREATING state. During CREATING AWS DataSync
        attempts to mount the on-premises Network File System (NFS) location.
        The task transitions to the AVAILABLE state without waiting for the AWS
        location to become mounted. If required, AWS DataSync mounts the AWS
        location before each task execution.</p> <p>If an agent that is
        associated with a source (NFS) location goes offline, the task
        transitions to the UNAVAILABLE status. If the status of the task remains
        in the CREATING status for more than a few minutes, it means that your
        agent might be having trouble mounting the source NFS file system. Check
        the task's ErrorCode and ErrorDetail. Mount issues are often caused by
        either a misconfigured firewall or a mistyped NFS server host name.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateTaskResponse"
        "480":
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRequestException"
        "481":
          description: InternalException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - FmrsService.CreateTask
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateTaskRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=FmrsService.DeleteAgent:
    post:
      operationId: DeleteAgent
      description: Deletes an agent. To specify which agent to delete, use the Amazon
        Resource Name (ARN) of the agent in your request. The operation
        disassociates the agent from your AWS account. However, it doesn't
        delete the agent virtual machine (VM) from your on-premises environment.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteAgentResponse"
        "480":
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRequestException"
        "481":
          description: InternalException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - FmrsService.DeleteAgent
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeleteAgentRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=FmrsService.DeleteLocation:
    post:
      operationId: DeleteLocation
      description: "Deletes the configuration of a location used by AWS DataSync. "
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteLocationResponse"
        "480":
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRequestException"
        "481":
          description: InternalException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - FmrsService.DeleteLocation
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeleteLocationRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=FmrsService.DeleteTask:
    post:
      operationId: DeleteTask
      description: Deletes a task.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteTaskResponse"
        "480":
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRequestException"
        "481":
          description: InternalException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - FmrsService.DeleteTask
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeleteTaskRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=FmrsService.DescribeAgent:
    post:
      operationId: DescribeAgent
      description: "Returns metadata such as the name, the network interfaces, and the
        status (that is, whether the agent is running or not) for an agent. To
        specify which agent to describe, use the Amazon Resource Name (ARN) of
        the agent in your request. "
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeAgentResponse"
        "480":
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRequestException"
        "481":
          description: InternalException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - FmrsService.DescribeAgent
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DescribeAgentRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=FmrsService.DescribeLocationEfs:
    post:
      operationId: DescribeLocationEfs
      description: Returns metadata, such as the path information about an Amazon EFS
        location.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeLocationEfsResponse"
        "480":
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRequestException"
        "481":
          description: InternalException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - FmrsService.DescribeLocationEfs
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DescribeLocationEfsRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=FmrsService.DescribeLocationNfs:
    post:
      operationId: DescribeLocationNfs
      description: Returns metadata, such as the path information, about a NFS location.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeLocationNfsResponse"
        "480":
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRequestException"
        "481":
          description: InternalException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - FmrsService.DescribeLocationNfs
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DescribeLocationNfsRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=FmrsService.DescribeLocationS3:
    post:
      operationId: DescribeLocationS3
      description: Returns metadata, such as bucket name, about an Amazon S3 bucket
        location.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeLocationS3Response"
        "480":
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRequestException"
        "481":
          description: InternalException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - FmrsService.DescribeLocationS3
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DescribeLocationS3Request"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=FmrsService.DescribeLocationSmb:
    post:
      operationId: DescribeLocationSmb
      description: Returns metadata, such as the path and user information about a SMB
        location.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeLocationSmbResponse"
        "480":
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRequestException"
        "481":
          description: InternalException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - FmrsService.DescribeLocationSmb
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DescribeLocationSmbRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=FmrsService.DescribeTask:
    post:
      operationId: DescribeTask
      description: Returns metadata about a task.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeTaskResponse"
        "480":
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRequestException"
        "481":
          description: InternalException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - FmrsService.DescribeTask
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DescribeTaskRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=FmrsService.DescribeTaskExecution:
    post:
      operationId: DescribeTaskExecution
      description: Returns detailed metadata about a task that is being executed.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeTaskExecutionResponse"
        "480":
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRequestException"
        "481":
          description: InternalException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - FmrsService.DescribeTaskExecution
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DescribeTaskExecutionRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=FmrsService.ListAgents:
    post:
      operationId: ListAgents
      description: <p>Returns a list of agents owned by an AWS account in the AWS Region
        specified in the request. The returned list is ordered by agent Amazon
        Resource Name (ARN).</p> <p>By default, this operation returns a maximum
        of 100 agents. This operation supports pagination that enables you to
        optionally reduce the number of agents returned in a response.</p> <p>If
        you have more agents than are returned in a response (that is, the
        response returns only a truncated list of your agents), the response
        contains a marker that you can specify in your next request to fetch the
        next page of agents.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListAgentsResponse"
        "480":
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRequestException"
        "481":
          description: InternalException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalException"
      parameters:
        - name: MaxResults
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: NextToken
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - FmrsService.ListAgents
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ListAgentsRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=FmrsService.ListLocations:
    post:
      operationId: ListLocations
      description: <p>Returns a lists of source and destination locations.</p> <p>If you
        have more locations than are returned in a response (that is, the
        response returns only a truncated list of your agents), the response
        contains a token that you can specify in your next request to fetch the
        next page of locations.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListLocationsResponse"
        "480":
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRequestException"
        "481":
          description: InternalException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalException"
      parameters:
        - name: MaxResults
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: NextToken
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - FmrsService.ListLocations
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ListLocationsRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=FmrsService.ListTagsForResource:
    post:
      operationId: ListTagsForResource
      description: "Returns all the tags associated with a specified resources. "
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListTagsForResourceResponse"
        "480":
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRequestException"
        "481":
          description: InternalException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalException"
      parameters:
        - name: MaxResults
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: NextToken
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - FmrsService.ListTagsForResource
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ListTagsForResourceRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=FmrsService.ListTaskExecutions:
    post:
      operationId: ListTaskExecutions
      description: Returns a list of executed tasks.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListTaskExecutionsResponse"
        "480":
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRequestException"
        "481":
          description: InternalException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalException"
      parameters:
        - name: MaxResults
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: NextToken
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - FmrsService.ListTaskExecutions
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ListTaskExecutionsRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=FmrsService.ListTasks:
    post:
      operationId: ListTasks
      description: Returns a list of all the tasks.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListTasksResponse"
        "480":
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRequestException"
        "481":
          description: InternalException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalException"
      parameters:
        - name: MaxResults
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: NextToken
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - FmrsService.ListTasks
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ListTasksRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=FmrsService.StartTaskExecution:
    post:
      operationId: StartTaskExecution
      description: "<p>Starts a specific invocation of a task. A <code>TaskExecution</code>
        value represents an individual run of a task. Each task can have at most
        one <code>TaskExecution</code> at a time.</p> <p>
        <code>TaskExecution</code> has the following transition phases:
        INITIALIZING | PREPARING | TRANSFERRING | VERIFYING | SUCCESS/FAILURE.
        </p> <p>For detailed information, see the Task Execution section in the
        Components and Terminology topic in the <i>AWS DataSync User
        Guide</i>.</p>"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StartTaskExecutionResponse"
        "480":
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRequestException"
        "481":
          description: InternalException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - FmrsService.StartTaskExecution
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/StartTaskExecutionRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=FmrsService.TagResource:
    post:
      operationId: TagResource
      description: Applies a key-value pair to an AWS resource.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TagResourceResponse"
        "480":
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRequestException"
        "481":
          description: InternalException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - FmrsService.TagResource
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TagResourceRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=FmrsService.UntagResource:
    post:
      operationId: UntagResource
      description: Removes a tag from an AWS resource.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UntagResourceResponse"
        "480":
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRequestException"
        "481":
          description: InternalException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - FmrsService.UntagResource
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UntagResourceRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=FmrsService.UpdateAgent:
    post:
      operationId: UpdateAgent
      description: Updates the name of an agent.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateAgentResponse"
        "480":
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRequestException"
        "481":
          description: InternalException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - FmrsService.UpdateAgent
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateAgentRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=FmrsService.UpdateTask:
    post:
      operationId: UpdateTask
      description: Updates the metadata associated with a task.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateTaskResponse"
        "480":
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRequestException"
        "481":
          description: InternalException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - FmrsService.UpdateTask
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateTaskRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
servers:
  - url: http://datasync.{region}.amazonaws.com
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-south-1
          - sa-east-1
        default: us-east-1
    description: The DataSync multi-region endpoint
  - url: https://datasync.{region}.amazonaws.com
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-south-1
          - sa-east-1
        default: us-east-1
    description: The DataSync multi-region endpoint
  - url: http://datasync.{region}.amazonaws.com.cn
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The DataSync endpoint for China (Beijing) and China (Ningxia)
  - url: https://datasync.{region}.amazonaws.com.cn
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The DataSync endpoint for China (Beijing) and China (Ningxia)
components:
  parameters:
    X-Amz-Content-Sha256:
      name: X-Amz-Content-Sha256
      in: header
      required: false
      schema:
        type: string
    X-Amz-Date:
      name: X-Amz-Date
      in: header
      required: false
      schema:
        type: string
    X-Amz-Algorithm:
      name: X-Amz-Algorithm
      in: header
      required: false
      schema:
        type: string
    X-Amz-Credential:
      name: X-Amz-Credential
      in: header
      required: false
      schema:
        type: string
    X-Amz-Security-Token:
      name: X-Amz-Security-Token
      in: header
      required: false
      schema:
        type: string
    X-Amz-Signature:
      name: X-Amz-Signature
      in: header
      required: false
      schema:
        type: string
    X-Amz-SignedHeaders:
      name: X-Amz-SignedHeaders
      in: header
      required: false
      schema:
        type: string
  securitySchemes:
    hmac:
      type: apiKey
      name: Authorization
      in: header
      description: Amazon Signature authorization v4
      x-amazon-apigateway-authtype: awsSigv4
  schemas:
    CancelTaskExecutionResponse:
      type: object
      properties: {}
    CancelTaskExecutionRequest:
      type: object
      required:
        - TaskExecutionArn
      properties:
        TaskExecutionArn:
          $ref: "#/components/schemas/TaskExecutionArn"
      description: CancelTaskExecutionRequest
    InvalidRequestException: {}
    InternalException: {}
    CreateAgentResponse:
      type: object
      properties:
        AgentArn:
          $ref: "#/components/schemas/AgentArn"
      description: CreateAgentResponse
    CreateAgentRequest:
      type: object
      required:
        - ActivationKey
      properties:
        ActivationKey:
          $ref: "#/components/schemas/ActivationKey"
        AgentName:
          $ref: "#/components/schemas/TagValue"
        Tags:
          $ref: "#/components/schemas/TagList"
        VpcEndpointId:
          $ref: "#/components/schemas/VpcEndpointId"
        SubnetArns:
          $ref: "#/components/schemas/PLSubnetArnList"
        SecurityGroupArns:
          $ref: "#/components/schemas/PLSecurityGroupArnList"
      description: CreateAgentRequest
    CreateLocationEfsResponse:
      type: object
      properties:
        LocationArn:
          $ref: "#/components/schemas/LocationArn"
      description: CreateLocationEfs
    CreateLocationEfsRequest:
      type: object
      required:
        - EfsFilesystemArn
        - Ec2Config
      properties:
        Subdirectory:
          $ref: "#/components/schemas/Subdirectory"
        EfsFilesystemArn:
          $ref: "#/components/schemas/EfsFilesystemArn"
        Ec2Config:
          $ref: "#/components/schemas/Ec2Config"
        Tags:
          $ref: "#/components/schemas/TagList"
      description: CreateLocationEfsRequest
    CreateLocationNfsResponse:
      type: object
      properties:
        LocationArn:
          $ref: "#/components/schemas/LocationArn"
      description: CreateLocationNfsResponse
    CreateLocationNfsRequest:
      type: object
      required:
        - Subdirectory
        - ServerHostname
        - OnPremConfig
      properties:
        Subdirectory:
          $ref: "#/components/schemas/NonEmptySubdirectory"
        ServerHostname:
          $ref: "#/components/schemas/ServerHostname"
        OnPremConfig:
          $ref: "#/components/schemas/OnPremConfig"
        MountOptions:
          $ref: "#/components/schemas/NfsMountOptions"
        Tags:
          $ref: "#/components/schemas/TagList"
      description: CreateLocationNfsRequest
    CreateLocationS3Response:
      type: object
      properties:
        LocationArn:
          $ref: "#/components/schemas/LocationArn"
      description: CreateLocationS3Response
    CreateLocationS3Request:
      type: object
      required:
        - S3BucketArn
        - S3Config
      properties:
        Subdirectory:
          $ref: "#/components/schemas/Subdirectory"
        S3BucketArn:
          $ref: "#/components/schemas/S3BucketArn"
        S3StorageClass:
          $ref: "#/components/schemas/S3StorageClass"
        S3Config:
          $ref: "#/components/schemas/S3Config"
        Tags:
          $ref: "#/components/schemas/TagList"
      description: CreateLocationS3Request
    CreateLocationSmbResponse:
      type: object
      properties:
        LocationArn:
          $ref: "#/components/schemas/LocationArn"
      description: CreateLocationSmbResponse
    CreateLocationSmbRequest:
      type: object
      required:
        - Subdirectory
        - ServerHostname
        - User
        - Password
        - AgentArns
      properties:
        Subdirectory:
          $ref: "#/components/schemas/NonEmptySubdirectory"
        ServerHostname:
          $ref: "#/components/schemas/ServerHostname"
        User:
          $ref: "#/components/schemas/SmbUser"
        Domain:
          $ref: "#/components/schemas/SmbDomain"
        Password:
          $ref: "#/components/schemas/SmbPassword"
        AgentArns:
          $ref: "#/components/schemas/AgentArnList"
        MountOptions:
          $ref: "#/components/schemas/SmbMountOptions"
        Tags:
          $ref: "#/components/schemas/TagList"
      description: CreateLocationSmbRequest
    CreateTaskResponse:
      type: object
      properties:
        TaskArn:
          $ref: "#/components/schemas/TaskArn"
      description: CreateTaskResponse
    CreateTaskRequest:
      type: object
      required:
        - SourceLocationArn
        - DestinationLocationArn
      properties:
        SourceLocationArn:
          $ref: "#/components/schemas/LocationArn"
        DestinationLocationArn:
          $ref: "#/components/schemas/LocationArn"
        CloudWatchLogGroupArn:
          $ref: "#/components/schemas/LogGroupArn"
        Name:
          $ref: "#/components/schemas/TagValue"
        Options:
          $ref: "#/components/schemas/Options"
        Excludes:
          $ref: "#/components/schemas/FilterList"
        Tags:
          $ref: "#/components/schemas/TagList"
      description: CreateTaskRequest
    DeleteAgentResponse:
      type: object
      properties: {}
    DeleteAgentRequest:
      type: object
      required:
        - AgentArn
      properties:
        AgentArn:
          $ref: "#/components/schemas/AgentArn"
      description: DeleteAgentRequest
    DeleteLocationResponse:
      type: object
      properties: {}
    DeleteLocationRequest:
      type: object
      required:
        - LocationArn
      properties:
        LocationArn:
          $ref: "#/components/schemas/LocationArn"
      description: DeleteLocation
    DeleteTaskResponse:
      type: object
      properties: {}
    DeleteTaskRequest:
      type: object
      required:
        - TaskArn
      properties:
        TaskArn:
          $ref: "#/components/schemas/TaskArn"
      description: DeleteTask
    DescribeAgentResponse:
      type: object
      properties:
        AgentArn:
          $ref: "#/components/schemas/AgentArn"
        Name:
          $ref: "#/components/schemas/TagValue"
        Status:
          $ref: "#/components/schemas/AgentStatus"
        LastConnectionTime:
          $ref: "#/components/schemas/Time"
        CreationTime:
          $ref: "#/components/schemas/Time"
        EndpointType:
          $ref: "#/components/schemas/EndpointType"
        PrivateLinkConfig:
          $ref: "#/components/schemas/PrivateLinkConfig"
      description: DescribeAgentResponse
    DescribeAgentRequest:
      type: object
      required:
        - AgentArn
      properties:
        AgentArn:
          $ref: "#/components/schemas/AgentArn"
      description: DescribeAgent
    DescribeLocationEfsResponse:
      type: object
      properties:
        LocationArn:
          $ref: "#/components/schemas/LocationArn"
        LocationUri:
          $ref: "#/components/schemas/LocationUri"
        Ec2Config:
          $ref: "#/components/schemas/Ec2Config"
        CreationTime:
          $ref: "#/components/schemas/Time"
      description: DescribeLocationEfsResponse
    DescribeLocationEfsRequest:
      type: object
      required:
        - LocationArn
      properties:
        LocationArn:
          $ref: "#/components/schemas/LocationArn"
      description: DescribeLocationEfsRequest
    DescribeLocationNfsResponse:
      type: object
      properties:
        LocationArn:
          $ref: "#/components/schemas/LocationArn"
        LocationUri:
          $ref: "#/components/schemas/LocationUri"
        OnPremConfig:
          $ref: "#/components/schemas/OnPremConfig"
        MountOptions:
          $ref: "#/components/schemas/NfsMountOptions"
        CreationTime:
          $ref: "#/components/schemas/Time"
      description: DescribeLocationNfsResponse
    DescribeLocationNfsRequest:
      type: object
      required:
        - LocationArn
      properties:
        LocationArn:
          $ref: "#/components/schemas/LocationArn"
      description: DescribeLocationNfsRequest
    DescribeLocationS3Response:
      type: object
      properties:
        LocationArn:
          $ref: "#/components/schemas/LocationArn"
        LocationUri:
          $ref: "#/components/schemas/LocationUri"
        S3StorageClass:
          $ref: "#/components/schemas/S3StorageClass"
        S3Config:
          $ref: "#/components/schemas/S3Config"
        CreationTime:
          $ref: "#/components/schemas/Time"
      description: DescribeLocationS3Response
    DescribeLocationS3Request:
      type: object
      required:
        - LocationArn
      properties:
        LocationArn:
          $ref: "#/components/schemas/LocationArn"
      description: DescribeLocationS3Request
    DescribeLocationSmbResponse:
      type: object
      properties:
        LocationArn:
          $ref: "#/components/schemas/LocationArn"
        LocationUri:
          $ref: "#/components/schemas/LocationUri"
        AgentArns:
          $ref: "#/components/schemas/AgentArnList"
        User:
          $ref: "#/components/schemas/SmbUser"
        Domain:
          $ref: "#/components/schemas/SmbDomain"
        MountOptions:
          $ref: "#/components/schemas/SmbMountOptions"
        CreationTime:
          $ref: "#/components/schemas/Time"
      description: DescribeLocationSmbResponse
    DescribeLocationSmbRequest:
      type: object
      required:
        - LocationArn
      properties:
        LocationArn:
          $ref: "#/components/schemas/LocationArn"
      description: DescribeLocationSmbRequest
    DescribeTaskResponse:
      type: object
      properties:
        TaskArn:
          $ref: "#/components/schemas/TaskArn"
        Status:
          $ref: "#/components/schemas/TaskStatus"
        Name:
          $ref: "#/components/schemas/TagValue"
        CurrentTaskExecutionArn:
          $ref: "#/components/schemas/TaskExecutionArn"
        SourceLocationArn:
          $ref: "#/components/schemas/LocationArn"
        DestinationLocationArn:
          $ref: "#/components/schemas/LocationArn"
        CloudWatchLogGroupArn:
          $ref: "#/components/schemas/LogGroupArn"
        SourceNetworkInterfaceArns:
          $ref: "#/components/schemas/SourceNetworkInterfaceArns"
        DestinationNetworkInterfaceArns:
          $ref: "#/components/schemas/DestinationNetworkInterfaceArns"
        Options:
          $ref: "#/components/schemas/Options"
        Excludes:
          $ref: "#/components/schemas/FilterList"
        ErrorCode:
          $ref: "#/components/schemas/string"
        ErrorDetail:
          $ref: "#/components/schemas/string"
        CreationTime:
          $ref: "#/components/schemas/Time"
      description: DescribeTaskResponse
    DescribeTaskRequest:
      type: object
      required:
        - TaskArn
      properties:
        TaskArn:
          $ref: "#/components/schemas/TaskArn"
      description: DescribeTaskRequest
    DescribeTaskExecutionResponse:
      type: object
      properties:
        TaskExecutionArn:
          $ref: "#/components/schemas/TaskExecutionArn"
        Status:
          $ref: "#/components/schemas/TaskExecutionStatus"
        Options:
          $ref: "#/components/schemas/Options"
        Excludes:
          $ref: "#/components/schemas/FilterList"
        Includes:
          $ref: "#/components/schemas/FilterList"
        StartTime:
          $ref: "#/components/schemas/Time"
        EstimatedFilesToTransfer:
          $ref: "#/components/schemas/long"
        EstimatedBytesToTransfer:
          $ref: "#/components/schemas/long"
        FilesTransferred:
          $ref: "#/components/schemas/long"
        BytesWritten:
          $ref: "#/components/schemas/long"
        BytesTransferred:
          $ref: "#/components/schemas/long"
        Result:
          $ref: "#/components/schemas/TaskExecutionResultDetail"
      description: DescribeTaskExecutionResponse
    DescribeTaskExecutionRequest:
      type: object
      required:
        - TaskExecutionArn
      properties:
        TaskExecutionArn:
          $ref: "#/components/schemas/TaskExecutionArn"
      description: DescribeTaskExecutionRequest
    ListAgentsResponse:
      type: object
      properties:
        Agents:
          $ref: "#/components/schemas/AgentList"
        NextToken:
          $ref: "#/components/schemas/NextToken"
      description: ListAgentsResponse
    ListAgentsRequest:
      type: object
      properties:
        MaxResults:
          $ref: "#/components/schemas/MaxResults"
        NextToken:
          $ref: "#/components/schemas/NextToken"
      description: ListAgentsRequest
    ListLocationsResponse:
      type: object
      properties:
        Locations:
          $ref: "#/components/schemas/LocationList"
        NextToken:
          $ref: "#/components/schemas/NextToken"
      description: ListLocationsResponse
    ListLocationsRequest:
      type: object
      properties:
        MaxResults:
          $ref: "#/components/schemas/MaxResults"
        NextToken:
          $ref: "#/components/schemas/NextToken"
      description: ListLocationsRequest
    ListTagsForResourceResponse:
      type: object
      properties:
        Tags:
          $ref: "#/components/schemas/TagList"
        NextToken:
          $ref: "#/components/schemas/NextToken"
      description: ListTagsForResourceResponse
    ListTagsForResourceRequest:
      type: object
      required:
        - ResourceArn
      properties:
        ResourceArn:
          $ref: "#/components/schemas/TaggableResourceArn"
        MaxResults:
          $ref: "#/components/schemas/MaxResults"
        NextToken:
          $ref: "#/components/schemas/NextToken"
      description: ListTagsForResourceRequest
    ListTaskExecutionsResponse:
      type: object
      properties:
        TaskExecutions:
          $ref: "#/components/schemas/TaskExecutionList"
        NextToken:
          $ref: "#/components/schemas/NextToken"
      description: ListTaskExecutionsResponse
    ListTaskExecutionsRequest:
      type: object
      properties:
        TaskArn:
          $ref: "#/components/schemas/TaskArn"
        MaxResults:
          $ref: "#/components/schemas/MaxResults"
        NextToken:
          $ref: "#/components/schemas/NextToken"
      description: ListTaskExecutions
    ListTasksResponse:
      type: object
      properties:
        Tasks:
          $ref: "#/components/schemas/TaskList"
        NextToken:
          $ref: "#/components/schemas/NextToken"
      description: ListTasksResponse
    ListTasksRequest:
      type: object
      properties:
        MaxResults:
          $ref: "#/components/schemas/MaxResults"
        NextToken:
          $ref: "#/components/schemas/NextToken"
      description: ListTasksRequest
    StartTaskExecutionResponse:
      type: object
      properties:
        TaskExecutionArn:
          $ref: "#/components/schemas/TaskExecutionArn"
      description: StartTaskExecutionResponse
    StartTaskExecutionRequest:
      type: object
      required:
        - TaskArn
      properties:
        TaskArn:
          $ref: "#/components/schemas/TaskArn"
        OverrideOptions:
          $ref: "#/components/schemas/Options"
        Includes:
          $ref: "#/components/schemas/FilterList"
      description: StartTaskExecutionRequest
    TagResourceResponse:
      type: object
      properties: {}
    TagResourceRequest:
      type: object
      required:
        - ResourceArn
        - Tags
      properties:
        ResourceArn:
          $ref: "#/components/schemas/TaggableResourceArn"
        Tags:
          $ref: "#/components/schemas/TagList"
      description: TagResourceRequest
    UntagResourceResponse:
      type: object
      properties: {}
    UntagResourceRequest:
      type: object
      required:
        - ResourceArn
        - Keys
      properties:
        ResourceArn:
          $ref: "#/components/schemas/TaggableResourceArn"
        Keys:
          $ref: "#/components/schemas/TagKeyList"
      description: UntagResourceRequest
    UpdateAgentResponse:
      type: object
      properties: {}
    UpdateAgentRequest:
      type: object
      required:
        - AgentArn
      properties:
        AgentArn:
          $ref: "#/components/schemas/AgentArn"
        Name:
          $ref: "#/components/schemas/TagValue"
      description: UpdateAgentRequest
    UpdateTaskResponse:
      type: object
      properties: {}
    UpdateTaskRequest:
      type: object
      required:
        - TaskArn
      properties:
        TaskArn:
          $ref: "#/components/schemas/TaskArn"
        Options:
          $ref: "#/components/schemas/Options"
        Excludes:
          $ref: "#/components/schemas/FilterList"
        Name:
          $ref: "#/components/schemas/TagValue"
        CloudWatchLogGroupArn:
          $ref: "#/components/schemas/LogGroupArn"
      description: UpdateTaskResponse
    ActivationKey:
      type: string
      pattern: "[A-Z0-9]{5}(-[A-Z0-9]{5}){4}"
      maxLength: 29
    AgentArn:
      type: string
      pattern: ^arn:(aws|aws-cn|aws-us-gov|aws-iso|aws-iso-b):datasync:[a-z\-0-9]+:[0-9]{12}:agent/agent-[0-9a-z]{17}$
      maxLength: 128
    AgentArnList:
      type: array
      items:
        $ref: "#/components/schemas/AgentArn"
      minItems: 1
      maxItems: 64
    AgentListEntry:
      type: object
      properties:
        AgentArn:
          $ref: "#/components/schemas/AgentArn"
        Name:
          $ref: "#/components/schemas/TagValue"
        Status:
          $ref: "#/components/schemas/AgentStatus"
      description: Represents a single entry in a list of agents.
        <code>AgentListEntry</code> returns an array that contains a list of
        agents when the <a>ListAgents</a> operation is called.
    AgentList:
      type: array
      items:
        $ref: "#/components/schemas/AgentListEntry"
    TagValue:
      type: string
      pattern: ^[a-zA-Z0-9\s+=._:/-]+$
      minLength: 1
      maxLength: 256
    AgentStatus:
      type: string
      enum:
        - ONLINE
        - OFFLINE
    Atime:
      type: string
      enum:
        - NONE
        - BEST_EFFORT
    BytesPerSecond:
      type: integer
      minimum: -1
    TaskExecutionArn:
      type: string
      pattern: ^arn:(aws|aws-cn|aws-us-gov|aws-iso|aws-iso-b):datasync:[a-z\-0-9]*:[0-9]{12}:task/task-[0-9a-f]{17}/execution/exec-[0-9a-f]{17}$
      maxLength: 128
    TagList:
      type: array
      items:
        $ref: "#/components/schemas/TagListEntry"
      minItems: 0
      maxItems: 55
    VpcEndpointId:
      type: string
      pattern: ^vpce-[0-9a-f]{17}$
    PLSubnetArnList:
      type: array
      items:
        $ref: "#/components/schemas/Ec2SubnetArn"
      minItems: 1
      maxItems: 1
    PLSecurityGroupArnList:
      type: array
      items:
        $ref: "#/components/schemas/Ec2SecurityGroupArn"
      minItems: 1
      maxItems: 1
    Subdirectory:
      type: string
      pattern: ^[a-zA-Z0-9_\-\./]*$
      maxLength: 4096
    EfsFilesystemArn:
      type: string
      pattern: ^arn:(aws|aws-cn|aws-us-gov|aws-iso|aws-iso-b):elasticfilesystem:[a-z\-0-9]*:[0-9]{12}:file-system/fs-.*$
      maxLength: 128
    Ec2Config:
      type: object
      required:
        - SubnetArn
        - SecurityGroupArns
      properties:
        SubnetArn:
          $ref: "#/components/schemas/Ec2SubnetArn"
        SecurityGroupArns:
          $ref: "#/components/schemas/Ec2SecurityGroupArnList"
      description: "The subnet and the security group that DataSync uses to access target
        EFS file system. The subnet must have at least one mount target for that
        file system. The security group that you provide needs to be able to
        communicate with the security group on the mount target in the subnet
        specified. "
    LocationArn:
      type: string
      pattern: ^arn:(aws|aws-cn|aws-us-gov|aws-iso|aws-iso-b):datasync:[a-z\-0-9]+:[0-9]{12}:location/loc-[0-9a-z]{17}$
      maxLength: 128
    NonEmptySubdirectory:
      type: string
      pattern: ^[a-zA-Z0-9_\-\./]+$
      maxLength: 4096
    ServerHostname:
      type: string
      pattern: ^(([a-zA-Z0-9\-]*[a-zA-Z0-9])\.)*([A-Za-z0-9\-]*[A-Za-z0-9])$
      maxLength: 255
    OnPremConfig:
      type: object
      required:
        - AgentArns
      properties:
        AgentArns:
          $ref: "#/components/schemas/AgentArnList"
      description: A list of Amazon Resource Names (ARNs) of agents to use for a Network
        File System (NFS) location.
    NfsMountOptions:
      type: object
      properties:
        Version:
          $ref: "#/components/schemas/NfsVersion"
      description: Represents the mount options that are available for DataSync to access
        an NFS location.
    S3BucketArn:
      type: string
      pattern: ^arn:(aws|aws-cn|aws-us-gov|aws-iso|aws-iso-b):s3:::([^/]*)$
      maxLength: 76
    S3StorageClass:
      type: string
      enum:
        - STANDARD
        - STANDARD_IA
        - ONEZONE_IA
        - INTELLIGENT_TIERING
        - GLACIER
        - DEEP_ARCHIVE
    S3Config:
      type: object
      required:
        - BucketAccessRoleArn
      properties:
        BucketAccessRoleArn:
          $ref: "#/components/schemas/IamRoleArn"
      description: <p>The Amazon Resource Name (ARN) of the AWS Identity and Access
        Management (IAM) role that is used to access an Amazon S3 bucket.</p>
        <p>For detailed information about using such a role, see Creating a
        Location for Amazon S3 in the <i>AWS DataSync User Guide</i>.</p>
    SmbUser:
      type: string
      pattern: ^[^\\x5B\\x5D\\/:;|=,+*?]{1,104}$
      maxLength: 104
    SmbDomain:
      type: string
      pattern: ^([A-Za-z0-9]+[A-Za-z0-9-.]*)*[A-Za-z0-9-]*[A-Za-z0-9]$
      maxLength: 253
    SmbPassword:
      type: string
      pattern: ^.{0,104}$
      maxLength: 104
    SmbMountOptions:
      type: object
      properties:
        Version:
          $ref: "#/components/schemas/SmbVersion"
      description: Represents the mount options that are available for DataSync to access
        an SMB location.
    LogGroupArn:
      type: string
      pattern: ^arn:(aws|aws-cn|aws-us-gov|aws-iso|aws-iso-b):logs:[a-z\-0-9]*:[0-9]{12}:log-group:([^:\*]*)$
      maxLength: 562
    Options:
      type: object
      properties:
        VerifyMode:
          $ref: "#/components/schemas/VerifyMode"
        OverwriteMode:
          $ref: "#/components/schemas/OverwriteMode"
        Atime:
          $ref: "#/components/schemas/Atime"
        Mtime:
          $ref: "#/components/schemas/Mtime"
        Uid:
          $ref: "#/components/schemas/Uid"
        Gid:
          $ref: "#/components/schemas/Gid"
        PreserveDeletedFiles:
          $ref: "#/components/schemas/PreserveDeletedFiles"
        PreserveDevices:
          $ref: "#/components/schemas/PreserveDevices"
        PosixPermissions:
          $ref: "#/components/schemas/PosixPermissions"
        BytesPerSecond:
          $ref: "#/components/schemas/BytesPerSecond"
      description: <p>Represents the options that are available to control the behavior of
        a <a>StartTaskExecution</a> operation. Behavior includes preserving
        metadata such as user ID (UID), group ID (GID), and file permissions,
        and also overwriting files in the destination, data integrity
        verification, and so on.</p> <p>A task has a set of default options
        associated with it. If you don't specify an option in
        <a>StartTaskExecution</a>, the default value is used. You can override
        the defaults options on each task execution by specifying an overriding
        <code>Options</code> value to <a>StartTaskExecution</a>.</p>
    FilterList:
      type: array
      items:
        $ref: "#/components/schemas/FilterRule"
      minItems: 0
      maxItems: 1
    TaskArn:
      type: string
      pattern: ^arn:(aws|aws-cn|aws-us-gov|aws-iso|aws-iso-b):datasync:[a-z\-0-9]*:[0-9]{12}:task/task-[0-9a-f]{17}$
      maxLength: 128
    Time:
      type: string
      format: date-time
    EndpointType:
      type: string
      enum:
        - PUBLIC
        - PRIVATE_LINK
    PrivateLinkConfig:
      type: object
      properties:
        VpcEndpointId:
          $ref: "#/components/schemas/VpcEndpointId"
        PrivateLinkEndpoint:
          $ref: "#/components/schemas/Endpoint"
        SubnetArns:
          $ref: "#/components/schemas/PLSubnetArnList"
        SecurityGroupArns:
          $ref: "#/components/schemas/PLSecurityGroupArnList"
      description: The VPC endpoint, subnet and security group that an agent uses to access
        IP addresses in a VPC (Virtual Private Cloud).
    LocationUri:
      type: string
      pattern: ^(efs|nfs|s3|smb)://[a-zA-Z0-9.\-]+$
      maxLength: 4355
    TaskExecutionStatus:
      type: string
      enum:
        - LAUNCHING
        - PREPARING
        - TRANSFERRING
        - VERIFYING
        - SUCCESS
        - ERROR
    long:
      type: integer
    TaskExecutionResultDetail:
      type: object
      properties:
        PrepareDuration:
          $ref: "#/components/schemas/Duration"
        PrepareStatus:
          $ref: "#/components/schemas/PhaseStatus"
        TransferDuration:
          $ref: "#/components/schemas/Duration"
        TransferStatus:
          $ref: "#/components/schemas/PhaseStatus"
        VerifyDuration:
          $ref: "#/components/schemas/Duration"
        VerifyStatus:
          $ref: "#/components/schemas/PhaseStatus"
        ErrorCode:
          $ref: "#/components/schemas/string"
        ErrorDetail:
          $ref: "#/components/schemas/string"
      description: Describes the detailed result of a <code>TaskExecution</code> operation.
        This result includes the time in milliseconds spent in each phase, the
        status of the task execution, and the errors encountered.
    TaskStatus:
      type: string
      enum:
        - AVAILABLE
        - CREATING
        - RUNNING
        - UNAVAILABLE
    SourceNetworkInterfaceArns:
      type: array
      items:
        $ref: "#/components/schemas/NetworkInterfaceArn"
    DestinationNetworkInterfaceArns:
      type: array
      items:
        $ref: "#/components/schemas/NetworkInterfaceArn"
    string:
      type: string
    NetworkInterfaceArn:
      type: string
      pattern: ^arn:aws[\-a-z]{0,}:ec2:[a-z\-0-9]*:[0-9]{12}:network-interface/eni-[0-9a-f]+$
      maxLength: 128
    Duration:
      type: integer
      minimum: 0
    Ec2SubnetArn:
      type: string
      pattern: ^arn:(aws|aws-cn|aws-us-gov|aws-iso|aws-iso-b):ec2:[a-z\-0-9]*:[0-9]{12}:subnet/.*$
      maxLength: 128
    Ec2SecurityGroupArnList:
      type: array
      items:
        $ref: "#/components/schemas/Ec2SecurityGroupArn"
      minItems: 1
      maxItems: 5
    Ec2SecurityGroupArn:
      type: string
      pattern: ^arn:(aws|aws-cn|aws-us-gov|aws-iso|aws-iso-b):ec2:[a-z\-0-9]*:[0-9]{12}:security-group/.*$
      maxLength: 128
    Endpoint:
      type: string
      pattern: \A(25[0-5]|2[0-4]\d|[0-1]?\d?\d)(\.(25[0-5]|2[0-4]\d|[0-1]?\d?\d)){3}\z
      minLength: 7
      maxLength: 15
    FilterRule:
      type: object
      properties:
        FilterType:
          $ref: "#/components/schemas/FilterType"
        Value:
          $ref: "#/components/schemas/FilterValue"
      description: Specifies which files, folders and objects to include or exclude when
        transferring files from source to destination.
    FilterType:
      type: string
      enum:
        - SIMPLE_PATTERN
      pattern: ^[A-Z0-9_]+$
      maxLength: 128
    FilterValue:
      type: string
      pattern: ^[^\x00]+$
      maxLength: 409600
    Gid:
      type: string
      enum:
        - NONE
        - INT_VALUE
        - NAME
        - BOTH
    IamRoleArn:
      type: string
      pattern: ^arn:(aws|aws-cn|aws-us-gov|aws-iso|aws-iso-b):iam::[0-9]{12}:role/.*$
      maxLength: 2048
    MaxResults:
      type: integer
      minimum: 0
      maximum: 100
    NextToken:
      type: string
      pattern: "[a-zA-Z0-9=_-]+"
      maxLength: 65535
    LocationList:
      type: array
      items:
        $ref: "#/components/schemas/LocationListEntry"
    TaggableResourceArn:
      type: string
      pattern: ^arn:(aws|aws-cn|aws-us-gov|aws-iso|aws-iso-b):datasync:[a-z\-0-9]+:[0-9]{12}:(agent|task|location)/(agent|task|loc)-[0-9a-z]{17}$
      maxLength: 128
    TaskExecutionList:
      type: array
      items:
        $ref: "#/components/schemas/TaskExecutionListEntry"
    TaskList:
      type: array
      items:
        $ref: "#/components/schemas/TaskListEntry"
    LocationListEntry:
      type: object
      properties:
        LocationArn:
          $ref: "#/components/schemas/LocationArn"
        LocationUri:
          $ref: "#/components/schemas/LocationUri"
      description: Represents a single entry in a list of locations.
        <code>LocationListEntry</code> returns an array that contains a list of
        locations when the <a>ListLocations</a> operation is called.
    Mtime:
      type: string
      enum:
        - NONE
        - PRESERVE
    NfsVersion:
      type: string
      enum:
        - AUTOMATIC
        - NFS3
        - NFS4_0
        - NFS4_1
    VerifyMode:
      type: string
      enum:
        - POINT_IN_TIME_CONSISTENT
        - ONLY_FILES_TRANSFERRED
        - NONE
    OverwriteMode:
      type: string
      enum:
        - ALWAYS
        - NEVER
    Uid:
      type: string
      enum:
        - NONE
        - INT_VALUE
        - NAME
        - BOTH
    PreserveDeletedFiles:
      type: string
      enum:
        - PRESERVE
        - REMOVE
    PreserveDevices:
      type: string
      enum:
        - NONE
        - PRESERVE
    PosixPermissions:
      type: string
      enum:
        - NONE
        - BEST_EFFORT
        - PRESERVE
    PhaseStatus:
      type: string
      enum:
        - PENDING
        - SUCCESS
        - ERROR
    SmbVersion:
      type: string
      enum:
        - AUTOMATIC
        - SMB2
        - SMB3
    TagKey:
      type: string
      pattern: ^[a-zA-Z0-9\s+=._:/-]+$
      minLength: 1
      maxLength: 256
    TagKeyList:
      type: array
      items:
        $ref: "#/components/schemas/TagKey"
      minItems: 1
      maxItems: 50
    TagListEntry:
      type: object
      required:
        - Key
      properties:
        Key:
          $ref: "#/components/schemas/TagKey"
        Value:
          $ref: "#/components/schemas/TagValue"
      description: Represents a single entry in a list of AWS resource tags.
        <code>TagListEntry</code> returns an array that contains a list of tasks
        when the <a>ListTagsForResource</a> operation is called.
    TaskExecutionListEntry:
      type: object
      properties:
        TaskExecutionArn:
          $ref: "#/components/schemas/TaskExecutionArn"
        Status:
          $ref: "#/components/schemas/TaskExecutionStatus"
      description: Represents a single entry in a list of task executions.
        <code>TaskExecutionListEntry</code> returns an array that contains a
        list of specific invocations of a task when <a>ListTaskExecutions</a>
        operation is called.
    TaskListEntry:
      type: object
      properties:
        TaskArn:
          $ref: "#/components/schemas/TaskArn"
        Status:
          $ref: "#/components/schemas/TaskStatus"
        Name:
          $ref: "#/components/schemas/TagValue"
      description: Represents a single entry in a list of tasks. <code>TaskListEntry</code>
        returns an array that contains a list of tasks when the <a>ListTasks</a>
        operation is called. A task includes the source and destination file
        systems to sync and the options to use for the tasks.
