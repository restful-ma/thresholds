openapi: 3.0.0
info:
  contact:
    name: Google
    url: https://google.com
  description: >
    Allows users to start, configure, and connect to interactive shell sessions
    running in the cloud.
  license:
    name: Creative Commons Attribution 3.0
    url: http://creativecommons.org/licenses/by/3.0/
  termsOfService: https://developers.google.com/terms/
  title: Cloud Shell
  version: v1alpha1
  x-apiClientRegistration:
    url: https://console.developers.google.com
  x-logo:
    url: https://www.google.com/images/branding/googlelogo/2x/googlelogo_color_272x92dp.png
  x-origin:
    - converter:
        url: https://github.com/lucybot/api-spec-converter
        version: 2.7.31
      format: google
      url: https://cloudshell.googleapis.com/$discovery/rest?version=v1alpha1
      version: v1
  x-preferred: false
  x-providerName: googleapis.com
  x-serviceName: cloudshell
externalDocs:
  url: https://cloud.google.com/shell/docs/
tags:
  - name: users
paths:
  "/v1alpha1/{name}":
    delete:
      description: |-
        Removes a public SSH key from an environment. Clients will no longer be
        able to connect to the environment using the corresponding private key.
      operationId: cloudshell.users.environments.publicKeys.delete
      parameters:
        - description: |-
            Name of the resource to be deleted, e.g.
            `users/me/environments/default/publicKeys/my-key`.
          in: path
          name: name
          required: true
          x-reservedExpansion: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Empty"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - users
    get:
      description: Gets an environment. Returns NOT_FOUND if the environment does not exist.
      operationId: cloudshell.users.environments.get
      parameters:
        - description: >-
            Name of the requested resource, for example
            `users/me/environments/default`

            or `users/someone@example.com/environments/default`.
          in: path
          name: name
          required: true
          x-reservedExpansion: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Environment"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - users
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/upload_protocol"
    patch:
      description: Updates an existing environment.
      operationId: cloudshell.users.environments.patch
      parameters:
        - description: |-
            Name of the resource to be updated, for example
            `users/me/environments/default` or
            `users/someone@example.com/environments/default`.
          in: path
          name: name
          required: true
          x-reservedExpansion: true
          schema:
            type: string
        - description: Mask specifying which fields in the environment should be updated.
          in: query
          name: updateMask
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Environment"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Environment"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - users
  "/v1alpha1/{name}:authorize":
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/upload_protocol"
    post:
      description: >-
        Sends OAuth credentials to a running environment on behalf of a user.
        When

        this completes, the environment will be authorized to run various Google

        Cloud command line tools without requiring the user to manually

        authenticate.
      operationId: cloudshell.users.environments.authorize
      parameters:
        - description: >-
            Name of the resource that should receive the credentials, for
            example

            `users/me/environments/default` or

            `users/someone@example.com/environments/default`.
          in: path
          name: name
          required: true
          x-reservedExpansion: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AuthorizeEnvironmentRequest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Empty"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - users
  "/v1alpha1/{name}:start":
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/upload_protocol"
    post:
      description: >-
        Starts an existing environment, allowing clients to connect to it. The

        returned operation will contain an instance of StartEnvironmentMetadata in

        its metadata field. Users can wait for the environment to start by polling

        this operation via GetOperation. Once the environment has finished starting

        and is ready to accept connections, the operation will contain a

        StartEnvironmentResponse in its response field.
      operationId: cloudshell.users.environments.start
      parameters:
        - description: |-
            Name of the resource that should be started, for example
            `users/me/environments/default` or
            `users/someone@example.com/environments/default`.
          in: path
          name: name
          required: true
          x-reservedExpansion: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/StartEnvironmentRequest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - users
  "/v1alpha1/{parent}/publicKeys":
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/upload_protocol"
    post:
      description: >-
        Adds a public SSH key to an environment, allowing clients with the

        corresponding private key to connect to that environment via SSH. If a key

        with the same format and content already exists, this will return the

        existing key.
      operationId: cloudshell.users.environments.publicKeys.create
      parameters:
        - description: Parent resource name, e.g. `users/me/environments/default`.
          in: path
          name: parent
          required: true
          x-reservedExpansion: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreatePublicKeyRequest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/PublicKey"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - users
servers:
  - url: https://cloudshell.googleapis.com/
components:
  parameters:
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
          - media
          - proto
        default: json
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    key:
      description: API key. Your API key identifies your project and provides you with API
        access, quota, and reports. Required unless you provide an OAuth 2.0
        token.
      in: query
      name: key
      schema:
        type: string
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
        default: true
    quotaUser:
      description: Available to use for quota purposes for server-side applications. Can be
        any arbitrary string assigned to a user, but should not exceed 40
        characters.
      in: query
      name: quotaUser
      schema:
        type: string
    uploadType:
      description: Legacy upload protocol for media (e.g. "media", "multipart").
      in: query
      name: uploadType
      schema:
        type: string
    upload_protocol:
      description: Upload protocol for media (e.g. "raw", "multipart").
      in: query
      name: upload_protocol
      schema:
        type: string
    _.xgafv:
      description: V1 error format.
      in: query
      name: $.xgafv
      schema:
        type: string
        enum:
          - "1"
          - "2"
  securitySchemes:
    Oauth2:
      description: Oauth 2.0 implicit authentication
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes:
            https://www.googleapis.com/auth/cloud-platform: View and manage your data across Google Cloud Platform services
    Oauth2c:
      description: Oauth 2.0 accessCode authentication
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          tokenUrl: https://accounts.google.com/o/oauth2/token
          scopes:
            https://www.googleapis.com/auth/cloud-platform: View and manage your data across Google Cloud Platform services
  schemas:
    AuthorizeEnvironmentRequest:
      description: Request message for AuthorizeEnvironment.
      properties:
        accessToken:
          description: The OAuth access token that should be sent to the environment.
          type: string
        expireTime:
          description: >-
            The time when the credentials expire. If not set, defaults to one
            hour from

            when the server received the request.
          format: google-datetime
          type: string
        idToken:
          description: The OAuth ID token that should be sent to the environment.
          type: string
      type: object
    CreatePublicKeyRequest:
      description: Request message for CreatePublicKey.
      properties:
        key:
          $ref: "#/components/schemas/PublicKey"
      type: object
    Empty:
      description: >-
        A generic empty message that you can re-use to avoid defining duplicated

        empty messages in your APIs. A typical example is to use it as the request

        or the response type of an API method. For instance:

            service Foo {
              rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);
            }

        The JSON representation for `Empty` is empty JSON object `{}`.
      properties: {}
      type: object
    Environment:
      description: >-
        A Cloud Shell environment, which is defined as the combination of a
        Docker

        image specifying what is installed on the environment and a home directory

        containing the user's data that will remain across sessions. Each user has a

        single environment with the ID "default".
      properties:
        dockerImage:
          description: >-
            Required. Full path to the Docker image used to run this
            environment, e.g.

            "gcr.io/dev-con/cloud-devshell:latest".
          type: string
        id:
          description: Output only. The environment's identifier, which is always "default".
          type: string
        name:
          description: >-
            Output only. Full name of this resource, in the format

            `users/{owner_email}/environments/{environment_id}`. `{owner_email}` is the

            email address of the user to whom this environment belongs, and

            `{environment_id}` is the identifier of this environment. For example,

            `users/someone@example.com/environments/default`.
          type: string
        publicKeys:
          description: >-
            Output only. Public keys associated with the environment. Clients
            can

            connect to this environment via SSH only if they possess a private key

            corresponding to at least one of these public keys. Keys can be added to or

            removed from the environment using the CreatePublicKey and DeletePublicKey

            methods.
          items:
            $ref: "#/components/schemas/PublicKey"
          type: array
        sshHost:
          description: >-
            Output only. Host to which clients can connect to initiate SSH
            sessions

            with the environment.
          type: string
        sshPort:
          description: >-
            Output only. Port to which clients can connect to initiate SSH
            sessions

            with the environment.
          format: int32
          type: integer
        sshUsername:
          description: >-
            Output only. Username that clients should use when initiating SSH
            sessions

            with the environment.
          type: string
        state:
          description: Output only. Current execution state of this environment.
          enum:
            - STATE_UNSPECIFIED
            - DISABLED
            - STARTING
            - RUNNING
          type: string
        webHost:
          description: >-
            Output only. Host to which clients can connect to initiate HTTPS or
            WSS

            connections with the environment.
          type: string
      type: object
    Operation:
      description: >-
        This resource represents a long-running operation that is the result of
        a

        network API call.
      properties:
        done:
          description: >-
            If the value is `false`, it means the operation is still in
            progress.

            If `true`, the operation is completed, and either `error` or `response` is

            available.
          type: boolean
        error:
          $ref: "#/components/schemas/Status"
        metadata:
          additionalProperties:
            description: Properties of the object. Contains field @type with type URL.
          description: >-
            Service-specific metadata associated with the operation.  It
            typically

            contains progress information and common metadata such as create time.

            Some services might not provide such metadata.  Any method that returns a

            long-running operation should document the metadata type, if any.
          type: object
        name:
          description: >-
            The server-assigned name, which is only unique within the same
            service that

            originally returns it. If you use the default HTTP mapping, the

            `name` should be a resource name ending with `operations/{unique_id}`.
          type: string
        response:
          additionalProperties:
            description: Properties of the object. Contains field @type with type URL.
          description: >-
            The normal response of the operation in case of success.  If the
            original

            method returns no data on success, such as `Delete`, the response is

            `google.protobuf.Empty`.  If the original method is standard

            `Get`/`Create`/`Update`, the response should be the resource.  For other

            methods, the response should have the type `XxxResponse`, where `Xxx`

            is the original method name.  For example, if the original method name

            is `TakeSnapshot()`, the inferred response type is

            `TakeSnapshotResponse`.
          type: object
      type: object
    PublicKey:
      description: A public SSH key, corresponding to a private SSH key held by the client.
      properties:
        format:
          description: Required. Format of this key's content.
          enum:
            - FORMAT_UNSPECIFIED
            - SSH_DSS
            - SSH_RSA
            - ECDSA_SHA2_NISTP256
            - ECDSA_SHA2_NISTP384
            - ECDSA_SHA2_NISTP521
          type: string
        key:
          description: Required. Content of this key.
          format: byte
          type: string
        name:
          description: >-
            Output only. Full name of this resource, in the format

            `users/{owner_email}/environments/{environment_id}/publicKeys/{key_id}`.

            `{owner_email}` is the email address of the user to whom the key belongs.

            `{environment_id}` is the identifier of the environment to which the key

            grants access. `{key_id}` is the unique identifier of the key. For example,

            `users/someone@example.com/environments/default/publicKeys/myKey`.
          type: string
      type: object
    StartEnvironmentMetadata:
      description: |-
        Message included in the metadata field of operations returned from
        StartEnvironment.
      properties:
        state:
          description: Current state of the environment being started.
          enum:
            - STATE_UNSPECIFIED
            - STARTING
            - UNARCHIVING_DISK
            - FINISHED
          type: string
      type: object
    StartEnvironmentRequest:
      description: Request message for StartEnvironment.
      properties:
        accessToken:
          description: >-
            The initial access token passed to the environment. If this is
            present and

            valid, the environment will be pre-authenticated with gcloud so that the

            user can run gcloud commands in Cloud Shell without having to log in. This

            code can be updated later by calling AuthorizeEnvironment.
          type: string
      type: object
    StartEnvironmentResponse:
      description: |-
        Message included in the response field of operations returned from
        StartEnvironment once the
        operation is complete.
      properties:
        environment:
          $ref: "#/components/schemas/Environment"
      type: object
    Status:
      description: >-
        The `Status` type defines a logical error model that is suitable for

        different programming environments, including REST APIs and RPC APIs. It is

        used by [gRPC](https://github.com/grpc). Each `Status` message contains

        three pieces of data: error code, error message, and error details.


        You can find out more about this error model and how to work with it in the

        [API Design Guide](https://cloud.google.com/apis/design/errors).
      properties:
        code:
          description: The status code, which should be an enum value of google.rpc.Code.
          format: int32
          type: integer
        details:
          description: >-
            A list of messages that carry the error details.  There is a common
            set of

            message types for APIs to use.
          items:
            additionalProperties:
              description: Properties of the object. Contains field @type with type URL.
            type: object
          type: array
        message:
          description: |-
            A developer-facing error message, which should be in English. Any
            user-facing error message should be localized and sent in the
            google.rpc.Status.details field, or localized by the client.
          type: string
      type: object
