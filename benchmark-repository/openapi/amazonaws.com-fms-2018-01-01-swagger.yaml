openapi: 3.0.0
info:
  version: 2018-01-01
  x-release: v4
  title: Firewall Management Service
  description: <fullname>AWS Firewall Manager</fullname> <p>This is the <i>AWS Firewall
    Manager API Reference</i>. This guide is for developers who need detailed
    information about the AWS Firewall Manager API actions, data types, and
    errors. For detailed information about AWS Firewall Manager features, see
    the <a
    href="https://docs.aws.amazon.com/waf/latest/developerguide/fms-chapter.html">AWS
    Firewall Manager Developer Guide</a>.</p>
  x-logo:
    url: https://twitter.com/awscloud/profile_image?size=original
    backgroundColor: "#FFFFFF"
  termsOfService: https://aws.amazon.com/service-terms/
  contact:
    name: Mike Ralphson
    email: mike.ralphson@gmail.com
    url: https://github.com/mermade/aws2openapi
    x-twitter: PermittedSoc
  license:
    name: Apache 2.0 License
    url: http://www.apache.org/licenses/
  x-providerName: amazonaws.com
  x-serviceName: fms
  x-origin:
    - contentType: application/json
      url: https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/fms-2018-01-01.normal.json
      converter:
        url: https://github.com/mermade/aws2openapi
        version: 1.0.0
      x-apisguru-direct: true
  x-apiClientRegistration:
    url: https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct
  x-apisguru-categories:
    - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: https://docs.aws.amazon.com/fms/
x-hasEquivalentPaths: true
security:
  - hmac: []
paths:
  /#X-Amz-Target=AWSFMS_20180101.AssociateAdminAccount:
    post:
      operationId: AssociateAdminAccount
      description: <p>Sets the AWS Firewall Manager administrator account. AWS Firewall
        Manager must be associated with the master account your AWS organization
        or associated with a member account that has the appropriate
        permissions. If the account ID that you submit is not an AWS
        Organizations master account, AWS Firewall Manager will set the
        appropriate permissions for the given member account.</p> <p>The account
        that you associate with AWS Firewall Manager is called the AWS Firewall
        Manager administrator account. </p>
      responses:
        "200":
          description: Success
        "480":
          description: InvalidOperationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidOperationException"
        "481":
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInputException"
        "482":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "483":
          description: InternalErrorException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalErrorException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSFMS_20180101.AssociateAdminAccount
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AssociateAdminAccountRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSFMS_20180101.DeleteNotificationChannel:
    post:
      operationId: DeleteNotificationChannel
      description: Deletes an AWS Firewall Manager association with the IAM role and the
        Amazon Simple Notification Service (SNS) topic that is used to record
        AWS Firewall Manager SNS logs.
      responses:
        "200":
          description: Success
        "480":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "481":
          description: InvalidOperationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidOperationException"
        "482":
          description: InternalErrorException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalErrorException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSFMS_20180101.DeleteNotificationChannel
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeleteNotificationChannelRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSFMS_20180101.DeletePolicy:
    post:
      operationId: DeletePolicy
      description: "Permanently deletes an AWS Firewall Manager policy. "
      responses:
        "200":
          description: Success
        "480":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "481":
          description: InvalidOperationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidOperationException"
        "482":
          description: InternalErrorException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalErrorException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSFMS_20180101.DeletePolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeletePolicyRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSFMS_20180101.DisassociateAdminAccount:
    post:
      operationId: DisassociateAdminAccount
      description: Disassociates the account that has been set as the AWS Firewall Manager
        administrator account. To set a different account as the administrator
        account, you must submit an <code>AssociateAdminAccount</code> request .
      responses:
        "200":
          description: Success
        "480":
          description: InvalidOperationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidOperationException"
        "481":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "482":
          description: InternalErrorException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalErrorException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSFMS_20180101.DisassociateAdminAccount
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DisassociateAdminAccountRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSFMS_20180101.GetAdminAccount:
    post:
      operationId: GetAdminAccount
      description: Returns the AWS Organizations master account that is associated with AWS
        Firewall Manager as the AWS Firewall Manager administrator.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetAdminAccountResponse"
        "480":
          description: InvalidOperationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidOperationException"
        "481":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "482":
          description: InternalErrorException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalErrorException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSFMS_20180101.GetAdminAccount
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GetAdminAccountRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSFMS_20180101.GetComplianceDetail:
    post:
      operationId: GetComplianceDetail
      description: Returns detailed compliance information about the specified member
        account. Details include resources that are in and out of compliance
        with the specified policy. Resources are considered non-compliant if the
        specified policy has not been applied to them.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetComplianceDetailResponse"
        "480":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "481":
          description: InternalErrorException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalErrorException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSFMS_20180101.GetComplianceDetail
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GetComplianceDetailRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSFMS_20180101.GetNotificationChannel:
    post:
      operationId: GetNotificationChannel
      description: Returns information about the Amazon Simple Notification Service (SNS)
        topic that is used to record AWS Firewall Manager SNS logs.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetNotificationChannelResponse"
        "480":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "481":
          description: InvalidOperationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidOperationException"
        "482":
          description: InternalErrorException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalErrorException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSFMS_20180101.GetNotificationChannel
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GetNotificationChannelRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSFMS_20180101.GetPolicy:
    post:
      operationId: GetPolicy
      description: Returns information about the specified AWS Firewall Manager policy.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetPolicyResponse"
        "480":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "481":
          description: InvalidOperationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidOperationException"
        "482":
          description: InternalErrorException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalErrorException"
        "483":
          description: InvalidTypeException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidTypeException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSFMS_20180101.GetPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GetPolicyRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSFMS_20180101.GetProtectionStatus:
    post:
      operationId: GetProtectionStatus
      description: If you created a Shield Advanced policy, returns policy-level attack
        summary information in the event of a potential DDoS attack.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetProtectionStatusResponse"
        "480":
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInputException"
        "481":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "482":
          description: InternalErrorException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalErrorException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSFMS_20180101.GetProtectionStatus
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GetProtectionStatusRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSFMS_20180101.ListComplianceStatus:
    post:
      operationId: ListComplianceStatus
      description: "Returns an array of <code>PolicyComplianceStatus</code> objects in the
        response. Use <code>PolicyComplianceStatus</code> to get a summary of
        which member accounts are protected by the specified policy. "
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListComplianceStatusResponse"
        "480":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "481":
          description: InternalErrorException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalErrorException"
      parameters:
        - name: MaxResults
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: NextToken
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSFMS_20180101.ListComplianceStatus
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ListComplianceStatusRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSFMS_20180101.ListMemberAccounts:
    post:
      operationId: ListMemberAccounts
      description: <p>Returns a <code>MemberAccounts</code> object that lists the member
        accounts in the administrator's AWS organization.</p> <p>The
        <code>ListMemberAccounts</code> must be submitted by the account that is
        set as the AWS Firewall Manager administrator.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListMemberAccountsResponse"
        "480":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "481":
          description: InternalErrorException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalErrorException"
      parameters:
        - name: MaxResults
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: NextToken
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSFMS_20180101.ListMemberAccounts
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ListMemberAccountsRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSFMS_20180101.ListPolicies:
    post:
      operationId: ListPolicies
      description: Returns an array of <code>PolicySummary</code> objects in the response.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListPoliciesResponse"
        "480":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "481":
          description: InvalidOperationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidOperationException"
        "482":
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
        "483":
          description: InternalErrorException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalErrorException"
      parameters:
        - name: MaxResults
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: NextToken
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSFMS_20180101.ListPolicies
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ListPoliciesRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSFMS_20180101.PutNotificationChannel:
    post:
      operationId: PutNotificationChannel
      description: Designates the IAM role and Amazon Simple Notification Service (SNS)
        topic that AWS Firewall Manager uses to record SNS logs.
      responses:
        "200":
          description: Success
        "480":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "481":
          description: InvalidOperationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidOperationException"
        "482":
          description: InternalErrorException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalErrorException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSFMS_20180101.PutNotificationChannel
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PutNotificationChannelRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSFMS_20180101.PutPolicy:
    post:
      operationId: PutPolicy
      description: '<p>Creates an AWS Firewall Manager policy.</p> <p>Firewall Manager
        provides two types of policies: A Shield Advanced policy, which applies
        Shield Advanced protection to specified accounts and resources, or a WAF
        policy, which contains a rule group and defines which resources are to
        be protected by that rule group. A policy is specific to either WAF or
        Shield Advanced. If you want to enforce both WAF rules and Shield
        Advanced protection across accounts, you can create multiple policies.
        You can create one or more policies for WAF rules, and one or more
        policies for Shield Advanced.</p> <p>You must be subscribed to Shield
        Advanced to create a Shield Advanced policy. For more information on
        subscribing to Shield Advanced, see <a
        href="https://docs.aws.amazon.com/waf/latest/DDOSAPIReference/API_CreateSubscription.html">CreateSubscription</a>.</p>'
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PutPolicyResponse"
        "480":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "481":
          description: InvalidOperationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidOperationException"
        "482":
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInputException"
        "483":
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
        "484":
          description: InternalErrorException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalErrorException"
        "485":
          description: InvalidTypeException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidTypeException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSFMS_20180101.PutPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PutPolicyRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
servers:
  - url: http://fms.{region}.amazonaws.com
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-south-1
          - sa-east-1
        default: us-east-1
    description: The FMS multi-region endpoint
  - url: https://fms.{region}.amazonaws.com
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-south-1
          - sa-east-1
        default: us-east-1
    description: The FMS multi-region endpoint
  - url: http://fms.{region}.amazonaws.com.cn
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The FMS endpoint for China (Beijing) and China (Ningxia)
  - url: https://fms.{region}.amazonaws.com.cn
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The FMS endpoint for China (Beijing) and China (Ningxia)
components:
  parameters:
    X-Amz-Content-Sha256:
      name: X-Amz-Content-Sha256
      in: header
      required: false
      schema:
        type: string
    X-Amz-Date:
      name: X-Amz-Date
      in: header
      required: false
      schema:
        type: string
    X-Amz-Algorithm:
      name: X-Amz-Algorithm
      in: header
      required: false
      schema:
        type: string
    X-Amz-Credential:
      name: X-Amz-Credential
      in: header
      required: false
      schema:
        type: string
    X-Amz-Security-Token:
      name: X-Amz-Security-Token
      in: header
      required: false
      schema:
        type: string
    X-Amz-Signature:
      name: X-Amz-Signature
      in: header
      required: false
      schema:
        type: string
    X-Amz-SignedHeaders:
      name: X-Amz-SignedHeaders
      in: header
      required: false
      schema:
        type: string
  securitySchemes:
    hmac:
      type: apiKey
      name: Authorization
      in: header
      description: Amazon Signature authorization v4
      x-amazon-apigateway-authtype: awsSigv4
  schemas:
    AssociateAdminAccountRequest:
      type: object
      required:
        - AdminAccount
      properties:
        AdminAccount:
          $ref: "#/components/schemas/AWSAccountId"
    InvalidOperationException: {}
    InvalidInputException: {}
    ResourceNotFoundException: {}
    InternalErrorException: {}
    DeleteNotificationChannelRequest:
      type: object
      properties: {}
    DeletePolicyRequest:
      type: object
      required:
        - PolicyId
      properties:
        PolicyId:
          $ref: "#/components/schemas/PolicyId"
        DeleteAllPolicyResources:
          $ref: "#/components/schemas/Boolean"
    DisassociateAdminAccountRequest:
      type: object
      properties: {}
    GetAdminAccountResponse:
      type: object
      properties:
        AdminAccount:
          $ref: "#/components/schemas/AWSAccountId"
        RoleStatus:
          $ref: "#/components/schemas/AccountRoleStatus"
    GetAdminAccountRequest:
      type: object
      properties: {}
    GetComplianceDetailResponse:
      type: object
      properties:
        PolicyComplianceDetail:
          $ref: "#/components/schemas/PolicyComplianceDetail"
    GetComplianceDetailRequest:
      type: object
      required:
        - PolicyId
        - MemberAccount
      properties:
        PolicyId:
          $ref: "#/components/schemas/PolicyId"
        MemberAccount:
          $ref: "#/components/schemas/AWSAccountId"
    GetNotificationChannelResponse:
      type: object
      properties:
        SnsTopicArn:
          $ref: "#/components/schemas/ResourceArn"
        SnsRoleName:
          $ref: "#/components/schemas/ResourceArn"
    GetNotificationChannelRequest:
      type: object
      properties: {}
    GetPolicyResponse:
      type: object
      properties:
        Policy:
          $ref: "#/components/schemas/Policy"
        PolicyArn:
          $ref: "#/components/schemas/ResourceArn"
    GetPolicyRequest:
      type: object
      required:
        - PolicyId
      properties:
        PolicyId:
          $ref: "#/components/schemas/PolicyId"
    InvalidTypeException: {}
    GetProtectionStatusResponse:
      type: object
      properties:
        AdminAccountId:
          $ref: "#/components/schemas/AWSAccountId"
        ServiceType:
          $ref: "#/components/schemas/SecurityServiceType"
        Data:
          $ref: "#/components/schemas/ProtectionData"
        NextToken:
          $ref: "#/components/schemas/PaginationToken"
    GetProtectionStatusRequest:
      type: object
      required:
        - PolicyId
      properties:
        PolicyId:
          $ref: "#/components/schemas/PolicyId"
        MemberAccountId:
          $ref: "#/components/schemas/AWSAccountId"
        StartTime:
          $ref: "#/components/schemas/TimeStamp"
        EndTime:
          $ref: "#/components/schemas/TimeStamp"
        NextToken:
          $ref: "#/components/schemas/PaginationToken"
        MaxResults:
          $ref: "#/components/schemas/PaginationMaxResults"
    ListComplianceStatusResponse:
      type: object
      properties:
        PolicyComplianceStatusList:
          $ref: "#/components/schemas/PolicyComplianceStatusList"
        NextToken:
          $ref: "#/components/schemas/PaginationToken"
    ListComplianceStatusRequest:
      type: object
      required:
        - PolicyId
      properties:
        PolicyId:
          $ref: "#/components/schemas/PolicyId"
        NextToken:
          $ref: "#/components/schemas/PaginationToken"
        MaxResults:
          $ref: "#/components/schemas/PaginationMaxResults"
    ListMemberAccountsResponse:
      type: object
      properties:
        MemberAccounts:
          $ref: "#/components/schemas/MemberAccounts"
        NextToken:
          $ref: "#/components/schemas/PaginationToken"
    ListMemberAccountsRequest:
      type: object
      properties:
        NextToken:
          $ref: "#/components/schemas/PaginationToken"
        MaxResults:
          $ref: "#/components/schemas/PaginationMaxResults"
    ListPoliciesResponse:
      type: object
      properties:
        PolicyList:
          $ref: "#/components/schemas/PolicySummaryList"
        NextToken:
          $ref: "#/components/schemas/PaginationToken"
    ListPoliciesRequest:
      type: object
      properties:
        NextToken:
          $ref: "#/components/schemas/PaginationToken"
        MaxResults:
          $ref: "#/components/schemas/PaginationMaxResults"
    LimitExceededException: {}
    PutNotificationChannelRequest:
      type: object
      required:
        - SnsTopicArn
        - SnsRoleName
      properties:
        SnsTopicArn:
          $ref: "#/components/schemas/ResourceArn"
        SnsRoleName:
          $ref: "#/components/schemas/ResourceArn"
    PutPolicyResponse:
      type: object
      properties:
        Policy:
          $ref: "#/components/schemas/Policy"
        PolicyArn:
          $ref: "#/components/schemas/ResourceArn"
    PutPolicyRequest:
      type: object
      required:
        - Policy
      properties:
        Policy:
          $ref: "#/components/schemas/Policy"
    AWSAccountId:
      type: string
      pattern: ^[0-9]+$
      minLength: 1
      maxLength: 1024
    AccountRoleStatus:
      type: string
      enum:
        - READY
        - CREATING
        - PENDING_DELETION
        - DELETING
        - DELETED
    Boolean:
      type: boolean
    ResourceId:
      type: string
      pattern: ^([\p{L}\p{Z}\p{N}_.:/=+\-@]*)$
      minLength: 1
      maxLength: 1024
    ViolationReason:
      type: string
      enum:
        - WEB_ACL_MISSING_RULE_GROUP
        - RESOURCE_MISSING_WEB_ACL
        - RESOURCE_INCORRECT_WEB_ACL
        - RESOURCE_MISSING_SHIELD_PROTECTION
    ResourceType:
      type: string
      pattern: ^([\p{L}\p{Z}\p{N}_.:/=+\-@]*)$
      minLength: 1
      maxLength: 128
    ComplianceViolator:
      type: object
      properties:
        ResourceId:
          $ref: "#/components/schemas/ResourceId"
        ViolationReason:
          $ref: "#/components/schemas/ViolationReason"
        ResourceType:
          $ref: "#/components/schemas/ResourceType"
      description: Details of the resource that is not protected by the policy.
    ComplianceViolators:
      type: array
      items:
        $ref: "#/components/schemas/ComplianceViolator"
    CustomerPolicyScopeId:
      type: string
      pattern: ^([\p{L}\p{Z}\p{N}_.:/=+\-@]*)$
      minLength: 1
      maxLength: 1024
    CustomerPolicyScopeIdList:
      type: array
      items:
        $ref: "#/components/schemas/CustomerPolicyScopeId"
    CustomerPolicyScopeIdType:
      type: string
      enum:
        - ACCOUNT
    CustomerPolicyScopeMap:
      type: object
      additionalProperties:
        $ref: "#/components/schemas/CustomerPolicyScopeIdList"
    PolicyId:
      type: string
      pattern: ^[a-z0-9A-Z-]{36}$
      minLength: 36
      maxLength: 36
    DependentServiceName:
      type: string
      enum:
        - AWSCONFIG
        - AWSWAF
        - AWSSHIELD_ADVANCED
    DetailedInfo:
      type: string
      pattern: ^([\p{L}\p{Z}\p{N}_.:/=+\-@]*)$
      minLength: 1
      maxLength: 1024
    PolicyComplianceStatusType:
      type: string
      enum:
        - COMPLIANT
        - NON_COMPLIANT
    ResourceCount:
      type: integer
      minimum: 0
    EvaluationResult:
      type: object
      properties:
        ComplianceStatus:
          $ref: "#/components/schemas/PolicyComplianceStatusType"
        ViolatorCount:
          $ref: "#/components/schemas/ResourceCount"
        EvaluationLimitExceeded:
          $ref: "#/components/schemas/Boolean"
      description: Describes the compliance status for the account. An account is
        considered non-compliant if it includes resources that are not protected
        by the specified policy.
    EvaluationResults:
      type: array
      items:
        $ref: "#/components/schemas/EvaluationResult"
    PolicyComplianceDetail:
      type: object
      properties:
        PolicyOwner:
          $ref: "#/components/schemas/AWSAccountId"
        PolicyId:
          $ref: "#/components/schemas/PolicyId"
        MemberAccount:
          $ref: "#/components/schemas/AWSAccountId"
        Violators:
          $ref: "#/components/schemas/ComplianceViolators"
        EvaluationLimitExceeded:
          $ref: "#/components/schemas/Boolean"
        ExpiredAt:
          $ref: "#/components/schemas/TimeStamp"
        IssueInfoMap:
          $ref: "#/components/schemas/IssueInfoMap"
      description: Describes the non-compliant resources in a member account for a specific
        AWS Firewall Manager policy. A maximum of 100 entries are displayed. If
        more than 100 resources are non-compliant,
        <code>EvaluationLimitExceeded</code> is set to <code>True</code>.
    ResourceArn:
      type: string
      pattern: ^([\p{L}\p{Z}\p{N}_.:/=+\-@]*)$
      minLength: 1
      maxLength: 1024
    Policy:
      type: object
      required:
        - PolicyName
        - SecurityServicePolicyData
        - ResourceType
        - ExcludeResourceTags
        - RemediationEnabled
      properties:
        PolicyId:
          $ref: "#/components/schemas/PolicyId"
        PolicyName:
          $ref: "#/components/schemas/ResourceName"
        PolicyUpdateToken:
          $ref: "#/components/schemas/PolicyUpdateToken"
        SecurityServicePolicyData:
          $ref: "#/components/schemas/SecurityServicePolicyData"
        ResourceType:
          $ref: "#/components/schemas/ResourceType"
        ResourceTypeList:
          $ref: "#/components/schemas/ResourceTypeList"
        ResourceTags:
          $ref: "#/components/schemas/ResourceTags"
        ExcludeResourceTags:
          $ref: "#/components/schemas/Boolean"
        RemediationEnabled:
          $ref: "#/components/schemas/Boolean"
        IncludeMap:
          $ref: "#/components/schemas/CustomerPolicyScopeMap"
        ExcludeMap:
          $ref: "#/components/schemas/CustomerPolicyScopeMap"
      description: An AWS Firewall Manager policy.
    TimeStamp:
      type: string
      format: date-time
    PaginationToken:
      type: string
      pattern: ^([\p{L}\p{Z}\p{N}_.:/=+\-@]*)$
      minLength: 1
    PaginationMaxResults:
      type: integer
      minimum: 1
      maximum: 100
    SecurityServiceType:
      type: string
      enum:
        - WAF
        - SHIELD_ADVANCED
    ProtectionData:
      type: string
    IssueInfoMap:
      type: object
      additionalProperties:
        $ref: "#/components/schemas/DetailedInfo"
    PolicyComplianceStatusList:
      type: array
      items:
        $ref: "#/components/schemas/PolicyComplianceStatus"
    MemberAccounts:
      type: array
      items:
        $ref: "#/components/schemas/AWSAccountId"
    PolicySummaryList:
      type: array
      items:
        $ref: "#/components/schemas/PolicySummary"
    ManagedServiceData:
      type: string
      minLength: 1
      maxLength: 1024
    ResourceName:
      type: string
      pattern: ^([\p{L}\p{Z}\p{N}_.:/=+\-@]*)$
      minLength: 1
      maxLength: 128
    PolicyUpdateToken:
      type: string
      pattern: ^([\p{L}\p{Z}\p{N}_.:/=+\-@]*)$
      minLength: 1
      maxLength: 1024
    SecurityServicePolicyData:
      type: object
      required:
        - Type
      properties:
        Type:
          $ref: "#/components/schemas/SecurityServiceType"
        ManagedServiceData:
          $ref: "#/components/schemas/ManagedServiceData"
      description: Details about the security service that is being used to protect the
        resources.
    ResourceTypeList:
      type: array
      items:
        $ref: "#/components/schemas/ResourceType"
    ResourceTags:
      type: array
      items:
        $ref: "#/components/schemas/ResourceTag"
      minItems: 0
      maxItems: 8
    PolicyComplianceStatus:
      type: object
      properties:
        PolicyOwner:
          $ref: "#/components/schemas/AWSAccountId"
        PolicyId:
          $ref: "#/components/schemas/PolicyId"
        PolicyName:
          $ref: "#/components/schemas/ResourceName"
        MemberAccount:
          $ref: "#/components/schemas/AWSAccountId"
        EvaluationResults:
          $ref: "#/components/schemas/EvaluationResults"
        LastUpdated:
          $ref: "#/components/schemas/TimeStamp"
        IssueInfoMap:
          $ref: "#/components/schemas/IssueInfoMap"
      description: Indicates whether the account is compliant with the specified policy. An
        account is considered non-compliant if it includes resources that are
        not protected by the policy.
    PolicySummary:
      type: object
      properties:
        PolicyArn:
          $ref: "#/components/schemas/ResourceArn"
        PolicyId:
          $ref: "#/components/schemas/PolicyId"
        PolicyName:
          $ref: "#/components/schemas/ResourceName"
        ResourceType:
          $ref: "#/components/schemas/ResourceType"
        SecurityServiceType:
          $ref: "#/components/schemas/SecurityServiceType"
        RemediationEnabled:
          $ref: "#/components/schemas/Boolean"
      description: "Details of the AWS Firewall Manager policy. "
    TagKey:
      type: string
      pattern: ^([\p{L}\p{Z}\p{N}_.:/=+\-@]*)$
      minLength: 1
      maxLength: 128
    TagValue:
      type: string
      pattern: ^([\p{L}\p{Z}\p{N}_.:/=+\-@]*)$
      maxLength: 256
    ResourceTag:
      type: object
      required:
        - Key
      properties:
        Key:
          $ref: "#/components/schemas/TagKey"
        Value:
          $ref: "#/components/schemas/TagValue"
      description: The resource tags that AWS Firewall Manager uses to determine if a
        particular resource should be included or excluded from protection by
        the AWS Firewall Manager policy. Tags enable you to categorize your AWS
        resources in different ways, for example, by purpose, owner, or
        environment. Each tag consists of a key and an optional value, both of
        which you define. Tags are combined with an "OR." That is, if you add
        more than one tag, if any of the tags matches, the resource is
        considered a match for the include or exclude. <a
        href="https://docs.aws.amazon.com/awsconsolehelpdocs/latest/gsg/tag-editor.html">Working
        with Tag Editor</a>.
