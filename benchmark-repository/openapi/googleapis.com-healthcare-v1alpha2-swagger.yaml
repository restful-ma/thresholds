openapi: 3.0.0
info:
  contact:
    name: Google
    url: https://google.com
  description: Manage, store, and access healthcare data in Google Cloud Platform.
  license:
    name: Creative Commons Attribution 3.0
    url: http://creativecommons.org/licenses/by/3.0/
  termsOfService: https://developers.google.com/terms/
  title: Cloud Healthcare
  version: v1alpha2
  x-apiClientRegistration:
    url: https://console.developers.google.com
  x-logo:
    url: https://www.google.com/images/branding/googlelogo/2x/googlelogo_color_272x92dp.png
  x-origin:
    - converter:
        url: https://github.com/lucybot/api-spec-converter
        version: 2.7.31
      format: google
      url: https://healthcare.googleapis.com/$discovery/rest?version=v1alpha2
      version: v1
  x-preferred: true
  x-providerName: googleapis.com
  x-serviceName: healthcare
externalDocs:
  url: https://cloud.google.com/healthcare
tags:
  - name: projects
paths:
  "/v1alpha2/{name}":
    delete:
      description: >-
        Deletes the specified DICOM store and removes all images that are
        contained

        within it.
      operationId: healthcare.projects.locations.datasets.dicomStores.delete
      parameters:
        - description: The resource name of the DICOM store to delete.
          in: path
          name: name
          required: true
          x-reservedExpansion: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Empty"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    get:
      description: Gets the specified DICOM store.
      operationId: healthcare.projects.locations.datasets.dicomStores.get
      parameters:
        - description: The resource name of the DICOM store to get.
          in: path
          name: name
          required: true
          x-reservedExpansion: true
          schema:
            type: string
        - description: |-
            Specifies which parts of the Message resource should be returned
            in the response.
          in: query
          name: view
          schema:
            type: string
            enum:
              - MESSAGE_VIEW_UNSPECIFIED
              - RAW_ONLY
              - PARSED_ONLY
              - FULL
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/DicomStore"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/upload_protocol"
    patch:
      description: Updates the specified DICOM store.
      operationId: healthcare.projects.locations.datasets.dicomStores.patch
      parameters:
        - description: >-
            Output only. Resource name of the DICOM store, of the form

            `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/dicomStores/{dicom_store_id}`.
          in: path
          name: name
          required: true
          x-reservedExpansion: true
          schema:
            type: string
        - description: >-
            The update mask applies to the resource. For the `FieldMask`
            definition,

            see

            https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask
          in: query
          name: updateMask
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/DicomStore"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/DicomStore"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    put:
      description: >-
        Updates the entire contents of a resource.


        Implements the FHIR standard [update

        interaction](http://hl7.org/implement/standards/fhir/STU3/http.html#update).


        If the specified resource does

        not exist and the FHIR store has

        enable_update_create set, creates the

        resource with the client-specified ID.


        The request body must contain a JSON-encoded FHIR resource, and the request

        headers must contain `Content-Type: application/fhir+json`. The resource

        must contain an `id` element having an identical value to the ID in the

        REST path of the request.


        On success, the response body will contain a JSON-encoded representation

        of the updated resource, including the server-assigned version ID.

        Errors generated by the FHIR store will contain a JSON-encoded

        `OperationOutcome` resource describing the reason for the error. If the

        request cannot be mapped to a valid API method on a FHIR store, a generic

        GCP error might be returned instead.
      operationId: healthcare.projects.locations.datasets.fhirStores.fhir.update
      parameters:
        - description: The name of the resource to update.
          in: path
          name: name
          required: true
          x-reservedExpansion: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/HttpBody"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/HttpBody"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  "/v1alpha2/{name}/$everything":
    get:
      description: >-
        Retrieves all the resources directly referenced by a patient, as well as

        all of the resources in the patient compartment.


        Implements the FHIR extended operation

        [Patient-everything](http://hl7.org/implement/standards/fhir/STU3/patient-operations.html#everything).


        On success, the response body will contain a JSON-encoded representation

        of a `Bundle` resource of type `searchset`, containing the results of the

        operation.

        Errors generated by the FHIR store will contain a JSON-encoded

        `OperationOutcome` resource describing the reason for the error. If the

        request cannot be mapped to a valid API method on a FHIR store, a generic

        GCP error might be returned instead.
      operationId: healthcare.projects.locations.datasets.fhirStores.fhir.Patient-everything
      parameters:
        - description: Maximum number of resources in a page. Defaults to 100.
          in: query
          name: _count
          schema:
            type: integer
        - description: >-
            The response includes records prior to the end date. If no end date
            is

            provided, all records subsequent to the start date are in scope.
          in: query
          name: end
          schema:
            type: string
        - description: Name of the `Patient` resource for which the information is required.
          in: path
          name: name
          required: true
          x-reservedExpansion: true
          schema:
            type: string
        - description: >-
            Used to retrieve the next or previous page of results

            when using pagination. Value should be set to the value of page_token set

            in next or previous page links' url. Next and previous page are returned

            in the response bundle's links field, where `link.relation` is "previous"

            or "next".


            Omit `page_token` if no previous request has been made.
          in: query
          name: pageToken
          schema:
            type: string
        - description: >-
            The response includes records subsequent to the start date. If no
            start

            date is provided, all records prior to the end date are in scope.
          in: query
          name: start
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/HttpBody"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/upload_protocol"
  "/v1alpha2/{name}/$purge":
    delete:
      description: >-
        Deletes all the historical versions of a resource (excluding the current

        version) from the FHIR store. To remove all versions of a resource, first

        delete the current version and then call this method.


        This is not a FHIR standard operation.
      operationId: healthcare.projects.locations.datasets.fhirStores.fhir.Resource-purge
      parameters:
        - description: The name of the resource to purge.
          in: path
          name: name
          required: true
          x-reservedExpansion: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Empty"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/upload_protocol"
  "/v1alpha2/{name}/_history":
    get:
      description: >-
        Lists all the versions of a resource (including the current version and

        deleted versions) from the FHIR store.


        Implements the per-resource form of the FHIR standard [history

        interaction](http://hl7.org/implement/standards/fhir/STU3/http.html#history).


        On success, the response body will contain a JSON-encoded representation

        of a `Bundle` resource of type `history`, containing the version history

        sorted from most recent to oldest versions.

        Errors generated by the FHIR store will contain a JSON-encoded

        `OperationOutcome` resource describing the reason for the error. If the

        request cannot be mapped to a valid API method on a FHIR store, a generic

        GCP error might be returned instead.
      operationId: healthcare.projects.locations.datasets.fhirStores.fhir.history
      parameters:
        - description: >-
            Only include resource versions that were current at some point
            during the

            time period specified in the date time value. The date parameter format is

            yyyy-mm-ddThh:mm:ss[Z|(+|-)hh:mm]


            Clients may specify any of the following:


            *  An entire year: `_at=2019`

            *  An entire month: `_at=2019-01`

            *  A specific day: `_at=2019-01-20`

            *  A specific second: `_at=2018-12-31T23:59:58Z`
          in: query
          name: at
          schema:
            type: string
        - description: The maximum number of search results on a page. Defaults to 1000.
          in: query
          name: count
          schema:
            type: integer
        - description: The name of the resource to retrieve.
          in: path
          name: name
          required: true
          x-reservedExpansion: true
          schema:
            type: string
        - description: >-
            Used to retrieve the first, previous, next, or last page of resource

            versions when using pagination. Value should be set to the value of the

            `link.url` field returned in the response to the previous request, where

            `link.relation` is "first", "previous", "next" or "last".


            Omit `page` if no previous request has been made.
          in: query
          name: page
          schema:
            type: string
        - description: >-
            Only include resource versions that were created at or after the
            given

            instant in time. The instant in time uses the format

            YYYY-MM-DDThh:mm:ss.sss+zz:zz (for example 2015-02-07T13:28:17.239+02:00 or

            2017-01-01T00:00:00Z). The time must be specified to the second and

            include a time zone.
          in: query
          name: since
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/HttpBody"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/upload_protocol"
  "/v1alpha2/{name}/fhir/metadata":
    get:
      description: >-
        Gets the FHIR [capability

        statement](http://hl7.org/implement/standards/fhir/STU3/capabilitystatement.html)

        for the store, which contains a description of functionality supported by

        the server.


        Implements the FHIR standard [capabilities

        interaction](http://hl7.org/implement/standards/fhir/STU3/http.html#capabilities).


        On success, the response body will contain a JSON-encoded representation

        of a `CapabilityStatement` resource.
      operationId: healthcare.projects.locations.datasets.fhirStores.fhir.capabilities
      parameters:
        - description: Name of the FHIR store to retrieve the capabilities for.
          in: path
          name: name
          required: true
          x-reservedExpansion: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/HttpBody"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/upload_protocol"
  "/v1alpha2/{name}/locations":
    get:
      description: Lists information about the supported locations for this service.
      operationId: healthcare.projects.locations.list
      parameters:
        - description: The standard list filter.
          in: query
          name: filter
          schema:
            type: string
        - description: The resource that owns the locations collection, if applicable.
          in: path
          name: name
          required: true
          x-reservedExpansion: true
          schema:
            type: string
        - description: The standard list page size.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: The standard list page token.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ListLocationsResponse"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/upload_protocol"
  "/v1alpha2/{name}/metadata":
    get:
      description: >-
        Gets the FHIR [capability

        statement](http://hl7.org/implement/standards/fhir/STU3/capabilitystatement.html)

        for the store, which contains a description of functionality supported by

        the server.


        Implements the FHIR standard [capabilities

        interaction](http://hl7.org/implement/standards/fhir/STU3/http.html#capabilities).


        On success, the response body will contain a JSON-encoded representation

        of a `CapabilityStatement` resource.
      operationId: healthcare.projects.locations.datasets.fhirStores.capabilities
      parameters:
        - description: Name of the FHIR store to retrieve the capabilities for.
          in: path
          name: name
          required: true
          x-reservedExpansion: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/HttpBody"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/upload_protocol"
  "/v1alpha2/{name}/operations":
    get:
      description: |-
        Lists operations that match the specified filter in the request. If the
        server doesn't support this method, it returns `UNIMPLEMENTED`.

        NOTE: the `name` binding allows API services to override the binding
        to use different resource name schemes, such as `users/*/operations`. To
        override the binding, API services can add a binding such as
        `"/v1/{name=users/*}/operations"` to their service configuration.
        For backwards compatibility, the default name includes the operations
        collection id, however overriding users must ensure the name binding
        is the parent resource, without the operations collection id.
      operationId: healthcare.projects.locations.datasets.operations.list
      parameters:
        - description: The standard list filter.
          in: query
          name: filter
          schema:
            type: string
        - description: The name of the operation's parent resource.
          in: path
          name: name
          required: true
          x-reservedExpansion: true
          schema:
            type: string
        - description: The standard list page size.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: The standard list page token.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ListOperationsResponse"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/upload_protocol"
  "/v1alpha2/{name}:export":
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/upload_protocol"
    post:
      description: |-
        Exports data to the specified destination by copying it from the DICOM
        store.
        The metadata field type is
        OperationMetadata.
      operationId: healthcare.projects.locations.datasets.dicomStores.export
      parameters:
        - description: >-
            The DICOM store resource name from which the data should be exported
            (e.g.,

            `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/dicomStores/{dicom_store_id}`).
          in: path
          name: name
          required: true
          x-reservedExpansion: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ExportDicomDataRequest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  "/v1alpha2/{name}:import":
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/upload_protocol"
    post:
      description: >-
        Imports data into the DICOM store by copying it from the specified
        source.

        For errors, the Operation will be populated with error details (in the form

        of ImportDicomDataErrorDetails in error.details), which will hold

        finer-grained error information. Errors are also logged to Stackdriver

        (see [Viewing logs](/healthcare/docs/how-tos/stackdriver-logging)).

        The metadata field type is

        OperationMetadata.
      operationId: healthcare.projects.locations.datasets.dicomStores.import
      parameters:
        - description: >-
            The name of the DICOM store resource into which the data is imported
            (e.g.,

            `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/dicomStores/{dicom_store_id}`).
          in: path
          name: name
          required: true
          x-reservedExpansion: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ImportDicomDataRequest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  "/v1alpha2/{parent}/annotationStores":
    get:
      description: Lists the Annotation stores in the given dataset for a source store.
      operationId: healthcare.projects.locations.datasets.annotationStores.list
      parameters:
        - description: >-
            Restricts stores returned to those matching a filter. Syntax:

            https://cloud.google.com/appengine/docs/standard/python/search/query_strings

            Only filtering on labels is supported, for example `labels.key=value`.
          in: query
          name: filter
          schema:
            type: string
        - description: >-
            Limit on the number of Annotation stores to return in a single
            response.

            If zero the default page size of 100 is used.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: The next_page_token value returned from the previous List request,
            if any.
          in: query
          name: pageToken
          schema:
            type: string
        - description: Name of the dataset.
          in: path
          name: parent
          required: true
          x-reservedExpansion: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ListAnnotationStoresResponse"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/upload_protocol"
    post:
      description: Creates a new Annotation store within the parent dataset.
      operationId: healthcare.projects.locations.datasets.annotationStores.create
      parameters:
        - description: >-
            The ID of the Annotation store that is being created.

            The string must match the following regex: `[\p{L}\p{N}_\-\.]{1,256}`.
          in: query
          name: annotationStoreId
          schema:
            type: string
        - description: The name of the dataset this Annotation store belongs to.
          in: path
          name: parent
          required: true
          x-reservedExpansion: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AnnotationStore"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/AnnotationStore"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  "/v1alpha2/{parent}/annotations":
    get:
      description: |-
        Lists the Annotations in the given
        Annotation store for a source
        resource.
      operationId: healthcare.projects.locations.datasets.annotationStores.annotations.list
      parameters:
        - description: >-
            Restricts Annotations returned to those matching a filter. Syntax:

            https://cloud.google.com/appengine/docs/standard/python/search/query_strings

            Fields/functions available for filtering are:

            - source_version
          in: query
          name: filter
          schema:
            type: string
        - description: |-
            Limit on the number of Annotations to return in a single response.
            If zero the default page size of 100 is used.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: The next_page_token value returned from the previous List request,
            if any.
          in: query
          name: pageToken
          schema:
            type: string
        - description: Name of the Annotation store to retrieve Annotations from.
          in: path
          name: parent
          required: true
          x-reservedExpansion: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ListAnnotationsResponse"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/upload_protocol"
    post:
      description: >-
        Creates a new Annotation record. It is

        valid to create Annotation objects for the same source more than once since

        a unique ID is assigned to each record by this service.
      operationId: healthcare.projects.locations.datasets.annotationStores.annotations.create
      parameters:
        - description: >-
            The name of the Annotation store this annotation belongs to. For
            example,

            `projects/my-project/locations/us-central1/datasets/mydataset/annotationStores/myannotationstore`.
          in: path
          name: parent
          required: true
          x-reservedExpansion: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Annotation"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Annotation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  "/v1alpha2/{parent}/datasets":
    get:
      description: Lists the health datasets in the current project.
      operationId: healthcare.projects.locations.datasets.list
      parameters:
        - description: >-
            The maximum number of items to return. Capped to 100 if not
            specified.

            May not be larger than 1000.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: The next_page_token value returned from a previous List request, if
            any.
          in: query
          name: pageToken
          schema:
            type: string
        - description: |-
            The name of the project whose datasets should be listed (e.g.,
            `projects/{project_id}/locations/{location_id}`).
          in: path
          name: parent
          required: true
          x-reservedExpansion: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ListDatasetsResponse"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/upload_protocol"
    post:
      description: >-
        Creates a new health dataset. Results are returned through the

        Operation interface which returns either an

        `Operation.response` which contains a Dataset or

        `Operation.error`. The metadata

        field type is OperationMetadata.

        A Google Cloud Platform project can contain up to 500 datasets across all

        regions.
      operationId: healthcare.projects.locations.datasets.create
      parameters:
        - description: >-
            The ID of the dataset that is being created.

            The string must match the following regex: `[\p{L}\p{N}_\-\.]{1,256}`.
          in: query
          name: datasetId
          schema:
            type: string
        - description: >-
            The name of the project in which the dataset should be created
            (e.g.,

            `projects/{project_id}/locations/{location_id}`).
          in: path
          name: parent
          required: true
          x-reservedExpansion: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Dataset"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  "/v1alpha2/{parent}/dicomStores":
    get:
      description: Lists the DICOM stores in the given dataset.
      operationId: healthcare.projects.locations.datasets.dicomStores.list
      parameters:
        - description: >-
            Restricts stores returned to those matching a filter. Syntax:

            https://cloud.google.com/appengine/docs/standard/python/search/query_strings

            Only filtering on labels is supported, for example `labels.key=value`.
          in: query
          name: filter
          schema:
            type: string
        - description: |-
            Limit on the number of DICOM stores to return in a single response.
            If zero the default page size of 100 is used.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: The next_page_token value returned from the previous List request,
            if any.
          in: query
          name: pageToken
          schema:
            type: string
        - description: Name of the dataset.
          in: path
          name: parent
          required: true
          x-reservedExpansion: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ListDicomStoresResponse"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/upload_protocol"
    post:
      description: Creates a new DICOM store within the parent dataset.
      operationId: healthcare.projects.locations.datasets.dicomStores.create
      parameters:
        - description: |-
            The ID of the DICOM store that is being created.
            Any string value up to 256 characters in length.
          in: query
          name: dicomStoreId
          schema:
            type: string
        - description: The name of the dataset this DICOM store belongs to.
          in: path
          name: parent
          required: true
          x-reservedExpansion: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/DicomStore"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/DicomStore"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  "/v1alpha2/{parent}/dicomWeb/{dicomWebPath}":
    delete:
      description: >-
        DeleteInstance deletes an instance associated with the given study,
        series,

        and SOP Instance UID. Delete requests are equivalent to the GET requests

        specified in the WADO-RS standard.
      operationId: healthcare.projects.locations.datasets.dicomStores.dicomWeb.studies.series.instances.delete
      parameters:
        - description: |-
            The path of the DeleteInstance request (e.g.,
            `studies/{study_id}/series/{series_id}/instances/{instance_id}`).
          in: path
          name: dicomWebPath
          required: true
          x-reservedExpansion: true
          schema:
            type: string
        - description: >-
            The name of the DICOM store that is being accessed (e.g.,

            `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/dicomStores/{dicom_store_id}`).
          in: path
          name: parent
          required: true
          x-reservedExpansion: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Empty"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    get:
      description: >-
        RetrieveRenderedFrames returns instances associated with the given
        study,

        series, SOP Instance UID and frame numbers in an acceptable Rendered Media

        Type. See

        http://dicom.nema.org/medical/dicom/current/output/html/part18.html#sect_10.4.
      operationId: healthcare.projects.locations.datasets.dicomStores.dicomWeb.studies.series.instances.frames.rendered
      parameters:
        - description: >-
            The path of the RetrieveRenderedFrames DICOMweb request (e.g.,

            `studies/{study_id}/series/{series_id}/instances/{instance_id}/frames/{frame_list}/rendered`).
          in: path
          name: dicomWebPath
          required: true
          x-reservedExpansion: true
          schema:
            type: string
        - description: >-
            The name of the DICOM store that is being accessed (e.g.,

            `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/dicomStores/{dicom_store_id}`).
          in: path
          name: parent
          required: true
          x-reservedExpansion: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/HttpBody"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/upload_protocol"
    post:
      description: >-
        StoreInstances stores DICOM instances associated with study instance
        unique

        identifiers (SUID). See

        http://dicom.nema.org/medical/dicom/current/output/html/part18.html#sect_10.5.
      operationId: healthcare.projects.locations.datasets.dicomStores.dicomWeb.studies.storeInstances
      parameters:
        - description: |-
            The path of the StoreInstances DICOMweb request (e.g.,
            `studies/[{study_id}]`). Note that the `study_uid` is optional.
          in: path
          name: dicomWebPath
          required: true
          x-reservedExpansion: true
          schema:
            type: string
        - description: >-
            The name of the DICOM store that is being accessed (e.g.,

            `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/dicomStores/{dicom_store_id}`).
          in: path
          name: parent
          required: true
          x-reservedExpansion: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/HttpBody"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/HttpBody"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  "/v1alpha2/{parent}/fhir":
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/upload_protocol"
    post:
      description: >-
        Executes all the requests in the given Bundle.


        Implements the FHIR standard [batch/transaction

        interaction](http://hl7.org/implement/standards/fhir/STU3/http.html#transaction).


        Supports all interactions within a bundle, except search. This method

        accepts Bundles of type `batch` and `transaction`, processing them

        according to the [batch processing

        rules](http://hl7.org/implement/standards/fhir/STU3/http.html#2.21.0.17.1)

        and [transaction processing

        rules](http://hl7.org/implement/standards/fhir/STU3/http.html#2.21.0.17.2).


        The request body must contain a JSON-encoded FHIR `Bundle` resource, and

        the request headers must contain `Content-Type: application/fhir+json`.


        For a batch bundle or a successful transaction the response body will

        contain a JSON-encoded representation of a `Bundle` resource of type

        `batch-response` or `transaction-response` containing one entry for each

        entry in the request, with the outcome of processing the entry. In the

        case of an error for a transaction bundle, the response body will contain

        a JSON-encoded `OperationOutcome` resource describing the reason for the

        error. If the request cannot be mapped to a valid API method on a FHIR

        store, a generic GCP error might be returned instead.
      operationId: healthcare.projects.locations.datasets.fhirStores.fhir.executeBundle
      parameters:
        - description: Name of the FHIR store in which this bundle will be executed.
          in: path
          name: parent
          required: true
          x-reservedExpansion: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/HttpBody"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/HttpBody"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  "/v1alpha2/{parent}/fhir/Observation/$lastn":
    get:
      description: >-
        Retrieves the N most recent `Observation` resources for a subject
        matching

        search criteria specified as query parameters, grouped by

        `Observation.code`, sorted from most recent to oldest.


        Implements the FHIR extended operation

        [Observation-lastn](http://hl7.org/implement/standards/fhir/STU3/observation-operations.html#lastn).


        Search terms are provided as query parameters following the same pattern as

        the search method. This operation accepts an additional

        query parameter `max`, which specifies N, the maximum number of

        Observations to return from each group, with a default of 1.


        On success, the response body will contain a JSON-encoded representation

        of a `Bundle` resource of type `searchset`, containing the results of the

        operation.

        Errors generated by the FHIR store will contain a JSON-encoded

        `OperationOutcome` resource describing the reason for the error. If the

        request cannot be mapped to a valid API method on a FHIR store, a generic

        GCP error might be returned instead.
      operationId: healthcare.projects.locations.datasets.fhirStores.fhir.Observation-lastn
      parameters:
        - description: Name of the FHIR store to retrieve resources from.
          in: path
          name: parent
          required: true
          x-reservedExpansion: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/HttpBody"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/upload_protocol"
  "/v1alpha2/{parent}/fhir/_search":
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/upload_protocol"
    post:
      description: >-
        Searches for resources in the given FHIR store according to criteria

        specified as query parameters.


        Implements the FHIR standard [search

        interaction](http://hl7.org/implement/standards/fhir/STU3/http.html#search)

        using the search semantics described in the [FHIR Search

        specification](http://hl7.org/implement/standards/fhir/STU3/search.html).


        Supports three methods of search defined by the specification:


        *  `GET [base]?[parameters]` to search across all resources.

        *  `GET [base]/[type]?[parameters]` to search resources of a specified

        type.

        *  `POST [base]/[type]/_search?[parameters]` as an alternate form having

        the same semantics as the `GET` method.


        The `GET` methods do not support compartment searches. The `POST` method

        does not support `application/x-www-form-urlencoded` search parameters.


        On success, the response body will contain a JSON-encoded representation

        of a `Bundle` resource of type `searchset`, containing the results of the

        search.

        Errors generated by the FHIR store will contain a JSON-encoded

        `OperationOutcome` resource describing the reason for the error. If the

        request cannot be mapped to a valid API method on a FHIR store, a generic

        GCP error might be returned instead.


        The server's capability statement, retrieved through

        capabilities, indicates what search parameters

        are supported on each FHIR resource. A list of all search parameters

        defined by the specification can be found in the [FHIR Search Parameter

        Registry](http://hl7.org/implement/standards/fhir/STU3/searchparameter-registry.html).


        Supported search modifiers: `:missing`, `:exact`, `:contains`, `:text`,

        `:in`, `:not-in`, `:above`, `:below`, `:[type]`, `:not`, and `:recurse`.


        Supported search result parameters: `_sort`, `_count`, `_include`,

        `_revinclude`, `_summary=text`, `_summary=data`, and `_elements`.


        The maximum number of search results returned defaults to 100, which can

        be overridden by the `_count` parameter up to a maximum limit of 1000. If

        there are additional results, the returned `Bundle` will contain

        pagination links.


        Resources with a total size larger than 5MB or a field count larger than

        50,000 might not be fully searchable as the server might trim its generated

        search index in those cases.


        Note: FHIR resources are indexed asynchronously, so there might be a slight

        delay between the time a resource is created or changes and when the change

        is reflected in search results.
      operationId: healthcare.projects.locations.datasets.fhirStores.fhir.search
      parameters:
        - description: Name of the FHIR store to retrieve resources from.
          in: path
          name: parent
          required: true
          x-reservedExpansion: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SearchResourcesRequest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/HttpBody"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  "/v1alpha2/{parent}/fhir/{type}":
    delete:
      description: >-
        Deletes FHIR resources that match a search query.


        Implements the FHIR standard [conditional delete

        interaction](http://hl7.org/implement/standards/fhir/STU3/http.html#2.21.0.13.1).

        If multiple resources match, all of them will be deleted.


        Search terms are provided as query parameters following the same pattern as

        the search method.


        Note: Unless resource versioning is disabled by setting the

        disable_resource_versioning flag

        on the FHIR store, the deleted resources will be moved to a history

        repository that can still be retrieved through vread

        and related methods, unless they are removed by the

        purge method.
      operationId: healthcare.projects.locations.datasets.fhirStores.fhir.conditionalDelete
      parameters:
        - description: The name of the FHIR store this resource belongs to.
          in: path
          name: parent
          required: true
          x-reservedExpansion: true
          schema:
            type: string
        - description: >-
            The FHIR resource type to delete, such as Patient or Observation.
            For a

            complete list, see the [FHIR Resource

            Index](http://hl7.org/implement/standards/fhir/STU3/resourcelist.html).
          in: path
          name: type
          required: true
          x-reservedExpansion: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Empty"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/upload_protocol"
    patch:
      description: >-
        If a resource is found based on the search criteria specified in the
        query

        parameters, updates part of that resource by applying the operations

        specified in a [JSON Patch](http://jsonpatch.com/) document.


        Implements the FHIR standard [conditional patch

        interaction](http://hl7.org/implement/standards/fhir/STU3/http.html#patch).


        Search terms are provided as query parameters following the same pattern as

        the search method.


        If the search criteria identify more than one match, the request will

        return a `412 Precondition Failed` error.


        The request body must contain a JSON Patch document, and the request

        headers must contain `Content-Type: application/json-patch+json`.


        On success, the response body will contain a JSON-encoded representation

        of the updated resource, including the server-assigned version ID.

        Errors generated by the FHIR store will contain a JSON-encoded

        `OperationOutcome` resource describing the reason for the error. If the

        request cannot be mapped to a valid API method on a FHIR store, a generic

        GCP error might be returned instead.
      operationId: healthcare.projects.locations.datasets.fhirStores.fhir.conditionalPatch
      parameters:
        - description: The name of the FHIR store this resource belongs to.
          in: path
          name: parent
          required: true
          x-reservedExpansion: true
          schema:
            type: string
        - description: >-
            The FHIR resource type to update, such as Patient or Observation.
            For a

            complete list, see the [FHIR Resource

            Index](http://hl7.org/implement/standards/fhir/STU3/resourcelist.html).
          in: path
          name: type
          required: true
          x-reservedExpansion: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/HttpBody"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/HttpBody"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    post:
      description: >-
        Creates a FHIR resource.


        Implements the FHIR standard [create

        interaction](http://hl7.org/implement/standards/fhir/STU3/http.html#create),

        which creates a new resource with a server-assigned resource ID.


        Also supports the FHIR standard [conditional create

        interaction](http://hl7.org/implement/standards/fhir/STU3/http.html#ccreate),

        specified by supplying an `If-None-Exist` header containing a FHIR search

        query. If no resources match this search query, the server processes the

        create operation as normal.


        The request body must contain a JSON-encoded FHIR resource, and the request

        headers must contain `Content-Type: application/fhir+json`.


        On success, the response body will contain a JSON-encoded representation

        of the resource as it was created on the server, including the

        server-assigned resource ID and version ID.

        Errors generated by the FHIR store will contain a JSON-encoded

        `OperationOutcome` resource describing the reason for the error. If the

        request cannot be mapped to a valid API method on a FHIR store, a generic

        GCP error might be returned instead.
      operationId: healthcare.projects.locations.datasets.fhirStores.fhir.create
      parameters:
        - description: The name of the FHIR store this resource belongs to.
          in: path
          name: parent
          required: true
          x-reservedExpansion: true
          schema:
            type: string
        - description: >-
            The FHIR resource type to create, such as Patient or Observation.
            For a

            complete list, see the [FHIR Resource

            Index](http://hl7.org/implement/standards/fhir/STU3/resourcelist.html).

            Must match the resource type in the provided content.
          in: path
          name: type
          required: true
          x-reservedExpansion: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/HttpBody"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/HttpBody"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    put:
      description: >-
        If a resource is found based on the search criteria specified in the
        query

        parameters, updates the entire contents of that resource.


        Implements the FHIR standard [conditional update

        interaction](http://hl7.org/implement/standards/fhir/STU3/http.html#cond-update).


        Search terms are provided as query parameters following the same pattern as

        the search method.


        If the search criteria identify more than one match, the request will

        return a `412 Precondition Failed` error.

        If the search criteria identify zero matches, and the supplied resource

        body contains an `id`, and the FHIR store has

        enable_update_create set, creates the

        resource with the client-specified ID. If the search criteria identify zero

        matches, and the supplied resource body does not contain an `id`, the

        resource will be created with a server-assigned ID as per the

        create method.


        The request body must contain a JSON-encoded FHIR resource, and the request

        headers must contain `Content-Type: application/fhir+json`.


        On success, the response body will contain a JSON-encoded representation

        of the updated resource, including the server-assigned version ID.

        Errors generated by the FHIR store will contain a JSON-encoded

        `OperationOutcome` resource describing the reason for the error. If the

        request cannot be mapped to a valid API method on a FHIR store, a generic

        GCP error might be returned instead.
      operationId: healthcare.projects.locations.datasets.fhirStores.fhir.conditionalUpdate
      parameters:
        - description: The name of the FHIR store this resource belongs to.
          in: path
          name: parent
          required: true
          x-reservedExpansion: true
          schema:
            type: string
        - description: >-
            The FHIR resource type to update, such as Patient or Observation.
            For a

            complete list, see the [FHIR Resource

            Index](http://hl7.org/implement/standards/fhir/STU3/resourcelist.html).

            Must match the resource type in the provided content.
          in: path
          name: type
          required: true
          x-reservedExpansion: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/HttpBody"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/HttpBody"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  "/v1alpha2/{parent}/fhirStores":
    get:
      description: Lists the FHIR stores in the given dataset.
      operationId: healthcare.projects.locations.datasets.fhirStores.list
      parameters:
        - description: >-
            Restricts stores returned to those matching a filter. Syntax:

            https://cloud.google.com/appengine/docs/standard/python/search/query_strings

            Only filtering on labels is supported, for example `labels.key=value`.
          in: query
          name: filter
          schema:
            type: string
        - description: >-
            Limit on the number of FHIR stores to return in a single
            response.  If zero

            the default page size of 100 is used.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: The next_page_token value returned from the previous List request,
            if any.
          in: query
          name: pageToken
          schema:
            type: string
        - description: Name of the dataset.
          in: path
          name: parent
          required: true
          x-reservedExpansion: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ListFhirStoresResponse"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/upload_protocol"
    post:
      description: Creates a new FHIR store within the parent dataset.
      operationId: healthcare.projects.locations.datasets.fhirStores.create
      parameters:
        - description: >-
            The ID of the FHIR store that is being created.

            The string must match the following regex: `[\p{L}\p{N}_\-\.]{1,256}`.
          in: query
          name: fhirStoreId
          schema:
            type: string
        - description: The name of the dataset this FHIR store belongs to.
          in: path
          name: parent
          required: true
          x-reservedExpansion: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/FhirStore"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/FhirStore"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  "/v1alpha2/{parent}/hl7V2Stores":
    get:
      description: Lists the HL7v2 stores in the given dataset.
      operationId: healthcare.projects.locations.datasets.hl7V2Stores.list
      parameters:
        - description: >-
            Restricts stores returned to those matching a filter. Syntax:

            https://cloud.google.com/appengine/docs/standard/python/search/query_strings

            Only filtering on labels is supported, for example `labels.key=value`.
          in: query
          name: filter
          schema:
            type: string
        - description: |-
            Limit on the number of HL7v2 stores to return in a single response.
            If zero the default page size of 100 is used.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: The next_page_token value returned from the previous List request,
            if any.
          in: query
          name: pageToken
          schema:
            type: string
        - description: Name of the dataset.
          in: path
          name: parent
          required: true
          x-reservedExpansion: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ListHl7V2StoresResponse"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/upload_protocol"
    post:
      description: Creates a new HL7v2 store within the parent dataset.
      operationId: healthcare.projects.locations.datasets.hl7V2Stores.create
      parameters:
        - description: >-
            The ID of the HL7v2 store that is being created.

            The string must match the following regex: `[\p{L}\p{N}_\-\.]{1,256}`.
          in: query
          name: hl7V2StoreId
          schema:
            type: string
        - description: The name of the dataset this HL7v2 store belongs to.
          in: path
          name: parent
          required: true
          x-reservedExpansion: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Hl7V2Store"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Hl7V2Store"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  "/v1alpha2/{parent}/messages":
    get:
      description: >-
        Lists all the messages in the given HL7v2 store with support for
        filtering.


        Note: HL7v2 messages are indexed asynchronously, so there might be a slight

        delay between the time a message is created and when it can be found

        through a filter.
      operationId: healthcare.projects.locations.datasets.hl7V2Stores.messages.list
      parameters:
        - description: >-
            Restricts messages returned to those matching a filter. Syntax:

            https://cloud.google.com/appengine/docs/standard/python/search/query_strings


            Fields/functions available for filtering are:


            *  `message_type`, from the MSH-9 segment; for example

            `NOT message_type = "ADT"`

            *  `send_date` or `sendDate`, the YYYY-MM-DD date the message was sent in

            the dataset's time_zone, from the MSH-7 segment; for example

            `send_date < "2017-01-02"`

            *  `send_time`, the timestamp when the message was sent, using the

            RFC3339 time format for comparisons, from the MSH-7 segment; for example

            `send_time < "2017-01-02T00:00:00-05:00"`

            *  `send_facility`, the care center that the message came from, from the

            MSH-4 segment; for example `send_facility = "ABC"`

            *  `HL7RegExp(expr)`, which does regular expression matching of `expr`

            against the message payload using re2 (http://code.google.com/p/re2/)

            syntax; for example `HL7RegExp("^.*\|.*\|EMERG")`

            *  `PatientId(value, type)`, which matches if the message lists a patient

            having an ID of the given value and type in the PID-2, PID-3, or PID-4

            segments; for example `PatientId("123456", "MRN")`

            *  `labels.x`, a string value of the label with key `x` as set using the

            Message.labels

            map, for example `labels."priority"="high"`. The operator `:*` can be used

            to assert the existence of a label, for example `labels."priority":*`.


            Limitations on conjunctions:


            *  Negation on the patient ID function or the labels field is not

            supported, for example these queries are invalid:

            `NOT PatientId("123456", "MRN")`, `NOT labels."tag1":*`,

            `NOT labels."tag2"="val2"`.

            *  Conjunction of multiple patient ID functions is not supported, for

            example this query is invalid:

            `PatientId("123456", "MRN") AND PatientId("456789", "MRN")`.

            *  Conjunction of multiple labels fields is also not supported, for

            example this query is invalid: `labels."tag1":* AND labels."tag2"="val2"`.

            *  Conjunction of one patient ID function, one labels field and conditions

            on other fields is supported, for example this query is valid:

            `PatientId("123456", "MRN") AND labels."tag1":* AND message_type = "ADT"`.


            The HasLabel(x) and Label(x) syntax from previous API versions are

            deprecated; replaced by the `labels.x` syntax.
          in: query
          name: filter
          schema:
            type: string
        - description: >-
            Orders messages returned by the specified order_by clause.

            Syntax: https://cloud.google.com/apis/design/design_patterns#sorting_order


            Fields available for ordering are:


            *  `send_time`
          in: query
          name: orderBy
          schema:
            type: string
        - description: |-
            Limit on the number of messages to return in a single response.
            If zero the default page size of 100 is used.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: The next_page_token value returned from the previous List request,
            if any.
          in: query
          name: pageToken
          schema:
            type: string
        - description: Name of the HL7v2 store to retrieve messages from.
          in: path
          name: parent
          required: true
          x-reservedExpansion: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ListMessagesResponse"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/upload_protocol"
    post:
      description: >-
        Creates a message and sends a notification to the Cloud Pub/Sub topic.
        If

        configured, the MLLP adapter listens to messages created by this method and

        sends those back to the hospital. A successful response indicates the

        message has been persisted to storage and a Cloud Pub/Sub notification has

        been sent. Sending to the hospital by the MLLP adapter happens

        asynchronously.
      operationId: healthcare.projects.locations.datasets.hl7V2Stores.messages.create
      parameters:
        - description: The name of the dataset this message belongs to.
          in: path
          name: parent
          required: true
          x-reservedExpansion: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateMessageRequest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Message"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  "/v1alpha2/{parent}/messages:ingest":
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/upload_protocol"
    post:
      description: >-
        Ingests a new HL7v2 message from the hospital and sends a notification
        to

        the Cloud Pub/Sub topic. Return is an HL7v2 ACK message if the message was

        successfully stored. Otherwise an error is returned.  If an identical

        HL7v2 message is created twice only one resource is created on the server

        and no error is reported.
      operationId: healthcare.projects.locations.datasets.hl7V2Stores.messages.ingest
      parameters:
        - description: The name of the HL7v2 store this message belongs to.
          in: path
          name: parent
          required: true
          x-reservedExpansion: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/IngestMessageRequest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/IngestMessageResponse"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  "/v1alpha2/{resource}:getIamPolicy":
    get:
      description: >-
        Gets the access control policy for a resource.

        Returns an empty policy if the resource exists and does not have a policy

        set.
      operationId: healthcare.projects.locations.datasets.dicomStores.getIamPolicy
      parameters:
        - description: >-
            Optional. The policy format version to be returned.

            Acceptable values are 0, 1, and 3.

            If the value is 0, or the field is omitted, policy format version 1 will be

            returned.
          in: query
          name: options.requestedPolicyVersion
          schema:
            type: integer
        - description: >-
            REQUIRED: The resource for which the policy is being requested.

            See the operation documentation for the appropriate value for this field.
          in: path
          name: resource
          required: true
          x-reservedExpansion: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Policy"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/upload_protocol"
    post:
      description: >-
        Gets the access control policy for a resource. Returns NOT_FOUND error
        if

        the resource does not exist. Returns an empty policy if the resource exists

        but does not have a policy set.


        Authorization requires the Google IAM permission

        `healthcare.AnnotationStores.getIamPolicy` on the specified

        resource
      operationId: healthcare.projects.locations.datasets.annotationStores.getIamPolicy
      parameters:
        - description: >-
            REQUIRED: The resource for which the policy is being requested.

            See the operation documentation for the appropriate value for this field.
          in: path
          name: resource
          required: true
          x-reservedExpansion: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GetIamPolicyRequest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Policy"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  "/v1alpha2/{resource}:setIamPolicy":
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/upload_protocol"
    post:
      description: |-
        Sets the access control policy on the specified resource. Replaces any
        existing policy.
      operationId: healthcare.projects.locations.datasets.dicomStores.setIamPolicy
      parameters:
        - description: >-
            REQUIRED: The resource for which the policy is being specified.

            See the operation documentation for the appropriate value for this field.
          in: path
          name: resource
          required: true
          x-reservedExpansion: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SetIamPolicyRequest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Policy"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  "/v1alpha2/{resource}:testIamPermissions":
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/upload_protocol"
    post:
      description: >-
        Returns permissions that a caller has on the specified resource.

        If the resource does not exist, this will return an empty set of

        permissions, not a NOT_FOUND error.


        Note: This operation is designed to be used for building permission-aware

        UIs and command-line tools, not for authorization checking. This operation

        may "fail open" without warning.
      operationId: healthcare.projects.locations.datasets.dicomStores.testIamPermissions
      parameters:
        - description: >-
            REQUIRED: The resource for which the policy detail is being
            requested.

            See the operation documentation for the appropriate value for this field.
          in: path
          name: resource
          required: true
          x-reservedExpansion: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TestIamPermissionsRequest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/TestIamPermissionsResponse"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  "/v1alpha2/{sourceDataset}:deidentify":
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/upload_protocol"
    post:
      description: |-
        Creates a new dataset containing de-identified data from the source
        dataset. The metadata field type
        is OperationMetadata.
        If the request is successful, the
        response field type is
        DeidentifySummary.
        If errors occur,
        details field type is
        DeidentifyErrorDetails.
      operationId: healthcare.projects.locations.datasets.deidentify
      parameters:
        - description: >-
            Source dataset resource name. (e.g.,

            `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}`).
          in: path
          name: sourceDataset
          required: true
          x-reservedExpansion: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeidentifyDatasetRequest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
servers:
  - url: https://healthcare.googleapis.com/
components:
  parameters:
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
          - media
          - proto
        default: json
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    key:
      description: API key. Your API key identifies your project and provides you with API
        access, quota, and reports. Required unless you provide an OAuth 2.0
        token.
      in: query
      name: key
      schema:
        type: string
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
        default: true
    quotaUser:
      description: Available to use for quota purposes for server-side applications. Can be
        any arbitrary string assigned to a user, but should not exceed 40
        characters.
      in: query
      name: quotaUser
      schema:
        type: string
    uploadType:
      description: Legacy upload protocol for media (e.g. "media", "multipart").
      in: query
      name: uploadType
      schema:
        type: string
    upload_protocol:
      description: Upload protocol for media (e.g. "raw", "multipart").
      in: query
      name: upload_protocol
      schema:
        type: string
    _.xgafv:
      description: V1 error format.
      in: query
      name: $.xgafv
      schema:
        type: string
        enum:
          - "1"
          - "2"
  requestBodies:
    DicomStore:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/DicomStore"
    HttpBody:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/HttpBody"
  securitySchemes:
    Oauth2:
      description: Oauth 2.0 implicit authentication
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes:
            https://www.googleapis.com/auth/cloud-platform: View and manage your data across Google Cloud Platform services
    Oauth2c:
      description: Oauth 2.0 accessCode authentication
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          tokenUrl: https://accounts.google.com/o/oauth2/token
          scopes:
            https://www.googleapis.com/auth/cloud-platform: View and manage your data across Google Cloud Platform services
  schemas:
    Annotation:
      description: An annotation record.
      properties:
        annotationSource:
          $ref: "#/components/schemas/AnnotationSource"
        imageAnnotation:
          $ref: "#/components/schemas/ImageAnnotation"
        name:
          description: >-
            Output only. Resource name of the Annotation, of the form

            `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/annotationStores/{annotation_store_id}/annotations/{annotation_id}`.
          type: string
        resourceAnnotation:
          $ref: "#/components/schemas/ResourceAnnotation"
        textAnnotation:
          $ref: "#/components/schemas/SensitiveTextAnnotation"
      type: object
    AnnotationSource:
      description: AnnotationSource holds the source information of the annotation.
      properties:
        cloudHealthcareSource:
          $ref: "#/components/schemas/CloudHealthcareSource"
      type: object
    AnnotationStore:
      description: |-
        An Annotation store that can store annotation resources such as
        labels and tags for text, image and audio.
      properties:
        labels:
          additionalProperties:
            type: string
          description: >-
            User-supplied key-value pairs used to organize Annotation stores.


            Label keys must be between 1 and 63 characters long, have a UTF-8 encoding

            of maximum 128 bytes, and must conform to the

            following PCRE regular expression:

            \p{Ll}\p{Lo}{0,62}


            Label values are optional, must be between 1 and 63 characters long, have

            a UTF-8 encoding of maximum 128 bytes, and must conform to the

            following PCRE regular expression: [\p{Ll}\p{Lo}\p{N}_-]{0,63}


            No more than 64 labels can be associated with a given store.
          type: object
        name:
          description: >-
            Output only. Resource name of the Annotation store, of the form

            `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/annotationStores/{annotation_store_id}`.
          type: string
      type: object
    AuditConfig:
      description: >-
        Specifies the audit configuration for a service.

        The configuration determines which permission types are logged, and what

        identities, if any, are exempted from logging.

        An AuditConfig must have one or more AuditLogConfigs.


        If there are AuditConfigs for both `allServices` and a specific service,

        the union of the two AuditConfigs is used for that service: the log_types

        specified in each AuditConfig are enabled, and the exempted_members in each

        AuditLogConfig are exempted.


        Example Policy with multiple AuditConfigs:

            {
              "audit_configs": [
                {
                  "service": "allServices"
                  "audit_log_configs": [
                    {
                      "log_type": "DATA_READ",
                      "exempted_members": [
                        "user:jose@example.com"
                      ]
                    },
                    {
                      "log_type": "DATA_WRITE",
                    },
                    {
                      "log_type": "ADMIN_READ",
                    }
                  ]
                },
                {
                  "service": "sampleservice.googleapis.com"
                  "audit_log_configs": [
                    {
                      "log_type": "DATA_READ",
                    },
                    {
                      "log_type": "DATA_WRITE",
                      "exempted_members": [
                        "user:aliya@example.com"
                      ]
                    }
                  ]
                }
              ]
            }

        For sampleservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ

        logging. It also exempts jose@example.com from DATA_READ logging, and

        aliya@example.com from DATA_WRITE logging.
      properties:
        auditLogConfigs:
          description: The configuration for logging of each type of permission.
          items:
            $ref: "#/components/schemas/AuditLogConfig"
          type: array
        service:
          description: |-
            Specifies a service that will be enabled for audit logging.
            For example, `storage.googleapis.com`, `cloudsql.googleapis.com`.
            `allServices` is a special value that covers all services.
          type: string
      type: object
    AuditLogConfig:
      description: |-
        Provides the configuration for logging a type of permissions.
        Example:

            {
              "audit_log_configs": [
                {
                  "log_type": "DATA_READ",
                  "exempted_members": [
                    "user:jose@example.com"
                  ]
                },
                {
                  "log_type": "DATA_WRITE",
                }
              ]
            }

        This enables 'DATA_READ' and 'DATA_WRITE' logging, while exempting
        jose@example.com from DATA_READ logging.
      properties:
        exemptedMembers:
          description: |-
            Specifies the identities that do not cause logging for this type of
            permission.
            Follows the same format of Binding.members.
          items:
            type: string
          type: array
        logType:
          description: The log type that this config enables.
          enum:
            - LOG_TYPE_UNSPECIFIED
            - ADMIN_READ
            - DATA_WRITE
            - DATA_READ
          type: string
      type: object
    Binding:
      description: Associates `members` with a `role`.
      properties:
        condition:
          $ref: "#/components/schemas/Expr"
        members:
          description: >+
            Specifies the identities requesting access for a Cloud Platform
            resource.

            `members` can have the following values:


            * `allUsers`: A special identifier that represents anyone who is
               on the internet; with or without a Google account.

            * `allAuthenticatedUsers`: A special identifier that represents anyone
               who is authenticated with a Google account or a service account.

            * `user:{emailid}`: An email address that represents a specific Google
               account. For example, `alice@example.com` .


            * `serviceAccount:{emailid}`: An email address that represents a service
               account. For example, `my-other-app@appspot.gserviceaccount.com`.

            * `group:{emailid}`: An email address that represents a Google group.
               For example, `admins@example.com`.


            * `domain:{domain}`: The G Suite domain (primary) that represents all the
               users of that domain. For example, `google.com` or `example.com`.

          items:
            type: string
          type: array
        role:
          description: |-
            Role that is assigned to `members`.
            For example, `roles/viewer`, `roles/editor`, or `roles/owner`.
          type: string
      type: object
    BoundingPoly:
      description: A bounding polygon for the detected image annotation.
      properties:
        label:
          type: string
        vertices:
          items:
            $ref: "#/components/schemas/Vertex"
          type: array
      type: object
    CharacterMaskConfig:
      description: Mask a string by replacing its characters with a fixed character.
      properties:
        maskingCharacter:
          description: Character to mask the sensitive values. If not supplied, defaults to
            "*".
          type: string
      type: object
    CloudHealthcareSource:
      description: Cloud Healthcare API resource.
      properties:
        name:
          description: Full path of a Cloud Healthcare API resource.
          type: string
      type: object
    CreateMessageRequest:
      description: Creates a new message.
      properties:
        message:
          $ref: "#/components/schemas/Message"
      type: object
    CryptoHashConfig:
      description: >-
        Pseudonymization method that generates surrogates via cryptographic
        hashing.

        Uses SHA-256.

        Outputs a base64-encoded representation of the hashed output

        (for example, `L7k0BHmF1ha5U3NfGykjro4xWi1MPVQPjhMAZbSV9mM=`).
      properties:
        cryptoKey:
          description: >-
            An AES 128/192/256 bit key. Causes the hash to be computed based on
            this

            key. A default key is generated for each Deidentify operation and is used

            wherever crypto_key is not specified.
          format: byte
          type: string
      type: object
    Dataset:
      description: >-
        A message representing a health dataset.


        A health dataset represents a collection of healthcare data pertaining to one

        or more patients. This may include multiple modalities of healthcare data,

        such as electronic medical records or medical imaging data.
      properties:
        name:
          description: >-
            Output only. Resource name of the dataset, of the form

            `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}`.
          type: string
        timeZone:
          description: >-
            The default timezone used by this dataset. Must be a either a valid
            IANA

            time zone name such as "America/New_York" or empty, which defaults to UTC.

            This is used for parsing times in resources (e.g., HL7 messages) where no

            explicit timezone is specified.
          type: string
      type: object
    DateShiftConfig:
      description: |-
        Shift a date forward or backward in time by a random amount which is
        consistent for a given patient and crypto key combination.
      properties:
        cryptoKey:
          description: >-
            An AES 128/192/256 bit key. Causes the shift to be computed based on
            this

            key and the patient ID. A default key is generated for each

            Deidentify operation and is used wherever crypto_key is not specified.
          format: byte
          type: string
      type: object
    DeidentifyConfig:
      description: |-
        Configures de-id options specific to different types of content.
        Each submessage customizes the handling of an
        https://tools.ietf.org/html/rfc6838 media type or subtype. Configs are
        applied in a nested manner at runtime.
      properties:
        dicom:
          $ref: "#/components/schemas/DicomConfig"
        fhir:
          $ref: "#/components/schemas/FhirConfig"
        image:
          $ref: "#/components/schemas/ImageConfig"
        text:
          $ref: "#/components/schemas/TextConfig"
      type: object
    DeidentifyDatasetRequest:
      description: Redacts identifying information from the specified dataset.
      properties:
        config:
          $ref: "#/components/schemas/DeidentifyConfig"
        destinationDataset:
          description: >-
            The name of the dataset resource to create and write the redacted
            data to

            (e.g.,

            `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}`).

             * The destination dataset must not exist.
             * The destination dataset must be in the same project as the source
               dataset. De-identifying data across multiple projects is not supported.
          type: string
      type: object
    DeidentifyErrorDetails:
      description: Contains the status of the Deidentify operation.
      properties:
        failureResourceCount:
          description: Number of resources failed to process.
          format: int64
          type: string
        failureStoreCount:
          description: Number of stores failed to process.
          format: int64
          type: string
        successResourceCount:
          description: Number of resources successfully processed.
          format: int64
          type: string
        successStoreCount:
          description: Number of stores successfully processed.
          format: int64
          type: string
      type: object
    DeidentifySummary:
      description: Contains a detailed summary of the Deidentify operation.
      properties:
        successResourceCount:
          description: Number of resources successfully processed.
          format: int64
          type: string
        successStoreCount:
          description: Number of stores successfully processed.
          format: int64
          type: string
      type: object
    Detail:
      description: Contains multiple sensitive information findings for each resource slice.
      properties:
        findings:
          items:
            $ref: "#/components/schemas/Finding"
          type: array
      type: object
    DicomConfig:
      description: Specifies the parameters needed for de-identification of DICOM stores.
      properties:
        filterProfile:
          description: Tag filtering profile that determines which tags to keep/remove.
          enum:
            - TAG_FILTER_PROFILE_UNSPECIFIED
            - MINIMAL_KEEP_LIST_PROFILE
            - ATTRIBUTE_CONFIDENTIALITY_BASIC_PROFILE
            - KEEP_ALL_PROFILE
            - DEIDENTIFY_TAG_CONTENTS
          type: string
        keepList:
          $ref: "#/components/schemas/TagFilterList"
        removeList:
          $ref: "#/components/schemas/TagFilterList"
      type: object
    DicomStore:
      description: Represents a DICOM store.
      properties:
        labels:
          additionalProperties:
            type: string
          description: >-
            User-supplied key-value pairs used to organize DICOM stores.


            Label keys must be between 1 and 63 characters long, have a UTF-8 encoding

            of maximum 128 bytes, and must conform to the

            following PCRE regular expression:

            \p{Ll}\p{Lo}{0,62}


            Label values are optional, must be between 1 and 63 characters long, have

            a UTF-8 encoding of maximum 128 bytes, and must conform to the

            following PCRE regular expression: [\p{Ll}\p{Lo}\p{N}_-]{0,63}


            No more than 64 labels can be associated with a given store.
          type: object
        name:
          description: >-
            Output only. Resource name of the DICOM store, of the form

            `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/dicomStores/{dicom_store_id}`.
          type: string
        notificationConfig:
          $ref: "#/components/schemas/NotificationConfig"
      type: object
    Empty:
      description: >-
        A generic empty message that you can re-use to avoid defining duplicated

        empty messages in your APIs. A typical example is to use it as the request

        or the response type of an API method. For instance:

            service Foo {
              rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);
            }

        The JSON representation for `Empty` is empty JSON object `{}`.
      properties: {}
      type: object
    ErrorDetail:
      description: >-
        Structure to describe the error encountered during batch operation on
        one

        resource. This is used both for sample errors in operation response, and

        for format of errors in error reports.
      properties:
        error:
          $ref: "#/components/schemas/Status"
        resource:
          description: The identifier of the resource.
          type: string
      type: object
    ExportDicomDataRequest:
      description: |-
        Exports data from the specified DICOM store.
        If a given resource (e.g., a DICOM object with the same SOPInstance UID)
        already exists in the output, it is overwritten with the version
        in the source dataset.
        Exported DICOM data will persist when the DICOM store from which it was
        exported is deleted.
      properties:
        bigqueryDestination:
          $ref: "#/components/schemas/GoogleCloudHealthcareV1alpha2DicomBigQueryDes\
            tination"
        gcsDestination:
          $ref: "#/components/schemas/GoogleCloudHealthcareV1alpha2DicomGcsDestinat\
            ion"
      type: object
    ExportResourcesRequest:
      description: Request to export resources.
      properties:
        bigqueryDestination:
          $ref: "#/components/schemas/GoogleCloudHealthcareV1alpha2FhirBigQueryDest\
            ination"
        gcsDestination:
          $ref: "#/components/schemas/GoogleCloudHealthcareV1alpha2FhirRestGcsDesti\
            nation"
      type: object
    Expr:
      description: |-
        Represents an expression text. Example:

            title: "User account presence"
            description: "Determines whether the request has a user account"
            expression: "size(request.user) > 0"
      properties:
        description:
          description: >-
            An optional description of the expression. This is a longer text
            which

            describes the expression, e.g. when hovered over it in a UI.
          type: string
        expression:
          description: |-
            Textual representation of an expression in
            Common Expression Language syntax.

            The application context of the containing message determines which
            well-known feature set of CEL is supported.
          type: string
        location:
          description: >-
            An optional string indicating the location of the expression for
            error

            reporting, e.g. a file name and a position in the file.
          type: string
        title:
          description: |-
            An optional title for the expression, i.e. a short string describing
            its purpose. This can be used e.g. in UIs which allow to enter the
            expression.
          type: string
      type: object
    FhirConfig:
      description: Specifies how de-identification of a FHIR store should be handled.
      properties:
        fieldMetadataList:
          description: >-
            Specifies FHIR paths to match and how to transform them. Any field
            that

            is not matched by a FieldMetadata will be passed through to the output

            dataset unmodified. All extensions are removed in the output.
          items:
            $ref: "#/components/schemas/FieldMetadata"
          type: array
      type: object
    FhirStore:
      description: Represents a FHIR store.
      properties:
        disableReferentialIntegrity:
          description: >-
            Whether to disable referential integrity in this FHIR store. This
            field is

            immutable after FHIR store creation.

            The default value is false, meaning that the API will enforce referential

            integrity and fail the requests that will result in inconsistent state in

            the FHIR store.

            When this field is set to true, the API will skip referential integrity

            check. Consequently, operations that rely on references, such as

            GetPatientEverything, will not return all the results if broken references

            exist.
          type: boolean
        disableResourceVersioning:
          description: >-
            Whether to disable resource versioning for this FHIR store. This
            field can

            not be changed after the creation of FHIR store.

            If set to false, which is the default behavior, all write operations will

            cause historical versions to be recorded automatically. The historical

            versions can be fetched through the history APIs, but cannot be updated.

            If set to true, no historical versions will be kept. The server will send

            back errors for attempts to read the historical versions.
          type: boolean
        enableHistoryImport:
          description: >-
            Whether to allow the bulk import API to accept history bundles and
            directly

            insert historical resource versions into the FHIR store. Importing resource

            histories creates resource interactions that appear to have occurred in the

            past, which clients may not want to allow. If set to false, history bundles

            within an import will fail with an error.
          type: boolean
        enableUpdateCreate:
          description: >-
            Whether this FHIR store has the [updateCreate

            capability](https://www.hl7.org/fhir/capabilitystatement-definitions.html#CapabilityStatement.rest.resource.updateCreate).

            This determines if the client can use an Update operation to create a new

            resource with a client-specified ID. If false, all IDs are server-assigned

            through the Create operation and attempts to Update a non-existent resource

            will return errors. Please treat the audit logs with appropriate levels of

            care if client-specified resource IDs contain sensitive data such as

            patient identifiers, those IDs will be part of the FHIR resource path

            recorded in Cloud audit logs and Cloud Pub/Sub notifications.
          type: boolean
        labels:
          additionalProperties:
            type: string
          description: >-
            User-supplied key-value pairs used to organize FHIR stores.


            Label keys must be between 1 and 63 characters long, have a UTF-8 encoding

            of maximum 128 bytes, and must conform to the

            following PCRE regular expression:

            \p{Ll}\p{Lo}{0,62}


            Label values are optional, must be between 1 and 63 characters long, have

            a UTF-8 encoding of maximum 128 bytes, and must conform to the

            following PCRE regular expression: [\p{Ll}\p{Lo}\p{N}_-]{0,63}


            No more than 64 labels can be associated with a given store.
          type: object
        name:
          description: >-
            Output only. Resource name of the FHIR store, of the form

            `projects/{project_id}/datasets/{dataset_id}/fhirStores/{fhir_store_id}`.
          type: string
        notificationConfig:
          $ref: "#/components/schemas/NotificationConfig"
        streamConfigs:
          description: >-
            A list of streaming configs that configure the destinations of
            streaming

            export for every resource mutation in this FHIR store. Each store is

            allowed to have up to 10 streaming configs.

            After a new config is added, the next resource mutation will be streamed to

            the new location in addition to the existing ones.

            When a location is removed from the list, the server will simply stop

            streaming to that location. Before adding a new config, you must add the

            required

            [`bigquery.dataEditor`](https://cloud.google.com/bigquery/docs/access-control#bigquery.dataEditor)

            role to your project's **Cloud Healthcare Service Agent**

            [service account](https://cloud.google.com/iam/docs/service-accounts).

            Some lag (typically on the order of dozens of seconds) is expected before

            the results show up in the streaming destination.
          items:
            $ref: "#/components/schemas/StreamConfig"
          type: array
        subscriptionConfig:
          $ref: "#/components/schemas/SubscriptionConfig"
        validationConfig:
          $ref: "#/components/schemas/ValidationConfig"
      type: object
    FieldMetadata:
      description: |-
        Specifies FHIR paths to match, and how to handle de-identification of
        matching fields.
      properties:
        action:
          description: Deidentify action for one field.
          enum:
            - ACTION_UNSPECIFIED
            - TRANSFORM
            - INSPECT_AND_TRANSFORM
            - DO_NOT_TRANSFORM
          type: string
        paths:
          description: |-
            List of paths to FHIR fields to be redacted. Each path is a
            period-separated list where each component is either a field name or
            FHIR type name, for example: Patient, HumanName.
            For "choice" types (those defined in the FHIR spec with the form:
            field[x]) we use two separate components. e.g. "deceasedAge.unit" is
            matched by "Deceased.Age.unit".
            Supported types are: AdministrativeGenderCode, Code, Date, DateTime,
            Decimal, HumanName, Id, LanguageCode, Markdown, MimeTypeCode, Oid,
            String, Uri, Uuid, Xhtml.
          items:
            type: string
          type: array
      type: object
    Finding:
      properties:
        end:
          description: Zero-based ending index of the found text, exclusively.
          format: int64
          type: string
        infoType:
          description: |-
            The type of information stored in this text range (e.g. HumanName,
            BirthDate, Address, etc.)
          type: string
        start:
          description: Zero-based starting index of the found text, inclusively.
          format: int64
          type: string
      type: object
    GetIamPolicyRequest:
      description: Request message for `GetIamPolicy` method.
      properties:
        options:
          $ref: "#/components/schemas/GetPolicyOptions"
      type: object
    GetPolicyOptions:
      description: Encapsulates settings provided to GetIamPolicy.
      properties:
        requestedPolicyVersion:
          description: >-
            Optional. The policy format version to be returned.

            Acceptable values are 0, 1, and 3.

            If the value is 0, or the field is omitted, policy format version 1 will be

            returned.
          format: int32
          type: integer
      type: object
    GoogleCloudHealthcareV1alpha2DicomBigQueryDestination:
      description: The BigQuery table where the output should be written.
      properties:
        force:
          description: >-
            If the destination table already exists and this flag is `TRUE`, the
            table

            will be overwritten by the contents of the DICOM store. If the flag is not

            set and the destination table already exists, the export call returns an

            error.
          type: boolean
        tableUri:
          description: |-
            BigQuery URI to a table, up to 2000 characters long, in the format
            `bq://projectId.bqDatasetId.tableId`
          type: string
      type: object
    GoogleCloudHealthcareV1alpha2DicomGcsDestination:
      description: >-
        The Cloud Storage location where the output should be written, and the
        export

        configuration.
      properties:
        mimeType:
          description: >-
            MIME types supported by DICOM spec.

            Each file will be written in the following format:

            `.../{study_id}/{series_id}/{instance_id}[/{frame_number}].{extension}`

            The frame_number component will exist only for multi-frame instances.


            Refer to the DICOM conformance statement for permissible MIME types:

            https://cloud.google.com/healthcare/docs/dicom#wado-rs


            The following extensions will be used for output files:
              application/dicom -> .dcm
              image/jpeg -> .jpg
              image/png -> .png

            If unspecified, the instances will be exported in their original

            DICOM format.
          type: string
        uriPrefix:
          description: >-
            The Cloud Storage destination to export to.


            URI for a Cloud Storage directory where result files should be written (in

            the format `gs://{bucket-id}/{path/to/destination/dir}`). If there is no

            trailing slash, the service will append one when composing the object path.

            The user is responsible for creating the Cloud Storage bucket referenced in

            `uri_prefix`.
          type: string
      type: object
    GoogleCloudHealthcareV1alpha2DicomGcsSource:
      description: Specifies the configuration for importing data from Cloud Storage.
      properties:
        uri:
          description: >-
            Points to a Cloud Storage URI containing file(s) with

            content only. The URI must be in the following format:

            `gs://{bucket_id}/{object_id}`. The URI can include wildcards in

            `object_id` and thus identify multiple files. Supported wildcards:
             '*' to match 0 or more non-separator characters
             '**' to match 0 or more characters (including separators). Must be used at
                  the end of a path and with no other wildcards in the
                  path. Can also be used with a file extension (such as .dcm), which
                  imports all files with the extension in the specified directory and
                  its sub-directories. For example,
                  `gs://my-bucket/my-directory/**.dcm` imports all files with .dcm
                  extensions in `my-directory/` and its sub-directories.
             '?' to match 1 character
            All other URI formats are invalid.

            Files matching the wildcard are expected to contain content only, no

            metadata.
          type: string
      type: object
    GoogleCloudHealthcareV1alpha2FhirBigQueryDestination:
      description: The configuration for exporting to BigQuery.
      properties:
        datasetUri:
          description: |-
            BigQuery URI to a dataset, up to 2000 characters long, in the format
            `bq://projectId.bqDatasetId`
          type: string
        schemaConfig:
          $ref: "#/components/schemas/SchemaConfig"
      type: object
    GoogleCloudHealthcareV1alpha2FhirRestExportResourcesResponse:
      description: |-
        Final response of exporting resources.
        This structure will be included in the
        response to describe the detailed
        outcome. It will only be included when the operation finishes.
      properties:
        fhirStore:
          description: >-
            The name of the FHIR store where resources have been exported, in
            the

            format

            `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/fhirStores/{fhir_store_id}`.
          type: string
        resourceCount:
          description: The total number of resources exported from the requested FHIR store.
          format: int64
          type: string
      type: object
    GoogleCloudHealthcareV1alpha2FhirRestGcsDestination:
      description: The configuration for exporting to Cloud Storage.
      properties:
        uriPrefix:
          description: >-
            URI for a Cloud Storage directory where result files should be
            written (in

            the format `gs://{bucket-id}/{path/to/destination/dir}`). If there is no

            trailing slash, the service will append one when composing the object path.

            The user is responsible for creating the Cloud Storage bucket referenced in

            `uri_prefix`.
          type: string
      type: object
    GoogleCloudHealthcareV1alpha2FhirRestGcsErrorDestination:
      description: Specifies the Cloud Storage destination where errors will be recorded.
      properties:
        uriPrefix:
          description: >-
            URI for a Cloud Storage directory to which error report files should
            be

            written (in the format `gs://{bucket-id}/{path/to/destination/dir}`). If

            there is no trailing slash, the service will append one when composing the

            object path. The user is responsible for creating the Cloud Storage bucket

            referenced in `uri_prefix`.
          type: string
      type: object
    GoogleCloudHealthcareV1alpha2FhirRestGcsSource:
      description: Specifies the configuration for importing data from Cloud Storage.
      properties:
        uri:
          description: >-
            Points to a Cloud Storage URI containing file(s) to import.


            The URI must be in the following format: `gs://{bucket_id}/{object_id}`.

            The URI can include wildcards in `object_id` and thus identify multiple

            files. Supported wildcards:


            *  `*` to match 0 or more non-separator characters

            *  `**` to match 0 or more characters (including separators). Must be used

            at the end of a path and with no other wildcards in the

            path. Can also be used with a file extension (such as .ndjson), which

            imports all files with the extension in the specified directory and

            its sub-directories. For example, `gs://my-bucket/my-directory/**.ndjson`

            imports all files with `.ndjson` extensions in `my-directory/` and its

            sub-directories.

            *  `?` to match 1 character


            Files matching the wildcard are expected to contain content only, no

            metadata.
          type: string
      type: object
    GoogleCloudHealthcareV1alpha2FhirRestImportResourcesErrorDetails:
      description: >-
        Error response of importing resources.

        This structure will be included in the

        error details to describe the

        detailed error. It will only be included when the operation finishes with

        some failure.
      properties:
        errorCount:
          description: The number of resources that had errors.
          format: int64
          type: string
        fhirStore:
          description: >-
            The name of the FHIR store where resources have been imported, in
            the

            format

            `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/fhirStores/{fhir_store_id}`.
          type: string
        inputSize:
          description: >-
            The total number of resources included in the source data. This is
            the sum

            of the success and error counts.
          format: int64
          type: string
        successCount:
          description: The number of resources that have been imported.
          format: int64
          type: string
      type: object
    GoogleCloudHealthcareV1alpha2FhirRestImportResourcesResponse:
      description: >-
        Final response of importing resources.

        This structure will be included in the

        response to describe the detailed

        outcome. It will only be included when the operation finishes successfully.
      properties:
        fhirStore:
          description: >-
            The name of the FHIR store where the resources have been imported,
            in the

            format

            `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/fhirStores/{fhir_store_id}`.
          type: string
        inputSize:
          description: The total number of resources included in the source data.
          format: int64
          type: string
      type: object
    Hl7V2Store:
      description: Represents an HL7v2 store.
      properties:
        labels:
          additionalProperties:
            type: string
          description: >-
            User-supplied key-value pairs used to organize HL7v2 stores.


            Label keys must be between 1 and 63 characters long, have a UTF-8 encoding

            of maximum 128 bytes, and must conform to the

            following PCRE regular expression:

            \p{Ll}\p{Lo}{0,62}


            Label values are optional, must be between 1 and 63 characters long, have

            a UTF-8 encoding of maximum 128 bytes, and must conform to the

            following PCRE regular expression: [\p{Ll}\p{Lo}\p{N}_-]{0,63}


            No more than 64 labels can be associated with a given store.
          type: object
        name:
          description: >-
            Output only. Resource name of the HL7v2 store, of the form

            `projects/{project_id}/datasets/{dataset_id}/hl7V2Stores/{hl7v2_store_id}`.
          type: string
        notificationConfig:
          $ref: "#/components/schemas/NotificationConfig"
        parserConfig:
          $ref: "#/components/schemas/ParserConfig"
      type: object
    HttpBody:
      description: >-
        Message that represents an arbitrary HTTP body. It should only be used
        for

        payload formats that can't be represented as JSON, such as raw binary or

        an HTML page.



        This message can be used both in streaming and non-streaming API methods in

        the request as well as the response.


        It can be used as a top-level request field, which is convenient if one

        wants to extract parameters from either the URL or HTTP template into the

        request fields and also want access to the raw HTTP body.


        Example:

            message GetResourceRequest {
              // A unique request id.
              string request_id = 1;

              // The raw HTTP body is bound to this field.
              google.api.HttpBody http_body = 2;
            }

            service ResourceService {
              rpc GetResource(GetResourceRequest) returns (google.api.HttpBody);
              rpc UpdateResource(google.api.HttpBody) returns
              (google.protobuf.Empty);
            }

        Example with streaming methods:

            service CaldavService {
              rpc GetCalendar(stream google.api.HttpBody)
                returns (stream google.api.HttpBody);
              rpc UpdateCalendar(stream google.api.HttpBody)
                returns (stream google.api.HttpBody);
            }

        Use of this type only changes how the request and response bodies are

        handled, all other features will continue to work unchanged.
      properties:
        contentType:
          description: The HTTP Content-Type header value specifying the content type of
            the body.
          type: string
        data:
          description: The HTTP request/response body as raw binary.
          format: byte
          type: string
        extensions:
          description: >-
            Application specific response metadata. Must be set in the first
            response

            for streaming APIs.
          items:
            additionalProperties:
              description: Properties of the object. Contains field @type with type URL.
            type: object
          type: array
      type: object
    ImageAnnotation:
      description: Image annotation.
      properties:
        boundingPolys:
          description: The list of polygons outlining the sensitive regions in the image.
          items:
            $ref: "#/components/schemas/BoundingPoly"
          type: array
      type: object
    ImageConfig:
      description: Specifies how de-identification of image pixel should be handled.
      properties:
        textRedactionMode:
          description: Determines how to redact text from image.
          enum:
            - TEXT_REDACTION_MODE_UNSPECIFIED
            - REDACT_ALL_TEXT
            - REDACT_SENSITIVE_TEXT
            - REDACT_NO_TEXT
          type: string
      type: object
    ImportDicomDataErrorDetails:
      description: Returns the errors encountered during DICOM store import.
      properties:
        sampleErrors:
          description: >-
            Deprecated. Use only for debugging purposes.


            Contains sample errors encountered in imports of individual resources

            (for example, a Cloud Storage object).
          items:
            $ref: "#/components/schemas/ErrorDetail"
          type: array
      type: object
    ImportDicomDataRequest:
      description: |-
        Imports data into the specified DICOM store.
        Returns an error if any of the files to import are not DICOM files. This
        API will accept duplicate DICOM instances, by simply ignoring the newly
        pushed instance (it will not overwrite).
      properties:
        gcsSource:
          $ref: "#/components/schemas/GoogleCloudHealthcareV1alpha2DicomGcsSource"
      type: object
    ImportResourcesRequest:
      description: Request to import resources.
      properties:
        contentStructure:
          description: >-
            The content structure in the source location. If not specified, the
            server

            treats the input source files as BUNDLE.
          enum:
            - CONTENT_STRUCTURE_UNSPECIFIED
            - BUNDLE
            - RESOURCE
            - BUNDLE_PRETTY
            - RESOURCE_PRETTY
          type: string
        gcsErrorDestination:
          $ref: "#/components/schemas/GoogleCloudHealthcareV1alpha2FhirRestGcsError\
            Destination"
        gcsSource:
          $ref: "#/components/schemas/GoogleCloudHealthcareV1alpha2FhirRestGcsSource"
      type: object
    InfoTypeTransformation:
      description: |-
        A transformation to apply to text that is identified as a specific
        info_type.
      properties:
        characterMaskConfig:
          $ref: "#/components/schemas/CharacterMaskConfig"
        cryptoHashConfig:
          $ref: "#/components/schemas/CryptoHashConfig"
        dateShiftConfig:
          $ref: "#/components/schemas/DateShiftConfig"
        infoTypes:
          description: >-
            InfoTypes to apply this transformation to. If this is not specified,
            the

            transformation applies to any info_type.
          items:
            type: string
          type: array
        redactConfig:
          $ref: "#/components/schemas/RedactConfig"
        replaceWithInfoTypeConfig:
          $ref: "#/components/schemas/ReplaceWithInfoTypeConfig"
      type: object
    IngestMessageRequest:
      description: Ingests a message into the specified HL7v2 store.
      properties:
        message:
          $ref: "#/components/schemas/Message"
      type: object
    IngestMessageResponse:
      description: |-
        Acknowledges that a message has been ingested into the specified
        HL7v2 store.
      properties:
        hl7Ack:
          description: HL7v2 ACK message.
          format: byte
          type: string
        message:
          $ref: "#/components/schemas/Message"
      type: object
    ListAnnotationStoresResponse:
      description: |-
        Lists the Annotation stores
        in the given dataset.
      properties:
        annotationStores:
          description: >-
            The returned Annotation stores. Won't be more Annotation stores than
            the

            value of page_size in the request.
          items:
            $ref: "#/components/schemas/AnnotationStore"
          type: array
        nextPageToken:
          description: >-
            Token to retrieve the next page of results or empty if there are no
            more

            results in the list.
          type: string
      type: object
    ListAnnotationsResponse:
      description: |-
        Lists the Annotations in the specified
        Annotation store.
      properties:
        annotations:
          description: >-
            The returned Annotations names. Won't be more values than the value
            of

            page_size in the request.
          items:
            type: string
          type: array
        nextPageToken:
          description: >-
            Token to retrieve the next page of results or empty if there are no
            more

            results in the list.
          type: string
      type: object
    ListDatasetsResponse:
      description: Lists the available datasets.
      properties:
        datasets:
          description: The first page of datasets.
          items:
            $ref: "#/components/schemas/Dataset"
          type: array
        nextPageToken:
          description: |-
            Token to retrieve the next page of results, or empty if there are no
            more results in the list.
          type: string
      type: object
    ListDicomStoresResponse:
      description: Lists the DICOM stores in the given dataset.
      properties:
        dicomStores:
          description: >-
            The returned DICOM stores. Won't be more DICOM stores than the value
            of

            page_size in the request.
          items:
            $ref: "#/components/schemas/DicomStore"
          type: array
        nextPageToken:
          description: >-
            Token to retrieve the next page of results or empty if there are no
            more

            results in the list.
          type: string
      type: object
    ListFhirStoresResponse:
      description: Lists the FHIR stores in the given dataset.
      properties:
        fhirStores:
          description: >-
            The returned FHIR stores. Won't be more FHIR stores than the value
            of

            page_size in the request.
          items:
            $ref: "#/components/schemas/FhirStore"
          type: array
        nextPageToken:
          description: >-
            Token to retrieve the next page of results or empty if there are no
            more

            results in the list.
          type: string
      type: object
    ListHl7V2StoresResponse:
      description: Lists the HL7v2 stores in the given dataset.
      properties:
        hl7V2Stores:
          description: >-
            The returned HL7v2 stores. Won't be more HL7v2 stores than the value
            of

            page_size in the request.
          items:
            $ref: "#/components/schemas/Hl7V2Store"
          type: array
        nextPageToken:
          description: >-
            Token to retrieve the next page of results or empty if there are no
            more

            results in the list.
          type: string
      type: object
    ListLocationsResponse:
      description: The response message for Locations.ListLocations.
      properties:
        locations:
          description: A list of locations that matches the specified filter in the request.
          items:
            $ref: "#/components/schemas/Location"
          type: array
        nextPageToken:
          description: The standard List next-page token.
          type: string
      type: object
    ListMessagesResponse:
      description: Lists the messages in the specified HL7v2 store.
      properties:
        messages:
          description: |-
            The returned message names. Won't be more values than the value of
            page_size in the request.
          items:
            type: string
          type: array
        nextPageToken:
          description: >-
            Token to retrieve the next page of results or empty if there are no
            more

            results in the list.
          type: string
      type: object
    ListOperationsResponse:
      description: The response message for Operations.ListOperations.
      properties:
        nextPageToken:
          description: The standard List next-page token.
          type: string
        operations:
          description: A list of operations that matches the specified filter in the
            request.
          items:
            $ref: "#/components/schemas/Operation"
          type: array
      type: object
    Location:
      description: A resource that represents Google Cloud Platform location.
      properties:
        displayName:
          description: |-
            The friendly name for this location, typically a nearby city name.
            For example, "Tokyo".
          type: string
        labels:
          additionalProperties:
            type: string
          description: |-
            Cross-service attributes for the location. For example

                {"cloud.googleapis.com/region": "us-east1"}
          type: object
        locationId:
          description: 'The canonical id for this location. For example: `"us-east1"`.'
          type: string
        metadata:
          additionalProperties:
            description: Properties of the object. Contains field @type with type URL.
          description: >-
            Service-specific metadata. For example the available capacity at the
            given

            location.
          type: object
        name:
          description: >-
            Resource name for the location, which may vary between
            implementations.

            For example: `"projects/example-project/locations/us-east1"`
          type: string
      type: object
    Message:
      description: >-
        A complete HL7v2 message.

        See http://www.hl7.org/implement/standards/index.cfm?ref=common for details

        on the standard.
      properties:
        createTime:
          description: Output only. The datetime when the message was created. Set by the
            server.
          format: google-datetime
          type: string
        data:
          description: Raw message bytes.
          format: byte
          type: string
        labels:
          additionalProperties:
            type: string
          description: >-
            User-supplied key-value pairs used to organize HL7v2 stores.


            Label keys must be between 1 and 63 characters long, have a UTF-8 encoding

            of maximum 128 bytes, and must conform to the

            following PCRE regular expression:

            \p{Ll}\p{Lo}{0,62}


            Label values are optional, must be between 1 and 63 characters long, have

            a UTF-8 encoding of maximum 128 bytes, and must conform to the

            following PCRE regular expression: [\p{Ll}\p{Lo}\p{N}_-]{0,63}


            No more than 64 labels can be associated with a given store.
          type: object
        messageType:
          description: The message type and trigger event for this message. MSH-9.
          type: string
        name:
          description: >-
            Resource name of the Message, of the form

            `projects/{project_id}/datasets/{dataset_id}/hl7V2Stores/{hl7_v2_store_id}/messages/{message_id}`.

            Assigned by the server.
          type: string
        parsedData:
          $ref: "#/components/schemas/ParsedData"
        patientIds:
          description: >-
            All patient IDs listed in the PID-2, PID-3, and PID-4 segments of
            this

            message.
          items:
            $ref: "#/components/schemas/PatientId"
          type: array
        sendFacility:
          description: The hospital that this message came from. MSH-4.
          type: string
        sendTime:
          description: The datetime the sending application sent this message. MSH-7.
          format: google-datetime
          type: string
      type: object
    NotificationConfig:
      description: Specifies where notifications should be sent upon changes to a data
        store.
      properties:
        pubsubTopic:
          description: >-
            The [Cloud Pub/Sub](https://cloud.google.com/pubsub/docs/) topic
            that

            notifications of changes are published on. Supplied by the client.

            PubsubMessage.Data will contain the resource name.

            PubsubMessage.MessageId is the ID of this message. It is guaranteed to be

            unique within the topic.

            PubsubMessage.PublishTime is the time at which the message was published.

            Notifications are only sent if the topic is

            non-empty. [Topic

            names](https://cloud.google.com/pubsub/docs/overview#names) must be scoped

            to a project. cloud-healthcare@system.gserviceaccount.com must have

            publisher permissions on the given Cloud Pub/Sub topic. Not having adequate

            permissions will cause the calls that send notifications to fail.
          type: string
      type: object
    Operation:
      description: >-
        This resource represents a long-running operation that is the result of
        a

        network API call.
      properties:
        done:
          description: >-
            If the value is `false`, it means the operation is still in
            progress.

            If `true`, the operation is completed, and either `error` or `response` is

            available.
          type: boolean
        error:
          $ref: "#/components/schemas/Status"
        metadata:
          additionalProperties:
            description: Properties of the object. Contains field @type with type URL.
          description: >-
            Service-specific metadata associated with the operation.  It
            typically

            contains progress information and common metadata such as create time.

            Some services might not provide such metadata.  Any method that returns a

            long-running operation should document the metadata type, if any.
          type: object
        name:
          description: >-
            The server-assigned name, which is only unique within the same
            service that

            originally returns it. If you use the default HTTP mapping, the

            `name` should be a resource name ending with `operations/{unique_id}`.
          type: string
        response:
          additionalProperties:
            description: Properties of the object. Contains field @type with type URL.
          description: >-
            The normal response of the operation in case of success.  If the
            original

            method returns no data on success, such as `Delete`, the response is

            `google.protobuf.Empty`.  If the original method is standard

            `Get`/`Create`/`Update`, the response should be the resource.  For other

            methods, the response should have the type `XxxResponse`, where `Xxx`

            is the original method name.  For example, if the original method name

            is `TakeSnapshot()`, the inferred response type is

            `TakeSnapshotResponse`.
          type: object
      type: object
    OperationMetadata:
      description: |-
        OperationMetadata provides information about the operation execution.
        Returned in the long-running operation's metadata field.
      properties:
        apiMethodName:
          description: The name of the API method that initiated the operation.
          type: string
        counter:
          $ref: "#/components/schemas/ProgressCounter"
        createTime:
          description: The time at which the operation was created by the API.
          format: google-datetime
          type: string
        endTime:
          description: The time at which execution was completed.
          format: google-datetime
          type: string
      type: object
    ParsedData:
      description: The content of a HL7v2 message in a structured format.
      properties:
        segments:
          items:
            $ref: "#/components/schemas/Segment"
          type: array
      type: object
    ParserConfig:
      description: >-
        The configuration for the parser. It determines how the server parses
        the

        messages.
      properties:
        allowNullHeader:
          description: Determines whether messages with no header are allowed.
          type: boolean
        segmentTerminator:
          description: >-
            Byte(s) to be used as the segment terminator. If this is unset, '\r'
            will

            be used as the segment terminator, matching the HL7 version 2

            specification.
          format: byte
          type: string
      type: object
    PatientId:
      description: A patient identifier and associated type.
      properties:
        type:
          description: ID type, e.g. MRN or NHS.
          type: string
        value:
          description: The patient's unique identifier.
          type: string
      type: object
    Policy:
      description: >-
        Defines an Identity and Access Management (IAM) policy. It is used to

        specify access control policies for Cloud Platform resources.



        A `Policy` consists of a list of `bindings`. A `binding` binds a list of

        `members` to a `role`, where the members can be user accounts, Google groups,

        Google domains, and service accounts. A `role` is a named list of permissions

        defined by IAM.


        **JSON Example**

            {
              "bindings": [
                {
                  "role": "roles/owner",
                  "members": [
                    "user:mike@example.com",
                    "group:admins@example.com",
                    "domain:google.com",
                    "serviceAccount:my-other-app@appspot.gserviceaccount.com"
                  ]
                },
                {
                  "role": "roles/viewer",
                  "members": ["user:sean@example.com"]
                }
              ]
            }

        **YAML Example**

            bindings:
            - members:
              - user:mike@example.com
              - group:admins@example.com
              - domain:google.com
              - serviceAccount:my-other-app@appspot.gserviceaccount.com
              role: roles/owner
            - members:
              - user:sean@example.com
              role: roles/viewer


        For a description of IAM and its features, see the

        [IAM developer's guide](https://cloud.google.com/iam/docs).
      properties:
        auditConfigs:
          description: Specifies cloud audit logging configuration for this policy.
          items:
            $ref: "#/components/schemas/AuditConfig"
          type: array
        bindings:
          description: |-
            Associates a list of `members` to a `role`.
            `bindings` with no members will result in an error.
          items:
            $ref: "#/components/schemas/Binding"
          type: array
        etag:
          description: >-
            `etag` is used for optimistic concurrency control as a way to help

            prevent simultaneous updates of a policy from overwriting each other.

            It is strongly suggested that systems make use of the `etag` in the

            read-modify-write cycle to perform policy updates in order to avoid race

            conditions: An `etag` is returned in the response to `getIamPolicy`, and

            systems are expected to put that etag in the request to `setIamPolicy` to

            ensure that their change will be applied to the same version of the policy.


            If no `etag` is provided in the call to `setIamPolicy`, then the existing

            policy is overwritten.
          format: byte
          type: string
        version:
          description: Deprecated.
          format: int32
          type: integer
      type: object
    ProgressCounter:
      description: ProgressCounter provides counters to describe an operation's progress.
      properties:
        failure:
          description: The number of units that failed in the operation.
          format: int64
          type: string
        pending:
          description: The number of units that are pending in the operation.
          format: int64
          type: string
        success:
          description: The number of units that succeeded in the operation.
          format: int64
          type: string
      type: object
    RedactConfig:
      description: |-
        Define how to redact sensitive values. Default behaviour is erase,
        e.g. "My name is Jake." becomes "My name is ."
      properties: {}
      type: object
    ReplaceWithInfoTypeConfig:
      description: >-
        When using the INSPECT_AND_TRANSFORM action, each match is replaced with

        the name of the info_type. For example, "My name is Jake" becomes "My name is

        [PERSON_NAME]." The TRANSFORM action is equivalent to redacting.
      properties: {}
      type: object
    ResourceAnnotation:
      description: Resource level annotation.
      properties:
        label:
          type: string
      type: object
    SchemaConfig:
      description: |-
        Configuration for the FHIR BigQuery and Cloud Storage schema. Determines
        how the server generates the schema.
      properties:
        recursiveStructureDepth:
          description: >-
            The depth for all recursive structures in the output analytics

            schema. For example, `concept` in the CodeSystem resource is a recursive

            structure; when the depth is 2, the CodeSystem table will have a column

            called `concept.concept` but not `concept.concept.concept`. If not

            specified or set to 0, the server will use the default value 2.
          format: int64
          type: string
        schemaType:
          description: |-
            Specifies the output schema type. If unspecified, the default is
            `LOSSLESS`.
          enum:
            - SCHEMA_TYPE_UNSPECIFIED
            - LOSSLESS
            - ANALYTICS
          type: string
      type: object
    SearchResourcesRequest:
      description: Request to search the resources in the specified FHIR store.
      properties:
        resourceType:
          description: >-
            The FHIR resource type to search, such as Patient or Observation.
            For a

            complete list, see the [FHIR Resource

            Index](http://hl7.org/implement/standards/fhir/STU3/resourcelist.html).
          type: string
      type: object
    Segment:
      description: A segment in a structured format.
      properties:
        fields:
          additionalProperties:
            type: string
          description: >-
            A mapping from the positional location to the value.

            The key string uses zero-based indexes separated by dots to identify

            Fields, components and sub-components. A bracket notation is also used to

            identify different instances of a repeated field.

            Regex for key: (\d+)(\[\d+\])?(.\d+)?(.\d+)?


            Examples of (key, value) pairs:

            - (0.1, "foo"): Component 1 of Field 0 has the value "foo".

            - (1.1.2, "bar"): Sub-component 2 of Component 1 of field 1 has the value

            "bar".

            - (1[2].1, "baz"): Component 1 of Instance 2 of Field 1, which is repeated,

            has the value "baz".
          type: object
        segmentId:
          description: A string that indicates the type of segment, e.g., EVN, PID.
          type: string
        setId:
          description: |-
            Set ID for segments that can be in a set. This can be empty if it is
            missing or it is not applicable.
          type: string
      type: object
    SensitiveTextAnnotation:
      description: A TextAnnotation specifies a text range that includes sensitive
        information.
      properties:
        details:
          additionalProperties:
            $ref: "#/components/schemas/Detail"
          description: >-
            Maps from a resource slice (e.g. FHIR resource field path) to a set
            of

            sensitive text findings. For example,

            Appointment.Narrative text1 --> {findings_1, findings_2, findings_3}
          type: object
      type: object
    SetIamPolicyRequest:
      description: Request message for `SetIamPolicy` method.
      properties:
        policy:
          $ref: "#/components/schemas/Policy"
        updateMask:
          description: >-
            OPTIONAL: A FieldMask specifying which fields of the policy to
            modify. Only

            the fields in the mask will be modified. If no mask is provided, the

            following default mask is used:

            paths: "bindings, etag"

            This field is only used by Cloud IAM.
          format: google-fieldmask
          type: string
      type: object
    Status:
      description: >-
        The `Status` type defines a logical error model that is suitable for

        different programming environments, including REST APIs and RPC APIs. It is

        used by [gRPC](https://github.com/grpc). Each `Status` message contains

        three pieces of data: error code, error message, and error details.


        You can find out more about this error model and how to work with it in the

        [API Design Guide](https://cloud.google.com/apis/design/errors).
      properties:
        code:
          description: The status code, which should be an enum value of google.rpc.Code.
          format: int32
          type: integer
        details:
          description: >-
            A list of messages that carry the error details.  There is a common
            set of

            message types for APIs to use.
          items:
            additionalProperties:
              description: Properties of the object. Contains field @type with type URL.
            type: object
          type: array
        message:
          description: |-
            A developer-facing error message, which should be in English. Any
            user-facing error message should be localized and sent in the
            google.rpc.Status.details field, or localized by the client.
          type: string
      type: object
    StreamConfig:
      description: This structure contains configuration for streaming FHIR export.
      properties:
        bigqueryDestination:
          $ref: "#/components/schemas/GoogleCloudHealthcareV1alpha2FhirBigQueryDest\
            ination"
        resourceTypes:
          description: >-
            Supply a FHIR resource type (such as "Patient" or "Observation").

            See https://www.hl7.org/fhir/valueset-resource-types.html for a list of

            all FHIR resource types.

            The server will treat an empty list as an intent to stream all the

            supported resource types in this FHIR store.
          items:
            type: string
          type: array
      type: object
    SubscriptionConfig:
      description: |-
        Configuration of FHIR Subscription:
        https://www.hl7.org/fhir/subscription.html.
      properties:
        allowedRestHookEndpoints:
          description: >-
            REST hook endpoints that are allowed to receive subscription
            notifications.

            The create or update operation on a FHIR Subscription resource will fail if

            the FHIR Subscription resource contains a REST hook endpoint that is not in

            this list.

            A subscription notification push will fail if the FHIR Subscription

            resource contains a REST hook endpoint that is not in this list.

            The REST hook endpoint in a subscription resource will be compared with the

            endpoints in this list by exact matching.

            Users must verify their ownership of the domain of an endpoint before

            adding it to this list. To verify domain ownership, go to

            https://search.google.com/search-console/welcome.
          items:
            $ref: "#/components/schemas/SubscriptionRestHookEndpoint"
          type: array
      type: object
    SubscriptionRestHookEndpoint:
      description: REST hook endpoint of FHIR Subscription.
      properties:
        allowResourcePayload:
          description: >-
            Whether this endpoint is allowed to receive full resource payloads.
            If set

            to false, the subscription notificiation sending to this endpoint with full

            resource payload will be blocked.
          type: boolean
        endpoint:
          description: >-
            Address of the REST hook endpoint. It must be a valid HTTPS URL with
            TLS

            certificate.
          type: string
      type: object
    TagFilterList:
      description: List of tags to be filtered.
      properties:
        tags:
          description: >-
            Tags to be filtered. Tags must be DICOM Data Elements, File Meta

            Elements, or Directory Structuring Elements, as defined at:

            http://dicom.nema.org/medical/dicom/current/output/html/part06.html#table_6-1,.

            They may be provided by "Keyword" or "Tag". For example "PatientID",

            "00100010".
          items:
            type: string
          type: array
      type: object
    TestIamPermissionsRequest:
      description: Request message for `TestIamPermissions` method.
      properties:
        permissions:
          description: >-
            The set of permissions to check for the `resource`. Permissions with

            wildcards (such as '*' or 'storage.*') are not allowed. For more

            information see

            [IAM Overview](https://cloud.google.com/iam/docs/overview#permissions).
          items:
            type: string
          type: array
      type: object
    TestIamPermissionsResponse:
      description: Response message for `TestIamPermissions` method.
      properties:
        permissions:
          description: |-
            A subset of `TestPermissionsRequest.permissions` that the caller is
            allowed.
          items:
            type: string
          type: array
      type: object
    TextConfig:
      properties:
        transformations:
          description: The transformations to apply to the detected data.
          items:
            $ref: "#/components/schemas/InfoTypeTransformation"
          type: array
      type: object
    ValidationConfig:
      description: This structure contains the configuration for FHIR profiles and
        validation.
      properties:
        disableProfileValidation:
          description: >-
            Whether profile validation should be disabled for this FHIR store.
            Set

            this to true to disable checking incoming resources for conformance

            against StructureDefinitions in this FHIR store.
          type: boolean
        enabledImplementationGuides:
          description: >-
            A list of ImplementationGuide IDs in this FHIR store that will be
            used to

            configure which profiles are used for validation. For example, to enable

            an implementation guide with ID 1 set `enabled_implementation_guides` to

            `["1"]`. If `enabled_implementation_guides` is empty or omitted then

            incoming resources will only be required to conform to the base FHIR

            profiles. Otherwise, a resource must conform to at least one profile

            listed in the `global` property of one of the enabled

            ImplementationGuides.
          items:
            type: string
          type: array
      type: object
    Vertex:
      description: A 2D coordinate in an image. The origin is the top-left.
      properties:
        x:
          description: X coordinate.
          format: float
          type: number
        y:
          description: Y coordinate.
          format: float
          type: number
      type: object
