openapi: 3.0.0
info:
  contact:
    name: Google
    url: https://google.com
  description: Manages the execution of large numbers of distributed requests.
  license:
    name: Creative Commons Attribution 3.0
    url: http://creativecommons.org/licenses/by/3.0/
  termsOfService: https://developers.google.com/terms/
  title: Cloud Tasks
  version: v2beta3
  x-apiClientRegistration:
    url: https://console.developers.google.com
  x-logo:
    url: https://www.google.com/images/branding/googlelogo/2x/googlelogo_color_272x92dp.png
  x-origin:
    - converter:
        url: https://github.com/lucybot/api-spec-converter
        version: 2.7.31
      format: google
      url: https://cloudtasks.googleapis.com/$discovery/rest?version=v2beta3
      version: v1
  x-preferred: false
  x-providerName: googleapis.com
  x-serviceName: cloudtasks
externalDocs:
  url: https://cloud.google.com/tasks/
tags:
  - name: projects
paths:
  "/v2beta3/{name}":
    delete:
      description: |-
        Deletes a task.

        A task can be deleted if it is scheduled or dispatched. A task
        cannot be deleted if it has executed successfully or permanently
        failed.
      operationId: cloudtasks.projects.locations.queues.tasks.delete
      parameters:
        - description: >-
            Required. The task name. For example:

            `projects/PROJECT_ID/locations/LOCATION_ID/queues/QUEUE_ID/tasks/TASK_ID`
          in: path
          name: name
          required: true
          x-reservedExpansion: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Empty"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    get:
      description: Gets a task.
      operationId: cloudtasks.projects.locations.queues.tasks.get
      parameters:
        - description: >-
            Required. The task name. For example:

            `projects/PROJECT_ID/locations/LOCATION_ID/queues/QUEUE_ID/tasks/TASK_ID`
          in: path
          name: name
          required: true
          x-reservedExpansion: true
          schema:
            type: string
        - description: >-
            The response_view specifies which subset of the Task will be

            returned.


            By default response_view is BASIC; not all

            information is retrieved by default because some data, such as

            payloads, might be desirable to return only when needed because

            of its large size or because of the sensitivity of data that it

            contains.


            Authorization for FULL requires

            `cloudtasks.tasks.fullView` [Google IAM](https://cloud.google.com/iam/)

            permission on the Task resource.
          in: query
          name: responseView
          schema:
            type: string
            enum:
              - VIEW_UNSPECIFIED
              - BASIC
              - FULL
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Task"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/upload_protocol"
    patch:
      description: >-
        Updates a queue.


        This method creates the queue if it does not exist and updates

        the queue if it does exist.


        Queues created with this method allow tasks to live for a maximum of 31

        days. After a task is 31 days old, the task will be deleted regardless of whether

        it was dispatched or not.


        WARNING: Using this method may have unintended side effects if you are

        using an App Engine `queue.yaml` or `queue.xml` file to manage your queues.

        Read

        [Overview of Queue Management and

        queue.yaml](https://cloud.google.com/tasks/docs/queue-yaml) before using

        this method.
      operationId: cloudtasks.projects.locations.queues.patch
      parameters:
        - description: >-
            Caller-specified and required in CreateQueue,

            after which it becomes output only.


            The queue name.


            The queue name must have the following format:

            `projects/PROJECT_ID/locations/LOCATION_ID/queues/QUEUE_ID`


            * `PROJECT_ID` can contain letters ([A-Za-z]), numbers ([0-9]),
               hyphens (-), colons (:), or periods (.).
               For more information, see
               [Identifying
               projects](https://cloud.google.com/resource-manager/docs/creating-managing-projects#identifying_projects)
            * `LOCATION_ID` is the canonical ID for the queue's location.
               The list of available locations can be obtained by calling
               ListLocations.
               For more information, see https://cloud.google.com/about/locations/.
            * `QUEUE_ID` can contain letters ([A-Za-z]), numbers ([0-9]), or
              hyphens (-). The maximum length is 100 characters.
          in: path
          name: name
          required: true
          x-reservedExpansion: true
          schema:
            type: string
        - description: |-
            A mask used to specify which fields of the queue are being updated.

            If empty, then all fields will be updated.
          in: query
          name: updateMask
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/Queue"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Queue"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  "/v2beta3/{name}/locations":
    get:
      description: Lists information about the supported locations for this service.
      operationId: cloudtasks.projects.locations.list
      parameters:
        - description: The standard list filter.
          in: query
          name: filter
          schema:
            type: string
        - description: The resource that owns the locations collection, if applicable.
          in: path
          name: name
          required: true
          x-reservedExpansion: true
          schema:
            type: string
        - description: The standard list page size.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: The standard list page token.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ListLocationsResponse"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/upload_protocol"
  "/v2beta3/{name}:pause":
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/upload_protocol"
    post:
      description: |-
        Pauses the queue.

        If a queue is paused then the system will stop dispatching tasks
        until the queue is resumed via
        ResumeQueue. Tasks can still be added
        when the queue is paused. A queue is paused if its
        state is PAUSED.
      operationId: cloudtasks.projects.locations.queues.pause
      parameters:
        - description: |-
            Required. The queue name. For example:
            `projects/PROJECT_ID/location/LOCATION_ID/queues/QUEUE_ID`
          in: path
          name: name
          required: true
          x-reservedExpansion: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PauseQueueRequest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Queue"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  "/v2beta3/{name}:purge":
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/upload_protocol"
    post:
      description: >-
        Purges a queue by deleting all of its tasks.


        All tasks created before this method is called are permanently deleted.


        Purge operations can take up to one minute to take effect. Tasks

        might be dispatched before the purge takes effect. A purge is irreversible.
      operationId: cloudtasks.projects.locations.queues.purge
      parameters:
        - description: |-
            Required. The queue name. For example:
            `projects/PROJECT_ID/location/LOCATION_ID/queues/QUEUE_ID`
          in: path
          name: name
          required: true
          x-reservedExpansion: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PurgeQueueRequest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Queue"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  "/v2beta3/{name}:resume":
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/upload_protocol"
    post:
      description: |-
        Resume a queue.

        This method resumes a queue after it has been
        PAUSED or
        DISABLED. The state of a queue is stored
        in the queue's state; after calling this method it
        will be set to RUNNING.

        WARNING: Resuming many high-QPS queues at the same time can
        lead to target overloading. If you are resuming high-QPS
        queues, follow the 500/50/5 pattern described in
        [Managing Cloud Tasks Scaling
        Risks](https://cloud.google.com/tasks/docs/manage-cloud-task-scaling).
      operationId: cloudtasks.projects.locations.queues.resume
      parameters:
        - description: |-
            Required. The queue name. For example:
            `projects/PROJECT_ID/location/LOCATION_ID/queues/QUEUE_ID`
          in: path
          name: name
          required: true
          x-reservedExpansion: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ResumeQueueRequest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Queue"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  "/v2beta3/{name}:run":
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/upload_protocol"
    post:
      description: |-
        Forces a task to run now.

        When this method is called, Cloud Tasks will dispatch the task, even if
        the task is already running, the queue has reached its RateLimits or
        is PAUSED.

        This command is meant to be used for manual debugging. For
        example, RunTask can be used to retry a failed
        task after a fix has been made or to manually force a task to be
        dispatched now.

        The dispatched task is returned. That is, the task that is returned
        contains the status after the task is dispatched but
        before the task is received by its target.

        If Cloud Tasks receives a successful response from the task's
        target, then the task will be deleted; otherwise the task's
        schedule_time will be reset to the time that
        RunTask was called plus the retry delay specified
        in the queue's RetryConfig.

        RunTask returns
        NOT_FOUND when it is called on a
        task that has already succeeded or permanently failed.
      operationId: cloudtasks.projects.locations.queues.tasks.run
      parameters:
        - description: >-
            Required. The task name. For example:

            `projects/PROJECT_ID/locations/LOCATION_ID/queues/QUEUE_ID/tasks/TASK_ID`
          in: path
          name: name
          required: true
          x-reservedExpansion: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RunTaskRequest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Task"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  "/v2beta3/{parent}/queues":
    get:
      description: |-
        Lists queues.

        Queues are returned in lexicographical order.
      operationId: cloudtasks.projects.locations.queues.list
      parameters:
        - description: >-
            `filter` can be used to specify a subset of queues. Any Queue

            field can be used as a filter and several operators as supported.

            For example: `<=, <, >=, >, !=, =, :`. The filter syntax is the same as

            described in

            [Stackdriver's Advanced Logs

            Filters](https://cloud.google.com/logging/docs/view/advanced_filters).


            Sample filter "state: PAUSED".


            Note that using filters might cause fewer queues than the

            requested page_size to be returned.
          in: query
          name: filter
          schema:
            type: string
        - description: |-
            Requested page size.

            The maximum page size is 9800. If unspecified, the page size will
            be the maximum. Fewer queues than requested might be returned,
            even if more queues exist; use the
            next_page_token in the
            response to determine if more queues exist.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: |-
            A token identifying the page of results to return.

            To request the first page results, page_token must be empty. To
            request the next page of results, page_token must be the value of
            next_page_token returned
            from the previous call to ListQueues
            method. It is an error to switch the value of the
            filter while iterating through pages.
          in: query
          name: pageToken
          schema:
            type: string
        - description: |-
            Required. The location name.
            For example: `projects/PROJECT_ID/locations/LOCATION_ID`
          in: path
          name: parent
          required: true
          x-reservedExpansion: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ListQueuesResponse"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/upload_protocol"
    post:
      description: >-
        Creates a queue.


        Queues created with this method allow tasks to live for a maximum of 31

        days. After a task is 31 days old, the task will be deleted regardless of whether

        it was dispatched or not.


        WARNING: Using this method may have unintended side effects if you are

        using an App Engine `queue.yaml` or `queue.xml` file to manage your queues.

        Read

        [Overview of Queue Management and

        queue.yaml](https://cloud.google.com/tasks/docs/queue-yaml) before using

        this method.
      operationId: cloudtasks.projects.locations.queues.create
      parameters:
        - description: |-
            Required. The location name in which the queue will be created.
            For example: `projects/PROJECT_ID/locations/LOCATION_ID`

            The list of allowed locations can be obtained by calling Cloud
            Tasks' implementation of
            ListLocations.
          in: path
          name: parent
          required: true
          x-reservedExpansion: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/Queue"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Queue"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  "/v2beta3/{parent}/tasks":
    get:
      description: |-
        Lists the tasks in a queue.

        By default, only the BASIC view is retrieved
        due to performance considerations;
        response_view controls the
        subset of information which is returned.

        The tasks may be returned in any order. The ordering may change at any
        time.
      operationId: cloudtasks.projects.locations.queues.tasks.list
      parameters:
        - description: >-
            Maximum page size.


            Fewer tasks than requested might be returned, even if more tasks exist; use

            next_page_token in the response to

            determine if more tasks exist.


            The maximum page size is 1000. If unspecified, the page size will be the

            maximum.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: |-
            A token identifying the page of results to return.

            To request the first page results, page_token must be empty. To
            request the next page of results, page_token must be the value of
            next_page_token returned
            from the previous call to ListTasks
            method.

            The page token is valid for only 2 hours.
          in: query
          name: pageToken
          schema:
            type: string
        - description: |-
            Required. The queue name. For example:
            `projects/PROJECT_ID/locations/LOCATION_ID/queues/QUEUE_ID`
          in: path
          name: parent
          required: true
          x-reservedExpansion: true
          schema:
            type: string
        - description: >-
            The response_view specifies which subset of the Task will be

            returned.


            By default response_view is BASIC; not all

            information is retrieved by default because some data, such as

            payloads, might be desirable to return only when needed because

            of its large size or because of the sensitivity of data that it

            contains.


            Authorization for FULL requires

            `cloudtasks.tasks.fullView` [Google IAM](https://cloud.google.com/iam/)

            permission on the Task resource.
          in: query
          name: responseView
          schema:
            type: string
            enum:
              - VIEW_UNSPECIFIED
              - BASIC
              - FULL
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ListTasksResponse"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/upload_protocol"
    post:
      description: |-
        Creates a task and adds it to a queue.

        Tasks cannot be updated after creation; there is no UpdateTask command.

        * The maximum task size is 100KB.
      operationId: cloudtasks.projects.locations.queues.tasks.create
      parameters:
        - description: |-
            Required. The queue name. For example:
            `projects/PROJECT_ID/locations/LOCATION_ID/queues/QUEUE_ID`

            The queue must already exist.
          in: path
          name: parent
          required: true
          x-reservedExpansion: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateTaskRequest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Task"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  "/v2beta3/{resource}:getIamPolicy":
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/upload_protocol"
    post:
      description: >-
        Gets the access control policy for a Queue.

        Returns an empty policy if the resource exists and does not have a policy

        set.


        Authorization requires the following

        [Google IAM](https://cloud.google.com/iam) permission on the specified

        resource parent:


        * `cloudtasks.queues.getIamPolicy`
      operationId: cloudtasks.projects.locations.queues.getIamPolicy
      parameters:
        - description: >-
            REQUIRED: The resource for which the policy is being requested.

            See the operation documentation for the appropriate value for this field.
          in: path
          name: resource
          required: true
          x-reservedExpansion: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GetIamPolicyRequest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Policy"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  "/v2beta3/{resource}:setIamPolicy":
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/upload_protocol"
    post:
      description: |-
        Sets the access control policy for a Queue. Replaces any existing
        policy.

        Note: The Cloud Console does not check queue-level IAM permissions yet.
        Project-level permissions are required to use the Cloud Console.

        Authorization requires the following
        [Google IAM](https://cloud.google.com/iam) permission on the specified
        resource parent:

        * `cloudtasks.queues.setIamPolicy`
      operationId: cloudtasks.projects.locations.queues.setIamPolicy
      parameters:
        - description: >-
            REQUIRED: The resource for which the policy is being specified.

            See the operation documentation for the appropriate value for this field.
          in: path
          name: resource
          required: true
          x-reservedExpansion: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SetIamPolicyRequest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Policy"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  "/v2beta3/{resource}:testIamPermissions":
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/upload_protocol"
    post:
      description: >-
        Returns permissions that a caller has on a Queue.

        If the resource does not exist, this will return an empty set of

        permissions, not a NOT_FOUND error.


        Note: This operation is designed to be used for building permission-aware

        UIs and command-line tools, not for authorization checking. This operation

        may "fail open" without warning.
      operationId: cloudtasks.projects.locations.queues.testIamPermissions
      parameters:
        - description: >-
            REQUIRED: The resource for which the policy detail is being
            requested.

            See the operation documentation for the appropriate value for this field.
          in: path
          name: resource
          required: true
          x-reservedExpansion: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TestIamPermissionsRequest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/TestIamPermissionsResponse"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
servers:
  - url: https://cloudtasks.googleapis.com/
components:
  parameters:
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
          - media
          - proto
        default: json
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    key:
      description: API key. Your API key identifies your project and provides you with API
        access, quota, and reports. Required unless you provide an OAuth 2.0
        token.
      in: query
      name: key
      schema:
        type: string
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
        default: true
    quotaUser:
      description: Available to use for quota purposes for server-side applications. Can be
        any arbitrary string assigned to a user, but should not exceed 40
        characters.
      in: query
      name: quotaUser
      schema:
        type: string
    uploadType:
      description: Legacy upload protocol for media (e.g. "media", "multipart").
      in: query
      name: uploadType
      schema:
        type: string
    upload_protocol:
      description: Upload protocol for media (e.g. "raw", "multipart").
      in: query
      name: upload_protocol
      schema:
        type: string
    _.xgafv:
      description: V1 error format.
      in: query
      name: $.xgafv
      schema:
        type: string
        enum:
          - "1"
          - "2"
  requestBodies:
    Queue:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Queue"
  securitySchemes:
    Oauth2:
      description: Oauth 2.0 implicit authentication
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes:
            https://www.googleapis.com/auth/cloud-platform: View and manage your data across Google Cloud Platform services
    Oauth2c:
      description: Oauth 2.0 accessCode authentication
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          tokenUrl: https://accounts.google.com/o/oauth2/token
          scopes:
            https://www.googleapis.com/auth/cloud-platform: View and manage your data across Google Cloud Platform services
  schemas:
    AppEngineHttpQueue:
      description: >-
        App Engine HTTP queue.


        The task will be delivered to the App Engine application hostname

        specified by its AppEngineHttpQueue and AppEngineHttpRequest.

        The documentation for AppEngineHttpRequest explains how the

        task's host URL is constructed.


        Using AppEngineHttpQueue requires

        [`appengine.applications.get`](https://cloud.google.com/appengine/docs/admin-api/access-control)

        Google IAM permission for the project

        and the following scope:


        `https://www.googleapis.com/auth/cloud-platform`
      properties:
        appEngineRoutingOverride:
          $ref: "#/components/schemas/AppEngineRouting"
      type: object
    AppEngineHttpRequest:
      description: >-
        App Engine HTTP request.


        The message defines the HTTP request that is sent to an App Engine app when

        the task is dispatched.


        Using AppEngineHttpRequest requires

        [`appengine.applications.get`](https://cloud.google.com/appengine/docs/admin-api/access-control)

        Google IAM permission for the project

        and the following scope:


        `https://www.googleapis.com/auth/cloud-platform`


        The task will be delivered to the App Engine app which belongs to the same

        project as the queue. For more information, see

        [How Requests are

        Routed](https://cloud.google.com/appengine/docs/standard/python/how-requests-are-routed)

        and how routing is affected by

        [dispatch

        files](https://cloud.google.com/appengine/docs/python/config/dispatchref).

        Traffic is encrypted during transport and never leaves Google datacenters.

        Because this traffic is carried over a communication mechanism internal to

        Google, you cannot explicitly set the protocol (for example, HTTP or HTTPS).

        The request to the handler, however, will appear to have used the HTTP

        protocol.


        The AppEngineRouting used to construct the URL that the task is

        delivered to can be set at the queue-level or task-level:


        * If set,
           app_engine_routing_override
           is used for all tasks in the queue, no matter what the setting
           is for the
           task-level app_engine_routing.


        The `url` that the task will be sent to is:


        * `url =` host `+`
          relative_uri

        Tasks can be dispatched to secure app handlers, unsecure app handlers, and

        URIs restricted with

        [`login:

        admin`](https://cloud.google.com/appengine/docs/standard/python/config/appref).

        Because tasks are not run as any user, they cannot be dispatched to URIs

        restricted with

        [`login:

        required`](https://cloud.google.com/appengine/docs/standard/python/config/appref)

        Task dispatches also do not follow redirects.


        The task attempt has succeeded if the app's request handler returns an HTTP

        response code in the range [`200` - `299`]. The task attempt has failed if

        the app's handler returns a non-2xx response code or Cloud Tasks does

        not receive response before the deadline. Failed

        tasks will be retried according to the

        retry configuration. `503` (Service Unavailable) is

        considered an App Engine system error instead of an application error and

        will cause Cloud Tasks' traffic congestion control to temporarily throttle

        the queue's dispatches. Unlike other types of task targets, a `429` (Too Many

        Requests) response from an app handler does not cause traffic congestion

        control to throttle the queue.
      properties:
        appEngineRouting:
          $ref: "#/components/schemas/AppEngineRouting"
        body:
          description: >-
            HTTP request body.


            A request body is allowed only if the HTTP method is POST or PUT. It is

            an error to set a body on a task with an incompatible HttpMethod.
          format: byte
          type: string
        headers:
          additionalProperties:
            type: string
          description: >-
            HTTP request headers.


            This map contains the header field names and values.

            Headers can be set when the

            task is created.

            Repeated headers are not supported but a header value can contain commas.


            Cloud Tasks sets some headers to default values:


            * `User-Agent`: By default, this header is
              `"AppEngine-Google; (+http://code.google.com/appengine)"`.
              This header can be modified, but Cloud Tasks will append
              `"AppEngine-Google; (+http://code.google.com/appengine)"` to the
              modified `User-Agent`.

            If the task has a body, Cloud

            Tasks sets the following headers:


            * `Content-Type`: By default, the `Content-Type` header is set to
              `"application/octet-stream"`. The default can be overridden by explicitly
              setting `Content-Type` to a particular media type when the
              task is created.
              For example, `Content-Type` can be set to `"application/json"`.
            * `Content-Length`: This is computed by Cloud Tasks. This value is
              output only.   It cannot be changed.

            The headers below cannot be set or overridden:


            * `Host`

            * `X-Google-*`

            * `X-AppEngine-*`


            In addition, Cloud Tasks sets some headers when the task is dispatched,

            such as headers containing information about the task; see

            [request

            headers](https://cloud.google.com/appengine/docs/python/taskqueue/push/creating-handlers#reading_request_headers).

            These headers are set only when the task is dispatched, so they are not

            visible when the task is returned in a Cloud Tasks response.


            Although there is no specific limit for the maximum number of headers or

            the size, there is a limit on the maximum size of the Task. For more

            information, see the CreateTask documentation.
          type: object
        httpMethod:
          description: >-
            The HTTP method to use for the request. The default is POST.


            The app's request handler for the task's target URL must be able to handle

            HTTP requests with this http_method, otherwise the task attempt will fail

            with error code 405 (Method Not Allowed). See

            [Writing a push task request

            handler](https://cloud.google.com/appengine/docs/java/taskqueue/push/creating-handlers#writing_a_push_task_request_handler)

            and the documentation for the request handlers in the language your app is

            written in e.g.

            [Python Request

            Handler](https://cloud.google.com/appengine/docs/python/tools/webapp/requesthandlerclass).
          enum:
            - HTTP_METHOD_UNSPECIFIED
            - POST
            - GET
            - HEAD
            - PUT
            - DELETE
            - PATCH
            - OPTIONS
          type: string
        relativeUri:
          description: >-
            The relative URI.


            The relative URI must begin with "/" and must be a valid HTTP relative URI.

            It can contain a path and query string arguments.

            If the relative URI is empty, then the root path "/" will be used.

            No spaces are allowed, and the maximum length allowed is 2083 characters.
          type: string
      type: object
    AppEngineRouting:
      description: >-
        App Engine Routing.


        Defines routing characteristics specific to App Engine - service, version,

        and instance.


        For more information about services, versions, and instances see

        [An Overview of App

        Engine](https://cloud.google.com/appengine/docs/python/an-overview-of-app-engine),

        [Microservices Architecture on Google App

        Engine](https://cloud.google.com/appengine/docs/python/microservices-on-app-engine),

        [App Engine Standard request

        routing](https://cloud.google.com/appengine/docs/standard/python/how-requests-are-routed),

        and [App Engine Flex request

        routing](https://cloud.google.com/appengine/docs/flexible/python/how-requests-are-routed).
      properties:
        host:
          description: >-
            Output only. The host that the task is sent to.


            The host is constructed from the domain name of the app associated with

            the queue's project ID (for example <app-id>.appspot.com), and the

            service, version,

            and instance. Tasks which were created using

            the App Engine SDK might have a custom domain name.


            For more information, see

            [How Requests are

            Routed](https://cloud.google.com/appengine/docs/standard/python/how-requests-are-routed).
          type: string
        instance:
          description: >-
            App instance.


            By default, the task is sent to an instance which is available when

            the task is attempted.


            Requests can only be sent to a specific instance if

            [manual scaling is used in App Engine

            Standard](https://cloud.google.com/appengine/docs/python/an-overview-of-app-engine?hl=en_US#scaling_types_and_instance_classes).

            App Engine Flex does not support instances. For more information, see

            [App Engine Standard request

            routing](https://cloud.google.com/appengine/docs/standard/python/how-requests-are-routed)

            and [App Engine Flex request

            routing](https://cloud.google.com/appengine/docs/flexible/python/how-requests-are-routed).
          type: string
        service:
          description: |-
            App service.

            By default, the task is sent to the service which is the default
            service when the task is attempted.

            For some queues or tasks which were created using the App Engine
            Task Queue API, host is not parsable
            into service,
            version, and
            instance. For example, some tasks
            which were created using the App Engine SDK use a custom domain
            name; custom domains are not parsed by Cloud Tasks. If
            host is not parsable, then
            service,
            version, and
            instance are the empty string.
          type: string
        version:
          description: |-
            App version.

            By default, the task is sent to the version which is the default
            version when the task is attempted.

            For some queues or tasks which were created using the App Engine
            Task Queue API, host is not parsable
            into service,
            version, and
            instance. For example, some tasks
            which were created using the App Engine SDK use a custom domain
            name; custom domains are not parsed by Cloud Tasks. If
            host is not parsable, then
            service,
            version, and
            instance are the empty string.
          type: string
      type: object
    Attempt:
      description: The status of a task attempt.
      properties:
        dispatchTime:
          description: |-
            Output only. The time that this attempt was dispatched.

            `dispatch_time` will be truncated to the nearest microsecond.
          format: google-datetime
          type: string
        responseStatus:
          $ref: "#/components/schemas/Status"
        responseTime:
          description: |-
            Output only. The time that this attempt response was received.

            `response_time` will be truncated to the nearest microsecond.
          format: google-datetime
          type: string
        scheduleTime:
          description: |-
            Output only. The time that this attempt was scheduled.

            `schedule_time` will be truncated to the nearest microsecond.
          format: google-datetime
          type: string
      type: object
    Binding:
      description: Associates `members` with a `role`.
      properties:
        condition:
          $ref: "#/components/schemas/Expr"
        members:
          description: >+
            Specifies the identities requesting access for a Cloud Platform
            resource.

            `members` can have the following values:


            * `allUsers`: A special identifier that represents anyone who is
               on the internet; with or without a Google account.

            * `allAuthenticatedUsers`: A special identifier that represents anyone
               who is authenticated with a Google account or a service account.

            * `user:{emailid}`: An email address that represents a specific Google
               account. For example, `alice@example.com` .


            * `serviceAccount:{emailid}`: An email address that represents a service
               account. For example, `my-other-app@appspot.gserviceaccount.com`.

            * `group:{emailid}`: An email address that represents a Google group.
               For example, `admins@example.com`.


            * `domain:{domain}`: The G Suite domain (primary) that represents all the
               users of that domain. For example, `google.com` or `example.com`.

          items:
            type: string
          type: array
        role:
          description: |-
            Role that is assigned to `members`.
            For example, `roles/viewer`, `roles/editor`, or `roles/owner`.
          type: string
      type: object
    CreateTaskRequest:
      description: Request message for CreateTask.
      properties:
        responseView:
          description: >-
            The response_view specifies which subset of the Task will be

            returned.


            By default response_view is BASIC; not all

            information is retrieved by default because some data, such as

            payloads, might be desirable to return only when needed because

            of its large size or because of the sensitivity of data that it

            contains.


            Authorization for FULL requires

            `cloudtasks.tasks.fullView` [Google IAM](https://cloud.google.com/iam/)

            permission on the Task resource.
          enum:
            - VIEW_UNSPECIFIED
            - BASIC
            - FULL
          type: string
        task:
          $ref: "#/components/schemas/Task"
      type: object
    Empty:
      description: >-
        A generic empty message that you can re-use to avoid defining duplicated

        empty messages in your APIs. A typical example is to use it as the request

        or the response type of an API method. For instance:

            service Foo {
              rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);
            }

        The JSON representation for `Empty` is empty JSON object `{}`.
      properties: {}
      type: object
    Expr:
      description: |-
        Represents an expression text. Example:

            title: "User account presence"
            description: "Determines whether the request has a user account"
            expression: "size(request.user) > 0"
      properties:
        description:
          description: >-
            An optional description of the expression. This is a longer text
            which

            describes the expression, e.g. when hovered over it in a UI.
          type: string
        expression:
          description: |-
            Textual representation of an expression in
            Common Expression Language syntax.

            The application context of the containing message determines which
            well-known feature set of CEL is supported.
          type: string
        location:
          description: >-
            An optional string indicating the location of the expression for
            error

            reporting, e.g. a file name and a position in the file.
          type: string
        title:
          description: |-
            An optional title for the expression, i.e. a short string describing
            its purpose. This can be used e.g. in UIs which allow to enter the
            expression.
          type: string
      type: object
    GetIamPolicyRequest:
      description: Request message for `GetIamPolicy` method.
      properties:
        options:
          $ref: "#/components/schemas/GetPolicyOptions"
      type: object
    GetPolicyOptions:
      description: Encapsulates settings provided to GetIamPolicy.
      properties:
        requestedPolicyVersion:
          description: >-
            Optional. The policy format version to be returned.


            Valid values are 0, 1, and 3. Requests specifying an invalid value will be

            rejected.


            Requests for policies with any conditional bindings must specify version 3.

            Policies without any conditional bindings may specify any valid value or

            leave the field unset.
          format: int32
          type: integer
      type: object
    HttpRequest:
      description: >-
        HTTP request.


        The task will be pushed to the worker as an HTTP request. If the worker

        or the redirected worker acknowledges the task by returning a successful HTTP

        response code ([`200` - `299`]), the task will removed from the queue. If

        any other HTTP response code is returned or no response is received, the

        task will be retried according to the following:


        * User-specified throttling: retry configuration,
          rate limits, and the queue's state.

        * System throttling: To prevent the worker from overloading, Cloud Tasks may
          temporarily reduce the queue's effective rate. User-specified settings
          will not be changed.

         System throttling happens because:

          * Cloud Tasks backs off on all errors. Normally the backoff specified in
            rate limits will be used. But if the worker returns
            `429` (Too Many Requests), `503` (Service Unavailable), or the rate of
            errors is high, Cloud Tasks will use a higher backoff rate. The retry
            specified in the `Retry-After` HTTP response header is considered.

          * To prevent traffic spikes and to smooth sudden large traffic spikes,
            dispatches ramp up slowly when the queue is newly created or idle and
            if large numbers of tasks suddenly become available to dispatch (due to
            spikes in create task rates, the queue being unpaused, or many tasks
            that are scheduled at the same time).
      properties:
        body:
          description: |-
            HTTP request body.

            A request body is allowed only if the
            HTTP method is POST, PUT, or PATCH. It is an
            error to set body on a task with an incompatible HttpMethod.
          format: byte
          type: string
        headers:
          additionalProperties:
            type: string
          description: >-
            HTTP request headers.


            This map contains the header field names and values.

            Headers can be set when the

            task is created.


            These headers represent a subset of the headers that will accompany the

            task's HTTP request. Some HTTP request headers will be ignored or replaced.


            A partial list of headers that will be ignored or replaced is:


            * Host: This will be computed by Cloud Tasks and derived from
              HttpRequest.url.
            * Content-Length: This will be computed by Cloud Tasks.

            * User-Agent: This will be set to `"Google-Cloud-Tasks"`.

            * X-Google-*: Google use only.

            * X-AppEngine-*: Google use only.


            `Content-Type` won't be set by Cloud Tasks. You can explicitly set

            `Content-Type` to a media type when the
             task is created.
             For example, `Content-Type` can be set to `"application/octet-stream"` or
             `"application/json"`.

            Headers which can have multiple values (according to RFC2616) can be

            specified using comma-separated values.


            The size of the headers must be less than 80KB.
          type: object
        httpMethod:
          description: The HTTP method to use for the request. The default is POST.
          enum:
            - HTTP_METHOD_UNSPECIFIED
            - POST
            - GET
            - HEAD
            - PUT
            - DELETE
            - PATCH
            - OPTIONS
          type: string
        oauthToken:
          $ref: "#/components/schemas/OAuthToken"
        oidcToken:
          $ref: "#/components/schemas/OidcToken"
        url:
          description: >-
            Required. The full url path that the request will be sent to.


            This string must begin with either "http://" or "https://". Some examples

            are: `http://acme.com` and `https://acme.com/sales:8080`. Cloud Tasks will

            encode some characters for safety and compatibility. The maximum allowed

            URL length is 2083 characters after encoding.


            The `Location` header response from a redirect response [`300` - `399`]

            may be followed. The redirect is not counted as a separate attempt.
          type: string
      type: object
    ListLocationsResponse:
      description: The response message for Locations.ListLocations.
      properties:
        locations:
          description: A list of locations that matches the specified filter in the request.
          items:
            $ref: "#/components/schemas/Location"
          type: array
        nextPageToken:
          description: The standard List next-page token.
          type: string
      type: object
    ListQueuesResponse:
      description: Response message for ListQueues.
      properties:
        nextPageToken:
          description: |-
            A token to retrieve next page of results.

            To return the next page of results, call
            ListQueues with this value as the
            page_token.

            If the next_page_token is empty, there are no more results.

            The page token is valid for only 2 hours.
          type: string
        queues:
          description: The list of queues.
          items:
            $ref: "#/components/schemas/Queue"
          type: array
      type: object
    ListTasksResponse:
      description: Response message for listing tasks using ListTasks.
      properties:
        nextPageToken:
          description: |-
            A token to retrieve next page of results.

            To return the next page of results, call
            ListTasks with this value as the
            page_token.

            If the next_page_token is empty, there are no more results.
          type: string
        tasks:
          description: The list of tasks.
          items:
            $ref: "#/components/schemas/Task"
          type: array
      type: object
    Location:
      description: A resource that represents Google Cloud Platform location.
      properties:
        displayName:
          description: |-
            The friendly name for this location, typically a nearby city name.
            For example, "Tokyo".
          type: string
        labels:
          additionalProperties:
            type: string
          description: |-
            Cross-service attributes for the location. For example

                {"cloud.googleapis.com/region": "us-east1"}
          type: object
        locationId:
          description: 'The canonical id for this location. For example: `"us-east1"`.'
          type: string
        metadata:
          additionalProperties:
            description: Properties of the object. Contains field @type with type URL.
          description: >-
            Service-specific metadata. For example the available capacity at the
            given

            location.
          type: object
        name:
          description: >-
            Resource name for the location, which may vary between
            implementations.

            For example: `"projects/example-project/locations/us-east1"`
          type: string
      type: object
    OAuthToken:
      description: >-
        Contains information needed for generating an

        [OAuth token](https://developers.google.com/identity/protocols/OAuth2).

        This type of authorization should generally only be used when calling Google

        APIs hosted on *.googleapis.com.
      properties:
        scope:
          description: |-
            OAuth scope to be used for generating OAuth access token.
            If not specified, "https://www.googleapis.com/auth/cloud-platform"
            will be used.
          type: string
        serviceAccountEmail:
          description: >-
            [Service account
            email](https://cloud.google.com/iam/docs/service-accounts)

            to be used for generating OAuth token.

            The service account must be within the same project as the queue. The

            caller must have iam.serviceAccounts.actAs permission for the service

            account.
          type: string
      type: object
    OidcToken:
      description: |-
        Contains information needed for generating an
        [OpenID Connect
        token](https://developers.google.com/identity/protocols/OpenIDConnect).
        This type of authorization can be used for many scenarios, including
        calling Cloud Run, or endpoints where you intend to validate the token
        yourself.
      properties:
        audience:
          description: >-
            Audience to be used when generating OIDC token. If not specified,
            the URI

            specified in target will be used.
          type: string
        serviceAccountEmail:
          description: >-
            [Service account
            email](https://cloud.google.com/iam/docs/service-accounts)

            to be used for generating OIDC token.

            The service account must be within the same project as the queue. The

            caller must have iam.serviceAccounts.actAs permission for the service

            account.
          type: string
      type: object
    PauseQueueRequest:
      description: Request message for PauseQueue.
      properties: {}
      type: object
    Policy:
      description: >-
        Defines an Identity and Access Management (IAM) policy. It is used to

        specify access control policies for Cloud Platform resources.



        A `Policy` consists of a list of `bindings`. A `binding` binds a list of

        `members` to a `role`, where the members can be user accounts, Google groups,

        Google domains, and service accounts. A `role` is a named list of permissions

        defined by IAM.


        **JSON Example**

            {
              "bindings": [
                {
                  "role": "roles/owner",
                  "members": [
                    "user:mike@example.com",
                    "group:admins@example.com",
                    "domain:google.com",
                    "serviceAccount:my-other-app@appspot.gserviceaccount.com"
                  ]
                },
                {
                  "role": "roles/viewer",
                  "members": ["user:sean@example.com"]
                }
              ]
            }

        **YAML Example**

            bindings:
            - members:
              - user:mike@example.com
              - group:admins@example.com
              - domain:google.com
              - serviceAccount:my-other-app@appspot.gserviceaccount.com
              role: roles/owner
            - members:
              - user:sean@example.com
              role: roles/viewer


        For a description of IAM and its features, see the

        [IAM developer's guide](https://cloud.google.com/iam/docs).
      properties:
        bindings:
          description: |-
            Associates a list of `members` to a `role`.
            `bindings` with no members will result in an error.
          items:
            $ref: "#/components/schemas/Binding"
          type: array
        etag:
          description: >-
            `etag` is used for optimistic concurrency control as a way to help

            prevent simultaneous updates of a policy from overwriting each other.

            It is strongly suggested that systems make use of the `etag` in the

            read-modify-write cycle to perform policy updates in order to avoid race

            conditions: An `etag` is returned in the response to `getIamPolicy`, and

            systems are expected to put that etag in the request to `setIamPolicy` to

            ensure that their change will be applied to the same version of the policy.


            If no `etag` is provided in the call to `setIamPolicy`, then the existing

            policy is overwritten.
          format: byte
          type: string
        version:
          description: >-
            Specifies the format of the policy.


            Valid values are 0, 1, and 3. Requests specifying an invalid value will be

            rejected.


            Policies with any conditional bindings must specify version 3. Policies

            without any conditional bindings may specify any valid value or leave the

            field unset.
          format: int32
          type: integer
      type: object
    PurgeQueueRequest:
      description: Request message for PurgeQueue.
      properties: {}
      type: object
    Queue:
      description: >-
        A queue is a container of related tasks. Queues are configured to manage

        how those tasks are dispatched. Configurable properties include rate limits,

        retry options, queue types, and others.
      properties:
        appEngineHttpQueue:
          $ref: "#/components/schemas/AppEngineHttpQueue"
        name:
          description: >-
            Caller-specified and required in CreateQueue,

            after which it becomes output only.


            The queue name.


            The queue name must have the following format:

            `projects/PROJECT_ID/locations/LOCATION_ID/queues/QUEUE_ID`


            * `PROJECT_ID` can contain letters ([A-Za-z]), numbers ([0-9]),
               hyphens (-), colons (:), or periods (.).
               For more information, see
               [Identifying
               projects](https://cloud.google.com/resource-manager/docs/creating-managing-projects#identifying_projects)
            * `LOCATION_ID` is the canonical ID for the queue's location.
               The list of available locations can be obtained by calling
               ListLocations.
               For more information, see https://cloud.google.com/about/locations/.
            * `QUEUE_ID` can contain letters ([A-Za-z]), numbers ([0-9]), or
              hyphens (-). The maximum length is 100 characters.
          type: string
        purgeTime:
          description: >-
            Output only. The last time this queue was purged.


            All tasks that were created before this time

            were purged.


            A queue can be purged using PurgeQueue, the

            [App Engine Task Queue SDK, or the Cloud

            Console](https://cloud.google.com/appengine/docs/standard/python/taskqueue/push/deleting-tasks-and-queues#purging_all_tasks_from_a_queue).


            Purge time will be truncated to the nearest microsecond. Purge

            time will be unset if the queue has never been purged.
          format: google-datetime
          type: string
        rateLimits:
          $ref: "#/components/schemas/RateLimits"
        retryConfig:
          $ref: "#/components/schemas/RetryConfig"
        stackdriverLoggingConfig:
          $ref: "#/components/schemas/StackdriverLoggingConfig"
        state:
          description: >-
            Output only. The state of the queue.


            `state` can only be changed by called

            PauseQueue,

            ResumeQueue, or uploading

            [queue.yaml/xml](https://cloud.google.com/appengine/docs/python/config/queueref).

            UpdateQueue cannot be used to change `state`.
          enum:
            - STATE_UNSPECIFIED
            - RUNNING
            - PAUSED
            - DISABLED
          type: string
      type: object
    RateLimits:
      description: >-
        Rate limits.


        This message determines the maximum rate that tasks can be dispatched by a

        queue, regardless of whether the dispatch is a first task attempt or a retry.


        Note: The debugging command, RunTask, will run a task

        even if the queue has reached its RateLimits.
      properties:
        maxBurstSize:
          description: >
            Output only. The max burst size.


            Max burst size limits how fast tasks in queue are processed when

            many tasks are in the queue and the rate is high. This field

            allows the queue to have a high rate so processing starts shortly

            after a task is enqueued, but still limits resource usage when

            many tasks are enqueued in a short period of time.


            The [token bucket](https://wikipedia.org/wiki/Token_Bucket)

            algorithm is used to control the rate of task dispatches. Each

            queue has a token bucket that holds tokens, up to the maximum

            specified by `max_burst_size`. Each time a task is dispatched, a

            token is removed from the bucket. Tasks will be dispatched until

            the queue's bucket runs out of tokens. The bucket will be

            continuously refilled with new tokens based on

            max_dispatches_per_second.


            Cloud Tasks will pick the value of `max_burst_size` based on the

            value of

            max_dispatches_per_second.


            For App Engine queues that were created or updated using

            `queue.yaml/xml`, `max_burst_size` is equal to

            [bucket_size](https://cloud.google.com/appengine/docs/standard/python/config/queueref#bucket_size).

            Since `max_burst_size` is output only, if

            UpdateQueue is called on a queue

            created by `queue.yaml/xml`, `max_burst_size` will be reset based

            on the value of

            max_dispatches_per_second,

            regardless of whether

            max_dispatches_per_second

            is updated.
          format: int32
          type: integer
        maxConcurrentDispatches:
          description: >-
            The maximum number of concurrent tasks that Cloud Tasks allows

            to be dispatched for this queue. After this threshold has been

            reached, Cloud Tasks stops dispatching tasks until the number of

            concurrent requests decreases.


            If unspecified when the queue is created, Cloud Tasks will pick the

            default.



            The maximum allowed value is 5,000.



            This field has the same meaning as

            [max_concurrent_requests in

            queue.yaml/xml](https://cloud.google.com/appengine/docs/standard/python/config/queueref#max_concurrent_requests).
          format: int32
          type: integer
        maxDispatchesPerSecond:
          description: >-
            The maximum rate at which tasks are dispatched from this queue.


            If unspecified when the queue is created, Cloud Tasks will pick the

            default.


            * For App Engine queues, the maximum allowed value
              is 500.


            This field has the same meaning as

            [rate in

            queue.yaml/xml](https://cloud.google.com/appengine/docs/standard/python/config/queueref#rate).
          format: double
          type: number
      type: object
    ResumeQueueRequest:
      description: Request message for ResumeQueue.
      properties: {}
      type: object
    RetryConfig:
      description: |-
        Retry config.

        These settings determine when a failed task attempt is retried.
      properties:
        maxAttempts:
          description: >-
            Number of attempts per task.


            Cloud Tasks will attempt the task `max_attempts` times (that is, if the

            first attempt fails, then there will be `max_attempts - 1` retries). Must

            be >= -1.


            If unspecified when the queue is created, Cloud Tasks will pick the

            default.


            -1 indicates unlimited attempts.


            This field has the same meaning as

            [task_retry_limit in

            queue.yaml/xml](https://cloud.google.com/appengine/docs/standard/python/config/queueref#retry_parameters).
          format: int32
          type: integer
        maxBackoff:
          description: >-
            A task will be scheduled for retry between

            min_backoff and

            max_backoff duration after it fails,

            if the queue's RetryConfig specifies that the task should be

            retried.


            If unspecified when the queue is created, Cloud Tasks will pick the

            default.



            `max_backoff` will be truncated to the nearest second.


            This field has the same meaning as

            [max_backoff_seconds in

            queue.yaml/xml](https://cloud.google.com/appengine/docs/standard/python/config/queueref#retry_parameters).
          format: google-duration
          type: string
        maxDoublings:
          description: >-
            The time between retries will double `max_doublings` times.


            A task's retry interval starts at

            min_backoff, then doubles

            `max_doublings` times, then increases linearly, and finally

            retries retries at intervals of

            max_backoff up to

            max_attempts times.


            For example, if min_backoff is 10s,

            max_backoff is 300s, and

            `max_doublings` is 3, then the a task will first be retried in

            10s. The retry interval will double three times, and then

            increase linearly by 2^3 * 10s.  Finally, the task will retry at

            intervals of max_backoff until the

            task has been attempted max_attempts

            times. Thus, the requests will retry at 10s, 20s, 40s, 80s, 160s,

            240s, 300s, 300s, ....


            If unspecified when the queue is created, Cloud Tasks will pick the

            default.



            This field has the same meaning as

            [max_doublings in

            queue.yaml/xml](https://cloud.google.com/appengine/docs/standard/python/config/queueref#retry_parameters).
          format: int32
          type: integer
        maxRetryDuration:
          description: >-
            If positive, `max_retry_duration` specifies the time limit for

            retrying a failed task, measured from when the task was first

            attempted. Once `max_retry_duration` time has passed *and* the

            task has been attempted max_attempts

            times, no further attempts will be made and the task will be

            deleted.


            If zero, then the task age is unlimited.


            If unspecified when the queue is created, Cloud Tasks will pick the

            default.



            `max_retry_duration` will be truncated to the nearest second.


            This field has the same meaning as

            [task_age_limit in

            queue.yaml/xml](https://cloud.google.com/appengine/docs/standard/python/config/queueref#retry_parameters).
          format: google-duration
          type: string
        minBackoff:
          description: >-
            A task will be scheduled for retry between

            min_backoff and

            max_backoff duration after it fails,

            if the queue's RetryConfig specifies that the task should be

            retried.


            If unspecified when the queue is created, Cloud Tasks will pick the

            default.



            `min_backoff` will be truncated to the nearest second.


            This field has the same meaning as

            [min_backoff_seconds in

            queue.yaml/xml](https://cloud.google.com/appengine/docs/standard/python/config/queueref#retry_parameters).
          format: google-duration
          type: string
      type: object
    RunTaskRequest:
      description: |-
        Request message for forcing a task to run now using
        RunTask.
      properties:
        responseView:
          description: >-
            The response_view specifies which subset of the Task will be

            returned.


            By default response_view is BASIC; not all

            information is retrieved by default because some data, such as

            payloads, might be desirable to return only when needed because

            of its large size or because of the sensitivity of data that it

            contains.


            Authorization for FULL requires

            `cloudtasks.tasks.fullView` [Google IAM](https://cloud.google.com/iam/)

            permission on the Task resource.
          enum:
            - VIEW_UNSPECIFIED
            - BASIC
            - FULL
          type: string
      type: object
    SetIamPolicyRequest:
      description: Request message for `SetIamPolicy` method.
      properties:
        policy:
          $ref: "#/components/schemas/Policy"
      type: object
    StackdriverLoggingConfig:
      description: |-
        Configuration options for writing logs to
        [Stackdriver Logging](https://cloud.google.com/logging/docs/).
      properties:
        samplingRatio:
          description: |-
            Specifies the fraction of operations to write to
            [Stackdriver Logging](https://cloud.google.com/logging/docs/).
            This field may contain any value between 0.0 and 1.0, inclusive.
            0.0 is the default and means that no operations are logged.
          format: double
          type: number
      type: object
    Status:
      description: >-
        The `Status` type defines a logical error model that is suitable for

        different programming environments, including REST APIs and RPC APIs. It is

        used by [gRPC](https://github.com/grpc). Each `Status` message contains

        three pieces of data: error code, error message, and error details.


        You can find out more about this error model and how to work with it in the

        [API Design Guide](https://cloud.google.com/apis/design/errors).
      properties:
        code:
          description: The status code, which should be an enum value of google.rpc.Code.
          format: int32
          type: integer
        details:
          description: >-
            A list of messages that carry the error details.  There is a common
            set of

            message types for APIs to use.
          items:
            additionalProperties:
              description: Properties of the object. Contains field @type with type URL.
            type: object
          type: array
        message:
          description: |-
            A developer-facing error message, which should be in English. Any
            user-facing error message should be localized and sent in the
            google.rpc.Status.details field, or localized by the client.
          type: string
      type: object
    Task:
      description: A unit of scheduled work.
      properties:
        appEngineHttpRequest:
          $ref: "#/components/schemas/AppEngineHttpRequest"
        createTime:
          description: |-
            Output only. The time that the task was created.

            `create_time` will be truncated to the nearest second.
          format: google-datetime
          type: string
        dispatchCount:
          description: |-
            Output only. The number of attempts dispatched.

            This count includes attempts which have been dispatched but haven't
            received a response.
          format: int32
          type: integer
        dispatchDeadline:
          description: >-
            The deadline for requests sent to the worker. If the worker does not

            respond by this deadline then the request is cancelled and the attempt

            is marked as a `DEADLINE_EXCEEDED` failure. Cloud Tasks will retry the

            task according to the RetryConfig.


            Note that when the request is cancelled, Cloud Tasks will stop listing for

            the response, but whether the worker stops processing depends on the

            worker. For example, if the worker is stuck, it may not react to cancelled

            requests.


            The default and maximum values depend on the type of request:


            * For HTTP tasks, the default is 10 minutes. The deadline
              must be in the interval [15 seconds, 30 minutes].

            * For App Engine tasks, 0 indicates that the
              request has the default deadline. The default deadline depends on the
              [scaling
              type](https://cloud.google.com/appengine/docs/standard/go/how-instances-are-managed#instance_scaling)
              of the service: 10 minutes for standard apps with automatic scaling, 24
              hours for standard apps with manual and basic scaling, and 60 minutes for
              flex apps. If the request deadline is set, it must be in the interval [15
              seconds, 24 hours 15 seconds]. Regardless of the task's
              `dispatch_deadline`, the app handler will not run for longer than than
              the service's timeout. We recommend setting the `dispatch_deadline` to
              at most a few seconds more than the app handler's timeout. For more
              information see
              [Timeouts](https://cloud.google.com/tasks/docs/creating-appengine-handlers#timeouts).

            `dispatch_deadline` will be truncated to the nearest millisecond. The

            deadline is an approximate deadline.
          format: google-duration
          type: string
        firstAttempt:
          $ref: "#/components/schemas/Attempt"
        httpRequest:
          $ref: "#/components/schemas/HttpRequest"
        lastAttempt:
          $ref: "#/components/schemas/Attempt"
        name:
          description: >-
            Optionally caller-specified in CreateTask.


            The task name.


            The task name must have the following format:

            `projects/PROJECT_ID/locations/LOCATION_ID/queues/QUEUE_ID/tasks/TASK_ID`


            * `PROJECT_ID` can contain letters ([A-Za-z]), numbers ([0-9]),
               hyphens (-), colons (:), or periods (.).
               For more information, see
               [Identifying
               projects](https://cloud.google.com/resource-manager/docs/creating-managing-projects#identifying_projects)
            * `LOCATION_ID` is the canonical ID for the task's location.
               The list of available locations can be obtained by calling
               ListLocations.
               For more information, see https://cloud.google.com/about/locations/.
            * `QUEUE_ID` can contain letters ([A-Za-z]), numbers ([0-9]), or
              hyphens (-). The maximum length is 100 characters.
            * `TASK_ID` can contain only letters ([A-Za-z]), numbers ([0-9]),
              hyphens (-), or underscores (_). The maximum length is 500 characters.
          type: string
        responseCount:
          description: Output only. The number of attempts which have received a response.
          format: int32
          type: integer
        scheduleTime:
          description: >-
            The time when the task is scheduled to be attempted.


            For App Engine queues, this is when the task will be attempted or retried.


            `schedule_time` will be truncated to the nearest microsecond.
          format: google-datetime
          type: string
        view:
          description: |-
            Output only. The view specifies which subset of the Task has
            been returned.
          enum:
            - VIEW_UNSPECIFIED
            - BASIC
            - FULL
          type: string
      type: object
    TestIamPermissionsRequest:
      description: Request message for `TestIamPermissions` method.
      properties:
        permissions:
          description: >-
            The set of permissions to check for the `resource`. Permissions with

            wildcards (such as '*' or 'storage.*') are not allowed. For more

            information see

            [IAM Overview](https://cloud.google.com/iam/docs/overview#permissions).
          items:
            type: string
          type: array
      type: object
    TestIamPermissionsResponse:
      description: Response message for `TestIamPermissions` method.
      properties:
        permissions:
          description: |-
            A subset of `TestPermissionsRequest.permissions` that the caller is
            allowed.
          items:
            type: string
          type: array
      type: object
