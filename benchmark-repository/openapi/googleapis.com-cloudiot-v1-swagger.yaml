openapi: 3.0.0
info:
  contact:
    name: Google
    url: https://google.com
  description: >
    Registers and manages IoT (Internet of Things) devices that connect to the
    Google Cloud Platform.
  license:
    name: Creative Commons Attribution 3.0
    url: http://creativecommons.org/licenses/by/3.0/
  termsOfService: https://developers.google.com/terms/
  title: Cloud IoT
  version: v1
  x-apiClientRegistration:
    url: https://console.developers.google.com
  x-logo:
    url: https://www.google.com/images/branding/googlelogo/2x/googlelogo_color_272x92dp.png
  x-origin:
    - converter:
        url: https://github.com/lucybot/api-spec-converter
        version: 2.7.31
      format: google
      url: https://cloudiot.googleapis.com/$discovery/rest?version=v1
      version: v1
  x-preferred: true
  x-providerName: googleapis.com
  x-serviceName: cloudiot
externalDocs:
  url: https://cloud.google.com/iot
tags:
  - name: projects
paths:
  "/v1/{name}":
    delete:
      description: Deletes a device.
      operationId: cloudiot.projects.locations.registries.devices.delete
      parameters:
        - description: >-
            The name of the device. For example,

            `projects/p0/locations/us-central1/registries/registry0/devices/device0` or

            `projects/p0/locations/us-central1/registries/registry0/devices/{num_id}`.
          in: path
          name: name
          required: true
          x-reservedExpansion: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Empty"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloudiot
          Oauth2c:
            - https://www.googleapis.com/auth/cloudiot
      tags:
        - projects
    get:
      description: Gets details about a device.
      operationId: cloudiot.projects.locations.registries.devices.get
      parameters:
        - description: >-
            The fields of the `Device` resource to be returned in the response.
            If the

            field mask is unset or empty, all fields are returned.
          in: query
          name: fieldMask
          schema:
            type: string
        - description: >-
            The name of the device. For example,

            `projects/p0/locations/us-central1/registries/registry0/devices/device0` or

            `projects/p0/locations/us-central1/registries/registry0/devices/{num_id}`.
          in: path
          name: name
          required: true
          x-reservedExpansion: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Device"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloudiot
          Oauth2c:
            - https://www.googleapis.com/auth/cloudiot
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/upload_protocol"
    patch:
      description: Updates a device.
      operationId: cloudiot.projects.locations.registries.devices.patch
      parameters:
        - description: >-
            The resource path name. For example,

            `projects/p1/locations/us-central1/registries/registry0/devices/dev0` or

            `projects/p1/locations/us-central1/registries/registry0/devices/{num_id}`.

            When `name` is populated as a response from the service, it always ends

            in the device numeric ID.
          in: path
          name: name
          required: true
          x-reservedExpansion: true
          schema:
            type: string
        - description: >-
            Only updates the `device` fields indicated by this mask.

            The field mask must not be empty, and it must not contain fields that

            are immutable or only set by the server.

            Mutable top-level fields: `credentials`, `blocked`, and `metadata`
          in: query
          name: updateMask
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/Device"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Device"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloudiot
          Oauth2c:
            - https://www.googleapis.com/auth/cloudiot
      tags:
        - projects
  "/v1/{name}/configVersions":
    get:
      description: |-
        Lists the last few versions of the device configuration in descending
        order (i.e.: newest first).
      operationId: cloudiot.projects.locations.registries.devices.configVersions.list
      parameters:
        - description: >-
            The name of the device. For example,

            `projects/p0/locations/us-central1/registries/registry0/devices/device0` or

            `projects/p0/locations/us-central1/registries/registry0/devices/{num_id}`.
          in: path
          name: name
          required: true
          x-reservedExpansion: true
          schema:
            type: string
        - description: >-
            The number of versions to list. Versions are listed in decreasing
            order of

            the version number. The maximum number of versions retained is 10. If this

            value is zero, it will return all the versions available.
          in: query
          name: numVersions
          schema:
            type: integer
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ListDeviceConfigVersionsResponse"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloudiot
          Oauth2c:
            - https://www.googleapis.com/auth/cloudiot
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/upload_protocol"
  "/v1/{name}/states":
    get:
      description: >-
        Lists the last few versions of the device state in descending order
        (i.e.:

        newest first).
      operationId: cloudiot.projects.locations.registries.devices.states.list
      parameters:
        - description: >-
            The name of the device. For example,

            `projects/p0/locations/us-central1/registries/registry0/devices/device0` or

            `projects/p0/locations/us-central1/registries/registry0/devices/{num_id}`.
          in: path
          name: name
          required: true
          x-reservedExpansion: true
          schema:
            type: string
        - description: >-
            The number of states to list. States are listed in descending order
            of

            update time. The maximum number of states retained is 10. If this

            value is zero, it will return all the states available.
          in: query
          name: numStates
          schema:
            type: integer
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ListDeviceStatesResponse"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloudiot
          Oauth2c:
            - https://www.googleapis.com/auth/cloudiot
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/upload_protocol"
  "/v1/{name}:modifyCloudToDeviceConfig":
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/upload_protocol"
    post:
      description: >-
        Modifies the configuration for the device, which is eventually sent from

        the Cloud IoT Core servers. Returns the modified configuration version and

        its metadata.
      operationId: cloudiot.projects.locations.registries.devices.modifyCloudToDeviceConfig
      parameters:
        - description: >-
            The name of the device. For example,

            `projects/p0/locations/us-central1/registries/registry0/devices/device0` or

            `projects/p0/locations/us-central1/registries/registry0/devices/{num_id}`.
          in: path
          name: name
          required: true
          x-reservedExpansion: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ModifyCloudToDeviceConfigRequest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/DeviceConfig"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloudiot
          Oauth2c:
            - https://www.googleapis.com/auth/cloudiot
      tags:
        - projects
  "/v1/{name}:sendCommandToDevice":
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/upload_protocol"
    post:
      description: >-
        Sends a command to the specified device. In order for a device to be
        able

        to receive commands, it must:

        1) be connected to Cloud IoT Core using the MQTT protocol, and

        2) be subscribed to the group of MQTT topics specified by
           /devices/{device-id}/commands/#. This subscription will receive commands
           at the top-level topic /devices/{device-id}/commands as well as commands
           for subfolders, like /devices/{device-id}/commands/subfolder.
           Note that subscribing to specific subfolders is not supported.
        If the command could not be delivered to the device, this method will

        return an error; in particular, if the device is not subscribed, this

        method will return FAILED_PRECONDITION. Otherwise, this method will

        return OK. If the subscription is QoS 1, at least once delivery will be

        guaranteed; for QoS 0, no acknowledgment will be expected from the device.
      operationId: cloudiot.projects.locations.registries.devices.sendCommandToDevice
      parameters:
        - description: >-
            The name of the device. For example,

            `projects/p0/locations/us-central1/registries/registry0/devices/device0` or

            `projects/p0/locations/us-central1/registries/registry0/devices/{num_id}`.
          in: path
          name: name
          required: true
          x-reservedExpansion: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SendCommandToDeviceRequest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/SendCommandToDeviceResponse"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloudiot
          Oauth2c:
            - https://www.googleapis.com/auth/cloudiot
      tags:
        - projects
  "/v1/{parent}/devices":
    get:
      description: List devices in a device registry.
      operationId: cloudiot.projects.locations.registries.devices.list
      parameters:
        - description: |-
            A list of device string IDs. For example, `['device0', 'device12']`.
            If empty, this field is ignored. Maximum IDs: 10,000
          in: query
          name: deviceIds
          explode: true
          schema:
            type: array
            items:
              type: string
        - description: >-
            A list of device numeric IDs. If empty, this field is ignored.
            Maximum

            IDs: 10,000.
          in: query
          name: deviceNumIds
          explode: true
          schema:
            type: array
            items:
              type: string
        - description: >-
            The fields of the `Device` resource to be returned in the response.
            The

            fields `id` and `num_id` are always returned, along with any

            other fields specified.
          in: query
          name: fieldMask
          schema:
            type: string
        - description: >-
            If set, returns only the gateways with which the specified device is

            associated. The device ID can be numeric (`num_id`) or the user-defined

            string (`id`). For example, if `456` is specified, returns only the

            gateways to which the device with `num_id` 456 is bound.
          in: query
          name: gatewayListOptions.associationsDeviceId
          schema:
            type: string
        - description: >-
            If set, only devices associated with the specified gateway are
            returned.

            The gateway ID can be numeric (`num_id`) or the user-defined string

            (`id`). For example, if `123` is specified, only devices bound to the

            gateway with `num_id` 123 are returned.
          in: query
          name: gatewayListOptions.associationsGatewayId
          schema:
            type: string
        - description: >-
            If `GATEWAY` is specified, only gateways are returned. If
            `NON_GATEWAY`

            is specified, only non-gateway devices are returned. If

            `GATEWAY_TYPE_UNSPECIFIED` is specified, all devices are returned.
          in: query
          name: gatewayListOptions.gatewayType
          schema:
            type: string
            enum:
              - GATEWAY_TYPE_UNSPECIFIED
              - GATEWAY
              - NON_GATEWAY
        - description: >-
            The maximum number of devices to return in the response. If this
            value

            is zero, the service will select a default size. A call may return fewer

            objects than requested. A non-empty `next_page_token` in the response

            indicates that more data is available.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: |-
            The value returned by the last `ListDevicesResponse`; indicates
            that this is a continuation of a prior `ListDevices` call and
            the system should return the next page of data.
          in: query
          name: pageToken
          schema:
            type: string
        - description: |-
            The device registry path. Required. For example,
            `projects/my-project/locations/us-central1/registries/my-registry`.
          in: path
          name: parent
          required: true
          x-reservedExpansion: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ListDevicesResponse"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloudiot
          Oauth2c:
            - https://www.googleapis.com/auth/cloudiot
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/upload_protocol"
    post:
      description: Creates a device in a device registry.
      operationId: cloudiot.projects.locations.registries.devices.create
      parameters:
        - description: >-
            The name of the device registry where this device should be created.

            For example,

            `projects/example-project/locations/us-central1/registries/my-registry`.
          in: path
          name: parent
          required: true
          x-reservedExpansion: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/Device"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Device"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloudiot
          Oauth2c:
            - https://www.googleapis.com/auth/cloudiot
      tags:
        - projects
  "/v1/{parent}/registries":
    get:
      description: Lists device registries.
      operationId: cloudiot.projects.locations.registries.list
      parameters:
        - description: >-
            The maximum number of registries to return in the response. If this
            value

            is zero, the service will select a default size. A call may return fewer

            objects than requested. A non-empty `next_page_token` in the response

            indicates that more data is available.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: >-
            The value returned by the last `ListDeviceRegistriesResponse`;
            indicates

            that this is a continuation of a prior `ListDeviceRegistries` call and

            the system should return the next page of data.
          in: query
          name: pageToken
          schema:
            type: string
        - description: |-
            The project and cloud region path. For example,
            `projects/example-project/locations/us-central1`.
          in: path
          name: parent
          required: true
          x-reservedExpansion: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ListDeviceRegistriesResponse"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloudiot
          Oauth2c:
            - https://www.googleapis.com/auth/cloudiot
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/upload_protocol"
    post:
      description: Creates a device registry that contains devices.
      operationId: cloudiot.projects.locations.registries.create
      parameters:
        - description: >-
            The project and cloud region where this device registry must be
            created.

            For example, `projects/example-project/locations/us-central1`.
          in: path
          name: parent
          required: true
          x-reservedExpansion: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeviceRegistry"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/DeviceRegistry"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloudiot
          Oauth2c:
            - https://www.googleapis.com/auth/cloudiot
      tags:
        - projects
  "/v1/{parent}:bindDeviceToGateway":
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/upload_protocol"
    post:
      description: Associates the device with the gateway.
      operationId: cloudiot.projects.locations.registries.bindDeviceToGateway
      parameters:
        - description: >-
            The name of the registry. For example,

            `projects/example-project/locations/us-central1/registries/my-registry`.
          in: path
          name: parent
          required: true
          x-reservedExpansion: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BindDeviceToGatewayRequest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/BindDeviceToGatewayResponse"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloudiot
          Oauth2c:
            - https://www.googleapis.com/auth/cloudiot
      tags:
        - projects
  "/v1/{parent}:unbindDeviceFromGateway":
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/upload_protocol"
    post:
      description: Deletes the association between the device and the gateway.
      operationId: cloudiot.projects.locations.registries.unbindDeviceFromGateway
      parameters:
        - description: >-
            The name of the registry. For example,

            `projects/example-project/locations/us-central1/registries/my-registry`.
          in: path
          name: parent
          required: true
          x-reservedExpansion: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UnbindDeviceFromGatewayRequest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/UnbindDeviceFromGatewayResponse"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloudiot
          Oauth2c:
            - https://www.googleapis.com/auth/cloudiot
      tags:
        - projects
  "/v1/{resource}:getIamPolicy":
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/upload_protocol"
    post:
      description: >-
        Gets the access control policy for a resource.

        Returns an empty policy if the resource exists and does not have a policy

        set.
      operationId: cloudiot.projects.locations.registries.groups.getIamPolicy
      parameters:
        - description: >-
            REQUIRED: The resource for which the policy is being requested.

            See the operation documentation for the appropriate value for this field.
          in: path
          name: resource
          required: true
          x-reservedExpansion: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GetIamPolicyRequest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Policy"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloudiot
          Oauth2c:
            - https://www.googleapis.com/auth/cloudiot
      tags:
        - projects
  "/v1/{resource}:setIamPolicy":
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/upload_protocol"
    post:
      description: |-
        Sets the access control policy on the specified resource. Replaces any
        existing policy.
      operationId: cloudiot.projects.locations.registries.groups.setIamPolicy
      parameters:
        - description: >-
            REQUIRED: The resource for which the policy is being specified.

            See the operation documentation for the appropriate value for this field.
          in: path
          name: resource
          required: true
          x-reservedExpansion: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SetIamPolicyRequest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Policy"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloudiot
          Oauth2c:
            - https://www.googleapis.com/auth/cloudiot
      tags:
        - projects
  "/v1/{resource}:testIamPermissions":
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/upload_protocol"
    post:
      description: |-
        Returns permissions that a caller has on the specified resource.
        If the resource does not exist, this will return an empty set of
        permissions, not a NOT_FOUND error.
      operationId: cloudiot.projects.locations.registries.groups.testIamPermissions
      parameters:
        - description: >-
            REQUIRED: The resource for which the policy detail is being
            requested.

            See the operation documentation for the appropriate value for this field.
          in: path
          name: resource
          required: true
          x-reservedExpansion: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TestIamPermissionsRequest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/TestIamPermissionsResponse"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloudiot
          Oauth2c:
            - https://www.googleapis.com/auth/cloudiot
      tags:
        - projects
servers:
  - url: https://cloudiot.googleapis.com/
components:
  parameters:
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
          - media
          - proto
        default: json
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    key:
      description: API key. Your API key identifies your project and provides you with API
        access, quota, and reports. Required unless you provide an OAuth 2.0
        token.
      in: query
      name: key
      schema:
        type: string
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
        default: true
    quotaUser:
      description: Available to use for quota purposes for server-side applications. Can be
        any arbitrary string assigned to a user, but should not exceed 40
        characters.
      in: query
      name: quotaUser
      schema:
        type: string
    uploadType:
      description: Legacy upload protocol for media (e.g. "media", "multipart").
      in: query
      name: uploadType
      schema:
        type: string
    upload_protocol:
      description: Upload protocol for media (e.g. "raw", "multipart").
      in: query
      name: upload_protocol
      schema:
        type: string
    _.xgafv:
      description: V1 error format.
      in: query
      name: $.xgafv
      schema:
        type: string
        enum:
          - "1"
          - "2"
  requestBodies:
    Device:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Device"
  securitySchemes:
    Oauth2:
      description: Oauth 2.0 implicit authentication
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes:
            https://www.googleapis.com/auth/cloud-platform: View and manage your data across Google Cloud Platform services
            https://www.googleapis.com/auth/cloudiot: Register and manage devices in the Google Cloud IoT service
    Oauth2c:
      description: Oauth 2.0 accessCode authentication
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          tokenUrl: https://accounts.google.com/o/oauth2/token
          scopes:
            https://www.googleapis.com/auth/cloud-platform: View and manage your data across Google Cloud Platform services
            https://www.googleapis.com/auth/cloudiot: Register and manage devices in the Google Cloud IoT service
  schemas:
    BindDeviceToGatewayRequest:
      description: Request for `BindDeviceToGateway`.
      properties:
        deviceId:
          description: >-
            The device to associate with the specified gateway. The value of

            `device_id` can be either the device numeric ID or the user-defined device

            identifier.
          type: string
        gatewayId:
          description: |-
            The value of `gateway_id` can be either the device numeric ID or the
            user-defined device identifier.
          type: string
      type: object
    BindDeviceToGatewayResponse:
      description: Response for `BindDeviceToGateway`.
      properties: {}
      type: object
    Binding:
      description: Associates `members` with a `role`.
      properties:
        condition:
          $ref: "#/components/schemas/Expr"
        members:
          description: >+
            Specifies the identities requesting access for a Cloud Platform
            resource.

            `members` can have the following values:


            * `allUsers`: A special identifier that represents anyone who is
               on the internet; with or without a Google account.

            * `allAuthenticatedUsers`: A special identifier that represents anyone
               who is authenticated with a Google account or a service account.

            * `user:{emailid}`: An email address that represents a specific Google
               account. For example, `alice@example.com` .


            * `serviceAccount:{emailid}`: An email address that represents a service
               account. For example, `my-other-app@appspot.gserviceaccount.com`.

            * `group:{emailid}`: An email address that represents a Google group.
               For example, `admins@example.com`.


            * `domain:{domain}`: The G Suite domain (primary) that represents all the
               users of that domain. For example, `google.com` or `example.com`.

          items:
            type: string
          type: array
        role:
          description: |-
            Role that is assigned to `members`.
            For example, `roles/viewer`, `roles/editor`, or `roles/owner`.
          type: string
      type: object
    Device:
      description: The device resource.
      properties:
        blocked:
          description: >-
            If a device is blocked, connections or requests from this device
            will fail.

            Can be used to temporarily prevent the device from connecting if, for

            example, the sensor is generating bad data and needs maintenance.
          type: boolean
        config:
          $ref: "#/components/schemas/DeviceConfig"
        credentials:
          description: >-
            The credentials used to authenticate this device. To allow
            credential

            rotation without interruption, multiple device credentials can be bound to

            this device. No more than 3 credentials can be bound to a single device at

            a time. When new credentials are added to a device, they are verified

            against the registry credentials. For details, see the description of the

            `DeviceRegistry.credentials` field.
          items:
            $ref: "#/components/schemas/DeviceCredential"
          type: array
        gatewayConfig:
          $ref: "#/components/schemas/GatewayConfig"
        id:
          description: |-
            The user-defined device identifier. The device ID must be unique
            within a device registry.
          type: string
        lastConfigAckTime:
          description: >-
            [Output only] The last time a cloud-to-device config version
            acknowledgment

            was received from the device. This field is only for configurations

            sent through MQTT.
          format: google-datetime
          type: string
        lastConfigSendTime:
          description: >-
            [Output only] The last time a cloud-to-device config version was
            sent to

            the device.
          format: google-datetime
          type: string
        lastErrorStatus:
          $ref: "#/components/schemas/Status"
        lastErrorTime:
          description: >-
            [Output only] The time the most recent error occurred, such as a
            failure to

            publish to Cloud Pub/Sub. This field is the timestamp of

            'last_error_status'.
          format: google-datetime
          type: string
        lastEventTime:
          description: >-
            [Output only] The last time a telemetry event was received.
            Timestamps are

            periodically collected and written to storage; they may be stale by a few

            minutes.
          format: google-datetime
          type: string
        lastHeartbeatTime:
          description: >-
            [Output only] The last time an MQTT `PINGREQ` was received. This
            field

            applies only to devices connecting through MQTT. MQTT clients usually only

            send `PINGREQ` messages if the connection is idle, and no other messages

            have been sent. Timestamps are periodically collected and written to

            storage; they may be stale by a few minutes.
          format: google-datetime
          type: string
        lastStateTime:
          description: >-
            [Output only] The last time a state event was received. Timestamps
            are

            periodically collected and written to storage; they may be stale by a few

            minutes.
          format: google-datetime
          type: string
        logLevel:
          description: |-
            **Beta Feature**

            The logging verbosity for device activity. If unspecified,
            DeviceRegistry.log_level will be used.
          enum:
            - LOG_LEVEL_UNSPECIFIED
            - NONE
            - ERROR
            - INFO
            - DEBUG
          type: string
        metadata:
          additionalProperties:
            type: string
          description: >-
            The metadata key-value pairs assigned to the device. This metadata
            is not

            interpreted or indexed by Cloud IoT Core. It can be used to add contextual

            information for the device.


            Keys must conform to the regular expression a-zA-Z+ and

            be less than 128 bytes in length.


            Values are free-form strings. Each value must be less than or equal to 32

            KB in size.


            The total size of all keys and values must be less than 256 KB, and the

            maximum number of key-value pairs is 500.
          type: object
        name:
          description: >-
            The resource path name. For example,

            `projects/p1/locations/us-central1/registries/registry0/devices/dev0` or

            `projects/p1/locations/us-central1/registries/registry0/devices/{num_id}`.

            When `name` is populated as a response from the service, it always ends

            in the device numeric ID.
          type: string
        numId:
          description: >-
            [Output only] A server-defined unique numeric ID for the device.
            This is a

            more compact way to identify devices, and it is globally unique.
          format: uint64
          type: string
        state:
          $ref: "#/components/schemas/DeviceState"
      type: object
    DeviceConfig:
      description: The device configuration. Eventually delivered to devices.
      properties:
        binaryData:
          description: The device configuration data.
          format: byte
          type: string
        cloudUpdateTime:
          description: >-
            [Output only] The time at which this configuration version was
            updated in

            Cloud IoT Core. This timestamp is set by the server.
          format: google-datetime
          type: string
        deviceAckTime:
          description: >-
            [Output only] The time at which Cloud IoT Core received the

            acknowledgment from the device, indicating that the device has received

            this configuration version. If this field is not present, the device has

            not yet acknowledged that it received this version. Note that when

            the config was sent to the device, many config versions may have been

            available in Cloud IoT Core while the device was disconnected, and on

            connection, only the latest version is sent to the device. Some

            versions may never be sent to the device, and therefore are never

            acknowledged. This timestamp is set by Cloud IoT Core.
          format: google-datetime
          type: string
        version:
          description: >-
            [Output only] The version of this update. The version number is
            assigned by

            the server, and is always greater than 0 after device creation. The

            version must be 0 on the `CreateDevice` request if a `config` is

            specified; the response of `CreateDevice` will always have a value of 1.
          format: int64
          type: string
      type: object
    DeviceCredential:
      description: A server-stored device credential used for authentication.
      properties:
        expirationTime:
          description: >-
            [Optional] The time at which this credential becomes invalid. This

            credential will be ignored for new client authentication requests after

            this timestamp; however, it will not be automatically deleted.
          format: google-datetime
          type: string
        publicKey:
          $ref: "#/components/schemas/PublicKeyCredential"
      type: object
    DeviceRegistry:
      description: A container for a group of devices.
      properties:
        credentials:
          description: >-
            The credentials used to verify the device credentials. No more than
            10

            credentials can be bound to a single registry at a time. The verification

            process occurs at the time of device creation or update. If this field is

            empty, no verification is performed. Otherwise, the credentials of a newly

            created device or added credentials of an updated device should be signed

            with one of these registry credentials.


            Note, however, that existing devices will never be affected by

            modifications to this list of credentials: after a device has been

            successfully created in a registry, it should be able to connect even if

            its registry credentials are revoked, deleted, or modified.
          items:
            $ref: "#/components/schemas/RegistryCredential"
          type: array
        eventNotificationConfigs:
          description: >-
            The configuration for notification of telemetry events received from
            the

            device. All telemetry events that were successfully published by the

            device and acknowledged by Cloud IoT Core are guaranteed to be

            delivered to Cloud Pub/Sub. If multiple configurations match a message,

            only the first matching configuration is used. If you try to publish a

            device telemetry event using MQTT without specifying a Cloud Pub/Sub topic

            for the device's registry, the connection closes automatically. If you try

            to do so using an HTTP connection, an error is returned. Up to 10

            configurations may be provided.
          items:
            $ref: "#/components/schemas/EventNotificationConfig"
          type: array
        httpConfig:
          $ref: "#/components/schemas/HttpConfig"
        id:
          description: The identifier of this device registry. For example, `myRegistry`.
          type: string
        logLevel:
          description: >-
            **Beta Feature**


            The default logging verbosity for activity from devices in this registry.

            The verbosity level can be overridden by Device.log_level.
          enum:
            - LOG_LEVEL_UNSPECIFIED
            - NONE
            - ERROR
            - INFO
            - DEBUG
          type: string
        mqttConfig:
          $ref: "#/components/schemas/MqttConfig"
        name:
          description: >-
            The resource path name. For example,

            `projects/example-project/locations/us-central1/registries/my-registry`.
          type: string
        stateNotificationConfig:
          $ref: "#/components/schemas/StateNotificationConfig"
      type: object
    DeviceState:
      description: The device state, as reported by the device.
      properties:
        binaryData:
          description: The device state data.
          format: byte
          type: string
        updateTime:
          description: >-
            [Output only] The time at which this state version was updated in
            Cloud

            IoT Core.
          format: google-datetime
          type: string
      type: object
    Empty:
      description: >-
        A generic empty message that you can re-use to avoid defining duplicated

        empty messages in your APIs. A typical example is to use it as the request

        or the response type of an API method. For instance:

            service Foo {
              rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);
            }

        The JSON representation for `Empty` is empty JSON object `{}`.
      properties: {}
      type: object
    EventNotificationConfig:
      description: The configuration for forwarding telemetry events.
      properties:
        pubsubTopicName:
          description: |-
            A Cloud Pub/Sub topic name. For example,
            `projects/myProject/topics/deviceEvents`.
          type: string
        subfolderMatches:
          description: >-
            If the subfolder name matches this string exactly, this
            configuration will

            be used. The string must not include the leading '/' character. If empty,

            all strings are matched. This field is used only for telemetry events;

            subfolders are not supported for state changes.
          type: string
      type: object
    Expr:
      description: |-
        Represents an expression text. Example:

            title: "User account presence"
            description: "Determines whether the request has a user account"
            expression: "size(request.user) > 0"
      properties:
        description:
          description: >-
            An optional description of the expression. This is a longer text
            which

            describes the expression, e.g. when hovered over it in a UI.
          type: string
        expression:
          description: |-
            Textual representation of an expression in
            Common Expression Language syntax.

            The application context of the containing message determines which
            well-known feature set of CEL is supported.
          type: string
        location:
          description: >-
            An optional string indicating the location of the expression for
            error

            reporting, e.g. a file name and a position in the file.
          type: string
        title:
          description: |-
            An optional title for the expression, i.e. a short string describing
            its purpose. This can be used e.g. in UIs which allow to enter the
            expression.
          type: string
      type: object
    GatewayConfig:
      description: Gateway-related configuration and state.
      properties:
        gatewayAuthMethod:
          description: |-
            Indicates how to authorize and/or authenticate devices to access the
            gateway.
          enum:
            - GATEWAY_AUTH_METHOD_UNSPECIFIED
            - ASSOCIATION_ONLY
            - DEVICE_AUTH_TOKEN_ONLY
            - ASSOCIATION_AND_DEVICE_AUTH_TOKEN
          type: string
        gatewayType:
          description: Indicates whether the device is a gateway.
          enum:
            - GATEWAY_TYPE_UNSPECIFIED
            - GATEWAY
            - NON_GATEWAY
          type: string
        lastAccessedGatewayId:
          description: "[Output only] The ID of the gateway the device accessed most
            recently."
          type: string
        lastAccessedGatewayTime:
          description: >-
            [Output only] The most recent time at which the device accessed the
            gateway

            specified in `last_accessed_gateway`.
          format: google-datetime
          type: string
      type: object
    GetIamPolicyRequest:
      description: Request message for `GetIamPolicy` method.
      properties:
        options:
          $ref: "#/components/schemas/GetPolicyOptions"
      type: object
    GetPolicyOptions:
      description: Encapsulates settings provided to GetIamPolicy.
      properties:
        requestedPolicyVersion:
          description: >-
            Optional. The policy format version to be returned.


            Valid values are 0, 1, and 3. Requests specifying an invalid value will be

            rejected.


            Requests for policies with any conditional bindings must specify version 3.

            Policies without any conditional bindings may specify any valid value or

            leave the field unset.
          format: int32
          type: integer
      type: object
    HttpConfig:
      description: The configuration of the HTTP bridge for a device registry.
      properties:
        httpEnabledState:
          description: >-
            If enabled, allows devices to use DeviceService via the HTTP
            protocol.

            Otherwise, any requests to DeviceService will fail for this registry.
          enum:
            - HTTP_STATE_UNSPECIFIED
            - HTTP_ENABLED
            - HTTP_DISABLED
          type: string
      type: object
    ListDeviceConfigVersionsResponse:
      description: Response for `ListDeviceConfigVersions`.
      properties:
        deviceConfigs:
          description: >-
            The device configuration for the last few versions. Versions are
            listed

            in decreasing order, starting from the most recent one.
          items:
            $ref: "#/components/schemas/DeviceConfig"
          type: array
      type: object
    ListDeviceRegistriesResponse:
      description: Response for `ListDeviceRegistries`.
      properties:
        deviceRegistries:
          description: The registries that matched the query.
          items:
            $ref: "#/components/schemas/DeviceRegistry"
          type: array
        nextPageToken:
          description: >-
            If not empty, indicates that there may be more registries that match
            the

            request; this value should be passed in a new

            `ListDeviceRegistriesRequest`.
          type: string
      type: object
    ListDeviceStatesResponse:
      description: Response for `ListDeviceStates`.
      properties:
        deviceStates:
          description: >-
            The last few device states. States are listed in descending order of
            server

            update time, starting from the most recent one.
          items:
            $ref: "#/components/schemas/DeviceState"
          type: array
      type: object
    ListDevicesResponse:
      description: Response for `ListDevices`.
      properties:
        devices:
          description: The devices that match the request.
          items:
            $ref: "#/components/schemas/Device"
          type: array
        nextPageToken:
          description: >-
            If not empty, indicates that there may be more devices that match
            the

            request; this value should be passed in a new `ListDevicesRequest`.
          type: string
      type: object
    ModifyCloudToDeviceConfigRequest:
      description: Request for `ModifyCloudToDeviceConfig`.
      properties:
        binaryData:
          description: The configuration data for the device.
          format: byte
          type: string
        versionToUpdate:
          description: >-
            The version number to update. If this value is zero, it will not
            check the

            version number of the server and will always update the current version;

            otherwise, this update will fail if the version number found on the server

            does not match this version number. This is used to support multiple

            simultaneous updates without losing data.
          format: int64
          type: string
      type: object
    MqttConfig:
      description: The configuration of MQTT for a device registry.
      properties:
        mqttEnabledState:
          description: >-
            If enabled, allows connections using the MQTT protocol. Otherwise,
            MQTT

            connections to this registry will fail.
          enum:
            - MQTT_STATE_UNSPECIFIED
            - MQTT_ENABLED
            - MQTT_DISABLED
          type: string
      type: object
    Policy:
      description: >-
        Defines an Identity and Access Management (IAM) policy. It is used to

        specify access control policies for Cloud Platform resources.



        A `Policy` consists of a list of `bindings`. A `binding` binds a list of

        `members` to a `role`, where the members can be user accounts, Google groups,

        Google domains, and service accounts. A `role` is a named list of permissions

        defined by IAM.


        **JSON Example**

            {
              "bindings": [
                {
                  "role": "roles/owner",
                  "members": [
                    "user:mike@example.com",
                    "group:admins@example.com",
                    "domain:google.com",
                    "serviceAccount:my-other-app@appspot.gserviceaccount.com"
                  ]
                },
                {
                  "role": "roles/viewer",
                  "members": ["user:sean@example.com"]
                }
              ]
            }

        **YAML Example**

            bindings:
            - members:
              - user:mike@example.com
              - group:admins@example.com
              - domain:google.com
              - serviceAccount:my-other-app@appspot.gserviceaccount.com
              role: roles/owner
            - members:
              - user:sean@example.com
              role: roles/viewer


        For a description of IAM and its features, see the

        [IAM developer's guide](https://cloud.google.com/iam/docs).
      properties:
        bindings:
          description: |-
            Associates a list of `members` to a `role`.
            `bindings` with no members will result in an error.
          items:
            $ref: "#/components/schemas/Binding"
          type: array
        etag:
          description: >-
            `etag` is used for optimistic concurrency control as a way to help

            prevent simultaneous updates of a policy from overwriting each other.

            It is strongly suggested that systems make use of the `etag` in the

            read-modify-write cycle to perform policy updates in order to avoid race

            conditions: An `etag` is returned in the response to `getIamPolicy`, and

            systems are expected to put that etag in the request to `setIamPolicy` to

            ensure that their change will be applied to the same version of the policy.


            If no `etag` is provided in the call to `setIamPolicy`, then the existing

            policy is overwritten.
          format: byte
          type: string
        version:
          description: >-
            Specifies the format of the policy.


            Valid values are 0, 1, and 3. Requests specifying an invalid value will be

            rejected.


            Policies with any conditional bindings must specify version 3. Policies

            without any conditional bindings may specify any valid value or leave the

            field unset.
          format: int32
          type: integer
      type: object
    PublicKeyCertificate:
      description: A public key certificate format and data.
      properties:
        certificate:
          description: The certificate data.
          type: string
        format:
          description: The certificate format.
          enum:
            - UNSPECIFIED_PUBLIC_KEY_CERTIFICATE_FORMAT
            - X509_CERTIFICATE_PEM
          type: string
        x509Details:
          $ref: "#/components/schemas/X509CertificateDetails"
      type: object
    PublicKeyCredential:
      description: A public key format and data.
      properties:
        format:
          description: The format of the key.
          enum:
            - UNSPECIFIED_PUBLIC_KEY_FORMAT
            - RSA_PEM
            - RSA_X509_PEM
            - ES256_PEM
            - ES256_X509_PEM
          type: string
        key:
          description: The key data.
          type: string
      type: object
    RegistryCredential:
      description: A server-stored registry credential used to validate device credentials.
      properties:
        publicKeyCertificate:
          $ref: "#/components/schemas/PublicKeyCertificate"
      type: object
    SendCommandToDeviceRequest:
      description: Request for `SendCommandToDevice`.
      properties:
        binaryData:
          description: The command data to send to the device.
          format: byte
          type: string
        subfolder:
          description: >-
            Optional subfolder for the command. If empty, the command will be
            delivered

            to the /devices/{device-id}/commands topic, otherwise it will be delivered

            to the /devices/{device-id}/commands/{subfolder} topic. Multi-level

            subfolders are allowed. This field must not have more than 256 characters,

            and must not contain any MQTT wildcards ("+" or "#") or null characters.
          type: string
      type: object
    SendCommandToDeviceResponse:
      description: Response for `SendCommandToDevice`.
      properties: {}
      type: object
    SetIamPolicyRequest:
      description: Request message for `SetIamPolicy` method.
      properties:
        policy:
          $ref: "#/components/schemas/Policy"
      type: object
    StateNotificationConfig:
      description: The configuration for notification of new states received from the
        device.
      properties:
        pubsubTopicName:
          description: |-
            A Cloud Pub/Sub topic name. For example,
            `projects/myProject/topics/deviceEvents`.
          type: string
      type: object
    Status:
      description: >-
        The `Status` type defines a logical error model that is suitable for

        different programming environments, including REST APIs and RPC APIs. It is

        used by [gRPC](https://github.com/grpc). Each `Status` message contains

        three pieces of data: error code, error message, and error details.


        You can find out more about this error model and how to work with it in the

        [API Design Guide](https://cloud.google.com/apis/design/errors).
      properties:
        code:
          description: The status code, which should be an enum value of google.rpc.Code.
          format: int32
          type: integer
        details:
          description: >-
            A list of messages that carry the error details.  There is a common
            set of

            message types for APIs to use.
          items:
            additionalProperties:
              description: Properties of the object. Contains field @type with type URL.
            type: object
          type: array
        message:
          description: |-
            A developer-facing error message, which should be in English. Any
            user-facing error message should be localized and sent in the
            google.rpc.Status.details field, or localized by the client.
          type: string
      type: object
    TestIamPermissionsRequest:
      description: Request message for `TestIamPermissions` method.
      properties:
        permissions:
          description: >-
            The set of permissions to check for the `resource`. Permissions with

            wildcards (such as '*' or 'storage.*') are not allowed. For more

            information see

            [IAM Overview](https://cloud.google.com/iam/docs/overview#permissions).
          items:
            type: string
          type: array
      type: object
    TestIamPermissionsResponse:
      description: Response message for `TestIamPermissions` method.
      properties:
        permissions:
          description: |-
            A subset of `TestPermissionsRequest.permissions` that the caller is
            allowed.
          items:
            type: string
          type: array
      type: object
    UnbindDeviceFromGatewayRequest:
      description: Request for `UnbindDeviceFromGateway`.
      properties:
        deviceId:
          description: >-
            The device to disassociate from the specified gateway. The value of

            `device_id` can be either the device numeric ID or the user-defined device

            identifier.
          type: string
        gatewayId:
          description: |-
            The value of `gateway_id` can be either the device numeric ID or the
            user-defined device identifier.
          type: string
      type: object
    UnbindDeviceFromGatewayResponse:
      description: Response for `UnbindDeviceFromGateway`.
      properties: {}
      type: object
    X509CertificateDetails:
      description: Details of an X.509 certificate. For informational purposes only.
      properties:
        expiryTime:
          description: The time the certificate becomes invalid.
          format: google-datetime
          type: string
        issuer:
          description: The entity that signed the certificate.
          type: string
        publicKeyType:
          description: The type of public key in the certificate.
          type: string
        signatureAlgorithm:
          description: The algorithm used to sign the certificate.
          type: string
        startTime:
          description: The time the certificate becomes valid.
          format: google-datetime
          type: string
        subject:
          description: The entity the certificate and public key belong to.
          type: string
      type: object
