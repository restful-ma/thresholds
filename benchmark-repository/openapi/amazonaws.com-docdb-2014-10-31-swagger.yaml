openapi: 3.0.0
info:
  version: 2014-10-31
  x-release: v4
  title: Amazon DocumentDB with MongoDB compatibility
  description: Amazon DocumentDB API documentation
  x-logo:
    url: https://twitter.com/awscloud/profile_image?size=original
    backgroundColor: "#FFFFFF"
  termsOfService: https://aws.amazon.com/service-terms/
  contact:
    name: Mike Ralphson
    email: mike.ralphson@gmail.com
    url: https://github.com/mermade/aws2openapi
    x-twitter: PermittedSoc
  license:
    name: Apache 2.0 License
    url: http://www.apache.org/licenses/
  x-providerName: amazonaws.com
  x-serviceName: docdb
  x-origin:
    - contentType: application/json
      url: https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/docdb-2014-10-31.normal.json
      converter:
        url: https://github.com/mermade/aws2openapi
        version: 1.0.0
      x-apisguru-direct: true
  x-apiClientRegistration:
    url: https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct
  x-apisguru-categories:
    - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: https://docs.aws.amazon.com/rds/
x-hasEquivalentPaths: true
security:
  - hmac: []
paths:
  /#Action=AddTagsToResource:
    get:
      x-aws-operation-name: AddTagsToResource
      operationId: GET AddTagsToResource
      description: Adds metadata tags to an Amazon DocumentDB resource. You can use these
        tags with cost allocation reporting to track costs that are associated
        with Amazon DocumentDB resources. or in a <code>Condition</code>
        statement in an AWS Identity and Access Management (IAM) policy for
        Amazon DocumentDB.
      responses:
        "200":
          description: Success
        "480":
          description: DBInstanceNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBInstanceNotFoundFault"
        "481":
          description: DBSnapshotNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBSnapshotNotFoundFault"
        "482":
          description: DBClusterNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBClusterNotFoundFault"
      parameters:
        - name: ResourceName
          in: query
          required: true
          description: The Amazon DocumentDB resource that the tags are added to. This
            value is an Amazon Resource Name (ARN).
          schema:
            type: string
        - name: Tags
          in: query
          required: true
          description: "The tags to be assigned to the Amazon DocumentDB resource. "
          schema:
            type: array
            items:
              type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - AddTagsToResource
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2014-10-31
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: AddTagsToResource
      operationId: POST AddTagsToResource
      description: Adds metadata tags to an Amazon DocumentDB resource. You can use these
        tags with cost allocation reporting to track costs that are associated
        with Amazon DocumentDB resources. or in a <code>Condition</code>
        statement in an AWS Identity and Access Management (IAM) policy for
        Amazon DocumentDB.
      responses:
        "200":
          description: Success
        "480":
          description: DBInstanceNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBInstanceNotFoundFault"
        "481":
          description: DBSnapshotNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBSnapshotNotFoundFault"
        "482":
          description: DBClusterNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBClusterNotFoundFault"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - AddTagsToResource
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2014-10-31
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                ResourceName:
                  description: The Amazon DocumentDB resource that the tags are added to.
                    This value is an Amazon Resource Name (ARN).
                  type: string
                Tags:
                  description: "The tags to be assigned to the Amazon DocumentDB resource. "
                  type: array
                  items:
                    type: string
              required:
                - ResourceName
                - Tags
  /#Action=ApplyPendingMaintenanceAction:
    get:
      x-aws-operation-name: ApplyPendingMaintenanceAction
      operationId: GET ApplyPendingMaintenanceAction
      description: Applies a pending maintenance action to a resource (for example, to a DB
        instance).
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ApplyPendingMaintenanceActionResult"
        "480":
          description: ResourceNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundFault"
        "481":
          description: InvalidDBClusterStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidDBClusterStateFault"
        "482":
          description: InvalidDBInstanceStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidDBInstanceStateFault"
      parameters:
        - name: ResourceIdentifier
          in: query
          required: true
          description: The Amazon Resource Name (ARN) of the resource that the pending
            maintenance action applies to.
          schema:
            type: string
        - name: ApplyAction
          in: query
          required: true
          description: "<p>The pending maintenance action to apply to this resource.</p>
            <p>Valid values: <code>system-update</code>, <code>db-upgrade</code>
            </p>"
          schema:
            type: string
        - name: OptInType
          in: query
          required: true
          description: <p>A value that specifies the type of opt-in request or undoes an
            opt-in request. An opt-in request of type <code>immediate</code>
            can't be undone.</p> <p>Valid values:</p> <ul> <li> <p>
            <code>immediate</code> - Apply the maintenance action
            immediately.</p> </li> <li> <p> <code>next-maintenance</code> -
            Apply the maintenance action during the next maintenance window for
            the resource.</p> </li> <li> <p> <code>undo-opt-in</code> - Cancel
            any existing <code>next-maintenance</code> opt-in requests.</p>
            </li> </ul>
          schema:
            type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - ApplyPendingMaintenanceAction
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2014-10-31
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: ApplyPendingMaintenanceAction
      operationId: POST ApplyPendingMaintenanceAction
      description: Applies a pending maintenance action to a resource (for example, to a DB
        instance).
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ApplyPendingMaintenanceActionResult"
        "480":
          description: ResourceNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundFault"
        "481":
          description: InvalidDBClusterStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidDBClusterStateFault"
        "482":
          description: InvalidDBInstanceStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidDBInstanceStateFault"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - ApplyPendingMaintenanceAction
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2014-10-31
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                ResourceIdentifier:
                  description: The Amazon Resource Name (ARN) of the resource that the
                    pending maintenance action applies to.
                  type: string
                ApplyAction:
                  description: "<p>The pending maintenance action to apply to this
                    resource.</p> <p>Valid values: <code>system-update</code>,
                    <code>db-upgrade</code> </p>"
                  type: string
                OptInType:
                  description: <p>A value that specifies the type of opt-in request or
                    undoes an opt-in request. An opt-in request of type
                    <code>immediate</code> can't be undone.</p> <p>Valid
                    values:</p> <ul> <li> <p> <code>immediate</code> - Apply the
                    maintenance action immediately.</p> </li> <li> <p>
                    <code>next-maintenance</code> - Apply the maintenance action
                    during the next maintenance window for the resource.</p>
                    </li> <li> <p> <code>undo-opt-in</code> - Cancel any
                    existing <code>next-maintenance</code> opt-in requests.</p>
                    </li> </ul>
                  type: string
              required:
                - ResourceIdentifier
                - ApplyAction
                - OptInType
  /#Action=CopyDBClusterParameterGroup:
    get:
      x-aws-operation-name: CopyDBClusterParameterGroup
      operationId: GET CopyDBClusterParameterGroup
      description: Copies the specified DB cluster parameter group.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/CopyDBClusterParameterGroupResult"
        "480":
          description: DBParameterGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBParameterGroupNotFoundFault"
        "481":
          description: DBParameterGroupQuotaExceededFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBParameterGroupQuotaExceededFault"
        "482":
          description: DBParameterGroupAlreadyExistsFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBParameterGroupAlreadyExistsFault"
      parameters:
        - name: SourceDBClusterParameterGroupIdentifier
          in: query
          required: true
          description: <p>The identifier or Amazon Resource Name (ARN) for the source DB
            cluster parameter group.</p> <p>Constraints:</p> <ul> <li> <p>Must
            specify a valid DB cluster parameter group.</p> </li> <li> <p>If the
            source DB cluster parameter group is in the same AWS Region as the
            copy, specify a valid DB parameter group identifier; for example,
            <code>my-db-cluster-param-group</code>, or a valid ARN.</p> </li>
            <li> <p>If the source DB parameter group is in a different AWS
            Region than the copy, specify a valid DB cluster parameter group
            ARN; for example,
            <code>arn:aws:rds:us-east-1:123456789012:cluster-pg:custom-cluster-group1</code>.</p>
            </li> </ul>
          schema:
            type: string
        - name: TargetDBClusterParameterGroupIdentifier
          in: query
          required: true
          description: "<p>The identifier for the copied DB cluster parameter group.</p>
            <p>Constraints:</p> <ul> <li> <p>Cannot be null, empty, or
            blank.</p> </li> <li> <p>Must contain from 1 to 255 letters,
            numbers, or hyphens.</p> </li> <li> <p>The first character must be a
            letter.</p> </li> <li> <p>Cannot end with a hyphen or contain two
            consecutive hyphens.</p> </li> </ul> <p>Example:
            <code>my-cluster-param-group1</code> </p>"
          schema:
            type: string
        - name: TargetDBClusterParameterGroupDescription
          in: query
          required: true
          description: A description for the copied DB cluster parameter group.
          schema:
            type: string
        - name: Tags
          in: query
          required: false
          description: The tags that are to be assigned to the parameter group.
          schema:
            type: array
            items:
              type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - CopyDBClusterParameterGroup
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2014-10-31
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: CopyDBClusterParameterGroup
      operationId: POST CopyDBClusterParameterGroup
      description: Copies the specified DB cluster parameter group.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/CopyDBClusterParameterGroupResult"
        "480":
          description: DBParameterGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBParameterGroupNotFoundFault"
        "481":
          description: DBParameterGroupQuotaExceededFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBParameterGroupQuotaExceededFault"
        "482":
          description: DBParameterGroupAlreadyExistsFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBParameterGroupAlreadyExistsFault"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - CopyDBClusterParameterGroup
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2014-10-31
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                SourceDBClusterParameterGroupIdentifier:
                  description: <p>The identifier or Amazon Resource Name (ARN) for the
                    source DB cluster parameter group.</p> <p>Constraints:</p>
                    <ul> <li> <p>Must specify a valid DB cluster parameter
                    group.</p> </li> <li> <p>If the source DB cluster parameter
                    group is in the same AWS Region as the copy, specify a valid
                    DB parameter group identifier; for example,
                    <code>my-db-cluster-param-group</code>, or a valid ARN.</p>
                    </li> <li> <p>If the source DB parameter group is in a
                    different AWS Region than the copy, specify a valid DB
                    cluster parameter group ARN; for example,
                    <code>arn:aws:rds:us-east-1:123456789012:cluster-pg:custom-cluster-group1</code>.</p>
                    </li> </ul>
                  type: string
                TargetDBClusterParameterGroupIdentifier:
                  description: "<p>The identifier for the copied DB cluster parameter
                    group.</p> <p>Constraints:</p> <ul> <li> <p>Cannot be null,
                    empty, or blank.</p> </li> <li> <p>Must contain from 1 to
                    255 letters, numbers, or hyphens.</p> </li> <li> <p>The
                    first character must be a letter.</p> </li> <li> <p>Cannot
                    end with a hyphen or contain two consecutive hyphens.</p>
                    </li> </ul> <p>Example: <code>my-cluster-param-group1</code>
                    </p>"
                  type: string
                TargetDBClusterParameterGroupDescription:
                  description: A description for the copied DB cluster parameter group.
                  type: string
                Tags:
                  description: The tags that are to be assigned to the parameter group.
                  type: array
                  items:
                    type: string
              required:
                - SourceDBClusterParameterGroupIdentifier
                - TargetDBClusterParameterGroupIdentifier
                - TargetDBClusterParameterGroupDescription
  /#Action=CopyDBClusterSnapshot:
    get:
      x-aws-operation-name: CopyDBClusterSnapshot
      operationId: GET CopyDBClusterSnapshot
      description: <p>Copies a snapshot of a DB cluster.</p> <p>To copy a DB cluster
        snapshot from a shared manual DB cluster snapshot,
        <code>SourceDBClusterSnapshotIdentifier</code> must be the Amazon
        Resource Name (ARN) of the shared DB cluster snapshot.</p> <p>To cancel
        the copy operation after it is in progress, delete the target DB cluster
        snapshot identified by <code>TargetDBClusterSnapshotIdentifier</code>
        while that DB cluster snapshot is in the <i>copying</i> status.</p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/CopyDBClusterSnapshotResult"
        "480":
          description: DBClusterSnapshotAlreadyExistsFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBClusterSnapshotAlreadyExistsFault"
        "481":
          description: DBClusterSnapshotNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBClusterSnapshotNotFoundFault"
        "482":
          description: InvalidDBClusterStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidDBClusterStateFault"
        "483":
          description: InvalidDBClusterSnapshotStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidDBClusterSnapshotStateFault"
        "484":
          description: SnapshotQuotaExceededFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/SnapshotQuotaExceededFault"
        "485":
          description: KMSKeyNotAccessibleFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/KMSKeyNotAccessibleFault"
      parameters:
        - name: SourceDBClusterSnapshotIdentifier
          in: query
          required: true
          description: "<p>The identifier of the DB cluster snapshot to copy. This
            parameter is not case sensitive.</p> <p>You can't copy an encrypted,
            shared DB cluster snapshot from one AWS Region to another.</p>
            <p>Constraints:</p> <ul> <li> <p>Must specify a valid system
            snapshot in the \"available\" state.</p> </li> <li> <p>If the source
            snapshot is in the same AWS Region as the copy, specify a valid DB
            snapshot identifier.</p> </li> <li> <p>If the source snapshot is in
            a different AWS Region than the copy, specify a valid DB cluster
            snapshot ARN.</p> </li> </ul> <p>Example:
            <code>my-cluster-snapshot1</code> </p>"
          schema:
            type: string
        - name: TargetDBClusterSnapshotIdentifier
          in: query
          required: true
          description: "<p>The identifier of the new DB cluster snapshot to create from the
            source DB cluster snapshot. This parameter is not case
            sensitive.</p> <p>Constraints:</p> <ul> <li> <p>Must contain from 1
            to 63 letters, numbers, or hyphens.</p> </li> <li> <p>The first
            character must be a letter.</p> </li> <li> <p>Cannot end with a
            hyphen or contain two consecutive hyphens.</p> </li> </ul>
            <p>Example: <code>my-cluster-snapshot2</code> </p>"
          schema:
            type: string
        - name: KmsKeyId
          in: query
          required: false
          description: <p>The AWS KMS key ID for an encrypted DB cluster snapshot. The AWS
            KMS key ID is the Amazon Resource Name (ARN), AWS KMS key
            identifier, or the AWS KMS key alias for the AWS KMS encryption key.
            </p> <p>If you copy an encrypted DB cluster snapshot from your AWS
            account, you can specify a value for <code>KmsKeyId</code> to
            encrypt the copy with a new AWS KMS encryption key. If you don't
            specify a value for <code>KmsKeyId</code>, then the copy of the DB
            cluster snapshot is encrypted with the same AWS KMS key as the
            source DB cluster snapshot. </p> <p>If you copy an encrypted DB
            cluster snapshot that is shared from another AWS account, then you
            must specify a value for <code>KmsKeyId</code>. </p> <p>To copy an
            encrypted DB cluster snapshot to another AWS Region, set
            <code>KmsKeyId</code> to the AWS KMS key ID that you want to use to
            encrypt the copy of the DB cluster snapshot in the destination
            Region. AWS KMS encryption keys are specific to the AWS Region that
            they are created in, and you can't use encryption keys from one
            Region in another Region.</p> <p>If you copy an unencrypted DB
            cluster snapshot and specify a value for the <code>KmsKeyId</code>
            parameter, an error is returned.</p>
          schema:
            type: string
        - name: PreSignedUrl
          in: query
          required: false
          description: "<p>The URL that contains a Signature Version 4 signed request for
            the <code>CopyDBClusterSnapshot</code> API action in the AWS Region
            that contains the source DB cluster snapshot to copy. You must use
            the <code>PreSignedUrl</code> parameter when copying an encrypted DB
            cluster snapshot from another AWS Region.</p> <p>The presigned URL
            must be a valid request for the <code>CopyDBSClusterSnapshot</code>
            API action that can be executed in the source AWS Region that
            contains the encrypted DB cluster snapshot to be copied. The
            presigned URL request must contain the following parameter
            values:</p> <ul> <li> <p> <code>KmsKeyId</code> - The AWS KMS key
            identifier for the key to use to encrypt the copy of the DB cluster
            snapshot in the destination AWS Region. This is the same identifier
            for both the <code>CopyDBClusterSnapshot</code> action that is
            called in the destination AWS Region, and the action contained in
            the presigned URL.</p> </li> <li> <p> <code>DestinationRegion</code>
            - The name of the AWS Region that the DB cluster snapshot will be
            created in.</p> </li> <li> <p>
            <code>SourceDBClusterSnapshotIdentifier</code> - The DB cluster
            snapshot identifier for the encrypted DB cluster snapshot to be
            copied. This identifier must be in the Amazon Resource Name (ARN)
            format for the source AWS Region. For example, if you are copying an
            encrypted DB cluster snapshot from the us-west-2 AWS Region, then
            your <code>SourceDBClusterSnapshotIdentifier</code> looks like the
            following example:
            <code>arn:aws:rds:us-west-2:123456789012:cluster-snapshot:my-cluste\
            r-snapshot-20161115</code>.</p> </li> </ul>"
          schema:
            type: string
        - name: CopyTags
          in: query
          required: false
          description: Set to <code>true</code> to copy all tags from the source DB cluster
            snapshot to the target DB cluster snapshot, and otherwise
            <code>false</code>. The default is <code>false</code>.
          schema:
            type: boolean
        - name: Tags
          in: query
          required: false
          description: The tags to be assigned to the DB cluster snapshot.
          schema:
            type: array
            items:
              type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - CopyDBClusterSnapshot
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2014-10-31
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: CopyDBClusterSnapshot
      operationId: POST CopyDBClusterSnapshot
      description: <p>Copies a snapshot of a DB cluster.</p> <p>To copy a DB cluster
        snapshot from a shared manual DB cluster snapshot,
        <code>SourceDBClusterSnapshotIdentifier</code> must be the Amazon
        Resource Name (ARN) of the shared DB cluster snapshot.</p> <p>To cancel
        the copy operation after it is in progress, delete the target DB cluster
        snapshot identified by <code>TargetDBClusterSnapshotIdentifier</code>
        while that DB cluster snapshot is in the <i>copying</i> status.</p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/CopyDBClusterSnapshotResult"
        "480":
          description: DBClusterSnapshotAlreadyExistsFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBClusterSnapshotAlreadyExistsFault"
        "481":
          description: DBClusterSnapshotNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBClusterSnapshotNotFoundFault"
        "482":
          description: InvalidDBClusterStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidDBClusterStateFault"
        "483":
          description: InvalidDBClusterSnapshotStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidDBClusterSnapshotStateFault"
        "484":
          description: SnapshotQuotaExceededFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/SnapshotQuotaExceededFault"
        "485":
          description: KMSKeyNotAccessibleFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/KMSKeyNotAccessibleFault"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - CopyDBClusterSnapshot
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2014-10-31
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                SourceDBClusterSnapshotIdentifier:
                  description: "<p>The identifier of the DB cluster snapshot to copy. This
                    parameter is not case sensitive.</p> <p>You can't copy an
                    encrypted, shared DB cluster snapshot from one AWS Region to
                    another.</p> <p>Constraints:</p> <ul> <li> <p>Must specify a
                    valid system snapshot in the \"available\" state.</p> </li>
                    <li> <p>If the source snapshot is in the same AWS Region as
                    the copy, specify a valid DB snapshot identifier.</p> </li>
                    <li> <p>If the source snapshot is in a different AWS Region
                    than the copy, specify a valid DB cluster snapshot ARN.</p>
                    </li> </ul> <p>Example: <code>my-cluster-snapshot1</code>
                    </p>"
                  type: string
                TargetDBClusterSnapshotIdentifier:
                  description: "<p>The identifier of the new DB cluster snapshot to create
                    from the source DB cluster snapshot. This parameter is not
                    case sensitive.</p> <p>Constraints:</p> <ul> <li> <p>Must
                    contain from 1 to 63 letters, numbers, or hyphens.</p> </li>
                    <li> <p>The first character must be a letter.</p> </li> <li>
                    <p>Cannot end with a hyphen or contain two consecutive
                    hyphens.</p> </li> </ul> <p>Example:
                    <code>my-cluster-snapshot2</code> </p>"
                  type: string
                KmsKeyId:
                  description: <p>The AWS KMS key ID for an encrypted DB cluster snapshot.
                    The AWS KMS key ID is the Amazon Resource Name (ARN), AWS
                    KMS key identifier, or the AWS KMS key alias for the AWS KMS
                    encryption key. </p> <p>If you copy an encrypted DB cluster
                    snapshot from your AWS account, you can specify a value for
                    <code>KmsKeyId</code> to encrypt the copy with a new AWS KMS
                    encryption key. If you don't specify a value for
                    <code>KmsKeyId</code>, then the copy of the DB cluster
                    snapshot is encrypted with the same AWS KMS key as the
                    source DB cluster snapshot. </p> <p>If you copy an encrypted
                    DB cluster snapshot that is shared from another AWS account,
                    then you must specify a value for <code>KmsKeyId</code>.
                    </p> <p>To copy an encrypted DB cluster snapshot to another
                    AWS Region, set <code>KmsKeyId</code> to the AWS KMS key ID
                    that you want to use to encrypt the copy of the DB cluster
                    snapshot in the destination Region. AWS KMS encryption keys
                    are specific to the AWS Region that they are created in, and
                    you can't use encryption keys from one Region in another
                    Region.</p> <p>If you copy an unencrypted DB cluster
                    snapshot and specify a value for the <code>KmsKeyId</code>
                    parameter, an error is returned.</p>
                  type: string
                PreSignedUrl:
                  description: "<p>The URL that contains a Signature Version 4 signed
                    request for the <code>CopyDBClusterSnapshot</code> API
                    action in the AWS Region that contains the source DB cluster
                    snapshot to copy. You must use the <code>PreSignedUrl</code>
                    parameter when copying an encrypted DB cluster snapshot from
                    another AWS Region.</p> <p>The presigned URL must be a valid
                    request for the <code>CopyDBSClusterSnapshot</code> API
                    action that can be executed in the source AWS Region that
                    contains the encrypted DB cluster snapshot to be copied. The
                    presigned URL request must contain the following parameter
                    values:</p> <ul> <li> <p> <code>KmsKeyId</code> - The AWS
                    KMS key identifier for the key to use to encrypt the copy of
                    the DB cluster snapshot in the destination AWS Region. This
                    is the same identifier for both the
                    <code>CopyDBClusterSnapshot</code> action that is called in
                    the destination AWS Region, and the action contained in the
                    presigned URL.</p> </li> <li> <p>
                    <code>DestinationRegion</code> - The name of the AWS Region
                    that the DB cluster snapshot will be created in.</p> </li>
                    <li> <p> <code>SourceDBClusterSnapshotIdentifier</code> -
                    The DB cluster snapshot identifier for the encrypted DB
                    cluster snapshot to be copied. This identifier must be in
                    the Amazon Resource Name (ARN) format for the source AWS
                    Region. For example, if you are copying an encrypted DB
                    cluster snapshot from the us-west-2 AWS Region, then your
                    <code>SourceDBClusterSnapshotIdentifier</code> looks like
                    the following example:
                    <code>arn:aws:rds:us-west-2:123456789012:cluster-snapshot:m\
                    y-cluster-snapshot-20161115</code>.</p> </li> </ul>"
                  type: string
                CopyTags:
                  description: Set to <code>true</code> to copy all tags from the source DB
                    cluster snapshot to the target DB cluster snapshot, and
                    otherwise <code>false</code>. The default is
                    <code>false</code>.
                  type: boolean
                Tags:
                  description: The tags to be assigned to the DB cluster snapshot.
                  type: array
                  items:
                    type: string
              required:
                - SourceDBClusterSnapshotIdentifier
                - TargetDBClusterSnapshotIdentifier
  /#Action=CreateDBCluster:
    get:
      x-aws-operation-name: CreateDBCluster
      operationId: GET CreateDBCluster
      description: Creates a new Amazon DocumentDB DB cluster.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/CreateDBClusterResult"
        "480":
          description: DBClusterAlreadyExistsFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBClusterAlreadyExistsFault"
        "481":
          description: InsufficientStorageClusterCapacityFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InsufficientStorageClusterCapacityFault"
        "482":
          description: DBClusterQuotaExceededFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBClusterQuotaExceededFault"
        "483":
          description: StorageQuotaExceededFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/StorageQuotaExceededFault"
        "484":
          description: DBSubnetGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBSubnetGroupNotFoundFault"
        "485":
          description: InvalidVPCNetworkStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidVPCNetworkStateFault"
        "486":
          description: InvalidDBClusterStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidDBClusterStateFault"
        "487":
          description: InvalidDBSubnetGroupStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidDBSubnetGroupStateFault"
        "488":
          description: InvalidSubnet
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidSubnet"
        "489":
          description: InvalidDBInstanceStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidDBInstanceStateFault"
        "490":
          description: DBClusterParameterGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBClusterParameterGroupNotFoundFault"
        "491":
          description: KMSKeyNotAccessibleFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/KMSKeyNotAccessibleFault"
        "492":
          description: DBClusterNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBClusterNotFoundFault"
        "493":
          description: DBInstanceNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBInstanceNotFoundFault"
        "494":
          description: DBSubnetGroupDoesNotCoverEnoughAZs
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBSubnetGroupDoesNotCoverEnoughAZs"
      parameters:
        - name: AvailabilityZones
          in: query
          required: false
          description: A list of Amazon EC2 Availability Zones that instances in the DB
            cluster can be created in.
          schema:
            type: array
            items:
              type: string
        - name: BackupRetentionPeriod
          in: query
          required: false
          description: "<p>The number of days for which automated backups are retained. You
            must specify a minimum value of 1.</p> <p>Default: 1</p>
            <p>Constraints:</p> <ul> <li> <p>Must be a value from 1 to 35.</p>
            </li> </ul>"
          schema:
            type: integer
        - name: DBClusterIdentifier
          in: query
          required: true
          description: "<p>The DB cluster identifier. This parameter is stored as a
            lowercase string.</p> <p>Constraints:</p> <ul> <li> <p>Must contain
            from 1 to 63 letters, numbers, or hyphens.</p> </li> <li> <p>The
            first character must be a letter.</p> </li> <li> <p>Cannot end with
            a hyphen or contain two consecutive hyphens.</p> </li> </ul>
            <p>Example: <code>my-cluster</code> </p>"
          schema:
            type: string
        - name: DBClusterParameterGroupName
          in: query
          required: false
          description: " The name of the DB cluster parameter group to associate with this
            DB cluster."
          schema:
            type: string
        - name: VpcSecurityGroupIds
          in: query
          required: false
          description: A list of EC2 VPC security groups to associate with this DB cluster.
          schema:
            type: array
            items:
              type: string
        - name: DBSubnetGroupName
          in: query
          required: false
          description: "<p>A DB subnet group to associate with this DB cluster.</p>
            <p>Constraints: Must match the name of an existing
            <code>DBSubnetGroup</code>. Must not be default.</p> <p>Example:
            <code>mySubnetgroup</code> </p>"
          schema:
            type: string
        - name: Engine
          in: query
          required: true
          description: "<p>The name of the database engine to be used for this DB
            cluster.</p> <p>Valid values: <code>docdb</code> </p>"
          schema:
            type: string
        - name: EngineVersion
          in: query
          required: false
          description: The version number of the database engine to use.
          schema:
            type: string
        - name: Port
          in: query
          required: false
          description: The port number on which the instances in the DB cluster accept
            connections.
          schema:
            type: integer
        - name: MasterUsername
          in: query
          required: true
          description: <p>The name of the master user for the DB cluster.</p>
            <p>Constraints:</p> <ul> <li> <p>Must be from 1 to 63 letters or
            numbers.</p> </li> <li> <p>The first character must be a letter.</p>
            </li> <li> <p>Cannot be a reserved word for the chosen database
            engine.</p> </li> </ul>
          schema:
            type: string
        - name: MasterUserPassword
          in: query
          required: true
          description: '<p>The password for the master database user. This password can
            contain any printable ASCII character except forward slash (/),
            double quote ("), or the "at" symbol (@).</p> <p>Constraints: Must
            contain from 8 to 100 characters.</p>'
          schema:
            type: string
        - name: PreferredBackupWindow
          in: query
          required: false
          description: <p>The daily time range during which automated backups are created
            if automated backups are enabled using the
            <code>BackupRetentionPeriod</code> parameter. </p> <p>The default is
            a 30-minute window selected at random from an 8-hour block of time
            for each AWS Region. </p> <p>Constraints:</p> <ul> <li> <p>Must be
            in the format <code>hh24:mi-hh24:mi</code>.</p> </li> <li> <p>Must
            be in Universal Coordinated Time (UTC).</p> </li> <li> <p>Must not
            conflict with the preferred maintenance window.</p> </li> <li>
            <p>Must be at least 30 minutes.</p> </li> </ul>
          schema:
            type: string
        - name: PreferredMaintenanceWindow
          in: query
          required: false
          description: "<p>The weekly time range during which system maintenance can occur,
            in Universal Coordinated Time (UTC).</p> <p>Format:
            <code>ddd:hh24:mi-ddd:hh24:mi</code> </p> <p>The default is a
            30-minute window selected at random from an 8-hour block of time for
            each AWS Region, occurring on a random day of the week.</p> <p>Valid
            days: Mon, Tue, Wed, Thu, Fri, Sat, Sun</p> <p>Constraints: Minimum
            30-minute window.</p>"
          schema:
            type: string
        - name: Tags
          in: query
          required: false
          description: The tags to be assigned to the DB cluster.
          schema:
            type: array
            items:
              type: string
        - name: StorageEncrypted
          in: query
          required: false
          description: Specifies whether the DB cluster is encrypted.
          schema:
            type: boolean
        - name: KmsKeyId
          in: query
          required: false
          description: <p>The AWS KMS key identifier for an encrypted DB cluster.</p>
            <p>The AWS KMS key identifier is the Amazon Resource Name (ARN) for
            the AWS KMS encryption key. If you are creating a DB cluster using
            the same AWS account that owns the AWS KMS encryption key that is
            used to encrypt the new DB cluster, you can use the AWS KMS key
            alias instead of the ARN for the AWS KMS encryption key.</p> <p>If
            an encryption key is not specified in <code>KmsKeyId</code>:</p>
            <ul> <li> <p>If <code>ReplicationSourceIdentifier</code> identifies
            an encrypted source, then Amazon DocumentDB uses the encryption key
            that is used to encrypt the source. Otherwise, Amazon DocumentDB
            uses your default encryption key. </p> </li> <li> <p>If the
            <code>StorageEncrypted</code> parameter is <code>true</code> and
            <code>ReplicationSourceIdentifier</code> is not specified, Amazon
            DocumentDB uses your default encryption key.</p> </li> </ul> <p>AWS
            KMS creates the default encryption key for your AWS account. Your
            AWS account has a different default encryption key for each AWS
            Region.</p> <p>If you create a replica of an encrypted DB cluster in
            another AWS Region, you must set <code>KmsKeyId</code> to a KMS key
            ID that is valid in the destination AWS Region. This key is used to
            encrypt the replica in that AWS Region.</p>
          schema:
            type: string
        - name: EnableCloudwatchLogsExports
          in: query
          required: false
          description: A list of log types that need to be enabled for exporting to Amazon
            CloudWatch Logs.
          schema:
            type: array
            items:
              type: string
        - name: DeletionProtection
          in: query
          required: false
          description: Specifies whether this cluster can be deleted. If
            <code>DeletionProtection</code> is enabled, the cluster cannot be
            deleted unless it is modified and <code>DeletionProtection</code> is
            disabled. <code>DeletionProtection</code> protects clusters from
            being accidentally deleted.
          schema:
            type: boolean
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - CreateDBCluster
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2014-10-31
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: CreateDBCluster
      operationId: POST CreateDBCluster
      description: Creates a new Amazon DocumentDB DB cluster.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/CreateDBClusterResult"
        "480":
          description: DBClusterAlreadyExistsFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBClusterAlreadyExistsFault"
        "481":
          description: InsufficientStorageClusterCapacityFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InsufficientStorageClusterCapacityFault"
        "482":
          description: DBClusterQuotaExceededFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBClusterQuotaExceededFault"
        "483":
          description: StorageQuotaExceededFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/StorageQuotaExceededFault"
        "484":
          description: DBSubnetGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBSubnetGroupNotFoundFault"
        "485":
          description: InvalidVPCNetworkStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidVPCNetworkStateFault"
        "486":
          description: InvalidDBClusterStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidDBClusterStateFault"
        "487":
          description: InvalidDBSubnetGroupStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidDBSubnetGroupStateFault"
        "488":
          description: InvalidSubnet
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidSubnet"
        "489":
          description: InvalidDBInstanceStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidDBInstanceStateFault"
        "490":
          description: DBClusterParameterGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBClusterParameterGroupNotFoundFault"
        "491":
          description: KMSKeyNotAccessibleFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/KMSKeyNotAccessibleFault"
        "492":
          description: DBClusterNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBClusterNotFoundFault"
        "493":
          description: DBInstanceNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBInstanceNotFoundFault"
        "494":
          description: DBSubnetGroupDoesNotCoverEnoughAZs
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBSubnetGroupDoesNotCoverEnoughAZs"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - CreateDBCluster
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2014-10-31
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                AvailabilityZones:
                  description: A list of Amazon EC2 Availability Zones that instances in
                    the DB cluster can be created in.
                  type: array
                  items:
                    type: string
                BackupRetentionPeriod:
                  description: "<p>The number of days for which automated backups are
                    retained. You must specify a minimum value of 1.</p>
                    <p>Default: 1</p> <p>Constraints:</p> <ul> <li> <p>Must be a
                    value from 1 to 35.</p> </li> </ul>"
                  type: integer
                DBClusterIdentifier:
                  description: "<p>The DB cluster identifier. This parameter is stored as a
                    lowercase string.</p> <p>Constraints:</p> <ul> <li> <p>Must
                    contain from 1 to 63 letters, numbers, or hyphens.</p> </li>
                    <li> <p>The first character must be a letter.</p> </li> <li>
                    <p>Cannot end with a hyphen or contain two consecutive
                    hyphens.</p> </li> </ul> <p>Example: <code>my-cluster</code>
                    </p>"
                  type: string
                DBClusterParameterGroupName:
                  description: " The name of the DB cluster parameter group to associate
                    with this DB cluster."
                  type: string
                VpcSecurityGroupIds:
                  description: A list of EC2 VPC security groups to associate with this DB
                    cluster.
                  type: array
                  items:
                    type: string
                DBSubnetGroupName:
                  description: "<p>A DB subnet group to associate with this DB cluster.</p>
                    <p>Constraints: Must match the name of an existing
                    <code>DBSubnetGroup</code>. Must not be default.</p>
                    <p>Example: <code>mySubnetgroup</code> </p>"
                  type: string
                Engine:
                  description: "<p>The name of the database engine to be used for this DB
                    cluster.</p> <p>Valid values: <code>docdb</code> </p>"
                  type: string
                EngineVersion:
                  description: The version number of the database engine to use.
                  type: string
                Port:
                  description: The port number on which the instances in the DB cluster
                    accept connections.
                  type: integer
                MasterUsername:
                  description: <p>The name of the master user for the DB cluster.</p>
                    <p>Constraints:</p> <ul> <li> <p>Must be from 1 to 63
                    letters or numbers.</p> </li> <li> <p>The first character
                    must be a letter.</p> </li> <li> <p>Cannot be a reserved
                    word for the chosen database engine.</p> </li> </ul>
                  type: string
                MasterUserPassword:
                  description: '<p>The password for the master database user. This password
                    can contain any printable ASCII character except forward
                    slash (/), double quote ("), or the "at" symbol (@).</p>
                    <p>Constraints: Must contain from 8 to 100 characters.</p>'
                  type: string
                PreferredBackupWindow:
                  description: <p>The daily time range during which automated backups are
                    created if automated backups are enabled using the
                    <code>BackupRetentionPeriod</code> parameter. </p> <p>The
                    default is a 30-minute window selected at random from an
                    8-hour block of time for each AWS Region. </p>
                    <p>Constraints:</p> <ul> <li> <p>Must be in the format
                    <code>hh24:mi-hh24:mi</code>.</p> </li> <li> <p>Must be in
                    Universal Coordinated Time (UTC).</p> </li> <li> <p>Must not
                    conflict with the preferred maintenance window.</p> </li>
                    <li> <p>Must be at least 30 minutes.</p> </li> </ul>
                  type: string
                PreferredMaintenanceWindow:
                  description: "<p>The weekly time range during which system maintenance
                    can occur, in Universal Coordinated Time (UTC).</p>
                    <p>Format: <code>ddd:hh24:mi-ddd:hh24:mi</code> </p> <p>The
                    default is a 30-minute window selected at random from an
                    8-hour block of time for each AWS Region, occurring on a
                    random day of the week.</p> <p>Valid days: Mon, Tue, Wed,
                    Thu, Fri, Sat, Sun</p> <p>Constraints: Minimum 30-minute
                    window.</p>"
                  type: string
                Tags:
                  description: The tags to be assigned to the DB cluster.
                  type: array
                  items:
                    type: string
                StorageEncrypted:
                  description: Specifies whether the DB cluster is encrypted.
                  type: boolean
                KmsKeyId:
                  description: <p>The AWS KMS key identifier for an encrypted DB
                    cluster.</p> <p>The AWS KMS key identifier is the Amazon
                    Resource Name (ARN) for the AWS KMS encryption key. If you
                    are creating a DB cluster using the same AWS account that
                    owns the AWS KMS encryption key that is used to encrypt the
                    new DB cluster, you can use the AWS KMS key alias instead of
                    the ARN for the AWS KMS encryption key.</p> <p>If an
                    encryption key is not specified in
                    <code>KmsKeyId</code>:</p> <ul> <li> <p>If
                    <code>ReplicationSourceIdentifier</code> identifies an
                    encrypted source, then Amazon DocumentDB uses the encryption
                    key that is used to encrypt the source. Otherwise, Amazon
                    DocumentDB uses your default encryption key. </p> </li> <li>
                    <p>If the <code>StorageEncrypted</code> parameter is
                    <code>true</code> and
                    <code>ReplicationSourceIdentifier</code> is not specified,
                    Amazon DocumentDB uses your default encryption key.</p>
                    </li> </ul> <p>AWS KMS creates the default encryption key
                    for your AWS account. Your AWS account has a different
                    default encryption key for each AWS Region.</p> <p>If you
                    create a replica of an encrypted DB cluster in another AWS
                    Region, you must set <code>KmsKeyId</code> to a KMS key ID
                    that is valid in the destination AWS Region. This key is
                    used to encrypt the replica in that AWS Region.</p>
                  type: string
                EnableCloudwatchLogsExports:
                  description: A list of log types that need to be enabled for exporting to
                    Amazon CloudWatch Logs.
                  type: array
                  items:
                    type: string
                DeletionProtection:
                  description: Specifies whether this cluster can be deleted. If
                    <code>DeletionProtection</code> is enabled, the cluster
                    cannot be deleted unless it is modified and
                    <code>DeletionProtection</code> is disabled.
                    <code>DeletionProtection</code> protects clusters from being
                    accidentally deleted.
                  type: boolean
              required:
                - DBClusterIdentifier
                - Engine
                - MasterUsername
                - MasterUserPassword
  /#Action=CreateDBClusterParameterGroup:
    get:
      x-aws-operation-name: CreateDBClusterParameterGroup
      operationId: GET CreateDBClusterParameterGroup
      description: <p>Creates a new DB cluster parameter group.</p> <p>Parameters in a DB
        cluster parameter group apply to all of the instances in a DB
        cluster.</p> <p>A DB cluster parameter group is initially created with
        the default parameters for the database engine used by instances in the
        DB cluster. To provide custom values for any of the parameters, you must
        modify the group after you create it. After you create a DB cluster
        parameter group, you must associate it with your DB cluster. For the new
        DB cluster parameter group and associated settings to take effect, you
        must then reboot the DB instances in the DB cluster without
        failover.</p> <important> <p>After you create a DB cluster parameter
        group, you should wait at least 5 minutes before creating your first DB
        cluster that uses that DB cluster parameter group as the default
        parameter group. This allows Amazon DocumentDB to fully complete the
        create action before the DB cluster parameter group is used as the
        default for a new DB cluster. This step is especially important for
        parameters that are critical when creating the default database for a DB
        cluster, such as the character set for the default database defined by
        the <code>character_set_database</code> parameter.</p> </important>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/CreateDBClusterParameterGroupResult"
        "480":
          description: DBParameterGroupQuotaExceededFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBParameterGroupQuotaExceededFault"
        "481":
          description: DBParameterGroupAlreadyExistsFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBParameterGroupAlreadyExistsFault"
      parameters:
        - name: DBClusterParameterGroupName
          in: query
          required: true
          description: <p>The name of the DB cluster parameter group.</p>
            <p>Constraints:</p> <ul> <li> <p>Must match the name of an existing
            <code>DBClusterParameterGroup</code>.</p> </li> </ul> <note> <p>This
            value is stored as a lowercase string.</p> </note>
          schema:
            type: string
        - name: DBParameterGroupFamily
          in: query
          required: true
          description: The DB cluster parameter group family name.
          schema:
            type: string
        - name: Description
          in: query
          required: true
          description: The description for the DB cluster parameter group.
          schema:
            type: string
        - name: Tags
          in: query
          required: false
          description: The tags to be assigned to the DB cluster parameter group.
          schema:
            type: array
            items:
              type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - CreateDBClusterParameterGroup
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2014-10-31
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: CreateDBClusterParameterGroup
      operationId: POST CreateDBClusterParameterGroup
      description: <p>Creates a new DB cluster parameter group.</p> <p>Parameters in a DB
        cluster parameter group apply to all of the instances in a DB
        cluster.</p> <p>A DB cluster parameter group is initially created with
        the default parameters for the database engine used by instances in the
        DB cluster. To provide custom values for any of the parameters, you must
        modify the group after you create it. After you create a DB cluster
        parameter group, you must associate it with your DB cluster. For the new
        DB cluster parameter group and associated settings to take effect, you
        must then reboot the DB instances in the DB cluster without
        failover.</p> <important> <p>After you create a DB cluster parameter
        group, you should wait at least 5 minutes before creating your first DB
        cluster that uses that DB cluster parameter group as the default
        parameter group. This allows Amazon DocumentDB to fully complete the
        create action before the DB cluster parameter group is used as the
        default for a new DB cluster. This step is especially important for
        parameters that are critical when creating the default database for a DB
        cluster, such as the character set for the default database defined by
        the <code>character_set_database</code> parameter.</p> </important>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/CreateDBClusterParameterGroupResult"
        "480":
          description: DBParameterGroupQuotaExceededFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBParameterGroupQuotaExceededFault"
        "481":
          description: DBParameterGroupAlreadyExistsFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBParameterGroupAlreadyExistsFault"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - CreateDBClusterParameterGroup
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2014-10-31
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                DBClusterParameterGroupName:
                  description: <p>The name of the DB cluster parameter group.</p>
                    <p>Constraints:</p> <ul> <li> <p>Must match the name of an
                    existing <code>DBClusterParameterGroup</code>.</p> </li>
                    </ul> <note> <p>This value is stored as a lowercase
                    string.</p> </note>
                  type: string
                DBParameterGroupFamily:
                  description: The DB cluster parameter group family name.
                  type: string
                Description:
                  description: The description for the DB cluster parameter group.
                  type: string
                Tags:
                  description: The tags to be assigned to the DB cluster parameter group.
                  type: array
                  items:
                    type: string
              required:
                - DBClusterParameterGroupName
                - DBParameterGroupFamily
                - Description
  /#Action=CreateDBClusterSnapshot:
    get:
      x-aws-operation-name: CreateDBClusterSnapshot
      operationId: GET CreateDBClusterSnapshot
      description: "Creates a snapshot of a DB cluster. "
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/CreateDBClusterSnapshotResult"
        "480":
          description: DBClusterSnapshotAlreadyExistsFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBClusterSnapshotAlreadyExistsFault"
        "481":
          description: InvalidDBClusterStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidDBClusterStateFault"
        "482":
          description: DBClusterNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBClusterNotFoundFault"
        "483":
          description: SnapshotQuotaExceededFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/SnapshotQuotaExceededFault"
        "484":
          description: InvalidDBClusterSnapshotStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidDBClusterSnapshotStateFault"
      parameters:
        - name: DBClusterSnapshotIdentifier
          in: query
          required: true
          description: "<p>The identifier of the DB cluster snapshot. This parameter is
            stored as a lowercase string.</p> <p>Constraints:</p> <ul> <li>
            <p>Must contain from 1 to 63 letters, numbers, or hyphens.</p> </li>
            <li> <p>The first character must be a letter.</p> </li> <li>
            <p>Cannot end with a hyphen or contain two consecutive hyphens.</p>
            </li> </ul> <p>Example: <code>my-cluster-snapshot1</code> </p>"
          schema:
            type: string
        - name: DBClusterIdentifier
          in: query
          required: true
          description: "<p>The identifier of the DB cluster to create a snapshot for. This
            parameter is not case sensitive.</p> <p>Constraints:</p> <ul> <li>
            <p>Must match the identifier of an existing
            <code>DBCluster</code>.</p> </li> </ul> <p>Example:
            <code>my-cluster</code> </p>"
          schema:
            type: string
        - name: Tags
          in: query
          required: false
          description: The tags to be assigned to the DB cluster snapshot.
          schema:
            type: array
            items:
              type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - CreateDBClusterSnapshot
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2014-10-31
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: CreateDBClusterSnapshot
      operationId: POST CreateDBClusterSnapshot
      description: "Creates a snapshot of a DB cluster. "
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/CreateDBClusterSnapshotResult"
        "480":
          description: DBClusterSnapshotAlreadyExistsFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBClusterSnapshotAlreadyExistsFault"
        "481":
          description: InvalidDBClusterStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidDBClusterStateFault"
        "482":
          description: DBClusterNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBClusterNotFoundFault"
        "483":
          description: SnapshotQuotaExceededFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/SnapshotQuotaExceededFault"
        "484":
          description: InvalidDBClusterSnapshotStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidDBClusterSnapshotStateFault"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - CreateDBClusterSnapshot
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2014-10-31
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                DBClusterSnapshotIdentifier:
                  description: "<p>The identifier of the DB cluster snapshot. This
                    parameter is stored as a lowercase string.</p>
                    <p>Constraints:</p> <ul> <li> <p>Must contain from 1 to 63
                    letters, numbers, or hyphens.</p> </li> <li> <p>The first
                    character must be a letter.</p> </li> <li> <p>Cannot end
                    with a hyphen or contain two consecutive hyphens.</p> </li>
                    </ul> <p>Example: <code>my-cluster-snapshot1</code> </p>"
                  type: string
                DBClusterIdentifier:
                  description: "<p>The identifier of the DB cluster to create a snapshot
                    for. This parameter is not case sensitive.</p>
                    <p>Constraints:</p> <ul> <li> <p>Must match the identifier
                    of an existing <code>DBCluster</code>.</p> </li> </ul>
                    <p>Example: <code>my-cluster</code> </p>"
                  type: string
                Tags:
                  description: The tags to be assigned to the DB cluster snapshot.
                  type: array
                  items:
                    type: string
              required:
                - DBClusterSnapshotIdentifier
                - DBClusterIdentifier
  /#Action=CreateDBInstance:
    get:
      x-aws-operation-name: CreateDBInstance
      operationId: GET CreateDBInstance
      description: Creates a new DB instance.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/CreateDBInstanceResult"
        "480":
          description: DBInstanceAlreadyExistsFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBInstanceAlreadyExistsFault"
        "481":
          description: InsufficientDBInstanceCapacityFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InsufficientDBInstanceCapacityFault"
        "482":
          description: DBParameterGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBParameterGroupNotFoundFault"
        "483":
          description: DBSecurityGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBSecurityGroupNotFoundFault"
        "484":
          description: InstanceQuotaExceededFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InstanceQuotaExceededFault"
        "485":
          description: StorageQuotaExceededFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/StorageQuotaExceededFault"
        "486":
          description: DBSubnetGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBSubnetGroupNotFoundFault"
        "487":
          description: DBSubnetGroupDoesNotCoverEnoughAZs
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBSubnetGroupDoesNotCoverEnoughAZs"
        "488":
          description: InvalidDBClusterStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidDBClusterStateFault"
        "489":
          description: InvalidSubnet
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidSubnet"
        "490":
          description: InvalidVPCNetworkStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidVPCNetworkStateFault"
        "491":
          description: DBClusterNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBClusterNotFoundFault"
        "492":
          description: StorageTypeNotSupportedFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/StorageTypeNotSupportedFault"
        "493":
          description: AuthorizationNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/AuthorizationNotFoundFault"
        "494":
          description: KMSKeyNotAccessibleFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/KMSKeyNotAccessibleFault"
      parameters:
        - name: DBInstanceIdentifier
          in: query
          required: true
          description: "<p>The DB instance identifier. This parameter is stored as a
            lowercase string.</p> <p>Constraints:</p> <ul> <li> <p>Must contain
            from 1 to 63 letters, numbers, or hyphens.</p> </li> <li> <p>The
            first character must be a letter.</p> </li> <li> <p>Cannot end with
            a hyphen or contain two consecutive hyphens.</p> </li> </ul>
            <p>Example: <code>mydbinstance</code> </p>"
          schema:
            type: string
        - name: DBInstanceClass
          in: query
          required: true
          description: "The compute and memory capacity of the DB instance; for example,
            <code>db.r5.large</code>. "
          schema:
            type: string
        - name: Engine
          in: query
          required: true
          description: "<p>The name of the database engine to be used for this
            instance.</p> <p>Valid value: <code>docdb</code> </p>"
          schema:
            type: string
        - name: AvailabilityZone
          in: query
          required: false
          description: "<p> The Amazon EC2 Availability Zone that the DB instance is
            created in.</p> <p>Default: A random, system-chosen Availability
            Zone in the endpoint's AWS Region.</p> <p> Example:
            <code>us-east-1d</code> </p> <p> Constraint: The
            <code>AvailabilityZone</code> parameter can't be specified if the
            <code>MultiAZ</code> parameter is set to <code>true</code>. The
            specified Availability Zone must be in the same AWS Region as the
            current endpoint. </p>"
          schema:
            type: string
        - name: PreferredMaintenanceWindow
          in: query
          required: false
          description: "<p>The time range each week during which system maintenance can
            occur, in Universal Coordinated Time (UTC).</p> <p> Format:
            <code>ddd:hh24:mi-ddd:hh24:mi</code> </p> <p>The default is a
            30-minute window selected at random from an 8-hour block of time for
            each AWS Region, occurring on a random day of the week. </p>
            <p>Valid days: Mon, Tue, Wed, Thu, Fri, Sat, Sun</p> <p>Constraints:
            Minimum 30-minute window.</p>"
          schema:
            type: string
        - name: AutoMinorVersionUpgrade
          in: query
          required: false
          description: "<p>Indicates that minor engine upgrades are applied automatically
            to the DB instance during the maintenance window.</p> <p>Default:
            <code>true</code> </p>"
          schema:
            type: boolean
        - name: Tags
          in: query
          required: false
          description: The tags to be assigned to the DB instance. You can assign up to 10
            tags to an instance.
          schema:
            type: array
            items:
              type: string
        - name: DBClusterIdentifier
          in: query
          required: true
          description: The identifier of the DB cluster that the instance will belong to.
          schema:
            type: string
        - name: PromotionTier
          in: query
          required: false
          description: "<p>A value that specifies the order in which an Amazon DocumentDB
            replica is promoted to the primary instance after a failure of the
            existing primary instance.</p> <p>Default: 1</p> <p>Valid values:
            0-15</p>"
          schema:
            type: integer
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - CreateDBInstance
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2014-10-31
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: CreateDBInstance
      operationId: POST CreateDBInstance
      description: Creates a new DB instance.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/CreateDBInstanceResult"
        "480":
          description: DBInstanceAlreadyExistsFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBInstanceAlreadyExistsFault"
        "481":
          description: InsufficientDBInstanceCapacityFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InsufficientDBInstanceCapacityFault"
        "482":
          description: DBParameterGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBParameterGroupNotFoundFault"
        "483":
          description: DBSecurityGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBSecurityGroupNotFoundFault"
        "484":
          description: InstanceQuotaExceededFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InstanceQuotaExceededFault"
        "485":
          description: StorageQuotaExceededFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/StorageQuotaExceededFault"
        "486":
          description: DBSubnetGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBSubnetGroupNotFoundFault"
        "487":
          description: DBSubnetGroupDoesNotCoverEnoughAZs
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBSubnetGroupDoesNotCoverEnoughAZs"
        "488":
          description: InvalidDBClusterStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidDBClusterStateFault"
        "489":
          description: InvalidSubnet
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidSubnet"
        "490":
          description: InvalidVPCNetworkStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidVPCNetworkStateFault"
        "491":
          description: DBClusterNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBClusterNotFoundFault"
        "492":
          description: StorageTypeNotSupportedFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/StorageTypeNotSupportedFault"
        "493":
          description: AuthorizationNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/AuthorizationNotFoundFault"
        "494":
          description: KMSKeyNotAccessibleFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/KMSKeyNotAccessibleFault"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - CreateDBInstance
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2014-10-31
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                DBInstanceIdentifier:
                  description: "<p>The DB instance identifier. This parameter is stored as
                    a lowercase string.</p> <p>Constraints:</p> <ul> <li>
                    <p>Must contain from 1 to 63 letters, numbers, or
                    hyphens.</p> </li> <li> <p>The first character must be a
                    letter.</p> </li> <li> <p>Cannot end with a hyphen or
                    contain two consecutive hyphens.</p> </li> </ul> <p>Example:
                    <code>mydbinstance</code> </p>"
                  type: string
                DBInstanceClass:
                  description: "The compute and memory capacity of the DB instance; for
                    example, <code>db.r5.large</code>. "
                  type: string
                Engine:
                  description: "<p>The name of the database engine to be used for this
                    instance.</p> <p>Valid value: <code>docdb</code> </p>"
                  type: string
                AvailabilityZone:
                  description: "<p> The Amazon EC2 Availability Zone that the DB instance
                    is created in.</p> <p>Default: A random, system-chosen
                    Availability Zone in the endpoint's AWS Region.</p> <p>
                    Example: <code>us-east-1d</code> </p> <p> Constraint: The
                    <code>AvailabilityZone</code> parameter can't be specified
                    if the <code>MultiAZ</code> parameter is set to
                    <code>true</code>. The specified Availability Zone must be
                    in the same AWS Region as the current endpoint. </p>"
                  type: string
                PreferredMaintenanceWindow:
                  description: "<p>The time range each week during which system maintenance
                    can occur, in Universal Coordinated Time (UTC).</p> <p>
                    Format: <code>ddd:hh24:mi-ddd:hh24:mi</code> </p> <p>The
                    default is a 30-minute window selected at random from an
                    8-hour block of time for each AWS Region, occurring on a
                    random day of the week. </p> <p>Valid days: Mon, Tue, Wed,
                    Thu, Fri, Sat, Sun</p> <p>Constraints: Minimum 30-minute
                    window.</p>"
                  type: string
                AutoMinorVersionUpgrade:
                  description: "<p>Indicates that minor engine upgrades are applied
                    automatically to the DB instance during the maintenance
                    window.</p> <p>Default: <code>true</code> </p>"
                  type: boolean
                Tags:
                  description: The tags to be assigned to the DB instance. You can assign
                    up to 10 tags to an instance.
                  type: array
                  items:
                    type: string
                DBClusterIdentifier:
                  description: The identifier of the DB cluster that the instance will
                    belong to.
                  type: string
                PromotionTier:
                  description: "<p>A value that specifies the order in which an Amazon
                    DocumentDB replica is promoted to the primary instance after
                    a failure of the existing primary instance.</p> <p>Default:
                    1</p> <p>Valid values: 0-15</p>"
                  type: integer
              required:
                - DBInstanceIdentifier
                - DBInstanceClass
                - Engine
                - DBClusterIdentifier
  /#Action=CreateDBSubnetGroup:
    get:
      x-aws-operation-name: CreateDBSubnetGroup
      operationId: GET CreateDBSubnetGroup
      description: Creates a new DB subnet group. DB subnet groups must contain at least
        one subnet in at least two Availability Zones in the AWS Region.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/CreateDBSubnetGroupResult"
        "480":
          description: DBSubnetGroupAlreadyExistsFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBSubnetGroupAlreadyExistsFault"
        "481":
          description: DBSubnetGroupQuotaExceededFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBSubnetGroupQuotaExceededFault"
        "482":
          description: DBSubnetQuotaExceededFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBSubnetQuotaExceededFault"
        "483":
          description: DBSubnetGroupDoesNotCoverEnoughAZs
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBSubnetGroupDoesNotCoverEnoughAZs"
        "484":
          description: InvalidSubnet
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidSubnet"
      parameters:
        - name: DBSubnetGroupName
          in: query
          required: true
          description: "<p>The name for the DB subnet group. This value is stored as a
            lowercase string.</p> <p>Constraints: Must contain no more than 255
            letters, numbers, periods, underscores, spaces, or hyphens. Must not
            be default.</p> <p>Example: <code>mySubnetgroup</code> </p>"
          schema:
            type: string
        - name: DBSubnetGroupDescription
          in: query
          required: true
          description: The description for the DB subnet group.
          schema:
            type: string
        - name: SubnetIds
          in: query
          required: true
          description: The Amazon EC2 subnet IDs for the DB subnet group.
          schema:
            type: array
            items:
              type: string
        - name: Tags
          in: query
          required: false
          description: The tags to be assigned to the DB subnet group.
          schema:
            type: array
            items:
              type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - CreateDBSubnetGroup
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2014-10-31
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: CreateDBSubnetGroup
      operationId: POST CreateDBSubnetGroup
      description: Creates a new DB subnet group. DB subnet groups must contain at least
        one subnet in at least two Availability Zones in the AWS Region.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/CreateDBSubnetGroupResult"
        "480":
          description: DBSubnetGroupAlreadyExistsFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBSubnetGroupAlreadyExistsFault"
        "481":
          description: DBSubnetGroupQuotaExceededFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBSubnetGroupQuotaExceededFault"
        "482":
          description: DBSubnetQuotaExceededFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBSubnetQuotaExceededFault"
        "483":
          description: DBSubnetGroupDoesNotCoverEnoughAZs
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBSubnetGroupDoesNotCoverEnoughAZs"
        "484":
          description: InvalidSubnet
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidSubnet"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - CreateDBSubnetGroup
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2014-10-31
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                DBSubnetGroupName:
                  description: "<p>The name for the DB subnet group. This value is stored
                    as a lowercase string.</p> <p>Constraints: Must contain no
                    more than 255 letters, numbers, periods, underscores,
                    spaces, or hyphens. Must not be default.</p> <p>Example:
                    <code>mySubnetgroup</code> </p>"
                  type: string
                DBSubnetGroupDescription:
                  description: The description for the DB subnet group.
                  type: string
                SubnetIds:
                  description: The Amazon EC2 subnet IDs for the DB subnet group.
                  type: array
                  items:
                    type: string
                Tags:
                  description: The tags to be assigned to the DB subnet group.
                  type: array
                  items:
                    type: string
              required:
                - DBSubnetGroupName
                - DBSubnetGroupDescription
                - SubnetIds
  /#Action=DeleteDBCluster:
    get:
      x-aws-operation-name: DeleteDBCluster
      operationId: GET DeleteDBCluster
      description: <p>Deletes a previously provisioned DB cluster. When you delete a DB
        cluster, all automated backups for that DB cluster are deleted and can't
        be recovered. Manual DB cluster snapshots of the specified DB cluster
        are not deleted.</p> <p/>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DeleteDBClusterResult"
        "480":
          description: DBClusterNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBClusterNotFoundFault"
        "481":
          description: InvalidDBClusterStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidDBClusterStateFault"
        "482":
          description: DBClusterSnapshotAlreadyExistsFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBClusterSnapshotAlreadyExistsFault"
        "483":
          description: SnapshotQuotaExceededFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/SnapshotQuotaExceededFault"
        "484":
          description: InvalidDBClusterSnapshotStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidDBClusterSnapshotStateFault"
      parameters:
        - name: DBClusterIdentifier
          in: query
          required: true
          description: <p>The DB cluster identifier for the DB cluster to be deleted. This
            parameter isn't case sensitive.</p> <p>Constraints:</p> <ul> <li>
            <p>Must match an existing <code>DBClusterIdentifier</code>.</p>
            </li> </ul>
          schema:
            type: string
        - name: SkipFinalSnapshot
          in: query
          required: false
          description: "<p> Determines whether a final DB cluster snapshot is created
            before the DB cluster is deleted. If <code>true</code> is specified,
            no DB cluster snapshot is created. If <code>false</code> is
            specified, a DB cluster snapshot is created before the DB cluster is
            deleted. </p> <note> <p>If <code>SkipFinalSnapshot</code> is
            <code>false</code>, you must specify a
            <code>FinalDBSnapshotIdentifier</code> parameter.</p> </note>
            <p>Default: <code>false</code> </p>"
          schema:
            type: boolean
        - name: FinalDBSnapshotIdentifier
          in: query
          required: false
          description: <p> The DB cluster snapshot identifier of the new DB cluster
            snapshot created when <code>SkipFinalSnapshot</code> is set to
            <code>false</code>. </p> <note> <p> Specifying this parameter and
            also setting the <code>SkipFinalShapshot</code> parameter to
            <code>true</code> results in an error. </p> </note>
            <p>Constraints:</p> <ul> <li> <p>Must be from 1 to 255 letters,
            numbers, or hyphens.</p> </li> <li> <p>The first character must be a
            letter.</p> </li> <li> <p>Cannot end with a hyphen or contain two
            consecutive hyphens.</p> </li> </ul>
          schema:
            type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DeleteDBCluster
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2014-10-31
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: DeleteDBCluster
      operationId: POST DeleteDBCluster
      description: <p>Deletes a previously provisioned DB cluster. When you delete a DB
        cluster, all automated backups for that DB cluster are deleted and can't
        be recovered. Manual DB cluster snapshots of the specified DB cluster
        are not deleted.</p> <p/>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DeleteDBClusterResult"
        "480":
          description: DBClusterNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBClusterNotFoundFault"
        "481":
          description: InvalidDBClusterStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidDBClusterStateFault"
        "482":
          description: DBClusterSnapshotAlreadyExistsFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBClusterSnapshotAlreadyExistsFault"
        "483":
          description: SnapshotQuotaExceededFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/SnapshotQuotaExceededFault"
        "484":
          description: InvalidDBClusterSnapshotStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidDBClusterSnapshotStateFault"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DeleteDBCluster
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2014-10-31
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                DBClusterIdentifier:
                  description: <p>The DB cluster identifier for the DB cluster to be
                    deleted. This parameter isn't case sensitive.</p>
                    <p>Constraints:</p> <ul> <li> <p>Must match an existing
                    <code>DBClusterIdentifier</code>.</p> </li> </ul>
                  type: string
                SkipFinalSnapshot:
                  description: "<p> Determines whether a final DB cluster snapshot is
                    created before the DB cluster is deleted. If
                    <code>true</code> is specified, no DB cluster snapshot is
                    created. If <code>false</code> is specified, a DB cluster
                    snapshot is created before the DB cluster is deleted. </p>
                    <note> <p>If <code>SkipFinalSnapshot</code> is
                    <code>false</code>, you must specify a
                    <code>FinalDBSnapshotIdentifier</code> parameter.</p>
                    </note> <p>Default: <code>false</code> </p>"
                  type: boolean
                FinalDBSnapshotIdentifier:
                  description: <p> The DB cluster snapshot identifier of the new DB cluster
                    snapshot created when <code>SkipFinalSnapshot</code> is set
                    to <code>false</code>. </p> <note> <p> Specifying this
                    parameter and also setting the
                    <code>SkipFinalShapshot</code> parameter to
                    <code>true</code> results in an error. </p> </note>
                    <p>Constraints:</p> <ul> <li> <p>Must be from 1 to 255
                    letters, numbers, or hyphens.</p> </li> <li> <p>The first
                    character must be a letter.</p> </li> <li> <p>Cannot end
                    with a hyphen or contain two consecutive hyphens.</p> </li>
                    </ul>
                  type: string
              required:
                - DBClusterIdentifier
  /#Action=DeleteDBClusterParameterGroup:
    get:
      x-aws-operation-name: DeleteDBClusterParameterGroup
      operationId: GET DeleteDBClusterParameterGroup
      description: Deletes a specified DB cluster parameter group. The DB cluster parameter
        group to be deleted can't be associated with any DB clusters.
      responses:
        "200":
          description: Success
        "480":
          description: InvalidDBParameterGroupStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidDBParameterGroupStateFault"
        "481":
          description: DBParameterGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBParameterGroupNotFoundFault"
      parameters:
        - name: DBClusterParameterGroupName
          in: query
          required: true
          description: <p>The name of the DB cluster parameter group.</p>
            <p>Constraints:</p> <ul> <li> <p>Must be the name of an existing DB
            cluster parameter group.</p> </li> <li> <p>You can't delete a
            default DB cluster parameter group.</p> </li> <li> <p>Cannot be
            associated with any DB clusters.</p> </li> </ul>
          schema:
            type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DeleteDBClusterParameterGroup
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2014-10-31
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: DeleteDBClusterParameterGroup
      operationId: POST DeleteDBClusterParameterGroup
      description: Deletes a specified DB cluster parameter group. The DB cluster parameter
        group to be deleted can't be associated with any DB clusters.
      responses:
        "200":
          description: Success
        "480":
          description: InvalidDBParameterGroupStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidDBParameterGroupStateFault"
        "481":
          description: DBParameterGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBParameterGroupNotFoundFault"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DeleteDBClusterParameterGroup
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2014-10-31
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                DBClusterParameterGroupName:
                  description: <p>The name of the DB cluster parameter group.</p>
                    <p>Constraints:</p> <ul> <li> <p>Must be the name of an
                    existing DB cluster parameter group.</p> </li> <li> <p>You
                    can't delete a default DB cluster parameter group.</p> </li>
                    <li> <p>Cannot be associated with any DB clusters.</p> </li>
                    </ul>
                  type: string
              required:
                - DBClusterParameterGroupName
  /#Action=DeleteDBClusterSnapshot:
    get:
      x-aws-operation-name: DeleteDBClusterSnapshot
      operationId: GET DeleteDBClusterSnapshot
      description: <p>Deletes a DB cluster snapshot. If the snapshot is being copied, the
        copy operation is terminated.</p> <note> <p>The DB cluster snapshot must
        be in the <code>available</code> state to be deleted.</p> </note>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DeleteDBClusterSnapshotResult"
        "480":
          description: InvalidDBClusterSnapshotStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidDBClusterSnapshotStateFault"
        "481":
          description: DBClusterSnapshotNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBClusterSnapshotNotFoundFault"
      parameters:
        - name: DBClusterSnapshotIdentifier
          in: query
          required: true
          description: "<p>The identifier of the DB cluster snapshot to delete.</p>
            <p>Constraints: Must be the name of an existing DB cluster snapshot
            in the <code>available</code> state.</p>"
          schema:
            type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DeleteDBClusterSnapshot
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2014-10-31
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: DeleteDBClusterSnapshot
      operationId: POST DeleteDBClusterSnapshot
      description: <p>Deletes a DB cluster snapshot. If the snapshot is being copied, the
        copy operation is terminated.</p> <note> <p>The DB cluster snapshot must
        be in the <code>available</code> state to be deleted.</p> </note>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DeleteDBClusterSnapshotResult"
        "480":
          description: InvalidDBClusterSnapshotStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidDBClusterSnapshotStateFault"
        "481":
          description: DBClusterSnapshotNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBClusterSnapshotNotFoundFault"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DeleteDBClusterSnapshot
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2014-10-31
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                DBClusterSnapshotIdentifier:
                  description: "<p>The identifier of the DB cluster snapshot to delete.</p>
                    <p>Constraints: Must be the name of an existing DB cluster
                    snapshot in the <code>available</code> state.</p>"
                  type: string
              required:
                - DBClusterSnapshotIdentifier
  /#Action=DeleteDBInstance:
    get:
      x-aws-operation-name: DeleteDBInstance
      operationId: GET DeleteDBInstance
      description: "Deletes a previously provisioned DB instance. "
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DeleteDBInstanceResult"
        "480":
          description: DBInstanceNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBInstanceNotFoundFault"
        "481":
          description: InvalidDBInstanceStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidDBInstanceStateFault"
        "482":
          description: DBSnapshotAlreadyExistsFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBSnapshotAlreadyExistsFault"
        "483":
          description: SnapshotQuotaExceededFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/SnapshotQuotaExceededFault"
        "484":
          description: InvalidDBClusterStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidDBClusterStateFault"
      parameters:
        - name: DBInstanceIdentifier
          in: query
          required: true
          description: <p>The DB instance identifier for the DB instance to be deleted.
            This parameter isn't case sensitive.</p> <p>Constraints:</p> <ul>
            <li> <p>Must match the name of an existing DB instance.</p> </li>
            </ul>
          schema:
            type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DeleteDBInstance
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2014-10-31
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: DeleteDBInstance
      operationId: POST DeleteDBInstance
      description: "Deletes a previously provisioned DB instance. "
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DeleteDBInstanceResult"
        "480":
          description: DBInstanceNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBInstanceNotFoundFault"
        "481":
          description: InvalidDBInstanceStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidDBInstanceStateFault"
        "482":
          description: DBSnapshotAlreadyExistsFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBSnapshotAlreadyExistsFault"
        "483":
          description: SnapshotQuotaExceededFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/SnapshotQuotaExceededFault"
        "484":
          description: InvalidDBClusterStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidDBClusterStateFault"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DeleteDBInstance
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2014-10-31
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                DBInstanceIdentifier:
                  description: <p>The DB instance identifier for the DB instance to be
                    deleted. This parameter isn't case sensitive.</p>
                    <p>Constraints:</p> <ul> <li> <p>Must match the name of an
                    existing DB instance.</p> </li> </ul>
                  type: string
              required:
                - DBInstanceIdentifier
  /#Action=DeleteDBSubnetGroup:
    get:
      x-aws-operation-name: DeleteDBSubnetGroup
      operationId: GET DeleteDBSubnetGroup
      description: <p>Deletes a DB subnet group.</p> <note> <p>The specified database
        subnet group must not be associated with any DB instances.</p> </note>
      responses:
        "200":
          description: Success
        "480":
          description: InvalidDBSubnetGroupStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidDBSubnetGroupStateFault"
        "481":
          description: InvalidDBSubnetStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidDBSubnetStateFault"
        "482":
          description: DBSubnetGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBSubnetGroupNotFoundFault"
      parameters:
        - name: DBSubnetGroupName
          in: query
          required: true
          description: "<p>The name of the database subnet group to delete.</p> <note>
            <p>You can't delete the default subnet group.</p> </note>
            <p>Constraints:</p> <p>Must match the name of an existing
            <code>DBSubnetGroup</code>. Must not be default.</p> <p>Example:
            <code>mySubnetgroup</code> </p>"
          schema:
            type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DeleteDBSubnetGroup
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2014-10-31
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: DeleteDBSubnetGroup
      operationId: POST DeleteDBSubnetGroup
      description: <p>Deletes a DB subnet group.</p> <note> <p>The specified database
        subnet group must not be associated with any DB instances.</p> </note>
      responses:
        "200":
          description: Success
        "480":
          description: InvalidDBSubnetGroupStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidDBSubnetGroupStateFault"
        "481":
          description: InvalidDBSubnetStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidDBSubnetStateFault"
        "482":
          description: DBSubnetGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBSubnetGroupNotFoundFault"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DeleteDBSubnetGroup
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2014-10-31
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                DBSubnetGroupName:
                  description: "<p>The name of the database subnet group to delete.</p>
                    <note> <p>You can't delete the default subnet group.</p>
                    </note> <p>Constraints:</p> <p>Must match the name of an
                    existing <code>DBSubnetGroup</code>. Must not be
                    default.</p> <p>Example: <code>mySubnetgroup</code> </p>"
                  type: string
              required:
                - DBSubnetGroupName
  /#Action=DescribeCertificates:
    get:
      x-aws-operation-name: DescribeCertificates
      operationId: GET DescribeCertificates
      description: Returns a list of certificate authority (CA) certificates provided by
        Amazon RDS for this AWS account.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/CertificateMessage"
        "480":
          description: CertificateNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/CertificateNotFoundFault"
      parameters:
        - name: CertificateIdentifier
          in: query
          required: false
          description: <p>The user-supplied certificate identifier. If this parameter is
            specified, information for only the specified certificate is
            returned. If this parameter is omitted, a list of up to
            <code>MaxRecords</code> certificates is returned. This parameter is
            not case sensitive.</p> <p>Constraints</p> <ul> <li> <p>Must match
            an existing <code>CertificateIdentifier</code>.</p> </li> </ul>
          schema:
            type: string
        - name: Filters
          in: query
          required: false
          description: This parameter is not currently supported.
          schema:
            type: array
            items:
              type: string
        - name: MaxRecords
          in: query
          required: false
          description: "<p>The maximum number of records to include in the response. If
            more records exist than the specified <code>MaxRecords</code> value,
            a pagination token called a marker is included in the response so
            that the remaining results can be retrieved.</p> <p>Default: 100</p>
            <p>Constraints:</p> <ul> <li> <p>Minimum: 20</p> </li> <li>
            <p>Maximum: 100</p> </li> </ul>"
          schema:
            type: integer
        - name: Marker
          in: query
          required: false
          description: An optional pagination token provided by a previous
            <code>DescribeCertificates</code> request. If this parameter is
            specified, the response includes only records beyond the marker, up
            to the value specified by <code>MaxRecords</code>.
          schema:
            type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeCertificates
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2014-10-31
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: DescribeCertificates
      operationId: POST DescribeCertificates
      description: Returns a list of certificate authority (CA) certificates provided by
        Amazon RDS for this AWS account.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/CertificateMessage"
        "480":
          description: CertificateNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/CertificateNotFoundFault"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeCertificates
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2014-10-31
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                CertificateIdentifier:
                  description: <p>The user-supplied certificate identifier. If this
                    parameter is specified, information for only the specified
                    certificate is returned. If this parameter is omitted, a
                    list of up to <code>MaxRecords</code> certificates is
                    returned. This parameter is not case sensitive.</p>
                    <p>Constraints</p> <ul> <li> <p>Must match an existing
                    <code>CertificateIdentifier</code>.</p> </li> </ul>
                  type: string
                Filters:
                  description: This parameter is not currently supported.
                  type: array
                  items:
                    type: string
                MaxRecords:
                  description: "<p>The maximum number of records to include in the
                    response. If more records exist than the specified
                    <code>MaxRecords</code> value, a pagination token called a
                    marker is included in the response so that the remaining
                    results can be retrieved.</p> <p>Default: 100</p>
                    <p>Constraints:</p> <ul> <li> <p>Minimum: 20</p> </li> <li>
                    <p>Maximum: 100</p> </li> </ul>"
                  type: integer
                Marker:
                  description: An optional pagination token provided by a previous
                    <code>DescribeCertificates</code> request. If this parameter
                    is specified, the response includes only records beyond the
                    marker, up to the value specified by
                    <code>MaxRecords</code>.
                  type: string
  /#Action=DescribeDBClusterParameterGroups:
    get:
      x-aws-operation-name: DescribeDBClusterParameterGroups
      operationId: GET DescribeDBClusterParameterGroups
      description: "Returns a list of <code>DBClusterParameterGroup</code> descriptions. If
        a <code>DBClusterParameterGroupName</code> parameter is specified, the
        list contains only the description of the specified DB cluster parameter
        group. "
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBClusterParameterGroupsMessage"
        "480":
          description: DBParameterGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBParameterGroupNotFoundFault"
      parameters:
        - name: DBClusterParameterGroupName
          in: query
          required: false
          description: <p>The name of a specific DB cluster parameter group to return
            details for.</p> <p>Constraints:</p> <ul> <li> <p>If provided, must
            match the name of an existing
            <code>DBClusterParameterGroup</code>.</p> </li> </ul>
          schema:
            type: string
        - name: Filters
          in: query
          required: false
          description: This parameter is not currently supported.
          schema:
            type: array
            items:
              type: string
        - name: MaxRecords
          in: query
          required: false
          description: "<p> The maximum number of records to include in the response. If
            more records exist than the specified <code>MaxRecords</code> value,
            a pagination token (marker) is included in the response so that the
            remaining results can be retrieved.</p> <p>Default: 100</p>
            <p>Constraints: Minimum 20, maximum 100.</p>"
          schema:
            type: integer
        - name: Marker
          in: query
          required: false
          description: An optional pagination token provided by a previous request. If this
            parameter is specified, the response includes only records beyond
            the marker, up to the value specified by <code>MaxRecords</code>.
          schema:
            type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeDBClusterParameterGroups
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2014-10-31
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: DescribeDBClusterParameterGroups
      operationId: POST DescribeDBClusterParameterGroups
      description: "Returns a list of <code>DBClusterParameterGroup</code> descriptions. If
        a <code>DBClusterParameterGroupName</code> parameter is specified, the
        list contains only the description of the specified DB cluster parameter
        group. "
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBClusterParameterGroupsMessage"
        "480":
          description: DBParameterGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBParameterGroupNotFoundFault"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeDBClusterParameterGroups
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2014-10-31
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                DBClusterParameterGroupName:
                  description: <p>The name of a specific DB cluster parameter group to
                    return details for.</p> <p>Constraints:</p> <ul> <li> <p>If
                    provided, must match the name of an existing
                    <code>DBClusterParameterGroup</code>.</p> </li> </ul>
                  type: string
                Filters:
                  description: This parameter is not currently supported.
                  type: array
                  items:
                    type: string
                MaxRecords:
                  description: "<p> The maximum number of records to include in the
                    response. If more records exist than the specified
                    <code>MaxRecords</code> value, a pagination token (marker)
                    is included in the response so that the remaining results
                    can be retrieved.</p> <p>Default: 100</p> <p>Constraints:
                    Minimum 20, maximum 100.</p>"
                  type: integer
                Marker:
                  description: An optional pagination token provided by a previous request.
                    If this parameter is specified, the response includes only
                    records beyond the marker, up to the value specified by
                    <code>MaxRecords</code>.
                  type: string
  /#Action=DescribeDBClusterParameters:
    get:
      x-aws-operation-name: DescribeDBClusterParameters
      operationId: GET DescribeDBClusterParameters
      description: Returns the detailed parameter list for a particular DB cluster
        parameter group.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBClusterParameterGroupDetails"
        "480":
          description: DBParameterGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBParameterGroupNotFoundFault"
      parameters:
        - name: DBClusterParameterGroupName
          in: query
          required: true
          description: <p>The name of a specific DB cluster parameter group to return
            parameter details for.</p> <p>Constraints:</p> <ul> <li> <p>If
            provided, must match the name of an existing
            <code>DBClusterParameterGroup</code>.</p> </li> </ul>
          schema:
            type: string
        - name: Source
          in: query
          required: false
          description: " A value that indicates to return only parameters for a specific
            source. Parameter sources can be <code>engine</code>,
            <code>service</code>, or <code>customer</code>. "
          schema:
            type: string
        - name: Filters
          in: query
          required: false
          description: This parameter is not currently supported.
          schema:
            type: array
            items:
              type: string
        - name: MaxRecords
          in: query
          required: false
          description: "<p> The maximum number of records to include in the response. If
            more records exist than the specified <code>MaxRecords</code> value,
            a pagination token (marker) is included in the response so that the
            remaining results can be retrieved.</p> <p>Default: 100</p>
            <p>Constraints: Minimum 20, maximum 100.</p>"
          schema:
            type: integer
        - name: Marker
          in: query
          required: false
          description: An optional pagination token provided by a previous request. If this
            parameter is specified, the response includes only records beyond
            the marker, up to the value specified by <code>MaxRecords</code>.
          schema:
            type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeDBClusterParameters
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2014-10-31
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: DescribeDBClusterParameters
      operationId: POST DescribeDBClusterParameters
      description: Returns the detailed parameter list for a particular DB cluster
        parameter group.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBClusterParameterGroupDetails"
        "480":
          description: DBParameterGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBParameterGroupNotFoundFault"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeDBClusterParameters
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2014-10-31
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                DBClusterParameterGroupName:
                  description: <p>The name of a specific DB cluster parameter group to
                    return parameter details for.</p> <p>Constraints:</p> <ul>
                    <li> <p>If provided, must match the name of an existing
                    <code>DBClusterParameterGroup</code>.</p> </li> </ul>
                  type: string
                Source:
                  description: " A value that indicates to return only parameters for a
                    specific source. Parameter sources can be
                    <code>engine</code>, <code>service</code>, or
                    <code>customer</code>. "
                  type: string
                Filters:
                  description: This parameter is not currently supported.
                  type: array
                  items:
                    type: string
                MaxRecords:
                  description: "<p> The maximum number of records to include in the
                    response. If more records exist than the specified
                    <code>MaxRecords</code> value, a pagination token (marker)
                    is included in the response so that the remaining results
                    can be retrieved.</p> <p>Default: 100</p> <p>Constraints:
                    Minimum 20, maximum 100.</p>"
                  type: integer
                Marker:
                  description: An optional pagination token provided by a previous request.
                    If this parameter is specified, the response includes only
                    records beyond the marker, up to the value specified by
                    <code>MaxRecords</code>.
                  type: string
              required:
                - DBClusterParameterGroupName
  /#Action=DescribeDBClusterSnapshotAttributes:
    get:
      x-aws-operation-name: DescribeDBClusterSnapshotAttributes
      operationId: GET DescribeDBClusterSnapshotAttributes
      description: <p>Returns a list of DB cluster snapshot attribute names and values for
        a manual DB cluster snapshot.</p> <p>When you share snapshots with other
        AWS accounts, <code>DescribeDBClusterSnapshotAttributes</code> returns
        the <code>restore</code> attribute and a list of IDs for the AWS
        accounts that are authorized to copy or restore the manual DB cluster
        snapshot. If <code>all</code> is included in the list of values for the
        <code>restore</code> attribute, then the manual DB cluster snapshot is
        public and can be copied or restored by all AWS accounts.</p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DescribeDBClusterSnapshotAttributesResu\
                  lt"
        "480":
          description: DBClusterSnapshotNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBClusterSnapshotNotFoundFault"
      parameters:
        - name: DBClusterSnapshotIdentifier
          in: query
          required: true
          description: The identifier for the DB cluster snapshot to describe the
            attributes for.
          schema:
            type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeDBClusterSnapshotAttributes
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2014-10-31
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: DescribeDBClusterSnapshotAttributes
      operationId: POST DescribeDBClusterSnapshotAttributes
      description: <p>Returns a list of DB cluster snapshot attribute names and values for
        a manual DB cluster snapshot.</p> <p>When you share snapshots with other
        AWS accounts, <code>DescribeDBClusterSnapshotAttributes</code> returns
        the <code>restore</code> attribute and a list of IDs for the AWS
        accounts that are authorized to copy or restore the manual DB cluster
        snapshot. If <code>all</code> is included in the list of values for the
        <code>restore</code> attribute, then the manual DB cluster snapshot is
        public and can be copied or restored by all AWS accounts.</p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DescribeDBClusterSnapshotAttributesResu\
                  lt"
        "480":
          description: DBClusterSnapshotNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBClusterSnapshotNotFoundFault"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeDBClusterSnapshotAttributes
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2014-10-31
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                DBClusterSnapshotIdentifier:
                  description: The identifier for the DB cluster snapshot to describe the
                    attributes for.
                  type: string
              required:
                - DBClusterSnapshotIdentifier
  /#Action=DescribeDBClusterSnapshots:
    get:
      x-aws-operation-name: DescribeDBClusterSnapshots
      operationId: GET DescribeDBClusterSnapshots
      description: Returns information about DB cluster snapshots. This API operation
        supports pagination.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBClusterSnapshotMessage"
        "480":
          description: DBClusterSnapshotNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBClusterSnapshotNotFoundFault"
      parameters:
        - name: DBClusterIdentifier
          in: query
          required: false
          description: <p>The ID of the DB cluster to retrieve the list of DB cluster
            snapshots for. This parameter can't be used with the
            <code>DBClusterSnapshotIdentifier</code> parameter. This parameter
            is not case sensitive. </p> <p>Constraints:</p> <ul> <li> <p>If
            provided, must match the identifier of an existing
            <code>DBCluster</code>.</p> </li> </ul>
          schema:
            type: string
        - name: DBClusterSnapshotIdentifier
          in: query
          required: false
          description: <p>A specific DB cluster snapshot identifier to describe. This
            parameter can't be used with the <code>DBClusterIdentifier</code>
            parameter. This value is stored as a lowercase string. </p>
            <p>Constraints:</p> <ul> <li> <p>If provided, must match the
            identifier of an existing <code>DBClusterSnapshot</code>.</p> </li>
            <li> <p>If this identifier is for an automated snapshot, the
            <code>SnapshotType</code> parameter must also be specified.</p>
            </li> </ul>
          schema:
            type: string
        - name: SnapshotType
          in: query
          required: false
          description: <p>The type of DB cluster snapshots to be returned. You can specify
            one of the following values:</p> <ul> <li> <p>
            <code>automated</code> - Return all DB cluster snapshots that Amazon
            DocumentDB has automatically created for your AWS account.</p> </li>
            <li> <p> <code>manual</code> - Return all DB cluster snapshots that
            you have manually created for your AWS account.</p> </li> <li> <p>
            <code>shared</code> - Return all manual DB cluster snapshots that
            have been shared to your AWS account.</p> </li> <li> <p>
            <code>public</code> - Return all DB cluster snapshots that have been
            marked as public.</p> </li> </ul> <p>If you don't specify a
            <code>SnapshotType</code> value, then both automated and manual DB
            cluster snapshots are returned. You can include shared DB cluster
            snapshots with these results by setting the
            <code>IncludeShared</code> parameter to <code>true</code>. You can
            include public DB cluster snapshots with these results by setting
            the <code>IncludePublic</code> parameter to <code>true</code>.</p>
            <p>The <code>IncludeShared</code> and <code>IncludePublic</code>
            parameters don't apply for <code>SnapshotType</code> values of
            <code>manual</code> or <code>automated</code>. The
            <code>IncludePublic</code> parameter doesn't apply when
            <code>SnapshotType</code> is set to <code>shared</code>. The
            <code>IncludeShared</code> parameter doesn't apply when
            <code>SnapshotType</code> is set to <code>public</code>.</p>
          schema:
            type: string
        - name: Filters
          in: query
          required: false
          description: This parameter is not currently supported.
          schema:
            type: array
            items:
              type: string
        - name: MaxRecords
          in: query
          required: false
          description: "<p> The maximum number of records to include in the response. If
            more records exist than the specified <code>MaxRecords</code> value,
            a pagination token (marker) is included in the response so that the
            remaining results can be retrieved.</p> <p>Default: 100</p>
            <p>Constraints: Minimum 20, maximum 100.</p>"
          schema:
            type: integer
        - name: Marker
          in: query
          required: false
          description: An optional pagination token provided by a previous request. If this
            parameter is specified, the response includes only records beyond
            the marker, up to the value specified by <code>MaxRecords</code>.
          schema:
            type: string
        - name: IncludeShared
          in: query
          required: false
          description: Set to <code>true</code> to include shared manual DB cluster
            snapshots from other AWS accounts that this AWS account has been
            given permission to copy or restore, and otherwise
            <code>false</code>. The default is <code>false</code>.
          schema:
            type: boolean
        - name: IncludePublic
          in: query
          required: false
          description: Set to <code>true</code> to include manual DB cluster snapshots that
            are public and can be copied or restored by any AWS account, and
            otherwise <code>false</code>. The default is <code>false</code>.
          schema:
            type: boolean
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeDBClusterSnapshots
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2014-10-31
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: DescribeDBClusterSnapshots
      operationId: POST DescribeDBClusterSnapshots
      description: Returns information about DB cluster snapshots. This API operation
        supports pagination.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBClusterSnapshotMessage"
        "480":
          description: DBClusterSnapshotNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBClusterSnapshotNotFoundFault"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeDBClusterSnapshots
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2014-10-31
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                DBClusterIdentifier:
                  description: <p>The ID of the DB cluster to retrieve the list of DB
                    cluster snapshots for. This parameter can't be used with the
                    <code>DBClusterSnapshotIdentifier</code> parameter. This
                    parameter is not case sensitive. </p> <p>Constraints:</p>
                    <ul> <li> <p>If provided, must match the identifier of an
                    existing <code>DBCluster</code>.</p> </li> </ul>
                  type: string
                DBClusterSnapshotIdentifier:
                  description: <p>A specific DB cluster snapshot identifier to describe.
                    This parameter can't be used with the
                    <code>DBClusterIdentifier</code> parameter. This value is
                    stored as a lowercase string. </p> <p>Constraints:</p> <ul>
                    <li> <p>If provided, must match the identifier of an
                    existing <code>DBClusterSnapshot</code>.</p> </li> <li>
                    <p>If this identifier is for an automated snapshot, the
                    <code>SnapshotType</code> parameter must also be
                    specified.</p> </li> </ul>
                  type: string
                SnapshotType:
                  description: <p>The type of DB cluster snapshots to be returned. You can
                    specify one of the following values:</p> <ul> <li> <p>
                    <code>automated</code> - Return all DB cluster snapshots
                    that Amazon DocumentDB has automatically created for your
                    AWS account.</p> </li> <li> <p> <code>manual</code> - Return
                    all DB cluster snapshots that you have manually created for
                    your AWS account.</p> </li> <li> <p> <code>shared</code> -
                    Return all manual DB cluster snapshots that have been shared
                    to your AWS account.</p> </li> <li> <p> <code>public</code>
                    - Return all DB cluster snapshots that have been marked as
                    public.</p> </li> </ul> <p>If you don't specify a
                    <code>SnapshotType</code> value, then both automated and
                    manual DB cluster snapshots are returned. You can include
                    shared DB cluster snapshots with these results by setting
                    the <code>IncludeShared</code> parameter to
                    <code>true</code>. You can include public DB cluster
                    snapshots with these results by setting the
                    <code>IncludePublic</code> parameter to
                    <code>true</code>.</p> <p>The <code>IncludeShared</code> and
                    <code>IncludePublic</code> parameters don't apply for
                    <code>SnapshotType</code> values of <code>manual</code> or
                    <code>automated</code>. The <code>IncludePublic</code>
                    parameter doesn't apply when <code>SnapshotType</code> is
                    set to <code>shared</code>. The <code>IncludeShared</code>
                    parameter doesn't apply when <code>SnapshotType</code> is
                    set to <code>public</code>.</p>
                  type: string
                Filters:
                  description: This parameter is not currently supported.
                  type: array
                  items:
                    type: string
                MaxRecords:
                  description: "<p> The maximum number of records to include in the
                    response. If more records exist than the specified
                    <code>MaxRecords</code> value, a pagination token (marker)
                    is included in the response so that the remaining results
                    can be retrieved.</p> <p>Default: 100</p> <p>Constraints:
                    Minimum 20, maximum 100.</p>"
                  type: integer
                Marker:
                  description: An optional pagination token provided by a previous request.
                    If this parameter is specified, the response includes only
                    records beyond the marker, up to the value specified by
                    <code>MaxRecords</code>.
                  type: string
                IncludeShared:
                  description: Set to <code>true</code> to include shared manual DB cluster
                    snapshots from other AWS accounts that this AWS account has
                    been given permission to copy or restore, and otherwise
                    <code>false</code>. The default is <code>false</code>.
                  type: boolean
                IncludePublic:
                  description: Set to <code>true</code> to include manual DB cluster
                    snapshots that are public and can be copied or restored by
                    any AWS account, and otherwise <code>false</code>. The
                    default is <code>false</code>.
                  type: boolean
  /#Action=DescribeDBClusters:
    get:
      x-aws-operation-name: DescribeDBClusters
      operationId: GET DescribeDBClusters
      description: Returns information about provisioned Amazon DocumentDB DB clusters.
        This API operation supports pagination.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBClusterMessage"
        "480":
          description: DBClusterNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBClusterNotFoundFault"
      parameters:
        - name: DBClusterIdentifier
          in: query
          required: false
          description: <p>The user-provided DB cluster identifier. If this parameter is
            specified, information from only the specific DB cluster is
            returned. This parameter isn't case sensitive.</p>
            <p>Constraints:</p> <ul> <li> <p>If provided, must match an existing
            <code>DBClusterIdentifier</code>.</p> </li> </ul>
          schema:
            type: string
        - name: Filters
          in: query
          required: false
          description: <p>A filter that specifies one or more DB clusters to describe.</p>
            <p>Supported filters:</p> <ul> <li> <p> <code>db-cluster-id</code> -
            Accepts DB cluster identifiers and DB cluster Amazon Resource Names
            (ARNs). The results list only includes information about the DB
            clusters identified by these ARNs.</p> </li> </ul>
          schema:
            type: array
            items:
              type: string
        - name: MaxRecords
          in: query
          required: false
          description: "<p> The maximum number of records to include in the response. If
            more records exist than the specified <code>MaxRecords</code> value,
            a pagination token (marker) is included in the response so that the
            remaining results can be retrieved.</p> <p>Default: 100</p>
            <p>Constraints: Minimum 20, maximum 100.</p>"
          schema:
            type: integer
        - name: Marker
          in: query
          required: false
          description: An optional pagination token provided by a previous request. If this
            parameter is specified, the response includes only records beyond
            the marker, up to the value specified by <code>MaxRecords</code>.
          schema:
            type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeDBClusters
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2014-10-31
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: DescribeDBClusters
      operationId: POST DescribeDBClusters
      description: Returns information about provisioned Amazon DocumentDB DB clusters.
        This API operation supports pagination.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBClusterMessage"
        "480":
          description: DBClusterNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBClusterNotFoundFault"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeDBClusters
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2014-10-31
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                DBClusterIdentifier:
                  description: <p>The user-provided DB cluster identifier. If this
                    parameter is specified, information from only the specific
                    DB cluster is returned. This parameter isn't case
                    sensitive.</p> <p>Constraints:</p> <ul> <li> <p>If provided,
                    must match an existing <code>DBClusterIdentifier</code>.</p>
                    </li> </ul>
                  type: string
                Filters:
                  description: <p>A filter that specifies one or more DB clusters to
                    describe.</p> <p>Supported filters:</p> <ul> <li> <p>
                    <code>db-cluster-id</code> - Accepts DB cluster identifiers
                    and DB cluster Amazon Resource Names (ARNs). The results
                    list only includes information about the DB clusters
                    identified by these ARNs.</p> </li> </ul>
                  type: array
                  items:
                    type: string
                MaxRecords:
                  description: "<p> The maximum number of records to include in the
                    response. If more records exist than the specified
                    <code>MaxRecords</code> value, a pagination token (marker)
                    is included in the response so that the remaining results
                    can be retrieved.</p> <p>Default: 100</p> <p>Constraints:
                    Minimum 20, maximum 100.</p>"
                  type: integer
                Marker:
                  description: An optional pagination token provided by a previous request.
                    If this parameter is specified, the response includes only
                    records beyond the marker, up to the value specified by
                    <code>MaxRecords</code>.
                  type: string
  /#Action=DescribeDBEngineVersions:
    get:
      x-aws-operation-name: DescribeDBEngineVersions
      operationId: GET DescribeDBEngineVersions
      description: Returns a list of the available DB engines.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBEngineVersionMessage"
      parameters:
        - name: Engine
          in: query
          required: false
          description: The database engine to return.
          schema:
            type: string
        - name: EngineVersion
          in: query
          required: false
          description: "<p>The database engine version to return.</p> <p>Example:
            <code>5.1.49</code> </p>"
          schema:
            type: string
        - name: DBParameterGroupFamily
          in: query
          required: false
          description: <p>The name of a specific DB parameter group family to return
            details for.</p> <p>Constraints:</p> <ul> <li> <p>If provided, must
            match an existing <code>DBParameterGroupFamily</code>.</p> </li>
            </ul>
          schema:
            type: string
        - name: Filters
          in: query
          required: false
          description: This parameter is not currently supported.
          schema:
            type: array
            items:
              type: string
        - name: MaxRecords
          in: query
          required: false
          description: "<p> The maximum number of records to include in the response. If
            more records exist than the specified <code>MaxRecords</code> value,
            a pagination token (marker) is included in the response so that the
            remaining results can be retrieved.</p> <p>Default: 100</p>
            <p>Constraints: Minimum 20, maximum 100.</p>"
          schema:
            type: integer
        - name: Marker
          in: query
          required: false
          description: An optional pagination token provided by a previous request. If this
            parameter is specified, the response includes only records beyond
            the marker, up to the value specified by <code>MaxRecords</code>.
          schema:
            type: string
        - name: DefaultOnly
          in: query
          required: false
          description: Indicates that only the default version of the specified engine or
            engine and major version combination is returned.
          schema:
            type: boolean
        - name: ListSupportedCharacterSets
          in: query
          required: false
          description: "If this parameter is specified and the requested engine supports
            the <code>CharacterSetName</code> parameter for
            <code>CreateDBInstance</code>, the response includes a list of
            supported character sets for each engine version. "
          schema:
            type: boolean
        - name: ListSupportedTimezones
          in: query
          required: false
          description: "If this parameter is specified and the requested engine supports
            the <code>TimeZone</code> parameter for
            <code>CreateDBInstance</code>, the response includes a list of
            supported time zones for each engine version. "
          schema:
            type: boolean
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeDBEngineVersions
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2014-10-31
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: DescribeDBEngineVersions
      operationId: POST DescribeDBEngineVersions
      description: Returns a list of the available DB engines.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBEngineVersionMessage"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeDBEngineVersions
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2014-10-31
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                Engine:
                  description: The database engine to return.
                  type: string
                EngineVersion:
                  description: "<p>The database engine version to return.</p> <p>Example:
                    <code>5.1.49</code> </p>"
                  type: string
                DBParameterGroupFamily:
                  description: <p>The name of a specific DB parameter group family to
                    return details for.</p> <p>Constraints:</p> <ul> <li> <p>If
                    provided, must match an existing
                    <code>DBParameterGroupFamily</code>.</p> </li> </ul>
                  type: string
                Filters:
                  description: This parameter is not currently supported.
                  type: array
                  items:
                    type: string
                MaxRecords:
                  description: "<p> The maximum number of records to include in the
                    response. If more records exist than the specified
                    <code>MaxRecords</code> value, a pagination token (marker)
                    is included in the response so that the remaining results
                    can be retrieved.</p> <p>Default: 100</p> <p>Constraints:
                    Minimum 20, maximum 100.</p>"
                  type: integer
                Marker:
                  description: An optional pagination token provided by a previous request.
                    If this parameter is specified, the response includes only
                    records beyond the marker, up to the value specified by
                    <code>MaxRecords</code>.
                  type: string
                DefaultOnly:
                  description: Indicates that only the default version of the specified
                    engine or engine and major version combination is returned.
                  type: boolean
                ListSupportedCharacterSets:
                  description: "If this parameter is specified and the requested engine
                    supports the <code>CharacterSetName</code> parameter for
                    <code>CreateDBInstance</code>, the response includes a list
                    of supported character sets for each engine version. "
                  type: boolean
                ListSupportedTimezones:
                  description: "If this parameter is specified and the requested engine
                    supports the <code>TimeZone</code> parameter for
                    <code>CreateDBInstance</code>, the response includes a list
                    of supported time zones for each engine version. "
                  type: boolean
  /#Action=DescribeDBInstances:
    get:
      x-aws-operation-name: DescribeDBInstances
      operationId: GET DescribeDBInstances
      description: Returns information about provisioned Amazon DocumentDB instances. This
        API supports pagination.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBInstanceMessage"
        "480":
          description: DBInstanceNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBInstanceNotFoundFault"
      parameters:
        - name: DBInstanceIdentifier
          in: query
          required: false
          description: <p>The user-provided instance identifier. If this parameter is
            specified, information from only the specific DB instance is
            returned. This parameter isn't case sensitive.</p>
            <p>Constraints:</p> <ul> <li> <p>If provided, must match the
            identifier of an existing <code>DBInstance</code>.</p> </li> </ul>
          schema:
            type: string
        - name: Filters
          in: query
          required: false
          description: <p>A filter that specifies one or more DB instances to describe.</p>
            <p>Supported filters:</p> <ul> <li> <p> <code>db-cluster-id</code> -
            Accepts DB cluster identifiers and DB cluster Amazon Resource Names
            (ARNs). The results list includes only the information about the DB
            instances that are associated with the DB clusters that are
            identified by these ARNs.</p> </li> <li> <p>
            <code>db-instance-id</code> - Accepts DB instance identifiers and DB
            instance ARNs. The results list includes only the information about
            the DB instances that are identified by these ARNs.</p> </li> </ul>
          schema:
            type: array
            items:
              type: string
        - name: MaxRecords
          in: query
          required: false
          description: "<p> The maximum number of records to include in the response. If
            more records exist than the specified <code>MaxRecords</code> value,
            a pagination token (marker) is included in the response so that the
            remaining results can be retrieved.</p> <p>Default: 100</p>
            <p>Constraints: Minimum 20, maximum 100.</p>"
          schema:
            type: integer
        - name: Marker
          in: query
          required: false
          description: An optional pagination token provided by a previous request. If this
            parameter is specified, the response includes only records beyond
            the marker, up to the value specified by <code>MaxRecords</code>.
          schema:
            type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeDBInstances
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2014-10-31
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: DescribeDBInstances
      operationId: POST DescribeDBInstances
      description: Returns information about provisioned Amazon DocumentDB instances. This
        API supports pagination.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBInstanceMessage"
        "480":
          description: DBInstanceNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBInstanceNotFoundFault"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeDBInstances
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2014-10-31
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                DBInstanceIdentifier:
                  description: <p>The user-provided instance identifier. If this parameter
                    is specified, information from only the specific DB instance
                    is returned. This parameter isn't case sensitive.</p>
                    <p>Constraints:</p> <ul> <li> <p>If provided, must match the
                    identifier of an existing <code>DBInstance</code>.</p> </li>
                    </ul>
                  type: string
                Filters:
                  description: <p>A filter that specifies one or more DB instances to
                    describe.</p> <p>Supported filters:</p> <ul> <li> <p>
                    <code>db-cluster-id</code> - Accepts DB cluster identifiers
                    and DB cluster Amazon Resource Names (ARNs). The results
                    list includes only the information about the DB instances
                    that are associated with the DB clusters that are identified
                    by these ARNs.</p> </li> <li> <p>
                    <code>db-instance-id</code> - Accepts DB instance
                    identifiers and DB instance ARNs. The results list includes
                    only the information about the DB instances that are
                    identified by these ARNs.</p> </li> </ul>
                  type: array
                  items:
                    type: string
                MaxRecords:
                  description: "<p> The maximum number of records to include in the
                    response. If more records exist than the specified
                    <code>MaxRecords</code> value, a pagination token (marker)
                    is included in the response so that the remaining results
                    can be retrieved.</p> <p>Default: 100</p> <p>Constraints:
                    Minimum 20, maximum 100.</p>"
                  type: integer
                Marker:
                  description: An optional pagination token provided by a previous request.
                    If this parameter is specified, the response includes only
                    records beyond the marker, up to the value specified by
                    <code>MaxRecords</code>.
                  type: string
  /#Action=DescribeDBSubnetGroups:
    get:
      x-aws-operation-name: DescribeDBSubnetGroups
      operationId: GET DescribeDBSubnetGroups
      description: Returns a list of <code>DBSubnetGroup</code> descriptions. If a
        <code>DBSubnetGroupName</code> is specified, the list will contain only
        the descriptions of the specified <code>DBSubnetGroup</code>.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBSubnetGroupMessage"
        "480":
          description: DBSubnetGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBSubnetGroupNotFoundFault"
      parameters:
        - name: DBSubnetGroupName
          in: query
          required: false
          description: The name of the DB subnet group to return details for.
          schema:
            type: string
        - name: Filters
          in: query
          required: false
          description: This parameter is not currently supported.
          schema:
            type: array
            items:
              type: string
        - name: MaxRecords
          in: query
          required: false
          description: "<p> The maximum number of records to include in the response. If
            more records exist than the specified <code>MaxRecords</code> value,
            a pagination token (marker) is included in the response so that the
            remaining results can be retrieved.</p> <p>Default: 100</p>
            <p>Constraints: Minimum 20, maximum 100.</p>"
          schema:
            type: integer
        - name: Marker
          in: query
          required: false
          description: An optional pagination token provided by a previous request. If this
            parameter is specified, the response includes only records beyond
            the marker, up to the value specified by <code>MaxRecords</code>.
          schema:
            type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeDBSubnetGroups
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2014-10-31
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: DescribeDBSubnetGroups
      operationId: POST DescribeDBSubnetGroups
      description: Returns a list of <code>DBSubnetGroup</code> descriptions. If a
        <code>DBSubnetGroupName</code> is specified, the list will contain only
        the descriptions of the specified <code>DBSubnetGroup</code>.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBSubnetGroupMessage"
        "480":
          description: DBSubnetGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBSubnetGroupNotFoundFault"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeDBSubnetGroups
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2014-10-31
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                DBSubnetGroupName:
                  description: The name of the DB subnet group to return details for.
                  type: string
                Filters:
                  description: This parameter is not currently supported.
                  type: array
                  items:
                    type: string
                MaxRecords:
                  description: "<p> The maximum number of records to include in the
                    response. If more records exist than the specified
                    <code>MaxRecords</code> value, a pagination token (marker)
                    is included in the response so that the remaining results
                    can be retrieved.</p> <p>Default: 100</p> <p>Constraints:
                    Minimum 20, maximum 100.</p>"
                  type: integer
                Marker:
                  description: An optional pagination token provided by a previous request.
                    If this parameter is specified, the response includes only
                    records beyond the marker, up to the value specified by
                    <code>MaxRecords</code>.
                  type: string
  /#Action=DescribeEngineDefaultClusterParameters:
    get:
      x-aws-operation-name: DescribeEngineDefaultClusterParameters
      operationId: GET DescribeEngineDefaultClusterParameters
      description: Returns the default engine and system parameter information for the
        cluster database engine.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DescribeEngineDefaultClusterParametersR\
                  esult"
      parameters:
        - name: DBParameterGroupFamily
          in: query
          required: true
          description: The name of the DB cluster parameter group family to return the
            engine parameter information for.
          schema:
            type: string
        - name: Filters
          in: query
          required: false
          description: This parameter is not currently supported.
          schema:
            type: array
            items:
              type: string
        - name: MaxRecords
          in: query
          required: false
          description: "<p> The maximum number of records to include in the response. If
            more records exist than the specified <code>MaxRecords</code> value,
            a pagination token (marker) is included in the response so that the
            remaining results can be retrieved.</p> <p>Default: 100</p>
            <p>Constraints: Minimum 20, maximum 100.</p>"
          schema:
            type: integer
        - name: Marker
          in: query
          required: false
          description: An optional pagination token provided by a previous request. If this
            parameter is specified, the response includes only records beyond
            the marker, up to the value specified by <code>MaxRecords</code>.
          schema:
            type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeEngineDefaultClusterParameters
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2014-10-31
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: DescribeEngineDefaultClusterParameters
      operationId: POST DescribeEngineDefaultClusterParameters
      description: Returns the default engine and system parameter information for the
        cluster database engine.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DescribeEngineDefaultClusterParametersR\
                  esult"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeEngineDefaultClusterParameters
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2014-10-31
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                DBParameterGroupFamily:
                  description: The name of the DB cluster parameter group family to return
                    the engine parameter information for.
                  type: string
                Filters:
                  description: This parameter is not currently supported.
                  type: array
                  items:
                    type: string
                MaxRecords:
                  description: "<p> The maximum number of records to include in the
                    response. If more records exist than the specified
                    <code>MaxRecords</code> value, a pagination token (marker)
                    is included in the response so that the remaining results
                    can be retrieved.</p> <p>Default: 100</p> <p>Constraints:
                    Minimum 20, maximum 100.</p>"
                  type: integer
                Marker:
                  description: An optional pagination token provided by a previous request.
                    If this parameter is specified, the response includes only
                    records beyond the marker, up to the value specified by
                    <code>MaxRecords</code>.
                  type: string
              required:
                - DBParameterGroupFamily
  /#Action=DescribeEventCategories:
    get:
      x-aws-operation-name: DescribeEventCategories
      operationId: GET DescribeEventCategories
      description: "Displays a list of categories for all event source types, or, if
        specified, for a specified source type. "
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/EventCategoriesMessage"
      parameters:
        - name: SourceType
          in: query
          required: false
          description: "<p>The type of source that is generating the events.</p> <p>Valid
            values: <code>db-instance</code>, <code>db-parameter-group</code>,
            <code>db-security-group</code>, <code>db-snapshot</code> </p>"
          schema:
            type: string
        - name: Filters
          in: query
          required: false
          description: This parameter is not currently supported.
          schema:
            type: array
            items:
              type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeEventCategories
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2014-10-31
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: DescribeEventCategories
      operationId: POST DescribeEventCategories
      description: "Displays a list of categories for all event source types, or, if
        specified, for a specified source type. "
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/EventCategoriesMessage"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeEventCategories
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2014-10-31
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                SourceType:
                  description: "<p>The type of source that is generating the events.</p>
                    <p>Valid values: <code>db-instance</code>,
                    <code>db-parameter-group</code>,
                    <code>db-security-group</code>, <code>db-snapshot</code>
                    </p>"
                  type: string
                Filters:
                  description: This parameter is not currently supported.
                  type: array
                  items:
                    type: string
  /#Action=DescribeEvents:
    get:
      x-aws-operation-name: DescribeEvents
      operationId: GET DescribeEvents
      description: Returns events related to DB instances, DB security groups, DB
        snapshots, and DB parameter groups for the past 14 days. You can obtain
        events specific to a particular DB instance, DB security group, DB
        snapshot, or DB parameter group by providing the name as a parameter. By
        default, the events of the past hour are returned.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/EventsMessage"
      parameters:
        - name: SourceIdentifier
          in: query
          required: false
          description: <p>The identifier of the event source for which events are returned.
            If not specified, then all sources are included in the response.</p>
            <p>Constraints:</p> <ul> <li> <p>If <code>SourceIdentifier</code> is
            provided, <code>SourceType</code> must also be provided.</p> </li>
            <li> <p>If the source type is <code>DBInstance</code>, a
            <code>DBInstanceIdentifier</code> must be provided.</p> </li> <li>
            <p>If the source type is <code>DBSecurityGroup</code>, a
            <code>DBSecurityGroupName</code> must be provided.</p> </li> <li>
            <p>If the source type is <code>DBParameterGroup</code>, a
            <code>DBParameterGroupName</code> must be provided.</p> </li> <li>
            <p>If the source type is <code>DBSnapshot</code>, a
            <code>DBSnapshotIdentifier</code> must be provided.</p> </li> <li>
            <p>Cannot end with a hyphen or contain two consecutive hyphens.</p>
            </li> </ul>
          schema:
            type: string
        - name: SourceType
          in: query
          required: false
          description: The event source to retrieve events for. If no value is specified,
            all events are returned.
          schema:
            type: string
            enum:
              - db-instance
              - db-parameter-group
              - db-security-group
              - db-snapshot
              - db-cluster
              - db-cluster-snapshot
        - name: StartTime
          in: query
          required: false
          description: "<p> The beginning of the time interval to retrieve events for,
            specified in ISO 8601 format. </p> <p>Example:
            2009-07-08T18:00Z</p>"
          schema:
            type: string
            format: date-time
        - name: EndTime
          in: query
          required: false
          description: "<p> The end of the time interval for which to retrieve events,
            specified in ISO 8601 format. </p> <p>Example:
            2009-07-08T18:00Z</p>"
          schema:
            type: string
            format: date-time
        - name: Duration
          in: query
          required: false
          description: "<p>The number of minutes to retrieve events for.</p> <p>Default:
            60</p>"
          schema:
            type: integer
        - name: EventCategories
          in: query
          required: false
          description: A list of event categories that trigger notifications for an event
            notification subscription.
          schema:
            type: array
            items:
              type: string
        - name: Filters
          in: query
          required: false
          description: This parameter is not currently supported.
          schema:
            type: array
            items:
              type: string
        - name: MaxRecords
          in: query
          required: false
          description: "<p> The maximum number of records to include in the response. If
            more records exist than the specified <code>MaxRecords</code> value,
            a pagination token (marker) is included in the response so that the
            remaining results can be retrieved.</p> <p>Default: 100</p>
            <p>Constraints: Minimum 20, maximum 100.</p>"
          schema:
            type: integer
        - name: Marker
          in: query
          required: false
          description: An optional pagination token provided by a previous request. If this
            parameter is specified, the response includes only records beyond
            the marker, up to the value specified by <code>MaxRecords</code>.
          schema:
            type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeEvents
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2014-10-31
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: DescribeEvents
      operationId: POST DescribeEvents
      description: Returns events related to DB instances, DB security groups, DB
        snapshots, and DB parameter groups for the past 14 days. You can obtain
        events specific to a particular DB instance, DB security group, DB
        snapshot, or DB parameter group by providing the name as a parameter. By
        default, the events of the past hour are returned.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/EventsMessage"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeEvents
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2014-10-31
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                SourceIdentifier:
                  description: <p>The identifier of the event source for which events are
                    returned. If not specified, then all sources are included in
                    the response.</p> <p>Constraints:</p> <ul> <li> <p>If
                    <code>SourceIdentifier</code> is provided,
                    <code>SourceType</code> must also be provided.</p> </li>
                    <li> <p>If the source type is <code>DBInstance</code>, a
                    <code>DBInstanceIdentifier</code> must be provided.</p>
                    </li> <li> <p>If the source type is
                    <code>DBSecurityGroup</code>, a
                    <code>DBSecurityGroupName</code> must be provided.</p> </li>
                    <li> <p>If the source type is <code>DBParameterGroup</code>,
                    a <code>DBParameterGroupName</code> must be provided.</p>
                    </li> <li> <p>If the source type is <code>DBSnapshot</code>,
                    a <code>DBSnapshotIdentifier</code> must be provided.</p>
                    </li> <li> <p>Cannot end with a hyphen or contain two
                    consecutive hyphens.</p> </li> </ul>
                  type: string
                SourceType:
                  description: The event source to retrieve events for. If no value is
                    specified, all events are returned.
                  type: string
                  enum:
                    - db-instance
                    - db-parameter-group
                    - db-security-group
                    - db-snapshot
                    - db-cluster
                    - db-cluster-snapshot
                StartTime:
                  description: "<p> The beginning of the time interval to retrieve events
                    for, specified in ISO 8601 format. </p> <p>Example:
                    2009-07-08T18:00Z</p>"
                  type: string
                  format: date-time
                EndTime:
                  description: "<p> The end of the time interval for which to retrieve
                    events, specified in ISO 8601 format. </p> <p>Example:
                    2009-07-08T18:00Z</p>"
                  type: string
                  format: date-time
                Duration:
                  description: "<p>The number of minutes to retrieve events for.</p>
                    <p>Default: 60</p>"
                  type: integer
                EventCategories:
                  description: A list of event categories that trigger notifications for an
                    event notification subscription.
                  type: array
                  items:
                    type: string
                Filters:
                  description: This parameter is not currently supported.
                  type: array
                  items:
                    type: string
                MaxRecords:
                  description: "<p> The maximum number of records to include in the
                    response. If more records exist than the specified
                    <code>MaxRecords</code> value, a pagination token (marker)
                    is included in the response so that the remaining results
                    can be retrieved.</p> <p>Default: 100</p> <p>Constraints:
                    Minimum 20, maximum 100.</p>"
                  type: integer
                Marker:
                  description: An optional pagination token provided by a previous request.
                    If this parameter is specified, the response includes only
                    records beyond the marker, up to the value specified by
                    <code>MaxRecords</code>.
                  type: string
  /#Action=DescribeOrderableDBInstanceOptions:
    get:
      x-aws-operation-name: DescribeOrderableDBInstanceOptions
      operationId: GET DescribeOrderableDBInstanceOptions
      description: Returns a list of orderable DB instance options for the specified engine.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/OrderableDBInstanceOptionsMessage"
      parameters:
        - name: Engine
          in: query
          required: true
          description: The name of the engine to retrieve DB instance options for.
          schema:
            type: string
        - name: EngineVersion
          in: query
          required: false
          description: The engine version filter value. Specify this parameter to show only
            the available offerings that match the specified engine version.
          schema:
            type: string
        - name: DBInstanceClass
          in: query
          required: false
          description: The DB instance class filter value. Specify this parameter to show
            only the available offerings that match the specified DB instance
            class.
          schema:
            type: string
        - name: LicenseModel
          in: query
          required: false
          description: The license model filter value. Specify this parameter to show only
            the available offerings that match the specified license model.
          schema:
            type: string
        - name: Vpc
          in: query
          required: false
          description: The virtual private cloud (VPC) filter value. Specify this parameter
            to show only the available VPC or non-VPC offerings.
          schema:
            type: boolean
        - name: Filters
          in: query
          required: false
          description: This parameter is not currently supported.
          schema:
            type: array
            items:
              type: string
        - name: MaxRecords
          in: query
          required: false
          description: "<p> The maximum number of records to include in the response. If
            more records exist than the specified <code>MaxRecords</code> value,
            a pagination token (marker) is included in the response so that the
            remaining results can be retrieved.</p> <p>Default: 100</p>
            <p>Constraints: Minimum 20, maximum 100.</p>"
          schema:
            type: integer
        - name: Marker
          in: query
          required: false
          description: An optional pagination token provided by a previous request. If this
            parameter is specified, the response includes only records beyond
            the marker, up to the value specified by <code>MaxRecords</code>.
          schema:
            type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeOrderableDBInstanceOptions
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2014-10-31
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: DescribeOrderableDBInstanceOptions
      operationId: POST DescribeOrderableDBInstanceOptions
      description: Returns a list of orderable DB instance options for the specified engine.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/OrderableDBInstanceOptionsMessage"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeOrderableDBInstanceOptions
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2014-10-31
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                Engine:
                  description: The name of the engine to retrieve DB instance options for.
                  type: string
                EngineVersion:
                  description: The engine version filter value. Specify this parameter to
                    show only the available offerings that match the specified
                    engine version.
                  type: string
                DBInstanceClass:
                  description: The DB instance class filter value. Specify this parameter
                    to show only the available offerings that match the
                    specified DB instance class.
                  type: string
                LicenseModel:
                  description: The license model filter value. Specify this parameter to
                    show only the available offerings that match the specified
                    license model.
                  type: string
                Vpc:
                  description: The virtual private cloud (VPC) filter value. Specify this
                    parameter to show only the available VPC or non-VPC
                    offerings.
                  type: boolean
                Filters:
                  description: This parameter is not currently supported.
                  type: array
                  items:
                    type: string
                MaxRecords:
                  description: "<p> The maximum number of records to include in the
                    response. If more records exist than the specified
                    <code>MaxRecords</code> value, a pagination token (marker)
                    is included in the response so that the remaining results
                    can be retrieved.</p> <p>Default: 100</p> <p>Constraints:
                    Minimum 20, maximum 100.</p>"
                  type: integer
                Marker:
                  description: An optional pagination token provided by a previous request.
                    If this parameter is specified, the response includes only
                    records beyond the marker, up to the value specified by
                    <code>MaxRecords</code>.
                  type: string
              required:
                - Engine
  /#Action=DescribePendingMaintenanceActions:
    get:
      x-aws-operation-name: DescribePendingMaintenanceActions
      operationId: GET DescribePendingMaintenanceActions
      description: Returns a list of resources (for example, DB instances) that have at
        least one pending maintenance action.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/PendingMaintenanceActionsMessage"
        "480":
          description: ResourceNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundFault"
      parameters:
        - name: ResourceIdentifier
          in: query
          required: false
          description: The ARN of a resource to return pending maintenance actions for.
          schema:
            type: string
        - name: Filters
          in: query
          required: false
          description: <p>A filter that specifies one or more resources to return pending
            maintenance actions for.</p> <p>Supported filters:</p> <ul> <li> <p>
            <code>db-cluster-id</code> - Accepts DB cluster identifiers and DB
            cluster Amazon Resource Names (ARNs). The results list includes only
            pending maintenance actions for the DB clusters identified by these
            ARNs.</p> </li> <li> <p> <code>db-instance-id</code> - Accepts DB
            instance identifiers and DB instance ARNs. The results list includes
            only pending maintenance actions for the DB instances identified by
            these ARNs.</p> </li> </ul>
          schema:
            type: array
            items:
              type: string
        - name: Marker
          in: query
          required: false
          description: An optional pagination token provided by a previous request. If this
            parameter is specified, the response includes only records beyond
            the marker, up to the value specified by <code>MaxRecords</code>.
          schema:
            type: string
        - name: MaxRecords
          in: query
          required: false
          description: "<p> The maximum number of records to include in the response. If
            more records exist than the specified <code>MaxRecords</code> value,
            a pagination token (marker) is included in the response so that the
            remaining results can be retrieved.</p> <p>Default: 100</p>
            <p>Constraints: Minimum 20, maximum 100.</p>"
          schema:
            type: integer
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribePendingMaintenanceActions
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2014-10-31
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: DescribePendingMaintenanceActions
      operationId: POST DescribePendingMaintenanceActions
      description: Returns a list of resources (for example, DB instances) that have at
        least one pending maintenance action.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/PendingMaintenanceActionsMessage"
        "480":
          description: ResourceNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundFault"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribePendingMaintenanceActions
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2014-10-31
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                ResourceIdentifier:
                  description: The ARN of a resource to return pending maintenance actions
                    for.
                  type: string
                Filters:
                  description: <p>A filter that specifies one or more resources to return
                    pending maintenance actions for.</p> <p>Supported
                    filters:</p> <ul> <li> <p> <code>db-cluster-id</code> -
                    Accepts DB cluster identifiers and DB cluster Amazon
                    Resource Names (ARNs). The results list includes only
                    pending maintenance actions for the DB clusters identified
                    by these ARNs.</p> </li> <li> <p>
                    <code>db-instance-id</code> - Accepts DB instance
                    identifiers and DB instance ARNs. The results list includes
                    only pending maintenance actions for the DB instances
                    identified by these ARNs.</p> </li> </ul>
                  type: array
                  items:
                    type: string
                Marker:
                  description: An optional pagination token provided by a previous request.
                    If this parameter is specified, the response includes only
                    records beyond the marker, up to the value specified by
                    <code>MaxRecords</code>.
                  type: string
                MaxRecords:
                  description: "<p> The maximum number of records to include in the
                    response. If more records exist than the specified
                    <code>MaxRecords</code> value, a pagination token (marker)
                    is included in the response so that the remaining results
                    can be retrieved.</p> <p>Default: 100</p> <p>Constraints:
                    Minimum 20, maximum 100.</p>"
                  type: integer
  /#Action=FailoverDBCluster:
    get:
      x-aws-operation-name: FailoverDBCluster
      operationId: GET FailoverDBCluster
      description: <p>Forces a failover for a DB cluster.</p> <p>A failover for a DB
        cluster promotes one of the Amazon DocumentDB replicas (read-only
        instances) in the DB cluster to be the primary instance (the cluster
        writer).</p> <p>If the primary instance fails, Amazon DocumentDB
        automatically fails over to an Amazon DocumentDB replica, if one exists.
        You can force a failover when you want to simulate a failure of a
        primary instance for testing.</p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/FailoverDBClusterResult"
        "480":
          description: DBClusterNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBClusterNotFoundFault"
        "481":
          description: InvalidDBClusterStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidDBClusterStateFault"
        "482":
          description: InvalidDBInstanceStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidDBInstanceStateFault"
      parameters:
        - name: DBClusterIdentifier
          in: query
          required: false
          description: <p>A DB cluster identifier to force a failover for. This parameter
            is not case sensitive.</p> <p>Constraints:</p> <ul> <li> <p>Must
            match the identifier of an existing <code>DBCluster</code>.</p>
            </li> </ul>
          schema:
            type: string
        - name: TargetDBInstanceIdentifier
          in: query
          required: false
          description: <p>The name of the instance to promote to the primary instance.</p>
            <p>You must specify the instance identifier for an Amazon DocumentDB
            replica in the DB cluster. For example,
            <code>mydbcluster-replica1</code>.</p>
          schema:
            type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - FailoverDBCluster
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2014-10-31
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: FailoverDBCluster
      operationId: POST FailoverDBCluster
      description: <p>Forces a failover for a DB cluster.</p> <p>A failover for a DB
        cluster promotes one of the Amazon DocumentDB replicas (read-only
        instances) in the DB cluster to be the primary instance (the cluster
        writer).</p> <p>If the primary instance fails, Amazon DocumentDB
        automatically fails over to an Amazon DocumentDB replica, if one exists.
        You can force a failover when you want to simulate a failure of a
        primary instance for testing.</p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/FailoverDBClusterResult"
        "480":
          description: DBClusterNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBClusterNotFoundFault"
        "481":
          description: InvalidDBClusterStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidDBClusterStateFault"
        "482":
          description: InvalidDBInstanceStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidDBInstanceStateFault"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - FailoverDBCluster
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2014-10-31
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                DBClusterIdentifier:
                  description: <p>A DB cluster identifier to force a failover for. This
                    parameter is not case sensitive.</p> <p>Constraints:</p>
                    <ul> <li> <p>Must match the identifier of an existing
                    <code>DBCluster</code>.</p> </li> </ul>
                  type: string
                TargetDBInstanceIdentifier:
                  description: <p>The name of the instance to promote to the primary
                    instance.</p> <p>You must specify the instance identifier
                    for an Amazon DocumentDB replica in the DB cluster. For
                    example, <code>mydbcluster-replica1</code>.</p>
                  type: string
  /#Action=ListTagsForResource:
    get:
      x-aws-operation-name: ListTagsForResource
      operationId: GET ListTagsForResource
      description: Lists all tags on an Amazon DocumentDB resource.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/TagListMessage"
        "480":
          description: DBInstanceNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBInstanceNotFoundFault"
        "481":
          description: DBSnapshotNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBSnapshotNotFoundFault"
        "482":
          description: DBClusterNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBClusterNotFoundFault"
      parameters:
        - name: ResourceName
          in: query
          required: true
          description: The Amazon DocumentDB resource with tags to be listed. This value is
            an Amazon Resource Name (ARN).
          schema:
            type: string
        - name: Filters
          in: query
          required: false
          description: This parameter is not currently supported.
          schema:
            type: array
            items:
              type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - ListTagsForResource
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2014-10-31
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: ListTagsForResource
      operationId: POST ListTagsForResource
      description: Lists all tags on an Amazon DocumentDB resource.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/TagListMessage"
        "480":
          description: DBInstanceNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBInstanceNotFoundFault"
        "481":
          description: DBSnapshotNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBSnapshotNotFoundFault"
        "482":
          description: DBClusterNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBClusterNotFoundFault"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - ListTagsForResource
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2014-10-31
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                ResourceName:
                  description: The Amazon DocumentDB resource with tags to be listed. This
                    value is an Amazon Resource Name (ARN).
                  type: string
                Filters:
                  description: This parameter is not currently supported.
                  type: array
                  items:
                    type: string
              required:
                - ResourceName
  /#Action=ModifyDBCluster:
    get:
      x-aws-operation-name: ModifyDBCluster
      operationId: GET ModifyDBCluster
      description: "Modifies a setting for an Amazon DocumentDB DB cluster. You can change
        one or more database configuration parameters by specifying these
        parameters and the new values in the request. "
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ModifyDBClusterResult"
        "480":
          description: DBClusterNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBClusterNotFoundFault"
        "481":
          description: InvalidDBClusterStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidDBClusterStateFault"
        "482":
          description: StorageQuotaExceededFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/StorageQuotaExceededFault"
        "483":
          description: DBSubnetGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBSubnetGroupNotFoundFault"
        "484":
          description: InvalidVPCNetworkStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidVPCNetworkStateFault"
        "485":
          description: InvalidDBSubnetGroupStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidDBSubnetGroupStateFault"
        "486":
          description: InvalidSubnet
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidSubnet"
        "487":
          description: DBClusterParameterGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBClusterParameterGroupNotFoundFault"
        "488":
          description: InvalidDBSecurityGroupStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidDBSecurityGroupStateFault"
        "489":
          description: InvalidDBInstanceStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidDBInstanceStateFault"
        "490":
          description: DBClusterAlreadyExistsFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBClusterAlreadyExistsFault"
      parameters:
        - name: DBClusterIdentifier
          in: query
          required: true
          description: <p>The DB cluster identifier for the cluster that is being modified.
            This parameter is not case sensitive.</p> <p>Constraints:</p> <ul>
            <li> <p>Must match the identifier of an existing
            <code>DBCluster</code>.</p> </li> </ul>
          schema:
            type: string
        - name: NewDBClusterIdentifier
          in: query
          required: false
          description: "<p>The new DB cluster identifier for the DB cluster when renaming a
            DB cluster. This value is stored as a lowercase string.</p>
            <p>Constraints:</p> <ul> <li> <p>Must contain from 1 to 63 letters,
            numbers, or hyphens.</p> </li> <li> <p>The first character must be a
            letter.</p> </li> <li> <p>Cannot end with a hyphen or contain two
            consecutive hyphens.</p> </li> </ul> <p>Example:
            <code>my-cluster2</code> </p>"
          schema:
            type: string
        - name: ApplyImmediately
          in: query
          required: false
          description: "<p>A value that specifies whether the changes in this request and
            any pending changes are asynchronously applied as soon as possible,
            regardless of the <code>PreferredMaintenanceWindow</code> setting
            for the DB cluster. If this parameter is set to <code>false</code>,
            changes to the DB cluster are applied during the next maintenance
            window.</p> <p>The <code>ApplyImmediately</code> parameter affects
            only the <code>NewDBClusterIdentifier</code> and
            <code>MasterUserPassword</code> values. If you set this parameter
            value to <code>false</code>, the changes to the
            <code>NewDBClusterIdentifier</code> and
            <code>MasterUserPassword</code> values are applied during the next
            maintenance window. All other changes are applied immediately,
            regardless of the value of the <code>ApplyImmediately</code>
            parameter.</p> <p>Default: <code>false</code> </p>"
          schema:
            type: boolean
        - name: BackupRetentionPeriod
          in: query
          required: false
          description: "<p>The number of days for which automated backups are retained. You
            must specify a minimum value of 1.</p> <p>Default: 1</p>
            <p>Constraints:</p> <ul> <li> <p>Must be a value from 1 to 35.</p>
            </li> </ul>"
          schema:
            type: integer
        - name: DBClusterParameterGroupName
          in: query
          required: false
          description: The name of the DB cluster parameter group to use for the DB cluster.
          schema:
            type: string
        - name: VpcSecurityGroupIds
          in: query
          required: false
          description: A list of virtual private cloud (VPC) security groups that the DB
            cluster will belong to.
          schema:
            type: array
            items:
              type: string
        - name: Port
          in: query
          required: false
          description: "<p>The port number on which the DB cluster accepts connections.</p>
            <p>Constraints: Must be a value from <code>1150</code> to
            <code>65535</code>. </p> <p>Default: The same port as the original
            DB cluster.</p>"
          schema:
            type: integer
        - name: MasterUserPassword
          in: query
          required: false
          description: '<p>The password for the master database user. This password can
            contain any printable ASCII character except forward slash (/),
            double quote ("), or the "at" symbol (@).</p> <p>Constraints: Must
            contain from 8 to 100 characters.</p>'
          schema:
            type: string
        - name: PreferredBackupWindow
          in: query
          required: false
          description: <p>The daily time range during which automated backups are created
            if automated backups are enabled, using the
            <code>BackupRetentionPeriod</code> parameter. </p> <p>The default is
            a 30-minute window selected at random from an 8-hour block of time
            for each AWS Region. </p> <p>Constraints:</p> <ul> <li> <p>Must be
            in the format <code>hh24:mi-hh24:mi</code>.</p> </li> <li> <p>Must
            be in Universal Coordinated Time (UTC).</p> </li> <li> <p>Must not
            conflict with the preferred maintenance window.</p> </li> <li>
            <p>Must be at least 30 minutes.</p> </li> </ul>
          schema:
            type: string
        - name: PreferredMaintenanceWindow
          in: query
          required: false
          description: "<p>The weekly time range during which system maintenance can occur,
            in Universal Coordinated Time (UTC).</p> <p>Format:
            <code>ddd:hh24:mi-ddd:hh24:mi</code> </p> <p>The default is a
            30-minute window selected at random from an 8-hour block of time for
            each AWS Region, occurring on a random day of the week. </p>
            <p>Valid days: Mon, Tue, Wed, Thu, Fri, Sat, Sun</p> <p>Constraints:
            Minimum 30-minute window.</p>"
          schema:
            type: string
        - name: CloudwatchLogsExportConfiguration.EnableLogTypes
          in: query
          description: >-
            <p>The configuration setting for the log types to be enabled for
            export to Amazon CloudWatch Logs for a specific DB instance or DB
            cluster.</p> <p>The <code>EnableLogTypes</code> and
            <code>DisableLogTypes</code> arrays determine which logs are
            exported (or not exported) to CloudWatch Logs. The values within
            these arrays depend on the DB engine that is being used.</p>

            The list of log types to enable.
          schema:
            type: array
            items:
              type: string
        - name: CloudwatchLogsExportConfiguration.DisableLogTypes
          in: query
          description: >-
            <p>The configuration setting for the log types to be enabled for
            export to Amazon CloudWatch Logs for a specific DB instance or DB
            cluster.</p> <p>The <code>EnableLogTypes</code> and
            <code>DisableLogTypes</code> arrays determine which logs are
            exported (or not exported) to CloudWatch Logs. The values within
            these arrays depend on the DB engine that is being used.</p>

            The list of log types to disable.
          schema:
            type: array
            items:
              type: string
        - name: EngineVersion
          in: query
          required: false
          description: The version number of the database engine to which you want to
            upgrade. Changing this parameter results in an outage. The change is
            applied during the next maintenance window unless the
            <code>ApplyImmediately</code> parameter is set to <code>true</code>.
          schema:
            type: string
        - name: DeletionProtection
          in: query
          required: false
          description: Specifies whether this cluster can be deleted. If
            <code>DeletionProtection</code> is enabled, the cluster cannot be
            deleted unless it is modified and <code>DeletionProtection</code> is
            disabled. <code>DeletionProtection</code> protects clusters from
            being accidentally deleted.
          schema:
            type: boolean
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - ModifyDBCluster
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2014-10-31
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: ModifyDBCluster
      operationId: POST ModifyDBCluster
      description: "Modifies a setting for an Amazon DocumentDB DB cluster. You can change
        one or more database configuration parameters by specifying these
        parameters and the new values in the request. "
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ModifyDBClusterResult"
        "480":
          description: DBClusterNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBClusterNotFoundFault"
        "481":
          description: InvalidDBClusterStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidDBClusterStateFault"
        "482":
          description: StorageQuotaExceededFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/StorageQuotaExceededFault"
        "483":
          description: DBSubnetGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBSubnetGroupNotFoundFault"
        "484":
          description: InvalidVPCNetworkStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidVPCNetworkStateFault"
        "485":
          description: InvalidDBSubnetGroupStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidDBSubnetGroupStateFault"
        "486":
          description: InvalidSubnet
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidSubnet"
        "487":
          description: DBClusterParameterGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBClusterParameterGroupNotFoundFault"
        "488":
          description: InvalidDBSecurityGroupStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidDBSecurityGroupStateFault"
        "489":
          description: InvalidDBInstanceStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidDBInstanceStateFault"
        "490":
          description: DBClusterAlreadyExistsFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBClusterAlreadyExistsFault"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - ModifyDBCluster
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2014-10-31
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                DBClusterIdentifier:
                  description: <p>The DB cluster identifier for the cluster that is being
                    modified. This parameter is not case sensitive.</p>
                    <p>Constraints:</p> <ul> <li> <p>Must match the identifier
                    of an existing <code>DBCluster</code>.</p> </li> </ul>
                  type: string
                NewDBClusterIdentifier:
                  description: "<p>The new DB cluster identifier for the DB cluster when
                    renaming a DB cluster. This value is stored as a lowercase
                    string.</p> <p>Constraints:</p> <ul> <li> <p>Must contain
                    from 1 to 63 letters, numbers, or hyphens.</p> </li> <li>
                    <p>The first character must be a letter.</p> </li> <li>
                    <p>Cannot end with a hyphen or contain two consecutive
                    hyphens.</p> </li> </ul> <p>Example:
                    <code>my-cluster2</code> </p>"
                  type: string
                ApplyImmediately:
                  description: "<p>A value that specifies whether the changes in this
                    request and any pending changes are asynchronously applied
                    as soon as possible, regardless of the
                    <code>PreferredMaintenanceWindow</code> setting for the DB
                    cluster. If this parameter is set to <code>false</code>,
                    changes to the DB cluster are applied during the next
                    maintenance window.</p> <p>The <code>ApplyImmediately</code>
                    parameter affects only the
                    <code>NewDBClusterIdentifier</code> and
                    <code>MasterUserPassword</code> values. If you set this
                    parameter value to <code>false</code>, the changes to the
                    <code>NewDBClusterIdentifier</code> and
                    <code>MasterUserPassword</code> values are applied during
                    the next maintenance window. All other changes are applied
                    immediately, regardless of the value of the
                    <code>ApplyImmediately</code> parameter.</p> <p>Default:
                    <code>false</code> </p>"
                  type: boolean
                BackupRetentionPeriod:
                  description: "<p>The number of days for which automated backups are
                    retained. You must specify a minimum value of 1.</p>
                    <p>Default: 1</p> <p>Constraints:</p> <ul> <li> <p>Must be a
                    value from 1 to 35.</p> </li> </ul>"
                  type: integer
                DBClusterParameterGroupName:
                  description: The name of the DB cluster parameter group to use for the DB
                    cluster.
                  type: string
                VpcSecurityGroupIds:
                  description: A list of virtual private cloud (VPC) security groups that
                    the DB cluster will belong to.
                  type: array
                  items:
                    type: string
                Port:
                  description: "<p>The port number on which the DB cluster accepts
                    connections.</p> <p>Constraints: Must be a value from
                    <code>1150</code> to <code>65535</code>. </p> <p>Default:
                    The same port as the original DB cluster.</p>"
                  type: integer
                MasterUserPassword:
                  description: '<p>The password for the master database user. This password
                    can contain any printable ASCII character except forward
                    slash (/), double quote ("), or the "at" symbol (@).</p>
                    <p>Constraints: Must contain from 8 to 100 characters.</p>'
                  type: string
                PreferredBackupWindow:
                  description: <p>The daily time range during which automated backups are
                    created if automated backups are enabled, using the
                    <code>BackupRetentionPeriod</code> parameter. </p> <p>The
                    default is a 30-minute window selected at random from an
                    8-hour block of time for each AWS Region. </p>
                    <p>Constraints:</p> <ul> <li> <p>Must be in the format
                    <code>hh24:mi-hh24:mi</code>.</p> </li> <li> <p>Must be in
                    Universal Coordinated Time (UTC).</p> </li> <li> <p>Must not
                    conflict with the preferred maintenance window.</p> </li>
                    <li> <p>Must be at least 30 minutes.</p> </li> </ul>
                  type: string
                PreferredMaintenanceWindow:
                  description: "<p>The weekly time range during which system maintenance
                    can occur, in Universal Coordinated Time (UTC).</p>
                    <p>Format: <code>ddd:hh24:mi-ddd:hh24:mi</code> </p> <p>The
                    default is a 30-minute window selected at random from an
                    8-hour block of time for each AWS Region, occurring on a
                    random day of the week. </p> <p>Valid days: Mon, Tue, Wed,
                    Thu, Fri, Sat, Sun</p> <p>Constraints: Minimum 30-minute
                    window.</p>"
                  type: string
                CloudwatchLogsExportConfiguration.EnableLogTypes:
                  description: >-
                    <p>The configuration setting for the log types to be enabled
                    for export to Amazon CloudWatch Logs for a specific DB
                    instance or DB cluster.</p> <p>The
                    <code>EnableLogTypes</code> and <code>DisableLogTypes</code>
                    arrays determine which logs are exported (or not exported)
                    to CloudWatch Logs. The values within these arrays depend on
                    the DB engine that is being used.</p>

                    The list of log types to enable.
                  type: array
                  items:
                    type: string
                CloudwatchLogsExportConfiguration.DisableLogTypes:
                  description: >-
                    <p>The configuration setting for the log types to be enabled
                    for export to Amazon CloudWatch Logs for a specific DB
                    instance or DB cluster.</p> <p>The
                    <code>EnableLogTypes</code> and <code>DisableLogTypes</code>
                    arrays determine which logs are exported (or not exported)
                    to CloudWatch Logs. The values within these arrays depend on
                    the DB engine that is being used.</p>

                    The list of log types to disable.
                  type: array
                  items:
                    type: string
                EngineVersion:
                  description: The version number of the database engine to which you want
                    to upgrade. Changing this parameter results in an outage.
                    The change is applied during the next maintenance window
                    unless the <code>ApplyImmediately</code> parameter is set to
                    <code>true</code>.
                  type: string
                DeletionProtection:
                  description: Specifies whether this cluster can be deleted. If
                    <code>DeletionProtection</code> is enabled, the cluster
                    cannot be deleted unless it is modified and
                    <code>DeletionProtection</code> is disabled.
                    <code>DeletionProtection</code> protects clusters from being
                    accidentally deleted.
                  type: boolean
              required:
                - DBClusterIdentifier
  /#Action=ModifyDBClusterParameterGroup:
    get:
      x-aws-operation-name: ModifyDBClusterParameterGroup
      operationId: GET ModifyDBClusterParameterGroup
      description: "<p> Modifies the parameters of a DB cluster parameter group. To modify
        more than one parameter, submit a list of the following:
        <code>ParameterName</code>, <code>ParameterValue</code>, and
        <code>ApplyMethod</code>. A maximum of 20 parameters can be modified in
        a single request. </p> <note> <p>Changes to dynamic parameters are
        applied immediately. Changes to static parameters require a reboot or
        maintenance window before the change can take effect.</p> </note>
        <important> <p>After you create a DB cluster parameter group, you should
        wait at least 5 minutes before creating your first DB cluster that uses
        that DB cluster parameter group as the default parameter group. This
        allows Amazon DocumentDB to fully complete the create action before the
        parameter group is used as the default for a new DB cluster. This step
        is especially important for parameters that are critical when creating
        the default database for a DB cluster, such as the character set for the
        default database defined by the <code>character_set_database</code>
        parameter.</p> </important>"
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBClusterParameterGroupNameMessage"
        "480":
          description: DBParameterGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBParameterGroupNotFoundFault"
        "481":
          description: InvalidDBParameterGroupStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidDBParameterGroupStateFault"
      parameters:
        - name: DBClusterParameterGroupName
          in: query
          required: true
          description: The name of the DB cluster parameter group to modify.
          schema:
            type: string
        - name: Parameters
          in: query
          required: true
          description: A list of parameters in the DB cluster parameter group to modify.
          schema:
            type: array
            items:
              type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - ModifyDBClusterParameterGroup
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2014-10-31
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: ModifyDBClusterParameterGroup
      operationId: POST ModifyDBClusterParameterGroup
      description: "<p> Modifies the parameters of a DB cluster parameter group. To modify
        more than one parameter, submit a list of the following:
        <code>ParameterName</code>, <code>ParameterValue</code>, and
        <code>ApplyMethod</code>. A maximum of 20 parameters can be modified in
        a single request. </p> <note> <p>Changes to dynamic parameters are
        applied immediately. Changes to static parameters require a reboot or
        maintenance window before the change can take effect.</p> </note>
        <important> <p>After you create a DB cluster parameter group, you should
        wait at least 5 minutes before creating your first DB cluster that uses
        that DB cluster parameter group as the default parameter group. This
        allows Amazon DocumentDB to fully complete the create action before the
        parameter group is used as the default for a new DB cluster. This step
        is especially important for parameters that are critical when creating
        the default database for a DB cluster, such as the character set for the
        default database defined by the <code>character_set_database</code>
        parameter.</p> </important>"
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBClusterParameterGroupNameMessage"
        "480":
          description: DBParameterGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBParameterGroupNotFoundFault"
        "481":
          description: InvalidDBParameterGroupStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidDBParameterGroupStateFault"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - ModifyDBClusterParameterGroup
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2014-10-31
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                DBClusterParameterGroupName:
                  description: The name of the DB cluster parameter group to modify.
                  type: string
                Parameters:
                  description: A list of parameters in the DB cluster parameter group to
                    modify.
                  type: array
                  items:
                    type: string
              required:
                - DBClusterParameterGroupName
                - Parameters
  /#Action=ModifyDBClusterSnapshotAttribute:
    get:
      x-aws-operation-name: ModifyDBClusterSnapshotAttribute
      operationId: GET ModifyDBClusterSnapshotAttribute
      description: <p>Adds an attribute and values to, or removes an attribute and values
        from, a manual DB cluster snapshot.</p> <p>To share a manual DB cluster
        snapshot with other AWS accounts, specify <code>restore</code> as the
        <code>AttributeName</code>, and use the <code>ValuesToAdd</code>
        parameter to add a list of IDs of the AWS accounts that are authorized
        to restore the manual DB cluster snapshot. Use the value
        <code>all</code> to make the manual DB cluster snapshot public, which
        means that it can be copied or restored by all AWS accounts. Do not add
        the <code>all</code> value for any manual DB cluster snapshots that
        contain private information that you don't want available to all AWS
        accounts. If a manual DB cluster snapshot is encrypted, it can be
        shared, but only by specifying a list of authorized AWS account IDs for
        the <code>ValuesToAdd</code> parameter. You can't use <code>all</code>
        as a value for that parameter in this case.</p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ModifyDBClusterSnapshotAttributeResult"
        "480":
          description: DBClusterSnapshotNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBClusterSnapshotNotFoundFault"
        "481":
          description: InvalidDBClusterSnapshotStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidDBClusterSnapshotStateFault"
        "482":
          description: SharedSnapshotQuotaExceededFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/SharedSnapshotQuotaExceededFault"
      parameters:
        - name: DBClusterSnapshotIdentifier
          in: query
          required: true
          description: The identifier for the DB cluster snapshot to modify the attributes
            for.
          schema:
            type: string
        - name: AttributeName
          in: query
          required: true
          description: <p>The name of the DB cluster snapshot attribute to modify.</p>
            <p>To manage authorization for other AWS accounts to copy or restore
            a manual DB cluster snapshot, set this value to
            <code>restore</code>.</p>
          schema:
            type: string
        - name: ValuesToAdd
          in: query
          required: false
          description: <p>A list of DB cluster snapshot attributes to add to the attribute
            specified by <code>AttributeName</code>.</p> <p>To authorize other
            AWS accounts to copy or restore a manual DB cluster snapshot, set
            this list to include one or more AWS account IDs. To make the manual
            DB cluster snapshot restorable by any AWS account, set it to
            <code>all</code>. Do not add the <code>all</code> value for any
            manual DB cluster snapshots that contain private information that
            you don't want to be available to all AWS accounts.</p>
          schema:
            type: array
            items:
              type: string
        - name: ValuesToRemove
          in: query
          required: false
          description: <p>A list of DB cluster snapshot attributes to remove from the
            attribute specified by <code>AttributeName</code>.</p> <p>To remove
            authorization for other AWS accounts to copy or restore a manual DB
            cluster snapshot, set this list to include one or more AWS account
            identifiers. To remove authorization for any AWS account to copy or
            restore the DB cluster snapshot, set it to <code>all</code> . If you
            specify <code>all</code>, an AWS account whose account ID is
            explicitly added to the <code>restore</code> attribute can still
            copy or restore a manual DB cluster snapshot.</p>
          schema:
            type: array
            items:
              type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - ModifyDBClusterSnapshotAttribute
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2014-10-31
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: ModifyDBClusterSnapshotAttribute
      operationId: POST ModifyDBClusterSnapshotAttribute
      description: <p>Adds an attribute and values to, or removes an attribute and values
        from, a manual DB cluster snapshot.</p> <p>To share a manual DB cluster
        snapshot with other AWS accounts, specify <code>restore</code> as the
        <code>AttributeName</code>, and use the <code>ValuesToAdd</code>
        parameter to add a list of IDs of the AWS accounts that are authorized
        to restore the manual DB cluster snapshot. Use the value
        <code>all</code> to make the manual DB cluster snapshot public, which
        means that it can be copied or restored by all AWS accounts. Do not add
        the <code>all</code> value for any manual DB cluster snapshots that
        contain private information that you don't want available to all AWS
        accounts. If a manual DB cluster snapshot is encrypted, it can be
        shared, but only by specifying a list of authorized AWS account IDs for
        the <code>ValuesToAdd</code> parameter. You can't use <code>all</code>
        as a value for that parameter in this case.</p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ModifyDBClusterSnapshotAttributeResult"
        "480":
          description: DBClusterSnapshotNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBClusterSnapshotNotFoundFault"
        "481":
          description: InvalidDBClusterSnapshotStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidDBClusterSnapshotStateFault"
        "482":
          description: SharedSnapshotQuotaExceededFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/SharedSnapshotQuotaExceededFault"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - ModifyDBClusterSnapshotAttribute
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2014-10-31
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                DBClusterSnapshotIdentifier:
                  description: The identifier for the DB cluster snapshot to modify the
                    attributes for.
                  type: string
                AttributeName:
                  description: <p>The name of the DB cluster snapshot attribute to
                    modify.</p> <p>To manage authorization for other AWS
                    accounts to copy or restore a manual DB cluster snapshot,
                    set this value to <code>restore</code>.</p>
                  type: string
                ValuesToAdd:
                  description: <p>A list of DB cluster snapshot attributes to add to the
                    attribute specified by <code>AttributeName</code>.</p> <p>To
                    authorize other AWS accounts to copy or restore a manual DB
                    cluster snapshot, set this list to include one or more AWS
                    account IDs. To make the manual DB cluster snapshot
                    restorable by any AWS account, set it to <code>all</code>.
                    Do not add the <code>all</code> value for any manual DB
                    cluster snapshots that contain private information that you
                    don't want to be available to all AWS accounts.</p>
                  type: array
                  items:
                    type: string
                ValuesToRemove:
                  description: <p>A list of DB cluster snapshot attributes to remove from
                    the attribute specified by <code>AttributeName</code>.</p>
                    <p>To remove authorization for other AWS accounts to copy or
                    restore a manual DB cluster snapshot, set this list to
                    include one or more AWS account identifiers. To remove
                    authorization for any AWS account to copy or restore the DB
                    cluster snapshot, set it to <code>all</code> . If you
                    specify <code>all</code>, an AWS account whose account ID is
                    explicitly added to the <code>restore</code> attribute can
                    still copy or restore a manual DB cluster snapshot.</p>
                  type: array
                  items:
                    type: string
              required:
                - DBClusterSnapshotIdentifier
                - AttributeName
  /#Action=ModifyDBInstance:
    get:
      x-aws-operation-name: ModifyDBInstance
      operationId: GET ModifyDBInstance
      description: Modifies settings for a DB instance. You can change one or more database
        configuration parameters by specifying these parameters and the new
        values in the request.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ModifyDBInstanceResult"
        "480":
          description: InvalidDBInstanceStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidDBInstanceStateFault"
        "481":
          description: InvalidDBSecurityGroupStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidDBSecurityGroupStateFault"
        "482":
          description: DBInstanceAlreadyExistsFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBInstanceAlreadyExistsFault"
        "483":
          description: DBInstanceNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBInstanceNotFoundFault"
        "484":
          description: DBSecurityGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBSecurityGroupNotFoundFault"
        "485":
          description: DBParameterGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBParameterGroupNotFoundFault"
        "486":
          description: InsufficientDBInstanceCapacityFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InsufficientDBInstanceCapacityFault"
        "487":
          description: StorageQuotaExceededFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/StorageQuotaExceededFault"
        "488":
          description: InvalidVPCNetworkStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidVPCNetworkStateFault"
        "489":
          description: DBUpgradeDependencyFailureFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBUpgradeDependencyFailureFault"
        "490":
          description: StorageTypeNotSupportedFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/StorageTypeNotSupportedFault"
        "491":
          description: AuthorizationNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/AuthorizationNotFoundFault"
        "492":
          description: CertificateNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/CertificateNotFoundFault"
      parameters:
        - name: DBInstanceIdentifier
          in: query
          required: true
          description: <p>The DB instance identifier. This value is stored as a lowercase
            string.</p> <p>Constraints:</p> <ul> <li> <p>Must match the
            identifier of an existing <code>DBInstance</code>.</p> </li> </ul>
          schema:
            type: string
        - name: DBInstanceClass
          in: query
          required: false
          description: "<p>The new compute and memory capacity of the DB instance; for
            example, <code>db.r5.large</code>. Not all DB instance classes are
            available in all AWS Regions. </p> <p>If you modify the DB instance
            class, an outage occurs during the change. The change is applied
            during the next maintenance window, unless
            <code>ApplyImmediately</code> is specified as <code>true</code> for
            this request. </p> <p>Default: Uses existing setting.</p>"
          schema:
            type: string
        - name: ApplyImmediately
          in: query
          required: false
          description: "<p>Specifies whether the modifications in this request and any
            pending modifications are asynchronously applied as soon as
            possible, regardless of the <code>PreferredMaintenanceWindow</code>
            setting for the DB instance. </p> <p> If this parameter is set to
            <code>false</code>, changes to the DB instance are applied during
            the next maintenance window. Some parameter changes can cause an
            outage and are applied on the next reboot.</p> <p>Default:
            <code>false</code> </p>"
          schema:
            type: boolean
        - name: PreferredMaintenanceWindow
          in: query
          required: false
          description: "<p>The weekly time range (in UTC) during which system maintenance
            can occur, which might result in an outage. Changing this parameter
            doesn't result in an outage except in the following situation, and
            the change is asynchronously applied as soon as possible. If there
            are pending actions that cause a reboot, and the maintenance window
            is changed to include the current time, changing this parameter
            causes a reboot of the DB instance. If you are moving this window to
            the current time, there must be at least 30 minutes between the
            current time and end of the window to ensure that pending changes
            are applied.</p> <p>Default: Uses existing setting.</p> <p>Format:
            <code>ddd:hh24:mi-ddd:hh24:mi</code> </p> <p>Valid days: Mon, Tue,
            Wed, Thu, Fri, Sat, Sun</p> <p>Constraints: Must be at least 30
            minutes.</p>"
          schema:
            type: string
        - name: AutoMinorVersionUpgrade
          in: query
          required: false
          description: "Indicates that minor version upgrades are applied automatically to
            the DB instance during the maintenance window. Changing this
            parameter doesn't result in an outage except in the following case,
            and the change is asynchronously applied as soon as possible. An
            outage results if this parameter is set to <code>true</code> during
            the maintenance window, and a newer minor version is available, and
            Amazon DocumentDB has enabled automatic patching for that engine
            version. "
          schema:
            type: boolean
        - name: NewDBInstanceIdentifier
          in: query
          required: false
          description: "<p> The new DB instance identifier for the DB instance when
            renaming a DB instance. When you change the DB instance identifier,
            an instance reboot occurs immediately if you set <code>Apply
            Immediately</code> to <code>true</code>. It occurs during the next
            maintenance window if you set <code>Apply Immediately</code> to
            <code>false</code>. This value is stored as a lowercase string. </p>
            <p>Constraints:</p> <ul> <li> <p>Must contain from 1 to 63 letters,
            numbers, or hyphens.</p> </li> <li> <p>The first character must be a
            letter.</p> </li> <li> <p>Cannot end with a hyphen or contain two
            consecutive hyphens.</p> </li> </ul> <p>Example:
            <code>mydbinstance</code> </p>"
          schema:
            type: string
        - name: CACertificateIdentifier
          in: query
          required: false
          description: Indicates the certificate that needs to be associated with the
            instance.
          schema:
            type: string
        - name: PromotionTier
          in: query
          required: false
          description: "<p>A value that specifies the order in which an Amazon DocumentDB
            replica is promoted to the primary instance after a failure of the
            existing primary instance.</p> <p>Default: 1</p> <p>Valid values:
            0-15</p>"
          schema:
            type: integer
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - ModifyDBInstance
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2014-10-31
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: ModifyDBInstance
      operationId: POST ModifyDBInstance
      description: Modifies settings for a DB instance. You can change one or more database
        configuration parameters by specifying these parameters and the new
        values in the request.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ModifyDBInstanceResult"
        "480":
          description: InvalidDBInstanceStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidDBInstanceStateFault"
        "481":
          description: InvalidDBSecurityGroupStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidDBSecurityGroupStateFault"
        "482":
          description: DBInstanceAlreadyExistsFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBInstanceAlreadyExistsFault"
        "483":
          description: DBInstanceNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBInstanceNotFoundFault"
        "484":
          description: DBSecurityGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBSecurityGroupNotFoundFault"
        "485":
          description: DBParameterGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBParameterGroupNotFoundFault"
        "486":
          description: InsufficientDBInstanceCapacityFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InsufficientDBInstanceCapacityFault"
        "487":
          description: StorageQuotaExceededFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/StorageQuotaExceededFault"
        "488":
          description: InvalidVPCNetworkStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidVPCNetworkStateFault"
        "489":
          description: DBUpgradeDependencyFailureFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBUpgradeDependencyFailureFault"
        "490":
          description: StorageTypeNotSupportedFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/StorageTypeNotSupportedFault"
        "491":
          description: AuthorizationNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/AuthorizationNotFoundFault"
        "492":
          description: CertificateNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/CertificateNotFoundFault"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - ModifyDBInstance
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2014-10-31
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                DBInstanceIdentifier:
                  description: <p>The DB instance identifier. This value is stored as a
                    lowercase string.</p> <p>Constraints:</p> <ul> <li> <p>Must
                    match the identifier of an existing
                    <code>DBInstance</code>.</p> </li> </ul>
                  type: string
                DBInstanceClass:
                  description: "<p>The new compute and memory capacity of the DB instance;
                    for example, <code>db.r5.large</code>. Not all DB instance
                    classes are available in all AWS Regions. </p> <p>If you
                    modify the DB instance class, an outage occurs during the
                    change. The change is applied during the next maintenance
                    window, unless <code>ApplyImmediately</code> is specified as
                    <code>true</code> for this request. </p> <p>Default: Uses
                    existing setting.</p>"
                  type: string
                ApplyImmediately:
                  description: "<p>Specifies whether the modifications in this request and
                    any pending modifications are asynchronously applied as soon
                    as possible, regardless of the
                    <code>PreferredMaintenanceWindow</code> setting for the DB
                    instance. </p> <p> If this parameter is set to
                    <code>false</code>, changes to the DB instance are applied
                    during the next maintenance window. Some parameter changes
                    can cause an outage and are applied on the next reboot.</p>
                    <p>Default: <code>false</code> </p>"
                  type: boolean
                PreferredMaintenanceWindow:
                  description: "<p>The weekly time range (in UTC) during which system
                    maintenance can occur, which might result in an outage.
                    Changing this parameter doesn't result in an outage except
                    in the following situation, and the change is asynchronously
                    applied as soon as possible. If there are pending actions
                    that cause a reboot, and the maintenance window is changed
                    to include the current time, changing this parameter causes
                    a reboot of the DB instance. If you are moving this window
                    to the current time, there must be at least 30 minutes
                    between the current time and end of the window to ensure
                    that pending changes are applied.</p> <p>Default: Uses
                    existing setting.</p> <p>Format:
                    <code>ddd:hh24:mi-ddd:hh24:mi</code> </p> <p>Valid days:
                    Mon, Tue, Wed, Thu, Fri, Sat, Sun</p> <p>Constraints: Must
                    be at least 30 minutes.</p>"
                  type: string
                AutoMinorVersionUpgrade:
                  description: "Indicates that minor version upgrades are applied
                    automatically to the DB instance during the maintenance
                    window. Changing this parameter doesn't result in an outage
                    except in the following case, and the change is
                    asynchronously applied as soon as possible. An outage
                    results if this parameter is set to <code>true</code> during
                    the maintenance window, and a newer minor version is
                    available, and Amazon DocumentDB has enabled automatic
                    patching for that engine version. "
                  type: boolean
                NewDBInstanceIdentifier:
                  description: "<p> The new DB instance identifier for the DB instance when
                    renaming a DB instance. When you change the DB instance
                    identifier, an instance reboot occurs immediately if you set
                    <code>Apply Immediately</code> to <code>true</code>. It
                    occurs during the next maintenance window if you set
                    <code>Apply Immediately</code> to <code>false</code>. This
                    value is stored as a lowercase string. </p>
                    <p>Constraints:</p> <ul> <li> <p>Must contain from 1 to 63
                    letters, numbers, or hyphens.</p> </li> <li> <p>The first
                    character must be a letter.</p> </li> <li> <p>Cannot end
                    with a hyphen or contain two consecutive hyphens.</p> </li>
                    </ul> <p>Example: <code>mydbinstance</code> </p>"
                  type: string
                CACertificateIdentifier:
                  description: Indicates the certificate that needs to be associated with
                    the instance.
                  type: string
                PromotionTier:
                  description: "<p>A value that specifies the order in which an Amazon
                    DocumentDB replica is promoted to the primary instance after
                    a failure of the existing primary instance.</p> <p>Default:
                    1</p> <p>Valid values: 0-15</p>"
                  type: integer
              required:
                - DBInstanceIdentifier
  /#Action=ModifyDBSubnetGroup:
    get:
      x-aws-operation-name: ModifyDBSubnetGroup
      operationId: GET ModifyDBSubnetGroup
      description: Modifies an existing DB subnet group. DB subnet groups must contain at
        least one subnet in at least two Availability Zones in the AWS Region.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ModifyDBSubnetGroupResult"
        "480":
          description: DBSubnetGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBSubnetGroupNotFoundFault"
        "481":
          description: DBSubnetQuotaExceededFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBSubnetQuotaExceededFault"
        "482":
          description: SubnetAlreadyInUse
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/SubnetAlreadyInUse"
        "483":
          description: DBSubnetGroupDoesNotCoverEnoughAZs
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBSubnetGroupDoesNotCoverEnoughAZs"
        "484":
          description: InvalidSubnet
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidSubnet"
      parameters:
        - name: DBSubnetGroupName
          in: query
          required: true
          description: "<p>The name for the DB subnet group. This value is stored as a
            lowercase string. You can't modify the default subnet group. </p>
            <p>Constraints: Must match the name of an existing
            <code>DBSubnetGroup</code>. Must not be default.</p> <p>Example:
            <code>mySubnetgroup</code> </p>"
          schema:
            type: string
        - name: DBSubnetGroupDescription
          in: query
          required: false
          description: The description for the DB subnet group.
          schema:
            type: string
        - name: SubnetIds
          in: query
          required: true
          description: The Amazon EC2 subnet IDs for the DB subnet group.
          schema:
            type: array
            items:
              type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - ModifyDBSubnetGroup
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2014-10-31
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: ModifyDBSubnetGroup
      operationId: POST ModifyDBSubnetGroup
      description: Modifies an existing DB subnet group. DB subnet groups must contain at
        least one subnet in at least two Availability Zones in the AWS Region.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ModifyDBSubnetGroupResult"
        "480":
          description: DBSubnetGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBSubnetGroupNotFoundFault"
        "481":
          description: DBSubnetQuotaExceededFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBSubnetQuotaExceededFault"
        "482":
          description: SubnetAlreadyInUse
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/SubnetAlreadyInUse"
        "483":
          description: DBSubnetGroupDoesNotCoverEnoughAZs
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBSubnetGroupDoesNotCoverEnoughAZs"
        "484":
          description: InvalidSubnet
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidSubnet"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - ModifyDBSubnetGroup
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2014-10-31
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                DBSubnetGroupName:
                  description: "<p>The name for the DB subnet group. This value is stored
                    as a lowercase string. You can't modify the default subnet
                    group. </p> <p>Constraints: Must match the name of an
                    existing <code>DBSubnetGroup</code>. Must not be
                    default.</p> <p>Example: <code>mySubnetgroup</code> </p>"
                  type: string
                DBSubnetGroupDescription:
                  description: The description for the DB subnet group.
                  type: string
                SubnetIds:
                  description: The Amazon EC2 subnet IDs for the DB subnet group.
                  type: array
                  items:
                    type: string
              required:
                - DBSubnetGroupName
                - SubnetIds
  /#Action=RebootDBInstance:
    get:
      x-aws-operation-name: RebootDBInstance
      operationId: GET RebootDBInstance
      description: <p>You might need to reboot your DB instance, usually for maintenance
        reasons. For example, if you make certain changes, or if you change the
        DB cluster parameter group that is associated with the DB instance, you
        must reboot the instance for the changes to take effect. </p>
        <p>Rebooting a DB instance restarts the database engine service.
        Rebooting a DB instance results in a momentary outage, during which the
        DB instance status is set to <i>rebooting</i>. </p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/RebootDBInstanceResult"
        "480":
          description: InvalidDBInstanceStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidDBInstanceStateFault"
        "481":
          description: DBInstanceNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBInstanceNotFoundFault"
      parameters:
        - name: DBInstanceIdentifier
          in: query
          required: true
          description: <p>The DB instance identifier. This parameter is stored as a
            lowercase string.</p> <p>Constraints:</p> <ul> <li> <p>Must match
            the identifier of an existing <code>DBInstance</code>.</p> </li>
            </ul>
          schema:
            type: string
        - name: ForceFailover
          in: query
          required: false
          description: "<p> When <code>true</code>, the reboot is conducted through a
            Multi-AZ failover. </p> <p>Constraint: You can't specify
            <code>true</code> if the instance is not configured for
            Multi-AZ.</p>"
          schema:
            type: boolean
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - RebootDBInstance
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2014-10-31
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: RebootDBInstance
      operationId: POST RebootDBInstance
      description: <p>You might need to reboot your DB instance, usually for maintenance
        reasons. For example, if you make certain changes, or if you change the
        DB cluster parameter group that is associated with the DB instance, you
        must reboot the instance for the changes to take effect. </p>
        <p>Rebooting a DB instance restarts the database engine service.
        Rebooting a DB instance results in a momentary outage, during which the
        DB instance status is set to <i>rebooting</i>. </p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/RebootDBInstanceResult"
        "480":
          description: InvalidDBInstanceStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidDBInstanceStateFault"
        "481":
          description: DBInstanceNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBInstanceNotFoundFault"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - RebootDBInstance
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2014-10-31
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                DBInstanceIdentifier:
                  description: <p>The DB instance identifier. This parameter is stored as a
                    lowercase string.</p> <p>Constraints:</p> <ul> <li> <p>Must
                    match the identifier of an existing
                    <code>DBInstance</code>.</p> </li> </ul>
                  type: string
                ForceFailover:
                  description: "<p> When <code>true</code>, the reboot is conducted through
                    a Multi-AZ failover. </p> <p>Constraint: You can't specify
                    <code>true</code> if the instance is not configured for
                    Multi-AZ.</p>"
                  type: boolean
              required:
                - DBInstanceIdentifier
  /#Action=RemoveTagsFromResource:
    get:
      x-aws-operation-name: RemoveTagsFromResource
      operationId: GET RemoveTagsFromResource
      description: Removes metadata tags from an Amazon DocumentDB resource.
      responses:
        "200":
          description: Success
        "480":
          description: DBInstanceNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBInstanceNotFoundFault"
        "481":
          description: DBSnapshotNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBSnapshotNotFoundFault"
        "482":
          description: DBClusterNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBClusterNotFoundFault"
      parameters:
        - name: ResourceName
          in: query
          required: true
          description: The Amazon DocumentDB resource that the tags are removed from. This
            value is an Amazon Resource Name (ARN).
          schema:
            type: string
        - name: TagKeys
          in: query
          required: true
          description: The tag key (name) of the tag to be removed.
          schema:
            type: array
            items:
              type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - RemoveTagsFromResource
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2014-10-31
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: RemoveTagsFromResource
      operationId: POST RemoveTagsFromResource
      description: Removes metadata tags from an Amazon DocumentDB resource.
      responses:
        "200":
          description: Success
        "480":
          description: DBInstanceNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBInstanceNotFoundFault"
        "481":
          description: DBSnapshotNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBSnapshotNotFoundFault"
        "482":
          description: DBClusterNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBClusterNotFoundFault"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - RemoveTagsFromResource
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2014-10-31
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                ResourceName:
                  description: The Amazon DocumentDB resource that the tags are removed
                    from. This value is an Amazon Resource Name (ARN).
                  type: string
                TagKeys:
                  description: The tag key (name) of the tag to be removed.
                  type: array
                  items:
                    type: string
              required:
                - ResourceName
                - TagKeys
  /#Action=ResetDBClusterParameterGroup:
    get:
      x-aws-operation-name: ResetDBClusterParameterGroup
      operationId: GET ResetDBClusterParameterGroup
      description: "<p> Modifies the parameters of a DB cluster parameter group to the
        default value. To reset specific parameters, submit a list of the
        following: <code>ParameterName</code> and <code>ApplyMethod</code>. To
        reset the entire DB cluster parameter group, specify the
        <code>DBClusterParameterGroupName</code> and
        <code>ResetAllParameters</code> parameters. </p> <p> When you reset the
        entire group, dynamic parameters are updated immediately and static
        parameters are set to <code>pending-reboot</code> to take effect on the
        next DB instance reboot.</p>"
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBClusterParameterGroupNameMessage"
        "480":
          description: InvalidDBParameterGroupStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidDBParameterGroupStateFault"
        "481":
          description: DBParameterGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBParameterGroupNotFoundFault"
      parameters:
        - name: DBClusterParameterGroupName
          in: query
          required: true
          description: The name of the DB cluster parameter group to reset.
          schema:
            type: string
        - name: ResetAllParameters
          in: query
          required: false
          description: A value that is set to <code>true</code> to reset all parameters in
            the DB cluster parameter group to their default values, and
            <code>false</code> otherwise. You can't use this parameter if there
            is a list of parameter names specified for the
            <code>Parameters</code> parameter.
          schema:
            type: boolean
        - name: Parameters
          in: query
          required: false
          description: A list of parameter names in the DB cluster parameter group to reset
            to the default values. You can't use this parameter if the
            <code>ResetAllParameters</code> parameter is set to
            <code>true</code>.
          schema:
            type: array
            items:
              type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - ResetDBClusterParameterGroup
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2014-10-31
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: ResetDBClusterParameterGroup
      operationId: POST ResetDBClusterParameterGroup
      description: "<p> Modifies the parameters of a DB cluster parameter group to the
        default value. To reset specific parameters, submit a list of the
        following: <code>ParameterName</code> and <code>ApplyMethod</code>. To
        reset the entire DB cluster parameter group, specify the
        <code>DBClusterParameterGroupName</code> and
        <code>ResetAllParameters</code> parameters. </p> <p> When you reset the
        entire group, dynamic parameters are updated immediately and static
        parameters are set to <code>pending-reboot</code> to take effect on the
        next DB instance reboot.</p>"
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBClusterParameterGroupNameMessage"
        "480":
          description: InvalidDBParameterGroupStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidDBParameterGroupStateFault"
        "481":
          description: DBParameterGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBParameterGroupNotFoundFault"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - ResetDBClusterParameterGroup
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2014-10-31
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                DBClusterParameterGroupName:
                  description: The name of the DB cluster parameter group to reset.
                  type: string
                ResetAllParameters:
                  description: A value that is set to <code>true</code> to reset all
                    parameters in the DB cluster parameter group to their
                    default values, and <code>false</code> otherwise. You can't
                    use this parameter if there is a list of parameter names
                    specified for the <code>Parameters</code> parameter.
                  type: boolean
                Parameters:
                  description: A list of parameter names in the DB cluster parameter group
                    to reset to the default values. You can't use this parameter
                    if the <code>ResetAllParameters</code> parameter is set to
                    <code>true</code>.
                  type: array
                  items:
                    type: string
              required:
                - DBClusterParameterGroupName
  /#Action=RestoreDBClusterFromSnapshot:
    get:
      x-aws-operation-name: RestoreDBClusterFromSnapshot
      operationId: GET RestoreDBClusterFromSnapshot
      description: <p>Creates a new DB cluster from a DB snapshot or DB cluster
        snapshot.</p> <p>If a DB snapshot is specified, the target DB cluster is
        created from the source DB snapshot with a default configuration and
        default security group.</p> <p>If a DB cluster snapshot is specified,
        the target DB cluster is created from the source DB cluster restore
        point with the same configuration as the original source DB cluster,
        except that the new DB cluster is created with the default security
        group.</p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/RestoreDBClusterFromSnapshotResult"
        "480":
          description: DBClusterAlreadyExistsFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBClusterAlreadyExistsFault"
        "481":
          description: DBClusterQuotaExceededFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBClusterQuotaExceededFault"
        "482":
          description: StorageQuotaExceededFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/StorageQuotaExceededFault"
        "483":
          description: DBSubnetGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBSubnetGroupNotFoundFault"
        "484":
          description: DBSnapshotNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBSnapshotNotFoundFault"
        "485":
          description: DBClusterSnapshotNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBClusterSnapshotNotFoundFault"
        "486":
          description: InsufficientDBClusterCapacityFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InsufficientDBClusterCapacityFault"
        "487":
          description: InsufficientStorageClusterCapacityFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InsufficientStorageClusterCapacityFault"
        "488":
          description: InvalidDBSnapshotStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidDBSnapshotStateFault"
        "489":
          description: InvalidDBClusterSnapshotStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidDBClusterSnapshotStateFault"
        "490":
          description: StorageQuotaExceededFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/StorageQuotaExceededFault"
        "491":
          description: InvalidVPCNetworkStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidVPCNetworkStateFault"
        "492":
          description: InvalidRestoreFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidRestoreFault"
        "493":
          description: DBSubnetGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBSubnetGroupNotFoundFault"
        "494":
          description: InvalidSubnet
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidSubnet"
        "495":
          description: KMSKeyNotAccessibleFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/KMSKeyNotAccessibleFault"
      parameters:
        - name: AvailabilityZones
          in: query
          required: false
          description: Provides the list of Amazon EC2 Availability Zones that instances in
            the restored DB cluster can be created in.
          schema:
            type: array
            items:
              type: string
        - name: DBClusterIdentifier
          in: query
          required: true
          description: "<p>The name of the DB cluster to create from the DB snapshot or DB
            cluster snapshot. This parameter isn't case sensitive.</p>
            <p>Constraints:</p> <ul> <li> <p>Must contain from 1 to 63 letters,
            numbers, or hyphens.</p> </li> <li> <p>The first character must be a
            letter.</p> </li> <li> <p>Cannot end with a hyphen or contain two
            consecutive hyphens.</p> </li> </ul> <p>Example:
            <code>my-snapshot-id</code> </p>"
          schema:
            type: string
        - name: SnapshotIdentifier
          in: query
          required: true
          description: <p>The identifier for the DB snapshot or DB cluster snapshot to
            restore from.</p> <p>You can use either the name or the Amazon
            Resource Name (ARN) to specify a DB cluster snapshot. However, you
            can use only the ARN to specify a DB snapshot.</p>
            <p>Constraints:</p> <ul> <li> <p>Must match the identifier of an
            existing snapshot.</p> </li> </ul>
          schema:
            type: string
        - name: Engine
          in: query
          required: true
          description: "<p>The database engine to use for the new DB cluster.</p>
            <p>Default: The same as source.</p> <p>Constraint: Must be
            compatible with the engine of the source.</p>"
          schema:
            type: string
        - name: EngineVersion
          in: query
          required: false
          description: The version of the database engine to use for the new DB cluster.
          schema:
            type: string
        - name: Port
          in: query
          required: false
          description: "<p>The port number on which the new DB cluster accepts
            connections.</p> <p>Constraints: Must be a value from
            <code>1150</code> to <code>65535</code>.</p> <p>Default: The same
            port as the original DB cluster.</p>"
          schema:
            type: integer
        - name: DBSubnetGroupName
          in: query
          required: false
          description: "<p>The name of the DB subnet group to use for the new DB
            cluster.</p> <p>Constraints: If provided, must match the name of an
            existing <code>DBSubnetGroup</code>.</p> <p>Example:
            <code>mySubnetgroup</code> </p>"
          schema:
            type: string
        - name: VpcSecurityGroupIds
          in: query
          required: false
          description: A list of virtual private cloud (VPC) security groups that the new
            DB cluster will belong to.
          schema:
            type: array
            items:
              type: string
        - name: Tags
          in: query
          required: false
          description: The tags to be assigned to the restored DB cluster.
          schema:
            type: array
            items:
              type: string
        - name: KmsKeyId
          in: query
          required: false
          description: <p>The AWS KMS key identifier to use when restoring an encrypted DB
            cluster from a DB snapshot or DB cluster snapshot.</p> <p>The AWS
            KMS key identifier is the Amazon Resource Name (ARN) for the AWS KMS
            encryption key. If you are restoring a DB cluster with the same AWS
            account that owns the AWS KMS encryption key used to encrypt the new
            DB cluster, then you can use the AWS KMS key alias instead of the
            ARN for the AWS KMS encryption key.</p> <p>If you do not specify a
            value for the <code>KmsKeyId</code> parameter, then the following
            occurs:</p> <ul> <li> <p>If the DB snapshot or DB cluster snapshot
            in <code>SnapshotIdentifier</code> is encrypted, then the restored
            DB cluster is encrypted using the AWS KMS key that was used to
            encrypt the DB snapshot or the DB cluster snapshot.</p> </li> <li>
            <p>If the DB snapshot or the DB cluster snapshot in
            <code>SnapshotIdentifier</code> is not encrypted, then the restored
            DB cluster is not encrypted.</p> </li> </ul>
          schema:
            type: string
        - name: EnableCloudwatchLogsExports
          in: query
          required: false
          description: A list of log types that must be enabled for exporting to Amazon
            CloudWatch Logs.
          schema:
            type: array
            items:
              type: string
        - name: DeletionProtection
          in: query
          required: false
          description: Specifies whether this cluster can be deleted. If
            <code>DeletionProtection</code> is enabled, the cluster cannot be
            deleted unless it is modified and <code>DeletionProtection</code> is
            disabled. <code>DeletionProtection</code> protects clusters from
            being accidentally deleted.
          schema:
            type: boolean
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - RestoreDBClusterFromSnapshot
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2014-10-31
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: RestoreDBClusterFromSnapshot
      operationId: POST RestoreDBClusterFromSnapshot
      description: <p>Creates a new DB cluster from a DB snapshot or DB cluster
        snapshot.</p> <p>If a DB snapshot is specified, the target DB cluster is
        created from the source DB snapshot with a default configuration and
        default security group.</p> <p>If a DB cluster snapshot is specified,
        the target DB cluster is created from the source DB cluster restore
        point with the same configuration as the original source DB cluster,
        except that the new DB cluster is created with the default security
        group.</p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/RestoreDBClusterFromSnapshotResult"
        "480":
          description: DBClusterAlreadyExistsFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBClusterAlreadyExistsFault"
        "481":
          description: DBClusterQuotaExceededFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBClusterQuotaExceededFault"
        "482":
          description: StorageQuotaExceededFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/StorageQuotaExceededFault"
        "483":
          description: DBSubnetGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBSubnetGroupNotFoundFault"
        "484":
          description: DBSnapshotNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBSnapshotNotFoundFault"
        "485":
          description: DBClusterSnapshotNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBClusterSnapshotNotFoundFault"
        "486":
          description: InsufficientDBClusterCapacityFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InsufficientDBClusterCapacityFault"
        "487":
          description: InsufficientStorageClusterCapacityFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InsufficientStorageClusterCapacityFault"
        "488":
          description: InvalidDBSnapshotStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidDBSnapshotStateFault"
        "489":
          description: InvalidDBClusterSnapshotStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidDBClusterSnapshotStateFault"
        "490":
          description: StorageQuotaExceededFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/StorageQuotaExceededFault"
        "491":
          description: InvalidVPCNetworkStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidVPCNetworkStateFault"
        "492":
          description: InvalidRestoreFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidRestoreFault"
        "493":
          description: DBSubnetGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBSubnetGroupNotFoundFault"
        "494":
          description: InvalidSubnet
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidSubnet"
        "495":
          description: KMSKeyNotAccessibleFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/KMSKeyNotAccessibleFault"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - RestoreDBClusterFromSnapshot
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2014-10-31
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                AvailabilityZones:
                  description: Provides the list of Amazon EC2 Availability Zones that
                    instances in the restored DB cluster can be created in.
                  type: array
                  items:
                    type: string
                DBClusterIdentifier:
                  description: "<p>The name of the DB cluster to create from the DB
                    snapshot or DB cluster snapshot. This parameter isn't case
                    sensitive.</p> <p>Constraints:</p> <ul> <li> <p>Must contain
                    from 1 to 63 letters, numbers, or hyphens.</p> </li> <li>
                    <p>The first character must be a letter.</p> </li> <li>
                    <p>Cannot end with a hyphen or contain two consecutive
                    hyphens.</p> </li> </ul> <p>Example:
                    <code>my-snapshot-id</code> </p>"
                  type: string
                SnapshotIdentifier:
                  description: <p>The identifier for the DB snapshot or DB cluster snapshot
                    to restore from.</p> <p>You can use either the name or the
                    Amazon Resource Name (ARN) to specify a DB cluster snapshot.
                    However, you can use only the ARN to specify a DB
                    snapshot.</p> <p>Constraints:</p> <ul> <li> <p>Must match
                    the identifier of an existing snapshot.</p> </li> </ul>
                  type: string
                Engine:
                  description: "<p>The database engine to use for the new DB cluster.</p>
                    <p>Default: The same as source.</p> <p>Constraint: Must be
                    compatible with the engine of the source.</p>"
                  type: string
                EngineVersion:
                  description: The version of the database engine to use for the new DB
                    cluster.
                  type: string
                Port:
                  description: "<p>The port number on which the new DB cluster accepts
                    connections.</p> <p>Constraints: Must be a value from
                    <code>1150</code> to <code>65535</code>.</p> <p>Default: The
                    same port as the original DB cluster.</p>"
                  type: integer
                DBSubnetGroupName:
                  description: "<p>The name of the DB subnet group to use for the new DB
                    cluster.</p> <p>Constraints: If provided, must match the
                    name of an existing <code>DBSubnetGroup</code>.</p>
                    <p>Example: <code>mySubnetgroup</code> </p>"
                  type: string
                VpcSecurityGroupIds:
                  description: A list of virtual private cloud (VPC) security groups that
                    the new DB cluster will belong to.
                  type: array
                  items:
                    type: string
                Tags:
                  description: The tags to be assigned to the restored DB cluster.
                  type: array
                  items:
                    type: string
                KmsKeyId:
                  description: <p>The AWS KMS key identifier to use when restoring an
                    encrypted DB cluster from a DB snapshot or DB cluster
                    snapshot.</p> <p>The AWS KMS key identifier is the Amazon
                    Resource Name (ARN) for the AWS KMS encryption key. If you
                    are restoring a DB cluster with the same AWS account that
                    owns the AWS KMS encryption key used to encrypt the new DB
                    cluster, then you can use the AWS KMS key alias instead of
                    the ARN for the AWS KMS encryption key.</p> <p>If you do not
                    specify a value for the <code>KmsKeyId</code> parameter,
                    then the following occurs:</p> <ul> <li> <p>If the DB
                    snapshot or DB cluster snapshot in
                    <code>SnapshotIdentifier</code> is encrypted, then the
                    restored DB cluster is encrypted using the AWS KMS key that
                    was used to encrypt the DB snapshot or the DB cluster
                    snapshot.</p> </li> <li> <p>If the DB snapshot or the DB
                    cluster snapshot in <code>SnapshotIdentifier</code> is not
                    encrypted, then the restored DB cluster is not
                    encrypted.</p> </li> </ul>
                  type: string
                EnableCloudwatchLogsExports:
                  description: A list of log types that must be enabled for exporting to
                    Amazon CloudWatch Logs.
                  type: array
                  items:
                    type: string
                DeletionProtection:
                  description: Specifies whether this cluster can be deleted. If
                    <code>DeletionProtection</code> is enabled, the cluster
                    cannot be deleted unless it is modified and
                    <code>DeletionProtection</code> is disabled.
                    <code>DeletionProtection</code> protects clusters from being
                    accidentally deleted.
                  type: boolean
              required:
                - DBClusterIdentifier
                - SnapshotIdentifier
                - Engine
  /#Action=RestoreDBClusterToPointInTime:
    get:
      x-aws-operation-name: RestoreDBClusterToPointInTime
      operationId: GET RestoreDBClusterToPointInTime
      description: "Restores a DB cluster to an arbitrary point in time. Users can restore
        to any point in time before <code>LatestRestorableTime</code> for up to
        <code>BackupRetentionPeriod</code> days. The target DB cluster is
        created from the source DB cluster with the same configuration as the
        original DB cluster, except that the new DB cluster is created with the
        default DB security group. "
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/RestoreDBClusterToPointInTimeResult"
        "480":
          description: DBClusterAlreadyExistsFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBClusterAlreadyExistsFault"
        "481":
          description: DBClusterNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBClusterNotFoundFault"
        "482":
          description: DBClusterQuotaExceededFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBClusterQuotaExceededFault"
        "483":
          description: DBClusterSnapshotNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBClusterSnapshotNotFoundFault"
        "484":
          description: DBSubnetGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBSubnetGroupNotFoundFault"
        "485":
          description: InsufficientDBClusterCapacityFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InsufficientDBClusterCapacityFault"
        "486":
          description: InsufficientStorageClusterCapacityFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InsufficientStorageClusterCapacityFault"
        "487":
          description: InvalidDBClusterSnapshotStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidDBClusterSnapshotStateFault"
        "488":
          description: InvalidDBClusterStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidDBClusterStateFault"
        "489":
          description: InvalidDBSnapshotStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidDBSnapshotStateFault"
        "490":
          description: InvalidRestoreFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidRestoreFault"
        "491":
          description: InvalidSubnet
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidSubnet"
        "492":
          description: InvalidVPCNetworkStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidVPCNetworkStateFault"
        "493":
          description: KMSKeyNotAccessibleFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/KMSKeyNotAccessibleFault"
        "494":
          description: StorageQuotaExceededFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/StorageQuotaExceededFault"
      parameters:
        - name: DBClusterIdentifier
          in: query
          required: true
          description: <p>The name of the new DB cluster to be created.</p>
            <p>Constraints:</p> <ul> <li> <p>Must contain from 1 to 63 letters,
            numbers, or hyphens.</p> </li> <li> <p>The first character must be a
            letter.</p> </li> <li> <p>Cannot end with a hyphen or contain two
            consecutive hyphens.</p> </li> </ul>
          schema:
            type: string
        - name: SourceDBClusterIdentifier
          in: query
          required: true
          description: <p>The identifier of the source DB cluster from which to
            restore.</p> <p>Constraints:</p> <ul> <li> <p>Must match the
            identifier of an existing <code>DBCluster</code>.</p> </li> </ul>
          schema:
            type: string
        - name: RestoreToTime
          in: query
          required: false
          description: "<p>The date and time to restore the DB cluster to.</p> <p>Valid
            values: A time in Universal Coordinated Time (UTC) format.</p>
            <p>Constraints:</p> <ul> <li> <p>Must be before the latest
            restorable time for the DB instance.</p> </li> <li> <p>Must be
            specified if the <code>UseLatestRestorableTime</code> parameter is
            not provided.</p> </li> <li> <p>Cannot be specified if the
            <code>UseLatestRestorableTime</code> parameter is
            <code>true</code>.</p> </li> <li> <p>Cannot be specified if the
            <code>RestoreType</code> parameter is
            <code>copy-on-write</code>.</p> </li> </ul> <p>Example:
            <code>2015-03-07T23:45:00Z</code> </p>"
          schema:
            type: string
            format: date-time
        - name: UseLatestRestorableTime
          in: query
          required: false
          description: "<p>A value that is set to <code>true</code> to restore the DB
            cluster to the latest restorable backup time, and <code>false</code>
            otherwise. </p> <p>Default: <code>false</code> </p> <p>Constraints:
            Cannot be specified if the <code>RestoreToTime</code> parameter is
            provided.</p>"
          schema:
            type: boolean
        - name: Port
          in: query
          required: false
          description: "<p>The port number on which the new DB cluster accepts
            connections.</p> <p>Constraints: Must be a value from
            <code>1150</code> to <code>65535</code>. </p> <p>Default: The
            default port for the engine.</p>"
          schema:
            type: integer
        - name: DBSubnetGroupName
          in: query
          required: false
          description: "<p>The DB subnet group name to use for the new DB cluster.</p>
            <p>Constraints: If provided, must match the name of an existing
            <code>DBSubnetGroup</code>.</p> <p>Example:
            <code>mySubnetgroup</code> </p>"
          schema:
            type: string
        - name: VpcSecurityGroupIds
          in: query
          required: false
          description: A list of VPC security groups that the new DB cluster belongs to.
          schema:
            type: array
            items:
              type: string
        - name: Tags
          in: query
          required: false
          description: The tags to be assigned to the restored DB cluster.
          schema:
            type: array
            items:
              type: string
        - name: KmsKeyId
          in: query
          required: false
          description: <p>The AWS KMS key identifier to use when restoring an encrypted DB
            cluster from an encrypted DB cluster.</p> <p>The AWS KMS key
            identifier is the Amazon Resource Name (ARN) for the AWS KMS
            encryption key. If you are restoring a DB cluster with the same AWS
            account that owns the AWS KMS encryption key used to encrypt the new
            DB cluster, then you can use the AWS KMS key alias instead of the
            ARN for the AWS KMS encryption key.</p> <p>You can restore to a new
            DB cluster and encrypt the new DB cluster with an AWS KMS key that
            is different from the AWS KMS key used to encrypt the source DB
            cluster. The new DB cluster is encrypted with the AWS KMS key
            identified by the <code>KmsKeyId</code> parameter.</p> <p>If you do
            not specify a value for the <code>KmsKeyId</code> parameter, then
            the following occurs:</p> <ul> <li> <p>If the DB cluster is
            encrypted, then the restored DB cluster is encrypted using the AWS
            KMS key that was used to encrypt the source DB cluster.</p> </li>
            <li> <p>If the DB cluster is not encrypted, then the restored DB
            cluster is not encrypted.</p> </li> </ul> <p>If
            <code>DBClusterIdentifier</code> refers to a DB cluster that is not
            encrypted, then the restore request is rejected.</p>
          schema:
            type: string
        - name: EnableCloudwatchLogsExports
          in: query
          required: false
          description: A list of log types that must be enabled for exporting to Amazon
            CloudWatch Logs.
          schema:
            type: array
            items:
              type: string
        - name: DeletionProtection
          in: query
          required: false
          description: Specifies whether this cluster can be deleted. If
            <code>DeletionProtection</code> is enabled, the cluster cannot be
            deleted unless it is modified and <code>DeletionProtection</code> is
            disabled. <code>DeletionProtection</code> protects clusters from
            being accidentally deleted.
          schema:
            type: boolean
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - RestoreDBClusterToPointInTime
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2014-10-31
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: RestoreDBClusterToPointInTime
      operationId: POST RestoreDBClusterToPointInTime
      description: "Restores a DB cluster to an arbitrary point in time. Users can restore
        to any point in time before <code>LatestRestorableTime</code> for up to
        <code>BackupRetentionPeriod</code> days. The target DB cluster is
        created from the source DB cluster with the same configuration as the
        original DB cluster, except that the new DB cluster is created with the
        default DB security group. "
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/RestoreDBClusterToPointInTimeResult"
        "480":
          description: DBClusterAlreadyExistsFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBClusterAlreadyExistsFault"
        "481":
          description: DBClusterNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBClusterNotFoundFault"
        "482":
          description: DBClusterQuotaExceededFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBClusterQuotaExceededFault"
        "483":
          description: DBClusterSnapshotNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBClusterSnapshotNotFoundFault"
        "484":
          description: DBSubnetGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBSubnetGroupNotFoundFault"
        "485":
          description: InsufficientDBClusterCapacityFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InsufficientDBClusterCapacityFault"
        "486":
          description: InsufficientStorageClusterCapacityFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InsufficientStorageClusterCapacityFault"
        "487":
          description: InvalidDBClusterSnapshotStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidDBClusterSnapshotStateFault"
        "488":
          description: InvalidDBClusterStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidDBClusterStateFault"
        "489":
          description: InvalidDBSnapshotStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidDBSnapshotStateFault"
        "490":
          description: InvalidRestoreFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidRestoreFault"
        "491":
          description: InvalidSubnet
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidSubnet"
        "492":
          description: InvalidVPCNetworkStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidVPCNetworkStateFault"
        "493":
          description: KMSKeyNotAccessibleFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/KMSKeyNotAccessibleFault"
        "494":
          description: StorageQuotaExceededFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/StorageQuotaExceededFault"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - RestoreDBClusterToPointInTime
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2014-10-31
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                DBClusterIdentifier:
                  description: <p>The name of the new DB cluster to be created.</p>
                    <p>Constraints:</p> <ul> <li> <p>Must contain from 1 to 63
                    letters, numbers, or hyphens.</p> </li> <li> <p>The first
                    character must be a letter.</p> </li> <li> <p>Cannot end
                    with a hyphen or contain two consecutive hyphens.</p> </li>
                    </ul>
                  type: string
                SourceDBClusterIdentifier:
                  description: <p>The identifier of the source DB cluster from which to
                    restore.</p> <p>Constraints:</p> <ul> <li> <p>Must match the
                    identifier of an existing <code>DBCluster</code>.</p> </li>
                    </ul>
                  type: string
                RestoreToTime:
                  description: "<p>The date and time to restore the DB cluster to.</p>
                    <p>Valid values: A time in Universal Coordinated Time (UTC)
                    format.</p> <p>Constraints:</p> <ul> <li> <p>Must be before
                    the latest restorable time for the DB instance.</p> </li>
                    <li> <p>Must be specified if the
                    <code>UseLatestRestorableTime</code> parameter is not
                    provided.</p> </li> <li> <p>Cannot be specified if the
                    <code>UseLatestRestorableTime</code> parameter is
                    <code>true</code>.</p> </li> <li> <p>Cannot be specified if
                    the <code>RestoreType</code> parameter is
                    <code>copy-on-write</code>.</p> </li> </ul> <p>Example:
                    <code>2015-03-07T23:45:00Z</code> </p>"
                  type: string
                  format: date-time
                UseLatestRestorableTime:
                  description: "<p>A value that is set to <code>true</code> to restore the
                    DB cluster to the latest restorable backup time, and
                    <code>false</code> otherwise. </p> <p>Default:
                    <code>false</code> </p> <p>Constraints: Cannot be specified
                    if the <code>RestoreToTime</code> parameter is
                    provided.</p>"
                  type: boolean
                Port:
                  description: "<p>The port number on which the new DB cluster accepts
                    connections.</p> <p>Constraints: Must be a value from
                    <code>1150</code> to <code>65535</code>. </p> <p>Default:
                    The default port for the engine.</p>"
                  type: integer
                DBSubnetGroupName:
                  description: "<p>The DB subnet group name to use for the new DB
                    cluster.</p> <p>Constraints: If provided, must match the
                    name of an existing <code>DBSubnetGroup</code>.</p>
                    <p>Example: <code>mySubnetgroup</code> </p>"
                  type: string
                VpcSecurityGroupIds:
                  description: A list of VPC security groups that the new DB cluster
                    belongs to.
                  type: array
                  items:
                    type: string
                Tags:
                  description: The tags to be assigned to the restored DB cluster.
                  type: array
                  items:
                    type: string
                KmsKeyId:
                  description: <p>The AWS KMS key identifier to use when restoring an
                    encrypted DB cluster from an encrypted DB cluster.</p>
                    <p>The AWS KMS key identifier is the Amazon Resource Name
                    (ARN) for the AWS KMS encryption key. If you are restoring a
                    DB cluster with the same AWS account that owns the AWS KMS
                    encryption key used to encrypt the new DB cluster, then you
                    can use the AWS KMS key alias instead of the ARN for the AWS
                    KMS encryption key.</p> <p>You can restore to a new DB
                    cluster and encrypt the new DB cluster with an AWS KMS key
                    that is different from the AWS KMS key used to encrypt the
                    source DB cluster. The new DB cluster is encrypted with the
                    AWS KMS key identified by the <code>KmsKeyId</code>
                    parameter.</p> <p>If you do not specify a value for the
                    <code>KmsKeyId</code> parameter, then the following
                    occurs:</p> <ul> <li> <p>If the DB cluster is encrypted,
                    then the restored DB cluster is encrypted using the AWS KMS
                    key that was used to encrypt the source DB cluster.</p>
                    </li> <li> <p>If the DB cluster is not encrypted, then the
                    restored DB cluster is not encrypted.</p> </li> </ul> <p>If
                    <code>DBClusterIdentifier</code> refers to a DB cluster that
                    is not encrypted, then the restore request is rejected.</p>
                  type: string
                EnableCloudwatchLogsExports:
                  description: A list of log types that must be enabled for exporting to
                    Amazon CloudWatch Logs.
                  type: array
                  items:
                    type: string
                DeletionProtection:
                  description: Specifies whether this cluster can be deleted. If
                    <code>DeletionProtection</code> is enabled, the cluster
                    cannot be deleted unless it is modified and
                    <code>DeletionProtection</code> is disabled.
                    <code>DeletionProtection</code> protects clusters from being
                    accidentally deleted.
                  type: boolean
              required:
                - DBClusterIdentifier
                - SourceDBClusterIdentifier
  /#Action=StartDBCluster:
    get:
      x-aws-operation-name: StartDBCluster
      operationId: GET StartDBCluster
      description: Restarts the stopped cluster that is specified by
        <code>DBClusterIdentifier</code>. For more information, see <a
        href="https://docs.aws.amazon.com/documentdb/latest/developerguide/db-cluster-stop-start.html">Stopping
        and Starting an Amazon DocumentDB Cluster</a>.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/StartDBClusterResult"
        "480":
          description: DBClusterNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBClusterNotFoundFault"
        "481":
          description: InvalidDBClusterStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidDBClusterStateFault"
        "482":
          description: InvalidDBInstanceStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidDBInstanceStateFault"
      parameters:
        - name: DBClusterIdentifier
          in: query
          required: true
          description: "The identifier of the cluster to restart. Example:
            <code>docdb-2019-05-28-15-24-52</code> "
          schema:
            type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - StartDBCluster
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2014-10-31
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: StartDBCluster
      operationId: POST StartDBCluster
      description: Restarts the stopped cluster that is specified by
        <code>DBClusterIdentifier</code>. For more information, see <a
        href="https://docs.aws.amazon.com/documentdb/latest/developerguide/db-cluster-stop-start.html">Stopping
        and Starting an Amazon DocumentDB Cluster</a>.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/StartDBClusterResult"
        "480":
          description: DBClusterNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBClusterNotFoundFault"
        "481":
          description: InvalidDBClusterStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidDBClusterStateFault"
        "482":
          description: InvalidDBInstanceStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidDBInstanceStateFault"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - StartDBCluster
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2014-10-31
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                DBClusterIdentifier:
                  description: "The identifier of the cluster to restart. Example:
                    <code>docdb-2019-05-28-15-24-52</code> "
                  type: string
              required:
                - DBClusterIdentifier
  /#Action=StopDBCluster:
    get:
      x-aws-operation-name: StopDBCluster
      operationId: GET StopDBCluster
      description: Stops the running cluster that is specified by
        <code>DBClusterIdentifier</code>. The cluster must be in the
        <i>available</i> state. For more information, see <a
        href="https://docs.aws.amazon.com/documentdb/latest/developerguide/db-cluster-stop-start.html">Stopping
        and Starting an Amazon DocumentDB Cluster</a>.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/StopDBClusterResult"
        "480":
          description: DBClusterNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBClusterNotFoundFault"
        "481":
          description: InvalidDBClusterStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidDBClusterStateFault"
        "482":
          description: InvalidDBInstanceStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidDBInstanceStateFault"
      parameters:
        - name: DBClusterIdentifier
          in: query
          required: true
          description: "The identifier of the cluster to stop. Example:
            <code>docdb-2019-05-28-15-24-52</code> "
          schema:
            type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - StopDBCluster
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2014-10-31
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: StopDBCluster
      operationId: POST StopDBCluster
      description: Stops the running cluster that is specified by
        <code>DBClusterIdentifier</code>. The cluster must be in the
        <i>available</i> state. For more information, see <a
        href="https://docs.aws.amazon.com/documentdb/latest/developerguide/db-cluster-stop-start.html">Stopping
        and Starting an Amazon DocumentDB Cluster</a>.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/StopDBClusterResult"
        "480":
          description: DBClusterNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBClusterNotFoundFault"
        "481":
          description: InvalidDBClusterStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidDBClusterStateFault"
        "482":
          description: InvalidDBInstanceStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidDBInstanceStateFault"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - StopDBCluster
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2014-10-31
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                DBClusterIdentifier:
                  description: "The identifier of the cluster to stop. Example:
                    <code>docdb-2019-05-28-15-24-52</code> "
                  type: string
              required:
                - DBClusterIdentifier
servers:
  - url: http://rds.{region}.amazonaws.com
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-south-1
          - sa-east-1
        default: us-east-1
    description: The Amazon DocDB multi-region endpoint
  - url: https://rds.{region}.amazonaws.com
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-south-1
          - sa-east-1
        default: us-east-1
    description: The Amazon DocDB multi-region endpoint
  - url: http://rds.amazonaws.com
    variables: {}
    description: The general Amazon DocDB multi-region endpoint
  - url: https://rds.amazonaws.com
    variables: {}
    description: The general Amazon DocDB multi-region endpoint
  - url: http://rds.{region}.amazonaws.com.cn
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The Amazon DocDB endpoint for China (Beijing) and China (Ningxia)
  - url: https://rds.{region}.amazonaws.com.cn
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The Amazon DocDB endpoint for China (Beijing) and China (Ningxia)
components:
  parameters:
    X-Amz-Content-Sha256:
      name: X-Amz-Content-Sha256
      in: header
      required: false
      schema:
        type: string
    X-Amz-Date:
      name: X-Amz-Date
      in: header
      required: false
      schema:
        type: string
    X-Amz-Algorithm:
      name: X-Amz-Algorithm
      in: header
      required: false
      schema:
        type: string
    X-Amz-Credential:
      name: X-Amz-Credential
      in: header
      required: false
      schema:
        type: string
    X-Amz-Security-Token:
      name: X-Amz-Security-Token
      in: header
      required: false
      schema:
        type: string
    X-Amz-Signature:
      name: X-Amz-Signature
      in: header
      required: false
      schema:
        type: string
    X-Amz-SignedHeaders:
      name: X-Amz-SignedHeaders
      in: header
      required: false
      schema:
        type: string
  securitySchemes:
    hmac:
      type: apiKey
      name: Authorization
      in: header
      description: Amazon Signature authorization v4
      x-amazon-apigateway-authtype: awsSigv4
  schemas:
    Tag:
      type: object
      properties:
        Key:
          $ref: "#/components/schemas/String"
        Value:
          $ref: "#/components/schemas/String"
      description: Metadata assigned to an Amazon DocumentDB resource consisting of a
        key-value pair.
    DBInstanceNotFoundFault: {}
    DBSnapshotNotFoundFault: {}
    DBClusterNotFoundFault: {}
    ApplyPendingMaintenanceActionResult:
      type: object
      properties:
        ResourcePendingMaintenanceActions:
          $ref: "#/components/schemas/ResourcePendingMaintenanceActions"
    ResourceNotFoundFault: {}
    InvalidDBClusterStateFault: {}
    InvalidDBInstanceStateFault: {}
    CopyDBClusterParameterGroupResult:
      type: object
      properties:
        DBClusterParameterGroup:
          $ref: "#/components/schemas/DBClusterParameterGroup"
    DBParameterGroupNotFoundFault: {}
    DBParameterGroupQuotaExceededFault: {}
    DBParameterGroupAlreadyExistsFault: {}
    CopyDBClusterSnapshotResult:
      type: object
      properties:
        DBClusterSnapshot:
          $ref: "#/components/schemas/DBClusterSnapshot"
    DBClusterSnapshotAlreadyExistsFault: {}
    DBClusterSnapshotNotFoundFault: {}
    InvalidDBClusterSnapshotStateFault: {}
    SnapshotQuotaExceededFault: {}
    KMSKeyNotAccessibleFault: {}
    CreateDBClusterResult:
      type: object
      properties:
        DBCluster:
          $ref: "#/components/schemas/DBCluster"
    String:
      type: string
    DBClusterAlreadyExistsFault: {}
    InsufficientStorageClusterCapacityFault: {}
    DBClusterQuotaExceededFault: {}
    StorageQuotaExceededFault: {}
    DBSubnetGroupNotFoundFault: {}
    InvalidVPCNetworkStateFault: {}
    InvalidDBSubnetGroupStateFault: {}
    InvalidSubnet: {}
    DBClusterParameterGroupNotFoundFault: {}
    DBSubnetGroupDoesNotCoverEnoughAZs: {}
    CreateDBClusterParameterGroupResult:
      type: object
      properties:
        DBClusterParameterGroup:
          $ref: "#/components/schemas/DBClusterParameterGroup"
    CreateDBClusterSnapshotResult:
      type: object
      properties:
        DBClusterSnapshot:
          $ref: "#/components/schemas/DBClusterSnapshot"
    CreateDBInstanceResult:
      type: object
      properties:
        DBInstance:
          $ref: "#/components/schemas/DBInstance"
    DBInstanceAlreadyExistsFault: {}
    InsufficientDBInstanceCapacityFault: {}
    DBSecurityGroupNotFoundFault: {}
    InstanceQuotaExceededFault: {}
    StorageTypeNotSupportedFault: {}
    AuthorizationNotFoundFault: {}
    CreateDBSubnetGroupResult:
      type: object
      properties:
        DBSubnetGroup:
          $ref: "#/components/schemas/DBSubnetGroup"
    DBSubnetGroupAlreadyExistsFault: {}
    DBSubnetGroupQuotaExceededFault: {}
    DBSubnetQuotaExceededFault: {}
    DeleteDBClusterResult:
      type: object
      properties:
        DBCluster:
          $ref: "#/components/schemas/DBCluster"
    InvalidDBParameterGroupStateFault: {}
    DeleteDBClusterSnapshotResult:
      type: object
      properties:
        DBClusterSnapshot:
          $ref: "#/components/schemas/DBClusterSnapshot"
    DeleteDBInstanceResult:
      type: object
      properties:
        DBInstance:
          $ref: "#/components/schemas/DBInstance"
    DBSnapshotAlreadyExistsFault: {}
    InvalidDBSubnetStateFault: {}
    CertificateMessage:
      type: object
      properties:
        Certificates:
          $ref: "#/components/schemas/CertificateList"
        Marker:
          $ref: "#/components/schemas/String"
    Filter:
      type: object
      required:
        - Name
        - Values
      properties:
        Name:
          $ref: "#/components/schemas/String"
        Values:
          $ref: "#/components/schemas/FilterValueList"
      description: <p>A named set of filter values, used to return a more specific list of
        results. You can use a filter to match a set of resources by specific
        criteria, such as IDs.</p> <p>Wildcards are not supported in
        filters.</p>
    CertificateNotFoundFault: {}
    DBClusterParameterGroupsMessage:
      type: object
      properties:
        Marker:
          $ref: "#/components/schemas/String"
        DBClusterParameterGroups:
          $ref: "#/components/schemas/DBClusterParameterGroupList"
      description: Represents the output of <a>DBClusterParameterGroups</a>.
    DBClusterParameterGroupDetails:
      type: object
      properties:
        Parameters:
          $ref: "#/components/schemas/ParametersList"
        Marker:
          $ref: "#/components/schemas/String"
      description: Represents the output of <a>DBClusterParameterGroup</a>.
    DescribeDBClusterSnapshotAttributesResult:
      type: object
      properties:
        DBClusterSnapshotAttributesResult:
          $ref: "#/components/schemas/DBClusterSnapshotAttributesResult"
    DBClusterSnapshotMessage:
      type: object
      properties:
        Marker:
          $ref: "#/components/schemas/String"
        DBClusterSnapshots:
          $ref: "#/components/schemas/DBClusterSnapshotList"
      description: Represents the output of <a>DescribeDBClusterSnapshots</a>.
    DBClusterMessage:
      type: object
      properties:
        Marker:
          $ref: "#/components/schemas/String"
        DBClusters:
          $ref: "#/components/schemas/DBClusterList"
      description: Represents the output of <a>DescribeDBClusters</a>.
    DBEngineVersionMessage:
      type: object
      properties:
        Marker:
          $ref: "#/components/schemas/String"
        DBEngineVersions:
          $ref: "#/components/schemas/DBEngineVersionList"
      description: Represents the output of <a>DescribeDBEngineVersions</a>.
    DBInstanceMessage:
      type: object
      properties:
        Marker:
          $ref: "#/components/schemas/String"
        DBInstances:
          $ref: "#/components/schemas/DBInstanceList"
      description: Represents the output of <a>DescribeDBInstances</a>.
    DBSubnetGroupMessage:
      type: object
      properties:
        Marker:
          $ref: "#/components/schemas/String"
        DBSubnetGroups:
          $ref: "#/components/schemas/DBSubnetGroups"
      description: Represents the output of <a>DescribeDBSubnetGroups</a>.
    DescribeEngineDefaultClusterParametersResult:
      type: object
      properties:
        EngineDefaults:
          $ref: "#/components/schemas/EngineDefaults"
    EventCategoriesMessage:
      type: object
      properties:
        EventCategoriesMapList:
          $ref: "#/components/schemas/EventCategoriesMapList"
      description: Represents the output of <a>DescribeEventCategories</a>.
    EventsMessage:
      type: object
      properties:
        Marker:
          $ref: "#/components/schemas/String"
        Events:
          $ref: "#/components/schemas/EventList"
      description: Represents the output of <a>DescribeEvents</a>.
    OrderableDBInstanceOptionsMessage:
      type: object
      properties:
        OrderableDBInstanceOptions:
          $ref: "#/components/schemas/OrderableDBInstanceOptionsList"
        Marker:
          $ref: "#/components/schemas/String"
      description: Represents the output of <a>DescribeOrderableDBInstanceOptions</a>.
    PendingMaintenanceActionsMessage:
      type: object
      properties:
        PendingMaintenanceActions:
          $ref: "#/components/schemas/PendingMaintenanceActions"
        Marker:
          $ref: "#/components/schemas/String"
      description: Represents the output of <a>DescribePendingMaintenanceActions</a>.
    FailoverDBClusterResult:
      type: object
      properties:
        DBCluster:
          $ref: "#/components/schemas/DBCluster"
    TagListMessage:
      type: object
      properties:
        TagList:
          $ref: "#/components/schemas/TagList"
      description: Represents the output of <a>ListTagsForResource</a>.
    ModifyDBClusterResult:
      type: object
      properties:
        DBCluster:
          $ref: "#/components/schemas/DBCluster"
    LogTypeList:
      type: array
      items:
        $ref: "#/components/schemas/String"
    InvalidDBSecurityGroupStateFault: {}
    DBClusterParameterGroupNameMessage:
      type: object
      properties:
        DBClusterParameterGroupName:
          $ref: "#/components/schemas/String"
      description: Contains the name of a DB cluster parameter group.
    Parameter:
      type: object
      properties:
        ParameterName:
          $ref: "#/components/schemas/String"
        ParameterValue:
          $ref: "#/components/schemas/String"
        Description:
          $ref: "#/components/schemas/String"
        Source:
          $ref: "#/components/schemas/String"
        ApplyType:
          $ref: "#/components/schemas/String"
        DataType:
          $ref: "#/components/schemas/String"
        AllowedValues:
          $ref: "#/components/schemas/String"
        IsModifiable:
          $ref: "#/components/schemas/Boolean"
        MinimumEngineVersion:
          $ref: "#/components/schemas/String"
        ApplyMethod:
          $ref: "#/components/schemas/ApplyMethod"
      description: Detailed information about an individual parameter.
    ModifyDBClusterSnapshotAttributeResult:
      type: object
      properties:
        DBClusterSnapshotAttributesResult:
          $ref: "#/components/schemas/DBClusterSnapshotAttributesResult"
    SharedSnapshotQuotaExceededFault: {}
    ModifyDBInstanceResult:
      type: object
      properties:
        DBInstance:
          $ref: "#/components/schemas/DBInstance"
    DBUpgradeDependencyFailureFault: {}
    ModifyDBSubnetGroupResult:
      type: object
      properties:
        DBSubnetGroup:
          $ref: "#/components/schemas/DBSubnetGroup"
    SubnetAlreadyInUse: {}
    RebootDBInstanceResult:
      type: object
      properties:
        DBInstance:
          $ref: "#/components/schemas/DBInstance"
    RestoreDBClusterFromSnapshotResult:
      type: object
      properties:
        DBCluster:
          $ref: "#/components/schemas/DBCluster"
    InsufficientDBClusterCapacityFault: {}
    InvalidDBSnapshotStateFault: {}
    InvalidRestoreFault: {}
    RestoreDBClusterToPointInTimeResult:
      type: object
      properties:
        DBCluster:
          $ref: "#/components/schemas/DBCluster"
    StartDBClusterResult:
      type: object
      properties:
        DBCluster:
          $ref: "#/components/schemas/DBCluster"
    StopDBClusterResult:
      type: object
      properties:
        DBCluster:
          $ref: "#/components/schemas/DBCluster"
    TagList:
      type: array
      items:
        $ref: "#/components/schemas/Tag"
    AddTagsToResourceMessage:
      type: object
      required:
        - ResourceName
        - Tags
      properties:
        ResourceName:
          $ref: "#/components/schemas/String"
        Tags:
          $ref: "#/components/schemas/TagList"
      description: Represents the input to <a>AddTagsToResource</a>.
    ApplyMethod:
      type: string
      enum:
        - immediate
        - pending-reboot
    ApplyPendingMaintenanceActionMessage:
      type: object
      required:
        - ResourceIdentifier
        - ApplyAction
        - OptInType
      properties:
        ResourceIdentifier:
          $ref: "#/components/schemas/String"
        ApplyAction:
          $ref: "#/components/schemas/String"
        OptInType:
          $ref: "#/components/schemas/String"
      description: Represents the input to <a>ApplyPendingMaintenanceAction</a>.
    ResourcePendingMaintenanceActions:
      type: object
      properties:
        ResourceIdentifier:
          $ref: "#/components/schemas/String"
        PendingMaintenanceActionDetails:
          $ref: "#/components/schemas/PendingMaintenanceActionDetails"
      description: Represents the output of <a>ApplyPendingMaintenanceAction</a>.
    AttributeValueList:
      type: array
      items:
        $ref: "#/components/schemas/String"
    AvailabilityZone:
      type: object
      properties:
        Name:
          $ref: "#/components/schemas/String"
      description: Information about an Availability Zone.
    AvailabilityZoneList:
      type: array
      items:
        $ref: "#/components/schemas/AvailabilityZone"
    AvailabilityZones:
      type: array
      items:
        $ref: "#/components/schemas/String"
    Boolean:
      type: boolean
    BooleanOptional:
      type: boolean
    TStamp:
      type: string
      format: date-time
    Certificate:
      type: object
      properties:
        CertificateIdentifier:
          $ref: "#/components/schemas/String"
        CertificateType:
          $ref: "#/components/schemas/String"
        Thumbprint:
          $ref: "#/components/schemas/String"
        ValidFrom:
          $ref: "#/components/schemas/TStamp"
        ValidTill:
          $ref: "#/components/schemas/TStamp"
        CertificateArn:
          $ref: "#/components/schemas/String"
      description: A certificate authority (CA) certificate for an AWS account.
    CertificateList:
      type: array
      items:
        $ref: "#/components/schemas/Certificate"
    CloudwatchLogsExportConfiguration:
      type: object
      properties:
        EnableLogTypes:
          $ref: "#/components/schemas/LogTypeList"
        DisableLogTypes:
          $ref: "#/components/schemas/LogTypeList"
      description: <p>The configuration setting for the log types to be enabled for export
        to Amazon CloudWatch Logs for a specific DB instance or DB cluster.</p>
        <p>The <code>EnableLogTypes</code> and <code>DisableLogTypes</code>
        arrays determine which logs are exported (or not exported) to CloudWatch
        Logs. The values within these arrays depend on the DB engine that is
        being used.</p>
    CopyDBClusterParameterGroupMessage:
      type: object
      required:
        - SourceDBClusterParameterGroupIdentifier
        - TargetDBClusterParameterGroupIdentifier
        - TargetDBClusterParameterGroupDescription
      properties:
        SourceDBClusterParameterGroupIdentifier:
          $ref: "#/components/schemas/String"
        TargetDBClusterParameterGroupIdentifier:
          $ref: "#/components/schemas/String"
        TargetDBClusterParameterGroupDescription:
          $ref: "#/components/schemas/String"
        Tags:
          $ref: "#/components/schemas/TagList"
      description: Represents the input to <a>CopyDBClusterParameterGroup</a>.
    DBClusterParameterGroup:
      type: object
      properties:
        DBClusterParameterGroupName:
          $ref: "#/components/schemas/String"
        DBParameterGroupFamily:
          $ref: "#/components/schemas/String"
        Description:
          $ref: "#/components/schemas/String"
        DBClusterParameterGroupArn:
          $ref: "#/components/schemas/String"
      description: "Detailed information about a DB cluster parameter group. "
    CopyDBClusterSnapshotMessage:
      type: object
      required:
        - SourceDBClusterSnapshotIdentifier
        - TargetDBClusterSnapshotIdentifier
      properties:
        SourceDBClusterSnapshotIdentifier:
          $ref: "#/components/schemas/String"
        TargetDBClusterSnapshotIdentifier:
          $ref: "#/components/schemas/String"
        KmsKeyId:
          $ref: "#/components/schemas/String"
        PreSignedUrl:
          $ref: "#/components/schemas/String"
        CopyTags:
          $ref: "#/components/schemas/BooleanOptional"
        Tags:
          $ref: "#/components/schemas/TagList"
      description: Represents the input to <a>CopyDBClusterSnapshot</a>.
    DBClusterSnapshot:
      type: object
      properties:
        AvailabilityZones:
          $ref: "#/components/schemas/AvailabilityZones"
        DBClusterSnapshotIdentifier:
          $ref: "#/components/schemas/String"
        DBClusterIdentifier:
          $ref: "#/components/schemas/String"
        SnapshotCreateTime:
          $ref: "#/components/schemas/TStamp"
        Engine:
          $ref: "#/components/schemas/String"
        Status:
          $ref: "#/components/schemas/String"
        Port:
          $ref: "#/components/schemas/Integer"
        VpcId:
          $ref: "#/components/schemas/String"
        ClusterCreateTime:
          $ref: "#/components/schemas/TStamp"
        MasterUsername:
          $ref: "#/components/schemas/String"
        EngineVersion:
          $ref: "#/components/schemas/String"
        SnapshotType:
          $ref: "#/components/schemas/String"
        PercentProgress:
          $ref: "#/components/schemas/Integer"
        StorageEncrypted:
          $ref: "#/components/schemas/Boolean"
        KmsKeyId:
          $ref: "#/components/schemas/String"
        DBClusterSnapshotArn:
          $ref: "#/components/schemas/String"
        SourceDBClusterSnapshotArn:
          $ref: "#/components/schemas/String"
      description: "Detailed information about a DB cluster snapshot. "
    IntegerOptional:
      type: integer
    VpcSecurityGroupIdList:
      type: array
      items:
        $ref: "#/components/schemas/String"
    CreateDBClusterMessage:
      type: object
      required:
        - DBClusterIdentifier
        - Engine
        - MasterUsername
        - MasterUserPassword
      properties:
        AvailabilityZones:
          $ref: "#/components/schemas/AvailabilityZones"
        BackupRetentionPeriod:
          $ref: "#/components/schemas/IntegerOptional"
        DBClusterIdentifier:
          $ref: "#/components/schemas/String"
        DBClusterParameterGroupName:
          $ref: "#/components/schemas/String"
        VpcSecurityGroupIds:
          $ref: "#/components/schemas/VpcSecurityGroupIdList"
        DBSubnetGroupName:
          $ref: "#/components/schemas/String"
        Engine:
          $ref: "#/components/schemas/String"
        EngineVersion:
          $ref: "#/components/schemas/String"
        Port:
          $ref: "#/components/schemas/IntegerOptional"
        MasterUsername:
          $ref: "#/components/schemas/String"
        MasterUserPassword:
          $ref: "#/components/schemas/String"
        PreferredBackupWindow:
          $ref: "#/components/schemas/String"
        PreferredMaintenanceWindow:
          $ref: "#/components/schemas/String"
        Tags:
          $ref: "#/components/schemas/TagList"
        StorageEncrypted:
          $ref: "#/components/schemas/BooleanOptional"
        KmsKeyId:
          $ref: "#/components/schemas/String"
        EnableCloudwatchLogsExports:
          $ref: "#/components/schemas/LogTypeList"
        DeletionProtection:
          $ref: "#/components/schemas/BooleanOptional"
      description: Represents the input to <a>CreateDBCluster</a>.
    CreateDBClusterParameterGroupMessage:
      type: object
      required:
        - DBClusterParameterGroupName
        - DBParameterGroupFamily
        - Description
      properties:
        DBClusterParameterGroupName:
          $ref: "#/components/schemas/String"
        DBParameterGroupFamily:
          $ref: "#/components/schemas/String"
        Description:
          $ref: "#/components/schemas/String"
        Tags:
          $ref: "#/components/schemas/TagList"
      description: Represents the input of <a>CreateDBClusterParameterGroup</a>.
    DBCluster:
      type: object
      properties:
        AvailabilityZones:
          $ref: "#/components/schemas/AvailabilityZones"
        BackupRetentionPeriod:
          $ref: "#/components/schemas/IntegerOptional"
        DBClusterIdentifier:
          $ref: "#/components/schemas/String"
        DBClusterParameterGroup:
          $ref: "#/components/schemas/String"
        DBSubnetGroup:
          $ref: "#/components/schemas/String"
        Status:
          $ref: "#/components/schemas/String"
        PercentProgress:
          $ref: "#/components/schemas/String"
        EarliestRestorableTime:
          $ref: "#/components/schemas/TStamp"
        Endpoint:
          $ref: "#/components/schemas/String"
        ReaderEndpoint:
          $ref: "#/components/schemas/String"
        MultiAZ:
          $ref: "#/components/schemas/Boolean"
        Engine:
          $ref: "#/components/schemas/String"
        EngineVersion:
          $ref: "#/components/schemas/String"
        LatestRestorableTime:
          $ref: "#/components/schemas/TStamp"
        Port:
          $ref: "#/components/schemas/IntegerOptional"
        MasterUsername:
          $ref: "#/components/schemas/String"
        PreferredBackupWindow:
          $ref: "#/components/schemas/String"
        PreferredMaintenanceWindow:
          $ref: "#/components/schemas/String"
        DBClusterMembers:
          $ref: "#/components/schemas/DBClusterMemberList"
        VpcSecurityGroups:
          $ref: "#/components/schemas/VpcSecurityGroupMembershipList"
        HostedZoneId:
          $ref: "#/components/schemas/String"
        StorageEncrypted:
          $ref: "#/components/schemas/Boolean"
        KmsKeyId:
          $ref: "#/components/schemas/String"
        DbClusterResourceId:
          $ref: "#/components/schemas/String"
        DBClusterArn:
          $ref: "#/components/schemas/String"
        AssociatedRoles:
          $ref: "#/components/schemas/DBClusterRoles"
        ClusterCreateTime:
          $ref: "#/components/schemas/TStamp"
        EnabledCloudwatchLogsExports:
          $ref: "#/components/schemas/LogTypeList"
        DeletionProtection:
          $ref: "#/components/schemas/Boolean"
      description: "Detailed information about a DB cluster. "
    CreateDBClusterSnapshotMessage:
      type: object
      required:
        - DBClusterSnapshotIdentifier
        - DBClusterIdentifier
      properties:
        DBClusterSnapshotIdentifier:
          $ref: "#/components/schemas/String"
        DBClusterIdentifier:
          $ref: "#/components/schemas/String"
        Tags:
          $ref: "#/components/schemas/TagList"
      description: Represents the input of <a>CreateDBClusterSnapshot</a>.
    CreateDBInstanceMessage:
      type: object
      required:
        - DBInstanceIdentifier
        - DBInstanceClass
        - Engine
        - DBClusterIdentifier
      properties:
        DBInstanceIdentifier:
          $ref: "#/components/schemas/String"
        DBInstanceClass:
          $ref: "#/components/schemas/String"
        Engine:
          $ref: "#/components/schemas/String"
        AvailabilityZone:
          $ref: "#/components/schemas/String"
        PreferredMaintenanceWindow:
          $ref: "#/components/schemas/String"
        AutoMinorVersionUpgrade:
          $ref: "#/components/schemas/BooleanOptional"
        Tags:
          $ref: "#/components/schemas/TagList"
        DBClusterIdentifier:
          $ref: "#/components/schemas/String"
        PromotionTier:
          $ref: "#/components/schemas/IntegerOptional"
      description: Represents the input to <a>CreateDBInstance</a>.
    DBInstance:
      type: object
      properties:
        DBInstanceIdentifier:
          $ref: "#/components/schemas/String"
        DBInstanceClass:
          $ref: "#/components/schemas/String"
        Engine:
          $ref: "#/components/schemas/String"
        DBInstanceStatus:
          $ref: "#/components/schemas/String"
        Endpoint:
          $ref: "#/components/schemas/Endpoint"
        InstanceCreateTime:
          $ref: "#/components/schemas/TStamp"
        PreferredBackupWindow:
          $ref: "#/components/schemas/String"
        BackupRetentionPeriod:
          $ref: "#/components/schemas/Integer"
        VpcSecurityGroups:
          $ref: "#/components/schemas/VpcSecurityGroupMembershipList"
        AvailabilityZone:
          $ref: "#/components/schemas/String"
        DBSubnetGroup:
          $ref: "#/components/schemas/DBSubnetGroup"
        PreferredMaintenanceWindow:
          $ref: "#/components/schemas/String"
        PendingModifiedValues:
          $ref: "#/components/schemas/PendingModifiedValues"
        LatestRestorableTime:
          $ref: "#/components/schemas/TStamp"
        EngineVersion:
          $ref: "#/components/schemas/String"
        AutoMinorVersionUpgrade:
          $ref: "#/components/schemas/Boolean"
        PubliclyAccessible:
          $ref: "#/components/schemas/Boolean"
        StatusInfos:
          $ref: "#/components/schemas/DBInstanceStatusInfoList"
        DBClusterIdentifier:
          $ref: "#/components/schemas/String"
        StorageEncrypted:
          $ref: "#/components/schemas/Boolean"
        KmsKeyId:
          $ref: "#/components/schemas/String"
        DbiResourceId:
          $ref: "#/components/schemas/String"
        CACertificateIdentifier:
          $ref: "#/components/schemas/String"
        PromotionTier:
          $ref: "#/components/schemas/IntegerOptional"
        DBInstanceArn:
          $ref: "#/components/schemas/String"
        EnabledCloudwatchLogsExports:
          $ref: "#/components/schemas/LogTypeList"
      description: "Detailed information about a DB instance. "
    SubnetIdentifierList:
      type: array
      items:
        $ref: "#/components/schemas/String"
    CreateDBSubnetGroupMessage:
      type: object
      required:
        - DBSubnetGroupName
        - DBSubnetGroupDescription
        - SubnetIds
      properties:
        DBSubnetGroupName:
          $ref: "#/components/schemas/String"
        DBSubnetGroupDescription:
          $ref: "#/components/schemas/String"
        SubnetIds:
          $ref: "#/components/schemas/SubnetIdentifierList"
        Tags:
          $ref: "#/components/schemas/TagList"
      description: Represents the input to <a>CreateDBSubnetGroup</a>.
    DBSubnetGroup:
      type: object
      properties:
        DBSubnetGroupName:
          $ref: "#/components/schemas/String"
        DBSubnetGroupDescription:
          $ref: "#/components/schemas/String"
        VpcId:
          $ref: "#/components/schemas/String"
        SubnetGroupStatus:
          $ref: "#/components/schemas/String"
        Subnets:
          $ref: "#/components/schemas/SubnetList"
        DBSubnetGroupArn:
          $ref: "#/components/schemas/String"
      description: "Detailed information about a DB subnet group. "
    DBClusterMemberList:
      type: array
      items:
        $ref: "#/components/schemas/DBClusterMember"
    VpcSecurityGroupMembershipList:
      type: array
      items:
        $ref: "#/components/schemas/VpcSecurityGroupMembership"
    DBClusterRoles:
      type: array
      items:
        $ref: "#/components/schemas/DBClusterRole"
    DBClusterList:
      type: array
      items:
        $ref: "#/components/schemas/DBCluster"
    DBClusterMember:
      type: object
      properties:
        DBInstanceIdentifier:
          $ref: "#/components/schemas/String"
        IsClusterWriter:
          $ref: "#/components/schemas/Boolean"
        DBClusterParameterGroupStatus:
          $ref: "#/components/schemas/String"
        PromotionTier:
          $ref: "#/components/schemas/IntegerOptional"
      description: Contains information about an instance that is part of a DB cluster.
    ParametersList:
      type: array
      items:
        $ref: "#/components/schemas/Parameter"
    DBClusterParameterGroupList:
      type: array
      items:
        $ref: "#/components/schemas/DBClusterParameterGroup"
    DBClusterRole:
      type: object
      properties:
        RoleArn:
          $ref: "#/components/schemas/String"
        Status:
          $ref: "#/components/schemas/String"
      description: Describes an AWS Identity and Access Management (IAM) role that is
        associated with a DB cluster.
    Integer:
      type: integer
    DBClusterSnapshotAttribute:
      type: object
      properties:
        AttributeName:
          $ref: "#/components/schemas/String"
        AttributeValues:
          $ref: "#/components/schemas/AttributeValueList"
      description: <p>Contains the name and values of a manual DB cluster snapshot
        attribute.</p> <p>Manual DB cluster snapshot attributes are used to
        authorize other AWS accounts to restore a manual DB cluster
        snapshot.</p>
    DBClusterSnapshotAttributeList:
      type: array
      items:
        $ref: "#/components/schemas/DBClusterSnapshotAttribute"
    DBClusterSnapshotAttributesResult:
      type: object
      properties:
        DBClusterSnapshotIdentifier:
          $ref: "#/components/schemas/String"
        DBClusterSnapshotAttributes:
          $ref: "#/components/schemas/DBClusterSnapshotAttributeList"
      description: Detailed information about the attributes that are associated with a DB
        cluster snapshot.
    DBClusterSnapshotList:
      type: array
      items:
        $ref: "#/components/schemas/DBClusterSnapshot"
    ValidUpgradeTargetList:
      type: array
      items:
        $ref: "#/components/schemas/UpgradeTarget"
    DBEngineVersion:
      type: object
      properties:
        Engine:
          $ref: "#/components/schemas/String"
        EngineVersion:
          $ref: "#/components/schemas/String"
        DBParameterGroupFamily:
          $ref: "#/components/schemas/String"
        DBEngineDescription:
          $ref: "#/components/schemas/String"
        DBEngineVersionDescription:
          $ref: "#/components/schemas/String"
        ValidUpgradeTarget:
          $ref: "#/components/schemas/ValidUpgradeTargetList"
        ExportableLogTypes:
          $ref: "#/components/schemas/LogTypeList"
        SupportsLogExportsToCloudwatchLogs:
          $ref: "#/components/schemas/Boolean"
      description: " Detailed information about a DB engine version. "
    DBEngineVersionList:
      type: array
      items:
        $ref: "#/components/schemas/DBEngineVersion"
    Endpoint:
      type: object
      properties:
        Address:
          $ref: "#/components/schemas/String"
        Port:
          $ref: "#/components/schemas/Integer"
        HostedZoneId:
          $ref: "#/components/schemas/String"
      description: Network information for accessing a DB cluster or DB instance. Client
        programs must specify a valid endpoint to access these Amazon DocumentDB
        resources.
    PendingModifiedValues:
      type: object
      properties:
        DBInstanceClass:
          $ref: "#/components/schemas/String"
        AllocatedStorage:
          $ref: "#/components/schemas/IntegerOptional"
        MasterUserPassword:
          $ref: "#/components/schemas/String"
        Port:
          $ref: "#/components/schemas/IntegerOptional"
        BackupRetentionPeriod:
          $ref: "#/components/schemas/IntegerOptional"
        MultiAZ:
          $ref: "#/components/schemas/BooleanOptional"
        EngineVersion:
          $ref: "#/components/schemas/String"
        LicenseModel:
          $ref: "#/components/schemas/String"
        Iops:
          $ref: "#/components/schemas/IntegerOptional"
        DBInstanceIdentifier:
          $ref: "#/components/schemas/String"
        StorageType:
          $ref: "#/components/schemas/String"
        CACertificateIdentifier:
          $ref: "#/components/schemas/String"
        DBSubnetGroupName:
          $ref: "#/components/schemas/String"
        PendingCloudwatchLogsExports:
          $ref: "#/components/schemas/PendingCloudwatchLogsExports"
      description: " One or more modified settings for a DB instance. These modified
        settings have been requested, but haven't been applied yet."
    DBInstanceStatusInfoList:
      type: array
      items:
        $ref: "#/components/schemas/DBInstanceStatusInfo"
    DBInstanceList:
      type: array
      items:
        $ref: "#/components/schemas/DBInstance"
    DBInstanceStatusInfo:
      type: object
      properties:
        StatusType:
          $ref: "#/components/schemas/String"
        Normal:
          $ref: "#/components/schemas/Boolean"
        Status:
          $ref: "#/components/schemas/String"
        Message:
          $ref: "#/components/schemas/String"
      description: Provides a list of status information for a DB instance.
    SubnetList:
      type: array
      items:
        $ref: "#/components/schemas/Subnet"
    DBSubnetGroups:
      type: array
      items:
        $ref: "#/components/schemas/DBSubnetGroup"
    DeleteDBClusterMessage:
      type: object
      required:
        - DBClusterIdentifier
      properties:
        DBClusterIdentifier:
          $ref: "#/components/schemas/String"
        SkipFinalSnapshot:
          $ref: "#/components/schemas/Boolean"
        FinalDBSnapshotIdentifier:
          $ref: "#/components/schemas/String"
      description: Represents the input to <a>DeleteDBCluster</a>.
    DeleteDBClusterParameterGroupMessage:
      type: object
      required:
        - DBClusterParameterGroupName
      properties:
        DBClusterParameterGroupName:
          $ref: "#/components/schemas/String"
      description: Represents the input to <a>DeleteDBClusterParameterGroup</a>.
    DeleteDBClusterSnapshotMessage:
      type: object
      required:
        - DBClusterSnapshotIdentifier
      properties:
        DBClusterSnapshotIdentifier:
          $ref: "#/components/schemas/String"
      description: Represents the input to <a>DeleteDBClusterSnapshot</a>.
    DeleteDBInstanceMessage:
      type: object
      required:
        - DBInstanceIdentifier
      properties:
        DBInstanceIdentifier:
          $ref: "#/components/schemas/String"
      description: Represents the input to <a>DeleteDBInstance</a>.
    DeleteDBSubnetGroupMessage:
      type: object
      required:
        - DBSubnetGroupName
      properties:
        DBSubnetGroupName:
          $ref: "#/components/schemas/String"
      description: Represents the input to <a>DeleteDBSubnetGroup</a>.
    FilterList:
      type: array
      items:
        $ref: "#/components/schemas/Filter"
    DescribeCertificatesMessage:
      type: object
      properties:
        CertificateIdentifier:
          $ref: "#/components/schemas/String"
        Filters:
          $ref: "#/components/schemas/FilterList"
        MaxRecords:
          $ref: "#/components/schemas/IntegerOptional"
        Marker:
          $ref: "#/components/schemas/String"
    DescribeDBClusterParameterGroupsMessage:
      type: object
      properties:
        DBClusterParameterGroupName:
          $ref: "#/components/schemas/String"
        Filters:
          $ref: "#/components/schemas/FilterList"
        MaxRecords:
          $ref: "#/components/schemas/IntegerOptional"
        Marker:
          $ref: "#/components/schemas/String"
      description: Represents the input to <a>DescribeDBClusterParameterGroups</a>.
    DescribeDBClusterParametersMessage:
      type: object
      required:
        - DBClusterParameterGroupName
      properties:
        DBClusterParameterGroupName:
          $ref: "#/components/schemas/String"
        Source:
          $ref: "#/components/schemas/String"
        Filters:
          $ref: "#/components/schemas/FilterList"
        MaxRecords:
          $ref: "#/components/schemas/IntegerOptional"
        Marker:
          $ref: "#/components/schemas/String"
      description: Represents the input to <a>DescribeDBClusterParameters</a>.
    DescribeDBClusterSnapshotAttributesMessage:
      type: object
      required:
        - DBClusterSnapshotIdentifier
      properties:
        DBClusterSnapshotIdentifier:
          $ref: "#/components/schemas/String"
      description: Represents the input to <a>DescribeDBClusterSnapshotAttributes</a>.
    DescribeDBClusterSnapshotsMessage:
      type: object
      properties:
        DBClusterIdentifier:
          $ref: "#/components/schemas/String"
        DBClusterSnapshotIdentifier:
          $ref: "#/components/schemas/String"
        SnapshotType:
          $ref: "#/components/schemas/String"
        Filters:
          $ref: "#/components/schemas/FilterList"
        MaxRecords:
          $ref: "#/components/schemas/IntegerOptional"
        Marker:
          $ref: "#/components/schemas/String"
        IncludeShared:
          $ref: "#/components/schemas/Boolean"
        IncludePublic:
          $ref: "#/components/schemas/Boolean"
      description: Represents the input to <a>DescribeDBClusterSnapshots</a>.
    DescribeDBClustersMessage:
      type: object
      properties:
        DBClusterIdentifier:
          $ref: "#/components/schemas/String"
        Filters:
          $ref: "#/components/schemas/FilterList"
        MaxRecords:
          $ref: "#/components/schemas/IntegerOptional"
        Marker:
          $ref: "#/components/schemas/String"
      description: Represents the input to <a>DescribeDBClusters</a>.
    DescribeDBEngineVersionsMessage:
      type: object
      properties:
        Engine:
          $ref: "#/components/schemas/String"
        EngineVersion:
          $ref: "#/components/schemas/String"
        DBParameterGroupFamily:
          $ref: "#/components/schemas/String"
        Filters:
          $ref: "#/components/schemas/FilterList"
        MaxRecords:
          $ref: "#/components/schemas/IntegerOptional"
        Marker:
          $ref: "#/components/schemas/String"
        DefaultOnly:
          $ref: "#/components/schemas/Boolean"
        ListSupportedCharacterSets:
          $ref: "#/components/schemas/BooleanOptional"
        ListSupportedTimezones:
          $ref: "#/components/schemas/BooleanOptional"
      description: Represents the input to <a>DescribeDBEngineVersions</a>.
    DescribeDBInstancesMessage:
      type: object
      properties:
        DBInstanceIdentifier:
          $ref: "#/components/schemas/String"
        Filters:
          $ref: "#/components/schemas/FilterList"
        MaxRecords:
          $ref: "#/components/schemas/IntegerOptional"
        Marker:
          $ref: "#/components/schemas/String"
      description: Represents the input to <a>DescribeDBInstances</a>.
    DescribeDBSubnetGroupsMessage:
      type: object
      properties:
        DBSubnetGroupName:
          $ref: "#/components/schemas/String"
        Filters:
          $ref: "#/components/schemas/FilterList"
        MaxRecords:
          $ref: "#/components/schemas/IntegerOptional"
        Marker:
          $ref: "#/components/schemas/String"
      description: Represents the input to <a>DescribeDBSubnetGroups</a>.
    DescribeEngineDefaultClusterParametersMessage:
      type: object
      required:
        - DBParameterGroupFamily
      properties:
        DBParameterGroupFamily:
          $ref: "#/components/schemas/String"
        Filters:
          $ref: "#/components/schemas/FilterList"
        MaxRecords:
          $ref: "#/components/schemas/IntegerOptional"
        Marker:
          $ref: "#/components/schemas/String"
      description: Represents the input to <a>DescribeEngineDefaultClusterParameters</a>.
    EngineDefaults:
      type: object
      properties:
        DBParameterGroupFamily:
          $ref: "#/components/schemas/String"
        Marker:
          $ref: "#/components/schemas/String"
        Parameters:
          $ref: "#/components/schemas/ParametersList"
      description: "Contains the result of a successful invocation of the
        <code>DescribeEngineDefaultClusterParameters</code> operation. "
    DescribeEventCategoriesMessage:
      type: object
      properties:
        SourceType:
          $ref: "#/components/schemas/String"
        Filters:
          $ref: "#/components/schemas/FilterList"
      description: Represents the input to <a>DescribeEventCategories</a>.
    SourceType:
      type: string
      enum:
        - db-instance
        - db-parameter-group
        - db-security-group
        - db-snapshot
        - db-cluster
        - db-cluster-snapshot
    EventCategoriesList:
      type: array
      items:
        $ref: "#/components/schemas/String"
    DescribeEventsMessage:
      type: object
      properties:
        SourceIdentifier:
          $ref: "#/components/schemas/String"
        SourceType:
          $ref: "#/components/schemas/SourceType"
        StartTime:
          $ref: "#/components/schemas/TStamp"
        EndTime:
          $ref: "#/components/schemas/TStamp"
        Duration:
          $ref: "#/components/schemas/IntegerOptional"
        EventCategories:
          $ref: "#/components/schemas/EventCategoriesList"
        Filters:
          $ref: "#/components/schemas/FilterList"
        MaxRecords:
          $ref: "#/components/schemas/IntegerOptional"
        Marker:
          $ref: "#/components/schemas/String"
      description: Represents the input to <a>DescribeEvents</a>.
    DescribeOrderableDBInstanceOptionsMessage:
      type: object
      required:
        - Engine
      properties:
        Engine:
          $ref: "#/components/schemas/String"
        EngineVersion:
          $ref: "#/components/schemas/String"
        DBInstanceClass:
          $ref: "#/components/schemas/String"
        LicenseModel:
          $ref: "#/components/schemas/String"
        Vpc:
          $ref: "#/components/schemas/BooleanOptional"
        Filters:
          $ref: "#/components/schemas/FilterList"
        MaxRecords:
          $ref: "#/components/schemas/IntegerOptional"
        Marker:
          $ref: "#/components/schemas/String"
      description: Represents the input to <a>DescribeOrderableDBInstanceOptions</a>.
    DescribePendingMaintenanceActionsMessage:
      type: object
      properties:
        ResourceIdentifier:
          $ref: "#/components/schemas/String"
        Filters:
          $ref: "#/components/schemas/FilterList"
        Marker:
          $ref: "#/components/schemas/String"
        MaxRecords:
          $ref: "#/components/schemas/IntegerOptional"
      description: Represents the input to <a>DescribePendingMaintenanceActions</a>.
    Event:
      type: object
      properties:
        SourceIdentifier:
          $ref: "#/components/schemas/String"
        SourceType:
          $ref: "#/components/schemas/SourceType"
        Message:
          $ref: "#/components/schemas/String"
        EventCategories:
          $ref: "#/components/schemas/EventCategoriesList"
        Date:
          $ref: "#/components/schemas/TStamp"
        SourceArn:
          $ref: "#/components/schemas/String"
      description: Detailed information about an event.
    EventCategoriesMap:
      type: object
      properties:
        SourceType:
          $ref: "#/components/schemas/String"
        EventCategories:
          $ref: "#/components/schemas/EventCategoriesList"
      description: An event source type, accompanied by one or more event category names.
    EventCategoriesMapList:
      type: array
      items:
        $ref: "#/components/schemas/EventCategoriesMap"
    EventList:
      type: array
      items:
        $ref: "#/components/schemas/Event"
    FailoverDBClusterMessage:
      type: object
      properties:
        DBClusterIdentifier:
          $ref: "#/components/schemas/String"
        TargetDBInstanceIdentifier:
          $ref: "#/components/schemas/String"
      description: Represents the input to <a>FailoverDBCluster</a>.
    FilterValueList:
      type: array
      items:
        $ref: "#/components/schemas/String"
    KeyList:
      type: array
      items:
        $ref: "#/components/schemas/String"
    ListTagsForResourceMessage:
      type: object
      required:
        - ResourceName
      properties:
        ResourceName:
          $ref: "#/components/schemas/String"
        Filters:
          $ref: "#/components/schemas/FilterList"
      description: Represents the input to <a>ListTagsForResource</a>.
    ModifyDBClusterMessage:
      type: object
      required:
        - DBClusterIdentifier
      properties:
        DBClusterIdentifier:
          $ref: "#/components/schemas/String"
        NewDBClusterIdentifier:
          $ref: "#/components/schemas/String"
        ApplyImmediately:
          $ref: "#/components/schemas/Boolean"
        BackupRetentionPeriod:
          $ref: "#/components/schemas/IntegerOptional"
        DBClusterParameterGroupName:
          $ref: "#/components/schemas/String"
        VpcSecurityGroupIds:
          $ref: "#/components/schemas/VpcSecurityGroupIdList"
        Port:
          $ref: "#/components/schemas/IntegerOptional"
        MasterUserPassword:
          $ref: "#/components/schemas/String"
        PreferredBackupWindow:
          $ref: "#/components/schemas/String"
        PreferredMaintenanceWindow:
          $ref: "#/components/schemas/String"
        CloudwatchLogsExportConfiguration:
          $ref: "#/components/schemas/CloudwatchLogsExportConfiguration"
        EngineVersion:
          $ref: "#/components/schemas/String"
        DeletionProtection:
          $ref: "#/components/schemas/BooleanOptional"
      description: Represents the input to <a>ModifyDBCluster</a>.
    ModifyDBClusterParameterGroupMessage:
      type: object
      required:
        - DBClusterParameterGroupName
        - Parameters
      properties:
        DBClusterParameterGroupName:
          $ref: "#/components/schemas/String"
        Parameters:
          $ref: "#/components/schemas/ParametersList"
      description: Represents the input to <a>ModifyDBClusterParameterGroup</a>.
    ModifyDBClusterSnapshotAttributeMessage:
      type: object
      required:
        - DBClusterSnapshotIdentifier
        - AttributeName
      properties:
        DBClusterSnapshotIdentifier:
          $ref: "#/components/schemas/String"
        AttributeName:
          $ref: "#/components/schemas/String"
        ValuesToAdd:
          $ref: "#/components/schemas/AttributeValueList"
        ValuesToRemove:
          $ref: "#/components/schemas/AttributeValueList"
      description: Represents the input to <a>ModifyDBClusterSnapshotAttribute</a>.
    ModifyDBInstanceMessage:
      type: object
      required:
        - DBInstanceIdentifier
      properties:
        DBInstanceIdentifier:
          $ref: "#/components/schemas/String"
        DBInstanceClass:
          $ref: "#/components/schemas/String"
        ApplyImmediately:
          $ref: "#/components/schemas/Boolean"
        PreferredMaintenanceWindow:
          $ref: "#/components/schemas/String"
        AutoMinorVersionUpgrade:
          $ref: "#/components/schemas/BooleanOptional"
        NewDBInstanceIdentifier:
          $ref: "#/components/schemas/String"
        CACertificateIdentifier:
          $ref: "#/components/schemas/String"
        PromotionTier:
          $ref: "#/components/schemas/IntegerOptional"
      description: Represents the input to <a>ModifyDBInstance</a>.
    ModifyDBSubnetGroupMessage:
      type: object
      required:
        - DBSubnetGroupName
        - SubnetIds
      properties:
        DBSubnetGroupName:
          $ref: "#/components/schemas/String"
        DBSubnetGroupDescription:
          $ref: "#/components/schemas/String"
        SubnetIds:
          $ref: "#/components/schemas/SubnetIdentifierList"
      description: Represents the input to <a>ModifyDBSubnetGroup</a>.
    OrderableDBInstanceOption:
      type: object
      properties:
        Engine:
          $ref: "#/components/schemas/String"
        EngineVersion:
          $ref: "#/components/schemas/String"
        DBInstanceClass:
          $ref: "#/components/schemas/String"
        LicenseModel:
          $ref: "#/components/schemas/String"
        AvailabilityZones:
          $ref: "#/components/schemas/AvailabilityZoneList"
        Vpc:
          $ref: "#/components/schemas/Boolean"
      description: The options that are available for a DB instance.
    OrderableDBInstanceOptionsList:
      type: array
      items:
        $ref: "#/components/schemas/OrderableDBInstanceOption"
    PendingCloudwatchLogsExports:
      type: object
      properties:
        LogTypesToEnable:
          $ref: "#/components/schemas/LogTypeList"
        LogTypesToDisable:
          $ref: "#/components/schemas/LogTypeList"
      description: A list of the log types whose configuration is still pending. These log
        types are in the process of being activated or deactivated.
    PendingMaintenanceAction:
      type: object
      properties:
        Action:
          $ref: "#/components/schemas/String"
        AutoAppliedAfterDate:
          $ref: "#/components/schemas/TStamp"
        ForcedApplyDate:
          $ref: "#/components/schemas/TStamp"
        OptInStatus:
          $ref: "#/components/schemas/String"
        CurrentApplyDate:
          $ref: "#/components/schemas/TStamp"
        Description:
          $ref: "#/components/schemas/String"
      description: Provides information about a pending maintenance action for a resource.
    PendingMaintenanceActionDetails:
      type: array
      items:
        $ref: "#/components/schemas/PendingMaintenanceAction"
    PendingMaintenanceActions:
      type: array
      items:
        $ref: "#/components/schemas/ResourcePendingMaintenanceActions"
    RebootDBInstanceMessage:
      type: object
      required:
        - DBInstanceIdentifier
      properties:
        DBInstanceIdentifier:
          $ref: "#/components/schemas/String"
        ForceFailover:
          $ref: "#/components/schemas/BooleanOptional"
      description: Represents the input to <a>RebootDBInstance</a>.
    RemoveTagsFromResourceMessage:
      type: object
      required:
        - ResourceName
        - TagKeys
      properties:
        ResourceName:
          $ref: "#/components/schemas/String"
        TagKeys:
          $ref: "#/components/schemas/KeyList"
      description: Represents the input to <a>RemoveTagsFromResource</a>.
    ResetDBClusterParameterGroupMessage:
      type: object
      required:
        - DBClusterParameterGroupName
      properties:
        DBClusterParameterGroupName:
          $ref: "#/components/schemas/String"
        ResetAllParameters:
          $ref: "#/components/schemas/Boolean"
        Parameters:
          $ref: "#/components/schemas/ParametersList"
      description: Represents the input to <a>ResetDBClusterParameterGroup</a>.
    RestoreDBClusterFromSnapshotMessage:
      type: object
      required:
        - DBClusterIdentifier
        - SnapshotIdentifier
        - Engine
      properties:
        AvailabilityZones:
          $ref: "#/components/schemas/AvailabilityZones"
        DBClusterIdentifier:
          $ref: "#/components/schemas/String"
        SnapshotIdentifier:
          $ref: "#/components/schemas/String"
        Engine:
          $ref: "#/components/schemas/String"
        EngineVersion:
          $ref: "#/components/schemas/String"
        Port:
          $ref: "#/components/schemas/IntegerOptional"
        DBSubnetGroupName:
          $ref: "#/components/schemas/String"
        VpcSecurityGroupIds:
          $ref: "#/components/schemas/VpcSecurityGroupIdList"
        Tags:
          $ref: "#/components/schemas/TagList"
        KmsKeyId:
          $ref: "#/components/schemas/String"
        EnableCloudwatchLogsExports:
          $ref: "#/components/schemas/LogTypeList"
        DeletionProtection:
          $ref: "#/components/schemas/BooleanOptional"
      description: Represents the input to <a>RestoreDBClusterFromSnapshot</a>.
    RestoreDBClusterToPointInTimeMessage:
      type: object
      required:
        - DBClusterIdentifier
        - SourceDBClusterIdentifier
      properties:
        DBClusterIdentifier:
          $ref: "#/components/schemas/String"
        SourceDBClusterIdentifier:
          $ref: "#/components/schemas/String"
        RestoreToTime:
          $ref: "#/components/schemas/TStamp"
        UseLatestRestorableTime:
          $ref: "#/components/schemas/Boolean"
        Port:
          $ref: "#/components/schemas/IntegerOptional"
        DBSubnetGroupName:
          $ref: "#/components/schemas/String"
        VpcSecurityGroupIds:
          $ref: "#/components/schemas/VpcSecurityGroupIdList"
        Tags:
          $ref: "#/components/schemas/TagList"
        KmsKeyId:
          $ref: "#/components/schemas/String"
        EnableCloudwatchLogsExports:
          $ref: "#/components/schemas/LogTypeList"
        DeletionProtection:
          $ref: "#/components/schemas/BooleanOptional"
      description: Represents the input to <a>RestoreDBClusterToPointInTime</a>.
    StartDBClusterMessage:
      type: object
      required:
        - DBClusterIdentifier
      properties:
        DBClusterIdentifier:
          $ref: "#/components/schemas/String"
    StopDBClusterMessage:
      type: object
      required:
        - DBClusterIdentifier
      properties:
        DBClusterIdentifier:
          $ref: "#/components/schemas/String"
    Subnet:
      type: object
      properties:
        SubnetIdentifier:
          $ref: "#/components/schemas/String"
        SubnetAvailabilityZone:
          $ref: "#/components/schemas/AvailabilityZone"
        SubnetStatus:
          $ref: "#/components/schemas/String"
      description: " Detailed information about a subnet. "
    UpgradeTarget:
      type: object
      properties:
        Engine:
          $ref: "#/components/schemas/String"
        EngineVersion:
          $ref: "#/components/schemas/String"
        Description:
          $ref: "#/components/schemas/String"
        AutoUpgrade:
          $ref: "#/components/schemas/Boolean"
        IsMajorVersionUpgrade:
          $ref: "#/components/schemas/Boolean"
      description: The version of the database engine that a DB instance can be upgraded to.
    VpcSecurityGroupMembership:
      type: object
      properties:
        VpcSecurityGroupId:
          $ref: "#/components/schemas/String"
        Status:
          $ref: "#/components/schemas/String"
      description: Used as a response element for queries on virtual private cloud (VPC)
        security group membership.
