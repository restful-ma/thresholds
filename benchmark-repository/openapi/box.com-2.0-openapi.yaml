openapi: 3.0.2
servers:
  - description: Box Platform API server
    url: https://api.box.com/2.0
info:
  contact:
    email: devrel@box.com
    name: Box Developer Relations
    url: https://developer.box.com
    x-twitter: BoxHQ
  description: The Box Content API gives you access to secure content management and
    content experience features for use in your own app. It strives to be
    RESTful and is organized around the main resources you’re familiar with from
    the Box web interface.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0
  termsOfService: https://cloud.app.box.com/s/rmwxu64h1ipr41u49w3bbuvbsa29wku9
  title: Box Platform 2.0 APIs
  version: "2.0"
  x-apisguru-categories:
    - cloud
  x-logo:
    url: https://twitter.com/BoxHQ/profile_image?size=original
  x-origin:
    - converter:
        url: https://github.com/lucybot/api-spec-converter
        version: 2.7.31
      format: openapi
      url: https://opensource.box.com/box-openapi/openapi.json
      version: "3.0"
  x-providerName: box.com
security:
  - OAuth2Security: []
tags:
  - name: Folders
    x-box-reference-category: folders
  - name: Files
    x-box-reference-category: files
  - name: Authorization
    x-box-reference-category: authorization
  - name: File Uploads
    x-box-reference-category: file_uploads
  - name: Chunked Uploads
    x-box-reference-category: chunked_uploads
  - name: File Versions
    x-box-reference-category: file_versions
  - name: File & Folder Metadata
    x-box-reference-category: metadata
  - name: Metadata Templates
    x-box-reference-category: metadata_templates
  - name: Metadata Cascade (Beta)
    x-box-reference-category: metadata_cascade_policies
  - name: Collaborations
    x-box-reference-category: collaborations
  - name: Collaboration Whitelist
    x-box-reference-category: collaboration_whitelist
  - name: Collections
    x-box-reference-category: collections
  - name: Comments
    x-box-reference-category: comments
  - name: Device Pins
    x-box-reference-category: device_pins
  - name: Events
    x-box-reference-category: events
  - name: Groups
    x-box-reference-category: groups
  - name: Legal Hold Policies
    x-box-reference-category: legal_hold_policies
  - name: Multi Zones
    x-box-reference-category: multizones
  - name: Recent Items
    x-box-reference-category: recent_items
  - name: Retention Policies
    x-box-reference-category: retention_policies
  - name: Search
    x-box-reference-category: search
  - name: Shared Links
    x-box-reference-category: shared_links
  - name: Skills
    x-box-reference-category: skills
  - name: Tasks
    x-box-reference-category: tasks
  - name: Terms of Service
    x-box-reference-category: terms_of_services
  - name: Trash
    x-box-reference-category: trash
  - name: Users
    x-box-reference-category: users
  - name: Watermarks
    x-box-reference-category: watermarks
  - name: Web Links
    x-box-reference-category: web_links
  - name: Webhooks
    x-box-reference-category: webhooks
paths:
  /authorize:
    get:
      description: |-
        Authorize a user by sending them through the [Box](https://box.com)
        website and request their permission to act on their behalf.

        This is the first step when authenticating a user using
        OAuth 2.0. To request a user's authorization to use the Box APIs
        on their behalf you will need to send a user to the URL with this
        format.
      operationId: get_authorize
      parameters:
        - description: |-
            The string value `"code"` is the only current value we support
            for the OAuth2 grant type.
          example: 5idyGSFuf54zrvKm
          in: query
          name: response_type
          required: true
          schema:
            enum:
              - code
            format: token
            type: string
        - description: >-
            The Client ID of the application that is requesting to authenticate

            the user. To get the Client ID for your application, log in to your

            Box developer console and click the **Edit Application** link for

            the application you're working with. In the OAuth2 Parameters section

            of the configuration page, find the item labeled **client_id**. The

            text of that item is your application's Client ID.
          example: ly1nj6n11vionaie65emwzk575hnnmrk
          in: query
          name: client_id
          required: true
          schema:
            type: string
        - description: >-
            The URL to which Box redirects the browser after the user has
            granted

            or rejected the application permission. This URL must match the

            redirect URL in the configuration of your application. It must be a

            valid HTTPS URL and it needs to be able to handle the redirection to

            complete the next step in the OAuth2 flow.
          example: http://example.com/auth/callback
          in: query
          name: redirect_uri
          required: true
          schema:
            format: url
            type: string
        - description: |-
            A custom string of your choice. Box will pass the same string to
            the redirect URL when authentication is complete. This parameter
            can be used to identify a user on redirect, as well as protect
            against hijacked sessions and other attacks.
          example: my_state
          in: query
          name: state
          required: false
          schema:
            type: string
        - description: >-
            A comma-separated list of application scopes you'd like to

            authenticate the user for. This defaults to all the scopes configured

            for the application in its configuration page.
          example: admin_readwrite
          in: query
          name: scope
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            text/html:
              schema:
                format: html
                type: string
          description: Does not return any data, but rather should be used in the browser.
      security: []
      servers:
        - description: Server for client-side authentication
          url: https://account.box.com/api/oauth2
      summary: Authorize a user
      tags:
        - Authorization
      x-box-reference-category: authorization
  /collaboration_whitelist_entries:
    get:
      description: |-
        Returns the list of whitelist entries which specify what domains can
        collaborate with the current enterprise.
      operationId: get_collaboration_whitelist_entries
      parameters:
        - description: The position marker at which to begin the response.
          example: 1234
          in: query
          name: marker
          required: false
          schema:
            format: int64
            type: integer
        - description: The maximum number of items to return per page.
          example: 1000
          in: query
          name: limit
          required: false
          schema:
            default: 100
            format: int64
            maximum: 1000
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CollaborationWhitelistEntries"
          description: Returns a collection of collaboration whitelist entries.
      summary: List whitelist entries
      tags:
        - Collaboration Whitelist
      x-box-reference-category: collaboration_whitelist
    post:
      description: |-
        Creates a collaboration whitelist entry, specifying a domain
        and direction to allow collaboration for.
      operationId: post_collaboration_whitelist_entries
      requestBody:
        content:
          application/json:
            schema:
              properties:
                direction:
                  description: The direction in which to allow collaborations.
                  enum:
                    - inbound
                    - outbound
                    - both
                  example: inboud
                  type: string
                domain:
                  description: The domain to add to the whitelist.
                  example: example.com
                  type: string
              required:
                - domain
                - direction
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CollaborationWhitelistEntry"
          description: Returns a new collaboration whitelist entry.
      summary: Create whitelist entry
      tags:
        - Collaboration Whitelist
      x-box-reference-category: collaboration_whitelist
  "/collaboration_whitelist_entries/{collaboration_whitelist_entry_id}":
    delete:
      description: Deletes a specific collaboration whitelist entry.
      operationId: delete_collaboration_whitelist_entries_id
      parameters:
        - description: The ID of the collaboration whitelist item
          example: "213123"
          in: path
          name: collaboration_whitelist_entry_id
          required: true
          schema:
            type: string
      responses:
        "204":
          description: |-
            A blank response is returned if the entry was
            successfully deleted.
      summary: Delete whitelist entry
      tags:
        - Collaboration Whitelist
      x-box-reference-category: collaboration_whitelist
    get:
      description: Returns a specific collaboration whitelist entry.
      operationId: get_collaboration_whitelist_entries_id
      parameters:
        - description: The ID of the collaboration whitelist item
          example: "213123"
          in: path
          name: collaboration_whitelist_entry_id
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CollaborationWhitelistEntry"
          description: Returns a collaboration whitelist entry.
      summary: Get whitelist entry
      tags:
        - Collaboration Whitelist
      x-box-reference-category: collaboration_whitelist
  /collaboration_whitelist_exempt_targets:
    get:
      description: |-
        Returns a list of users who have been exempt from the collaboration
        whitelist.
      operationId: get_collaboration_whitelist_exempt_targets
      parameters:
        - description: The position marker at which to begin the response.
          example: 1234
          in: query
          name: marker
          required: false
          schema:
            format: int64
            type: integer
        - description: The maximum number of items to return per page.
          example: 1000
          in: query
          name: limit
          required: false
          schema:
            default: 100
            format: int64
            maximum: 1000
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CollaborationWhitelistExemptTargets"
          description: Returns a collection of collaboration whitelist exemptions.
      summary: List whitelist excemptions
      tags:
        - Collaboration Whitelist
      x-box-reference-category: collaboration_whitelist
    post:
      description: |-
        Creates a collaboration whitelist entry exemption, specifying a user
        that is exempted from the whitelist.
      operationId: post_collaboration_whitelist_exempt_targets
      requestBody:
        content:
          application/json:
            schema:
              properties:
                user:
                  description: The user to exempt.
                  properties:
                    id:
                      description: The ID of the user to exempt.
                      example: "23522323"
                      type: string
                  required:
                    - id
                  type: object
              required:
                - user
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CollaborationWhitelistExemptTarget"
          description: Returns a new collaboration whitelist entry.
      summary: Create whitelist exemption
      tags:
        - Collaboration Whitelist
      x-box-reference-category: collaboration_whitelist
  "/collaboration_whitelist_exempt_targets/{collaboration_whitelist_exempt_target_id}":
    delete:
      description: Deletes a specific collaboration whitelist exemption.
      operationId: delete_collaboration_whitelist_exempt_targets_id
      parameters:
        - description: The ID of the collaboration whitelist exemption
          example: "984923"
          in: path
          name: collaboration_whitelist_exempt_target_id
          required: true
          schema:
            type: string
      responses:
        "204":
          description: |-
            A blank response is returned if the exemption was
            successfully deleted.
      summary: Remove whitelist exemption
      tags:
        - Collaboration Whitelist
      x-box-reference-category: collaboration_whitelist
    get:
      description: |-
        Returns a users who has been exempt from the collaboration
        whitelist.
      operationId: get_collaboration_whitelist_exempt_targets_id
      parameters:
        - description: The ID of the collaboration whitelist exemption
          example: "984923"
          in: path
          name: collaboration_whitelist_exempt_target_id
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CollaborationWhitelistExemptTarget"
          description: Returns a collaboration whitelist exemption.
      summary: Get whitelist excemption
      tags:
        - Collaboration Whitelist
      x-box-reference-category: collaboration_whitelist
  /collaborations:
    get:
      description: Retrieves all pending collaboration invites for this user.
      operationId: get_collaborations
      parameters:
        - description: The status of the collaborations to retrieve
          example: pending
          in: query
          name: status
          required: true
          schema:
            enum:
              - pending
            type: string
        - description: |-
            A comma-separated list of attributes to include in the
            response. This can be used to request fields that are
            not normally returned in a standard response.
          example: id,type,name
          in: query
          name: fields
          required: false
          schema:
            type: string
        - description: The offset of the item at which to begin the response.
          example: 1000
          in: query
          name: offset
          required: false
          schema:
            default: 0
            format: int64
            type: integer
        - description: The maximum number of items to return per page.
          example: 1000
          in: query
          name: limit
          required: false
          schema:
            default: 100
            format: int64
            maximum: 1000
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Collaborations"
          description: |-
            Returns a collection of pending collaboration objects.

            If the user has no pending collaborations, the collection
            will be empty.
      summary: List pending collaborations
      tags:
        - Collaborations
      x-box-reference-category: collaborations
    post:
      description: |-
        Adds a collaboration for a single user or a single group to a file
        or folder.

        Collaborations can be created using email address, user IDs, or a
        group IDs.

        If a collaboration is being created with a group, access to
        this endpoint is dependent on the group's ability to be invited.
      operationId: post_collaborations
      parameters:
        - description: |-
            A comma-separated list of attributes to include in the
            response. This can be used to request fields that are
            not normally returned in a standard response.
          example: id,type,name
          in: query
          name: fields
          required: false
          schema:
            type: string
        - description: |-
            Determines if users should receive email notification
            for the action performed.
          example: true
          in: query
          name: notify
          required: false
          schema:
            type: boolean
      requestBody:
        content:
          application/json:
            schema:
              properties:
                accessible_by:
                  description: The user or group to give access to the item.
                  properties:
                    id:
                      description: |-
                        The ID of the user or group.

                        Alternatively, use `login` to specify a user by email
                        address.
                      example: "23522323"
                      type: string
                    login:
                      description: >-
                        The email address of the user to grant access to the
                        item.


                        Alternatively, use `id` to specify a user by user ID.
                      example: john@example.com
                      type: string
                    type:
                      description: The type of collaborator to invite.
                      enum:
                        - user
                        - group
                      example: user
                      type: string
                  required:
                    - type
                  type: object
                can_view_path:
                  description: >-
                    Determines if the invited users can see the entire parent
                    path to

                    the associated folder. The user will not gain privileges in any

                    parent folder and therefore can not see content the user is not

                    collaborated on.
                  example: true
                  type: boolean
                item:
                  description: The item to attach the comment to.
                  properties:
                    id:
                      description: The ID of the item that will be granted access to
                      example: "11446498"
                      type: string
                    type:
                      description: |-
                        The type of the item that this collaboration will be
                        granted access to
                      enum:
                        - file
                        - folder
                      example: file
                      type: string
                  required:
                    - id
                    - type
                  type: object
                role:
                  description: The level of access granted.
                  enum:
                    - editor
                    - viewer
                    - previewer
                    - uploader
                    - previewer uploader
                    - viewer uploader
                    - co-owner
                  example: editor
                  type: string
              required:
                - item
                - accessible_by
                - role
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Collaboration"
          description: Returns a new collaboration object.
      summary: Create collaboration
      tags:
        - Collaborations
      x-box-reference-category: collaborations
  "/collaborations/{collaboration_id}":
    delete:
      description: Deletes a single collaboration.
      operationId: delete_collaborations_id
      parameters:
        - description: The ID of the collaboration
          example: "1234"
          in: path
          name: collaboration_id
          required: true
          schema:
            type: string
      responses:
        "204":
          description: |-
            A blank response is returned if the collaboration was
            successfully deleted.
      summary: Delete collaboration
      tags:
        - Collaborations
      x-box-reference-category: collaborations
    get:
      description: Retrieves a single collaboration.
      operationId: get_collaborations_id
      parameters:
        - description: The ID of the collaboration
          example: "1234"
          in: path
          name: collaboration_id
          required: true
          schema:
            type: string
        - description: |-
            A comma-separated list of attributes to include in the
            response. This can be used to request fields that are
            not normally returned in a standard response.
          example: id,type,name
          in: query
          name: fields
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Collaboration"
          description: Returns a collaboration object.
      summary: Get collaboration
      tags:
        - Collaborations
      x-box-reference-category: collaborations
    put:
      description: |-
        Updates a collaboration.

        Can be used to change the owner of an item, or to
        accept collaboration invites.
      operationId: put_collaborations_id
      parameters:
        - description: The ID of the collaboration
          example: "1234"
          in: path
          name: collaboration_id
          required: true
          schema:
            type: string
        - description: |-
            A comma-separated list of attributes to include in the
            response. This can be used to request fields that are
            not normally returned in a standard response.
          example: id,type,name
          in: query
          name: fields
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                can_view_path:
                  description: >-
                    Determines if the invited users can see the entire parent
                    path to

                    the associated folder. The user will not gain privileges in any

                    parent folder and therefore can not see content the user is not

                    collaborated on.
                  example: true
                  type: boolean
                role:
                  description: The level of access granted.
                  enum:
                    - editor
                    - viewer
                    - previewer
                    - uploader
                    - previewer uploader
                    - viewer uploader
                    - co-owner
                  example: editor
                  type: string
                status:
                  description: |-
                    Set the status of a `pending` collaboration invitation,
                    effectively accepting, or rejecting the invite.
                  enum:
                    - pending
                    - accepted
                    - rejected
                  example: accepted
                  type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Collaboration"
          description: Returns an updated collaboration object unless the owner has changed.
        "204":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Collaboration"
          description: |-
            If the role is changed to `owner`, the collaboration is deleted
            and a new collaboration is created. The previous `owner` of
            the old collaboration will be a `co-owner` on the new collaboration.
      summary: Update collaboration
      tags:
        - Collaborations
      x-box-reference-category: collaborations
  /collections:
    get:
      description: |-
        Retrieves all collections for a given user.

        Currently, only the `favorites` collection
        is supported.
      operationId: get_collections
      parameters:
        - description: |-
            A comma-separated list of attributes to include in the
            response. This can be used to request fields that are
            not normally returned in a standard response.
          example: id,type,name
          in: query
          name: fields
          required: false
          schema:
            type: string
        - description: The offset of the item at which to begin the response.
          example: 1000
          in: query
          name: offset
          required: false
          schema:
            default: 0
            format: int64
            type: integer
        - description: The maximum number of items to return per page.
          example: 1000
          in: query
          name: limit
          required: false
          schema:
            default: 100
            format: int64
            maximum: 1000
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Collections"
          description: Returns all collections for the given user
      summary: List all collections
      tags:
        - Collections
      x-box-reference-category: collections
  "/collections/{collection_id}/items":
    get:
      description: |-
        Retrieves the files and/or folders contained within
        this collection.
      operationId: get_collections_id_items
      parameters:
        - description: The ID of the collection.
          example: "926489"
          in: path
          name: collection_id
          required: true
          schema:
            type: string
        - description: |-
            A comma-separated list of attributes to include in the
            response. This can be used to request fields that are
            not normally returned in a standard response.
          example: id,type,name
          in: query
          name: fields
          required: false
          schema:
            type: string
        - description: The offset of the item at which to begin the response.
          example: 1000
          in: query
          name: offset
          required: false
          schema:
            default: 0
            format: int64
            type: integer
        - description: The maximum number of items to return per page.
          example: 1000
          in: query
          name: limit
          required: false
          schema:
            default: 100
            format: int64
            maximum: 1000
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items"
          description: Returns an array of items in the collection.
      summary: List collection items
      tags:
        - Collections
      x-box-reference-category: collections
  /comments:
    post:
      description: |-
        Adds a comment comment by the user to a specific file, or
        as a reply to an other comment.
      operationId: post_comments
      parameters:
        - description: |-
            A comma-separated list of attributes to include in the
            response. This can be used to request fields that are
            not normally returned in a standard response.
          example: id,type,name
          in: query
          name: fields
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                item:
                  description: The item to attach the comment to.
                  properties:
                    id:
                      description: The ID of the item
                      example: "11446498"
                      type: string
                    type:
                      description: The type of the item that this comment will be placed on.
                      enum:
                        - file
                        - comment
                      example: file
                      type: string
                  required:
                    - id
                    - type
                  type: object
                message:
                  description: |-
                    The text of the comment.

                    To mention a user, user the `tagged_message`
                    parameter instead.
                  example: Review completed!
                  type: string
                tagged_message:
                  description: |-
                    The text of the comment, including `@[user_id:name]`
                    somewhere in the message to mention another user, which
                    will send them an email notification, letting them know
                    they have been mentioned.

                    The `user_id` is the target user's ID, where the `name`
                    can be any custom phrase. In the Box UI this name will
                    link to the user's profile.

                    If you are not mentioning another user, use`message`
                    instead.
                  example: "@[1234:John] Review completed!"
                  type: string
              required:
                - message
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Comment"
          description: >-
            Returns the newly created comment object.


            [Some fields are optional](#comment) and need to be explicitly

            requested using the [fields](#post-comments--request--fields) parameter.
      summary: Create comment
      tags:
        - Comments
      x-box-reference-category: comments
  "/comments/{comment_id}":
    delete:
      description: Permanently deletes a comment.
      operationId: delete_comments_id
      parameters:
        - description: The ID of the comment.
          example: "12345"
          in: path
          name: comment_id
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Returns an empty response when the comment has been deleted.
      summary: Delete comment
      tags:
        - Comments
      x-box-reference-category: comments
    get:
      description: |-
        Retrieves the message and metadata for a specific comment, as well
        as information on the user who created the comment.
      operationId: get_comments_id
      parameters:
        - description: The ID of the comment.
          example: "12345"
          in: path
          name: comment_id
          required: true
          schema:
            type: string
        - description: |-
            A comma-separated list of attributes to include in the
            response. This can be used to request fields that are
            not normally returned in a standard response.
          example: id,type,name
          in: query
          name: fields
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Comment"
          description: Returns a full comment object.
      summary: Get comment
      tags:
        - Comments
      x-box-reference-category: comments
    put:
      description: Update the message of a comment.
      operationId: put_comments_id
      parameters:
        - description: The ID of the comment.
          example: "12345"
          in: path
          name: comment_id
          required: true
          schema:
            type: string
        - description: |-
            A comma-separated list of attributes to include in the
            response. This can be used to request fields that are
            not normally returned in a standard response.
          example: id,type,name
          in: query
          name: fields
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                message:
                  description: The text of the comment to update
                  example: Review completed!
                  type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Comment"
          description: Returns the updated comment object.
      summary: Update comment
      tags:
        - Comments
      x-box-reference-category: comments
  "/device_pinners/{device_pinner_id}":
    delete:
      description: Deletes an individual device pin.
      operationId: delete_device_pinners_id
      parameters:
        - description: The ID of the device pin
          example: "2324234"
          in: path
          name: device_pinner_id
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Returns an empty response when the pin has been deleted.
      summary: Delete device pin
      tags:
        - Device Pins
      x-box-reference-category: device_pins
    get:
      description: Retrieves information about an individual device pin.
      operationId: get_device_pinners_id
      parameters:
        - description: The ID of the device pin
          example: "2324234"
          in: path
          name: device_pinner_id
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DevicePinner"
          description: Returns information about a single device pin.
      summary: Get device pin
      tags:
        - Device Pins
      x-box-reference-category: device_pins
  "/enterprises/{enterprise_id}/device_pinners":
    get:
      description: |-
        Retrieves all the device pins within an enterprise.

        The user must have admin privileges, and the application
        needs the `manage enterprise` scope to make this call.
      operationId: get_enterprises_id_device_pinners
      parameters:
        - description: The ID of the enterprise
          example: "3442311"
          in: path
          name: enterprise_id
          required: true
          schema:
            type: string
        - description: The position marker at which to begin the response.
          example: 1234
          in: query
          name: marker
          required: false
          schema:
            format: int64
            type: integer
        - description: The maximum number of items to return per page.
          example: 1000
          in: query
          name: limit
          required: false
          schema:
            default: 100
            format: int64
            maximum: 1000
            type: integer
        - description: The sorting direction
          example: ASC
          in: query
          name: direction
          required: false
          schema:
            enum:
              - ASC
              - DESC
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DevicePinners"
          description: Returns a list of device pins for a given enterprise.
      summary: List enterprise device pins
      tags:
        - Device Pins
      x-box-reference-category: device_pins
  /events:
    get:
      description: >-
        Returns up to a year of past events for a given user

        or for the entire enterprise.


        By default this returns events for the authenticated user. To retrieve

        events for the entire enterprise, set the `stream_type` to `admin_logs`.

        The user making the API call will need to have admin privileges, and

        the application will need to have the permission to access the event feed

        to get the enterprise event feed.
      operationId: get_events
      parameters:
        - description: |-
            Defines the type of events that are returned

            * `all` returns everything for a user and is the default
            * `changes` returns events that may cause file tree changes
              such as file updates or collaborations.
            * `sync` is similar to `changes` but only applies to synced folders
            * `admin_logs` returns all events for an entire enterprise and
              requires the user making the API call to have admin permissions.
          example: all
          in: query
          name: stream_type
          schema:
            default: all
            enum:
              - all
              - changes
              - sync
              - admin_logs
            type: string
        - description: |-
            The location in the event stream to start receiving events from.

            * `now` will return an empty list events and
            the latest stream position for initialization.
            * `0` or `null` will return all events.
          example: "1348790499819"
          in: query
          name: stream_position
          schema:
            type: string
        - description: Limits the number of events returned
          example: 50
          in: query
          name: limit
          schema:
            default: 100
            format: int64
            maximum: 500
            type: integer
        - description: A comma-separated list of events to filter by.
          example: ADD_LOGIN_ACTIVITY_DEVICE
          in: query
          name: event_type
          schema:
            items:
              $ref: "#/components/schemas/EventType"
            type: array
        - description: The lower bound date and time to return events for.
          example: 2012-12-12T10:53:43-08:00
          in: query
          name: created_after
          schema:
            format: date-time
            type: string
        - description: The upper bound date and time to return events for.
          example: 2013-12-12T10:53:43-08:00
          in: query
          name: created_before
          required: false
          schema:
            format: date-time
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Events"
          description: |-
            Returns a list of event objects.

            Events objects are returned in pages, with each page (chunk)
            including a list of event objects. The response also includes a
            `chunk_size` parameter indicating how many
            chunks are left, as well as the next `stream_position` that can be
            queried.
      summary: Get user and enterprise events
      tags:
        - Events
      x-box-reference-category: events
    options:
      description: >-
        Returns a list of real-time servers that can be used for long-polling
        updates

        to the [event stream](#get-events).


        Long polling is the concept where a HTTP request is kept open until the

        server sends a response, then repeating the process over and over to receive

        updated responses.


        Long polling the event stream can only be used for user events, not for

        enterprise events.


        To use long polling, first use this endpoint to retrieve a list of long poll

        URLs. Next, make a long poll request to any of the provided URLs.


        When an event occurs in monitored account a response with the value

        `new_change` will be sent. The response contains no other details as

        it simply serves as a prompt to take further action such as sending a

        request to the [events endpoint](#get-events) with the last known

        `stream_position`.


        After the server sends this response it closes the connection. You must now

        repeat the long poll process to begin listening for events again.


        If no events occur for a while and the connection times out you will

        receive a response with the value `reconnect`. When you receive this response

        you’ll make another call to this endpoint to restart the process.


        If you receive no events in `retry_timeout` seconds then you will need to

        make another request to the real-time server (one of the URLs in the response

        for this endpoint). This might be necessary due to network errors.


        Finally, if you receive a `max_retries` error when making a request to the

        real-time server, you should start over by making a call to this endpoint

        first.
      operationId: options_events
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RealtimeServers"
          description: |-
            Returns a paginated array of servers that can be used
            instead of the regular endpoints for long-polling events.
      summary: Get a long poll endpoint
      tags:
        - Events
      x-box-reference-category: events
  /file_version_legal_holds:
    get:
      description: |-
        Get list of non-deleted legal holds for a single legal
        hold policy.
      operationId: get_file_version_legal_holds
      parameters:
        - description: |-
            The ID of the legal hold policy to get the file version legal
            holds for.
          example: "133870"
          in: query
          name: policy_id
          required: true
          schema:
            type: string
        - description: The position marker at which to begin the response.
          example: 1234
          in: query
          name: marker
          required: false
          schema:
            format: int64
            type: integer
        - description: The maximum number of items to return per page.
          example: 1000
          in: query
          name: limit
          required: false
          schema:
            default: 100
            format: int64
            maximum: 1000
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FileVersionLegalHolds"
          description: |-
            Returns the list of file version legal holds for a specific legal
            hold policy.
      summary: List legal holds for policy
      tags:
        - Legal Hold Policies
      x-box-reference-category: legal_hold_policies
  "/file_version_legal_holds/{file_version_legal_hold_id}":
    get:
      description: |-
        Retrieves information about the legal hold policies
        assigned to a file version.
      operationId: get_file_version_legal_holds_id
      parameters:
        - description: The ID of the file version legal hold
          example: "2348213"
          in: path
          name: file_version_legal_hold_id
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FileVersionLegalHold"
          description: Returns the legal hold policy assignments for the file version.
      summary: Inspect legal hold on file
      tags:
        - Legal Hold Policies
      x-box-reference-category: legal_hold_policies
  /file_version_retentions:
    get:
      description: Retrieves all file version retentions for the given enterprise.
      operationId: get_file_version_retentions
      parameters:
        - description: Filters results by files with this ID.
          example: "43123123"
          in: query
          name: file_id
          required: false
          schema:
            type: string
        - description: Filters results by file versions with this ID.
          example: "1"
          in: query
          name: file_version_id
          required: false
          schema:
            type: string
        - description: Filters results by the retention policy with this ID.
          example: "982312"
          in: query
          name: policy_id
          required: false
          schema:
            type: string
        - description: |-
            Filters results by the retention policy with this disposition
            action.
          example: permanently_delete
          in: query
          name: disposition_action
          required: false
          schema:
            enum:
              - permanently_delete
              - remove_retention
            type: string
        - description: |-
            Filters results by files that will have their disposition
            come into effect before this date.
          example: 2012-12-12T10:53:43-08:00
          in: query
          name: disposition_before
          required: false
          schema:
            type: string
        - description: |-
            Filters results by files that will have their disposition
            come into effect after this date.
          example: 2012-12-19T10:34:23-08:00
          in: query
          name: disposition_after
          required: false
          schema:
            type: string
        - description: The maximum number of items to return per page.
          example: 1000
          in: query
          name: limit
          required: false
          schema:
            default: 100
            format: int64
            maximum: 1000
            type: integer
        - description: The position marker at which to begin the response.
          example: 1234
          in: query
          name: marker
          required: false
          schema:
            format: int64
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FileVersionRetentions"
          description: Returns a list of all file version retentions for the enterprise.
      summary: List retentions on files
      tags:
        - Retention Policies
      x-box-reference-category: retention_policies
  "/file_version_retentions/{file_version_retention_id}":
    get:
      description: Returns information about a file version retention.
      operationId: get_file_version_retentions_id
      parameters:
        - description: The ID of the file version retention
          example: "3424234"
          in: path
          name: file_version_retention_id
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FileVersionRetention"
          description: Returns a file version retention object.
      summary: Get retention for file
      tags:
        - Retention Policies
      x-box-reference-category: retention_policies
  /files/content:
    options:
      description: |-
        Performs a check to verify that a file will be accepted by Box
        before you upload the entire file.
      operationId: options_files_content
      requestBody:
        content:
          application/json:
            schema:
              properties:
                name:
                  description: The name for the file
                  example: File.mp4
                  type: string
                parent:
                  allOf:
                    - $ref: "#/components/schemas/Parent"
                    - description: The parent folder to upload the file to
                size:
                  description: The size of the file in bytes
                  example: 1024
                  format: int32
                  type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UploadUrl"
          description: |-
            If the check passed, the response will include a session URL that
            can be used to upload the file to.
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictError"
          description: |-
            If the check did not pass, the response will include some details on
            why it did not pass.
      summary: Preflight check
      tags:
        - Files
      x-box-reference-category: files
    post:
      description: |-
        Uploads a small file to Box. For file sizes over 50MB we recommend
        using the Chunk Upload APIs.
      operationId: post_files_content
      parameters:
        - description: |-
            A comma-separated list of attributes to include in the
            response. This can be used to request fields that are
            not normally returned in a standard response.
          example: id,type,name
          in: query
          name: fields
          required: false
          schema:
            type: string
        - description: |-
            An optional header containing the SHA-1 hash of the file to
            ensure that the file was not corrupted in transit.
          example: 134b65991ed521fcfe4724b7d814ab8ded5185dc
          in: header
          name: Content-MD5
          required: false
          schema:
            type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                attributes:
                  description: The JSON attributes of this request.
                  properties:
                    content_created_at:
                      description: |-
                        Defines the time the file was originally created at.

                        If not set, the upload time will be used.
                      example: 2012-12-12T10:53:43-08:00
                      format: date-time
                      type: string
                    content_modified_at:
                      description: |-
                        Defines the time the file was last modified at.

                        If not set, the upload time will be used.
                      example: 2012-12-12T10:53:43-08:00
                      format: date-time
                      type: string
                    name:
                      description: The name of the file
                      example: Photo.png
                      type: string
                    parent:
                      description: The parent folder to upload the file to
                      properties:
                        id:
                          description: |-
                            The id of the parent folder. Use
                            `0` for the user's root folder.
                          example: "124132"
                          type: string
                      required:
                        - id
                      type: object
                  required:
                    - name
                    - parent
                  type: object
                file:
                  description: The content of the file to upload to Box.
                  format: binary
                  type: string
              required:
                - attributes
                - files
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Files"
          description: Returns the new file object in a list.
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ClientError"
          description: |-
            Returns an error if the file already exists,
            or the account has run out of disk space.
      servers:
        - description: Server for file uploads
          url: https://upload.box.com/api/2.0
      summary: Upload a file
      tags:
        - File Uploads
      x-box-reference-category: file_uploads
  /files/upload_sessions:
    post:
      description: Creates an upload session for a new file.
      operationId: post_files_upload_sessions
      requestBody:
        content:
          application/json:
            schema:
              properties:
                file_name:
                  description: The name of new file
                  example: Project.mov
                  type: string
                file_size:
                  description: The total number of bytes of the file to be uploaded
                  example: 104857600
                  format: int64
                  type: integer
                folder_id:
                  description: The ID of the folder to upload the new file to.
                  example: "0"
                  type: string
              required:
                - folder_id
                - file_size
                - file_name
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UploadSession"
          description: Returns a new upload session.
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ClientError"
          description: |-
            Returns an error if the file already exists,
            or the account has run out of disk space.
      servers:
        - description: Server for file uploads
          url: https://upload.box.com/api/2.0
      summary: Create upload session
      tags:
        - Chunked Uploads
      x-box-reference-category: chunked_uploads
  "/files/upload_sessions/{upload_session_id}":
    delete:
      description: |-
        Abort an upload session and discard all data uploaded.

        This cannot be reversed.
      operationId: delete_files_upload_sessions_id
      parameters:
        - description: The ID of the upload session.
          example: D5E3F7A
          in: path
          name: upload_session_id
          required: true
          schema:
            type: string
      responses:
        "204":
          description: |-
            A blank response is returned if the session was
            successfully aborted.
      servers:
        - description: Server for file uploads
          url: https://upload.box.com/api/2.0
      summary: Abort upload session
      tags:
        - Chunked Uploads
      x-box-reference-category: chunked_uploads
    get:
      description: Return information about an upload session.
      operationId: get_files_upload_sessions_id
      parameters:
        - description: The ID of the upload session.
          example: D5E3F7A
          in: path
          name: upload_session_id
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UploadSession"
          description: Returns an upload session object.
      servers:
        - description: Server for file uploads
          url: https://upload.box.com/api/2.0
      summary: Get upload session
      tags:
        - Chunked Uploads
      x-box-reference-category: chunked_uploads
    put:
      description: Updates a chunk of an upload session for a file.
      operationId: put_files_upload_sessions_id
      parameters:
        - description: The ID of the upload session.
          example: D5E3F7A
          in: path
          name: upload_session_id
          required: true
          schema:
            type: string
        - description: |-
            The [RFC3230][1] message digest of the chunk uploaded.

            Only SHA-1 is supported. The SHA-1 digest must be Base64
            encoded. The format of this header is as
            `sha=BASE64_ENCODED_DIGEST`.

            [1]: https://tools.ietf.org/html/rfc3230
          example: sha=fpRyg5eVQletdZqEKaFlqwBXJzM=
          in: header
          name: Digest
          required: true
          schema:
            type: string
        - description: |-
            The byte range of the chunk.

            Must not overlap with the range of a part already
            uploaded this session.
          example: 8388608-16777215/445856194
          in: header
          name: Content-Range
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/octet-stream:
            schema:
              format: binary
              type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UploadPart"
          description: Chunk has been uploaded successfully.
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ClientError"
          description: |-
            Returns an error if the chunk conflicts with another
            chunk previously uploaded.
        "412":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ClientError"
          description: Returns an error if a precondition failed.
        "416":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ClientError"
          description: >-
            Returns an error if the content range does not match a specified
            range

            for the session.
      servers:
        - description: Server for file uploads
          url: https://upload.box.com/api/2.0
      summary: Upload a part
      tags:
        - Chunked Uploads
      x-box-reference-category: chunked_uploads
  "/files/upload_sessions/{upload_session_id}/commit":
    post:
      description: |-
        Close an upload session and create a file from the
        uploaded chunks.
      operationId: post_files_upload_sessions_id_commit
      parameters:
        - description: The ID of the upload session.
          example: D5E3F7A
          in: path
          name: upload_session_id
          required: true
          schema:
            type: string
        - description: |-
            The [RFC3230][1] message digest of the whole file.

            Only SHA-1 is supported. The SHA-1 digest must be Base64
            encoded. The format of this header is as
            `sha=BASE64_ENCODED_DIGEST`.

            [1]: https://tools.ietf.org/html/rfc3230
          example: sha=fpRyg5eVQletdZqEKaFlqwBXJzM=
          in: header
          name: Digest
          required: true
          schema:
            type: string
        - description: |-
            Ensure this item hasn't recently changed
            by ensuring the item's current `etag` matches the
            `etag` passed into this header.
          example: 1
          in: header
          name: If-Match
          required: false
          schema:
            type: string
        - description: |-
            Ensures the changes are only applied if the
            item's `etag` does not match the provided
            `etag`, ensuring that the item is only updated
            if the content has changed.
          example: 1
          in: header
          name: If-None-Match
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                parts:
                  items:
                    $ref: "#/components/schemas/UploadPart--Mini"
                  type: array
              required:
                - parts
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Files"
          description: Returns the file object in a list.
        "202":
          description: |-
            Returns when all chunks have been uploaded but not yet processed.

            Inspect the upload session to get more information about the
            progress of processing the chunks, then retry committing the file
            when all chunks have processed.
          headers:
            Retry-After:
              description: |-
                Indicates the number of seconds the client should wait before
                attempting their commit request again.
              schema:
                type: integer
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ClientError"
          description: |-
            Returns an error if there is already a file with the same name
            in the target folder.
        "412":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ClientError"
          description: Returns an error if the `If-Match` or `If-None-Match` conditions
            fail.
      servers:
        - description: Server for file uploads
          url: https://upload.box.com/api/2.0
      summary: Commit upload session
      tags:
        - Chunked Uploads
      x-box-reference-category: chunked_uploads
  "/files/upload_sessions/{upload_session_id}/parts":
    get:
      description: |-
        Return a list of the chunks uploaded to the upload
        session so far.
      operationId: get_files_upload_sessions_id_parts
      parameters:
        - description: The ID of the upload session.
          example: D5E3F7A
          in: path
          name: upload_session_id
          required: true
          schema:
            type: string
        - description: The offset of the item at which to begin the response.
          example: 1000
          in: query
          name: offset
          required: false
          schema:
            default: 0
            format: int64
            type: integer
        - description: The maximum number of items to return per page.
          example: 1000
          in: query
          name: limit
          required: false
          schema:
            default: 100
            format: int64
            maximum: 1000
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UploadParts"
          description: Returns a list of parts that have been uploaded.
      servers:
        - description: Server for file uploads
          url: https://upload.box.com/api/2.0
      summary: List parts
      tags:
        - Chunked Uploads
      x-box-reference-category: chunked_uploads
  "/files/{file_id}":
    delete:
      description: |-
        Deletes a file, either permanently or by moving it to
        the trash.

        The the enterprise settings determine whether the item will
        be permanently deleted from Box or moved to the trash.
      operationId: delete_files_id
      parameters:
        - description: The ID of the file.
          example: "12345"
          in: path
          name: file_id
          required: true
          schema:
            type: string
        - description: |-
            Ensure this item hasn't recently changed
            by ensuring the item's current `etag` matches the
            `etag` passed into this header.
          example: 1
          in: header
          name: If-Match
          required: false
          schema:
            type: string
      responses:
        "204":
          description: |-
            Returns an empty response when the file has been successfully
            deleted.
        "412":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ClientError"
          description: >-
            If the `If-Match` header was sent and the file has since changed,
            the

            API will return a `412 Precondition Failed` error.
      summary: Delete a file
      tags:
        - Files
      x-box-reference-category: files
    get:
      description: Retrieves the details about a file.
      operationId: get_files_id
      parameters:
        - description: The ID of the file.
          example: "12345"
          in: path
          name: file_id
          required: true
          schema:
            type: string
        - description: |-
            A comma-separated list of attributes to include in the
            response. This can be used to request fields that are
            not normally returned in a standard response.
          example: id,type,name
          in: query
          name: fields
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/File"
          description: |-
            Returns a file object.

            [Some fields are optional](#file) and need to be explicitly
            requested using the [fields](#get-files-id--request--fields)
            parameter.
      summary: Get a file
      tags:
        - Files
      x-box-reference-category: files
    post:
      description: Restores an file that has been moved to the trash.
      operationId: post_files_id
      parameters:
        - description: The ID of the file.
          example: "12345"
          in: path
          name: file_id
          required: true
          schema:
            type: string
        - description: |-
            A comma-separated list of attributes to include in the
            response. This can be used to request fields that are
            not normally returned in a standard response.
          example: id,type,name
          in: query
          name: fields
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                name:
                  description: An optional new name for the file.
                  example: Restored.docx
                  type: string
                parent:
                  allOf:
                    - $ref: "#/components/schemas/Parent"
                    - description: |-
                        The optional parent folder that the item will
                        be restored to.

                        Use this if the original parent folder no longer
                        exists, or the user no longer has access to the
                        original parent folder.
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/File"
          description: Returns a file object when the file has been restored.
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ClientError"
          description: |-
            Returns an error if the user does not have access to the folder
            the file is being restored to, or the user does not have permission
            to restore files from the trash.
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ClientError"
          description: Returns an error if the file is not in the trash.
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ClientError"
          description: |-
            Returns an error if there is an file with the same name
            in the folder the file is being restored to.
      summary: Restore file
      tags:
        - Trash
        - Files
      x-box-reference-category: trash
    put:
      description: |-
        Updates a file. This can be used to rename or move a file,
        create a shared link, or lock a file.
      operationId: put_files_id
      parameters:
        - description: The ID of the file.
          example: "12345"
          in: path
          name: file_id
          required: true
          schema:
            type: string
        - description: |-
            A comma-separated list of attributes to include in the
            response. This can be used to request fields that are
            not normally returned in a standard response.
          example: id,type,name
          in: query
          name: fields
          required: false
          schema:
            type: string
        - description: |-
            Ensure this item hasn't recently changed
            by ensuring the item's current `etag` matches the
            `etag` passed into this header.
          example: 1
          in: header
          name: If-Match
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                description:
                  description: The description for a file
                  example: Amazing Photo
                  maxLength: 256
                  type: string
                lock:
                  allOf:
                    - $ref: "#/components/schemas/Lock--Writable"
                    - description: Creates a lock on a file. Set to `null` to unlock a file
                name:
                  description: The new name for the file
                  example: NewFile.txt
                  type: string
                parent:
                  allOf:
                    - $ref: "#/components/schemas/Parent"
                    - description: >-
                        The parent folder for this file. Use this to move the
                        file

                        or to restore it out of the trash.
                permissions:
                  allOf:
                    - $ref: "#/components/schemas/Permissions--Writable"
                    - description: Describes if a file can be downloaded and by who.
                shared_link:
                  allOf:
                    - $ref: "#/components/schemas/SharedLink--Writable"
                    - description: Enables the creation of a shared link for this file
                tags:
                  description: |-
                    The tags for this item.

                    To add or remove a tag, retrieve the item's current tags,
                    modify them, and then update them using this field.
                  example:
                    - approved
                  items:
                    type: string
                  type: array
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/File"
          description: |-
            Returns a file object.

            [Some fields are optional](#file) and need to be explicitly
            requested using the [fields](#get-files-id--request--fields)
            parameter.
      summary: Update a file
      tags:
        - Files
      x-box-reference-category: files
  "/files/{file_id}/collaborations":
    get:
      description: |-
        Retrieves a list of collaborations for a file. This
        returns all the users that have access to the file.
      operationId: get_files_id_collaborations
      parameters:
        - description: The ID of the file.
          example: "12345"
          in: path
          name: file_id
          required: true
          schema:
            type: string
        - description: |-
            A comma-separated list of attributes to include in the
            response. This can be used to request fields that are
            not normally returned in a standard response.
          example: id,type,name
          in: query
          name: fields
          required: false
          schema:
            type: string
        - description: The maximum number of items to return per page.
          example: 1000
          in: query
          name: limit
          required: false
          schema:
            default: 100
            format: int64
            maximum: 1000
            type: integer
        - description: The offset of the item at which to begin the response.
          example: 1000
          in: query
          name: offset
          required: false
          schema:
            default: 0
            format: int64
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Collaborations"
          description: |-
            Returns a collection of collaboration objects. If there are no
            collaborations on this file an empty collection will be returned.
      summary: Get file collaborations
      tags:
        - Collaborations
        - Files
      x-box-reference-category: collaborations
  "/files/{file_id}/comments":
    get:
      description: Retrieves a list of comments for a file.
      operationId: get_files_id_comments
      parameters:
        - description: The ID of the file.
          example: "12345"
          in: path
          name: file_id
          required: true
          schema:
            type: string
        - description: |-
            A comma-separated list of attributes to include in the
            response. This can be used to request fields that are
            not normally returned in a standard response.
          example: id,type,name
          in: query
          name: fields
          required: false
          schema:
            type: string
        - description: The maximum number of items to return per page.
          example: 1000
          in: query
          name: limit
          required: false
          schema:
            default: 100
            format: int64
            maximum: 1000
            type: integer
        - description: The offset of the item at which to begin the response.
          example: 1000
          in: query
          name: offset
          required: false
          schema:
            default: 0
            format: int64
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Comments"
          description: |-
            Returns a collection of comment objects. If there are no
            comments on this file an empty collection will be returned.
      summary: Get file comments
      tags:
        - Comments
        - Files
      x-box-reference-category: comments
  "/files/{file_id}/content":
    get:
      description: Returns the contents of a file in binary format.
      operationId: get_files_id_content
      parameters:
        - description: The ID of the file.
          example: "12345"
          in: path
          name: file_id
          required: true
          schema:
            type: string
        - description: |-
            The byte range of the content to download.

            The format `{start_byte}-{end_byte}` can be used to specify
            what section of the file to download.
          example: 0-1024
          in: header
          name: Range
          required: false
          schema:
            type: string
        - description: >-
            The URL and password for a file that has

            been shared using a shared link, as this file would otherwise

            not be accessible to the user.


            Use the format `shared_link=SHARED_LINK_URL` or if a password was set

            use `shared_link=[link]&shared_link_password=[password]`
          example: shared_link=[link]
          in: header
          name: BoxApi
          required: false
          schema:
            type: string
        - description: The file version to download
          example: 4
          in: query
          name: version
          required: false
          schema:
            type: string
      responses:
        "202":
          description: >-
            If the file is not ready to be downloaded yet `Retry-After` header
            will

            be returned indicating the time in seconds after which the file will

            be available for the client to download.


            This response can occur when the file was uploaded immediately before the

            download request.
          headers:
            Retry-After:
              description: The time in seconds after which to retry the download
              schema:
                type: integer
        "302":
          description: >-
            If the file is available to be downloaded the response will include
            a

            `Location` header for the file on `dl.boxcloud.com`.


            The `dl.boxcloud.com` URL is not persistent and clients will need

            to follow the redirect in order to actually download the file.
          headers:
            Location:
              description: A pointer to the download URL
              schema:
                format: url
                type: string
      summary: Download a file
      tags:
        - Files
      x-box-reference-category: files
    post:
      description: |-
        Update a file's content. For file sizes over 50MB we recommend
        using the Chunk Upload APIs.
      operationId: post_files_id_content
      parameters:
        - description: The ID of the file.
          example: "12345"
          in: path
          name: file_id
          required: true
          schema:
            type: string
        - description: |-
            Ensure this item hasn't recently changed
            by ensuring the item's current `etag` matches the
            `etag` passed into this header.
          example: 1
          in: header
          name: If-Match
          required: false
          schema:
            type: string
        - description: |-
            A comma-separated list of attributes to include in the
            response. This can be used to request fields that are
            not normally returned in a standard response.
          example: id,type,name
          in: query
          name: fields
          required: false
          schema:
            type: string
        - description: |-
            An optional header containing the SHA-1 hash of the file to
            ensure that the file was not corrupted in transit.
          example: 134b65991ed521fcfe4724b7d814ab8ded5185dc
          in: header
          name: Content-MD5
          required: false
          schema:
            type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                attributes:
                  description: The JSON attributes of this request.
                  properties:
                    content_modified_at:
                      description: |-
                        Defines the time the file was last modified at.

                        If not set, the upload time will be used.
                      example: 2012-12-12T10:53:43-08:00
                      format: date-time
                      type: string
                    name:
                      description: >-
                        An optional new name for the file. If specified, the
                        file

                        will be renamed when the new version is uploaded.
                      example: Photo 2.0.png
                      type: string
                  required:
                    - name
                  type: object
                file:
                  description: The content of the file to upload to Box.
                  format: binary
                  type: string
              required:
                - attributes
                - files
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Files"
          description: Returns the new file object in a list.
      servers:
        - description: Server for file uploads
          url: https://upload.box.com/api/2.0
      summary: Upload a file version
      tags:
        - File Uploads
      x-box-reference-category: file_uploads
  "/files/{file_id}/copy":
    post:
      description: Creates a copy of a file.
      operationId: post_files_id_copy
      parameters:
        - description: The ID of the file.
          example: "12345"
          in: path
          name: file_id
          required: true
          schema:
            type: string
        - description: |-
            A comma-separated list of attributes to include in the
            response. This can be used to request fields that are
            not normally returned in a standard response.
          example: id,type,name
          in: query
          name: fields
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                name:
                  description: |-
                    An optional different name for the new file.

                    Names can only contain basic, printable
                    ASCII characters, without any slashes or
                    trailing spaces.

                    Bot `.` and `..` are protected names.
                  example: FileCopy.txt
                  maxLength: 255
                  type: string
                parent:
                  allOf:
                    - $ref: "#/components/schemas/Parent"
                    - description: The parent folder
                version:
                  description: An optional ID of the specific file version you want to copy
                  example: "0"
                  type: string
              required:
                - parent
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/File"
          description: |-
            Returns a new file object representing the copied file.

            [Some fields are optional](#file) and need to be explicitly
            requested using the [fields](#post-files-id-copy--request--fields)
            parameter.
      summary: Copy a file
      tags:
        - Files
      x-box-reference-category: files
  "/files/{file_id}/metadata":
    get:
      description: Retrieves all metadata for a given file.
      operationId: get_files_id_metadata
      parameters:
        - description: The ID of the file.
          example: "12345"
          in: path
          name: file_id
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Metadatas"
          description: >-
            Returns all the metadata associated with a file.


            This API does not support pagination and will therefore always return

            all of the metadata associated to the file.
      summary: List file's metadata
      tags:
        - File & Folder Metadata
      x-box-reference-category: metadata
  "/files/{file_id}/metadata/{scope}/{template_key}":
    delete:
      description: Deletes a piece of file metadata.
      operationId: delete_files_id_metadata_id_id
      parameters:
        - description: The ID of the file.
          example: "12345"
          in: path
          name: file_id
          required: true
          schema:
            type: string
        - description: The scope of the metadata template
          example: enterprise_27335
          in: path
          name: scope
          required: true
          schema:
            enum:
              - global
              - enterprise_<id>
            type: string
        - description: The name of the metadata template
          example: blueprintTemplate
          in: path
          name: template_key
          required: true
          schema:
            type: string
      responses:
        "204":
          description: |-
            Returns an empty response when the metadata is
            successfully deleted.
      summary: Delete file metadata
      tags:
        - File & Folder Metadata
      x-box-reference-category: metadata
    get:
      description: Retrieve a specific metadata template instance for a file
      operationId: get_files_id_metadata_id_id
      parameters:
        - description: The ID of the file.
          example: "12345"
          in: path
          name: file_id
          required: true
          schema:
            type: string
        - description: The scope of the metadata template
          example: enterprise_27335
          in: path
          name: scope
          required: true
          schema:
            enum:
              - global
              - enterprise_<id>
            type: string
        - description: The name of the metadata template
          example: blueprintTemplate
          in: path
          name: template_key
          required: true
          schema:
            type: string
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Metadata"
          description: |-
            An instance of the metadata template that includes
            additional `key:value` pairs defined by the user or
            an application.
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ClientError"
          description: |-
            Returned if the metadata template specified
            was not applied to this file.
      summary: Get specific file metadata
      tags:
        - Files & Folder Metadata
      x-box-reference-category: metadata
    post:
      description: |-
        Creates a piece of metadata on a file based on the specified template.

        Only values that are present in the metadata template
        will be accepted.
      operationId: post_files_id_metadata_id_id
      parameters:
        - description: The ID of the file.
          example: "12345"
          in: path
          name: file_id
          required: true
          schema:
            type: string
        - description: The scope of the metadata template
          example: enterprise_27335
          in: path
          name: scope
          required: true
          schema:
            enum:
              - global
              - enterprise_<id>
            type: string
        - description: The name of the metadata template
          example: blueprintTemplate
          in: path
          name: template_key
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties:
                example: Example Value
                type: string
              example:
                example_key: Example Value
              type: object
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Metadata"
          description: |-
            Returns an instance of the template that was specified, with the
            custom template data included.
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ClientError"
          description: |-
            If the piece of metadata already exists, a conflict error
            will be returned. The metadata can then instead be updated with the
            `put` method.
      summary: Create metadata on file
      tags:
        - File & Folder Metadata
      x-box-reference-category: metadata
    put:
      description: |-
        Updates a piece of metadata on a file.

        The metadata instance can only be updated if the instance
        already exists. When editing metadata, only values that adhere to the
        metadata template schema will be accepted.

        The update is applied atomically. If any errors occur during the
        application of the operations, the metadata instance remains unchanged.
      operationId: put_files_id_metadata_id_id
      parameters:
        - description: The ID of the file.
          example: "12345"
          in: path
          name: file_id
          required: true
          schema:
            type: string
        - description: The scope of the metadata template
          example: enterprise_27335
          in: path
          name: scope
          required: true
          schema:
            enum:
              - global
              - enterprise_<id>
            type: string
        - description: The name of the metadata template
          example: blueprintTemplate
          in: path
          name: template_key
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              description: |-
                A [JSON-Patch](https://tools.ietf.org/html/rfc6902)
                specification for the changes to make to the metadata.
                The changes are represented as a JSON array of
                operation objects.
              items:
                $ref: "#/components/schemas/MetadataPatchItem"
              type: array
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Metadata"
          description: |-
            Returns the updated metadata template instance, with the
            custom template data included.
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ClientError"
          description: |-
            If the piece of metadata already exists, a conflict error
            will be returned. The metadata can then instead be updated with the
            `put` method.
      summary: Update file metadata
      tags:
        - File & Folder Metadata
      x-box-reference-category: metadata
  "/files/{file_id}/tasks":
    get:
      description: |-
        Retrieves a list of all the tasks for a file. This
        endpoint does not support paging.
      operationId: get_files_id_tasks
      parameters:
        - description: The ID of the file.
          example: "12345"
          in: path
          name: file_id
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Tasks"
          description: |-
            Returns a collection of task objects. If there are no
            tasks on this file an empty collection will be returned.
      summary: Get file tasks
      tags:
        - Tasks
        - Files
      x-box-reference-category: tasks
  "/files/{file_id}/thumbnail.{extension}":
    get:
      description: >-
        Retrieves a thumbnail, or smaller image representation, of a file.


        Sizes of `32x32`,`64x64`, `128x128`, and `256x256` can be returned in

        the `.png` format and sizes of `32x32`, `94x94`, `160x160`, and `320x320`

        can be returned in the `.jpg` format.


        Thumbnails can be generated for the image and video file formats listed

        [found on our community site](http://community.box.com/t5/Managing-\

        Your-Content/What-file-types-are-supported-by-Box-s-Content-Preview/\

        ta-p/327).
      operationId: get_files_id_thumbnail_id
      parameters:
        - description: The ID of the file.
          example: "12345"
          in: path
          name: file_id
          required: true
          schema:
            type: string
        - description: The file format for the thumbnail
          example: png
          in: path
          name: extension
          required: true
          schema:
            enum:
              - png
              - jpg
            type: string
        - description: The minimum height of the thumbnail
          example: 32
          in: query
          name: min_height
          schema:
            format: int64
            type: integer
        - description: The minimum width of the thumbnail
          example: 32
          in: query
          name: min_width
          schema:
            format: int64
            type: integer
        - description: The maximum height of the thumbnail
          example: 32
          in: query
          name: max_height
          required: false
          schema:
            format: int64
            type: integer
        - description: The maximum width of the thumbnail
          example: 32
          in: query
          name: max_width
          required: false
          schema:
            format: int64
            type: integer
      responses:
        "200":
          content:
            image/jpg:
              schema:
                description: The thumbnail
                format: binary
                type: string
            image/png:
              schema:
                description: The thumbnail
                format: binary
                type: string
          description: |-
            When a thumbnail can be created the thumbnail data will be
            returned in the body of the response.
        "202":
          description: |-
            If the thumbnail is not available yet, a `Location` header
            pointing to a placeholder graphic will be returned.
          headers:
            Location:
              description: |-
                A pointer to a placeholder graphic that can be used until the
                thumbnail has been generated.
              schema:
                format: url
                type: string
            Retry-After:
              description: |-
                The time in seconds after which the thumbnail will be available.

                Your application  only attempt to get the thumbnail again after
                this time.
              schema:
                format: int64
                type: integer
        "302":
          description: >-
            If Box is unable to generate a thumbnail for this file type, a
            `Location`

            header pointing to a placeholder graphic for this file type will be

            returned.
          headers:
            Location:
              description: |-
                A pointer to a placeholder graphic that can be used for this
                file type.
              schema:
                format: url
                type: string
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ClientError"
          description: >-
            If Box is unable to generate a thumbnail for this particular file,
            `404`

            will be returned with a code of `preview_cannot_be_generated`.
      summary: Get a file thumbnail
      tags:
        - Files
        - Thumbnails
      x-box-reference-category: files
  "/files/{file_id}/trash":
    delete:
      description: |-
        Permanently deletes a file that is in the trash.
        This action cannot be undone.
      operationId: delete_files_id_trash
      parameters:
        - description: The ID of the file.
          example: "12345"
          in: path
          name: file_id
          required: true
          schema:
            type: string
      responses:
        "204":
          description: |-
            Returns an empty response when the file was
            permanently deleted.
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ClientError"
          description: Returns an error if the file is not in the trash.
      summary: Permanently delete file
      tags:
        - Files
        - Trash
      x-box-reference-category: trash
    get:
      description: Retrieves a file that has been moved to the trash.
      operationId: get_files_id_trash
      parameters:
        - description: The ID of the file.
          example: "12345"
          in: path
          name: file_id
          required: true
          schema:
            type: string
        - description: |-
            A comma-separated list of attributes to include in the
            response. This can be used to request fields that are
            not normally returned in a standard response.
          example: id,type,name
          in: query
          name: fields
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/File"
          description: |-
            Returns the file that was trashed,
            including information about when the it
            was moved to the trash.
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ClientError"
          description: Returns an error if the file is not in the trash.
      summary: Get trashed file
      tags:
        - Files
        - Trash
      x-box-reference-category: trash
  "/files/{file_id}/upload_sessions":
    post:
      description: Creates an upload session for an existing file.
      operationId: post_files_id_upload_sessions
      parameters:
        - description: The ID of the file.
          example: "12345"
          in: path
          name: file_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                file_name:
                  description: The optional new name of new file
                  example: Project.mov
                  type: string
                file_size:
                  description: The total number of bytes of the file to be uploaded
                  example: 104857600
                  format: int64
                  type: integer
              required:
                - file_size
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UploadSession"
          description: Returns a new upload session.
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ClientError"
          description: |-
            Returns an error if the file already exists,
            or the account has run out of disk space.
      servers:
        - description: Server for file uploads
          url: https://upload.box.com/api/2.0
      summary: Create upload session for existing file
      tags:
        - Chunked Uploads
      x-box-reference-category: chunked_uploads
  "/files/{file_id}/versions":
    get:
      description: >-
        Retrieve information on all version of a file. This endpoint can be used
        to

        retrieve information about older versions of a file.


        Versions are only tracked for Box users with premium accounts.
      operationId: get_files_id_versions
      parameters:
        - description: The ID of the file.
          example: "12345"
          in: path
          name: file_id
          required: true
          schema:
            type: string
        - description: |-
            A comma-separated list of attributes to include in the
            response. This can be used to request fields that are
            not normally returned in a standard response.
          example: id,type,name
          in: query
          name: fields
          required: false
          schema:
            type: string
        - description: The maximum number of items to return per page.
          example: 1000
          in: query
          name: limit
          required: false
          schema:
            default: 100
            format: int64
            maximum: 1000
            type: integer
        - description: The offset of the item at which to begin the response.
          example: 1000
          in: query
          name: offset
          required: false
          schema:
            default: 0
            format: int64
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FileVersions"
          description: |-
            Returns an array of file versions.

            If there are no previous versions of this file an empty
            array will be returned.
      summary: List all file versions
      tags:
        - Files
        - File Versions
      x-box-reference-category: file_versions
  "/files/{file_id}/versions/current":
    post:
      description: |-
        Revert to a previous version of a file.


        If previous versions exist, this method can be used to
        promote one of the older versions to the top of the version history.

        This actually creates a new copy of the old version and puts it at the
        top of the versions history. The file will have the exact same contents
        as the older version, with the the same SHA1/etag, and the same name
        as the original.

        Other properties such as comments do not get updated to their
        former values.
      operationId: post_files_id_versions_current
      parameters:
        - description: The ID of the file.
          example: "12345"
          in: path
          name: file_id
          required: true
          schema:
            type: string
        - description: |-
            A comma-separated list of attributes to include in the
            response. This can be used to request fields that are
            not normally returned in a standard response.
          example: id,type,name
          in: query
          name: fields
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              description: The file version to revert to
              properties:
                id:
                  description: The file version ID
                  example: "11446498"
                  type: string
                type:
                  description: The type to revert to
                  enum:
                    - file_version
                  example: file
                  type: string
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FileVersion"
          description: Returns a newly created file version object.
      summary: Revert file version
      tags:
        - Files
        - File Versions
      x-box-reference-category: file_versions
  "/files/{file_id}/versions/{file_version_id}":
    delete:
      description: |-
        Move a file version to the trash.

        Versions are only tracked for Box users with premium accounts.
      operationId: delete_files_id_versions_id
      parameters:
        - description: The ID of the file.
          example: "12345"
          in: path
          name: file_id
          required: true
          schema:
            type: string
        - description: The ID of the file version
          example: "1234"
          in: path
          name: file_version_id
          required: true
          schema:
            type: string
        - description: |-
            Ensure this item hasn't recently changed
            by ensuring the item's current `etag` matches the
            `etag` passed into this header.
          example: 1
          in: header
          name: If-Match
          required: false
          schema:
            type: string
      responses:
        "204":
          description: |-
            Returns an empty response when the file has been successfully
            deleted.
      summary: Delete file version
      tags:
        - Files
        - File Versions
      x-box-reference-category: file_versions
    get:
      description: |-
        Retrieve a specific older version of a file.

        Versions are only tracked for Box users with premium accounts.
      operationId: get_files_id_versions_id
      parameters:
        - description: The ID of the file.
          example: "12345"
          in: path
          name: file_id
          required: true
          schema:
            type: string
        - description: |-
            A comma-separated list of attributes to include in the
            response. This can be used to request fields that are
            not normally returned in a standard response.
          example: id,type,name
          in: query
          name: fields
          required: false
          schema:
            type: string
        - description: The ID of the file version
          example: "1234"
          in: path
          name: file_version_id
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/File"
          description: >-
            Returns a file object.


            [Some fields are optional](#file) and need to be explicitly

            requested using the [fields](#get-files-id-versions--request--fields)

            parameter.
      summary: Get a file version
      tags:
        - Files
        - File Versions
      x-box-reference-category: file_versions
  "/files/{file_id}/watermark":
    delete:
      description: Removes the watermark from a file.
      operationId: delete_files_id_watermark
      parameters:
        - description: The ID of the file.
          example: "12345"
          in: path
          name: file_id
          required: true
          schema:
            type: string
      responses:
        "204":
          description: |-
            An empty response will be returned when the watermark
            was successfully deleted.
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ClientError"
          description: |-
            Returns an error if the file did not have
            a watermark applied to it
      summary: Remove file watermark
      tags:
        - Watermark
      x-box-reference-category: watermarks
    get:
      description: Retrieve the watermark for a file.
      operationId: get_files_id_watermark
      parameters:
        - description: The ID of the file.
          example: "12345"
          in: path
          name: file_id
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Watermark"
          description: |-
            Returns an object containing information about the
            watermark associated for to this file.
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ClientError"
          description: Returns an error if the file does not have a watermark applied.
      summary: Get file watermark
      tags:
        - Watermarks
      x-box-reference-category: watermarks
    put:
      description: Applies or update a watermark on a file.
      operationId: put_files_id_watermark
      parameters:
        - description: The ID of the file.
          example: "12345"
          in: path
          name: file_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                watermark:
                  description: The watermark to imprint on the file
                  properties:
                    imprint:
                      description: |-
                        The type of watermark to apply.

                        Currently only supports one option.
                      enum:
                        - default
                      example: default
                      type: string
                  required:
                    - imprint
                  type: object
              required:
                - watermark
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Watermark"
          description: |-
            Returns an updated watermark if a watermark already
            existed on this file.
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Watermark"
          description: |-
            Returns a new watermark if no watermark existed on
            this file yet.
      summary: Apply watermark to file
      tags:
        - Watermarks
      x-box-reference-category: watermarks
  /folders:
    post:
      description: Creates a new empty folder within the specified parent folder.
      operationId: post_folders
      parameters:
        - description: |-
            A comma-separated list of attributes to include in the
            response. This can be used to request fields that are
            not normally returned in a standard response.
          example: id,type,name
          in: query
          name: fields
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                name:
                  description: The name for the new folder
                  example: New Folder
                  type: string
                parent:
                  allOf:
                    - $ref: "#/components/schemas/Parent"
                    - description: The parent folder
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Folder"
          description: >-
            Returns a folder object.


            [Some fields are optional](#folder) and need to be explicitly

            requested using the [fields](#post-folders--request--fields) parameter.
      summary: Create a folder
      tags:
        - Folders
      x-box-reference-category: folders
  /folders/trash/items:
    get:
      description: |-
        Retrieves the files and folders that have been moved
        to the trash.

        Any attribute in the full files or folders objects can be passed
        in with the `fields` parameter to retrieve those specific
        attributes that are not returned by default.
      operationId: get_folders_trash_items
      parameters:
        - description: |-
            A comma-separated list of attributes to include in the
            response. This can be used to request fields that are
            not normally returned in a standard response.
          example: id,type,name
          in: query
          name: fields
          required: false
          schema:
            type: string
        - description: The maximum number of items to return per page.
          example: 1000
          in: query
          name: limit
          required: false
          schema:
            default: 100
            format: int64
            maximum: 1000
            type: integer
        - description: The offset of the item at which to begin the response.
          example: 1000
          in: query
          name: offset
          required: false
          schema:
            default: 0
            format: int64
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items"
          description: Returns a list of items that have been deleted
      summary: List trashed items
      tags:
        - Folders
        - Trash
      x-box-reference-category: trash
  "/folders/{folder_id}":
    delete:
      description: |-
        Deletes a folder, either permanently or by moving it to
        the trash.

        The the enterprise settings determine whether the item will
        be permanently deleted from Box or moved to the trash.
      operationId: delete_folders_id
      parameters:
        - description: |-
            The ID of the folder.

            The root folder of a Box account is
            always represented by the id `"0"`.
          example: "12345"
          in: path
          name: folder_id
          required: true
          schema:
            type: string
        - description: |-
            Delete a folder that is not empty by recursively deleting the
            folder and all of its content.
          example: true
          in: query
          name: recursive
          required: false
          schema:
            type: boolean
        - description: |-
            Ensure this item hasn't recently changed
            by ensuring the item's current `etag` matches the
            `etag` passed into this header.
          example: 1
          in: header
          name: If-Match
          required: false
          schema:
            type: string
      responses:
        "204":
          description: |-
            Returns an empty response when the folder is successfully deleted
            or moved to the trash.
      summary: Delete a folder
      tags:
        - Folders
      x-box-reference-category: folders
    get:
      description: |-
        Retrieves the details about a folder, including the first 100 entries
        in the folder.
      operationId: get_folders_id
      parameters:
        - description: |-
            The ID of the folder.

            The root folder of a Box account is
            always represented by the id `"0"`.
          example: "12345"
          in: path
          name: folder_id
          required: true
          schema:
            type: string
        - description: |-
            A comma-separated list of attributes to include in the
            response. This can be used to request fields that are
            not normally returned in a standard response.
          example: id,type,name
          in: query
          name: fields
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Folder"
          description: >-
            Returns a folder object, including the first 100 entries in the
            folder.


            [Some fields are optional](#folder) and need to be explicitly

            requested using the [fields](#get-folders-id--request--fields)

            parameter.
      summary: Get a folder
      tags:
        - Folders
      x-box-reference-category: folders
    post:
      description: Restores an folder that has been moved to the trash.
      operationId: post_folders_id
      parameters:
        - description: |-
            The ID of the folder.

            The root folder of a Box account is
            always represented by the id `"0"`.
          example: "12345"
          in: path
          name: folder_id
          required: true
          schema:
            type: string
        - description: |-
            A comma-separated list of attributes to include in the
            response. This can be used to request fields that are
            not normally returned in a standard response.
          example: id,type,name
          in: query
          name: fields
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                name:
                  description: An optional new name for the folder.
                  example: Restored Photos
                  type: string
                parent:
                  allOf:
                    - $ref: "#/components/schemas/Parent"
                    - description: |-
                        The optional parent folder that the folder will
                        be restored to.

                        Use this if the original parent folder no longer
                        exists, or the user no longer has access to the
                        original parent folder.
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Folder"
          description: Returns a folder object when the folder has been restored.
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ClientError"
          description: >-
            Returns an error if the user does not have access to the folder

            the folder is being restored to, or the user does not have permission

            to restore folders from the trash.
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ClientError"
          description: Returns an error if the folder is not in the trash.
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ClientError"
          description: |-
            Returns an error if there is an folder with the same name
            in the folder the folder is being restored to.
      summary: Restore folder
      tags:
        - Trash
        - Folders
      x-box-reference-category: trash
    put:
      description: |-
        Updates a folder. This can be also be used to move the folder,
        create shared links, update collaborations, and more.
      operationId: put_folders_id
      parameters:
        - description: |-
            The ID of the folder.

            The root folder of a Box account is
            always represented by the id `"0"`.
          example: "12345"
          in: path
          name: folder_id
          required: true
          schema:
            type: string
        - description: |-
            A comma-separated list of attributes to include in the
            response. This can be used to request fields that are
            not normally returned in a standard response.
          example: id,type,name
          in: query
          name: fields
          required: false
          schema:
            type: string
        - description: |-
            Ensure this item hasn't recently changed
            by ensuring the item's current `etag` matches the
            `etag` passed into this header.
          example: 1
          in: header
          name: If-Match
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                can_non_owners_invite:
                  description: |-
                    If collaborators who are not
                    folder owners can invite new collaborators
                  example: true
                  type: boolean
                collections:
                  description: The collections this folder belongs to.
                  items:
                    $ref: "#/components/schemas/Parent"
                  type: array
                description:
                  description: The description of the folder
                  example: Some pictures I took
                  maxLength: 256
                  type: string
                folder_upload_email:
                  allOf:
                    - $ref: "#/components/schemas/FolderUploadEmail"
                    - description: |-
                        Enables an email address for users to upload
                        files directly to the folder
                is_collaboration_restricted_to_enterprise:
                  description: |-
                    If future invites to this folder are restricted to users
                    within the enterprise. This does not affect existing
                    collaborations.
                  example: true
                  type: boolean
                name:
                  description: The new name for the folder
                  example: New Folder
                  type: string
                owned_by:
                  allOf:
                    - $ref: "#/components/schemas/Owner"
                    - description: The user that owns this folder
                parent:
                  allOf:
                    - $ref: "#/components/schemas/Parent"
                    - description: >-
                        The parent folder for this folder. Use this to move the
                        folder

                        or to restore it out of the trash.
                shared_link:
                  allOf:
                    - $ref: "#/components/schemas/SharedLink--Writable"
                    - description: Enables the creation of a shared link for this folder
                sync_state:
                  description: If Box Sync or Box Drive is allowed to sync this folder.
                  enum:
                    - synced
                    - not_synced
                  example: synced
                  type: string
                tags:
                  description: |-
                    The tags for this item.

                    To add or remove a tag, retrieve the item's current tags,
                    modify them, and then update them using this field.
                  example:
                    - approved
                  items:
                    type: string
                  type: array
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Folder"
          description: |-
            Returns a folder object for the updated folder

            [Some fields are optional](#folder) and need to be explicitly
            requested using the [fields](#put-folders-id--request--fields)
            parameter.
      summary: Update a folder
      tags:
        - Folders
      x-box-reference-category: folders
  "/folders/{folder_id}/collaborations":
    get:
      description: |-
        Retrieves a list of collaborations for a folder. This
        returns all the users that have access to the folder.
      operationId: get_folders_id_collaborations
      parameters:
        - description: |-
            The ID of the folder.

            The root folder of a Box account is
            always represented by the id `"0"`.
          example: "12345"
          in: path
          name: folder_id
          required: true
          schema:
            type: string
        - description: |-
            A comma-separated list of attributes to include in the
            response. This can be used to request fields that are
            not normally returned in a standard response.
          example: id,type,name
          in: query
          name: fields
          required: false
          schema:
            type: string
        - description: The maximum number of items to return per page.
          example: 1000
          in: query
          name: limit
          required: false
          schema:
            default: 100
            format: int64
            maximum: 1000
            type: integer
        - description: The offset of the item at which to begin the response.
          example: 1000
          in: query
          name: offset
          required: false
          schema:
            default: 0
            format: int64
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Collaborations"
          description: |-
            Returns a collection of collaboration objects. If there are no
            collaborations on this folder an empty collection will be returned.
      summary: Get folder collaborations
      tags:
        - Collaborations
        - Folders
      x-box-reference-category: collaborations
  "/folders/{folder_id}/copy":
    post:
      description: |-
        Creates a copy of a folder in another folder. The original folder will
        not be changed.
      operationId: post_folders_id_copy
      parameters:
        - description: |-
            The ID of the folder.

            The root folder of a Box account is
            always represented by the id `"0"`.
          example: "12345"
          in: path
          name: folder_id
          required: true
          schema:
            type: string
        - description: |-
            A comma-separated list of attributes to include in the
            response. This can be used to request fields that are
            not normally returned in a standard response.
          example: id,type,name
          in: query
          name: fields
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                name:
                  description: An optional different name for the new folder
                  example: New Folder
                  type: string
                parent:
                  allOf:
                    - $ref: "#/components/schemas/Parent"
                    - description: The parent folder
              required:
                - parent
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Folder"
          description: |-
            Returns a new folder object representing the copied folder.

            [Some fields are optional](#folder) and need to be explicitly
            requested using the [fields](#post-folders-id-copy--request--fields)
            parameter.
      summary: Copy a folder
      tags:
        - Folders
      x-box-reference-category: folders
  "/folders/{folder_id}/items":
    get:
      description: |-
        Retrieves a page of files, folders, web links, and other items contained
        within the specified folder.

        To request more information about the folder, use the
        [Retrieve a folder](#get-folders-id-items) endpoint.
      operationId: get_folders_id_items
      parameters:
        - description: |-
            The ID of the folder.

            The root folder of a Box account is
            always represented by the id `"0"`.
          example: "12345"
          in: path
          name: folder_id
          required: true
          schema:
            type: string
        - description: |-
            A comma-separated list of attributes to include in the
            response. This can be used to request fields that are
            not normally returned in a standard response.
          example: id,type,name
          in: query
          name: fields
          required: false
          schema:
            type: string
        - description: The offset of the item at which to begin the response.
          example: 1000
          in: query
          name: offset
          required: false
          schema:
            default: 0
            format: int64
            type: integer
        - description: The maximum number of items to return per page.
          example: 1000
          in: query
          name: limit
          required: false
          schema:
            default: 100
            format: int64
            maximum: 1000
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items"
          description: A collection of items contained in the folder.
      summary: Get items in folder
      tags:
        - Folders
        - Files
      x-box-reference-category: folders
  "/folders/{folder_id}/metadata":
    get:
      description: Retrieves all metadata for a given folder.
      operationId: get_folders_id_metadata
      parameters:
        - description: |-
            The ID of the folder.

            The root folder of a Box account is
            always represented by the id `"0"`.
          example: "12345"
          in: path
          name: folder_id
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Metadatas"
          description: >-
            Returns all the metadata associated with a folder.


            This API does not support pagination and will therefore always return

            all of the metadata associated to the folder.
      summary: List folder's metadata
      tags:
        - File & Folder Metadata
      x-box-reference-category: metadata
  "/folders/{folder_id}/metadata/{scope}/{template_key}":
    delete:
      description: Deletes a piece of folder metadata.
      operationId: delete_folders_id_metadata_id_id
      parameters:
        - description: |-
            The ID of the folder.

            The root folder of a Box account is
            always represented by the id `"0"`.
          example: "12345"
          in: path
          name: folder_id
          required: true
          schema:
            type: string
        - description: The scope of the metadata template
          example: enterprise_27335
          in: path
          name: scope
          required: true
          schema:
            enum:
              - global
              - enterprise_<id>
            type: string
        - description: The name of the metadata template
          example: blueprintTemplate
          in: path
          name: template_key
          required: true
          schema:
            type: string
      responses:
        "204":
          description: |-
            Returns an empty response when the metadata is
            successfully deleted.
      summary: Delete folder metadata
      tags:
        - File & Folder Metadata
      x-box-reference-category: metadata
    get:
      description: Retrieve a specific metadata template instance for a folder
      operationId: get_folders_id_metadata_id_id
      parameters:
        - description: |-
            The ID of the folder.

            The root folder of a Box account is
            always represented by the id `"0"`.
          example: "12345"
          in: path
          name: folder_id
          required: true
          schema:
            type: string
        - description: The scope of the metadata template
          example: enterprise_27335
          in: path
          name: scope
          required: true
          schema:
            enum:
              - global
              - enterprise_<id>
            type: string
        - description: The name of the metadata template
          example: blueprintTemplate
          in: path
          name: template_key
          required: true
          schema:
            type: string
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Metadata"
          description: |-
            An instance of the metadata template that includes
            additional `key:value` pairs defined by the user or
            an application.
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ClientError"
          description: |-
            Returned if the metadata template specified
            was not applied to this folder.
      summary: Get specific folder metadata
      tags:
        - File & Folder Metadata
      x-box-reference-category: metadata
    post:
      description: |-
        Creates a piece of metadata on a folder based on the specified template.

        Only values that are present in the metadata template
        will be accepted.
      operationId: post_folders_id_metadata_id_id
      parameters:
        - description: |-
            The ID of the folder.

            The root folder of a Box account is
            always represented by the id `"0"`.
          example: "12345"
          in: path
          name: folder_id
          required: true
          schema:
            type: string
        - description: The scope of the metadata template
          example: enterprise_27335
          in: path
          name: scope
          required: true
          schema:
            enum:
              - global
              - enterprise_<id>
            type: string
        - description: The name of the metadata template
          example: blueprintTemplate
          in: path
          name: template_key
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties:
                example: Example Value
                type: string
              example:
                example_key: Example Value
              type: object
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Metadata"
          description: |-
            Returns an instance of the template that was specified, with the
            custom template data included.
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ClientError"
          description: |-
            If the piece of metadata already exists, a conflict error
            will be returned. The metadata can then instead be updated with the
            `put` method.
      summary: Create metadata on folder
      tags:
        - File & Folder Metadata
      x-box-reference-category: metadata
    put:
      description: |-
        Updates a piece of metadata on a folder based.

        The metadata instance can only be updated if the instance
        already exists. When editing metadata, only values that adhere to the
        metadata template schema will be accepted.

        The update is applied atomically. If any errors occur during the
        application of the operations, the metadata instance remains unchanged.
      operationId: put_folders_id_metadata_id_id
      parameters:
        - description: |-
            The ID of the folder.

            The root folder of a Box account is
            always represented by the id `"0"`.
          example: "12345"
          in: path
          name: folder_id
          required: true
          schema:
            type: string
        - description: The scope of the metadata template
          example: enterprise_27335
          in: path
          name: scope
          required: true
          schema:
            enum:
              - global
              - enterprise_<id>
            type: string
        - description: The name of the metadata template
          example: blueprintTemplate
          in: path
          name: template_key
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              description: |-
                A [JSON-Patch](https://tools.ietf.org/html/rfc6902)
                specification for the changes to make to the metadata.
                The changes are represented as a JSON array of
                operation objects.
              items:
                $ref: "#/components/schemas/MetadataPatchItem"
              type: array
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Metadata"
          description: |-
            Returns the updated metadata template instance, with the
            custom template data included.
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ClientError"
          description: |-
            If the piece of metadata already exists, a conflict error
            will be returned. The metadata can then instead be updated with the
            `put` method.
      summary: Update folder metadata
      tags:
        - File & Folder Metadata
      x-box-reference-category: metadata
  "/folders/{folder_id}/trash":
    delete:
      description: |-
        Permanently deletes a folder that is in the trash.
        This action cannot be undone.
      operationId: delete_folders_id_trash
      parameters:
        - description: |-
            The ID of the folder.

            The root folder of a Box account is
            always represented by the id `"0"`.
          example: "12345"
          in: path
          name: folder_id
          required: true
          schema:
            type: string
      responses:
        "204":
          description: |-
            Returns an empty response when the folder was
            permanently deleted.
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ClientError"
          description: Returns an error if the folder is not in the trash.
      summary: Permanently delete folder
      tags:
        - Folders
        - Trash
      x-box-reference-category: trash
    get:
      description: Retrieves a folder that has been moved to the trash.
      operationId: get_folders_id_trash
      parameters:
        - description: |-
            The ID of the folder.

            The root folder of a Box account is
            always represented by the id `"0"`.
          example: "12345"
          in: path
          name: folder_id
          required: true
          schema:
            type: string
        - description: |-
            A comma-separated list of attributes to include in the
            response. This can be used to request fields that are
            not normally returned in a standard response.
          example: id,type,name
          in: query
          name: fields
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Folder"
          description: |-
            Returns the folder that was trashed,
            including information about when the it
            was moved to the trash.
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ClientError"
          description: Returns an error if the folder is not in the trash.
      summary: Get trashed folder
      tags:
        - Folders
        - Trash
      x-box-reference-category: trash
  "/folders/{folder_id}/watermark":
    delete:
      description: Removes the watermark from a folder.
      operationId: delete_folders_id_watermark
      parameters:
        - description: |-
            The ID of the folder.

            The root folder of a Box account is
            always represented by the id `"0"`.
          example: "12345"
          in: path
          name: folder_id
          required: true
          schema:
            type: string
      responses:
        "204":
          description: |-
            An empty response will be returned when the watermark
            was successfully deleted.
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ClientError"
          description: |-
            Returns an error if the folder did not have
            a watermark applied to it
      summary: Remove folder watermark
      tags:
        - Watermark
      x-box-reference-category: watermarks
    get:
      description: Retrieve the watermark for a folder.
      operationId: get_folders_id_watermark
      parameters:
        - description: |-
            The ID of the folder.

            The root folder of a Box account is
            always represented by the id `"0"`.
          example: "12345"
          in: path
          name: folder_id
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Watermark"
          description: |-
            Returns an object containing information about the
            watermark associated for to this folder.
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ClientError"
          description: Returns an error if the folder does not have a watermark applied.
      summary: Get folder watermark
      tags:
        - Watermarks
      x-box-reference-category: watermarks
    put:
      description: Applies or update a watermark on a folder.
      operationId: put_folders_id_watermark
      parameters:
        - description: |-
            The ID of the folder.

            The root folder of a Box account is
            always represented by the id `"0"`.
          example: "12345"
          in: path
          name: folder_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                watermark:
                  description: The watermark to imprint on the folder
                  properties:
                    imprint:
                      description: |-
                        The type of watermark to apply.

                        Currently only supports one option.
                      enum:
                        - default
                      example: default
                      type: string
                  required:
                    - imprint
                  type: object
              required:
                - watermark
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Watermark"
          description: |-
            Returns an updated watermark if a watermark already
            existed on this folder.
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Watermark"
          description: |-
            Returns a new watermark if no watermark existed on
            this folder yet.
      summary: Apply watermark to folder
      tags:
        - Watermarks
      x-box-reference-category: watermarks
  /group_memberships:
    post:
      description: Creates a group membership
      operationId: post_group_memberships
      parameters:
        - description: |-
            A comma-separated list of attributes to include in the
            response. This can be used to request fields that are
            not normally returned in a standard response.
          example: id,type,name
          in: query
          name: fields
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                configurable_permissions:
                  additionalProperties:
                    description: A key value pair of custom permissions.
                    example: true
                    type: boolean
                  description: >-
                    Custom configuration for the permissions an admin

                    if a group will receive. This option has no effect

                    on members with a role of `member`.


                    Setting these permissions overwrites the default

                    access levels of an admin.


                    Specifying a value of "null" for this object will disable

                    all configurable permissions. Specifying permissions will set

                    them accordingly, omitted permissions will be enabled by default.
                  example:
                    can_run_reports: false
                  type: object
                group:
                  description: The group to add the user to.
                  properties:
                    id:
                      description: The ID of the group to add the user to
                      example: "4545523"
                      type: string
                  required:
                    - id
                  type: object
                role:
                  description: The role of the user in the group.
                  enum:
                    - member
                    - admin
                  example: member
                  type: string
                user:
                  description: The user to add to the group.
                  properties:
                    id:
                      description: The ID of the user to add to the group
                      example: "1434325"
                      type: string
                  required:
                    - id
                  type: object
              required:
                - user
                - group
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GroupMembership"
          description: Returns a new group membership object.
      summary: Add user to group
      tags:
        - Groups
      x-box-reference-category: groups
  "/group_memberships/{group_membership_id}":
    delete:
      description: Deletes a specific group membership.
      operationId: delete_group_memberships_id
      parameters:
        - description: The ID of the group membership.
          example: "434534"
          in: path
          name: group_membership_id
          required: true
          schema:
            type: string
      responses:
        "204":
          description: |-
            A blank response is returned if the membership was
            successfully deleted.
      summary: Remove user from group
      tags:
        - Groups
      x-box-reference-category: groups
    get:
      description: Retrieves a specific group membership.
      operationId: get_group_memberships_id
      parameters:
        - description: The ID of the group membership.
          example: "434534"
          in: path
          name: group_membership_id
          required: true
          schema:
            type: string
        - description: |-
            A comma-separated list of attributes to include in the
            response. This can be used to request fields that are
            not normally returned in a standard response.
          example: id,type,name
          in: query
          name: fields
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GroupMembership"
          description: Returns the group membership object.
      summary: Get group membership
      tags:
        - Groups
      x-box-reference-category: groups
    put:
      description: Updates a user's group membership.
      operationId: put_group_memberships_id
      parameters:
        - description: The ID of the group membership.
          example: "434534"
          in: path
          name: group_membership_id
          required: true
          schema:
            type: string
        - description: |-
            A comma-separated list of attributes to include in the
            response. This can be used to request fields that are
            not normally returned in a standard response.
          example: id,type,name
          in: query
          name: fields
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                configurable_permissions:
                  additionalProperties:
                    description: A key value pair of custom permissions.
                    example: true
                    type: boolean
                  description: >-
                    Custom configuration for the permissions an admin

                    if a group will receive. This option has no effect

                    on members with a role of `member`.


                    Setting these permissions overwrites the default

                    access levels of an admin.


                    Specifying a value of "null" for this object will disable

                    all configurable permissions. Specifying permissions will set

                    them accordingly, omitted permissions will be enabled by default.
                  example:
                    can_run_reports: false
                  type: object
                role:
                  description: The role of the user in the group.
                  enum:
                    - member
                    - admin
                  example: member
                  type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GroupMembership"
          description: Returns a new group membership object.
      summary: Update user's membership
      tags:
        - Groups
      x-box-reference-category: groups
  /groups:
    get:
      description: |-
        Retrieves all of the groups for a given enterprise. The user
        must have admin permissions to inspect enterprise's groups.
      operationId: get_groups
      parameters:
        - description: |-
            A comma-separated list of attributes to include in the
            response. This can be used to request fields that are
            not normally returned in a standard response.
          example: id,type,name
          in: query
          name: fields
          required: false
          schema:
            type: string
        - description: The maximum number of items to return per page.
          example: 1000
          in: query
          name: limit
          required: false
          schema:
            default: 100
            format: int64
            maximum: 1000
            type: integer
        - description: The offset of the item at which to begin the response.
          example: 1000
          in: query
          name: offset
          required: false
          schema:
            default: 0
            format: int64
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Groups"
          description: |-
            Returns a collection of group objects. If there are no groups, an
            empty collection will be returned.
      summary: List enterprise groups
      tags:
        - Groups
      x-box-reference-category: groups
    post:
      description: |-
        Creates a new group of users in an enterprise. Only users with admin
        permissions can create new groups.
      operationId: post_groups
      parameters:
        - description: |-
            A comma-separated list of attributes to include in the
            response. This can be used to request fields that are
            not normally returned in a standard response.
          example: id,type,name
          in: query
          name: fields
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                description:
                  description: A human readable description of the group.
                  example: '"Customer Support Group - as imported from Active
                    Directory"'
                  maxLength: 255
                  type: string
                external_sync_identifier:
                  description: |-
                    An arbitrary identifier that can be used by
                    external group sync tools to link this Box Group to
                    an external group.

                    Example values of this field
                    could be an **Active Directory Object ID** or a **Google
                    Group ID**.

                    We recommend you use of this field in
                    order to avoid issues when group names are updated in
                    either Box or external systems.
                  example: AD:123456
                  type: string
                invitability_level:
                  description: |-
                    Specifies who can invite the group to collaborate
                    on folders.

                    When set to `admins_only` the enterprise admin, co-admins,
                    and the group's admin can invite the group.

                    When set to `admins_and_members` all the admins listed
                    above and group members can invite the group.

                    When set to `all_managed_users` all managed users in the
                    enterprise can invite the group.
                  enum:
                    - admins_only
                    - admins_and_members
                    - all_managed_users
                  example: admins_only
                  type: string
                member_viewability_level:
                  description: |-
                    Specifies who can see the members of the group.

                    * `admins_only - the enterprise admin, co-admins, group's
                      group admin
                    * `admins_and_members` - all admins and group members
                    * `all_managed_users` - all managed users in the
                      enterprise
                  enum:
                    - admins_only
                    - admins_and_members
                    - all_managed_users
                  example: admins_only
                  type: string
                name:
                  description: The name of the new group to be created
                  example: Customer Support
                  type: string
                provenance:
                  description: |-
                    Keeps track of which external source this group is
                    coming, for example `Active Directory`, or `Okta`.

                    Setting this will also prevent Box admins from editing
                    the group name and its members directly via the Box
                    web application.

                    This is desirable for one-way syncing of groups.
                  example: Active Directory
                  maxLength: 255
                  type: string
              required:
                - name
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Group"
          description: Returns the new group object.
      summary: Create group
      tags:
        - Groups
      x-box-reference-category: groups
  "/groups/{group_id}":
    delete:
      description: Permanently deletes a group.
      operationId: delete_groups_id
      parameters:
        - description: The ID of the group.
          example: "57645"
          in: path
          name: group_id
          required: true
          schema:
            type: string
      responses:
        "204":
          description: |-
            A blank response is returned if the group was
            successfully deleted.
      summary: Delete group
      tags:
        - Groups
      x-box-reference-category: groups
    get:
      description: Retrieves information about a group.
      operationId: get_groups_id
      parameters:
        - description: The ID of the group.
          example: "57645"
          in: path
          name: group_id
          required: true
          schema:
            type: string
        - description: |-
            A comma-separated list of attributes to include in the
            response. This can be used to request fields that are
            not normally returned in a standard response.
          example: id,type,name
          in: query
          name: fields
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Group"
          description: Returns the group object
      summary: Get group
      tags:
        - Groups
      x-box-reference-category: groups
    put:
      description: Updates a specific group.
      operationId: put_groups_id
      parameters:
        - description: The ID of the group.
          example: "57645"
          in: path
          name: group_id
          required: true
          schema:
            type: string
        - description: |-
            A comma-separated list of attributes to include in the
            response. This can be used to request fields that are
            not normally returned in a standard response.
          example: id,type,name
          in: query
          name: fields
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                description:
                  description: A human readable description of the group.
                  example: '"Customer Support Group - as imported from Active
                    Directory"'
                  maxLength: 255
                  type: string
                external_sync_identifier:
                  description: |-
                    An arbitrary identifier that can be used by
                    external group sync tools to link this Box Group to
                    an external group.

                    Example values of this field
                    could be an **Active Directory Object ID** or a **Google
                    Group ID**.

                    We recommend you use of this field in
                    order to avoid issues when group names are updated in
                    either Box or external systems.
                  example: AD:123456
                  type: string
                invitability_level:
                  description: |-
                    Specifies who can invite the group to collaborate
                    on folders.

                    When set to `admins_only` the enterprise admin, co-admins,
                    and the group's admin can invite the group.

                    When set to `admins_and_members` all the admins listed
                    above and group members can invite the group.

                    When set to `all_managed_users` all managed users in the
                    enterprise can invite the group.
                  enum:
                    - admins_only
                    - admins_and_members
                    - all_managed_users
                  example: admins_only
                  type: string
                member_viewability_level:
                  description: |-
                    Specifies who can see the members of the group.

                    * `admins_only - the enterprise admin, co-admins, group's
                      group admin
                    * `admins_and_members` - all admins and group members
                    * `all_managed_users` - all managed users in the
                      enterprise
                  enum:
                    - admins_only
                    - admins_and_members
                    - all_managed_users
                  example: admins_only
                  type: string
                name:
                  description: The name of the new group to be created
                  example: Customer Support
                  type: string
                provenance:
                  description: |-
                    Keeps track of which external source this group is
                    coming, for example `Active Directory`, or `Okta`.

                    Setting this will also prevent Box admins from editing
                    the group name and its members directly via the Box
                    web application.

                    This is desirable for one-way syncing of groups.
                  example: Active Directory
                  maxLength: 255
                  type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Group"
          description: Returns the updated group object.
      summary: Update group
      tags:
        - Groups
      x-box-reference-category: groups
  "/groups/{group_id}/collaborations":
    get:
      description: |-
        Retrieves all the collaborations for a group. The user
        must have admin permissions to inspect enterprise's groups.

        Each collaboration object has details on which files or
        folders the group has access to and with what role.
      operationId: get_groups_id_collaborations
      parameters:
        - description: The ID of the group.
          example: "57645"
          in: path
          name: group_id
          required: true
          schema:
            type: string
        - description: The maximum number of items to return per page.
          example: 1000
          in: query
          name: limit
          required: false
          schema:
            default: 100
            format: int64
            maximum: 1000
            type: integer
        - description: The offset of the item at which to begin the response.
          example: 1000
          in: query
          name: offset
          required: false
          schema:
            default: 0
            format: int64
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Collaborations"
          description: |-
            Returns a collection of collaboration objects. If there are no
            collaborations, an empty collection will be returned.
      summary: List group's collaborations
      tags:
        - Groups
      x-box-reference-category: groups
  "/groups/{group_id}/memberships":
    get:
      description: |-
        Retrieves all the members for a group. The user
        must have admin permissions to inspect enterprise's groups.
      operationId: get_groups_id_memberships
      parameters:
        - description: The ID of the group.
          example: "57645"
          in: path
          name: group_id
          required: true
          schema:
            type: string
        - description: The maximum number of items to return per page.
          example: 1000
          in: query
          name: limit
          required: false
          schema:
            default: 100
            format: int64
            maximum: 1000
            type: integer
        - description: The offset of the item at which to begin the response.
          example: 1000
          in: query
          name: offset
          required: false
          schema:
            default: 0
            format: int64
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GroupMemberships"
          description: |-
            Returns a collection of membership objects. If there are no
            memberships, an empty collection will be returned.
      summary: Lis group's members
      tags:
        - Groups
      x-box-reference-category: groups
  /invites:
    post:
      description: |-
        Invites an existing external user to join an enterprise.

        The existing user can not be part of another enterprise and
        must already have a Box account. Once invited, the user will receive an
        email and are prompted to accept the invitation within the
        Box web application.

        This method requires the `"Manage An Enterprise"` scope enabled for
        the application, which can be enabled within the developer console.
      operationId: post_invites
      parameters:
        - description: |-
            A comma-separated list of attributes to include in the
            response. This can be used to request fields that are
            not normally returned in a standard response.
          example: id,type,name
          in: query
          name: fields
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                actionable_by:
                  description: The user to invite
                  properties:
                    login:
                      description: The login of the invited user
                      example: john@example.com
                      type: string
                  required:
                    - id
                  type: object
                enterprise:
                  description: The enterprise to invite the user to
                  properties:
                    id:
                      description: The ID of the enterprise
                      example: "1232234"
                      type: string
                  required:
                    - id
                  type: object
              required:
                - enterprise
                - actionable_by
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Invite"
          description: Returns a new invite object.
      summary: Invite user
      tags:
        - Users
      x-box-reference-category: users
  "/invites/{invite_id}":
    get:
      description: Returns the status of a user invite.
      operationId: get_invites_id
      parameters:
        - description: The ID of an invite.
          example: "213723"
          in: path
          name: invite_id
          required: true
          schema:
            type: string
        - description: |-
            A comma-separated list of attributes to include in the
            response. This can be used to request fields that are
            not normally returned in a standard response.
          example: id,type,name
          in: query
          name: fields
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Invite"
          description: Returns an invite object
      summary: Get user invite status
      tags:
        - Users
      x-box-reference-category: users
  /legal_hold_policies:
    get:
      description: |-
        Retrieves a list of legal hold policies that belong to
        an enterprise.
      operationId: get_legal_hold_policies
      parameters:
        - description: |-
            Limits results to policies for which the names start with
            this search term. This is a case-insensitive prefix.
          example: Sales Policy
          in: query
          name: policy_name
          required: false
          schema:
            type: string
        - description: |-
            A comma-separated list of attributes to include in the
            response. This can be used to request fields that are
            not normally returned in a standard response.
          example: id,type,name
          in: query
          name: fields
          required: false
          schema:
            type: string
        - description: The position marker at which to begin the response.
          example: 1234
          in: query
          name: marker
          required: false
          schema:
            format: int64
            type: integer
        - description: The maximum number of items to return per page.
          example: 1000
          in: query
          name: limit
          required: false
          schema:
            default: 100
            format: int64
            maximum: 1000
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LegalHoldPolicies"
          description: Returns a list of legal hold policies.
      summary: List all legal hold policies
      tags:
        - Legal Hold Policies
      x-box-reference-category: legal_hold_policies
    post:
      description: Create a new legal hold policy.
      operationId: post_legal_hold_policies
      requestBody:
        content:
          application/json:
            schema:
              properties:
                description:
                  description: A description for the policy.
                  example: A custom policy for the sales team
                  maxLength: 500
                  type: string
                filter_ended_at:
                  description: |-
                    The filter end date.

                    When this policy is applied using a `custodian` legal
                    hold assignments, it will only apply to file versions
                    created or uploaded inside of the
                    date range. Other assignment types, such as folders and
                    files, will ignore the date filter.

                    Required if `is_ongoing` is set to `false`.
                  example: 2012-12-18T10:53:43-08:00
                  format: date-time
                  maxLength: 500
                  type: string
                filter_started_at:
                  description: |-
                    The filter start date.

                    When this policy is applied using a `custodian` legal
                    hold assignments, it will only apply to file versions
                    created or uploaded inside of the
                    date range. Other assignment types, such as folders and
                    files, will ignore the date filter.

                    Required if `is_ongoing` is set to `false`.
                  example: 2012-12-12T10:53:43-08:00
                  format: date-time
                  maxLength: 500
                  type: string
                is_ongoing:
                  description: >-
                    Whether new assignments under this policy should

                    continue applying to files even after initialization.


                    When this policy is applied using a legal hold assignment,

                    it will continue applying the policy to any new file versions

                    even after it has been applied.


                    For example, if a legal hold assignment is placed on a user

                    today, and that user uploads a file tomorrow, that file will

                    get held. This will continue until the policy is retired.


                    Required if no filter dates are set.
                  example: true
                  type: boolean
                policy_name:
                  description: The name of the policy.
                  example: Sales Policy
                  maxLength: 254
                  type: string
              required:
                - policy_name
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LegalHoldPolicy"
          description: Returns a new legal hold policy object.
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LegalHoldPolicy"
          description: |-
            Returns an error if required parameters are missing,
            or neither `is_ongoing` or filter dates are specified.
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ClientError"
          description: Returns an error if a policy with this name already exists.
      summary: Create legal hold policy
      tags:
        - Legal Hold Policies
      x-box-reference-category: legal_hold_policies
  "/legal_hold_policies/{legal_hold_policy_id}":
    delete:
      description: |-
        Delete an existing legal hold policy.

        This is an asynchronous process. The policy will not be
        fully deleted yet when the response returns.
      operationId: delete_legal_hold_policies_id
      parameters:
        - description: The ID of the legal hold policy
          example: "324432"
          in: path
          name: legal_hold_policy_id
          required: true
          schema:
            type: string
      responses:
        "202":
          description: |-
            A blank response is returned if the policy was
            successfully deleted.
      summary: Delete legal hold policy
      tags:
        - Legal Hold Policies
      x-box-reference-category: legal_hold_policies
    get:
      description: Retrieve a legal hold policy.
      operationId: get_legal_hold_policies_id
      parameters:
        - description: The ID of the legal hold policy
          example: "324432"
          in: path
          name: legal_hold_policy_id
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LegalHoldPolicy"
          description: Returns a legal hold policy object.
      summary: Get legal hold policy
      tags:
        - Legal Hold Policies
      x-box-reference-category: legal_hold_policies
    put:
      description: Update legal hold policy.
      operationId: put_legal_hold_policies_id
      parameters:
        - description: The ID of the legal hold policy
          example: "324432"
          in: path
          name: legal_hold_policy_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                description:
                  description: A description for the policy.
                  example: A custom policy for the sales team
                  maxLength: 500
                  type: string
                policy_name:
                  description: The name of the policy.
                  example: Sales Policy
                  maxLength: 254
                  type: string
                release_notes:
                  description: Notes around why the policy was released.
                  example: Required for GDPR
                  maxLength: 500
                  type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LegalHoldPolicy"
          description: Returns a new legal hold policy object.
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ClientError"
          description: Returns an error if a policy with this name already exists.
      summary: Update legal hold policy
      tags:
        - Legal Hold Policies
      x-box-reference-category: legal_hold_policies
  /legal_hold_policy_assignments:
    get:
      description: Retrieves a list of items a legal hold policy has been assigned to.
      operationId: get_legal_hold_policy_assignments
      parameters:
        - description: The ID of the legal hold policy
          example: "324432"
          in: query
          name: policy_id
          required: true
          schema:
            type: string
        - description: |-
            Filters the results by the type of item the
            policy was applied to.
          example: file
          in: query
          name: assign_to_type
          schema:
            enum:
              - file
              - file_version
              - folder
              - user
            type: string
        - description: |-
            Filters the results by the ID of item the
            policy was applied to.
          example: "1234323"
          in: query
          name: assign_to_id
          schema:
            type: string
        - description: The position marker at which to begin the response.
          example: 1234
          in: query
          name: marker
          required: false
          schema:
            format: int64
            type: integer
        - description: The maximum number of items to return per page.
          example: 1000
          in: query
          name: limit
          required: false
          schema:
            default: 100
            format: int64
            maximum: 1000
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LegalHoldPolicyAssignments"
          description: Returns a list of legal hold policy assignments.
      summary: List policy's assignments
      tags:
        - Legal Hold Policies
      x-box-reference-category: legal_hold_policies
    post:
      description: Assign a legal hold to a file, file version, folder, or user.
      operationId: post_legal_hold_policy_assignments
      requestBody:
        content:
          application/json:
            schema:
              properties:
                assign_to:
                  description: The item to assign the policy to
                  properties:
                    id:
                      description: The ID of item to assign the policy to
                      example: "6564564"
                      type: string
                    type:
                      description: The type of item to assign the policy to
                      enum:
                        - file
                        - file_version
                        - folder
                        - user
                      example: folder
                      type: string
                  required:
                    - type
                    - id
                  type: object
                policy_id:
                  description: The ID of the policy to assign.
                  example: "123244"
                  type: string
              required:
                - policy_id
                - assign_to
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LegalHoldPolicyAssignment"
          description: Returns a new legal hold policy assignment.
      summary: Assign legal hold policy
      tags:
        - Legal Hold Policies
      x-box-reference-category: legal_hold_policies
  "/legal_hold_policy_assignments/{legal_hold_policy_assignment_id}":
    delete:
      description: |-
        Remove a legal hold from an item.

        This is an asynchronous process. The policy will not be
        fully removed yet when the response returns.
      operationId: delete_legal_hold_policy_assignments_id
      parameters:
        - description: The ID of the legal hold policy assignment
          example: "753465"
          in: path
          name: legal_hold_policy_assignment_id
          required: true
          schema:
            type: string
      responses:
        "202":
          description: |-
            A blank response is returned if the assignment was
            successfully deleted.
      summary: Unassign legal hold policy
      tags:
        - Legal Hold Policies
      x-box-reference-category: legal_hold_policies
    get:
      description: Retrieve a legal hold policy assignment.
      operationId: get_legal_hold_policy_assignments_id
      parameters:
        - description: The ID of the legal hold policy assignment
          example: "753465"
          in: path
          name: legal_hold_policy_assignment_id
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LegalHoldPolicyAssignment"
          description: Returns a legal hold policy object.
      summary: Get policy assignment
      tags:
        - Legal Hold Policies
      x-box-reference-category: legal_hold_policies
  /metadata_cascade_policies:
    get:
      description: |-
        Retrieve a collection of metadata cascade policies
        within a given folder for the current enterprise.
      operationId: get_metadata_cascade_policies
      parameters:
        - description: |-
            Specifies which folder to return policies for.

            This is not required if the user making the API call
            has admin permissions. In that case, this endpoints
            returns all cascade policies in the enterprise.
          example: "31232"
          in: query
          name: folder_id
          schema:
            type: string
        - description: |-
            The ID of the enterprise ID for which to find metadata
            cascade policies. If not specified, it defaults to the
            current enterprise.
          example: "31232"
          in: query
          name: owner_enterprise_id
          schema:
            type: string
        - description: The position marker at which to begin the response.
          example: 1234
          in: query
          name: marker
          required: false
          schema:
            format: int64
            type: integer
        - description: The offset of the item at which to begin the response.
          example: 1000
          in: query
          name: offset
          required: false
          schema:
            default: 0
            format: int64
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MetadataCascadePolicies"
          description: Returns a list of metadata cascade policies
      summary: List cascade policies
      tags:
        - Metadata Cascade (Beta)
      x-box-reference-category: metadata_cascade_policies
    post:
      description: |-
        Creates a new metadata cascade policy that applies a given
        metadata template to a given folder and automatically
        cascades it down to its children.

        In order for the policy to work, a metadata instance must first
        be applied to the folder.
      operationId: post_metadata_cascade_policies
      requestBody:
        content:
          application/json:
            schema:
              properties:
                folder_id:
                  description: The ID of the folder to assign the template to.
                  example: "12321"
                  type: string
                scope:
                  description: The scope of the metadata template
                  enum:
                    - global
                    - enterprise_<id>
                  example: enterprise_27335
                  type: string
                templateKey:
                  description: The identifier of the metadata template.
                  example: productInfo
                  type: string
              required:
                - folder_id
                - scope
                - template_key
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MetadataCascadePolicy"
          description: Returns a new of metadata cascade policy
      summary: Create cascade policy
      tags:
        - Metadata Cascade (Beta)
      x-box-reference-category: metadata_cascade_policies
  "/metadata_cascade_policies/{metadata_cascade_policy_id}":
    delete:
      description: Deletes a metadata cascade policy.
      operationId: delete_metadata_cascade_policies_id
      parameters:
        - description: The ID of the metadata cascade policy.
          example: "324324"
          in: path
          name: metadata_cascade_policy_id
          required: true
          schema:
            type: string
      responses:
        "204":
          description: |-
            Returns an empty response when the policy
            is successfully deleted.
      summary: Delete cascade policy
      tags:
        - Metadata Cascade (Beta)
      x-box-reference-category: metadata_cascade_policies
    get:
      description: Retrieve a metadata cascade policy.
      operationId: get_metadata_cascade_policies_id
      parameters:
        - description: The ID of the metadata cascade policy.
          example: "324324"
          in: path
          name: metadata_cascade_policy_id
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MetadataCascadePolicy"
          description: Returns a list of metadata cascade policies
      summary: Get cascade policy
      tags:
        - Metadata Cascade (Beta)
      x-box-reference-category: metadata_cascade_policies
  "/metadata_cascade_policies/{metadata_cascade_policy_id}/apply":
    post:
      description: |-
        If a policy already exists on a folder, this will apply that policy
        to all existing files and sub-folders within the target folder.
      operationId: post_metadata_cascade_policies_id_apply
      parameters:
        - description: The ID of the cascade policy.
          example: "21312"
          in: path
          name: metadata_cascade_policy_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                conflict_resolution:
                  description: >-
                    The desired behavior for conflict-resolution if a template
                    already

                    exists on a given file or folder.


                    * `none` will preserve the existing value on the file

                    * `overwrite` will force-apply the templates values over
                      any existing values.
                  enum:
                    - none
                    - overwrite
                  example: overwrite
                  type: string
              required:
                - conflict_resolution
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MetadataCascadePolicy"
          description: |-
            Returns the metadata cascade policy when the policy has been
            applied.

            The metadata cascade operation will be kicked off asynchronously.
            The API call will return right away but before the cascade operation
            is complete. There is currently no way to check for when this
            operation has finished.
      summary: Force apply cascade policy
      tags:
        - Metadata Cascade (Beta)
      x-box-reference-category: metadata_cascade_policies
  /metadata_templates/enterprise:
    get:
      description: Used to retrieve all metadata templates within a user's enterprise
      operationId: get_metadata_templates_enterprise
      parameters:
        - description: The position marker at which to begin the response.
          example: 1234
          in: query
          name: marker
          required: false
          schema:
            format: int64
            type: integer
        - description: The maximum number of items to return per page.
          example: 1000
          in: query
          name: limit
          required: false
          schema:
            default: 100
            format: int64
            maximum: 1000
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MetadataTemplates"
          description: |-
            Returns all of the metadata templates within an enterprise
            and their corresponding schema.
      summary: List enterprise templates
      tags:
        - Metadata Templates
      x-box-reference-category: metadata_templates
  /metadata_templates/schema:
    post:
      description: Creates a new metadata template that can be applied to files and folders.
      operationId: post_metadata_templates_schema
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MetadataTemplate--Writable"
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MetadataTemplate"
          description: The schema representing the metadata template created.
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ClientError"
          description: Request body contains an invalid metadata schema.
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ClientError"
          description: |-
            Request body contains a scope that the user is not allowed to
            create a template for.
      summary: Create metadata template
      tags:
        - Metadata Templates
      x-box-reference-category: metadata_templates
  "/metadata_templates/{scope}/{template_key}/schema":
    delete:
      description: |-
        Delete a metadata template and its instances.
        This deletion is permanent and can not be reversed.
      operationId: delete_metadata_templates_id_id_schema
      parameters:
        - description: The scope of the metadata template
          example: enterprise_27335
          in: path
          name: scope
          required: true
          schema:
            enum:
              - global
              - enterprise_<id>
            type: string
        - description: The name of the metadata template
          example: blueprintTemplate
          in: path
          name: template_key
          required: true
          schema:
            type: string
      responses:
        "204":
          description: |-
            Returns an empty response when the metadata
            template is successfully deleted.
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ClientError"
          description: Request body contains an invalid metadata schema.
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ClientError"
          description: |-
            Request body contains a scope that the user is not allowed to
            create a template for.
      summary: Delete metadata template
      tags:
        - Metadata Templates
      x-box-reference-category: metadata_templates
    get:
      description: Retrieves a metadata template by its scope and template name.
      operationId: get_metadata_templates_id_id_schema
      parameters:
        - description: The scope of the metadata template
          example: enterprise_27335
          in: path
          name: scope
          required: true
          schema:
            enum:
              - global
              - enterprise_<id>
            type: string
        - description: The name of the metadata template
          example: blueprintTemplate
          in: path
          name: template_key
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MetadataTemplate"
          description: |-
            Returns the metadata template matching the `scope`
            and `template` name.
      summary: Get template by name
      tags:
        - Metadata Templates
      x-box-reference-category: metadata_templates
    put:
      description: |-
        Updates a metadata template.

        The metadata template can only be updated if the template
        already exists.

        The update is applied atomically. If any errors occur during the
        application of the operations, the metadata template remains unchanged.
      operationId: put_metadata_templates_id_id_schema
      parameters:
        - description: The scope of the metadata template
          example: enterprise_27335
          in: path
          name: scope
          required: true
          schema:
            enum:
              - global
              - enterprise_<id>
            type: string
        - description: The name of the metadata template
          example: blueprintTemplate
          in: path
          name: template_key
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MetadataTemplatePatch"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MetadataTemplate"
          description: |-
            Returns the updated metadata template, with the
            custom template data included.
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ClientError"
          description: The request body contains an invalid metadata schema.
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ClientError"
          description: |-
            The request body contains a scope that the user is not
            allowed to create templates for.
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ClientError"
          description: The requested template could not be found
      summary: Update metadata template
      tags:
        - Metadata Templates
      x-box-reference-category: metadata_templates
  "/metadata_templates/{template_id}":
    get:
      description: Retrieves a metadata template by its ID.
      operationId: get_metadata_templates_id
      parameters:
        - description: The ID of the template
          example: f7a9891f
          in: path
          name: template_id
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MetadataTemplate"
          description: |-
            Returns the metadata template matching the `scope`
            and `template` name.
      summary: Get a template by ID
      tags:
        - Metadata Templates
      x-box-reference-category: metadata_templates
  /oauth2/revoke:
    post:
      description: |-
        Revoke an active Access Token, effectively logging a user out
        that has been previously authenticated.
      operationId: post_oauth2_revoke
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/TokenRevocationRequest"
      responses:
        "200":
          description: Returns an empty response when the token was successfully revoked.
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OAuth2Error"
          description: An authentication error.
      security: []
      summary: Revoke an access token
      tags:
        - Authorization
      x-box-reference-category: authorization
  /oauth2/token:
    post:
      description: |-
        Request an Access Token using either a client-side obtained OAuth2
        authorization code or a server-side JWT assertion.

        An Access Token is a string that enables Box to verify that a
        request belongs to an authorized session. In the normal order of
        operations you will begin by requesting authentication from the
        [authorize](#get-authorize) endpoint and Box will send you an
        authorization code.

        You will then send this code to this endpoint to exchange it for
        an Access Token. The returned Access Token can then be used to to make
        Box API calls.
      operationId: post_oauth2_token
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/TokenRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessToken"
          description: |-
            Returns a new Access Token that can be used to make authenticated
            API calls by passing along the token in a authorization header as
            follows `Authorization: Bearer <Token>`.
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OAuth2Error"
          description: An authentication error.
      security: []
      summary: Request an access token
      tags:
        - Authorization
      x-box-reference-category: authorization
  /recent_items:
    get:
      description: |-
        Returns information about the recent items accessed
        by a user, either in the last 90 days or up to the last
        1000 items accessed.
      operationId: get_recent_items
      parameters:
        - description: |-
            A comma-separated list of attributes to include in the
            response. This can be used to request fields that are
            not normally returned in a standard response.
          example: id,type,name
          in: query
          name: fields
          required: false
          schema:
            type: string
        - description: The maximum number of items to return per page.
          example: 1000
          in: query
          name: limit
          required: false
          schema:
            default: 100
            format: int64
            maximum: 1000
            type: integer
        - description: The position marker at which to begin the response.
          example: 1234
          in: query
          name: marker
          required: false
          schema:
            format: int64
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RecentItems"
          description: Returns a list recent items access by a user.
      summary: List recent items
      tags:
        - Recent Items
      x-box-reference-category: recent_items
  /retention_policies:
    get:
      description: Retrieves all of the retention policies for an enterprise.
      operationId: get_retention_policies
      parameters:
        - description: |-
            Filters results by a case sensitive prefix of the name of
            retention policies.
          example: Sales Policy
          in: query
          name: policy_name
          required: false
          schema:
            type: string
        - description: Filters results by the type of retention policy.
          example: finite
          in: query
          name: policy_type
          required: false
          schema:
            enum:
              - finite
              - indefinite
            type: string
        - description: Filters results by the ID of the user who created policy.
          example: "21312321"
          in: query
          name: created_by_user_id
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RetentionPolicies"
          description: Returns a list retention policies in the enterprise.
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ClientError"
          description: Returns a `bad_request` if a non existent `policy_type` was
            specified.
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ClientError"
          description: >-
            Returns a `not_found` error if the user specified in
            `created_by_user_id`

            does not exist.
      summary: List retention policies
      tags:
        - Retention Policies
      x-box-reference-category: retention_policies
    post:
      description: Creates a retention policy.
      operationId: post_retention_policies
      requestBody:
        content:
          application/json:
            schema:
              properties:
                are_owners_notified:
                  description: |-
                    Whether owner and co-owners of a file are notified
                    when the policy nears expiration.
                  example: true
                  type: boolean
                can_owner_extend_retention:
                  description: |-
                    Whether the owner of a file will be allowed to
                    extend the retention.
                  example: true
                  type: boolean
                custom_notification_recipients:
                  items:
                    $ref: "#/components/schemas/NotifiedUser"
                  type: array
                disposition_action:
                  description: |-
                    The disposition action of the retention policy.
                    This action can be `permanently_delete`, which
                    will cause the content retained by the policy
                    to be permanently deleted, or `remove_retention`,
                    which will lift the retention policy from the content,
                    allowing it to be deleted by users,
                    once the retention policy time period has passed.
                  enum:
                    - permanently_delete
                    - remove_retention
                  example: permanently_delete
                  type: string
                policy_name:
                  description: The name for the retention policy
                  example: Some Policy Name
                  type: string
                policy_type:
                  description: |-
                    The type of the retention policy. A retention
                    policy type can either be `finite`, where a
                    specific amount of time to retain the content is known
                    upfront, or `indefinite`, where the amount of time
                    to retain the content is still unknown.
                  enum:
                    - finite
                    - indefinite
                  example: finite
                  type: string
                retention_length:
                  description: |-
                    The length of the retention policy. This length
                    specifies the duration in days that the retention
                    policy will be active for after being assigned to
                    content.  If the policy has A `policy_type` of
                    `indefinite`, the `retention_length` will also be
                    `indefinite`.
                  example: "0"
                  format: int32
                  type: string
              required:
                - policy_name
                - policy_type
                - disposition_action
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RetentionPolicy"
          description: Returns a new retention policy object.
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ClientError"
          description: |-
            Returns a `bad_request` error with the `retention_length` was
            specified for a `infinite` retention policy, or an incorrect
            `disposition_action` was set.
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ClientError"
          description: Returns an error if a retention policy with the given name already
            exists
      summary: Create retention policy
      tags:
        - Retention Policies
      x-box-reference-category: retention_policies
  "/retention_policies/{retention_policy_id}":
    get:
      description: Retrieves a retention policy.
      operationId: get_retention_policies_id
      parameters:
        - description: The ID of the retention policy.
          example: "982312"
          in: path
          name: retention_policy_id
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RetentionPolicy"
          description: Returns the retention policy object.
      summary: Get retention policy
      tags:
        - Retention Policies
      x-box-reference-category: retention_policies
    put:
      description: Updates a retention policy.
      operationId: put_retention_policies_id
      parameters:
        - description: The ID of the retention policy.
          example: "982312"
          in: path
          name: retention_policy_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                disposition_action:
                  description: |-
                    The disposition action of the retention policy.
                    This action can be `permanently_delete`, which
                    will cause the content retained by the policy
                    to be permanently deleted, or `remove_retention`,
                    which will lift the retention policy from the content,
                    allowing it to be deleted by users,
                    once the retention policy time period has passed.
                  enum:
                    - permanently_delete
                    - remove_retention
                  example: permanently_delete
                  type: string
                policy_name:
                  description: The name for the retention policy
                  example: Some Policy Name
                  type: string
                status:
                  description: |-
                    Used to retire a retention policy.

                    If not retiring a policy, do not include this parameter
                    or set it to `null`.
                  enum:
                    - retired
                  example: retired
                  type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RetentionPolicy"
          description: Returns the updated retention policy object.
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ClientError"
          description: |-
            Returns a `bad_request` if an incorrect
            `disposition_action` was set.
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ClientError"
          description: Returns an error if a retention policy with the given name already
            exists
      summary: Update retention policy
      tags:
        - Retention Policies
      x-box-reference-category: retention_policies
  "/retention_policies/{retention_policy_id}/assignments":
    get:
      description: >-
        Returns a list of all retention policy assignments associated with a
        specified

        retention policy.
      operationId: get_retention_policies_id_assignments
      parameters:
        - description: The ID of the retention policy.
          example: "982312"
          in: path
          name: retention_policy_id
          required: true
          schema:
            type: string
        - description: The type of the retention policy assignment to retrieve.
          example: folder
          in: query
          name: type
          required: false
          schema:
            enum:
              - folder
              - enterprise
            type: string
        - description: The position marker at which to begin the response.
          example: 1234
          in: query
          name: marker
          required: false
          schema:
            format: int64
            type: integer
        - description: The maximum number of items to return per page.
          example: 1000
          in: query
          name: limit
          required: false
          schema:
            default: 100
            format: int64
            maximum: 1000
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RetentionPolicyAssignments"
          description: >-
            Returns a list of the retention policy assignments associated with
            the

            specified retention policy.
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ClientError"
          description: Returns an error if an unknown `type` is specified.
      summary: List policy's assignments
      tags:
        - Retention Policies
      x-box-reference-category: retention_policies
  /retention_policy_assignments:
    post:
      description: Assigns a retention policy to an item.
      operationId: post_retention_policy_assignments
      requestBody:
        content:
          application/json:
            schema:
              properties:
                assign_to:
                  description: The item to assign the policy to
                  properties:
                    id:
                      description: |-
                        The ID of item to assign the policy to.

                        Set to `null` or omit when `type` is set to
                        `enterprise`.
                      example: "6564564"
                      type: string
                    type:
                      description: The type of item to assign the policy to.
                      enum:
                        - enterprise
                        - folder
                        - metadata_template
                      example: folder
                      type: string
                  required:
                    - type
                    - id
                  type: object
                policy_id:
                  description: The ID of the retention policy to assign
                  example: "173463"
                  type: string
              required:
                - policy_id
                - assign_to
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RetentionPolicyAssignment"
          description: Returns a new retention policy assignment object.
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ClientError"
          description: |-
            Returns an error if an `id` is specified while assigning a the
            retention policy to an enterprise.
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ClientError"
          description: Returns an error if no retention policy with the given `policy_id`
            exists.
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ClientError"
          description: >-
            Returns an error if a retention policy of equal or greater length
            has

            already been assigned to this item.
      summary: Assign retention policy
      tags:
        - Retention Policies
      x-box-reference-category: retention_policies
  "/retention_policy_assignments/{retention_policy_assignment_id}":
    get:
      description: Retrieves a retention policy assignment
      operationId: get_retention_policy_assignments_id
      parameters:
        - description: The ID of the retention policy assignment.
          example: "1233123"
          in: path
          name: retention_policy_assignment_id
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RetentionPolicyAssignment"
          description: Returns the retention policy assignment object.
      summary: Get policy assignment
      tags:
        - Retention Policies
      x-box-reference-category: retention_policies
  /search:
    get:
      description: Searches for items that are available to the user or an entire
        enterprise.
      operationId: get_search
      parameters:
        - description: |-
            The string to search for. This query is matched against item names,
            descriptions, text content of files, and various other fields of
            the different item types.
          example: sales
          in: query
          name: query
          required: true
          schema:
            type: string
        - description: |-
            Limits search results to a user scope.

            Defaults to `user_content` which limits the search to content
            available to the current user

            Setting this to `enterprise_content` widens the search to content
            available to the entire enterprise. To enable this scope for an
            administrator, please reach out to support.
          example: user_content
          in: query
          name: scope
          required: false
          schema:
            enum:
              - user_content
              - enterprise_content
            type: string
        - description: |-
            Limits search results to a comma-separated list of
            file extensions.
          example: pdf,png,gif
          in: query
          name: file_extensions
          required: false
          schema:
            type: string
        - description: |-
            Limits search results to items created within
            a given date range.

            Date ranges are defined as comma separated RFC3339
            timestamps.

            If the she start date is omitted (`",[end_date]"`) the
            earliest known date will be used as the start date instead.

            If the end date is omitted (`"[start_date],"`) the current
            date will be used as the end date instead.
          example: 2014-05-15T13:35:01-07:00,2014-05-17T13:35:01-07:00
          in: query
          name: created_at_range
          required: false
          schema:
            type: string
        - description: |-
            Limits search results to items updated within
            a given date range.

            Date ranges are defined as comma separated RFC3339
            timestamps.

            If the she start date is omitted (`",[end_date]"`) the
            earliest known date will be used as the start date instead.

            If the end date is omitted (`"[start_date],"`) the current
            date will be used as the end date instead.
          example: 2014-05-15T13:35:01-07:00,2014-05-17T13:35:01-07:00
          in: query
          name: updated_at_range
          required: false
          schema:
            type: string
        - description: |-
            Limits search results to items within a given file size
            range.

            File size ranges are defined as comma separated byte sizes.

            The upper and lower bound can be omitted to create open ranges.
          example: 1000000,5000000
          in: query
          name: size_range
          required: false
          schema:
            type: string
        - description: |-
            Limits search results to items owned
            by the given list of owners.

            Owners are defined as a comma separated list of user IDs.
          example: 123422,23532,3241212
          in: query
          name: owner_user_ids
          required: false
          schema:
            type: string
        - description: |-
            Limits search results to items within the given
            list of folders.

            Folders are defined as a comma separated lists
            of folder IDs.

            Search results will also include items within subfolders.
          example: 4535234,234123235,2654345
          in: query
          name: ancestor_folder_ids
          required: false
          schema:
            type: string
        - description: |-
            Limits search results to items with the given
            content types.

            Content types are defined as a comma separated lists
            of Box recognized content types.

            Available content types are:

            * `name`
            * `description`
            * `file_content`
            * `comments`
            * `tags
          example: name,description
          in: query
          name: content_types
          required: false
          schema:
            type: string
        - description: Limits search results to items of this type.
          example: file
          in: query
          name: type
          required: false
          schema:
            enum:
              - file
              - folder
              - web_link
            type: string
        - description: |-
            Controls if search results include the trash.

            Defaults to `non_trashed_only`
          example: non_trashed_only
          in: query
          name: trash_content
          required: false
          schema:
            enum:
              - non_trashed_only
              - trashed_only
            type: string
        - description: |-
            Limits search results to items that match the
            metadata template name and content.
          example:
            - filters:
                documentType: datasheet
              scope: enterprise
              templateKey: marketingCollateral
          in: query
          name: mdfilters
          required: false
          schema:
            items:
              $ref: "#/components/schemas/MetadataFilter"
            type: array
        - description: |-
            A comma-separated list of attributes to include in the
            response. This can be used to request fields that are
            not normally returned in a standard response.
          example: id,type,name
          in: query
          name: fields
          required: false
          schema:
            type: string
        - description: The offset of the item at which to begin the response.
          example: 1000
          in: query
          name: offset
          required: false
          schema:
            default: 0
            format: int64
            type: integer
        - description: The maximum number of items to return per page.
          example: 1000
          in: query
          name: limit
          required: false
          schema:
            default: 100
            format: int64
            maximum: 1000
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items"
          description: |-
            Returns a collection of search results. If there are no matching
            search results, the `entries` array will be empty.
      summary: Search for content
      tags:
        - Search
      x-box-reference-category: search
  /shared_items:
    get:
      description: >-
        Return the file or folder represented by a shared link.


        Shared items are any files or folders that are represented by a shared link,

        which can originate within the current enterprise or within another one.


        This endpoint allows an application to retrieve information about a

        shared item when only given a shared link.
      operationId: get_shared_items
      parameters:
        - description: |-
            A header containing the shared link and optional password for the
            shared link.

            The format for this header is as follows.

            `shared_link=[link]&shared_link_password=[password]`
          example: |-
            shared_link=https://cloud.box.com/shared/static/gjasdasjhasd&\
            shared_link_password=letmein
          in: header
          name: BoxApi
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Item"
          description: |-
            Returns a full file or folder object if the shared link is valid and
            the user has access to it.
      summary: Find item for shared link
      tags:
        - Shared Links
      x-box-reference-category: shared_links
  "/skill_invocations/{skill_invocation_id}":
    put:
      description: |-
        Updates the status, usage and response metadata of a
        skill invocation.
      operationId: put_skill_invocations_id
      parameters:
        - description: The ID of the skill invocation.
          example: "33243242"
          in: path
          name: skill_invocation_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                file:
                  description: The file to assign this metadata to
                  properties:
                    id:
                      description: The ID of the file
                      example: "3243244"
                      type: string
                    type:
                      description: "`file`"
                      enum:
                        - file
                      example: file
                      type: string
                  type: object
                file_version:
                  description: The file version to assign this metadata to
                  properties:
                    id:
                      description: The ID of the file version
                      example: "3"
                      type: string
                    type:
                      description: "`file_version`"
                      enum:
                        - file_version
                      example: file_version
                      type: string
                  type: object
                metadata:
                  description: The metadata to set for this skill
                  properties:
                    cards:
                      description: The metadata cards to set on the file.
                      items:
                        $ref: "#/components/schemas/MetadataCard"
                      type: array
                  type: object
                status:
                  description: Sets the status of the skill invocation.
                  enum:
                    - invoked
                    - processing
                    - success
                    - transient_failure
                    - permanent_failure
                  example: success
                  type: string
              required:
                - status
                - metadata
                - file
      responses:
        "200":
          description: Returns an empty response.
      summary: Update skill invocation
      tags:
        - Skills
      x-box-reference-category: skills
  /storage_policies:
    get:
      description: Fetches all the storage policies in the enterprise.
      operationId: get_storage_policies
      parameters:
        - description: |-
            A comma-separated list of attributes to include in the
            response. This can be used to request fields that are
            not normally returned in a standard response.
          example: id,type,name
          in: query
          name: fields
          required: false
          schema:
            type: string
        - description: The position marker at which to begin the response.
          example: 1234
          in: query
          name: marker
          required: false
          schema:
            format: int64
            type: integer
        - description: The maximum number of items to return per page.
          example: 1000
          in: query
          name: limit
          required: false
          schema:
            default: 100
            format: int64
            maximum: 1000
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StoragePolicies"
          description: Returns a collection of storage policies.
      summary: List storage policies
      tags:
        - Multi Zones
      x-box-reference-category: multizones
  "/storage_policies/{storage_policy_id}":
    get:
      description: Fetches a specific storage policy.
      operationId: get_storage_policies_id
      parameters:
        - description: The ID of the storage policy.
          example: "34342"
          in: path
          name: storage_policy_id
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StoragePolicy"
          description: Returns a storage policy object.
      summary: Get storage policy
      tags:
        - Multi Zones
      x-box-reference-category: multizones
  /storage_policy_assignments:
    get:
      description: Fetches all the storage policy assignment for an enterprise or user.
      operationId: get_storage_policy_assignments
      parameters:
        - description: The position marker at which to begin the response.
          example: 1234
          in: query
          name: marker
          required: false
          schema:
            format: int64
            type: integer
        - description: The target type to return assignments for
          example: user
          in: query
          name: resolved_for_type
          required: true
          schema:
            enum:
              - user
              - enterprise
            type: string
        - description: The ID of the user or enterprise to return assignments for
          example: "984322"
          in: query
          name: resolved_for_id
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StoragePolicyAssignments"
          description: |-
            Returns a collection of storage policies for
            the enterprise or user.
      summary: List policy assignments
      tags:
        - Multi Zones
      x-box-reference-category: multizones
    post:
      description: Creates a storage policy assignment for an enterprise or user.
      operationId: post_storage_policy_assignments
      requestBody:
        content:
          application/json:
            schema:
              properties:
                assigned_to:
                  description: |-
                    The user or enterprise to assign the storage
                    policy to.
                  properties:
                    id:
                      description: The ID of the user or enterprise
                      example: "9987987"
                      type: string
                    type:
                      description: The type to assign the policy to.
                      enum:
                        - user
                        - enterprise
                      example: user
                      type: string
                  required:
                    - type
                    - id
                  type: object
                storage_policy:
                  description: |-
                    The storage policy to assign to the user or
                    enterprise
                  properties:
                    id:
                      description: The ID of the storage policy to assign.
                      example: "1434325"
                      type: string
                    type:
                      description: The type to assign.
                      enum:
                        - storage_policy
                      example: storage_policy
                      type: string
                  required:
                    - type
                    - id
                  type: object
              required:
                - storage_policy
                - assigned_to
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StoragePolicyAssignment"
          description: Returns the new storage policy assignment created.
      summary: Assign storage policy
      tags:
        - Multi Zones
      x-box-reference-category: multizones
  "/storage_policy_assignments/{storage_policy_assignment_id}":
    delete:
      description: |-
        Delete a storage policy assignment.

        Deleting a storage policy assignment on a user
        will have the user inherit the enterprise's default
        storage policy.

        There is a rate limit for calling this endpoint of only
        twice per user in a 24 hour period.
      operationId: delete_storage_policy_assignments_id
      parameters:
        - description: The ID of the storage policy assignment.
          example: "932483"
          in: path
          name: storage_policy_assignment_id
          required: true
          schema:
            type: string
      responses:
        "204":
          description: |-
            Returns an empty response when the storage policy
            assignment is successfully deleted.
      summary: Unassign storage policy
      tags:
        - Multi Zones
      x-box-reference-category: multizones
    get:
      description: Fetches a specific storage policy assignment.
      operationId: get_storage_policy_assignments_id
      parameters:
        - description: The ID of the storage policy assignment.
          example: "932483"
          in: path
          name: storage_policy_assignment_id
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StoragePolicyAssignment"
          description: Returns a storage policy assignment object.
      summary: Get policy assignment
      tags:
        - Multi Zones
      x-box-reference-category: multizones
    put:
      description: Updates a specific storage policy assignment.
      operationId: put_storage_policy_assignments_id
      parameters:
        - description: The ID of the storage policy assignment.
          example: "932483"
          in: path
          name: storage_policy_assignment_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                storage_policy:
                  description: |-
                    The storage policy to assign to the user or
                    enterprise
                  properties:
                    id:
                      description: The ID of the storage policy to assign.
                      example: "1434325"
                      type: string
                    type:
                      description: The type to assign.
                      enum:
                        - storage_policy
                      example: storage_policy
                      type: string
                  required:
                    - type
                    - id
                  type: object
              required:
                - storage_policy
                - assigned_to
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StoragePolicyAssignment"
          description: Returns an updated storage policy assignment object.
      summary: Update policy assignment
      tags:
        - Multi Zones
      x-box-reference-category: multizones
  /task_assignments:
    post:
      description: |-
        Assigns a task to a user.

        Multiple assignments to different users
        are allowed per task.
      operationId: post_task_assignments
      requestBody:
        content:
          application/json:
            schema:
              properties:
                assign_to:
                  description: The user to assign the task to.
                  properties:
                    id:
                      description: |-
                        The ID of the user to assign to the
                        task.

                        To specify a user by their email
                        address use the `login` parameter.
                      example: "3242343"
                      type: string
                    login:
                      description: >-
                        The email address of the user to assign to the task.

                        To specify a user by their user ID please use the `id` parameter.
                      example: john@example.com
                      type: string
                  type: object
                task:
                  description: The task to assign to a user.
                  properties:
                    id:
                      description: The ID of the task
                      example: "11446498"
                      type: string
                    type:
                      description: The type of the item to assign.
                      enum:
                        - task
                      example: task
                      type: string
                  required:
                    - id
                    - type
                  type: object
              required:
                - task
                - assign_to
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TaskAssignment"
          description: Returns a new task assignment object.
      summary: Assign task
      tags:
        - Tasks
      x-box-reference-category: tasks
  "/task_assignments/{task_assignment_id}":
    delete:
      description: Deletes a specific task assignment.
      operationId: delete_task_assignments_id
      parameters:
        - description: The ID of the task assignment.
          example: "12345"
          in: path
          name: task_assignment_id
          required: true
          schema:
            type: string
      responses:
        "204":
          description: |-
            An empty response will be returned when the task
            assignment was successfully deleted.
      summary: Unassign task
      tags:
        - Tasks
      x-box-reference-category: tasks
    get:
      description: Fetches a specific task assignment.
      operationId: get_task_assignments_id
      parameters:
        - description: The ID of the task assignment.
          example: "12345"
          in: path
          name: task_assignment_id
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TaskAssignment"
          description: |-
            Returns the requested task assignment, specifying who
            the task has been assigned to and by whom.
      summary: Get task assignment
      tags:
        - Tasks
      x-box-reference-category: tasks
    put:
      description: |-
        Updates a task assignment. This endpoint can be
        used to update the state of a task.
      operationId: put_task_assignments_id
      parameters:
        - description: The ID of the task assignment.
          example: "12345"
          in: path
          name: task_assignment_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                message:
                  description: A message from the assignee about this task
                  example: Please review
                  type: string
                resolution_state:
                  description: |-
                    The state of the task. This can be used to
                    mark the task as completed.
                  enum:
                    - completed
                    - incomplete
                    - approved
                    - rejected
                  example: completed
                  type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TaskAssignment"
          description: Returns the updated task assignment object.
      summary: Update task assignment
      tags:
        - Tasks
      x-box-reference-category: tasks
  /tasks:
    post:
      description: Creates a single task on a file.
      operationId: post_tasks
      requestBody:
        content:
          application/json:
            schema:
              properties:
                action:
                  description: |-
                    The action the task assignee will be prompted to complete.

                    Currently only `review` is supported. This will provide the
                    assigned user the ability to approve or reject the
                    associated request.
                  enum:
                    - review
                  example: review
                  type: string
                due_at:
                  description: When the task is due
                  example: 2012-12-12T10:53:43-08:00
                  format: date-time
                  type: string
                item:
                  description: The file to attach the task to.
                  properties:
                    id:
                      description: The ID of the file
                      example: "11446498"
                      type: string
                    type:
                      description: The type of the item to attach this task to.
                      enum:
                        - file
                      example: file
                      type: string
                  required:
                    - id
                    - type
                  type: object
                message:
                  description: An optional message to include with the task
                  example: Please review
                  type: string
              required:
                - item
                - action
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Task"
          description: Returns a new task object
      summary: Create task
      tags:
        - Tasks
      x-box-reference-category: tasks
  "/tasks/{task_id}":
    delete:
      description: Deletes a specific task.
      operationId: delete_tasks_id
      parameters:
        - description: The ID of the task.
          example: "12345"
          in: path
          name: task_id
          required: true
          schema:
            type: string
      responses:
        "204":
          description: An empty response will be returned when the task was successfully
            deleted.
      summary: Delete task
      tags:
        - Tasks
      x-box-reference-category: tasks
    get:
      description: Fetches a specific task.
      operationId: get_tasks_id
      parameters:
        - description: The ID of the task.
          example: "12345"
          in: path
          name: task_id
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Task"
          description: Returns a task object.
      summary: Get task
      tags:
        - Tasks
      x-box-reference-category: tasks
    put:
      description: Updates a specific task.
      operationId: put_tasks_id
      parameters:
        - description: The ID of the task.
          example: "12345"
          in: path
          name: task_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                action:
                  description: |-
                    The action the task assignee will be prompted to complete.

                    Currently only `review` is supported. This will provide the
                    assigned user the ability to approve or reject the
                    associated request.
                  enum:
                    - review
                  example: review
                  type: string
                due_at:
                  description: When the task is due
                  example: 2012-12-12T10:53:43-08:00
                  format: date-time
                  type: string
                message:
                  description: The message included with the task
                  example: Please review
                  type: string
              required:
                - item
                - action
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Task"
          description: Returns the updated task object
      summary: Update task
      tags:
        - Tasks
      x-box-reference-category: tasks
  "/tasks/{task_id}/assignments":
    get:
      description: Retrieves all of the assignments for a given task.
      operationId: get_tasks_id_assignments
      parameters:
        - description: The ID of the task.
          example: "12345"
          in: path
          name: task_id
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TaskAssignments"
          description: |-
            Returns a collection of task assignment specifying what task on
            a file has been assigned to which users and by who.
      summary: List task's assignments
      tags:
        - Tasks
      x-box-reference-category: tasks
  /terms_of_service_user_statuses:
    get:
      description: |-
        Retrieves an overview of users and their status for a
        terms of service, including Whether they have accepted
        the terms and when.
      operationId: get_terms_of_service_user_statuses
      parameters:
        - description: The ID of the terms of service.
          example: "324234"
          in: query
          name: tos_id
          required: true
          schema:
            type: string
        - description: Limits results to the given user ID.
          example: "123334"
          in: query
          name: user_id
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TermsOfServiceUserStatuses"
          description: Returns a list of terms of service statuses.
      summary: List ToS user statuses
      tags:
        - Terms of Service
      x-box-reference-category: terms_of_services
    post:
      description: Sets the status for a terms of service for a user.
      operationId: post_terms_of_service_user_statuses
      requestBody:
        content:
          application/json:
            schema:
              properties:
                is_accepted:
                  description: Whether the user has accepted the terms.
                  example: true
                  type: boolean
                tos:
                  description: The terms of service to set the status for.
                  properties:
                    id:
                      description: The ID of terms of service
                      example: "1232132"
                      type: string
                    type:
                      description: The type of object.
                      enum:
                        - terms_of_service
                      example: terms_of_service
                      type: string
                  required:
                    - id
                    - type
                  type: object
                user:
                  description: The user to set the status for.
                  properties:
                    id:
                      description: The ID of user
                      example: "3423423"
                      type: string
                    type:
                      description: The type of object.
                      enum:
                        - user
                      example: user
                      type: string
                  required:
                    - id
                    - type
                  type: object
              required:
                - tos
                - user
                - is_accepted
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TermsOfServiceUserStatus"
          description: Returns a terms of service status object.
      summary: Set status for new user
      tags:
        - Terms of Service
      x-box-reference-category: terms_of_services
  "/terms_of_service_user_statuses/{terms_of_service_user_status_id}":
    put:
      description: Updates the status for a terms of service for a user.
      operationId: put_terms_of_service_user_statuses_id
      parameters:
        - description: The ID of the terms of service status.
          example: "324234"
          in: path
          name: terms_of_service_user_status_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                is_accepted:
                  description: Whether the user has accepted the terms.
                  example: true
                  type: boolean
              required:
                - is_accepted
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TermsOfServiceUserStatus"
          description: Returns the updated terms of service status object.
      summary: Set status for existing user
      tags:
        - Terms of Service
      x-box-reference-category: terms_of_services
  /terms_of_services:
    get:
      description: |-
        Returns the current terms of service text and settings
        for the enterprise.
      operationId: get_terms_of_services
      parameters:
        - description: Limits the results to the terms of service of the given type.
          example: managed
          in: query
          name: tos_type
          required: false
          schema:
            enum:
              - external
              - managed
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TermsOfServices"
          description: |-
            Returns a collection of terms of service text and settings for the
            enterprise.
      summary: List terms of services
      tags:
        - Terms of Service
      x-box-reference-category: terms_of_services
    post:
      description: |-
        Creates a terms of service for a given enterprise
        and type of user.
      operationId: post_terms_of_services
      requestBody:
        content:
          application/json:
            schema:
              properties:
                status:
                  description: Whether this terms of service is active.
                  enum:
                    - enabled
                    - disabled
                  example: enabled
                  type: string
                text:
                  description: >-
                    The terms of service text to display to users.


                    The text can be set to empty if the `status` is set to `disabled`.
                  example: By collaborating on this file you are accepting...
                  type: string
                tos_type:
                  description: |-
                    The type of user to set the terms of
                    service for.
                  enum:
                    - external
                    - managed
                  example: managed
                  type: string
              required:
                - status
                - action
                - text
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Task"
          description: Returns a new task object
      summary: Create terms of service
      tags:
        - Terms of Service
      x-box-reference-category: terms_of_services
  "/terms_of_services/{terms_of_service_id}":
    get:
      description: Fetches a specific terms of service.
      operationId: get_terms_of_services_id
      parameters:
        - description: The ID of the terms of service.
          example: "324234"
          in: path
          name: terms_of_service_id
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TermsOfService"
          description: Returns a terms of service object.
      summary: Get terms of service
      tags:
        - Terms of Service
      x-box-reference-category: terms_of_services
    put:
      description: Updates a specific terms of service.
      operationId: put_terms_of_services_id
      parameters:
        - description: The ID of the terms of service.
          example: "324234"
          in: path
          name: terms_of_service_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                status:
                  description: Whether this terms of service is active.
                  enum:
                    - enabled
                    - disabled
                  example: enabled
                  type: string
                text:
                  description: >-
                    The terms of service text to display to users.


                    The text can be set to empty if the `status` is set to `disabled`.
                  example: By collaborating on this file you are accepting...
                  type: string
              required:
                - status
                - action
                - text
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TermsOfService"
          description: Returns an updated terms of service object.
      summary: Update terms of service
      tags:
        - Terms of Service
      x-box-reference-category: terms_of_services
  /users:
    get:
      description: |-
        Returns a list of all users for the Enterprise along with their user_id,
        public_name, and login.

        The application and the authenticated user need to
        have the permission to look up users in the entire
        enterprise.
      operationId: get_users
      parameters:
        - description: |-
            Limits the results to only users who's `name` or
            `login` start with the search term.

            For externally managed users, the search term needs
            to completely match in order to find the user.
          example: john
          in: query
          name: filter_term
          required: false
          schema:
            type: string
        - description: Limits the results to the kind  of user specified.
          example: managed
          in: query
          name: user_type
          required: false
          schema:
            enum:
              - all
              - external
              - managed
            type: string
        - description: |-
            A comma-separated list of attributes to include in the
            response. This can be used to request fields that are
            not normally returned in a standard response.
          example: id,type,name
          in: query
          name: fields
          required: false
          schema:
            type: string
        - description: The offset of the item at which to begin the response.
          example: 1000
          in: query
          name: offset
          required: false
          schema:
            default: 0
            format: int64
            type: integer
        - description: The maximum number of items to return per page.
          example: 1000
          in: query
          name: limit
          required: false
          schema:
            default: 100
            format: int64
            maximum: 1000
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Users"
          description: Returns all of the users in the enterprise.
      summary: List enterprise users
      tags:
        - Users
      x-box-reference-category: users
    post:
      description: |-
        Creates a new managed user in an enterprise. This endpoint
        is only available to users and applications with the right
        admin permissions.
      operationId: post_users
      parameters:
        - description: |-
            A comma-separated list of attributes to include in the
            response. This can be used to request fields that are
            not normally returned in a standard response.
          example: id,type,name
          in: query
          name: fields
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                address:
                  description: The user’s address
                  example: 900 Jefferson Ave, Redwood City, CA 94063
                  maxLength: 255
                  type: string
                can_see_managed_users:
                  description: |-
                    Whether the user can see other enterprise users in their
                    contact list
                  example: true
                  type: boolean
                is_exempt_from_device_limits:
                  description: Whether to exempt the user from enterprise device limits
                  example: true
                  type: boolean
                is_exempt_from_login_verification:
                  description: Whether the user must use two-factor authentication
                  example: true
                  type: boolean
                is_external_collab_restricted:
                  description: >-
                    Whether the user is allowed to collaborate with users
                    outside her

                    enterprise
                  example: true
                  type: boolean
                is_platform_access_only:
                  description: Specifies that the user is an app user.
                  example: true
                  type: boolean
                is_sync_enabled:
                  description: Whether the user can use Box Sync
                  example: true
                  type: boolean
                job_title:
                  description: The user’s job title
                  example: CEO
                  maxLength: 100
                  type: string
                language:
                  description: >-
                    The language of the user, formatted in modified version of
                    the

                    [ISO 639-1][1] format.


                    [1]: https://developer.box.com/docs/api-language-codes
                  example: en
                  format: ISO639-1-BOX
                  type: string
                login:
                  description: |-
                    The email address the user uses to log in

                    Required, unless `is_platform_access_only`
                    is set to `true`.
                  example: boss@box.com
                  type: string
                name:
                  description: The name of the user
                  example: Aaron Levie
                  maxLength: 50
                  type: string
                phone:
                  description: The user’s phone number
                  example: "6509241374"
                  maxLength: 100
                  type: string
                role:
                  description: The user’s enterprise role
                  enum:
                    - coadmin
                    - user
                  example: user
                  type: string
                space_amount:
                  description: The user’s total available space in bytes
                  example: 11345156112
                  type: integer
                status:
                  description: The user's account status
                  enum:
                    - active
                    - inactive
                    - cannot_delete_edit
                    - cannot_delete_edit_upload
                  example: active
                  type: string
                timezone:
                  description: The user's timezone
                  example: Africa/Bujumbura
                  format: timezone
                  type: string
                tracking_codes:
                  description: An array of key/value pairs set by the user’s admin
                  example:
                    - "code1: 12345"
                  items:
                    type: string
                  type: array
              required:
                - name
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
          description: Returns a user object for the newly created user.
      summary: Create user
      tags:
        - Users
      x-box-reference-category: users
  /users/me:
    get:
      description: >-
        Retrieves information about the user who is currently authenticated.


        In the case of a 3-legged OAuth2, client-side authenticated application

        this will be the user who authorized the app.


        In the case of a JWT, server-side authenticated application

        this will be the service account that belongs to the application

        by default.


        Use the `As-User` header to change who this API call is made on behalf of.
      operationId: get_users_me
      parameters:
        - description: |-
            A comma-separated list of attributes to include in the
            response. This can be used to request fields that are
            not normally returned in a standard response.
          example: id,type,name
          in: query
          name: fields
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
          description: Returns a single user object.
      summary: Get authenticated user
      tags:
        - Users
      x-box-reference-category: users
  "/users/{user_id}":
    delete:
      description: |-
        Deletes a user. By default this will fail if the user
        still owns any content. Move their owned content first
        before proceeding, or use the `force` field to delete
        the user and their files.
      operationId: delete_users_id
      parameters:
        - description: The ID of the user.
          example: "12345"
          in: path
          name: user_id
          required: true
          schema:
            type: string
        - description: |-
            Whether the user will receive email notification of
            the deletion
          example: true
          in: query
          name: notify
          schema:
            type: boolean
        - description: |-
            Whether the user should be deleted even if this user
            still own files
          example: true
          in: query
          name: force
          schema:
            type: boolean
      responses:
        "204":
          description: Removes the user and returns an empty response.
      summary: Delete user
      tags:
        - Users
      x-box-reference-category: users
    get:
      description: |-
        Retrieves information about a user in the enterprise.

        The application and the authenticated user need to
        have the permission to look up users in the entire
        enterprise.

        This endpoint also returns a limited set of information
        for external users who are collaborated on content
        owned by the enterprise for authenticated users with the
        right scopes. In this case, disallowed fields will return
        null instead.
      operationId: get_users_id
      parameters:
        - description: The ID of the user.
          example: "12345"
          in: path
          name: user_id
          required: true
          schema:
            type: string
        - description: |-
            A comma-separated list of attributes to include in the
            response. This can be used to request fields that are
            not normally returned in a standard response.
          example: id,type,name
          in: query
          name: fields
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
          description: |-
            Returns a single user object.

            [Some fields are optional](#user) and need to be explicitly
            requested using the [fields](#get-users-id--request--fields)
            parameter.
      summary: Get user
      tags:
        - Users
      x-box-reference-category: users
    put:
      description: |-
        Updates a managed user in an enterprise. This endpoint
        is only available to users and applications with the right
        admin permissions.
      operationId: put_users_id
      parameters:
        - description: The ID of the user.
          example: "12345"
          in: path
          name: user_id
          required: true
          schema:
            type: string
        - description: |-
            A comma-separated list of attributes to include in the
            response. This can be used to request fields that are
            not normally returned in a standard response.
          example: id,type,name
          in: query
          name: fields
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                address:
                  description: The user’s address
                  example: 900 Jefferson Ave, Redwood City, CA 94063
                  maxLength: 255
                  type: string
                can_see_managed_users:
                  description: |-
                    Whether the user can see other enterprise users in their
                    contact list
                  example: true
                  type: boolean
                enterprise:
                  description: |-
                    Set this to `null` to roll the user out of the enterprise
                    and make them a free user
                  example: null
                  type: string
                is_exempt_from_device_limits:
                  description: Whether to exempt the user from enterprise device limits
                  example: true
                  type: boolean
                is_exempt_from_login_verification:
                  description: Whether the user must use two-factor authentication
                  example: true
                  type: boolean
                is_external_collab_restricted:
                  description: >-
                    Whether the user is allowed to collaborate with users
                    outside her

                    enterprise
                  example: true
                  type: boolean
                is_password_reset_required:
                  description: Whether the user is required to reset their password
                  example: true
                  type: boolean
                is_sync_enabled:
                  description: Whether the user can use Box Sync
                  example: true
                  type: boolean
                job_title:
                  description: The user’s job title
                  example: CEO
                  maxLength: 100
                  type: string
                language:
                  description: >-
                    The language of the user, formatted in modified version of
                    the

                    [ISO 639-1][1] format.


                    [1]: https://developer.box.com/docs/api-language-codes
                  example: en
                  format: ISO639-1-BOX
                  type: string
                login:
                  description: The email address the user uses to log in
                  example: boss@box.com
                  type: string
                name:
                  description: The name of the user
                  example: Aaron Levie
                  maxLength: 50
                  type: string
                notify:
                  description: |-
                    Whether the user should receive an email when they
                    are rolled out of an enterprise
                  example: true
                  type: boolean
                phone:
                  description: The user’s phone number
                  example: "6509241374"
                  maxLength: 100
                  type: string
                role:
                  description: The user’s enterprise role
                  enum:
                    - coadmin
                    - user
                  example: user
                  type: string
                status:
                  description: The user's account status
                  enum:
                    - active
                    - inactive
                    - cannot_delete_edit
                    - cannot_delete_edit_upload
                  example: active
                  type: string
                timezone:
                  description: The user's timezone
                  example: Africa/Bujumbura
                  format: timezone
                  type: string
                tracking_codes:
                  description: An array of key/value pairs set by the user’s admin
                  example:
                    - "code1: 12345"
                  items:
                    type: string
                  type: array
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
          description: Returns the updated user object.
      summary: Update user
      tags:
        - Users
      x-box-reference-category: users
  "/users/{user_id}/avatar":
    get:
      description: Retrieves an image of a the user's avatar.
      operationId: get_users_id_avatar
      parameters:
        - description: The ID of the user.
          example: "12345"
          in: path
          name: user_id
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            image/jpg:
              schema:
                description: The avatar
                format: binary
                type: string
          description: |-
            When an avatar can be found for the user the
            image data will be returned in the body of the
            response.
      summary: Get user avatar
      tags:
        - Users
      x-box-reference-category: users
  "/users/{user_id}/email_aliases":
    get:
      description: |-
        Retrieves all email aliases for a user. The collection
        does not include the primary login for the user.
      operationId: get_users_id_email_aliases
      parameters:
        - description: The ID of the user.
          example: "12345"
          in: path
          name: user_id
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EmailAliases"
          description: Returns a collection of email aliases.
      summary: List user's email aliases
      tags:
        - Users
      x-box-reference-category: users
    post:
      description: Adds a new email alias to a user account..
      operationId: post_users_id_email_aliases
      parameters:
        - description: The ID of the user.
          example: "12345"
          in: path
          name: user_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                email:
                  description: The email address to add to the account as an alias.
                  example: alias@example.com
                  type: string
              required:
                - email
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EmailAlias"
          description: Returns the newly created email alias object.
      summary: Create email alias
      tags:
        - Users
      x-box-reference-category: users
  "/users/{user_id}/email_aliases/{email_alias_id}":
    delete:
      description: Removes an email alias from a user.
      operationId: delete_users_id_email_aliases_id
      parameters:
        - description: The ID of the user.
          example: "12345"
          in: path
          name: user_id
          required: true
          schema:
            type: string
        - description: The ID of the email alias.
          example: "23432"
          in: path
          name: email_alias_id
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Removes the alias and returns an empty response.
      summary: Remove email alias
      tags:
        - Users
      x-box-reference-category: users
  "/users/{user_id}/folders/{folder_id}":
    put:
      description: >-
        Move all of the items owned by a user into a

        new folder in another user’s account.


        Only the root folder (`0`) can be transferred.


        Folders can only be moved across users by users with administrative

        permissions.


        This call will be performed synchronously which might lead to a slow response

        when the source user has a large number of items in all of its folders.


        If the destination path has a metadata cascade policy attached to any of

        the parent folders, a metadata cascade operation will be kicked off

        asynchronously.


        There is currently no way to check for when this operation is finished.
      operationId: put_users_id_folders_id
      parameters:
        - description: The ID of the user.
          example: "12345"
          in: path
          name: user_id
          required: true
          schema:
            type: string
        - description: |-
            The ID of the folder.

            The root folder of a Box account is
            always represented by the id `"0"`.
          example: "12345"
          in: path
          name: folder_id
          required: true
          schema:
            type: string
        - description: |-
            A comma-separated list of attributes to include in the
            response. This can be used to request fields that are
            not normally returned in a standard response.
          example: id,type,name
          in: query
          name: fields
          required: false
          schema:
            type: string
        - description: |-
            Determines if users should receive email notification
            for the action performed.
          example: true
          in: query
          name: notify
          required: false
          schema:
            type: boolean
      requestBody:
        content:
          application/json:
            schema:
              properties:
                enterprise:
                  description: The user who the folder will be transferred to
                  properties:
                    id:
                      description: |-
                        The ID of the user who the folder will be
                        transferred to
                      example: "1232234"
                      type: string
                  required:
                    - id
                  type: object
              required:
                - owned_by
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Folder"
          description: |-
            Returns the information for the newly created
            destination folder.
      summary: Transfer owned folders
      tags:
        - Users
      x-box-reference-category: users
  "/users/{user_id}/memberships":
    get:
      description: |-
        Retrieves all the groups for a user. The user making
        an API call must have admin permissions to inspect the
        enterprise's groups.
      operationId: get_users_id_memberships
      parameters:
        - description: The ID of the user.
          example: "12345"
          in: path
          name: user_id
          required: true
          schema:
            type: string
        - description: The maximum number of items to return per page.
          example: 1000
          in: query
          name: limit
          required: false
          schema:
            default: 100
            format: int64
            maximum: 1000
            type: integer
        - description: The offset of the item at which to begin the response.
          example: 1000
          in: query
          name: offset
          required: false
          schema:
            default: 0
            format: int64
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GroupMemberships"
          description: |-
            Returns a collection of membership objects. If there are no
            memberships, an empty collection will be returned.
      summary: List user's groups
      tags:
        - Groups
      x-box-reference-category: groups
  /web_links:
    post:
      description: Creates a web link object within a folder.
      operationId: post_web_links
      requestBody:
        content:
          application/json:
            schema:
              properties:
                description:
                  description: Description of the web link.
                  example: Cloud Content Management
                  type: string
                name:
                  description: Name of the web link. Defaults to the URL if not set.
                  example: Box Website
                  type: string
                parent:
                  allOf:
                    - $ref: "#/components/schemas/Parent"
                    - description: The parent folder to put the web link in
                url:
                  description: |-
                    The URL that this web link links to. Must start with
                    `"http://"` or `"https://"`.
                  example: https://box.com
                  type: string
              required:
                - parent
                - url
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WebLink"
          description: Returns the newly created web link object.
      summary: Create web link
      tags:
        - Web Links
      x-box-reference-category: web_links
  "/web_links/{web_link_id}":
    delete:
      description: Deletes a web link.
      operationId: delete_web_links_id
      parameters:
        - description: The ID of the web link.
          example: "12345"
          in: path
          name: web_link_id
          required: true
          schema:
            type: string
      responses:
        "204":
          description: |-
            An empty response will be returned when the web link
            was successfully deleted.
      summary: Delete web link
      tags:
        - Web Links
      x-box-reference-category: web_links
    get:
      description: Retrieve information about a web link.
      operationId: get_web_links_id
      parameters:
        - description: The ID of the web link.
          example: "12345"
          in: path
          name: web_link_id
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WebLink"
          description: Returns the web link object.
      summary: Get web link
      tags:
        - Web Links
      x-box-reference-category: web_links
    post:
      description: Restores an web link that has been moved to the trash.
      operationId: post_web_links_id
      parameters:
        - description: The ID of the web link.
          example: "12345"
          in: path
          name: web_link_id
          required: true
          schema:
            type: string
        - description: |-
            A comma-separated list of attributes to include in the
            response. This can be used to request fields that are
            not normally returned in a standard response.
          example: id,type,name
          in: query
          name: fields
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                name:
                  description: An optional new name for the web link.
                  example: Restored.docx
                  type: string
                parent:
                  allOf:
                    - $ref: "#/components/schemas/Parent"
                    - description: |-
                        The optional parent folder that the web link will
                        be restored to.

                        Use this if the original parent folder no longer
                        exists, or the user no longer has access to the
                        original parent folder.
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WebLink"
          description: Returns a web link object when it has been restored.
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ClientError"
          description: >-
            Returns an error if the user does not have access to the folder

            the web link is being restored to, or the user does not have permission

            to restore web link from the trash.
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ClientError"
          description: Returns an error if the web link is not in the trash.
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ClientError"
          description: |-
            Returns an error if there is an web link with the same name
            in the folder the web link is being restored to.
      summary: Restore web link
      tags:
        - Trash
        - Web Links
      x-box-reference-category: trash
    put:
      description: Updates a web link object.
      operationId: put_web_links_id
      parameters:
        - description: The ID of the web link.
          example: "12345"
          in: path
          name: web_link_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                description:
                  description: A new description of the web link.
                  example: Cloud Content Management
                  type: string
                name:
                  description: A new name for the web link. Defaults to the URL if not set.
                  example: Box Website
                  type: string
                parent:
                  allOf:
                    - $ref: "#/components/schemas/Parent"
                    - description: |-
                        The new parent folder to put the web link in.
                        Use this to move the web link to a different folder.
                url:
                  description: |-
                    The new URL that the web link links to. Must start with
                    `"http://"` or `"https://"`.
                  example: https://box.com
                  type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WebLink"
          description: Returns the updated web link object.
      summary: Update web link
      tags:
        - Web Links
      x-box-reference-category: web_links
  "/web_links/{web_link_id}/trash":
    delete:
      description: |-
        Permanently deletes a web link that is in the trash.
        This action cannot be undone.
      operationId: delete_web_links_id_trash
      parameters:
        - description: The ID of the web link.
          example: "12345"
          in: path
          name: web_link_id
          required: true
          schema:
            type: string
      responses:
        "204":
          description: |-
            Returns an empty response when the web link was
            permanently deleted.
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ClientError"
          description: Returns an error if the web link is not in the trash.
      summary: Permanently delete web link
      tags:
        - Folders
        - Trash
      x-box-reference-category: trash
    get:
      description: Retrieves a web link that has been moved to the trash.
      operationId: get_web_links_id_trash
      parameters:
        - description: The ID of the web link.
          example: "12345"
          in: path
          name: web_link_id
          required: true
          schema:
            type: string
        - description: |-
            A comma-separated list of attributes to include in the
            response. This can be used to request fields that are
            not normally returned in a standard response.
          example: id,type,name
          in: query
          name: fields
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Folder"
          description: |-
            Returns the web link that was trashed,
            including information about when the it
            was moved to the trash.
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ClientError"
          description: Returns an error if the web link is not in the trash.
      summary: Get trashed web link
      tags:
        - Web Links
        - Trash
      x-box-reference-category: trash
  /webhooks:
    get:
      description: Returns all defined webhooks for the requesting application.
      operationId: get_webhooks
      parameters:
        - description: The position marker at which to begin the response.
          example: 1234
          in: query
          name: marker
          required: false
          schema:
            format: int64
            type: integer
        - description: The maximum number of items to return per page.
          example: 1000
          in: query
          name: limit
          required: false
          schema:
            default: 100
            format: int64
            maximum: 1000
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Webhooks"
          description: Returns a list of webhooks.
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ClientError"
          description: |-
            Returns an error if the application does not
            have the permission to manage webhooks.
      summary: List all webhooks
      tags:
        - Webhooks
      x-box-reference-category: webhooks
    post:
      description: Creates a webhook.
      operationId: post_webhooks
      requestBody:
        content:
          application/json:
            schema:
              properties:
                address:
                  description: The URL that is notified by this webhook
                  example: https://example.com/webhooks
                  type: string
                target:
                  description: The item that will trigger the webhook
                  properties:
                    id:
                      description: The ID of the item to trigger a webhook
                      example: "1231232"
                      type: string
                    type:
                      description: The type of item to trigger a webhook
                      enum:
                        - file
                        - folder
                      example: file
                      type: string
                  type: object
                triggers:
                  description: |-
                    An array of event names that this webhook is
                    to be triggered for
                  example:
                    - FILE.UPLOADED
                  items:
                    $ref: "#/components/schemas/WebhookTrigger"
                  type: array
              required:
                - target
                - triggers
                - address
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Webhook"
          description: Returns the new webhook object.
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ClientError"
          description: |-
            Returns an error if the parameters were
            incorrect.
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ClientError"
          description: |-
            Returns an error if the application does not
            have the permission to manage webhooks.
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ClientError"
          description: |-
            Returns an error if the target item could
            not be found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ClientError"
          description: |-
            Returns an error if the a webhook for this
            combination of target, application, and user
            already exists.
      summary: Create webhook
      tags:
        - Webhooks
      x-box-reference-category: webhooks
  "/webhooks/{webhook_id}":
    delete:
      description: Deletes a webhook.
      operationId: delete_webhooks_id
      parameters:
        - description: The ID of the webhook.
          example: "3321123"
          in: path
          name: webhook_id
          required: true
          schema:
            type: string
      responses:
        "204":
          description: |-
            An empty response will be returned when the webhook
            was successfully deleted.
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ClientError"
          description: |-
            Returns an error if the application does not
            have the permission to manage webhooks.
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ClientError"
          description: Returns an error if the webhook could not be found
      summary: Delete webhook
      tags:
        - Webhooks
      x-box-reference-category: webhooks
    get:
      description: Retrieves a specific webhook
      operationId: get_webhooks_id
      parameters:
        - description: The ID of the webhook.
          example: "3321123"
          in: path
          name: webhook_id
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Webhook"
          description: Returns a webhook object
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ClientError"
          description: |-
            Returns an error if the application does not
            have the permission to manage webhooks.
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ClientError"
          description: Returns an error if the webhook could not be found
      summary: Get webhook
      tags:
        - Webhooks
      x-box-reference-category: webhooks
    put:
      description: Updates a webhook.
      operationId: put_webhooks_id
      parameters:
        - description: The ID of the webhook.
          example: "3321123"
          in: path
          name: webhook_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                address:
                  description: The URL that is notified by this webhook
                  example: https://example.com/webhooks
                  type: string
                target:
                  description: The item that will trigger the webhook
                  properties:
                    id:
                      description: The ID of the item to trigger a webhook
                      example: "1231232"
                      type: string
                    type:
                      description: The type of item to trigger a webhook
                      enum:
                        - file
                        - folder
                      example: file
                      type: string
                  type: object
                triggers:
                  description: |-
                    An array of event names that this webhook is
                    to be triggered for
                  example:
                    - FILE.UPLOADED
                  items:
                    $ref: "#/components/schemas/WebhookTrigger"
                  type: array
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Webhook"
          description: Returns the new webhook object.
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ClientError"
          description: |-
            Returns an error if the parameters were
            incorrect.
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ClientError"
          description: |-
            Returns an error if the application does not
            have the permission to manage webhooks.
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ClientError"
          description: |-
            Returns an error if the target item or webhook
            could not be found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ClientError"
          description: |-
            Returns an error if the a webhook for this
            combination of target, application, and user
            already exists.
      summary: Update webhook
      tags:
        - Webhooks
      x-box-reference-category: webhooks
components:
  schemas:
    AccessToken:
      allOf:
        - $ref: "#/components/schemas/AccessToken--Mini"
        - properties:
            issued_token_type:
              description: |-
                The type of downscoped access token returned. This is only
                returned if an access token has been downscoped.
              enum:
                - urn:ietf:params:oauth:token-type:access_token
              example: urn:ietf:params:oauth:token-type:access_token
              format: urn
              type: string
            refresh_token:
              description: |-
                The refresh token for this access token, which can be used
                to request a new access token when the current one expires.
              example: c3FIOG9vSGV4VHo4QzAyg5T1JvNnJoZ3ExaVNyQWw6WjRsanRKZG5lQk9qUE1BVQ
              format: token
              type: string
      description: A token that can be used to make authenticated API calls.
      x-box-reference-category: authorization
      x-box-resource-display-name: Access Token
      x-box-resource-id: access_token
    AccessToken--Mini:
      description: The basics of an access token
      properties:
        access_token:
          description: The requested access token.
          example: c3FIOG9vSGV4VHo4QzAyg5T1JvNnJoZ3ExaVNyQWw6WjRsanRKZG5lQk9qUE1BVQ
          format: token
          type: string
        expires_in:
          description: The time in seconds in seconds by which this token will expire.
          example: 3600
          format: int64
          type: integer
        restricted_to:
          description: |-
            The permissions that this access token permits,
            providing a list of resources (files, folders, etc)
            and the scopes permitted for each of those resources.
          items:
            $ref: "#/components/schemas/FileScope"
          type: array
        token_type:
          description: The type of access token returned.
          enum:
            - bearer
          example: bearer
          type: string
      x-box-reference-hide: true
      x-box-resource-display-name: Access Token Mini
      x-box-resource-id: access_token--mini
    AssignmentCounts:
      description: Counts of assignments within this a legal hold policy by item type
      properties:
        file:
          description: The number of files this policy is applied to
          example: 3
          format: int64
          type: integer
        file_version:
          description: The number of file versions this policy is applied to
          example: 4
          format: int64
          type: integer
        folder:
          description: The number of folders this policy is applied to
          example: 2
          format: int64
          type: integer
        user:
          description: The number of users this policy is applied to
          example: 1
          format: int64
          type: integer
      x-box-resource-display-name: Assignment Counts
      x-box-resource-id: assignment_counts
    ClientError:
      description: A generic error
      properties:
        code:
          description: A Box-specific error code
          example: item_name_invalid
          type: string
        help_url:
          description: A URL that links to more information about why the error occurred.
          example: http://developers.box.com/docs/#errors
          type: string
        message:
          description: A human-readable message describing the error.
          example: Item name invalid
          type: string
        request_id:
          description: |-
            The unique ID for this request as can be used when contacting
            Box support.
          example: abcdef123456
          type: string
        status:
          description: The HTTP status of the response.
          example: 400
          format: int32
          type: integer
        type:
          description: Always `error`
          enum:
            - error
          example: error
          type: string
      x-box-resource-display-name: Client Error
      x-box-resource-id: client_error
    Collaboration:
      allOf:
        - $ref: "#/components/schemas/Reference"
        - properties:
            acceptance_requirements:
              allOf:
                - $ref: "#/components/schemas/TermsOfService--Mini"
                - description: The terms of service for the collaboration
            accessible_by:
              allOf:
                - $ref: "#/components/schemas/User--Mini"
                - description: The user or group that is granted access
            acknowledged_at:
              description: |-
                When the `status` of the collaboration object changed to
                `accepted` or `rejected`
              example: 2012-12-12T10:53:43-08:00
              format: date-time
              type: string
            can_view_path:
              description: >-
                Whether the "view path collaboration" feature is enabled or not.
                View

                path collaborations allow the invitee to see the entire parent path to

                the item. View path collaboration does not grant privileges in any

                parent folder (e.g. cannot see content the user is not collaborated

                on), other than the permission to view the parent path.
              example: true
              type: boolean
            created_at:
              description: When the collaboration object was created
              example: 2012-12-12T10:53:43-08:00
              format: date-time
              type: string
            created_by:
              allOf:
                - $ref: "#/components/schemas/User--Mini"
                - description: The user who created the collaboration object
            expires_at:
              description: When the collaboration will expire
              example: 2012-12-12T10:53:43-08:00
              format: date-time
              type: string
            invite_email:
              description: >-
                The email address used to invite an unregistered collaborator,
                if

                they are not a registered user.
              example: john@example.com
              type: string
            item:
              allOf:
                - $ref: "#/components/schemas/Item"
                - description: The file or folder that access is granted to
            modified_at:
              description: When the collaboration object was last modified
              example: 2012-12-12T10:53:43-08:00
              format: date-time
              type: string
            role:
              description: The level of access granted.
              enum:
                - editor
                - viewer
                - previewer
                - uploader
                - preview uploader
                - viewer uploader
                - co-owner
                - owner
              example: editor
              type: string
            status:
              description: The status of the collaboration invitation.
              enum:
                - accepted
                - pending
                - rejected
              example: accepted
              type: string
            type:
              description: "`collaboration`"
              enum:
                - collaboration
              example: collaboration
              type: string
      description: >-
        Collaborations define access permissions for users and groups to files
        and

        folders, similar to access control lists. A collaboration object grants a

        user or group access to a file or folder with permissions defined by a

        specific role.
      x-box-reference-category: collaborations
      x-box-resource-display-name: Collaboration
      x-box-resource-id: collaboration
    CollaborationWhitelistEntries:
      allOf:
        - $ref: "#/components/schemas/MarkerPagination"
        - properties:
            entries:
              items:
                $ref: "#/components/schemas/CollaborationWhitelistEntry"
              type: array
      description: A list of collaboration whitelist entries.
      x-box-resource-display-name: Collaboration Whitelist Entries
      x-box-resource-id: collaboration_whitelist_entries
    CollaborationWhitelistEntry:
      allOf:
        - $ref: "#/components/schemas/Reference"
        - properties:
            created_at:
              description: The time the whitelist entry was created
              example: 2012-12-12T10:53:43-08:00
              format: date-time
              type: string
            direction:
              description: The direction of the collaborations to whitelist
              enum:
                - inbound
                - outbound
                - both
              example: both
              type: string
            domain:
              description: The whitelisted domain
              example: example.com
              type: string
            enterprise:
              allOf:
                - $ref: "#/components/schemas/Enterprise"
                - description: The enterprise this whitelist is applied to
            type:
              description: "`collaboration_whitelist_entry`"
              enum:
                - collaboration_whitelist_entry
              example: collaboration_whitelist_entry
              type: string
      description: |-
        A Collaboration Whitelist entry describes an
        approved domains that can collaborate with your enterprise
      x-box-reference-category: collaboration_whitelist
      x-box-resource-display-name: Collaboration Whitelist Entry
      x-box-resource-id: collaboration_whitelist_entry
    CollaborationWhitelistExemptTarget:
      allOf:
        - $ref: "#/components/schemas/Reference"
        - properties:
            created_at:
              description: The time the entry was created
              example: 2012-12-12T10:53:43-08:00
              format: date-time
              type: string
            enterprise:
              allOf:
                - $ref: "#/components/schemas/Enterprise"
                - description: The enterprise this entry belongs to
            modified_at:
              description: The time the entry was modified
              example: 2012-12-12T10:53:43-08:00
              format: date-time
              type: string
            type:
              description: "`collaboration_whitelist`"
              enum:
                - collaboration_whitelist
              example: collaboration_whitelist
              type: string
            user:
              allOf:
                - $ref: "#/components/schemas/Enterprise"
                - description: The user that has been exempt
      description: |-
        The record that represents a target user that is exempt from the
        collaboration whitelist.
      x-box-reference-category: collaboration_whitelist
      x-box-resource-display-name: Whitelist Exempt Target
      x-box-resource-id: collaboration_whitelist_exempt_target
    CollaborationWhitelistExemptTargets:
      allOf:
        - $ref: "#/components/schemas/MarkerPagination"
        - properties:
            entries:
              items:
                $ref: "#/components/schemas/CollaborationWhitelistExemptTarget"
              type: array
      description: A list of collaboration whitelist exemptions.
      x-box-resource-display-name: Whitelist Exempt Targets
      x-box-resource-id: collaboration_whitelist_exempt_targets
    Collaborations:
      allOf:
        - $ref: "#/components/schemas/Pagination"
        - properties:
            entries:
              items:
                $ref: "#/components/schemas/Collaboration"
              type: array
      description: A list of collaborations
      x-box-resource-display-name: Collaborations
      x-box-resource-id: collaborations
    Collection:
      allOf:
        - $ref: "#/components/schemas/Reference"
        - properties:
            collection_type:
              description: |-
                The type of the collection. This is used to
                determine the proper visual treatment for
                collections. The only collection  type is `favorites`.
              enum:
                - favorites
              example: favorites
              type: string
            name:
              description: |-
                The name of the collection. The only collection
                available is named `Favorites`.
              enum:
                - Favorites
              example: Favorites
              type: string
            type:
              description: "`collection`"
              enum:
                - collection
              example: collection
              type: string
      description: |-
        A collection of items, including files and folders.

        Currently, the only collection available
        is the `favorites` collection.

        The contents of a collection can be explored in a
        similar way to which the contents of a folder is
        explored.
      x-box-reference-category: collections
      x-box-resource-display-name: Collection
      x-box-resource-id: collection
    Collections:
      allOf:
        - $ref: "#/components/schemas/Pagination"
        - properties:
            entries:
              items:
                $ref: "#/components/schemas/Collection"
              type: array
      description: A list of collections
      x-box-resource-display-name: Collections
      x-box-resource-id: collections
    Comment:
      allOf:
        - $ref: "#/components/schemas/Comment--Standard"
        - properties:
            tagged_message:
              description: |-
                The string representing the comment text with
                @mentions included. @mention format is @[id:username]
                where `id` is user's Box ID an username is
                their display name.
              example: "@[1234567:Aaron Levie] these tigers are cool!"
              type: string
      description: |-
        Comments are messages created on files. Comments
        can be made independently or created as responses to other
        comments
      type: object
      x-box-reference-category: comments
      x-box-resource-display-name: Comment
      x-box-resource-id: comment
    Comment--Standard:
      allOf:
        - $ref: "#/components/schemas/Reference"
        - properties:
            created_at:
              description: The time this comment was created
              example: 2012-12-12T10:53:43-08:00
              format: date-time
              type: string
            created_by:
              allOf:
                - $ref: "#/components/schemas/User--Mini"
                - description: |-
                    A mini user object representing the author of the
                    comment
            is_reply_comment:
              description: |-
                Whether or not this comment is a reply to another
                comment
              example: true
              type: boolean
            item:
              allOf:
                - $ref: "#/components/schemas/Item"
                - description: The object this comment was placed on
            message:
              description: The text of the comment, as provided by the user
              example: "@Aaron Levie these tigers are cool!"
              type: string
            modified_at:
              description: The time this comment was last modified
              example: 2012-12-12T10:53:43-08:00
              format: date-time
              type: string
            type:
              description: "`comment`"
              enum:
                - comment
              example: comment
              type: string
      description: |-
        Standard representation of a comment, as returned by the
        comment API endpoints and when nested within other resources.
      type: object
      x-box-reference-hide: true
      x-box-resource-display-name: Comment (Standard)
      x-box-resource-id: comment--standard
    Comments:
      allOf:
        - $ref: "#/components/schemas/Pagination"
        - properties:
            entries:
              items:
                $ref: "#/components/schemas/Comment"
              type: array
      description: A list of comments
      x-box-resource-display-name: Comments
      x-box-resource-id: comments
    ConflictError:
      allOf:
        - $ref: "#/components/schemas/ClientError"
        - properties:
            context_info:
              properties:
                conflicts:
                  allOf:
                    - $ref: "#/components/schemas/File--Mini"
                    - properties:
                        file_version:
                          $ref: "#/components/schemas/FileVersion--Mini"
                        sha1:
                          description: The SHA1 hash of the file.
                          example: 85136C79CBF9FE36BB9D05D0639C70C265C18D37
                          type: string
              type: object
      description: |-
        The error that occurs when a file can not be created due
        to a conflict.
      x-box-resource-display-name: Conflict Error
      x-box-resource-id: conflict_error
    DevicePinner:
      allOf:
        - $ref: "#/components/schemas/Reference"
        - properties:
            created_at:
              description: The time the device pin was created
              example: 2012-12-12T10:53:43-08:00
              format: date-time
              type: string
            modified_at:
              description: The time the device pin was modified
              example: 2012-12-12T10:53:43-08:00
              format: date-time
              type: string
            owned_by:
              allOf:
                - $ref: "#/components/schemas/User--Mini"
                - description: The user that the device pin belongs to
            product_name:
              description: The type of device being pinned
              example: iPad
              type: string
            type:
              description: "`device_pinner`"
              enum:
                - device_pinner
              example: device_pinner
              type: string
      description: |-
        Device pins allow enterprises to control what devices can
        use native Box applications.
      x-box-reference-category: device_pins
      x-box-resource-display-name: Device Pinner
      x-box-resource-id: device_pinner
    DevicePinners:
      allOf:
        - $ref: "#/components/schemas/MarkerPagination"
        - properties:
            entries:
              items:
                $ref: "#/components/schemas/DevicePinner"
              type: array
      description: A list of device pins
      x-box-resource-display-name: Device Pinners
      x-box-resource-id: device_pinners
    EmailAlias:
      allOf:
        - $ref: "#/components/schemas/Reference"
        - properties:
            email:
              description: The email address
              example: alias@example.com
              type: string
            is_confirmed:
              description: Whether the email address has been confirmed
              example: true
              type: boolean
            type:
              description: "`email_alias`"
              enum:
                - email_alias
              example: email_alias
              type: string
      description: An email alias for a user.
      type: object
      x-box-reference-category: users
      x-box-resource-display-name: Email Alias
      x-box-resource-id: email_alias
    EmailAliases:
      description: A list of email aliases
      properties:
        entries:
          items:
            $ref: "#/components/schemas/EmailAlias"
          type: array
        total_count:
          description: The number of email aliases.
          example: 5000
          format: int64
          type: integer
      x-box-resource-display-name: Email Aliases
      x-box-resource-id: email_aliases
    Enterprise:
      allOf:
        - $ref: "#/components/schemas/Reference"
        - properties:
            name:
              description: The name of the enterprise
              example: Acme Inc.
              type: string
            type:
              description: "`enterprise`"
              enum:
                - enterprise
              example: enterprise
              type: string
      description: A representation of a Box enterprise
      x-box-resource-display-name: Enterprise
      x-box-resource-id: enterprise
    Event:
      description: The description of an event that happened within Box
      properties:
        additional_details:
          description: >-
            This object provides additional information about the event if
            available.


            This can include how a user performed an event as well as additional

            information to correlate an event to external Keysafe logs. Not all events

            have an additional_details object.  This object is only available in the

            Enterprise Events.
          example: ""
          type: object
        created_by:
          allOf:
            - $ref: "#/components/schemas/User--Mini"
            - description: >-
                The user that performed the action represented by the event.

                Some events may be performed by users not logged into Box.

                In that case, not all attributes of the object are populated and the

                event is attributed to a unknown user (`user_id = 2`)
        event_id:
          description: The ID of the event object. You can use this to detect duplicate
            events
          example: f82c3ba03e41f7e8a7608363cc6c0390183c3f83
          type: string
        event_type:
          allOf:
            - $ref: "#/components/schemas/EventType"
            - description: The event type that triggered this event
        session_id:
          description: >-
            The session of the user that performed the action. Not all events
            will

            populate this attribute.
          example: 70090280850c8d2a1933c1
          type: string
        source:
          allOf:
            - oneOf:
                - $ref: "#/components/schemas/File--Standard"
                - $ref: "#/components/schemas/Folder--Standard"
                - $ref: "#/components/schemas/Comment"
          description: The object that triggered this event
          type: object
        type:
          description: "`event`"
          example: event
          type: string
      x-box-reference-category: events
      x-box-resource-display-name: Event
      x-box-resource-id: event
    EventType:
      description: An event type that can trigger an event
      enum:
        - ACCESS_GRANTED
        - ACCESS_REVOKED
        - ADD_DEVICE_ASSOCIATION
        - ADD_LOGIN_ACTIVITY_DEVICE
        - ADMIN_LOGIN
        - APPLICATION_CREATED
        - APPLICATION_PUBLIC_KEY_ADDED
        - APPLICATION_PUBLIC_KEY_DELETED
        - CHANGE_ADMIN_ROLE
        - CHANGE_FOLDER_PERMISSION
        - COLLABORATION_ACCEPT
        - COLLABORATION_EXPIRATION
        - COLLABORATION_INVITE
        - COLLABORATION_REMOVE
        - COLLABORATION_ROLE_CHANGE
        - COLLAB_ADD_COLLABORATOR
        - COLLAB_INVITE_COLLABORATOR
        - COLLAB_REMOVE_COLLABORATOR
        - COLLAB_ROLE_CHANGE
        - COMMENT_CREATE
        - COMMENT_DELETE
        - CONTENT_WORKFLOW_ABNORMAL_DOWNLOAD_ACTIVITY
        - CONTENT_WORKFLOW_AUTOMATION_ADD
        - CONTENT_WORKFLOW_AUTOMATION_DELETE
        - CONTENT_WORKFLOW_POLICY_ADD
        - CONTENT_WORKFLOW_SHARING_POLICY_VIOLATION
        - CONTENT_WORKFLOW_UPLOAD_POLICY_VIOLATION
        - COPY
        - DATA_RETENTION_CREATE_RETENTION
        - DATA_RETENTION_REMOVE_RETENTION
        - DELETE
        - DELETE_USER
        - DEVICE_TRUST_CHECK_FAILED
        - DOWNLOAD
        - EDIT
        - EDIT_USER
        - EMAIL_ALIAS_CONFIRM
        - EMAIL_ALIAS_REMOVE
        - ENABLE_TWO_FACTOR_AUTH
        - FAILED_LOGIN
        - FILE_MARKED_MALICIOUS
        - FILE_WATERMARKED_DOWNLOAD
        - GROUP_ADD_ITEM
        - GROUP_ADD_USER
        - GROUP_CREATION
        - GROUP_DELETION
        - GROUP_EDITED
        - GROUP_REMOVE_ITEM
        - GROUP_REMOVE_USER
        - ITEM_COPY
        - ITEM_CREATE
        - ITEM_DOWNLOAD
        - ITEM_MAKE_CURRENT_VERSION
        - ITEM_MODIFY
        - ITEM_MOVE
        - ITEM_OPEN
        - ITEM_PREVIEW
        - ITEM_RENAME
        - ITEM_SHARED
        - ITEM_SHARED_CREATE
        - ITEM_SHARED_UNSHARE
        - ITEM_SHARED_UPDATE
        - ITEM_SYNC
        - ITEM_TRASH
        - ITEM_UNDELETE_VIA_TRASH
        - ITEM_UNSYNC
        - ITEM_UPLOAD
        - LEGAL_HOLD_ASSIGNMENT_CREATE
        - LEGAL_HOLD_ASSIGNMENT_DELETE
        - LEGAL_HOLD_POLICY_CREATE
        - LEGAL_HOLD_POLICY_DELETE
        - LEGAL_HOLD_POLICY_UPDATE
        - LOCK
        - LOCK_CREATE
        - LOCK_DESTROY
        - LOGIN
        - MASTER_INVITE_ACCEPT
        - MASTER_INVITE_REJECT
        - METADATA_INSTANCE_CREATE
        - METADATA_INSTANCE_DELETE
        - METADATA_INSTANCE_UPDATE
        - METADATA_TEMPLATE_CREATE
        - METADATA_TEMPLATE_DELETE
        - METADATA_TEMPLATE_UPDATE
        - MOVE
        - NEW_USER
        - PREVIEW
        - REMOVE_DEVICE_ASSOCIATION
        - REMOVE_LOGIN_ACTIVITY_DEVICE
        - RENAME
        - RETENTION_POLICY_ASSIGNMENT_ADD
        - SHARE
        - SHARE_EXPIRATION
        - STORAGE_EXPIRATION
        - TAG_ITEM_CREATE
        - TASK_ASSIGNMENT_CREATE
        - TASK_ASSIGNMENT_DELETE
        - TASK_ASSIGNMENT_UPDATE
        - TASK_CREATE
        - TASK_UPDATE
        - TERMS_OF_SERVICE_ACCEPT
        - TERMS_OF_SERVICE_REJECT
        - UNDELETE
        - UNLOCK
        - UNSHARE
        - UPDATE_COLLABORATION_EXPIRATION
        - UPDATE_SHARE_EXPIRATION
        - UPLOAD
        - USER_AUTHENTICATE_OAUTH2_ACCESS_TOKEN_CREATE
        - WATERMARK_LABEL_CREATE
        - WATERMARK_LABEL_DELETE
      example: FILE_MARKED_MALICIOUS
      type: string
      x-box-resource-display-name: Event Type
      x-box-resource-id: event_type
    Events:
      description: A list of event objects
      properties:
        chunk_size:
          description: The number of pages of events remaining.
          example: 2
          format: int64
          type: integer
        entries:
          items:
            $ref: "#/components/schemas/Event"
          type: array
        next_stream_position:
          description: |-
            The stream position of the start of the next page
            of events.
          example: "1152922976252290886"
          type: string
      x-box-reference-category: events
      x-box-resource-display-name: Events
      x-box-resource-id: events
    File:
      allOf:
        - $ref: "#/components/schemas/File--Standard"
        - properties:
            allowed_invitee_roles:
              description: >-
                Folder [collaboration](#collaboration-object) roles allowed by
                the

                enterprise administrator.
              enum:
                - open
                - company
                - collaborators
              example:
                - open
              items:
                type: string
              type: array
            comment_count:
              description: The number of comments on this file
              example: 10
              type: integer
            expiring_embed_link:
              description: |-
                Requesting this field creates an expiring URL for an
                embedded preview session in an iframe.

                This URL will expire after 60 seconds and the session will
                expire after 60 minutes.
              example: https://app.box.com/preview/expiring_embed/gvoct6FE!
              type: string
            extension:
              description: >-
                Indicates the suffix, when available, on the file. By default,

                set to an empty string. The suffix usually indicates the encoding

                (file format) of the file contents or usage.
              example: png
              type: string
            has_collaborations:
              description: Whether this file has any collaborators.
              example: true
              type: boolean
            is_externally_owned:
              description: Whether this file is owned by a user outside of the enterprise.
              example: true
              type: boolean
            is_package:
              description: Whether the file is a package. Used for Mac Packages used by
                iWorks.
              example: true
              type: boolean
            lock:
              allOf:
                - $ref: "#/components/schemas/Lock"
                - description: >-
                    The lock held on this file. If there is no lock, this can
                    either

                    be `null` or have a timestamp in the past.
            metadata:
              additionalProperties:
                additionalProperties:
                  $ref: "#/components/schemas/Metadata"
                description: The name of the metadata template
                example:
                  marketingCollateral:
                    $canEdit: true
                    $id: 01234500-12f1-1234-aa12-b1d234cb567e
                    $parent: folder_59449484661
                    $scope: enterprise_27335
                    $template: blueprintTemplate
                    $type: blueprintTemplate-6bcba49f-ca6d-4d2a-a758-57fe6edf44d0
                    $typeVersion: 2
                    $version: 1
                type: object
              description: |-
                A list of key-value pairs of metadata objects within their
                scopes.

                To access the metadata for a file, first use the
                [Metadata](#metadata) endpoints to determine
                the metadata templates available to your enterprise.

                The use the [Retrieve File](#get-file-id) endpoint with
                the `fields` query parameter to get the metadata by ID. The
                ID for the metadata template will be in the format
                `metadata.<scope>.<templatename>`, for example
                `fields=metadata.global.properties`.
              enum:
                - global
                - enteprise_<:enterprise_id>
              example:
                global:
                  marketingCollateral:
                    $canEdit: true
                    $id: 01234500-12f1-1234-aa12-b1d234cb567e
                    $parent: folder_59449484661
                    $scope: enterprise_27335
                    $template: blueprintTemplate
                    $type: blueprintTemplate-6bcba49f-ca6d-4d2a-a758-57fe6edf44d0
                    $typeVersion: 2
                    $version: 1
              type: object
            permissions:
              allOf:
                - $ref: "#/components/schemas/Permissions"
                - description: >-
                    An object containing the permissions that the current user
                    has

                    for this item
            tags:
              description: All tags applied to this folder.
              example:
                - draft
                - needs_review
              items:
                type: string
              type: array
            version_number:
              description: The version number of this file
              example: "1"
              type: string
            watermark_info:
              allOf:
                - $ref: "#/components/schemas/WatermarkInfo"
                - description: Information about the watermarking on this file
      description: |-
        A full representation of a file, as can be returned from any
        file API endpoints by default
      x-box-reference-category: files
      x-box-resource-display-name: File
      x-box-resource-id: file
    File--Mini:
      allOf:
        - $ref: "#/components/schemas/Item"
        - properties:
            etag:
              description: |-
                The entity tag of this file object. Used with `If-Match`
                headers.
              example: "1"
              type: string
            name:
              description: The name of the file
              example: Pictures
              type: string
            sequence_id:
              description: A unique ID for use with the /events endpoint
              example: "1"
              type: string
            type:
              description: "`file`"
              enum:
                - file
              example: file
              type: string
      description: |-
        A mini representation of a file, used when
        nested under another resource.
      x-box-reference-hide: true
      x-box-resource-display-name: File (Mini)
      x-box-resource-id: file--mini
    File--Standard:
      allOf:
        - $ref: "#/components/schemas/File--Mini"
        - properties:
            content_created_at:
              description: When this file was created originally
              example: 2012-12-12T10:53:43-08:00
              format: date-time
              type: string
            content_modified_at:
              description: When this file was last updated
              example: 2012-12-12T10:53:43-08:00
              format: date-time
              type: string
            created_at:
              description: When this file was upload to Box’s servers
              example: 2012-12-12T10:53:43-08:00
              format: date-time
              type: string
            created_by:
              allOf:
                - $ref: "#/components/schemas/User--Mini"
                - description: The user who created this file
            description:
              description: The description of the file
              example: Some pictures I took
              maxLength: 256
              type: string
            expires_at:
              description: When the file will automatically be deleted
              example: 2012-12-12T10:53:43-08:00
              format: date-time
              type: string
            item_status:
              description: >-
                Whether this item is deleted or not. Values include `active`,

                `trashed` if the file has been moved to the trash, and `deleted` if

                the file has been permanently deleted
              enum:
                - active
                - trashed
                - deleted
              example: active
              type: string
            modified_at:
              description: When this file was last updated on the Box servers
              example: 2012-12-12T10:53:43-08:00
              format: date-time
              type: string
            modified_by:
              allOf:
                - $ref: "#/components/schemas/User--Mini"
                - description: The user who last modified this file
            owned_by:
              allOf:
                - $ref: "#/components/schemas/User--Mini"
                - description: The user who owns this file
            parent:
              allOf:
                - $ref: "#/components/schemas/Folder--Mini"
                - description: The folder that contains this file.
            path_collection:
              description: The path of folders to this file, starting at the root
              items:
                $ref: "#/components/schemas/Folder--Mini"
              type: array
            purged_at:
              description: When this file will be permanently deleted
              example: 2012-12-12T10:53:43-08:00
              format: date-time
              type: string
            sha1:
              description: The SHA1 hash of the file.
              example: 85136C79CBF9FE36BB9D05D0639C70C265C18D37
              format: digest
              type: string
            shared_link:
              allOf:
                - $ref: "#/components/schemas/SharedLink"
                - description: |-
                    The shared link object for this file. Will be
                    `null` if no shared link has been created.
            size:
              description: >-
                The file size in bytes. Be careful parsing this integer, it can

                easily go into [exponent notation](http://en.wikipedia.org/wiki/\

                Double-precision_floating-point_format).
              example: 629644
              type: integer
            trashed_at:
              description: When this file was last moved to the trash
              example: 2012-12-12T10:53:43-08:00
              format: date-time
              type: string
      description: |-
        A standard representation of a file, as returned from any
        file API endpoints by default
      x-box-reference-hide: true
      x-box-resource-display-name: File (Standard)
      x-box-resource-id: file--standard
    FileScope:
      description: A relation between a file and the scopes for which the file can be
        accessed
      properties:
        object:
          allOf:
            - $ref: "#/components/schemas/File--Mini"
            - description: The file for which the file can be accessed
        scope:
          description: The file scopes for the file access
          enum:
            - annotation_edit
            - annotation_view_all
            - annotation_view_self
            - base_explorer
            - base_picker
            - base_preview
            - base_upload
            - item_delete
            - item_download
            - item_preview
            - item_rename
            - item_share
            - null
          example: item_download
          type: string
      x-box-resource-display-name: File Scope
      x-box-resource-id: file_scope
    FileVersion:
      allOf:
        - $ref: "#/components/schemas/FileVersion--Mini"
        - properties:
            created_at:
              description: When the file version object was created
              example: 2012-12-12T10:53:43-08:00
              format: date-time
              type: string
            modified_at:
              description: When the file version object was last updated
              example: 2012-12-12T10:53:43-08:00
              format: date-time
              type: string
            modified_by:
              allOf:
                - $ref: "#/components/schemas/User--Mini"
                - description: The user who last updated the file version
            name:
              description: The name of the file version
              example: tigers.jpeg
              type: string
            purged_at:
              description: When the file version object was purged.
              example: 2012-12-12T10:53:43-08:00
              format: date-time
              type: string
            size:
              description: Size of the file version in bytes
              example: 629644
              format: int64
              type: integer
            trashed_at:
              description: When the file version object was trashed.
              example: 2012-12-12T10:53:43-08:00
              format: date-time
              type: string
      description: A full representation of a file version
      x-box-reference-category: file_versions
      x-box-resource-display-name: File Version
      x-box-resource-id: file_version
    FileVersion--Mini:
      allOf:
        - $ref: "#/components/schemas/Reference"
        - properties:
            sha1:
              description: The SHA1 hash of this file.
              example: 134b65991ed521fcfe4724b7d814ab8ded5185dc
              type: string
            type:
              description: "`file_version`"
              enum:
                - file_version
              example: file_version
              type: string
      description: |-
        A mini representation of a file version, used when
        nested under another resource.
      x-box-reference-hide: true
      x-box-resource-display-name: File Version (Mini)
      x-box-resource-id: file_version--mini
    FileVersionLegalHold:
      allOf:
        - $ref: "#/components/schemas/Reference"
        - properties:
            deleted_at:
              description: |-
                Time that this File-Version-Legal-Hold was
                deleted.
              example: 2012-12-12T10:53:43-08:00
              format: date-time
              type: string
            file:
              allOf:
                - $ref: "#/components/schemas/File--Mini"
                - description: |-
                    The file for the file version held.
                    Note that there is no guarantee that the current
                    version of this file is held.
            file_version:
              allOf:
                - $ref: "#/components/schemas/FileVersion--Mini"
                - description: The file version that is held
            legal_hold_policy_assignments:
              description: List of assignments contributing to this Hold.
              items:
                $ref: "#/components/schemas/LegalHoldPolicyAssignment"
              type: array
            type:
              description: "`file_version_legal_hold`"
              enum:
                - file_version_legal_hold
              example: file_version_legal_hold
              type: string
      description: |-
        File-Version-Legal-Hold is an entity representing all
        holds on a File Version.
      x-box-reference-category: legal_hold_policies
      x-box-resource-display-name: Legal Hold
      x-box-resource-id: file_version_legal_hold
    FileVersionLegalHolds:
      allOf:
        - $ref: "#/components/schemas/MarkerPagination"
        - properties:
            entries:
              items:
                $ref: "#/components/schemas/FileVersionLegalHold"
              type: array
      description: A list of file version legal holds.
      x-box-resource-display-name: Legal Holds
      x-box-resource-id: file_version_legal_holds
    FileVersionRetention:
      allOf:
        - $ref: "#/components/schemas/Reference"
        - properties:
            applied_at:
              description: |-
                When this file version retention object was
                created
              example: 2012-12-12T10:53:43-08:00
              format: date-time
              type: string
            disposition_at:
              description: |-
                When the retention period expires on this file
                version retention
              example: 2012-12-12T10:53:43-08:00
              format: date-time
              type: string
            file:
              allOf:
                - $ref: "#/components/schemas/File--Mini"
                - description: The file this file version retention was applied to
            file_version:
              allOf:
                - $ref: "#/components/schemas/FileVersion--Mini"
                - description: |-
                    The file version this file version retention was
                    applied to
            type:
              description: "`file_version_retention`"
              enum:
                - file_version_retention
              example: file_version_retention
              type: string
            winning_retention_policy:
              allOf:
                - $ref: "#/components/schemas/RetentionPolicy--Mini"
                - description: |-
                    The winning retention policy applied to this file
                    version retention. A file version can have multiple
                    retention policies applied.
      description: |-
        A retention policy blocks permanent deletion of content
        for a specified amount of time. Admins can apply policies to
        specified folders, or an entire enterprise. A file version retention
        is a  record for a retained file version. To use this feature,
        you must  have the manage retention policies scope enabled for your
        API key via  your application management console. For more information
        about retention policies, please visit our help documentation
      x-box-reference-category: retention_policies
      x-box-resource-display-name: Retention
      x-box-resource-id: file_version_retention
    FileVersionRetentions:
      allOf:
        - $ref: "#/components/schemas/MarkerPagination"
        - properties:
            entries:
              items:
                $ref: "#/components/schemas/FileVersionRetention"
              type: array
      description: A list of file version retentions.
      x-box-resource-display-name: Retentions
      x-box-resource-id: file_version_retentions
    FileVersions:
      allOf:
        - $ref: "#/components/schemas/Pagination"
        - properties:
            entries:
              items:
                $ref: "#/components/schemas/FileVersion"
              type: array
      description: A list of file versions
      x-box-resource-display-name: File Versions
      x-box-resource-id: file_versions
    Files:
      description: A list of files
      properties:
        entries:
          items:
            $ref: "#/components/schemas/File"
          type: array
        total_count:
          description: The number of files.
          example: 1
          format: int64
          type: integer
      x-box-resource-display-name: Files
      x-box-resource-id: files
    Folder:
      allOf:
        - $ref: "#/components/schemas/Folder--Standard"
        - properties:
            allowed_invitee_roles:
              description: |-
                The types of collaborations that have been allowed by the
                enterprise administrator.
              enum:
                - open
                - company
                - collaborators
              example:
                - open
              items:
                type: string
              type: array
            allowed_shared_link_access_levels:
              description: |-
                The default access level settings for shared links as set
                by the administrator.
              enum:
                - open
                - company
                - collaborators
              example:
                - open
              items:
                type: string
              type: array
            can_non_owners_invite:
              description: |-
                If collaborators who are not
                folder owners can invite new collaborators
              example: true
              type: boolean
            has_collaborations:
              description: If this folder has any collaborators.
              example: true
              type: boolean
            is_collaboration_restricted_to_enterprise:
              description: |-
                If future invites to this folder are restricted to users
                within the enterprise. This does not affect existing
                collaborations.
              example: true
              type: boolean
            is_externally_owned:
              description: If this folder is owned by a user outside of the enterprise.
              example: true
              type: boolean
            permissions:
              allOf:
                - $ref: "#/components/schemas/Permissions"
                - description: |-
                    The permissions that the current user has
                    for this item
            sync_state:
              description: If Box Sync or Box Drive is allowed to sync this folder.
              enum:
                - synced
                - not_synced
              example: synced
              type: string
            tags:
              description: |-
                The tags for this item.

                To add or remove a tag, retrieve the item's current tags,
                modify them, and then update them using this field.
              example:
                - approved
              items:
                type: string
              type: array
            watermark_info:
              allOf:
                - $ref: "#/components/schemas/WatermarkInfo"
                - description: Information about the watermarking on this folder
      description: |-
        A full representation of a folder, as can be returned from any
        folder API endpoints by default
      x-box-reference-category: folders
      x-box-resource-display-name: Folder
      x-box-resource-id: folder
    Folder--Mini:
      allOf:
        - $ref: "#/components/schemas/Item"
        - properties:
            etag:
              description: |-
                The entity tag of this folder object. Used with `If-Match`
                headers.
              example: "1"
              type: string
            name:
              description: The name of the folder.
              example: Pictures
              type: string
            sequence_id:
              description: >-
                A unique ID for use with the `/events` endpoint. May be `null`
                for

                some folders, such as root or trash.
              example: "1"
              type: string
            type:
              description: "`folder`"
              enum:
                - folder
              example: folder
              type: string
      description: |-
        A mini representation of a file version, used when
        nested under another resource.
      x-box-reference-hide: true
      x-box-resource-display-name: Folder (Mini)
      x-box-resource-id: folder--mini
    Folder--Standard:
      allOf:
        - $ref: "#/components/schemas/Folder--Mini"
        - properties:
            content_created_at:
              description: |-
                The time at which this folder was originally created according
                to the uploader.
              example: 2012-12-12T10:53:43-08:00
              format: date-time
              type: string
            content_modified_at:
              description: >-
                The time the folder or its contents were last modified according
                to

                the uploader.
              example: 2012-12-12T10:53:43-08:00
              format: date-time
              type: string
            created_at:
              description: >-
                The time the folder was created.  May be `null` for some folders
                such

                as root or trash.
              example: 2012-12-12T10:53:43-08:00
              format: date-time
              type: string
            created_by:
              allOf:
                - $ref: "#/components/schemas/User--Mini"
                - description: The user who created this folder
            description:
              description: The description of the folder
              example: Some pictures I took
              maxLength: 256
              type: string
            expires_at:
              description: The time and which the folder will be automatically be deleted.
              example: 2012-12-12T10:53:43-08:00
              format: date-time
              type: string
            folder_upload_email:
              properties:
                access:
                  description: >-
                    If set, users can email files to the automatically

                    created email address to upload files to the

                    folder. To get the email address, request the

                    `folder_upload_email` field for the folder after setting

                    this field.


                    When set to `collaborators`, only emails from registered email

                    addresses for collaborators will be accepted.
                  enum:
                    - open
                    - collaborators
                  example: open
                  type: string
                email:
                  description: |-
                    The upload email address for this folder. This will be
                    `null` if not enabled.
                  example: upload.Picture.k13sdz1@u.box.com
                  format: email
                  type: string
              type: object
            item_collection:
              description: A collection of mini file and folder objects contained in this
                folder.
              items:
                $ref: "#/components/schemas/Item"
              type: array
            item_status:
              description: |-
                Whether this item is deleted or not.

                Values include `active` if the item has not been trashed,
                `trashed` if the item has been moved to the trash, and
                `deleted` if the item has been permanently deleted.
              enum:
                - active
                - trashed
                - deleted
              example: active
              type: string
            modified_by:
              allOf:
                - $ref: "#/components/schemas/User--Mini"
                - description: The user who last modified this folder.
            owned_by:
              allOf:
                - $ref: "#/components/schemas/User--Mini"
                - description: The user who owns this folder.
            parent:
              allOf:
                - $ref: "#/components/schemas/Folder--Mini"
                - description: >-
                    The direct parent folder that this folder is located within.


                    May be `null` for folders such as root, trash and child folders

                    whose parent is inaccessible.
            path_collection:
              description: |-
                The tree of folders that this folder is contained in,
                starting at the root.
              items:
                $ref: "#/components/schemas/Folder--Mini"
              type: array
            purged_at:
              description: The time at which this folder will be purged from the trash.
              example: 2012-12-12T10:53:43-08:00
              format: date-time
              type: string
            shared_link:
              allOf:
                - $ref: "#/components/schemas/SharedLink"
                - description: |-
                    The shared link object for this folder. Will be
                    `null` if no shared link has been created.
            size:
              description: |-
                The folder size in bytes.

                Be careful parsing this integer as it can easily
                go into exponent notation.
              example: 629644
              format: int64
              type: integer
            trashed_at:
              description: The time at which this folder was put in the trash.
              example: 2012-12-12T10:53:43-08:00
              format: date-time
              type: string
      description: |-
        A standard representation of a folder, as returned from any
        folder API endpoints by default
      x-box-reference-hide: true
      x-box-resource-display-name: Folder (Standard)
      x-box-resource-id: folder--standard
    FolderUploadEmail:
      description: The writable Folder Upload Email object
      properties:
        access:
          description: |-
            If set, users can email files to the automatically
            created email address to upload files to the
            folder. To get the email address, request the
            `folder_upload_email` field for the folder after setting
            this field.

            When set to `collaborators`, only emails from registered email
            addresses for collaborators will be accepted.
          enum:
            - open
            - collaborators
          example: open
          type: string
      type: object
      x-box-resource-display-name: Folder Upload Email
      x-box-resource-id: folder_upload_email
    Group:
      allOf:
        - $ref: "#/components/schemas/Group--Standard"
        - properties:
            description:
              description: Human readable description of the group.
              example: Support Group - as imported from Active Directory
              maxLength: 255
              type: string
            external_sync_identifier:
              description: |-
                An arbitrary identifier that can be used by
                external group sync tools to link this Box Group to
                an external group. Example values of this field
                could be an Active Directory Object ID or a Google
                Group ID.  We recommend you use of this field in
                order to avoid issues when group names are updated in
                either Box or external systems.
              example: AD:123456
              type: string
            invitability_level:
              description: |-
                Specifies who can invite the group to collaborate
                on folders (Create Collaboration).

                When set to `admins_only` the enterprise admin, co-admins,
                and the group's admin can invite the group.

                When set to `admins_and_members` all the admins listed
                above and group members can invite the group.

                When set to `all_managed_users` all managed users in the
                enterprise can invite the group.
              enum:
                - admins_only
                - admins_and_members
                - all_managed_users
              example: admins_only
              type: string
            member_viewability_level:
              description: |-
                Specifies who can view the members of the group
                (Get Memberships for Group).

                * `admins_only - the enterprise admin, co-admins, group's
                  group admin
                * `admins_and_members` - all admins and group members
                * `all_managed_users` - all managed users in the
                  enterprise
              enum:
                - admins_only
                - admins_and_members
                - all_managed_users
              example: admins_only
              type: string
            provenance:
              description: |-
                Keeps track of which external source this group is
                coming from (e.g. "Active Directory", "Google Groups",
                "Facebook Groups").  Setting this will
                also prevent Box users from editing the group name
                and its members directly via the Box web application.
                This is desirable for one-way  syncing of groups.
              example: Active Directory
              maxLength: 255
              type: string
      description: |-
        Groups contain a set of users, and can be used in place of
        users in some operations, such as collaborations.
      x-box-reference-category: groups
      x-box-resource-display-name: Group
      x-box-resource-id: group
    Group--Mini:
      allOf:
        - $ref: "#/components/schemas/Reference"
        - properties:
            name:
              description: The name of the group
              example: Support
              type: string
            type:
              description: "`group`"
              enum:
                - group
              example: group
              type: string
      description: |-
        Mini representation of a group, including id and name of
        group.
      type: object
      x-box-reference-hide: true
      x-box-resource-display-name: Group (Mini)
      x-box-resource-id: group--mini
    Group--Standard:
      allOf:
        - $ref: "#/components/schemas/Group--Mini"
        - properties:
            created_at:
              description: When the group object was created
              example: 2012-12-12T10:53:43-08:00
              format: date-time
              type: string
            modified_at:
              description: When the group object was last modified
              example: 2012-12-12T10:53:43-08:00
              format: date-time
              type: string
      description: |-
        A standard representation of a group, as returned from any
        group API endpoints by default
      x-box-reference-hide: true
      x-box-resource-display-name: Group (Standard)
      x-box-resource-id: group--standard
    GroupMembership:
      allOf:
        - $ref: "#/components/schemas/Reference"
        - properties:
            created_at:
              description: The time this membership was created.
              example: 2012-12-12T10:53:43-08:00
              format: date-time
              type: string
            group:
              allOf:
                - $ref: "#/components/schemas/Group--Mini"
                - description: The group that the membership applies to
            modified_at:
              description: The time this membership was last modified.
              example: 2012-12-12T10:53:43-08:00
              format: date-time
              type: string
            role:
              description: The role of the user in the group.
              enum:
                - member
                - admin
              example: member
              type: string
            type:
              description: "`group_membership`"
              enum:
                - group_membership
              example: group_membership
              type: string
            user:
              allOf:
                - $ref: "#/components/schemas/User--Mini"
                - description: The user that the membership applies to
      description: |-
        Membership is used to signify that a user is part of a
        group.
      x-box-reference-category: groups
      x-box-resource-display-name: Membership
      x-box-resource-id: group_membership
    GroupMemberships:
      allOf:
        - $ref: "#/components/schemas/Pagination"
        - properties:
            entries:
              items:
                $ref: "#/components/schemas/GroupMembership"
              type: array
      description: A list of group memberships.
      x-box-resource-display-name: Memberships
      x-box-resource-id: group_memberships
    Groups:
      allOf:
        - $ref: "#/components/schemas/Pagination"
        - properties:
            entries:
              items:
                $ref: "#/components/schemas/Group"
              type: array
      description: A list of groups.
      x-box-resource-display-name: Groups
      x-box-resource-id: groups
    Invite:
      allOf:
        - $ref: "#/components/schemas/Reference"
        - properties:
            actionable_by:
              $ref: "#/components/schemas/User--Mini"
            created_at:
              description: When the invite was created
              example: 2012-12-12T10:53:43-08:00
              format: date-time
              type: string
            invited_by:
              $ref: "#/components/schemas/User--Mini"
            invited_to:
              $ref: "#/components/schemas/Enterprise"
            modified_at:
              description: When the invite was modified.
              example: 2012-12-12T10:53:43-08:00
              format: date-time
              type: string
            status:
              description: The status of the invite
              example: pending
              type: string
            type:
              description: "`invite`"
              enum:
                - invite
              example: invite
              type: string
      description: An invite for a user to an enterprise.
      x-box-resource-display-name: Invite
      x-box-resource-id: invite
    Item:
      allOf:
        - $ref: "#/components/schemas/Reference"
        - properties:
            etag:
              description: |-
                The entity tag of this item. Used with If-Match headers.
                May be `null` for some folders such as root or trash.
              example: "1"
              type: string
            name:
              description: The name of the item.
              example: Pictures
              type: string
            sequence_id:
              description: >-
                A unique ID for use with the `/events` endpoint. May be `null`
                for

                some items, such as root or trash.
              example: "1"
              type: string
            type:
              description: The type of this item
              example: file
              type: string
      description: A generic mini representation of a file, folder, user or enterprise
      x-box-resource-display-name: Item
      x-box-resource-id: item_reference
    Items:
      allOf:
        - $ref: "#/components/schemas/Pagination"
        - properties:
            entries:
              items:
                $ref: "#/components/schemas/Item"
              type: array
      description: A list of generic mini representations of a file, folder, user or
        enterprise
      x-box-resource-display-name: Items
      x-box-resource-id: item_references
    LegalHoldPolicies:
      allOf:
        - $ref: "#/components/schemas/MarkerPagination"
        - properties:
            entries:
              items:
                $ref: "#/components/schemas/LegalHoldPolicy"
              type: array
      description: A list of legal hold policies.
      x-box-resource-display-name: Legal Hold Policies
      x-box-resource-id: legal_hold_policies
    LegalHoldPolicy:
      allOf:
        - $ref: "#/components/schemas/LegalHoldPolicy--Mini"
        - properties:
            assignment_counts:
              allOf:
                - $ref: "#/components/schemas/AssignmentCounts"
                - description: Counts of assignments within this policy by apply-to type
            created_at:
              description: When the legal hold policy object was created
              example: 2012-12-12T10:53:43-08:00
              format: date-time
              type: string
            created_by:
              allOf:
                - $ref: "#/components/schemas/User--Mini"
                - description: The user who created the legal hold policy object
            deleted_at:
              description: |-
                When the policy release request was sent. (Because
                it can take time for a policy to fully delete, this
                isn't quite the same time that the policy is fully deleted).

                If `null`, the policy was not deleted.
              example: 2012-12-12T10:53:43-08:00
              format: date-time
              type: string
            description:
              description: |-
                Description of the legal hold policy. Optional
                property with a 500 character limit.
              example: Postman created policy
              maxLength: 500
              type: string
            filter_ended_at:
              description: |-
                User-specified, optional date filter applies to
                Custodian assignments only
              example: 2012-12-12T10:53:43-08:00
              format: date-time
              type: string
            filter_started_at:
              description: |-
                User-specified, optional date filter applies to
                Custodian assignments only
              example: 2012-12-12T10:53:43-08:00
              format: date-time
              type: string
            modified_at:
              description: |-
                When the legal hold policy object was modified.
                Does not update when assignments are added or removed.
              example: 2012-12-12T10:53:43-08:00
              format: date-time
              type: string
            policy_name:
              description: Name of the legal hold policy.
              example: Policy 4
              maxLength: 254
              type: string
            release_notes:
              description: Optional notes about why the policy was created.
              example: Example
              maxLength: 500
              type: string
            status:
              description: |-
                * 'active' - the policy is not in a transition state
                * 'applying' - that the policy is in the process of
                  being applied
                * 'releasing' - that the process is in the process
                  of being released
                * 'released' - the policy is no longer active
              enum:
                - active
                - applying
                - releasing
                - released
              example: active
              type: string
      description: |-
        Legal Hold Policy information describes the basic
        characteristics of the Policy, such as name, description,
        and filter dates.
      x-box-reference-category: legal_hold_policies
      x-box-resource-display-name: Legal Hold Policy
      x-box-resource-id: legal_hold_policy
    LegalHoldPolicy--Mini:
      allOf:
        - $ref: "#/components/schemas/Reference"
        - properties:
            type:
              description: "`legal_hold_policy`"
              enum:
                - legal_hold_policy
              example: legal_hold_policy
              type: string
      description: A mini legal hold policy
      x-box-reference-hide: true
      x-box-resource-display-name: Legal Hold Policy (Mini)
      x-box-resource-id: legal_hold_policy--mini
    LegalHoldPolicyAssignment:
      allOf:
        - $ref: "#/components/schemas/Reference"
        - properties:
            assigned_at:
              description: |-
                When the legal hold policy assignment object was
                created
              example: 2012-12-12T10:53:43-08:00
              format: date-time
              type: string
            assigned_by:
              allOf:
                - $ref: "#/components/schemas/User--Mini"
                - description: |-
                    The user who created the legal hold policy
                    assignment
            assigned_to:
              allOf:
                - $ref: "#/components/schemas/Item"
                - description: |-
                    The item that the the legal hold policy
                    is assigned to. Includes type and ID.
            deleted_at:
              description: |-
                When the assignment release request was sent.
                (Because it can take time for an assignment to fully
                delete, this isn't quite the same time that the
                assignment is fully deleted). If null, Assignment
                was not deleted.
              example: 2012-12-12T10:53:43-08:00
              format: date-time
              type: string
            legal_hold_policy:
              allOf:
                - $ref: "#/components/schemas/LegalHoldPolicy--Mini"
                - description: |-
                    The policy that the legal hold policy assignment
                    is part of
            type:
              description: "`legal_hold_policy_assignment`"
              enum:
                - legal_hold_policy_assignment
              example: legal_hold_policy_assignment
              type: string
      description: |-
        Legal Hold Assignments are used to assign Legal Hold
        Policies to Users, Folders, Files, or File Versions.

        Creating a Legal Hold Assignment puts a hold
        on the File-Versions that belong to the Assignment's
        'apply-to' entity.
      x-box-reference-category: legal_hold_policies
      x-box-resource-display-name: Legal Hold Policy Assignment
      x-box-resource-id: legal_hold_policy_assignment
    LegalHoldPolicyAssignments:
      allOf:
        - $ref: "#/components/schemas/MarkerPagination"
        - properties:
            entries:
              items:
                $ref: "#/components/schemas/LegalHoldPolicyAssignment"
              type: array
      description: A list of legal hold policies assignments.
      x-box-resource-display-name: Legal Hold Policy Assignments
      x-box-resource-id: legal_hold_policy_assignments
    Lock:
      allOf:
        - $ref: "#/components/schemas/Reference"
        - properties:
            created_at:
              description: The time this lock was created at
              example: 2012-12-12T10:53:43-08:00
              format: date-time
              type: string
            created_by:
              allOf:
                - $ref: "#/components/schemas/User--Mini"
                - description: The use who created the lock
            expired_at:
              description: The time this lock is to expire at, which might be in the past
              example: 2012-12-12T10:53:43-08:00
              format: date-time
              type: string
            is_download_prevented:
              description: Whether or not the file can be downloaded while locked
              example: true
              type: boolean
            type:
              description: "`lock`"
              enum:
                - lock
              example: lock
              type: string
      description: The lock held on a file.
      x-box-resource-display-name: Lock
      x-box-resource-id: lock
    Lock--Writable:
      description: Defines a lock on an item
      properties:
        access:
          description: The type of this item, should be `lock`.
          enum:
            - lock
          example: lock
          type: string
        expires_at:
          description: The time at which the lock expires
          example: 2012-12-12T10:53:43-08:00
          format: date-time
          type: string
        is_download_prevented:
          description: Whether the file can be downloaded while locked
          example: true
          type: boolean
      required:
        - access
      type: object
      x-box-reference-hide: true
      x-box-resource-display-name: Lock Writable
      x-box-resource-id: lock--writable
    MarkerPagination:
      description: |-
        The part of an API response that describes marker
        based pagination
      properties:
        limit:
          description: >-
            The limit that was used for these entries. This will be the same as
            the

            `limit` query parameter unless that value exceeded the maximum value

            allowed. The maximum value varies by API.
          example: 1000
          format: int64
          type: integer
        next_marker:
          description: The marker for the start of the next page of results.
          example: 3000
          format: int64
          type: integer
        prev_marker:
          description: The marker for the start of the previous page of results.
          example: 1000
          format: int64
          type: integer
      x-box-resource-display-name: Marker Pagination
      x-box-resource-id: marker_pagination
    Metadata:
      description: |-
        A piece of metadata as specified by a metadata template and
        applied to a file or folder.
      properties:
        $canEdit:
          description: Whether the user can edit this metadata
          example: true
          type: boolean
        $id:
          description: 36-character UUID to identify the metadata object
          example: 01234500-12f1-1234-aa12-b1d234cb567e
          format: uuid
          type: string
        $parent:
          description: An ID for the parent folder
          example: folder_59449484661,
          type: string
        $scope:
          description: |-
            An ID for the scope in which this template
            has been applied
          example: enterprise_27335
          type: string
        $template:
          description: The name of the template
          example: blueprintTemplate
          type: string
        $type:
          description: >-
            A unique identifier for the "type" of this instance. This is an
            internal

            system property and should not be used by a client application.
          example: blueprintTemplate-6bcba49f-ca6d-4d2a-a758-57fe6edf44d0
          type: string
        $typeVersion:
          description: >-
            The last-known version of the template of the object. This is an
            internal

            system property and should not be used by a client application.
          example: 2
          type: integer
        $version:
          description: >-
            The version of the metadata object. Starts at 0 and increases every
            time

            a user-defined property is modified.
          example: 1
          type: integer
      x-box-reference-category: metadata
      x-box-resource-display-name: Metadata
      x-box-resource-id: metadata
    MetadataCard:
      description: |-
        A Box Skills card that is applied to the metadata
        of a file.
      properties:
        created_at:
          description: The time the card was created at
          example: 2012-12-12T10:53:43-08:00
          format: date-time
          type: string
        duration:
          description: |-
            An optional duration.

            Used with a `card_type` of`transcript`, or
            `timeline`.
          example: 1000
          type: integer
        entries:
          description: |-
            An optional list of entries.

            Used with a `card_type` of`transcript`, `keyword` or
            `timeline`.
          items:
            $ref: "#/components/schemas/MetadataCardEntry"
          type: array
        invocation:
          description: The current invocation of the skill
          properties:
            id:
              description: The ID of the skill invocation.
              example: "33243242"
              type: string
            type:
              description: "`skill_invocation`"
              enum:
                - skill_invocation
              example: "`skill_invocation`"
              type: string
          required:
            - type
            - id
          type: object
        skill:
          description: The skill that is updating the cards
          properties:
            id:
              description: The ID of the skill.
              example: "43342423234"
              type: string
            type:
              description: "`service`"
              enum:
                - service
              example: "`service`"
              type: string
          required:
            - type
            - id
          type: object
        skill_card_title:
          description: The title of the card
          properties:
            code:
              description: An identifier for your title
              example: my_transcripts
              type: string
            message:
              description: The actual title to show in the UI
              example: My Transcripts
              type: string
          required:
            - code
            - message
          type: object
        skill_card_type:
          description: The type of card to create
          enum:
            - transcript
            - keyword
            - timeline
            - status
            - error
          example: status
          type: string
        status:
          description: Optional status. Used with a `card_type` of `status`.
          properties:
            code:
              description: The type of status being set
              enum:
                - skills_pending_status
                - custom_error
              example: skills_pending_status
              type: string
            message:
              description: The message for the status to show in the UI
              example: We're preparing to process your file. Please hold on!
              type: string
          type: object
        type:
          description: "`skill_card`"
          enum:
            - skills_card
          example: "`skill_card`"
          type: string
      required:
        - type
        - created_at
        - skill
        - skill_card_title
      x-box-reference-category: skills
      x-box-resource-display-name: Metadata Card
      x-box-resource-id: metadata_card
    MetadataCardEntry:
      description: An entry in the `entries` attribute of a metadata card
      properties:
        text:
          description: The text of the entry
          example: keyword1
          type: string
        type:
          description: "`text`"
          enum:
            - text
          example: "`text`"
          type: string
      required:
        - type
        - text
      x-box-reference-category: skills
      x-box-resource-display-name: Metadata Card Entry
      x-box-resource-id: metadata_cards_entry
    MetadataCascadePolicies:
      allOf:
        - $ref: "#/components/schemas/MarkerPagination"
        - properties:
            entries:
              items:
                $ref: "#/components/schemas/MetadataCascadePolicy"
              type: array
      description: A list of metadata cascade policies.
      x-box-resource-display-name: Metadata Cascade Policies
      x-box-resource-id: metadata_cascade_policies
    MetadataCascadePolicy:
      description: |-
        A cascade policy that applies to metadata policy template
        to a folder
      properties:
        id:
          description: The ID of the metadata cascade policy object
          example: 6fd4ff89-8fc1-42cf-8b29-1890dedd26d7
          type: string
        owner_enterprise:
          description: The enterprise that owns the policy.
          properties:
            id:
              description: The ID of the enterprise that owns the policy.
              example: "690678"
              type: string
            type:
              description: "`enterprise`"
              example: "`enterprise`"
              type: string
          type: object
        parent:
          description: Represent the folder the policy is applied to
          properties:
            id:
              description: The ID of the folder the policy is applied to
              example: "690678"
              type: string
            type:
              description: "`folder`"
              example: "`folder`"
              type: string
          type: object
        scope:
          description: >-
            The scope of the target instance that will be cascaded down. The
            `scope`

            and `templateKey` together identify the metadata on the folder that is

            to be cascaded down. Today, only `global` and `enterprise_*` scopes are

            supported.
          example: global
          type: string
        templateKey:
          description: |-
            The template key of the target metadata template to cascade down.
            The `scope` & `templateKey` together identify the metadata on the f
            older that is to be cascaded down.
          example: demo
          type: string
      x-box-reference-category: metadata_cascade_policies
      x-box-resource-display-name: Metadata Cascade Policy
      x-box-resource-id: metadata_cascade_policy
    MetadataFilter:
      description: |-
        A metadata filter used for searching by metadata
        template
      properties:
        filters:
          additionalProperties:
            description: The value for the custom field
            example: datasheet
            type: string
          description: |-
            Additional key/value pairs for the template to search for.

            For floats and dates, you can include an (inclusive) upper
            bound parameter `lt` or (inclusive) lower bound parameter
            `gt`, or both.

            An example filter for a `“contractExpiration”` on or before
            `08-01-16 UTC` would be listed as follow.

            `{"contractExpiration":{"lt":"2016-08-01T00:00:00Z"}}`
          example:
            documentType: datasheet
          type: object
        scope:
          description: Specifies the scope of the template to search for.
          enum:
            - global
            - enterprise
          example: global
          type: string
        templateKey:
          description: |-
            The key name of the template to search for. Only
            one template name can be specified per filter.
          example: marketingCollateral
          type: string
      type: object
      x-box-resource-display-name: Metadata Filter
      x-box-resource-id: metadata_filter
    MetadataPatchItem:
      description: |-
        A [JSON-Patch](https://tools.ietf.org/html/rfc6902) operation for a
        change to make to the metadata.
      properties:
        from:
          description: |-
            Required for `move` or `copy`.

            The location in the metadata JSON object to move or copy from,
            in the format of a
            [JSON-Pointer](https://tools.ietf.org/html/rfc6901).
          example: /nextState
          type: string
        op:
          description: The operation type
          enum:
            - add
            - replace
            - remove
            - test
            - move
            - copy
          example: add
          type: string
        path:
          description: |-
            The location in the metadata JSON object
            to apply the changes to, in the format of a
            [JSON-Pointer](https://tools.ietf.org/html/rfc6901).

            The path must always be prefixed with a `/`.

            Special characters `~` and `/` in the key must be escaped
            to ensure the operation can be executed as intended.
          example: /currentState
          type: string
        value:
          description: |-
            The value to be set or tested.

            Required for `add`, `replace`, and `test` operations.

            For `add`, if the value exists already the previous value will be
            overwritten by the new value.

            For `replace`, the value must exist before replacing.

            For `test`, the existing value at the `path` location must match
            the specified value.
          example: reviewed
          type: string
      type: object
      x-box-resource-display-name: Metadata Patch Item
      x-box-resource-id: metadata-patch-item
    MetadataTemplate:
      allOf:
        - $ref: "#/components/schemas/MetadataTemplate--Writable"
        - properties:
            id:
              description: The ID of the template
              example: f7a9891f
              type: string
      description: A template for metadata that can be applied to files and folders
      x-box-reference-category: metadata_templates
      x-box-resource-display-name: Metadata Template
      x-box-resource-id: metadata_template
    MetadataTemplate--Writable:
      description: |-
        The writable parts of a metadata template that can be
        applied to files and folders
      properties:
        displayName:
          description: The display name of the template
          example: Product Info
          maxLength: 4096
          type: string
        fields:
          description: The ordered set of key:value pairs for the template.
          items:
            $ref: "#/components/schemas/MetadataTemplateField"
          type: array
        hidden:
          default: false
          description: Whether this template is hidden in the UI
          example: true
          type: boolean
        scope:
          description: >-
            The scope of the object. `global` and `enterprise_*` scopes are
            supported.


            The `global` scope contains the template with a key of `properties`,

            while the enterprise scope pertains to custom templates created within

            the enterprise.

             The ID of the enterprise will be appended to the enterprise scope.
          example: enterprise_123456
          type: string
        templateKey:
          description: >-
            A unique identifier for the template. The identifier must be unique
            across

            the scope of the enterprise to which the metadata template is being

            applied.
          example: productInfo
          maxLength: 64
          pattern: ^[a-zA-Z_][-a-zA-Z0-9_]*$
          type: string
      x-box-resource-display-name: Metadata Template (Writable)
      x-box-resource-id: metadata_template--writable
    MetadataTemplateField:
      description: |-
        An ordered set of key-value pairs that are part of a
        metadata template
      properties:
        description:
          description: A description of the field.
          example: The category
          maxLength: 4096
          type: string
        displayName:
          description: The display name of the field.
          example: Category
          maxLength: 4096
          type: string
        hidden:
          description: Whether this template is hidden in the UI
          example: true
          type: boolean
        key:
          description: |-
            A unique identifier for the field. The identifier must
            be unique within the template to which it belongs.
          example: category
          maxLength: 256
          type: string
        options:
          items:
            $ref: "#/components/schemas/MetadataTemplateFieldOption"
          type: array
        type:
          description: The data type of the field's value
          enum:
            - string
            - enum
            - float
            - date
          example: string
          type: string
      x-box-resource-display-name: Metadata Template Field
      x-box-resource-id: metadata_template_field
    MetadataTemplateFieldOption:
      description: |-
        For type `enum` and `multiSelect`, one of the potential values
        that can be selected
      properties:
        id:
          description: The ID of the option
          example: f7a9895f
          type: string
        key:
          description: The text value of the option
          example: category1
          type: string
      x-box-resource-display-name: Metadata Template Field Option
      x-box-resource-id: metadata_template_field_option
    MetadataTemplatePatch:
      description: |-
        A patch specification for the changes to make to the metadata template.
        The changes are represented as a JSON array of operation objects.
      items:
        $ref: "#/components/schemas/MetadataTemplatePatchItem"
      type: array
      x-box-resource-display-name: Metadata Template Patch
      x-box-resource-id: metadata-template-patch
    MetadataTemplatePatchItem:
      description: >-
        A patch operation for the

        changes to make to the metadata template.


        The possible operations are as follows.


        * `addEnumOption` Adds an enum option at the
          end of the enum option list for the specified ``fieldKey`.

          Example `{"op":"addEnumOption","fieldKey":"category",
          "data":{"key":"New Option"}}`

        * `addField` Adds a field at the end of the field list
          for the template.

          Example `{"op":"addField","data":{"displayName":"Category",
          "key":"category","hidden":false,"type":"string"}}`.

        * `editTemplate` Allows for editing the base properties
          of a template, mainly the `displayName` and `hidden`
          properties.

          Example `{"op":"editTemplate","data":{"displayName":"Client"}}`.

        * `reorderEnumOptions` Reorders the enum option list to
          match the requested enum option list.

          Example `{"op":"reorderEnumOptions","fieldKey":"category",
          "enumOptionKeys":["option2","option1","option3"]}`

        * `reorderFields`  Reorders the field list to match the requested
          field list

          Example `{"op":"reorderFields","fieldKeys":["field2","field1","field3"]}`

        The following changes can affect existing instances of this template.


        * `editField` Edits any number of the base properties of a field, mainly
          the `displayName`, `hidden`, `description`, and `key` properties.

          If the key is changed, existing values of the specified field are
          migrated to the new key. Search indexes are updated, which can take
          time depending on how many files are affected by the change.

          Example `{"op":"editField","fieldKey":"category",
          "data":{"displayName":"Customer Group"}}`

        * `editEnumOption` Edits one of the options of an enum field.

          Example `{"op":"editEnumOption","fieldKey":"years","enumOptionKey":"2011",
          "data":{"key":"2020"}}`

        * `removeEnumOption` Removes the specified enum option from the
          specified enum field.

          Example `{"op":"removeEnumOption","fieldKey":"years",
          "enumOptionKey":"2011"}`

        * `removeField` Removes the specified field from the template.

          Example `{"op":"removeField","fieldKey":"brand"}`
      properties:
        data:
          additionalProperties:
            example: New name
            type: string
          description: The data for the operation. Can vary depending on the operation.
          example:
            displayName: New name
        enumOptionKeys:
          description: |-
            For operations that affect multiple enum options,
            the keys of the enum options to be affected.
          example:
            - option1
            - option2
            - option3
          items:
            type: string
          type: array
        fieldKeys:
          description: |-
            For operations that affect multiple fields, the keys of the
            fields to be affected.
          example:
            - category
            - name
          items:
            type: string
          type: array
        op:
          description: The operation type to perform on the template.
          enum:
            - addEnumOption
            - addField
            - editTemplate
            - reorderEnumOptions
            - reorderFields
            - editField
            - editEnumOption
            - removeEnumOption
            - removeField
          example: addEnumOption
          type: string
      type: object
      x-box-resource-display-name: Metadata Template Patch Item
      x-box-resource-id: metadata-template-patch-item
    MetadataTemplates:
      allOf:
        - $ref: "#/components/schemas/MarkerPagination"
        - properties:
            entries:
              items:
                $ref: "#/components/schemas/MetadataTemplate"
              type: array
      description: A list of metadata templates
      x-box-resource-display-name: Metadata Templates
      x-box-resource-id: metadata_templates
    Metadatas:
      description: A list of metadata
      properties:
        entries:
          items:
            $ref: "#/components/schemas/Metadata"
          type: array
      x-box-resource-display-name: Metadatas
      x-box-resource-id: metadatas
    NotifiedUser:
      description: A user that is notified of an event.
      properties:
        id:
          description: The id of the user to notify
          example: "12312312"
          type: string
        login:
          description: The email address the user uses to notify
          example: apple@example.com
          type: string
        name:
          description: The name of the user to notify
          example: Tim Apple
          type: string
        type:
          description: The type of item to notify
          enum:
            - user
          example: user
          type: string
      type: object
      x-box-resource-display-name: Notified User
      x-box-resource-id: notified_user
    OAuth2Error:
      description: An OAuth2 error
      properties:
        error:
          description: The type of the error returned.
          example: invalid_client
          type: string
        error_description:
          description: The type of the error returned.
          example: The client credentials are invalid
          type: string
      x-box-resource-display-name: OAuth2 Error
      x-box-resource-id: oauth2_error
    Owner:
      description: The owner of this item
      properties:
        id:
          description: The ID of user that owns this item.
          example: "123456"
          type: string
      type: object
      x-box-resource-display-name: Owner
      x-box-resource-id: owner
    Pagination:
      description: The part of an API response that describes pagination
      properties:
        limit:
          description: >-
            The limit that was used for these entries. This will be the same as
            the

            `limit` query parameter unless that value exceeded the maximum value

            allowed. The maximum value varies by API.
          example: 1000
          format: int64
          type: integer
        offset:
          description: >-
            The 0-based offset of the first entry in this set. This will be the
            same

            as the `offset` query parameter.
          example: 2000
          format: int64
          type: integer
        order:
          description: The order by which items are returned
          items:
            $ref: "#/components/schemas/PaginationOrder"
          type: array
        total_count:
          description: >-
            One greater than the offset of the last entry in the entire
            collection.

            The total number of entries in the collection may be less than

            `total_count`.
          example: 5000
          format: int64
          type: integer
      x-box-resource-display-name: Pagination
      x-box-resource-id: pagination
    PaginationOrder:
      description: The order in which a pagination is ordered
      properties:
        by:
          description: The field to order by
          example: type
          type: string
        direction:
          description: The direction to order by, either ascending or descending
          enum:
            - ASC
            - DESC
          example: ASC
          type: string
      x-box-resource-display-name: Pagination Order
      x-box-resource-id: pagination_order
    Parent:
      description: The parent for this item
      properties:
        id:
          description: The ID of parent item
          example: "123"
          type: string
      x-box-resource-display-name: Parent
      x-box-resource-id: parent
    Permissions:
      description: The part of an API response that describes permissions
      properties:
        can_access:
          description: Whether the current user can access the item
          example: true
          type: boolean
        can_delete:
          description: Whether the current user can delete the item
          example: true
          type: boolean
        can_invite_collaborator:
          description: Whether the current user can invite collaborators to the item
          example: true
          type: boolean
        can_rename:
          description: Whether the current user can rename the item
          example: true
          type: boolean
        can_set_share_access:
          description: Whether the current user can set share permissions for the item
          example: true
          type: boolean
        can_share:
          description: Whether the current user can share the item
          example: true
          type: boolean
        can_upload:
          description: Whether the current user can upload to the item
          example: true
          type: boolean
      x-box-resource-display-name: Permissions
      x-box-resource-id: permissions
    Permissions--Writable:
      description: An object defining if a file can be downloaded.
      properties:
        can_download:
          description: Describes who is allowed to download this file
          enum:
            - open
            - company
          example: open
          type: string
      type: object
      x-box-resource-display-name: Permissions (Writable)
      x-box-resource-id: permissions--writable
    RealtimeServer:
      description: |-
        A real-time server that can be used for
        long polling user events
      properties:
        max_retries:
          description: |-
            The maximum number of retries this server will
            allow before a new long poll should be started by
            getting a [new list of server](#options-events).
          example: 10
          type: integer
        retry_timeout:
          description: |-
            The maximum number of seconds without a response
            after which you should retry the long poll connection.

            This helps to overcome network issues where the long
            poll looks to be working but no packages are coming
            through.
          example: 610
          type: integer
        ttl:
          description: he time in minutes for which this server is available
          example: 10
          type: integer
        type:
          description: "`realtime_server`"
          example: realtime_server
          type: string
        url:
          description: The URL for the server.
          example: |-
            http://2.realtime.services.box.net/\
            subscribe\?channel=cc807c9c4869ffb1c81a&stream_type=all
          type: string
      x-box-resource-display-name: Realtime Server
      x-box-resource-id: realtime_server
    RealtimeServers:
      description: |-
        A list of real-time servers that can
        be used for long-polling.
      properties:
        chunk_size:
          description: The number of pages of servers remaining.
          example: 1
          format: int64
          type: integer
        entries:
          items:
            $ref: "#/components/schemas/RealtimeServer"
          type: array
      x-box-reference-category: events
      x-box-resource-display-name: Realtime Servers
      x-box-resource-id: realtime_servers
    RecentItem:
      description: A recent item accessed by a user.
      properties:
        interacted_at:
          description: The time of the most recent interaction.
          example: 2018-04-13T13:53:23-07:00
          format: date-time
          type: string
        interaction_shared_link:
          description: |-
            If the item was accessed through a shared link it will appear here,
            otherwise this will be null.
          example: https://www.box.com/shared/static/rh935iit6ewrmw0unyul.jpeg
          type: string
        interaction_type:
          description: |-
            The most recent type of access the user performed on
            the item.
          enum:
            - item_preview
            - item_upload
            - item_comment
            - item_open
            - item_modify
          example: item_preview
          type: string
        item:
          allOf:
            - $ref: "#/components/schemas/Item"
            - description: The item that was recently accessed.
        type:
          description: "`recent_item`"
          example: recent_item
          type: string
      x-box-reference-category: recent_items
      x-box-resource-display-name: Recent Item
      x-box-resource-id: recent_item
    RecentItems:
      allOf:
        - $ref: "#/components/schemas/MarkerPagination"
        - properties:
            entries:
              items:
                $ref: "#/components/schemas/RecentItem"
              type: array
      description: A list of recent items.
      x-box-resource-display-name: Recent Items
      x-box-resource-id: recent_items
    Reference:
      description: The bare basic reference for an object
      properties:
        id:
          description: The ID of the object
          example: "11446498"
          type: string
      x-box-resource-display-name: Reference
      x-box-resource-id: reference
    RetentionPolicies:
      description: A list of retention policies
      properties:
        entries:
          items:
            $ref: "#/components/schemas/RetentionPolicy"
          type: array
        total_count:
          description: The number of retention policies.
          example: 156
          format: int64
          type: integer
      x-box-resource-display-name: Retention Policies
      x-box-resource-id: retention_policies
    RetentionPolicy:
      allOf:
        - $ref: "#/components/schemas/RetentionPolicy--Mini"
        - properties:
            created_at:
              description: When the retention policy object was created
              example: 2012-12-12T10:53:43-08:00
              format: date-time
              type: string
            created_by:
              allOf:
                - $ref: "#/components/schemas/User--Mini"
                - description: |-
                    A mini user object representing the user that
                    created the retention policy
            disposition_action:
              description: |-
                The disposition action of the retention policy.
                This action can be `permanently_delete`, which
                will cause the content retained by the policy
                to be permanently deleted, or `remove_retention`,
                which will lift the retention policy from the content,
                allowing it to be deleted by users,
                once the retention policy time period has passed.
              enum:
                - permanently_delete
                - remove_retention
              example: permanently_delete
              type: string
            modified_at:
              description: When the retention policy object was last modified
              example: 2012-12-12T10:53:43-08:00
              format: date-time
              type: string
            policy_type:
              description: |-
                The type of the retention policy. A retention
                policy type can either be `finite`, where a
                specific amount of time to retain the content is known
                upfront, or `indefinite`, where the amount of time
                to retain the content is still unknown.
              enum:
                - finite
                - indefinite
              example: finite
              type: string
            retention_length:
              description: |-
                The length of the retention policy. This length
                specifies the duration in days that the retention
                policy will be active for after being assigned to
                content.  If the policy has A `policy_type` of
                `indefinite`, the `retention_length` will also be
                `indefinite`.
              example: "0"
              format: int32
              type: string
            status:
              description: |-
                The status of the retention policy. The status of
                a policy will be `active`, unless explicitly retired by an
                administrator, in which case the status will be `retired`.
                Once a policy has been retired, it cannot become
                active again.
              enum:
                - active
                - retired
              example: active
              type: string
      description: |-
        A retention policy blocks permanent deletion of content
        for a specified amount of time. Admins can create retention
        policies and then later assign them to specific folders
        or their entire enterprise.  To use this feature, you must
        have the manage retention policies scope enabled
        for your API key via your application management console.
      title: Retention Policy Object
      x-box-reference-category: retention_policies
      x-box-resource-display-name: Retention Policy
      x-box-resource-id: retention_policy
    RetentionPolicy--Mini:
      allOf:
        - $ref: "#/components/schemas/Reference"
        - properties:
            policy_name:
              description: The name given to the retention policy
              example: Some Policy Name
              type: string
            type:
              description: "`retention_policy`"
              enum:
                - retention_policy
              example: retention_policy
              type: string
      description: Mini representation of the retention policy
      x-box-reference-hide: true
      x-box-resource-display-name: Retention Policy (Mini)
      x-box-resource-id: retention_policy--mini
    RetentionPolicyAssignment:
      allOf:
        - $ref: "#/components/schemas/Reference"
        - properties:
            assigned_at:
              description: |-
                When the retention policy assignment object was
                created
              example: 2012-12-12T10:53:43-08:00
              format: date-time
              type: string
            assigned_by:
              allOf:
                - $ref: "#/components/schemas/User--Mini"
                - description: |-
                    A mini user object representing the user that
                    created the retention policy assignment object
            assigned_to:
              allOf:
                - $ref: "#/components/schemas/Reference"
                - description: |-
                    The `type` and `id` of the content that is under
                    retention. The `type` can either be `folder` or `
                    enterprise`.
            retention_policy:
              allOf:
                - $ref: "#/components/schemas/RetentionPolicy--Mini"
                - description: |-
                    A mini retention policy object representing the
                    retention policy that has been assigned to this content
            type:
              description: "`retention_policy_assignment`"
              enum:
                - retention_policy_assignment
              example: retention_policy_assignment
              type: string
      description: |-
        The retention policy assignment endpoint provides a way
        for admins to apply a retention policy on a per-folder
        basis, or place a blanket policy over the entire
        enterprise.
      x-box-reference-category: retention_policies
      x-box-resource-display-name: Retention Policy Assignment
      x-box-resource-id: retention_policy_assignment
    RetentionPolicyAssignments:
      allOf:
        - $ref: "#/components/schemas/MarkerPagination"
        - properties:
            entries:
              items:
                $ref: "#/components/schemas/RetentionPolicyAssignment"
              type: array
      description: A list of retention policy assignments
      x-box-resource-display-name: Retention Policy Assignments
      x-box-resource-id: retention_policy_assignments
    SessionEndpoints:
      description: A list of endpoints for a chunked upload session.
      properties:
        abort:
          description: The URL for used to abort the session.
          example: https://upload.box.com/api/2.0/files/upload_sessions/D5E3F7A
          type: string
        commit:
          description: The URL used to commit the file
          example: https://upload.box.com/api/2.0/files/upload_sessions/D5E3F7A/commit
          type: string
        list_parts:
          description: The URL users to list all parts.
          example: https://upload.box.com/api/2.0/files/upload_sessions/D5E3F7A/parts
          type: string
        log_event:
          description: The URL used to get the upload log from.
          example: https://upload.box.com/api/2.0/files/upload_sessions/D5E3F7A/log
          type: string
        status:
          description: The URL used to get the status of the upload.
          example: https://upload.box.com/api/2.0/files/upload_sessions/D5E3F7A
          type: string
        upload_part:
          description: The URL to upload parts to
          example: https://upload.box.com/api/2.0/files/upload_sessions/D5E3F7A
          type: string
      x-box-reference-category: chunked_uploads
      x-box-resource-display-name: Session Endpoints
      x-box-resource-id: session_endpoints
    SharedLink:
      description: >-
        Shared links provide direct, read-only access to files or folder on Box

        using a URL. Shared links with open access level allow anyone with the URL

        to access the item, while shared links with company or collaborators access

        levels can only be accessed by appropriate authenticated Box users.
      properties:
        access:
          description: >-
            The access level specified when the shared link was created. Can be
            `open`

            ("People with the link"), `company` ("People in your company"), or

            `collaborators` ("People in this folder").  When creating a shared link,

            if you omit this field then the access level will be set to the default

            access level specified by the enterprise admin.
          enum:
            - open
            - company
            - collaborators
          example: open
          type: string
        download_count:
          description: The number of times the item has been downloaded
          example: 3
          type: integer
        download_url:
          description: |-
            The "direct Link" URL to download the item. This URL can be used in
            a browser to download the file. This URL includes the file
            extension so that the file will be saved with the right file type.
          example: https://www.box.com/shared/static/rh935iit6ewrmw0unyul.jpeg
          type: string
        effective_access:
          description: >-
            The effective access level for the shared link.  This can be lower
            than

            the value in the `access` field if the enterprise settings restrict the

            allowed access levels.
          enum:
            - open
            - company
            - collaborators
          example: company
          type: string
        is_password_enabled:
          description: Whether the shared link has a password set
          example: true
          type: boolean
        permissions:
          properties:
            can_download:
              description: >-
                Whether the shared link allows downloads.  For shared links on

                folders, this also applies to any items in the folder. Can only be set

                with access levels `open` and `company` (not `collaborators`).
              example: true
              type: boolean
            can_preview:
              description: >-
                Whether the shared link allows previewing.  Always `true`.  For
                shared

                links on folders, this also applies to any items in the folder.
              example: true
              type: boolean
          type: object
        preview_count:
          description: The number of times the item has been previewed
          example: 3
          type: integer
        unshared_at:
          description: >-
            The date-time that this link will become disabled. This field can
            only be

            set by users with paid accounts.
          example: 2018-04-13T13:53:23-07:00
          format: date-time
          type: string
        url:
          description: >-
            The URL to access the item on Box.  If entered in a browser, this
            URL will

            display the item in Box's preview UI.  If a custom URL is set this field

            will return the custom URL, but the original URL will also continue to

            work.
          example: https://www.box.com/s/vspke7y05sb214wjokpk
          type: string
        vanity_url:
          description: >-
            The "Custom URL" that can also be used to preview the item on
            Box.  Custom

            URLs can only be created or modified in the Box Web application.
          example: https://acme.app.box.com/v/my_url/
          type: string
      x-box-resource-display-name: Shared Link
      x-box-resource-id: shared_link
    SharedLink--Writable:
      description: The writable attributes for a Shared Link.
      properties:
        access:
          description: |-
            The level of access for the shared link. This can be
            restricted to anyone with the link (`open`), only people
            within the company (`company`) and only those who
            have been invited to the folder (`collaborators`).

            This field defaults to default access level
            specified by the enterprise admin.
          enum:
            - open
            - company
            - collaborators
          example: open
          type: string
        password:
          description: |-
            The password required to access the shared link. Set this to
            `null` to remove the password.
          example: do-not-use-this-password
          type: string
        permissions:
          properties:
            can_download:
              description: |-
                If the shared link allows for downloading of files.
                This can only be set when `access` is set to
                `open` or `company`.
              example: true
              type: boolean
          type: object
        unshared_at:
          description: |-
            The timestamp at which this shared link will
            be disabled. This field can only be set by
            users with paid accounts.
          example: 2012-12-12T10:53:43-08:00
          format: date-time
          type: string
      type: object
      x-box-reference-hide: true
      x-box-resource-display-name: Shared Link (Writable)
      x-box-resource-id: shared_link--writable
    Skill:
      allOf:
        - $ref: "#/components/schemas/Reference"
        - properties:
            api_key:
              description: The client ID of the application
              example: hxel2s12wd2h9r8ne103c4gjbqefofih
              type: string
            name:
              description: The name of the skill
              example: Hello World Skill
              type: string
            type:
              description: "`skill`"
              enum:
                - skill
              example: skill
              type: string
      description: An object representing a skill
      x-box-resource-display-name: Skill
      x-box-resource-id: skill
    SkillInvocation:
      allOf:
        - $ref: "#/components/schemas/Reference"
        - properties:
            created_at:
              description: The time this invocation was created.
              example: 2012-12-12T10:53:43-08:00
              format: date-time
              type: string
            enterprise:
              allOf:
                - $ref: "#/components/schemas/Enterprise"
                - description: The enterprise that this invocation was triggered for
            event:
              allOf:
                - $ref: "#/components/schemas/Event"
                - description: The event that triggered this invocation
            id:
              description: Unique identifier for the invocation request.
              example: fd1d2e53-35f5-41fb-9c25-4ba326daf2f9_341016304
              type: string
            skill:
              allOf:
                - $ref: "#/components/schemas/Skill"
                - description: The skill that triggered this invocation
            source:
              allOf:
                - oneOf:
                    - $ref: "#/components/schemas/File--Standard"
                    - $ref: "#/components/schemas/Folder--Standard"
                - description: The item that caused the invocation to trigger
            status:
              properties:
                additional_info:
                  description: Additional status information.
                  example: Example
                  type: string
                error_code:
                  description: Error code information, if error occurred.
                  example: "400"
                  type: string
                message:
                  description: Status information
                  example: Example
                  type: string
                state:
                  description: >-
                    The state of this event.


                    * `invoked` - Triggered the skill with event details to start
                      applying skill on the file.
                    * `processing` - Currently processing.

                    * `success` - Completed processing with a success.

                    * `transient_failure` - Encountered a failure which can be
                      retried.
                    * `permanent_failure` -  Encountered a permanent failure and
                      retry would not help.
                  enum:
                    - invoked
                    - processing
                    - success
                    - transient_failure
                    - permanent_failure
                  example: invoked
                  type: string
              type: object
            token:
              description: The read-only and read-write access tokens for this item
              properties:
                read:
                  $ref: "#/components/schemas/AccessToken--Mini"
                write:
                  $ref: "#/components/schemas/AccessToken--Mini"
              type: object
            trigger:
              description: Action that triggered the invocation
              example: FILE_CONTENT
              type: string
            type:
              description: "`skill_invocation`"
              enum:
                - skill_invocation
              example: skill_invocation
              type: string
      description: |-
        The payload of a Box skill as sent to a Custom Skill's
        `invocation_url`.
      x-box-resource-display-name: Skill Invocation
      x-box-resource-id: skill_invocation
    StoragePolicies:
      allOf:
        - $ref: "#/components/schemas/MarkerPagination"
        - properties:
            entries:
              items:
                $ref: "#/components/schemas/StoragePolicy"
              type: array
      description: A list of storage policies.
      x-box-resource-display-name: Storage Policies
      x-box-resource-id: storage_policies
    StoragePolicy:
      allOf:
        - $ref: "#/components/schemas/StoragePolicy--Mini"
        - properties:
            name:
              description: A descriptive name of the region
              example: Montreal / Dublin
              type: string
      description: The Storage Policy object describes the storage zone.
      x-box-reference-category: multizones
      x-box-resource-display-name: Storage Policy
      x-box-resource-id: storage_policy
    StoragePolicy--Mini:
      allOf:
        - $ref: "#/components/schemas/Reference"
        - properties:
            type:
              description: "`storage_policy`"
              enum:
                - storage_policy
              example: storage_policy
              type: string
      description: A mini description of a Storage Policy object
      x-box-reference-hide: true
      x-box-resource-display-name: Storage Policy (Mini)
      x-box-resource-id: storage_policy--mini
    StoragePolicyAssignment:
      description: The assignment of a storage policy to a user or enterprise
      properties:
        assigned_to:
          allOf:
            - $ref: "#/components/schemas/Reference"
            - description: The enterprise or use the policy is assigned to
        storage_policy:
          allOf:
            - $ref: "#/components/schemas/StoragePolicy--Mini"
            - description: The assigned storage policy
      x-box-reference-category: multizones
      x-box-resource-display-name: Storage Policy Assignment
      x-box-resource-id: storage_policy_assignment
    StoragePolicyAssignments:
      allOf:
        - $ref: "#/components/schemas/MarkerPagination"
        - properties:
            entries:
              items:
                $ref: "#/components/schemas/StoragePolicyAssignment"
              type: array
      description: A list of storage policy assignments.
      x-box-resource-display-name: Storage Policy Assignments
      x-box-resource-id: storage_policy_assignments
    Task:
      allOf:
        - $ref: "#/components/schemas/Reference"
        - properties:
            action:
              description: |-
                The action the task assignee will be prompted to
                do.
              enum:
                - review
              example: review
              type: string
            created_at:
              description: When the task object was created
              example: 2012-12-12T10:53:43-08:00
              format: date-time
              type: string
            created_by:
              allOf:
                - $ref: "#/components/schemas/User--Mini"
                - description: The user who created the task
            due_at:
              description: When the task is due
              example: 2012-12-12T10:53:43-08:00
              format: date-time
              type: string
            is_completed:
              description: Whether the task has been completed
              example: true
              type: boolean
            item:
              allOf:
                - $ref: "#/components/schemas/File--Mini"
                - description: The file associated with the task
            message:
              description: A message that will be included with the task
              example: Legal review
              type: string
            task_assignment_collection:
              allOf:
                - $ref: "#/components/schemas/TaskAssignments"
                - description: |-
                    A collection of task assignment objects
                    associated with the task
            type:
              description: "`task`"
              enum:
                - task
              example: task
              type: string
      description: |-
        Tasks allow for file-centric workflows in Box. Users can
        create tasks on files and assign them to collaborators on
        Box.
      x-box-reference-category: tasks
      x-box-resource-display-name: Task
      x-box-resource-id: task
    TaskAssignment:
      allOf:
        - $ref: "#/components/schemas/Reference"
        - properties:
            assigned_at:
              description: |-
                The date at which this task assignment was
                assigned
              example: 2012-12-12T10:53:43-08:00
              format: date-time
              type: string
            assigned_by:
              allOf:
                - $ref: "#/components/schemas/User--Mini"
                - description: The user who assigned this task
            assigned_to:
              allOf:
                - $ref: "#/components/schemas/User--Mini"
                - description: The user the task has been assigned to
            completed_at:
              description: |-
                The date at which this task assignment was
                completed
              example: 2012-12-12T10:53:43-08:00
              format: date-time
              type: string
            item:
              allOf:
                - $ref: "#/components/schemas/File--Mini"
                - description: The file the task has been assigned to
            message:
              description: |-
                A message that will be included with this task
                assignment
              example: Please review
              type: string
            reminded_at:
              description: |-
                The date at which this task assignment was
                reminded
              example: 2012-12-12T10:53:43-08:00
              format: date-time
              type: string
            resolution_state:
              description: State of this assignment
              enum:
                - completed
                - incomplete
                - approved
                - rejected
              example: incomplete
              type: string
            type:
              description: "`task_assignment`"
              enum:
                - task_assignment
              example: task_assignment
              type: string
      description: An assignment of a task to a file and user
      x-box-reference-category: tasks
      x-box-resource-display-name: Task Assignment
      x-box-resource-id: task_assignment
    TaskAssignments:
      allOf:
        - $ref: "#/components/schemas/Pagination"
        - properties:
            entries:
              items:
                $ref: "#/components/schemas/TaskAssignment"
              type: array
      description: A list of task assignments
      type: object
      x-box-resource-display-name: Task Assignments
      x-box-resource-id: task_assignments
    Tasks:
      description: A list of tasks
      properties:
        entries:
          items:
            $ref: "#/components/schemas/Task"
          type: array
        total_count:
          description: >-
            One greater than the offset of the last entry in the entire
            collection.

            The total number of entries in the collection may be less than

            `total_count`.
          example: 5000
          format: int64
          type: integer
      x-box-resource-display-name: Tasks
      x-box-resource-id: tasks
    TermsOfService:
      allOf:
        - $ref: "#/components/schemas/TermsOfService--Mini"
        - properties:
            created_at:
              description: When the legal item was created
              example: 2012-12-12T10:53:43-08:00
              format: date-time
              type: string
            enterprise:
              allOf:
                - $ref: "#/components/schemas/Enterprise"
                - description: The enterprise these terms apply to
            modified_at:
              description: When the legal item was modified.
              example: 2012-12-12T10:53:43-08:00
              format: date-time
              type: string
            status:
              description: Whether these terms are enabled or not
              enum:
                - enabled
                - disabled
              example: enabled
              type: string
            text:
              description: |-
                The text for your terms and conditions. This text could be
                empty if the status is disabled
              example: By using this service, you agree to ...
              type: string
            tos_type:
              description: Whether to apply these terms to managed users or external users
              enum:
                - managed
                - external
              example: managed
              type: string
      description: |-
        The root-level record that is supposed to represent a
        single Terms of Service.
      x-box-resource-display-name: Terms Of Service
      x-box-resource-id: terms_of_service
    TermsOfService--Mini:
      allOf:
        - $ref: "#/components/schemas/Reference"
        - properties:
            type:
              description: "`terms_of_service`"
              enum:
                - terms_of_service
              example: terms_of_service
              type: string
      description: |-
        The root-level record that is supposed to represent a
        single Terms of Service.
      x-box-reference-hide: true
      x-box-resource-display-name: Terms Of Service (Mini)
      x-box-resource-id: terms_of_service--mini
    TermsOfServiceUserStatus:
      allOf:
        - $ref: "#/components/schemas/Reference"
        - properties:
            created_at:
              description: When the legal item was created
              example: 2012-12-12T10:53:43-08:00
              format: date-time
              type: string
            is_accepted:
              description: If the user has accepted the terms of services
              example: true
              type: boolean
            modified_at:
              description: When the legal item was modified.
              example: 2012-12-12T10:53:43-08:00
              format: date-time
              type: string
            tos:
              allOf:
                - $ref: "#/components/schemas/TermsOfService--Mini"
                - description: The terms of service
            type:
              description: "`terms_of_service_user_status`"
              enum:
                - terms_of_service_user_status
              example: terms_of_service_user_status
              type: string
            user:
              allOf:
                - $ref: "#/components/schemas/User--Mini"
                - description: The user
      description: The association between a Terms of Service and a user
      x-box-reference-category: terms_of_services
      x-box-resource-display-name: ToS User Status
      x-box-resource-id: terms_of_service_user_status
    TermsOfServiceUserStatuses:
      description: A list of terms of service user statuses
      properties:
        entries:
          items:
            $ref: "#/components/schemas/TermsOfServiceUserStatus"
          type: array
        total_count:
          description: The total number of objects.
          example: 2
          format: int64
          type: integer
      x-box-resource-display-name: ToS User Statuses
      x-box-resource-id: terms_of_services_user_statuses
    TermsOfServices:
      description: A list of terms of services
      properties:
        entries:
          items:
            $ref: "#/components/schemas/TermsOfService"
          type: array
        total_count:
          description: The total number of objects.
          example: 2
          format: int64
          type: integer
      x-box-reference-category: terms_of_services
      x-box-resource-display-name: Terms Of Services
      x-box-resource-id: terms_of_services
    TokenRequest:
      description: A request for a new OAuth2 token
      properties:
        actor_token:
          description: >-
            The actor token used to create an annotator token.

            This is a JWT assertion.


            Used in combination with `urn:ietf:params:oauth:grant-type:token-exchange`

            as the `grant_type`.
          example: c3FIOG9vSGV4VHo4QzAyg5T1JvNnJoZ3ExaVNyQWw6WjRsanRKZG5lQk9qUE1BVQ
          format: token
          type: string
        actor_token_type:
          description: >-
            The type of `actor_token` passed in.


            Used in combination with `urn:ietf:params:oauth:grant-type:token-exchange`

            as the `grant_type`.
          enum:
            - urn:ietf:params:oauth:token-type:id_token
          example: urn:ietf:params:oauth:token-type:id_token
          format: urn
          type: string
        assertion:
          description: >-
            A JWT assertion for which to request a new access token.


            Used in combination with `urn:ietf:params:oauth:grant-type:jwt-bearer`

            as the `grant_type`.
          example: xxxxx.yyyyy.zzzzz
          format: jwt
          type: string
        client_id:
          description: |-
            The Client ID of the application requesting an access token.

            Used in combination with `authorization_code` or
            `urn:ietf:params:oauth:grant-type:jwt-bearer` as the `grant_type`.
          example: ly1nj6n11vionaie65emwzk575hnnmrk
          type: string
        client_secret:
          description: |-
            The client secret of the application requesting an access token.

            Used in combination with `authorization_code` or
            `urn:ietf:params:oauth:grant-type:jwt-bearer` as the `grant_type`.
          example: hOzsTeFlT6ko0dme22uGbQal04SBPYc1
          type: string
        code:
          description: |-
            The client-side authorization code passed to your application by
            Box in the browser redirect after the user has successfully
            granted your application permission to make API calls on their
            behalf.

            Used in combination with `authorization_code` as the `grant_type`.
          example: n22JPxrh18m4Y0wIZPIqYZK7VRrsMTWW
          format: token
          type: string
        grant_type:
          description: >-
            The type of request being made, either using a client-side obtained

            authorization code, a refresh token, a JWT assertion, or another access

            token for the purpose of downscoping a token.
          enum:
            - authorization_code
            - refresh_token
            - urn:ietf:params:oauth:grant-type:jwt-bearer
            - urn:ietf:params:oauth:grant-type:token-exchange
          example: authorization_code
          format: urn
          type: string
        refresh_token:
          description: |-
            A refresh token used to get a new access token with.

            Used in combination with `refresh_token` as the `grant_type`.
          example: c3FIOG9vSGV4VHo4QzAyg5T1JvNnJoZ3ExaVNyQWw6WjRsanRKZG5lQk9qUE1BVQ
          format: token
          type: string
        resource:
          description: Full URL for the file that the token should be generated for.
          example: https://api.box.com/2.0/files/123456
          format: url
          type: string
        scope:
          description: |-
            The space-delimited list of scopes that you want apply to the
            new access token.

            The `subject_token` will need to have all of these scopes or
            the call will error with **401 Unauthorized**.
          example: item_upload item_preview base_explorer
          format: space_delimited_list
          type: string
        subject_token:
          description: >-
            The token to exchange for a downscoped token. This can be a regular

            access token, a JWT assertion, or an app token.


            Used in combination with `urn:ietf:params:oauth:grant-type:token-exchange`

            as the `grant_type`.
          example: c3FIOG9vSGV4VHo4QzAyg5T1JvNnJoZ3ExaVNyQWw6WjRsanRKZG5lQk9qUE1BVQ
          format: token
          type: string
        subject_token_type:
          description: >-
            The type of `subject_token` passed in.


            Used in combination with `urn:ietf:params:oauth:grant-type:token-exchange`

            as the `grant_type`.
          enum:
            - urn:ietf:params:oauth:token-type:access_token
          example: urn:ietf:params:oauth:token-type:access_token
          type: string
      required:
        - grant_type
      x-box-resource-display-name: Token Request
      x-box-resource-id: token_request
    TokenRevocationRequest:
      description: A request to revoke an OAuth2 token
      properties:
        client_id:
          description: |-
            The Client ID of the application requesting to revoke the
            access token.
          example: ly1nj6n11vionaie65emwzk575hnnmrk
          type: string
        client_secret:
          description: |-
            The client secret of the application requesting to revoke
            an access token.
          example: hOzsTeFlT6ko0dme22uGbQal04SBPYc1
          type: string
        token:
          description: The access token to revoke.
          example: n22JPxrh18m4Y0wIZPIqYZK7VRrsMTWW
          format: token
          type: string
      required:
        - grant_type
      x-box-resource-display-name: Token Revocation Request
      x-box-resource-id: token_revocation_request
    UploadPart:
      allOf:
        - $ref: "#/components/schemas/UploadPart--Mini"
        - properties:
            sha1:
              description: The SHA1 hash of the chunk.
              example: 134b65991ed521fcfe4724b7d814ab8ded5185dc
              type: string
      description: |-
        A chunk of a file uploaded as part of
        an upload session.
      x-box-reference-category: chunked_uploads
      x-box-resource-display-name: Upload Part
      x-box-resource-id: upload_part
    UploadPart--Mini:
      description: |-
        The basic representation of an upload
        session chunk.
      properties:
        offset:
          description: |-
            The offset of the chunk within the file
            in bytes. The lower bound of the position
            of the chunk within the file.
          example: 16777216
          format: int64
          type: integer
        part_id:
          description: The unique ID of the chunk.
          example: 6F2D3486
          type: string
        size:
          description: The size of the chunk in bytes.
          example: 3222784
          format: int64
          type: integer
      x-box-resource-display-name: Upload Part (Mini)
      x-box-resource-id: upload_part--mini
    UploadParts:
      allOf:
        - $ref: "#/components/schemas/Pagination"
        - properties:
            entries:
              items:
                $ref: "#/components/schemas/UploadPart"
              type: array
      description: |-
        A list of uploaded chunks for an upload
        session.
      x-box-resource-display-name: Upload Parts
      x-box-resource-id: upload_parts
    UploadSession:
      allOf:
        - $ref: "#/components/schemas/Reference"
        - properties:
            num_parts_processed:
              description: |-
                The number of parts that have been uploaded and processed
                by the server. This starts at `0`.

                When committing a file files, inspecting this property can
                provide insight if all parts have been uploaded correctly.
              example: 455
              format: int32
              type: integer
            part_size:
              description: |-
                The  size in bytes that must be used for all parts of of the
                upload.

                Only the last part is allowed to be of a smaller size.
              example: 1024
              format: int64
              type: integer
            session_endpoints:
              allOf:
                - $ref: "#/components/schemas/SessionEndpoints"
                - description: A list of endpoints for this session.
            session_expires_at:
              description: The date and time when this session expires.
              example: 2012-12-12T10:53:43-08:00
              format: date-time
              type: string
            total_parts:
              description: |-
                The total number of parts expected in this upload session,
                as determined by the file size and part size.
              example: 1000
              format: int32
              type: integer
            type:
              description: "`upload_session`"
              enum:
                - upload_session
              example: upload_session
              type: string
      description: An upload session for chunk uploading a file.
      x-box-reference-category: chunked_uploads
      x-box-resource-display-name: Upload Session
      x-box-resource-id: upload_session
    UploadUrl:
      description: The details for the upload session for the file.
      properties:
        upload_token:
          description: An optional access token to use to upload the file
          example: Pc3FIOG9vSGV4VHo4QzAyg5T1JvNnJoZ3ExaVNyQWw6WjRsanRKZG5lQk9qUE1BVQP
          type: string
        upload_url:
          description: |-
            A URL for an upload session that can be used to upload
            the file.
          example: https://upload-las.app.box.com/api/2.0/files/content?upload_session_id=1234
          type: string
      x-box-reference-category: file_uploads
      x-box-resource-display-name: Upload Url
      x-box-resource-id: upload_url
    User:
      allOf:
        - $ref: "#/components/schemas/User--Standard"
        - properties:
            can_see_managed_users:
              description: Whether the user can see other enterprise users in her contact
                list
              example: true
              type: boolean
            enterprise:
              allOf:
                - $ref: "#/components/schemas/Enterprise"
                - description: Representation of the user’s enterprise
            hostname:
              description: >-
                The root (protocol, subdomain, domain) of any links that need to
                be

                generated for the user
              example: https://example.com/
              type: string
            is_exempt_from_device_limits:
              description: Whether to exempt the user from Enterprise device limits
              example: true
              type: boolean
            is_exempt_from_login_verification:
              description: Whether the user must use two-factor authentication
              example: true
              type: boolean
            is_external_collab_restricted:
              description: >-
                Whether the user is allowed to collaborate with users outside
                her

                enterprise
              example: true
              type: boolean
            is_platform_access_only:
              description: Whether the user is an App User
              example: true
              type: boolean
            is_sync_enabled:
              description: Whether the user can use Box Sync
              example: true
              type: boolean
            my_tags:
              description: >-
                Tags for all files and folders owned by the user. Values
                returned

                will  only contain tags that were set by the requester.
              example:
                - important
              items:
                type: string
              type: array
            role:
              description: The user’s enterprise role
              enum:
                - admin
                - coadmin
                - user
              example: admin
              type: string
            tracking_codes:
              description: An array of key/value pairs set by the user’s admin
              example:
                - "code1: 12345"
              items:
                type: string
              type: array
      description: |-
        A full representation of a user, as can be returned from any
        user API endpoint.
      x-box-reference-category: users
      x-box-resource-display-name: User
      x-box-resource-id: user
    User--Mini:
      allOf:
        - $ref: "#/components/schemas/Reference"
        - properties:
            login:
              description: The email address the user uses to log in
              example: ceo@box.com
              type: string
            name:
              description: The name of the user
              example: Aaron Levie
              maxLength: 50
              type: string
            type:
              description: "`user`"
              enum:
                - user
              example: user
              type: string
      description: |-
        A mini representation of a user, used when
        nested under another resource.
      x-box-reference-hide: true
      x-box-resource-display-name: User (Mini)
      x-box-resource-id: user--mini
    User--Standard:
      allOf:
        - $ref: "#/components/schemas/User--Mini"
        - properties:
            address:
              description: The user’s address
              example: 900 Jefferson Ave, Redwood City, CA 94063
              maxLength: 255
              type: string
            avatar_url:
              description: URL of the user’s avatar image
              example: https://www.box.com/api/avatar/large/181216415
              type: string
            created_at:
              description: When the user object was created
              example: 2012-12-12T10:53:43-08:00
              format: date-time
              type: string
            job_title:
              description: The user’s job title
              example: CEO
              maxLength: 100
              type: string
            language:
              description: The user's preferred language
              example: en
              format: ISO639-1-BOX
              type: string
            max_upload_size:
              description: The maximum individual file size in bytes the user can have
              example: 2147483648
              type: integer
            modified_at:
              description: When the user object was last modified
              example: 2012-12-12T10:53:43-08:00
              format: date-time
              type: string
            phone:
              description: The user’s phone number
              example: "6509241374"
              maxLength: 100
              type: string
            space_amount:
              description: The user’s total available space amount in bytes
              example: 11345156112
              type: integer
            space_used:
              description: The amount of space in use by the user
              example: 1237009912
              type: integer
            status:
              description: The user's account status
              enum:
                - active
                - inactive
                - cannot_delete_edit
                - cannot_delete_edit_upload
              example: active
              type: string
            timezone:
              description: The user's timezone
              example: Africa/Bujumbura
              format: timezone
              type: string
      description: |-
        A standard representation of a user, as returned from any
        user API endpoints by default
      x-box-reference-hide: true
      x-box-resource-display-name: User (Standard)
      x-box-resource-id: user--standard
    Users:
      allOf:
        - $ref: "#/components/schemas/Pagination"
        - properties:
            entries:
              items:
                $ref: "#/components/schemas/User"
              type: array
      description: A list of users.
      x-box-resource-display-name: Users
      x-box-resource-id: users
    Watermark:
      description: |-
        A watermark is a semi-transparent overlay on an embedded file
        preview that displays a viewer's email address or user ID
        and the time of access over a file's content
      properties:
        watermark:
          properties:
            created_at:
              description: When this watermark was created
              example: 2012-12-12T10:53:43-08:00
              format: date-time
              type: string
            modified_at:
              description: When this task was modified
              example: 2012-12-12T10:53:43-08:00
              format: date-time
              type: string
          type: object
      x-box-reference-category: watermarks
      x-box-resource-display-name: Watermark
      x-box-resource-id: watermark
    WatermarkInfo:
      description: The watermark information about this item
      properties:
        is_watermarked:
          description: Whether the item is watermarked or not.
          example: true
          type: boolean
      x-box-resource-display-name: Watermark Info
      x-box-resource-id: watermark_info
    WebLink:
      allOf:
        - $ref: "#/components/schemas/Item"
        - properties:
            created_at:
              description: When this file was created on Box’s servers.
              example: 2012-12-12T10:53:43-08:00
              format: date-time
              type: string
            created_by:
              allOf:
                - $ref: "#/components/schemas/User--Mini"
                - description: The user who created this web link
            description:
              description: |-
                The description accompanying the web link. This is
                visible within the Box web application.
              example: Example page
              type: string
            item_status:
              description: >-
                Whether this item is deleted or not. Values include `active`,

                `trashed` if the file has been moved to the trash, and `deleted` if

                the file has been permanently deleted
              enum:
                - active
                - trashed
                - deleted
              example: active
              type: string
            modified_at:
              description: |-
                When this file was last updated on the Box
                servers.
              example: 2012-12-12T10:53:43-08:00
              format: date-time
              type: string
            modified_by:
              allOf:
                - $ref: "#/components/schemas/User--Mini"
                - description: The user who last modified this web link
            owned_by:
              allOf:
                - $ref: "#/components/schemas/User--Mini"
                - description: The user who owns this web link
            parent:
              allOf:
                - $ref: "#/components/schemas/Item"
                - description: The parent object the web link belongs to
            path_collection:
              description: The path of folders to this link, starting at the root
              items:
                $ref: "#/components/schemas/Folder--Mini"
              type: array
            purged_at:
              description: When this file will be permanently deleted.
              example: 2012-12-12T10:53:43-08:00
              format: date-time
              type: string
            shared_link:
              allOf:
                - $ref: "#/components/schemas/SharedLink"
                - description: |-
                    The shared link object for this item. Will be
                    `null` if no shared link has been created.
            trashed_at:
              description: When this file was last moved to the trash.
              example: 2012-12-12T10:53:43-08:00
              format: date-time
              type: string
            type:
              description: "`web_link`"
              enum:
                - web_link
              example: web_link
              type: string
            url:
              description: The URL this web link points to
              example: https://www.example.com/example/1234
              type: string
      description: |-
        Web links are objects that point to URLs. These objects
        are also known as bookmarks within the Box web application.

        Web link objects are treated similarly to file objects,
        they will also support most actions that apply to regular files.
      x-box-reference-category: web_links
      x-box-resource-display-name: Web Link
      x-box-resource-id: web_link
    Webhook:
      allOf:
        - $ref: "#/components/schemas/Reference"
        - properties:
            address:
              description: The URL that is notified by this webhook
              example: https://example.com/webhooks
              type: string
            created_at:
              description: |-
                A timestamp identifying the time that
                the webhook was created.
              example: 2012-12-12T10:53:43-08:00
              format: date-time
              type: string
            created_by:
              allOf:
                - $ref: "#/components/schemas/User--Mini"
                - description: The user who created the webhook
            target:
              description: The item that will trigger the webhook
              properties:
                id:
                  description: The ID of the item to trigger a webhook
                  example: "1231232"
                  type: string
                type:
                  description: The type of item to trigger a webhook
                  enum:
                    - file
                    - folder
                  example: file
                  type: string
              type: object
            triggers:
              description: |-
                An array of event names that this webhook is
                to be triggered for
              example:
                - FILE.UPLOADED
              items:
                $ref: "#/components/schemas/WebhookTrigger"
              type: array
            type:
              description: "`webhook`"
              enum:
                - webhook
              example: webhook
              type: string
      description: Represents a configured webhook.
      x-box-reference-category: webhooks
      x-box-resource-display-name: Webhook
      x-box-resource-id: webhook
    WebhookEvent:
      allOf:
        - $ref: "#/components/schemas/Reference"
        - properties:
            created_at:
              description: |-
                A timestamp identifying the time that
                the webhook event was triggered.
              example: 2012-12-12T10:53:43-08:00
              format: date-time
              type: string
            created_by:
              allOf:
                - $ref: "#/components/schemas/User--Mini"
                - description: The user that triggered this event
            source:
              allOf:
                - oneOf:
                    - $ref: "#/components/schemas/File--Standard"
                    - $ref: "#/components/schemas/Folder--Standard"
                - description: The item that caused the event to trigger
            trigger:
              allOf:
                - $ref: "#/components/schemas/WebhookTrigger"
                - description: The event name that triggered this webhook
            type:
              description: "`webhook_event`"
              enum:
                - webhook_event
              example: webhook_event
              type: string
            webhook:
              allOf:
                - $ref: "#/components/schemas/Webhook"
                - description: The webhook object that triggered this event
      description: The event that is sent to a webhook address when an event happens
      x-box-resource-display-name: Webhook Event
      x-box-resource-id: webhook_event
    WebhookTrigger:
      description: The event name that triggered this webhook
      enum:
        - FILE.UPLOADED
        - FILE.PREVIEWED
        - FILE.DOWNLOADED
        - FILE.TRASHED
        - FILE.DELETED
        - FILE.RESTORED
        - FILE.COPIED
        - FILE.MOVED
        - FILE.LOCKED
        - FILE.UNLOCKED
        - FILE.RENAMED
        - COMMENT.CREATED
        - COMMENT.UPDATED
        - COMMENT.DELETED
        - TASK_ASSIGNMENT.CREATED
        - TASK_ASSIGNMENT.UPDATED
        - METADATA_INSTANCE.CREATED
        - METADATA_INSTANCE.UPDATED
        - METADATA_INSTANCE.DELETED
        - FOLDER.CREATED
        - FOLDER.RENAMED
        - FOLDER.DOWNLOADED
        - FOLDER.RESTORED
        - FOLDER.DELETED
        - FOLDER.COPIED
        - FOLDER.MOVED
        - FOLDER.TRASHED
        - WEBHOOK.DELETED
        - COLLABORATION.CREATED
        - COLLABORATION.ACCEPTED
        - COLLABORATION.REJECTED
        - COLLABORATION.REMOVED
        - COLLABORATION.UPDATED
        - SHARED_LINK.DELETED
        - SHARED_LINK.CREATED
        - SHARED_LINK.UPDATED
      example: FILE.UPLOADED
      type: string
      x-box-resource-display-name: Webhook Trigger
      x-box-resource-id: webhook_trigger
    Webhooks:
      allOf:
        - $ref: "#/components/schemas/MarkerPagination"
        - properties:
            entries:
              items:
                $ref: "#/components/schemas/Webhook"
              type: array
      description: A list of webhooks.
      x-box-resource-display-name: Webhooks
      x-box-resource-id: webhooks
  securitySchemes:
    OAuth2Security:
      flows:
        authorizationCode:
          authorizationUrl: https://account.box.com/api/oauth2/authorize
          scopes:
            manage_app_users: Provision and manage app users
            manage_data_retention: Manage data retention polices
            manage_enterprise_properties: Manage enterprise properties
            manage_groups: Manage an enterprise's groups
            manage_legal_hold: Manage Legal Holds
            manage_managed_users: Provision and manage managed users
            manage_webhook: Create webhooks programmatically through the API
            root_readonly: Read all files and folders stored in Box
            root_readwrite: Read and write all files and folders stored in Box
          tokenUrl: https://api.box.com/oauth2/token
      type: oauth2
