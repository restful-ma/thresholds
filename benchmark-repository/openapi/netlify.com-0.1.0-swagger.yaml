openapi: 3.0.0
info:
  contact:
    x-twitter: Netlify
  title: Netlify's API definition
  version: 0.1.0
  x-apisguru-categories:
    - cloud
  x-logo:
    url: https://twitter.com/Netlify/profile_image?size=original
  x-origin:
    - format: swagger
      url: https://raw.githubusercontent.com/netlify/open-api/master/ui/swagger.json
      version: "2.0"
  x-providerName: netlify.com
security:
  - netlifyAuth: []
paths:
  /accounts:
    get:
      operationId: listAccountsForUser
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/accountMembership"
                type: array
        default:
          $ref: "#/components/responses/error"
    post:
      operationId: createAccount
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/accountSetup"
        required: true
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/accountMembership"
        default:
          $ref: "#/components/responses/error"
  /accounts/types:
    get:
      operationId: listAccountTypesForUser
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/accountType"
                type: array
        default:
          $ref: "#/components/responses/error"
  "/accounts/{account_id}":
    delete:
      operationId: cancelAccount
      responses:
        "204":
          description: Not Content
        default:
          $ref: "#/components/responses/error"
    parameters:
      - in: path
        name: account_id
        required: true
        schema:
          type: string
    put:
      operationId: updateAccount
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/accountUpdateSetup"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/accountMembership"
        default:
          $ref: "#/components/responses/error"
  "/accounts/{account_id}/audit":
    get:
      operationId: listAccountAuditEvents
      parameters:
        - in: query
          name: query
          schema:
            type: string
        - in: query
          name: log_type
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/auditLog"
                type: array
        default:
          $ref: "#/components/responses/error"
    parameters:
      - in: path
        name: account_id
        required: true
        schema:
          type: string
  /billing/payment_methods:
    get:
      operationId: listPaymentMethodsForUser
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/paymentMethod"
                type: array
        default:
          $ref: "#/components/responses/error"
  "/builds/{build_id}":
    get:
      operationId: getSiteBuild
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/build"
        default:
          $ref: "#/components/responses/error"
    parameters:
      - in: path
        name: build_id
        required: true
        schema:
          type: string
  "/builds/{build_id}/log":
    parameters:
      - in: path
        name: build_id
        required: true
        schema:
          type: string
    post:
      operationId: updateSiteBuildLog
      responses:
        "204":
          description: No content
        default:
          $ref: "#/components/responses/error"
  "/builds/{build_id}/start":
    parameters:
      - in: path
        name: build_id
        required: true
        schema:
          type: string
    post:
      operationId: notifyBuildStart
      responses:
        "204":
          description: No content
        default:
          $ref: "#/components/responses/error"
  /deploy_keys:
    get:
      operationId: listDeployKeys
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/deployKey"
                type: array
        default:
          $ref: "#/components/responses/error"
    post:
      operationId: createDeployKey
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/deployKey"
        default:
          $ref: "#/components/responses/error"
  "/deploy_keys/{key_id}":
    delete:
      operationId: deleteDeployKey
      responses:
        "204":
          description: Not Content
        default:
          $ref: "#/components/responses/error"
    get:
      operationId: getDeployKey
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/deployKey"
        default:
          $ref: "#/components/responses/error"
    parameters:
      - in: path
        name: key_id
        required: true
        schema:
          type: string
  "/deploys/{deploy_id}":
    get:
      operationId: getDeploy
      parameters:
        - in: path
          name: deploy_id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/deploy"
        default:
          $ref: "#/components/responses/error"
  "/deploys/{deploy_id}/files/{path}":
    put:
      operationId: uploadDeployFile
      parameters:
        - in: path
          name: deploy_id
          required: true
          schema:
            type: string
        - in: path
          name: path
          required: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/uploadDeployFileFileBody"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/file"
        default:
          $ref: "#/components/responses/error"
  "/deploys/{deploy_id}/functions/{name}":
    put:
      operationId: uploadDeployFunction
      parameters:
        - in: path
          name: deploy_id
          required: true
          schema:
            type: string
        - in: path
          name: name
          required: true
          schema:
            type: string
        - in: query
          name: runtime
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/uploadDeployFileFileBody"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/function"
        default:
          $ref: "#/components/responses/error"
  "/deploys/{deploy_id}/lock":
    post:
      operationId: lockDeploy
      parameters:
        - in: path
          name: deploy_id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/deploy"
        default:
          $ref: "#/components/responses/error"
  "/deploys/{deploy_id}/unlock":
    post:
      operationId: unlockDeploy
      parameters:
        - in: path
          name: deploy_id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/deploy"
        default:
          $ref: "#/components/responses/error"
  /forms:
    get:
      operationId: listForms
      parameters:
        - in: query
          name: site_id
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/form"
                type: array
        default:
          $ref: "#/components/responses/error"
  "/forms/{form_id}/submissions":
    get:
      operationId: listFormSubmissions
      parameters:
        - in: path
          name: form_id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/submission"
                type: array
        default:
          $ref: "#/components/responses/error"
  /hooks:
    get:
      operationId: listHooksBySiteId
      parameters:
        - in: query
          name: site_id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/hook"
                type: array
        default:
          $ref: "#/components/responses/error"
    post:
      operationId: createHookBySiteId
      parameters:
        - in: query
          name: site_id
          required: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/hook"
      responses:
        "201":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/hook"
        default:
          $ref: "#/components/responses/error"
  /hooks/types:
    get:
      operationId: listHookTypes
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/hookType"
                type: array
        default:
          $ref: "#/components/responses/error"
  "/hooks/{hook_id}":
    delete:
      operationId: deleteHookBySiteId
      responses:
        "204":
          description: No content
    get:
      operationId: getHook
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/hook"
        default:
          $ref: "#/components/responses/error"
    parameters:
      - in: path
        name: hook_id
        required: true
        schema:
          type: string
    put:
      operationId: updateHook
      requestBody:
        $ref: "#/components/requestBodies/hook"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/hook"
        default:
          $ref: "#/components/responses/error"
  "/hooks/{hook_id}/enable":
    parameters:
      - in: path
        name: hook_id
        required: true
        schema:
          type: string
    post:
      operationId: enableHook
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/hook"
        default:
          $ref: "#/components/responses/error"
  /oauth/tickets:
    post:
      operationId: createTicket
      parameters:
        - in: query
          name: client_id
          required: true
          schema:
            type: string
      responses:
        "201":
          description: ok
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ticket"
        default:
          $ref: "#/components/responses/error"
  "/oauth/tickets/{ticket_id}":
    get:
      operationId: showTicket
      parameters:
        - in: path
          name: ticket_id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: ok
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ticket"
        default:
          $ref: "#/components/responses/error"
  "/oauth/tickets/{ticket_id}/exchange":
    post:
      operationId: exchangeTicket
      parameters:
        - in: path
          name: ticket_id
          required: true
          schema:
            type: string
      responses:
        "201":
          description: ok
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/accessToken"
        default:
          $ref: "#/components/responses/error"
  /sites:
    get:
      operationId: listSites
      parameters:
        - in: query
          name: name
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
            enum:
              - all
              - owner
              - guest
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/site"
                type: array
        default:
          $ref: "#/components/responses/error"
    post:
      operationId: createSite
      parameters:
        - in: query
          name: configure_dns
          schema:
            type: boolean
      requestBody:
        $ref: "#/components/requestBodies/siteSetup"
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/site"
        default:
          $ref: "#/components/responses/error"
  "/sites/{site_id}":
    delete:
      operationId: deleteSite
      responses:
        "204":
          description: Deleted
        default:
          $ref: "#/components/responses/error"
    get:
      operationId: getSite
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/site"
        default:
          $ref: "#/components/responses/error"
    parameters:
      - in: path
        name: site_id
        required: true
        schema:
          type: string
    patch:
      operationId: updateSite
      requestBody:
        $ref: "#/components/requestBodies/siteSetup"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/site"
        default:
          $ref: "#/components/responses/error"
  "/sites/{site_id}/assets":
    get:
      operationId: listSiteAssets
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/asset"
                type: array
        default:
          $ref: "#/components/responses/error"
    parameters:
      - in: path
        name: site_id
        required: true
        schema:
          type: string
    post:
      operationId: createSiteAsset
      parameters:
        - in: query
          name: name
          required: true
          schema:
            type: string
        - in: query
          name: size
          required: true
          schema:
            type: integer
            format: int64
        - in: query
          name: content_type
          required: true
          schema:
            type: string
        - in: query
          name: visibility
          schema:
            type: string
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/assetSignature"
        default:
          $ref: "#/components/responses/error"
  "/sites/{site_id}/assets/{asset_id}":
    delete:
      operationId: deleteSiteAsset
      responses:
        "204":
          description: Deleted
        default:
          $ref: "#/components/responses/error"
    get:
      operationId: getSiteAssetInfo
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/asset"
        default:
          $ref: "#/components/responses/error"
    parameters:
      - in: path
        name: site_id
        required: true
        schema:
          type: string
      - in: path
        name: asset_id
        required: true
        schema:
          type: string
    put:
      operationId: updateSiteAsset
      parameters:
        - in: query
          name: state
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Updated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/asset"
        default:
          $ref: "#/components/responses/error"
  "/sites/{site_id}/assets/{asset_id}/public_signature":
    get:
      operationId: getSiteAssetPublicSignature
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/assetPublicSignature"
        default:
          $ref: "#/components/responses/error"
    parameters:
      - in: path
        name: site_id
        required: true
        schema:
          type: string
      - in: path
        name: asset_id
        required: true
        schema:
          type: string
  "/sites/{site_id}/build_hooks":
    get:
      operationId: listSiteBuildHooks
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/buildHook"
                type: array
        default:
          $ref: "#/components/responses/error"
    parameters:
      - in: path
        name: site_id
        required: true
        schema:
          type: string
    post:
      operationId: createSiteBuildHook
      requestBody:
        $ref: "#/components/requestBodies/buildHook"
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/buildHook"
        default:
          $ref: "#/components/responses/error"
  "/sites/{site_id}/build_hooks/{id}":
    delete:
      operationId: deleteSiteBuildHook
      responses:
        "204":
          description: No content
        default:
          $ref: "#/components/responses/error"
    get:
      operationId: getSiteBuildHook
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/buildHook"
        default:
          $ref: "#/components/responses/error"
    parameters:
      - in: path
        name: site_id
        required: true
        schema:
          type: string
      - in: path
        name: id
        required: true
        schema:
          type: string
    put:
      operationId: updateSiteBuildHook
      requestBody:
        $ref: "#/components/requestBodies/buildHook"
      responses:
        "204":
          description: No content
        default:
          $ref: "#/components/responses/error"
  "/sites/{site_id}/builds":
    get:
      operationId: listSiteBuilds
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/build"
                type: array
        default:
          $ref: "#/components/responses/error"
    parameters:
      - in: path
        name: site_id
        required: true
        schema:
          type: string
  "/sites/{site_id}/deployed-branches":
    get:
      operationId: listSiteDeployedBranches
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/deployedBranch"
                type: array
        default:
          $ref: "#/components/responses/error"
    parameters:
      - in: path
        name: site_id
        required: true
        schema:
          type: string
  "/sites/{site_id}/deploys":
    get:
      operationId: listSiteDeploys
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/deploy"
                type: array
        default:
          $ref: "#/components/responses/error"
    parameters:
      - in: path
        name: site_id
        required: true
        schema:
          type: string
    post:
      operationId: createSiteDeploy
      parameters:
        - in: query
          name: title
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/deployFiles"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/deploy"
        default:
          $ref: "#/components/responses/error"
  "/sites/{site_id}/deploys/{deploy_id}":
    get:
      operationId: getSiteDeploy
      parameters:
        - in: path
          name: site_id
          required: true
          schema:
            type: string
        - in: path
          name: deploy_id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/deploy"
        default:
          $ref: "#/components/responses/error"
    put:
      operationId: updateSiteDeploy
      parameters:
        - in: path
          name: site_id
          required: true
          schema:
            type: string
        - in: path
          name: deploy_id
          required: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/deployFiles"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/deploy"
        default:
          $ref: "#/components/responses/error"
  "/sites/{site_id}/deploys/{deploy_id}/restore":
    post:
      operationId: restoreSiteDeploy
      parameters:
        - in: path
          name: site_id
          required: true
          schema:
            type: string
        - in: path
          name: deploy_id
          required: true
          schema:
            type: string
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/deploy"
        default:
          $ref: "#/components/responses/error"
  "/sites/{site_id}/dns":
    get:
      operationId: getDNSForSite
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/dnsZone"
                type: array
        default:
          $ref: "#/components/responses/error"
    parameters:
      - in: path
        name: site_id
        required: true
        schema:
          type: string
    put:
      operationId: configureDNSForSite
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/dnsZone"
                type: array
        default:
          $ref: "#/components/responses/error"
  "/sites/{site_id}/files":
    get:
      operationId: listSiteFiles
      parameters:
        - in: path
          name: site_id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/file"
                type: array
        default:
          $ref: "#/components/responses/error"
  "/sites/{site_id}/files/{file_path}":
    get:
      operationId: getSiteFileByPathName
      parameters:
        - in: path
          name: site_id
          required: true
          schema:
            type: string
        - in: path
          name: file_path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/file"
        default:
          $ref: "#/components/responses/error"
  "/sites/{site_id}/forms":
    get:
      operationId: listSiteForms
      parameters:
        - in: path
          name: site_id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/form"
                type: array
        default:
          $ref: "#/components/responses/error"
  "/sites/{site_id}/metadata":
    get:
      operationId: getSiteMetadata
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/metadata"
        default:
          $ref: "#/components/responses/error"
    parameters:
      - in: path
        name: site_id
        required: true
        schema:
          type: string
    put:
      operationId: updateSiteMetadata
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/metadata"
        required: true
      responses:
        "204":
          description: No content
        default:
          $ref: "#/components/responses/error"
  "/sites/{site_id}/snippets":
    get:
      operationId: listSiteSnippets
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/snippet"
                type: array
        default:
          $ref: "#/components/responses/error"
    parameters:
      - in: path
        name: site_id
        required: true
        schema:
          type: string
    post:
      operationId: createSiteSnippet
      requestBody:
        $ref: "#/components/requestBodies/snippet"
      responses:
        "201":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/snippet"
        default:
          $ref: "#/components/responses/error"
  "/sites/{site_id}/snippets/{snippet_id}":
    delete:
      operationId: deleteSiteSnippet
      responses:
        "204":
          description: No content
        default:
          $ref: "#/components/responses/error"
    get:
      operationId: getSiteSnippet
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/snippet"
        default:
          $ref: "#/components/responses/error"
    parameters:
      - in: path
        name: site_id
        required: true
        schema:
          type: string
      - in: path
        name: snippet_id
        required: true
        schema:
          type: string
    put:
      operationId: updateSiteSnippet
      requestBody:
        $ref: "#/components/requestBodies/snippet"
      responses:
        "204":
          description: No content
        default:
          $ref: "#/components/responses/error"
  "/sites/{site_id}/ssl":
    get:
      operationId: showSiteTLSCertificate
      parameters:
        - in: path
          name: site_id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/sniCertificate"
        default:
          $ref: "#/components/responses/error"
    post:
      operationId: provisionSiteTLSCertificate
      parameters:
        - in: path
          name: site_id
          required: true
          schema:
            type: string
        - in: query
          name: certificate
          schema:
            type: string
        - in: query
          name: key
          schema:
            type: string
        - in: query
          name: ca_certificates
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/sniCertificate"
        default:
          $ref: "#/components/responses/error"
  "/sites/{site_id}/submissions":
    get:
      operationId: listSiteSubmissions
      parameters:
        - in: path
          name: site_id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/submission"
                type: array
        default:
          $ref: "#/components/responses/error"
  "/submissions/{submission_id}":
    delete:
      operationId: deleteSubmission
      responses:
        "204":
          description: Deleted
        default:
          $ref: "#/components/responses/error"
    get:
      operationId: listFormSubmission
      parameters:
        - in: query
          name: query
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/submission"
                type: array
        default:
          $ref: "#/components/responses/error"
    parameters:
      - in: path
        name: submission_id
        required: true
        schema:
          type: string
  "/{account_slug}/members":
    get:
      operationId: listMembersForAccount
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/member"
                type: array
        default:
          $ref: "#/components/responses/error"
    parameters:
      - in: path
        name: account_slug
        required: true
        schema:
          type: string
    post:
      operationId: addMemberToAccount
      parameters:
        - in: query
          name: role
          schema:
            type: string
            enum:
              - Owner
              - Collaborator
              - Controller
        - in: query
          name: email
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/member"
                type: array
        default:
          $ref: "#/components/responses/error"
  "/{account_slug}/sites":
    get:
      operationId: listSitesForAccount
      parameters:
        - in: query
          name: name
          schema:
            type: string
        - in: path
          name: account_slug
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/site"
                type: array
        default:
          $ref: "#/components/responses/error"
    post:
      operationId: createSiteInTeam
      parameters:
        - in: query
          name: configure_dns
          schema:
            type: boolean
        - in: path
          name: account_slug
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/siteSetup"
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/site"
        default:
          $ref: "#/components/responses/error"
servers:
  - url: https://api.netlify.com/api/v1
components:
  responses:
    error:
      description: error
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/error"
  requestBodies:
    snippet:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/snippet"
      required: true
    deployFiles:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/deployFiles"
      required: true
    uploadDeployFileFileBody:
      content:
        application/octet-stream:
          schema:
            format: binary
            type: string
      required: true
    hook:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/hook"
      required: true
    siteSetup:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/siteSetup"
      required: true
    buildHook:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/buildHook"
      required: true
  securitySchemes:
    netlifyAuth:
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://app.netlify.com/authorize
          scopes: {}
  schemas:
    accessToken:
      properties:
        access_token:
          type: string
        created_at:
          format: dateTime
          type: string
        id:
          type: string
        user_email:
          type: string
        user_id:
          type: string
      type: object
    accountMembership:
      properties:
        billing_details:
          type: string
        billing_email:
          type: string
        billing_name:
          type: string
        billing_period:
          type: string
        capabilities:
          properties:
            collaborators:
              $ref: "#/components/schemas/accountUsageCapability"
            sites:
              $ref: "#/components/schemas/accountUsageCapability"
          type: object
        created_at:
          format: dateTime
          type: string
        id:
          type: string
        name:
          type: string
        owner_ids:
          items:
            type: string
          type: array
        payment_method_id:
          type: string
        roles_allowed:
          items:
            type: string
          type: array
        slug:
          type: string
        type:
          type: string
        type_id:
          type: string
        type_name:
          type: string
        updated_at:
          format: dateTime
          type: string
      type: object
    accountSetup:
      properties:
        extra_seats_block:
          type: integer
        name:
          type: string
        payment_method_id:
          type: string
        period:
          enum:
            - monthly
            - yearly
          type: string
        type_id:
          type: string
      required:
        - name
        - type_id
      type: object
    accountType:
      properties:
        capabilities:
          type: object
        description:
          type: string
        id:
          type: string
        monthly_dollar_price:
          type: integer
        monthly_seats_addon_dollar_price:
          type: integer
        name:
          type: string
        yearly_dollar_price:
          type: integer
        yearly_seats_addon_dollar_price:
          type: integer
      type: object
    accountUpdateSetup:
      properties:
        billing_details:
          type: string
        billing_email:
          type: string
        billing_name:
          type: string
        extra_seats_block:
          type: integer
        name:
          type: string
        payment_method_id:
          type: string
        slug:
          type: string
        type_id:
          type: string
      type: object
    accountUsageCapability:
      properties:
        included:
          type: integer
        used:
          type: integer
      type: object
    asset:
      properties:
        content_type:
          type: string
        created_at:
          format: dateTime
          type: string
        creator_id:
          type: string
        id:
          type: string
        key:
          type: string
        name:
          type: string
        site_id:
          type: string
        size:
          format: int64
          type: integer
        state:
          type: string
        updated_at:
          format: dateTime
          type: string
        url:
          type: string
        visibility:
          type: string
      type: object
    assetForm:
      properties:
        fields:
          additionalProperties:
            type: string
          type: object
        url:
          type: string
      type: object
    assetPublicSignature:
      properties:
        url:
          type: string
      type: object
    assetSignature:
      properties:
        asset:
          $ref: "#/components/schemas/asset"
        form:
          $ref: "#/components/schemas/assetForm"
      type: object
    auditLog:
      properties:
        account_id:
          type: string
        id:
          type: string
        payload:
          additionalProperties:
            type: object
          properties:
            action:
              type: string
            actor_email:
              type: string
            actor_id:
              type: string
            actor_name:
              type: string
            log_type:
              type: string
            timestamp:
              format: dateTime
              type: string
          type: object
      type: object
    build:
      properties:
        created_at:
          format: dateTime
          type: string
        deploy_id:
          type: string
        done:
          type: boolean
        error:
          type: string
        id:
          type: string
        sha:
          type: string
      type: object
    buildHook:
      properties:
        branch:
          type: string
        created_at:
          format: dateTime
          type: string
        id:
          type: string
        site_id:
          type: string
        title:
          type: string
        url:
          type: string
      type: object
    buildLogMsg:
      properties:
        error:
          type: boolean
        message:
          type: string
      type: object
    deploy:
      properties:
        admin_url:
          type: string
        branch:
          type: string
        build_id:
          type: string
        commit_ref:
          type: string
        commit_url:
          type: string
        context:
          type: string
        created_at:
          format: dateTime
          type: string
        deploy_ssl_url:
          type: string
        deploy_url:
          type: string
        draft:
          type: boolean
        error_message:
          type: string
        id:
          type: string
        locked:
          type: boolean
        name:
          type: string
        published_at:
          format: dateTime
          type: string
        required:
          items:
            type: string
          type: array
        required_functions:
          items:
            type: string
          type: array
        review_id:
          type: number
        review_url:
          type: string
        screenshot_url:
          type: string
        site_id:
          type: string
        skipped:
          type: boolean
        ssl_url:
          type: string
        state:
          type: string
        title:
          type: string
        updated_at:
          format: dateTime
          type: string
        url:
          type: string
        user_id:
          type: string
      type: object
    deployFiles:
      properties:
        async:
          type: boolean
        draft:
          type: boolean
        files:
          type: object
        functions:
          type: object
      type: object
    deployKey:
      properties:
        created_at:
          format: dateTime
          type: string
        id:
          type: string
        public_key:
          type: string
      type: object
    deployedBranch:
      properties:
        deploy_id:
          type: string
        id:
          type: string
        name:
          type: string
        slug:
          type: string
        ssl_url:
          type: string
        url:
          type: string
      type: object
    dnsRecord:
      properties:
        hostname:
          type: string
        id:
          type: string
        priority:
          format: int64
          type: integer
        ttl:
          format: int64
          type: integer
        type:
          type: string
        value:
          type: string
      type: object
    dnsZone:
      properties:
        id:
          type: string
        name:
          type: string
        records:
          items:
            $ref: "#/components/schemas/dnsRecord"
          type: array
      type: object
    error:
      properties:
        code:
          format: int64
          type: integer
        message:
          type: string
          nullable: false
      required:
        - message
      type: object
    file:
      properties:
        id:
          type: string
        mime_type:
          type: string
        path:
          type: string
        sha:
          type: string
        size:
          format: int64
          type: integer
      type: object
    form:
      properties:
        created_at:
          format: dateTime
          type: string
        fields:
          items:
            type: object
          type: array
        id:
          type: string
        name:
          type: string
        paths:
          items:
            type: string
          type: array
        site_id:
          type: string
        submission_count:
          format: int32
          type: integer
      type: object
    function:
      properties:
        id:
          type: string
        name:
          type: string
        sha:
          type: string
      type: object
    hook:
      properties:
        created_at:
          format: dateTime
          type: string
        data:
          type: object
        disabled:
          type: boolean
        event:
          type: string
        id:
          type: string
        site_id:
          type: string
        type:
          type: string
        updated_at:
          format: dateTime
          type: string
      type: object
    hookType:
      properties:
        events:
          items:
            type: string
          type: array
        fields:
          items:
            type: object
          type: array
        name:
          type: string
      type: object
    member:
      properties:
        avatar:
          type: string
        email:
          type: string
        full_name:
          type: string
        id:
          type: string
        role:
          type: string
      type: object
    metadata:
      type: object
    minifyOptions:
      properties:
        bundle:
          type: boolean
        minify:
          type: boolean
      type: object
    paymentMethod:
      properties:
        created_at:
          format: dateTime
          type: string
        data:
          properties:
            card_type:
              type: string
            email:
              type: string
            last4:
              type: string
          type: object
        id:
          type: string
        method_name:
          type: string
        state:
          type: string
        type:
          type: string
        updated_at:
          format: dateTime
          type: string
      type: object
    repoInfo:
      properties:
        allowed_branches:
          items:
            type: string
          type: array
        cmd:
          type: string
        deploy_key_id:
          type: string
        dir:
          type: string
        env:
          additionalProperties:
            type: string
          type: object
        id:
          type: integer
        private_logs:
          type: boolean
        provider:
          type: string
        public_repo:
          type: boolean
        repo_branch:
          type: string
        repo_path:
          type: string
        repo_url:
          type: string
      type: object
    site:
      properties:
        account_name:
          type: string
        account_slug:
          type: string
        admin_url:
          type: string
        build_settings:
          $ref: "#/components/schemas/repoInfo"
        capabilities:
          additionalProperties:
            type: object
          type: object
        created_at:
          format: dateTime
          type: string
        custom_domain:
          type: string
        deploy_hook:
          type: string
        deploy_url:
          type: string
        domain_aliases:
          items:
            type: string
          type: array
        force_ssl:
          type: boolean
        git_provider:
          type: string
        id:
          type: string
        managed_dns:
          type: boolean
        name:
          type: string
        notification_email:
          type: string
        password:
          type: string
        plan:
          type: string
        processing_settings:
          properties:
            css:
              $ref: "#/components/schemas/minifyOptions"
            html:
              properties:
                pretty_urls:
                  type: boolean
              type: object
            images:
              properties:
                optimize:
                  type: boolean
              type: object
            js:
              $ref: "#/components/schemas/minifyOptions"
            skip:
              type: boolean
          type: object
        published_deploy:
          $ref: "#/components/schemas/deploy"
        screenshot_url:
          type: string
        session_id:
          type: string
        ssl:
          type: boolean
        ssl_url:
          type: string
        state:
          type: string
        updated_at:
          format: dateTime
          type: string
        url:
          type: string
        user_id:
          type: string
      type: object
    siteSetup:
      allOf:
        - $ref: "#/components/schemas/site"
        - properties:
            repo:
              $ref: "#/components/schemas/repoInfo"
    sniCertificate:
      properties:
        created_at:
          format: dateTime
          type: string
        domains:
          items:
            type: string
          type: array
        expires_at:
          format: dateTime
          type: string
        state:
          type: string
        updated_at:
          format: dateTime
          type: string
      type: object
    snippet:
      properties:
        general:
          type: string
        general_position:
          type: string
        goal:
          type: string
        goal_position:
          type: string
        id:
          format: int32
          type: integer
        site_id:
          type: string
        title:
          type: string
      type: object
    submission:
      properties:
        body:
          type: string
        company:
          type: string
        created_at:
          format: dateTime
          type: string
        data:
          type: object
        email:
          type: string
        first_name:
          type: string
        id:
          type: string
        last_name:
          type: string
        name:
          type: string
        number:
          format: int32
          type: integer
        site_url:
          type: string
        summary:
          type: string
      type: object
    ticket:
      properties:
        authorized:
          type: boolean
        client_id:
          type: string
        created_at:
          format: dateTime
          type: string
        id:
          type: string
      type: object
