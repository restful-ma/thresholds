openapi: 3.0.0
info:
  contact:
    email: support@wavecell.com
    name: Wavecell Dev team
    url: https://wavecell.com/
  description: This API allows Wavecell customers to originate request to send SMS messages
    anywhere in the World. The messages can be send individually or as a bulk
    request.
  termsOfService: https://wavecell.com/terms.html
  title: Wavecell.Sms.Api
  version: v1
  x-apisguru-categories:
    - messaging
  x-logo:
    backgroundColor: "#050917"
    url: https://pbs.twimg.com/profile_images/766560979630952448/XIUTg1a4.jpg
  x-origin:
    - format: swagger
      url: https://api.wavecell.com/swagger/v1/swagger.json
      version: "2.0"
  x-providerName: wavecell.com
paths:
  /sms/v1/status:
    get:
      deprecated: false
      operationId: SmsV1StatusGet
      responses:
        "204":
          description: No Content
      tags:
        - StatusPage
  "/sms/v1/{subAccountId}/many":
    post:
      deprecated: false
      operationId: SendManyMessages
      parameters:
        - in: path
          name: subAccountId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BulkSmsRequest"
          text/json:
            schema:
              $ref: "#/components/schemas/BulkSmsRequest"
          application/json-patch+json:
            schema:
              $ref: "#/components/schemas/BulkSmsRequest"
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/BulkSmsResponse"
        "204":
          description: No Content
        "400":
          description: BadRequest
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "401":
          description: Unauthorized
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: InternalServerError
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      tags:
        - SmsApi
  "/sms/v1/{subAccountId}/many/compact":
    post:
      deprecated: false
      operationId: SendManyMessagesInCompactForm
      parameters:
        - in: path
          name: subAccountId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BulkSmsRequestCompact"
          text/json:
            schema:
              $ref: "#/components/schemas/BulkSmsRequestCompact"
          application/json-patch+json:
            schema:
              $ref: "#/components/schemas/BulkSmsRequestCompact"
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/BulkSmsResponse"
        "204":
          description: No Content
        "400":
          description: BadRequest
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "401":
          description: Unauthorized
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: InternalServerError
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      tags:
        - SmsApi
  "/sms/v1/{subAccountId}/single":
    post:
      deprecated: false
      operationId: SendSingleMessage
      parameters:
        - in: path
          name: subAccountId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SmsRequest"
          text/json:
            schema:
              $ref: "#/components/schemas/SmsRequest"
          application/json-patch+json:
            schema:
              $ref: "#/components/schemas/SmsRequest"
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/SmsResponse"
        "204":
          description: No Content
        "400":
          description: BadRequest
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "401":
          description: Unauthorized
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: InternalServerError
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      tags:
        - SmsApi
servers:
  - url: http://api.wavecell.com/
  - url: https://api.wavecell.com/
components:
  securitySchemes:
    basicAuth:
      description: HTTP/HTTPS Basic Authentication. The authentication uses the Wavecell
        AccountId as username
      type: http
      scheme: basic
  schemas:
    BulkSmsRequest:
      properties:
        clientBatchId:
          maxLength: 20
          type: string
        includeMessagesInResponse:
          type: boolean
        messages:
          items:
            $ref: "#/components/schemas/SmsRequest"
          type: array
        template:
          $ref: "#/components/schemas/SmsTemplate"
      required:
        - messages
      type: object
    BulkSmsRequestCompact:
      properties:
        clientBatchId:
          maxLength: 20
          type: string
        destinations:
          items:
            type: string
          type: array
        includeMessagesInResponse:
          type: boolean
        template:
          $ref: "#/components/schemas/SmsTemplate"
      required:
        - destinations
        - template
      type: object
    BulkSmsResponse:
      properties:
        acceptedCount:
          format: int32
          type: integer
        batchId:
          format: uuid
          type: string
        clientBatchId:
          type: string
        messages:
          items:
            $ref: "#/components/schemas/SmsResponse"
          type: array
        rejectedCount:
          format: int32
          type: integer
      type: object
    ErrorResponse:
      properties:
        code:
          format: int32
          readOnly: true
          type: integer
        errorId:
          format: uuid
          readOnly: true
          type: string
        message:
          type: string
        timestamp:
          format: date-time
          readOnly: true
          type: string
      type: object
    SmsRequest:
      properties:
        clientMessageId:
          maxLength: 20
          type: string
        destination:
          pattern: ^\+{0,1}[1-9]{1}[0-9]{6,14}$
          type: string
        encoding:
          enum:
            - AUTO
            - GSM7bit
            - UNICODE
          type: string
        expiry:
          format: date-time
          type: string
        scheduled:
          format: date-time
          type: string
        source:
          maxLength: 16
          type: string
        text:
          type: string
      required:
        - destination
      type: object
    SmsResponse:
      properties:
        clientMessageId:
          type: string
        destination:
          type: string
        status:
          $ref: "#/components/schemas/SmsStatus"
        umid:
          type: string
      type: object
    SmsStatus:
      properties:
        code:
          type: string
        description:
          type: string
      type: object
    SmsTemplate:
      properties:
        encoding:
          enum:
            - AUTO
            - GSM7bit
            - UNICODE
          type: string
        expiry:
          format: date-time
          type: string
        scheduled:
          format: date-time
          type: string
        source:
          maxLength: 16
          type: string
        text:
          type: string
      type: object
