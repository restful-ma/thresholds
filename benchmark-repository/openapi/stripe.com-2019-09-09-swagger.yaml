openapi: 3.0.0
info:
  contact:
    email: dev-platform@stripe.com
    name: Stripe Dev Platform Team
    url: https://stripe.com
    x-twitter: stripe
  description: The Stripe REST API. Please see https://stripe.com/docs/api for more details.
  termsOfService: https://stripe.com/us/terms/
  title: Stripe
  version: 2019-09-09
  x-apisguru-categories:
    - financial
  x-logo:
    url: https://twitter.com/stripe/profile_image?size=original
  x-origin:
    - format: swagger
      url: https://raw.githubusercontent.com/stripe/openapi/master/openapi/spec2.yaml
      version: "2.0"
  x-providerName: stripe.com
  x-stripeSpecFilename: spec2
paths:
  /v1/3d_secure:
    post:
      description: <p>Initiate 3D Secure authentication.</p>
      operationId: Post3dSecure
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                amount:
                  description: Amount of the charge that you will create when
                    authentication completes.
                  type: integer
                card:
                  description: The ID of a card token, or the ID of a card belonging to the
                    given customer.
                  type: string
                currency:
                  description: Three-letter [ISO currency
                    code](https://www.iso.org/iso-4217-currency-codes.html), in
                    lowercase. Must be a [supported
                    currency](https://stripe.com/docs/currencies).
                  type: string
                customer:
                  type: string
                expand:
                  description: Specifies which fields in the response should be expanded.
                  items:
                    type: string
                  type: array
                return_url:
                  description: The URL that the cardholder's browser will be returned to
                    when authentication completes.
                  type: string
              required:
                - amount
                - currency
                - return_url
              type: object
        description: Body parameters for the request.
        required: true
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/three_d_secure"
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
  "/v1/3d_secure/{three_d_secure}":
    get:
      description: <p>Retrieves a 3D Secure object.</p>
      operationId: Get3dSecureThreeDSecure
      parameters:
        - description: Specifies which fields in the response should be expanded.
          in: query
          name: expand
          required: false
          schema:
            type: array
            items: {}
        - description: The identifier of the 3D Secure object to be retrieved.
          in: path
          name: three_d_secure
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/three_d_secure"
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
  /v1/account:
    delete:
      description: >-
        <p>With <a href="/docs/connect">Connect</a>, you can delete Custom or
        Express accounts you manage.</p>


        <p>Accounts created using test-mode keys can be deleted at any time. Accounts created using live-mode keys can only be deleted once all balances are zero.</p>


        <p>If you want to delete your own account, use the <a href="https://dashboard.stripe.com/account/data">data tab in your account settings</a> instead.</p>
      operationId: DeleteAccount
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                account:
                  description: The identifier of the account to be deleted. If none is
                    provided, will default to the account of the API key.
                  type: string
              type: object
        description: Body parameters for the request.
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/deleted_account"
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
    get:
      description: <p>Retrieves the details of an account.</p>
      operationId: GetAccount
      parameters:
        - description: Specifies which fields in the response should be expanded.
          in: query
          name: expand
          required: false
          schema:
            type: array
            items: {}
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/account"
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
    post:
      description: >-
        <p>Updates a connected <a href="/docs/connect/accounts">Express or
        Custom account</a> by setting the values of the parameters passed. Any
        parameters not provided are left unchanged. Most parameters can be
        changed only for Custom accounts. (These are marked <strong>Custom
        Only</strong> below.) Parameters marked <strong>Custom and
        Express</strong> are supported by both account types.</p>


        <p>To update your own account, use the <a href="https://dashboard.stripe.com/account">Dashboard</a>. Refer to our <a href="/docs/connect/updating-accounts">Connect</a> documentation to learn more about updating accounts.</p>
      operationId: PostAccount
      requestBody:
        $ref: "#/components/requestBodies/PostAccountPayload"
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/account"
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
  /v1/account/bank_accounts:
    post:
      description: <p>Create an external account for a given account.</p>
      operationId: PostAccountBankAccounts
      requestBody:
        $ref: "#/components/requestBodies/PostAccountBankAccountsPayload"
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/external_account"
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
  "/v1/account/bank_accounts/{id}":
    delete:
      description: <p>Delete a specified external account for a given account.</p>
      operationId: DeleteAccountBankAccountsId
      parameters:
        - description: The ID of the external account to be deleted.
          in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/deleted_external_account"
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
    get:
      description: <p>Retrieve a specified external account for a given account.</p>
      operationId: GetAccountBankAccountsId
      parameters:
        - description: Specifies which fields in the response should be expanded.
          in: query
          name: expand
          required: false
          schema:
            type: array
            items: {}
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/external_account"
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
    post:
      description: >-
        <p>Updates the metadata, account holder name, and account holder type of
        a bank account belonging to a <a
        href="/docs/connect/custom-accounts">Custom account</a>, and optionally
        sets it as the default for its currency. Other bank account details are
        not editable by design.</p>

        <p>You can re-enable a disabled bank account by performing an update call without providing any arguments or changes.</p>
      operationId: PostAccountBankAccountsId
      parameters:
        - description: The ID of the external account to update
          in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/PostAccountBankAccountsIdPayload"
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/external_account"
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
  /v1/account/capabilities:
    get:
      description: <p>Returns a list of capabilities associated with the account. The
        capabilities are returned sorted by creation date, with the most recent
        capability appearing first.</p>
      operationId: GetAccountCapabilities
      parameters:
        - description: Specifies which fields in the response should be expanded.
          in: query
          name: expand
          required: false
          schema:
            type: array
            items: {}
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                properties:
                  data:
                    items:
                      $ref: "#/components/schemas/capability"
                    type: array
                  has_more:
                    description: True if this list has another page of items after this one
                      that can be fetched.
                    type: boolean
                  object:
                    description: String representing the object's type. Objects of the same
                      type share the same value. Always has the value `list`.
                    enum:
                      - list
                    type: string
                  url:
                    description: The URL where this list can be accessed.
                    type: string
                required:
                  - data
                  - has_more
                  - object
                  - url
                title: ListAccountCapability
                type: object
                x-expandableFields:
                  - data
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
  "/v1/account/capabilities/{capability}":
    get:
      description: <p>Retrieves information about the specified Account Capability.</p>
      operationId: GetAccountCapabilitiesCapability
      parameters:
        - description: Specifies which fields in the response should be expanded.
          in: query
          name: expand
          required: false
          schema:
            type: array
            items: {}
        - description: The ID of an account capability to retrieve.
          in: path
          name: capability
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/capability"
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
    post:
      description: <p>Updates an existing Account Capability.</p>
      operationId: PostAccountCapabilitiesCapability
      parameters:
        - description: The ID of an account capability to update.
          in: path
          name: capability
          required: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/PostAccountCapabilitiesCapabilityPayload"
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/capability"
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
  /v1/account/external_accounts:
    get:
      description: <p>List external accounts for an account.</p>
      operationId: GetAccountExternalAccounts
      parameters:
        - description: Specifies which fields in the response should be expanded.
          in: query
          name: expand
          required: false
          schema:
            type: array
            items: {}
        - description: A cursor for use in pagination. `ending_before` is an object ID that
            defines your place in the list. For instance, if you make a list
            request and receive 100 objects, starting with `obj_bar`, your
            subsequent call can include `ending_before=obj_bar` in order to
            fetch the previous page of the list.
          in: query
          name: ending_before
          required: false
          schema:
            type: string
        - description: A limit on the number of objects to be returned. Limit can range
            between 1 and 100, and the default is 10.
          in: query
          name: limit
          required: false
          schema:
            type: integer
        - description: A cursor for use in pagination. `starting_after` is an object ID
            that defines your place in the list. For instance, if you make a
            list request and receive 100 objects, ending with `obj_foo`, your
            subsequent call can include `starting_after=obj_foo` in order to
            fetch the next page of the list.
          in: query
          name: starting_after
          required: false
          schema:
            type: string
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                properties:
                  data:
                    description: The list contains all external accounts that have been
                      attached to the Stripe account. These may be bank accounts
                      or cards.
                    items:
                      $ref: "#/components/schemas/bank_account"
                    type: array
                  has_more:
                    description: True if this list has another page of items after this one
                      that can be fetched.
                    type: boolean
                  object:
                    description: String representing the object's type. Objects of the same
                      type share the same value. Always has the value `list`.
                    enum:
                      - list
                    type: string
                  url:
                    description: The URL where this list can be accessed.
                    type: string
                required:
                  - data
                  - has_more
                  - object
                  - url
                title: ExternalAccountList
                type: object
                x-expandableFields:
                  - data
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
    post:
      description: <p>Create an external account for a given account.</p>
      operationId: PostAccountExternalAccounts
      requestBody:
        $ref: "#/components/requestBodies/PostAccountBankAccountsPayload"
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/external_account"
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
  "/v1/account/external_accounts/{id}":
    delete:
      description: <p>Delete a specified external account for a given account.</p>
      operationId: DeleteAccountExternalAccountsId
      parameters:
        - description: The ID of the external account to be deleted.
          in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/deleted_external_account"
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
    get:
      description: <p>Retrieve a specified external account for a given account.</p>
      operationId: GetAccountExternalAccountsId
      parameters:
        - description: Specifies which fields in the response should be expanded.
          in: query
          name: expand
          required: false
          schema:
            type: array
            items: {}
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/external_account"
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
    post:
      description: >-
        <p>Updates the metadata, account holder name, and account holder type of
        a bank account belonging to a <a
        href="/docs/connect/custom-accounts">Custom account</a>, and optionally
        sets it as the default for its currency. Other bank account details are
        not editable by design.</p>

        <p>You can re-enable a disabled bank account by performing an update call without providing any arguments or changes.</p>
      operationId: PostAccountExternalAccountsId
      parameters:
        - description: The ID of the external account to update
          in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/PostAccountBankAccountsIdPayload"
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/external_account"
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
  /v1/account/login_links:
    post:
      description: >-
        <p>Creates a single-use login link for an Express account to access
        their Stripe dashboard.</p>


        <p><strong>You may only create login links for <a href="/docs/connect/express-accounts">Express accounts</a> connected to your platform</strong>.</p>
      operationId: PostAccountLoginLinks
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                account:
                  description: The identifier of the account to create a login link for.
                  type: string
                expand:
                  description: Specifies which fields in the response should be expanded.
                  items:
                    type: string
                  type: array
                redirect_url:
                  description: Where to redirect the user after they log out of their
                    dashboard.
                  type: string
              required:
                - account
              type: object
        description: Body parameters for the request.
        required: true
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/login_link"
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
  /v1/account/logout:
    put:
      description: >-
        <p>Invalidates all sessions for a light account, for a platform to use
        during platform logout.</p>


        <p><strong>You may only log out <a href="/docs/connect/express-accounts">Express accounts</a> connected to your platform</strong>.</p>
      operationId: PutAccountLogout
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                account:
                  description: The identifier of the account to log out.
                  type: string
                expand:
                  description: Specifies which fields in the response should be expanded.
                  items:
                    type: string
                  type: array
              required:
                - account
              type: object
        description: Body parameters for the request.
        required: true
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/light_account_logout"
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
  /v1/account/people:
    get:
      description: <p>Returns a list of people associated with the account’s legal entity.
        The people are returned sorted by creation date, with the most recent
        people appearing first.</p>
      operationId: GetAccountPeople
      parameters:
        - description: Specifies which fields in the response should be expanded.
          in: query
          name: expand
          required: false
          schema:
            type: array
            items: {}
        - description: A cursor for use in pagination. `ending_before` is an object ID that
            defines your place in the list. For instance, if you make a list
            request and receive 100 objects, starting with `obj_bar`, your
            subsequent call can include `ending_before=obj_bar` in order to
            fetch the previous page of the list.
          in: query
          name: ending_before
          required: false
          schema:
            type: string
        - description: A limit on the number of objects to be returned. Limit can range
            between 1 and 100, and the default is 10.
          in: query
          name: limit
          required: false
          schema:
            type: integer
        - description: Filters on the list of people returned based on the person's
            relationship to the account's company.
          in: query
          name: relationship
          required: false
          schema:
            type: string
        - description: A cursor for use in pagination. `starting_after` is an object ID
            that defines your place in the list. For instance, if you make a
            list request and receive 100 objects, ending with `obj_foo`, your
            subsequent call can include `starting_after=obj_foo` in order to
            fetch the next page of the list.
          in: query
          name: starting_after
          required: false
          schema:
            type: string
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                properties:
                  data:
                    items:
                      $ref: "#/components/schemas/person"
                    type: array
                  has_more:
                    description: True if this list has another page of items after this one
                      that can be fetched.
                    type: boolean
                  object:
                    description: String representing the object's type. Objects of the same
                      type share the same value. Always has the value `list`.
                    enum:
                      - list
                    type: string
                  url:
                    description: The URL where this list can be accessed.
                    type: string
                required:
                  - data
                  - has_more
                  - object
                  - url
                type: object
                x-expandableFields:
                  - data
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
    post:
      description: <p>Creates a new person.</p>
      operationId: PostAccountPeople
      requestBody:
        $ref: "#/components/requestBodies/PostAccountPeoplePayload"
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/person"
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
  "/v1/account/people/{person}":
    delete:
      description: <p>Deletes an existing person’s relationship to the account’s legal
        entity. Any person with a relationship for an account can be deleted
        through the API, except if the person is the
        <code>account_opener</code>. If your integration is using the
        <code>executive</code> parameter, you cannot delete the only verified
        <code>executive</code> on file.</p>
      operationId: DeleteAccountPeoplePerson
      parameters:
        - description: The ID of the person to be deleted.
          in: path
          name: person
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/deleted_person"
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
    get:
      description: <p>Retrieves an existing person.</p>
      operationId: GetAccountPeoplePerson
      parameters:
        - description: Specifies which fields in the response should be expanded.
          in: query
          name: expand
          required: false
          schema:
            type: array
            items: {}
        - description: The ID of a person to retrieve.
          in: path
          name: person
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/person"
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
    post:
      description: <p>Updates an existing person.</p>
      operationId: PostAccountPeoplePerson
      parameters:
        - description: The ID of a person to update.
          in: path
          name: person
          required: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/PostAccountPeoplePayload"
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/person"
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
  /v1/account/persons:
    get:
      description: <p>Returns a list of people associated with the account’s legal entity.
        The people are returned sorted by creation date, with the most recent
        people appearing first.</p>
      operationId: GetAccountPersons
      parameters:
        - description: Specifies which fields in the response should be expanded.
          in: query
          name: expand
          required: false
          schema:
            type: array
            items: {}
        - description: A cursor for use in pagination. `ending_before` is an object ID that
            defines your place in the list. For instance, if you make a list
            request and receive 100 objects, starting with `obj_bar`, your
            subsequent call can include `ending_before=obj_bar` in order to
            fetch the previous page of the list.
          in: query
          name: ending_before
          required: false
          schema:
            type: string
        - description: A limit on the number of objects to be returned. Limit can range
            between 1 and 100, and the default is 10.
          in: query
          name: limit
          required: false
          schema:
            type: integer
        - description: Filters on the list of people returned based on the person's
            relationship to the account's company.
          in: query
          name: relationship
          required: false
          schema:
            type: string
        - description: A cursor for use in pagination. `starting_after` is an object ID
            that defines your place in the list. For instance, if you make a
            list request and receive 100 objects, ending with `obj_foo`, your
            subsequent call can include `starting_after=obj_foo` in order to
            fetch the next page of the list.
          in: query
          name: starting_after
          required: false
          schema:
            type: string
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                properties:
                  data:
                    items:
                      $ref: "#/components/schemas/person"
                    type: array
                  has_more:
                    description: True if this list has another page of items after this one
                      that can be fetched.
                    type: boolean
                  object:
                    description: String representing the object's type. Objects of the same
                      type share the same value. Always has the value `list`.
                    enum:
                      - list
                    type: string
                  url:
                    description: The URL where this list can be accessed.
                    type: string
                required:
                  - data
                  - has_more
                  - object
                  - url
                type: object
                x-expandableFields:
                  - data
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
    post:
      description: <p>Creates a new person.</p>
      operationId: PostAccountPersons
      requestBody:
        $ref: "#/components/requestBodies/PostAccountPeoplePayload"
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/person"
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
  "/v1/account/persons/{person}":
    delete:
      description: <p>Deletes an existing person’s relationship to the account’s legal
        entity. Any person with a relationship for an account can be deleted
        through the API, except if the person is the
        <code>account_opener</code>. If your integration is using the
        <code>executive</code> parameter, you cannot delete the only verified
        <code>executive</code> on file.</p>
      operationId: DeleteAccountPersonsPerson
      parameters:
        - description: The ID of the person to be deleted.
          in: path
          name: person
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/deleted_person"
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
    get:
      description: <p>Retrieves an existing person.</p>
      operationId: GetAccountPersonsPerson
      parameters:
        - description: Specifies which fields in the response should be expanded.
          in: query
          name: expand
          required: false
          schema:
            type: array
            items: {}
        - description: The ID of a person to retrieve.
          in: path
          name: person
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/person"
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
    post:
      description: <p>Updates an existing person.</p>
      operationId: PostAccountPersonsPerson
      parameters:
        - description: The ID of a person to update.
          in: path
          name: person
          required: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/PostAccountPeoplePayload"
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/person"
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
  /v1/account_links:
    post:
      description: <p>Creates an AccountLink object that returns a Stripe URL that the user
        can redirect their user to in order to take them through the hosted
        onboarding flow.</p>
      operationId: PostAccountLinks
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                account:
                  description: The identifier of the account to create an account link for.
                  type: string
                collect:
                  description: The information the platform wants to collect from users
                    up-front. Possible values are `currently_due` and
                    `eventually_due`.
                  enum:
                    - currently_due
                    - eventually_due
                  type: string
                expand:
                  description: Specifies which fields in the response should be expanded.
                  items:
                    type: string
                  type: array
                failure_url:
                  description: The URL that the user will be redirected to if the account
                    link is no longer valid.
                  type: string
                success_url:
                  description: The URL that the user will be redirected to upon completing
                    the linked flow successfully.
                  type: string
                type:
                  description: The type of account link the user is requesting. Possible
                    values are `custom_account_verification` or
                    `custom_account_update`.
                  type: string
              required:
                - account
                - failure_url
                - success_url
                - type
              type: object
        description: Body parameters for the request.
        required: true
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/account_link"
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
  /v1/accounts:
    get:
      description: <p>Returns a list of accounts connected to your platform via <a
        href="/docs/connect">Connect</a>. If you’re not a platform, the list is
        empty.</p>
      operationId: GetAccounts
      parameters:
        - description: Specifies which fields in the response should be expanded.
          in: query
          name: expand
          required: false
          schema:
            type: array
            items: {}
        - in: query
          name: created
          required: false
          schema:
            type: integer
        - description: A cursor for use in pagination. `ending_before` is an object ID that
            defines your place in the list. For instance, if you make a list
            request and receive 100 objects, starting with `obj_bar`, your
            subsequent call can include `ending_before=obj_bar` in order to
            fetch the previous page of the list.
          in: query
          name: ending_before
          required: false
          schema:
            type: string
        - description: A limit on the number of objects to be returned. Limit can range
            between 1 and 100, and the default is 10.
          in: query
          name: limit
          required: false
          schema:
            type: integer
        - description: A cursor for use in pagination. `starting_after` is an object ID
            that defines your place in the list. For instance, if you make a
            list request and receive 100 objects, ending with `obj_foo`, your
            subsequent call can include `starting_after=obj_foo` in order to
            fetch the next page of the list.
          in: query
          name: starting_after
          required: false
          schema:
            type: string
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                properties:
                  data:
                    items:
                      $ref: "#/components/schemas/account"
                    type: array
                  has_more:
                    description: True if this list has another page of items after this one
                      that can be fetched.
                    type: boolean
                  object:
                    description: String representing the object's type. Objects of the same
                      type share the same value. Always has the value `list`.
                    enum:
                      - list
                    type: string
                  url:
                    description: The URL where this list can be accessed.
                    type: string
                required:
                  - data
                  - has_more
                  - object
                  - url
                type: object
                x-expandableFields:
                  - data
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
    post:
      description: >-
        <p>With <a href="/docs/connect">Connect</a>, you can create Stripe
        accounts for your users.

        To do this, you’ll first need to <a href="https://dashboard.stripe.com/account/applications/settings">register your platform</a>.</p>


        <p>For Standard accounts, parameters other than <code>country</code>, <code>email</code>, and <code>type</code>

        are used to prefill the account application that we ask the account holder to complete.</p>
      operationId: PostAccounts
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                account_token:
                  description: An [account
                    token](https://stripe.com/docs/api#create_account_token),
                    used to securely provide details to the account.
                  type: string
                bank_account:
                  description: Either a token, like the ones returned by
                    [Stripe.js](https://stripe.com/docs/stripe.js), or a
                    dictionary containing a user's bank account details.
                business_profile:
                  description: Non-essential business information about the account
                  properties:
                    mcc:
                      type: string
                    name:
                      type: string
                    product_description:
                      type: string
                    support_email:
                      type: string
                    support_phone:
                      type: string
                    support_url:
                      type: string
                    url:
                      type: string
                  title: business_profile_specs
                  type: object
                business_type:
                  description: The business type. Can be `individual` or `company`.
                  type: string
                company:
                  description: Information about the company or business. This field is
                    null unless `business_type` is set to `company`.
                  properties:
                    address:
                      properties:
                        city:
                          type: string
                        country:
                          type: string
                        line1:
                          type: string
                        line2:
                          type: string
                        postal_code:
                          type: string
                        state:
                          type: string
                      title: address_specs
                      type: object
                    address_kana:
                      properties:
                        city:
                          type: string
                        country:
                          type: string
                        line1:
                          type: string
                        line2:
                          type: string
                        postal_code:
                          type: string
                        state:
                          type: string
                        town:
                          type: string
                      title: japan_address_kana_specs
                      type: object
                    address_kanji:
                      properties:
                        city:
                          type: string
                        country:
                          type: string
                        line1:
                          type: string
                        line2:
                          type: string
                        postal_code:
                          type: string
                        state:
                          type: string
                        town:
                          type: string
                      title: japan_address_kanji_specs
                      type: object
                    directors_provided:
                      type: boolean
                    name:
                      type: string
                    name_kana:
                      type: string
                    name_kanji:
                      type: string
                    owners_provided:
                      type: boolean
                    phone:
                      type: string
                    tax_id:
                      type: string
                    tax_id_registrar:
                      type: string
                    vat_id:
                      type: string
                    verification:
                      properties:
                        document:
                          properties:
                            back:
                              type: string
                            front:
                              type: string
                          title: verification_document_specs
                          type: object
                      title: verification_specs
                      type: object
                  title: company_specs
                  type: object
                country:
                  description: The country in which the account holder resides, or in which
                    the business is legally established. This should be an ISO
                    3166-1 alpha-2 country code. For example, if you are in the
                    United States and the business for which you're creating an
                    account is legally represented in Canada, you would use `CA`
                    as the country for the account being created.
                  type: string
                default_currency:
                  description: Three-letter ISO currency code representing the default
                    currency for the account. This must be a currency that
                    [Stripe supports in the account's
                    country](https://stripe.com/docs/payouts).
                  type: string
                email:
                  description: "The email address of the account holder. For Custom
                    accounts, this is only to make the account easier to
                    identify to you: Stripe will never directly email your
                    users."
                  type: string
                expand:
                  description: Specifies which fields in the response should be expanded.
                  items:
                    type: string
                  type: array
                external_account:
                  description: A card or bank account to attach to the account. You can
                    provide either a token, like the ones returned by
                    [Stripe.js](https://stripe.com/docs/stripe.js), or a
                    dictionary, as documented in the `external_account`
                    parameter for [bank
                    account](https://stripe.com/docs/api#account_create_bank_account)
                    creation. <br><br>By default, providing an external account
                    sets it as the new default external account for its
                    currency, and deletes the old default if one exists. To add
                    additional external accounts without replacing the existing
                    default for the currency, use the bank account or card
                    creation API.
                  type: string
                individual:
                  description: Information about the person represented by the account.
                    This field is null unless `business_type` is set to
                    `individual`.
                  properties:
                    address:
                      properties:
                        city:
                          type: string
                        country:
                          type: string
                        line1:
                          type: string
                        line2:
                          type: string
                        postal_code:
                          type: string
                        state:
                          type: string
                      title: address_specs
                      type: object
                    address_kana:
                      properties:
                        city:
                          type: string
                        country:
                          type: string
                        line1:
                          type: string
                        line2:
                          type: string
                        postal_code:
                          type: string
                        state:
                          type: string
                        town:
                          type: string
                      title: japan_address_kana_specs
                      type: object
                    address_kanji:
                      properties:
                        city:
                          type: string
                        country:
                          type: string
                        line1:
                          type: string
                        line2:
                          type: string
                        postal_code:
                          type: string
                        state:
                          type: string
                        town:
                          type: string
                      title: japan_address_kanji_specs
                      type: object
                    dob: {}
                    email:
                      type: string
                    first_name:
                      type: string
                    first_name_kana:
                      type: string
                    first_name_kanji:
                      type: string
                    gender:
                      type: string
                    id_number:
                      type: string
                    last_name:
                      type: string
                    last_name_kana:
                      type: string
                    last_name_kanji:
                      type: string
                    maiden_name:
                      type: string
                    metadata:
                      type: object
                    phone:
                      type: string
                    ssn_last_4:
                      type: string
                    verification:
                      properties:
                        additional_document:
                          properties:
                            back:
                              type: string
                            front:
                              type: string
                          title: person_verification_document_specs
                          type: object
                        document:
                          properties:
                            back:
                              type: string
                            front:
                              type: string
                          title: person_verification_document_specs
                          type: object
                      title: person_verification_specs
                      type: object
                  title: individual_specs
                  type: object
                metadata:
                  description: A set of key-value pairs that you can attach to an `Account`
                    object. This can be useful for storing additional
                    information about the account in a structured format.
                  type: object
                requested_capabilities:
                  description: The set of capabilities you want to unlock for this account
                    (US only). Each capability will be inactive until you have
                    provided its specific requirements and Stripe has verified
                    them. An account may have some of its requested capabilities
                    be active and some be inactive.
                  items:
                    enum:
                      - card_issuing
                      - card_payments
                      - legacy_payments
                      - transfers
                    type: string
                  type: array
                settings:
                  description: Options for customizing how the account functions within
                    Stripe.
                  properties:
                    branding:
                      properties:
                        icon:
                          type: string
                        logo:
                          type: string
                        primary_color:
                          type: string
                      title: branding_settings_specs
                      type: object
                    card_payments:
                      properties:
                        decline_on:
                          properties:
                            avs_failure:
                              type: boolean
                            cvc_failure:
                              type: boolean
                          title: decline_charge_on_specs
                          type: object
                        statement_descriptor_prefix:
                          type: string
                      title: card_payments_settings_specs
                      type: object
                    payments:
                      properties:
                        statement_descriptor:
                          type: string
                        statement_descriptor_kana:
                          type: string
                        statement_descriptor_kanji:
                          type: string
                      title: payments_settings_specs
                      type: object
                    payouts:
                      properties:
                        debit_negative_balances:
                          type: boolean
                        schedule:
                          properties:
                            delay_days: {}
                            interval:
                              enum:
                                - daily
                                - manual
                                - monthly
                                - weekly
                              type: string
                            monthly_anchor:
                              type: integer
                            weekly_anchor:
                              enum:
                                - friday
                                - monday
                                - saturday
                                - sunday
                                - thursday
                                - tuesday
                                - wednesday
                              type: string
                          title: transfer_schedule_specs
                          type: object
                        statement_descriptor:
                          type: string
                      title: payout_settings_specs
                      type: object
                  title: settings_specs
                  type: object
                tos_acceptance:
                  description: Details on the account's acceptance of the [Stripe Services
                    Agreement](https://stripe.com/docs/connect/updating-accounts#tos-acceptance).
                  properties:
                    date:
                      type: integer
                    ip:
                      type: string
                    user_agent:
                      type: string
                  required:
                    - date
                    - ip
                  title: tos_acceptance_specs
                  type: object
                type:
                  description: The type of Stripe account to create. Currently must be
                    `custom`, as only [Custom
                    accounts](https://stripe.com/docs/connect/custom-accounts)
                    may be created via the API.
                  enum:
                    - custom
                    - express
                    - standard
                  type: string
              type: object
        description: Body parameters for the request.
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/account"
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
  "/v1/accounts/{account}":
    delete:
      description: >-
        <p>With <a href="/docs/connect">Connect</a>, you can delete Custom or
        Express accounts you manage.</p>


        <p>Accounts created using test-mode keys can be deleted at any time. Accounts created using live-mode keys can only be deleted once all balances are zero.</p>


        <p>If you want to delete your own account, use the <a href="https://dashboard.stripe.com/account/data">data tab in your account settings</a> instead.</p>
      operationId: DeleteAccountsAccount
      parameters:
        - description: The identifier of the account to be deleted. If none is provided,
            will default to the account of the API key.
          in: path
          name: account
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/deleted_account"
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
    get:
      description: <p>Retrieves the details of an account.</p>
      operationId: GetAccountsAccount
      parameters:
        - description: Specifies which fields in the response should be expanded.
          in: query
          name: expand
          required: false
          schema:
            type: array
            items: {}
        - description: The identifier of the account to retrieve. If none is provided, the
            account associated with the API key is returned.
          in: path
          name: account
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/account"
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
    post:
      description: >-
        <p>Updates a connected <a href="/docs/connect/accounts">Express or
        Custom account</a> by setting the values of the parameters passed. Any
        parameters not provided are left unchanged. Most parameters can be
        changed only for Custom accounts. (These are marked <strong>Custom
        Only</strong> below.) Parameters marked <strong>Custom and
        Express</strong> are supported by both account types.</p>


        <p>To update your own account, use the <a href="https://dashboard.stripe.com/account">Dashboard</a>. Refer to our <a href="/docs/connect/updating-accounts">Connect</a> documentation to learn more about updating accounts.</p>
      operationId: PostAccountsAccount
      parameters:
        - in: path
          name: account
          required: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/PostAccountPayload"
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/account"
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
  "/v1/accounts/{account}/bank_accounts":
    post:
      description: <p>Create an external account for a given account.</p>
      operationId: PostAccountsAccountBankAccounts
      parameters:
        - in: path
          name: account
          required: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/PostAccountBankAccountsPayload"
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/external_account"
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
  "/v1/accounts/{account}/bank_accounts/{id}":
    delete:
      description: <p>Delete a specified external account for a given account.</p>
      operationId: DeleteAccountsAccountBankAccountsId
      parameters:
        - in: path
          name: account
          required: true
          schema:
            type: string
        - description: The ID of the external account to be deleted.
          in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/deleted_external_account"
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
    get:
      description: <p>Retrieve a specified external account for a given account.</p>
      operationId: GetAccountsAccountBankAccountsId
      parameters:
        - description: Specifies which fields in the response should be expanded.
          in: query
          name: expand
          required: false
          schema:
            type: array
            items: {}
        - in: path
          name: account
          required: true
          schema:
            type: string
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/external_account"
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
    post:
      description: >-
        <p>Updates the metadata, account holder name, and account holder type of
        a bank account belonging to a <a
        href="/docs/connect/custom-accounts">Custom account</a>, and optionally
        sets it as the default for its currency. Other bank account details are
        not editable by design.</p>

        <p>You can re-enable a disabled bank account by performing an update call without providing any arguments or changes.</p>
      operationId: PostAccountsAccountBankAccountsId
      parameters:
        - in: path
          name: account
          required: true
          schema:
            type: string
        - description: The ID of the external account to update
          in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/PostAccountBankAccountsIdPayload"
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/external_account"
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
  "/v1/accounts/{account}/capabilities":
    get:
      description: <p>Returns a list of capabilities associated with the account. The
        capabilities are returned sorted by creation date, with the most recent
        capability appearing first.</p>
      operationId: GetAccountsAccountCapabilities
      parameters:
        - description: Specifies which fields in the response should be expanded.
          in: query
          name: expand
          required: false
          schema:
            type: array
            items: {}
        - in: path
          name: account
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                properties:
                  data:
                    items:
                      $ref: "#/components/schemas/capability"
                    type: array
                  has_more:
                    description: True if this list has another page of items after this one
                      that can be fetched.
                    type: boolean
                  object:
                    description: String representing the object's type. Objects of the same
                      type share the same value. Always has the value `list`.
                    enum:
                      - list
                    type: string
                  url:
                    description: The URL where this list can be accessed.
                    type: string
                required:
                  - data
                  - has_more
                  - object
                  - url
                title: ListAccountCapability
                type: object
                x-expandableFields:
                  - data
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
  "/v1/accounts/{account}/capabilities/{capability}":
    get:
      description: <p>Retrieves information about the specified Account Capability.</p>
      operationId: GetAccountsAccountCapabilitiesCapability
      parameters:
        - description: Specifies which fields in the response should be expanded.
          in: query
          name: expand
          required: false
          schema:
            type: array
            items: {}
        - in: path
          name: account
          required: true
          schema:
            type: string
        - description: The ID of an account capability to retrieve.
          in: path
          name: capability
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/capability"
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
    post:
      description: <p>Updates an existing Account Capability.</p>
      operationId: PostAccountsAccountCapabilitiesCapability
      parameters:
        - in: path
          name: account
          required: true
          schema:
            type: string
        - description: The ID of an account capability to update.
          in: path
          name: capability
          required: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/PostAccountCapabilitiesCapabilityPayload"
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/capability"
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
  "/v1/accounts/{account}/external_accounts":
    get:
      description: <p>List external accounts for an account.</p>
      operationId: GetAccountsAccountExternalAccounts
      parameters:
        - description: Specifies which fields in the response should be expanded.
          in: query
          name: expand
          required: false
          schema:
            type: array
            items: {}
        - in: path
          name: account
          required: true
          schema:
            type: string
        - description: A cursor for use in pagination. `ending_before` is an object ID that
            defines your place in the list. For instance, if you make a list
            request and receive 100 objects, starting with `obj_bar`, your
            subsequent call can include `ending_before=obj_bar` in order to
            fetch the previous page of the list.
          in: query
          name: ending_before
          required: false
          schema:
            type: string
        - description: A limit on the number of objects to be returned. Limit can range
            between 1 and 100, and the default is 10.
          in: query
          name: limit
          required: false
          schema:
            type: integer
        - description: A cursor for use in pagination. `starting_after` is an object ID
            that defines your place in the list. For instance, if you make a
            list request and receive 100 objects, ending with `obj_foo`, your
            subsequent call can include `starting_after=obj_foo` in order to
            fetch the next page of the list.
          in: query
          name: starting_after
          required: false
          schema:
            type: string
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                properties:
                  data:
                    description: The list contains all external accounts that have been
                      attached to the Stripe account. These may be bank accounts
                      or cards.
                    items:
                      $ref: "#/components/schemas/bank_account"
                    type: array
                  has_more:
                    description: True if this list has another page of items after this one
                      that can be fetched.
                    type: boolean
                  object:
                    description: String representing the object's type. Objects of the same
                      type share the same value. Always has the value `list`.
                    enum:
                      - list
                    type: string
                  url:
                    description: The URL where this list can be accessed.
                    type: string
                required:
                  - data
                  - has_more
                  - object
                  - url
                title: ExternalAccountList
                type: object
                x-expandableFields:
                  - data
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
    post:
      description: <p>Create an external account for a given account.</p>
      operationId: PostAccountsAccountExternalAccounts
      parameters:
        - in: path
          name: account
          required: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/PostAccountBankAccountsPayload"
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/external_account"
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
  "/v1/accounts/{account}/external_accounts/{id}":
    delete:
      description: <p>Delete a specified external account for a given account.</p>
      operationId: DeleteAccountsAccountExternalAccountsId
      parameters:
        - in: path
          name: account
          required: true
          schema:
            type: string
        - description: The ID of the external account to be deleted.
          in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/deleted_external_account"
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
    get:
      description: <p>Retrieve a specified external account for a given account.</p>
      operationId: GetAccountsAccountExternalAccountsId
      parameters:
        - description: Specifies which fields in the response should be expanded.
          in: query
          name: expand
          required: false
          schema:
            type: array
            items: {}
        - in: path
          name: account
          required: true
          schema:
            type: string
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/external_account"
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
    post:
      description: >-
        <p>Updates the metadata, account holder name, and account holder type of
        a bank account belonging to a <a
        href="/docs/connect/custom-accounts">Custom account</a>, and optionally
        sets it as the default for its currency. Other bank account details are
        not editable by design.</p>

        <p>You can re-enable a disabled bank account by performing an update call without providing any arguments or changes.</p>
      operationId: PostAccountsAccountExternalAccountsId
      parameters:
        - in: path
          name: account
          required: true
          schema:
            type: string
        - description: The ID of the external account to update
          in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/PostAccountBankAccountsIdPayload"
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/external_account"
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
  "/v1/accounts/{account}/login_links":
    post:
      description: >-
        <p>Creates a single-use login link for an Express account to access
        their Stripe dashboard.</p>


        <p><strong>You may only create login links for <a href="/docs/connect/express-accounts">Express accounts</a> connected to your platform</strong>.</p>
      operationId: PostAccountsAccountLoginLinks
      parameters:
        - description: The identifier of the account to create a login link for.
          in: path
          name: account
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                expand:
                  description: Specifies which fields in the response should be expanded.
                  items:
                    type: string
                  type: array
                redirect_url:
                  description: Where to redirect the user after they log out of their
                    dashboard.
                  type: string
              type: object
        description: Body parameters for the request.
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/login_link"
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
  "/v1/accounts/{account}/logout":
    put:
      description: >-
        <p>Invalidates all sessions for a light account, for a platform to use
        during platform logout.</p>


        <p><strong>You may only log out <a href="/docs/connect/express-accounts">Express accounts</a> connected to your platform</strong>.</p>
      operationId: PutAccountsAccountLogout
      parameters:
        - description: The identifier of the account to log out.
          in: path
          name: account
          required: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/PutAccountsAccountLogoutPayload"
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/light_account_logout"
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
  "/v1/accounts/{account}/people":
    get:
      description: <p>Returns a list of people associated with the account’s legal entity.
        The people are returned sorted by creation date, with the most recent
        people appearing first.</p>
      operationId: GetAccountsAccountPeople
      parameters:
        - description: Specifies which fields in the response should be expanded.
          in: query
          name: expand
          required: false
          schema:
            type: array
            items: {}
        - in: path
          name: account
          required: true
          schema:
            type: string
        - description: A cursor for use in pagination. `ending_before` is an object ID that
            defines your place in the list. For instance, if you make a list
            request and receive 100 objects, starting with `obj_bar`, your
            subsequent call can include `ending_before=obj_bar` in order to
            fetch the previous page of the list.
          in: query
          name: ending_before
          required: false
          schema:
            type: string
        - description: A limit on the number of objects to be returned. Limit can range
            between 1 and 100, and the default is 10.
          in: query
          name: limit
          required: false
          schema:
            type: integer
        - description: Filters on the list of people returned based on the person's
            relationship to the account's company.
          in: query
          name: relationship
          required: false
          schema:
            type: string
        - description: A cursor for use in pagination. `starting_after` is an object ID
            that defines your place in the list. For instance, if you make a
            list request and receive 100 objects, ending with `obj_foo`, your
            subsequent call can include `starting_after=obj_foo` in order to
            fetch the next page of the list.
          in: query
          name: starting_after
          required: false
          schema:
            type: string
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                properties:
                  data:
                    items:
                      $ref: "#/components/schemas/person"
                    type: array
                  has_more:
                    description: True if this list has another page of items after this one
                      that can be fetched.
                    type: boolean
                  object:
                    description: String representing the object's type. Objects of the same
                      type share the same value. Always has the value `list`.
                    enum:
                      - list
                    type: string
                  url:
                    description: The URL where this list can be accessed.
                    type: string
                required:
                  - data
                  - has_more
                  - object
                  - url
                type: object
                x-expandableFields:
                  - data
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
    post:
      description: <p>Creates a new person.</p>
      operationId: PostAccountsAccountPeople
      parameters:
        - description: The account that the person is associated with.
          in: path
          name: account
          required: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/PostAccountsAccountPeoplePayload"
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/person"
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
  "/v1/accounts/{account}/people/{person}":
    delete:
      description: <p>Deletes an existing person’s relationship to the account’s legal
        entity. Any person with a relationship for an account can be deleted
        through the API, except if the person is the
        <code>account_opener</code>. If your integration is using the
        <code>executive</code> parameter, you cannot delete the only verified
        <code>executive</code> on file.</p>
      operationId: DeleteAccountsAccountPeoplePerson
      parameters:
        - in: path
          name: account
          required: true
          schema:
            type: string
        - description: The ID of the person to be deleted.
          in: path
          name: person
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/deleted_person"
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
    get:
      description: <p>Retrieves an existing person.</p>
      operationId: GetAccountsAccountPeoplePerson
      parameters:
        - description: Specifies which fields in the response should be expanded.
          in: query
          name: expand
          required: false
          schema:
            type: array
            items: {}
        - in: path
          name: account
          required: true
          schema:
            type: string
        - description: The ID of a person to retrieve.
          in: path
          name: person
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/person"
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
    post:
      description: <p>Updates an existing person.</p>
      operationId: PostAccountsAccountPeoplePerson
      parameters:
        - description: The account that the person is associated with.
          in: path
          name: account
          required: true
          schema:
            type: string
        - description: The ID of a person to update.
          in: path
          name: person
          required: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/PostAccountsAccountPeoplePayload"
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/person"
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
  "/v1/accounts/{account}/persons":
    get:
      description: <p>Returns a list of people associated with the account’s legal entity.
        The people are returned sorted by creation date, with the most recent
        people appearing first.</p>
      operationId: GetAccountsAccountPersons
      parameters:
        - description: Specifies which fields in the response should be expanded.
          in: query
          name: expand
          required: false
          schema:
            type: array
            items: {}
        - in: path
          name: account
          required: true
          schema:
            type: string
        - description: A cursor for use in pagination. `ending_before` is an object ID that
            defines your place in the list. For instance, if you make a list
            request and receive 100 objects, starting with `obj_bar`, your
            subsequent call can include `ending_before=obj_bar` in order to
            fetch the previous page of the list.
          in: query
          name: ending_before
          required: false
          schema:
            type: string
        - description: A limit on the number of objects to be returned. Limit can range
            between 1 and 100, and the default is 10.
          in: query
          name: limit
          required: false
          schema:
            type: integer
        - description: Filters on the list of people returned based on the person's
            relationship to the account's company.
          in: query
          name: relationship
          required: false
          schema:
            type: string
        - description: A cursor for use in pagination. `starting_after` is an object ID
            that defines your place in the list. For instance, if you make a
            list request and receive 100 objects, ending with `obj_foo`, your
            subsequent call can include `starting_after=obj_foo` in order to
            fetch the next page of the list.
          in: query
          name: starting_after
          required: false
          schema:
            type: string
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                properties:
                  data:
                    items:
                      $ref: "#/components/schemas/person"
                    type: array
                  has_more:
                    description: True if this list has another page of items after this one
                      that can be fetched.
                    type: boolean
                  object:
                    description: String representing the object's type. Objects of the same
                      type share the same value. Always has the value `list`.
                    enum:
                      - list
                    type: string
                  url:
                    description: The URL where this list can be accessed.
                    type: string
                required:
                  - data
                  - has_more
                  - object
                  - url
                type: object
                x-expandableFields:
                  - data
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
    post:
      description: <p>Creates a new person.</p>
      operationId: PostAccountsAccountPersons
      parameters:
        - description: The account that the person is associated with.
          in: path
          name: account
          required: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/PostAccountsAccountPeoplePayload"
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/person"
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
  "/v1/accounts/{account}/persons/{person}":
    delete:
      description: <p>Deletes an existing person’s relationship to the account’s legal
        entity. Any person with a relationship for an account can be deleted
        through the API, except if the person is the
        <code>account_opener</code>. If your integration is using the
        <code>executive</code> parameter, you cannot delete the only verified
        <code>executive</code> on file.</p>
      operationId: DeleteAccountsAccountPersonsPerson
      parameters:
        - in: path
          name: account
          required: true
          schema:
            type: string
        - description: The ID of the person to be deleted.
          in: path
          name: person
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/deleted_person"
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
    get:
      description: <p>Retrieves an existing person.</p>
      operationId: GetAccountsAccountPersonsPerson
      parameters:
        - description: Specifies which fields in the response should be expanded.
          in: query
          name: expand
          required: false
          schema:
            type: array
            items: {}
        - in: path
          name: account
          required: true
          schema:
            type: string
        - description: The ID of a person to retrieve.
          in: path
          name: person
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/person"
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
    post:
      description: <p>Updates an existing person.</p>
      operationId: PostAccountsAccountPersonsPerson
      parameters:
        - description: The account that the person is associated with.
          in: path
          name: account
          required: true
          schema:
            type: string
        - description: The ID of a person to update.
          in: path
          name: person
          required: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/PostAccountsAccountPeoplePayload"
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/person"
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
  "/v1/accounts/{account}/reject":
    post:
      description: >-
        <p>With <a href="/docs/connect">Connect</a>, you may flag accounts as
        suspicious.</p>


        <p>Test-mode Custom and Express accounts can be rejected at any time. Accounts created using live-mode keys may only be rejected once all balances are zero.</p>
      operationId: PostAccountsAccountReject
      parameters:
        - description: The identifier of the account to reject
          in: path
          name: account
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                expand:
                  description: Specifies which fields in the response should be expanded.
                  items:
                    type: string
                  type: array
                reason:
                  description: The reason for rejecting the account. Can be `fraud`,
                    `terms_of_service`, or `other`.
                  type: string
              required:
                - reason
              type: object
        description: Body parameters for the request.
        required: true
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/account"
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
  /v1/apple_pay/domains:
    get:
      description: <p>List apple pay domains.</p>
      operationId: GetApplePayDomains
      parameters:
        - description: Specifies which fields in the response should be expanded.
          in: query
          name: expand
          required: false
          schema:
            type: array
            items: {}
        - in: query
          name: domain_name
          required: false
          schema:
            type: string
        - description: A cursor for use in pagination. `ending_before` is an object ID that
            defines your place in the list. For instance, if you make a list
            request and receive 100 objects, starting with `obj_bar`, your
            subsequent call can include `ending_before=obj_bar` in order to
            fetch the previous page of the list.
          in: query
          name: ending_before
          required: false
          schema:
            type: string
        - description: A limit on the number of objects to be returned. Limit can range
            between 1 and 100, and the default is 10.
          in: query
          name: limit
          required: false
          schema:
            type: integer
        - description: A cursor for use in pagination. `starting_after` is an object ID
            that defines your place in the list. For instance, if you make a
            list request and receive 100 objects, ending with `obj_foo`, your
            subsequent call can include `starting_after=obj_foo` in order to
            fetch the next page of the list.
          in: query
          name: starting_after
          required: false
          schema:
            type: string
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                properties:
                  data:
                    items:
                      $ref: "#/components/schemas/apple_pay_domain"
                    type: array
                  has_more:
                    description: True if this list has another page of items after this one
                      that can be fetched.
                    type: boolean
                  object:
                    description: String representing the object's type. Objects of the same
                      type share the same value. Always has the value `list`.
                    enum:
                      - list
                    type: string
                  url:
                    description: The URL where this list can be accessed.
                    type: string
                required:
                  - data
                  - has_more
                  - object
                  - url
                title: ApplePayDomainList
                type: object
                x-expandableFields:
                  - data
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
    post:
      description: <p>Create an apple pay domain.</p>
      operationId: PostApplePayDomains
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                domain_name:
                  type: string
                expand:
                  description: Specifies which fields in the response should be expanded.
                  items:
                    type: string
                  type: array
              required:
                - domain_name
              type: object
        description: Body parameters for the request.
        required: true
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/apple_pay_domain"
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
  "/v1/apple_pay/domains/{domain}":
    delete:
      description: <p>Delete an apple pay domain.</p>
      operationId: DeleteApplePayDomainsDomain
      parameters:
        - in: path
          name: domain
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/deleted_apple_pay_domain"
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
    get:
      description: <p>Retrieve an apple pay domain.</p>
      operationId: GetApplePayDomainsDomain
      parameters:
        - description: Specifies which fields in the response should be expanded.
          in: query
          name: expand
          required: false
          schema:
            type: array
            items: {}
        - in: path
          name: domain
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/apple_pay_domain"
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
  /v1/application_fees:
    get:
      description: <p>Returns a list of application fees you’ve previously collected. The
        application fees are returned in sorted order, with the most recent fees
        appearing first.</p>
      operationId: GetApplicationFees
      parameters:
        - description: Specifies which fields in the response should be expanded.
          in: query
          name: expand
          required: false
          schema:
            type: array
            items: {}
        - description: Only return application fees for the charge specified by this charge
            ID.
          in: query
          name: charge
          required: false
          schema:
            type: string
        - in: query
          name: created
          required: false
          schema:
            type: integer
        - description: A cursor for use in pagination. `ending_before` is an object ID that
            defines your place in the list. For instance, if you make a list
            request and receive 100 objects, starting with `obj_bar`, your
            subsequent call can include `ending_before=obj_bar` in order to
            fetch the previous page of the list.
          in: query
          name: ending_before
          required: false
          schema:
            type: string
        - description: A limit on the number of objects to be returned. Limit can range
            between 1 and 100, and the default is 10.
          in: query
          name: limit
          required: false
          schema:
            type: integer
        - description: A cursor for use in pagination. `starting_after` is an object ID
            that defines your place in the list. For instance, if you make a
            list request and receive 100 objects, ending with `obj_foo`, your
            subsequent call can include `starting_after=obj_foo` in order to
            fetch the next page of the list.
          in: query
          name: starting_after
          required: false
          schema:
            type: string
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                properties:
                  data:
                    items:
                      $ref: "#/components/schemas/application_fee"
                    type: array
                  has_more:
                    description: True if this list has another page of items after this one
                      that can be fetched.
                    type: boolean
                  object:
                    description: String representing the object's type. Objects of the same
                      type share the same value. Always has the value `list`.
                    enum:
                      - list
                    type: string
                  url:
                    description: The URL where this list can be accessed.
                    type: string
                required:
                  - data
                  - has_more
                  - object
                  - url
                type: object
                x-expandableFields:
                  - data
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
  "/v1/application_fees/{fee}/refunds/{id}":
    get:
      description: <p>By default, you can see the 10 most recent refunds stored directly on
        the application fee object, but you can also retrieve details about a
        specific refund stored on the application fee.</p>
      operationId: GetApplicationFeesFeeRefundsId
      parameters:
        - description: Specifies which fields in the response should be expanded.
          in: query
          name: expand
          required: false
          schema:
            type: array
            items: {}
        - description: ID of the application fee refunded.
          in: path
          name: fee
          required: true
          schema:
            type: string
        - description: ID of refund to retrieve.
          in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/fee_refund"
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
    post:
      description: >-
        <p>Updates the specified application fee refund by setting the values of
        the parameters passed. Any parameters not provided will be left
        unchanged.</p>


        <p>This request only accepts metadata as an argument.</p>
      operationId: PostApplicationFeesFeeRefundsId
      parameters:
        - description: ID of the application fee refunded.
          in: path
          name: fee
          required: true
          schema:
            type: string
        - description: ID of refund to retrieve.
          in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/PostApplicationFeesFeeRefundsIdPayload"
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/fee_refund"
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
  "/v1/application_fees/{id}":
    get:
      description: <p>Retrieves the details of an application fee that your account has
        collected. The same information is returned when refunding the
        application fee.</p>
      operationId: GetApplicationFeesId
      parameters:
        - description: Specifies which fields in the response should be expanded.
          in: query
          name: expand
          required: false
          schema:
            type: array
            items: {}
        - description: The identifier of the fee to be retrieved.
          in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/application_fee"
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
  "/v1/application_fees/{id}/refund":
    post:
      description: ""
      operationId: PostApplicationFeesIdRefund
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                amount:
                  type: integer
                directive:
                  type: string
                expand:
                  description: Specifies which fields in the response should be expanded.
                  items:
                    type: string
                  type: array
              type: object
        description: Body parameters for the request.
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/application_fee"
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
  "/v1/application_fees/{id}/refunds":
    get:
      description: <p>You can see a list of the refunds belonging to a specific application
        fee. Note that the 10 most recent refunds are always available by
        default on the application fee object. If you need more than those 10,
        you can use this API method and the <code>limit</code> and
        <code>starting_after</code> parameters to page through additional
        refunds.</p>
      operationId: GetApplicationFeesIdRefunds
      parameters:
        - description: Specifies which fields in the response should be expanded.
          in: query
          name: expand
          required: false
          schema:
            type: array
            items: {}
        - description: A cursor for use in pagination. `ending_before` is an object ID that
            defines your place in the list. For instance, if you make a list
            request and receive 100 objects, starting with `obj_bar`, your
            subsequent call can include `ending_before=obj_bar` in order to
            fetch the previous page of the list.
          in: query
          name: ending_before
          required: false
          schema:
            type: string
        - description: The ID of the application fee whose refunds will be retrieved.
          in: path
          name: id
          required: true
          schema:
            type: string
        - description: A limit on the number of objects to be returned. Limit can range
            between 1 and 100, and the default is 10.
          in: query
          name: limit
          required: false
          schema:
            type: integer
        - description: A cursor for use in pagination. `starting_after` is an object ID
            that defines your place in the list. For instance, if you make a
            list request and receive 100 objects, ending with `obj_foo`, your
            subsequent call can include `starting_after=obj_foo` in order to
            fetch the next page of the list.
          in: query
          name: starting_after
          required: false
          schema:
            type: string
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                properties:
                  data:
                    items:
                      $ref: "#/components/schemas/fee_refund"
                    type: array
                  has_more:
                    description: True if this list has another page of items after this one
                      that can be fetched.
                    type: boolean
                  object:
                    description: String representing the object's type. Objects of the same
                      type share the same value. Always has the value `list`.
                    enum:
                      - list
                    type: string
                  url:
                    description: The URL where this list can be accessed.
                    type: string
                required:
                  - data
                  - has_more
                  - object
                  - url
                title: FeeRefundList
                type: object
                x-expandableFields:
                  - data
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
    post:
      description: >-
        <p>Refunds an application fee that has previously been collected but not
        yet refunded.

        Funds will be refunded to the Stripe account from which the fee was originally collected.</p>


        <p>You can optionally refund only part of an application fee.

        You can do so multiple times, until the entire fee has been refunded.</p>


        <p>Once entirely refunded, an application fee can’t be refunded again.

        This method will raise an error when called on an already-refunded application fee,

        or when trying to refund more money than is left on an application fee.</p>
      operationId: PostApplicationFeesIdRefunds
      parameters:
        - description: The identifier of the application fee to be refunded.
          in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                amount:
                  description: A positive integer, in _%s_, representing how much of this
                    fee to refund. Can refund only up to the remaining
                    unrefunded amount of the fee.
                  type: integer
                expand:
                  description: Specifies which fields in the response should be expanded.
                  items:
                    type: string
                  type: array
                metadata:
                  description: Set of key-value pairs that you can attach to an object.
                    This can be useful for storing additional information about
                    the object in a structured format. Individual keys can be
                    unset by posting an empty value to them. All keys can be
                    unset by posting an empty value to `metadata`.
                  type: object
              type: object
        description: Body parameters for the request.
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/fee_refund"
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
  /v1/balance:
    get:
      description: >-
        <p>Retrieves the current account balance, based on the authentication
        that was used to make the request.
         For a sample request, see <a href="/docs/connect/account-balances#accounting-for-negative-balances">Accounting for negative balances</a>.</p>
      operationId: GetBalance
      parameters:
        - description: Specifies which fields in the response should be expanded.
          in: query
          name: expand
          required: false
          schema:
            type: array
            items: {}
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/balance"
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
  /v1/balance/history:
    get:
      description: >-
        <p>Returns a list of transactions that have contributed to the Stripe
        account balance (e.g., charges, transfers, and so forth). The
        transactions are returned in sorted order, with the most recent
        transactions appearing first.</p>


        <p>Note that this endpoint was previously called “Balance history” and used the path <code>/v1/balance/history</code>.</p>
      operationId: GetBalanceHistory
      parameters:
        - description: Specifies which fields in the response should be expanded.
          in: query
          name: expand
          required: false
          schema:
            type: array
            items: {}
        - in: query
          name: available_on
          required: false
          schema:
            type: integer
        - in: query
          name: created
          required: false
          schema:
            type: integer
        - in: query
          name: currency
          required: false
          schema:
            type: string
        - description: A cursor for use in pagination. `ending_before` is an object ID that
            defines your place in the list. For instance, if you make a list
            request and receive 100 objects, starting with `obj_bar`, your
            subsequent call can include `ending_before=obj_bar` in order to
            fetch the previous page of the list.
          in: query
          name: ending_before
          required: false
          schema:
            type: string
        - description: A limit on the number of objects to be returned. Limit can range
            between 1 and 100, and the default is 10.
          in: query
          name: limit
          required: false
          schema:
            type: integer
        - description: For automatic Stripe payouts only, only returns transactions that
            were paid out on the specified payout ID.
          in: query
          name: payout
          required: false
          schema:
            type: string
        - description: Only returns the original transaction.
          in: query
          name: source
          required: false
          schema:
            type: string
        - description: A cursor for use in pagination. `starting_after` is an object ID
            that defines your place in the list. For instance, if you make a
            list request and receive 100 objects, ending with `obj_foo`, your
            subsequent call can include `starting_after=obj_foo` in order to
            fetch the next page of the list.
          in: query
          name: starting_after
          required: false
          schema:
            type: string
        - description: "Only returns transactions of the given type. One of: `charge`,
            `refund`, `adjustment`, `application_fee`, `application_fee_refund`,
            `transfer`, `payment`, `payout`, `payout_failure`, `stripe_fee`, or
            `network_cost`."
          in: query
          name: type
          required: false
          schema:
            type: string
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                properties:
                  data:
                    items:
                      $ref: "#/components/schemas/balance_transaction"
                    type: array
                  has_more:
                    description: True if this list has another page of items after this one
                      that can be fetched.
                    type: boolean
                  object:
                    description: String representing the object's type. Objects of the same
                      type share the same value. Always has the value `list`.
                    enum:
                      - list
                    type: string
                  url:
                    description: The URL where this list can be accessed.
                    type: string
                required:
                  - data
                  - has_more
                  - object
                  - url
                title: BalanceTransactionsList
                type: object
                x-expandableFields:
                  - data
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
  "/v1/balance/history/{id}":
    get:
      description: >-
        <p>Retrieves the balance transaction with the given ID.</p>


        <p>Note that this endpoint previously used the path <code>/v1/balance/history/:id</code>.</p>
      operationId: GetBalanceHistoryId
      parameters:
        - description: Specifies which fields in the response should be expanded.
          in: query
          name: expand
          required: false
          schema:
            type: array
            items: {}
        - description: The ID of the desired balance transaction, as found on any API
            object that affects the balance (e.g., a charge or transfer).
          in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/balance_transaction"
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
  /v1/balance_transactions:
    get:
      description: >-
        <p>Returns a list of transactions that have contributed to the Stripe
        account balance (e.g., charges, transfers, and so forth). The
        transactions are returned in sorted order, with the most recent
        transactions appearing first.</p>


        <p>Note that this endpoint was previously called “Balance history” and used the path <code>/v1/balance/history</code>.</p>
      operationId: GetBalanceTransactions
      parameters:
        - description: Specifies which fields in the response should be expanded.
          in: query
          name: expand
          required: false
          schema:
            type: array
            items: {}
        - in: query
          name: available_on
          required: false
          schema:
            type: integer
        - in: query
          name: created
          required: false
          schema:
            type: integer
        - in: query
          name: currency
          required: false
          schema:
            type: string
        - description: A cursor for use in pagination. `ending_before` is an object ID that
            defines your place in the list. For instance, if you make a list
            request and receive 100 objects, starting with `obj_bar`, your
            subsequent call can include `ending_before=obj_bar` in order to
            fetch the previous page of the list.
          in: query
          name: ending_before
          required: false
          schema:
            type: string
        - description: A limit on the number of objects to be returned. Limit can range
            between 1 and 100, and the default is 10.
          in: query
          name: limit
          required: false
          schema:
            type: integer
        - description: For automatic Stripe payouts only, only returns transactions that
            were paid out on the specified payout ID.
          in: query
          name: payout
          required: false
          schema:
            type: string
        - description: Only returns the original transaction.
          in: query
          name: source
          required: false
          schema:
            type: string
        - description: A cursor for use in pagination. `starting_after` is an object ID
            that defines your place in the list. For instance, if you make a
            list request and receive 100 objects, ending with `obj_foo`, your
            subsequent call can include `starting_after=obj_foo` in order to
            fetch the next page of the list.
          in: query
          name: starting_after
          required: false
          schema:
            type: string
        - description: "Only returns transactions of the given type. One of: `charge`,
            `refund`, `adjustment`, `application_fee`, `application_fee_refund`,
            `transfer`, `payment`, `payout`, `payout_failure`, `stripe_fee`, or
            `network_cost`."
          in: query
          name: type
          required: false
          schema:
            type: string
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                properties:
                  data:
                    items:
                      $ref: "#/components/schemas/balance_transaction"
                    type: array
                  has_more:
                    description: True if this list has another page of items after this one
                      that can be fetched.
                    type: boolean
                  object:
                    description: String representing the object's type. Objects of the same
                      type share the same value. Always has the value `list`.
                    enum:
                      - list
                    type: string
                  url:
                    description: The URL where this list can be accessed.
                    type: string
                required:
                  - data
                  - has_more
                  - object
                  - url
                title: BalanceTransactionsList
                type: object
                x-expandableFields:
                  - data
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
  "/v1/balance_transactions/{id}":
    get:
      description: >-
        <p>Retrieves the balance transaction with the given ID.</p>


        <p>Note that this endpoint previously used the path <code>/v1/balance/history/:id</code>.</p>
      operationId: GetBalanceTransactionsId
      parameters:
        - description: Specifies which fields in the response should be expanded.
          in: query
          name: expand
          required: false
          schema:
            type: array
            items: {}
        - description: The ID of the desired balance transaction, as found on any API
            object that affects the balance (e.g., a charge or transfer).
          in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/balance_transaction"
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
  /v1/bitcoin/receivers:
    get:
      deprecated: true
      description: <p>Returns a list of your receivers. Receivers are returned sorted by
        creation date, with the most recently created receivers appearing
        first.</p>
      operationId: GetBitcoinReceivers
      parameters:
        - description: Specifies which fields in the response should be expanded.
          in: query
          name: expand
          required: false
          schema:
            type: array
            items: {}
        - description: Filter for active receivers.
          in: query
          name: active
          required: false
          schema:
            type: boolean
        - description: A cursor for use in pagination. `ending_before` is an object ID that
            defines your place in the list. For instance, if you make a list
            request and receive 100 objects, starting with `obj_bar`, your
            subsequent call can include `ending_before=obj_bar` in order to
            fetch the previous page of the list.
          in: query
          name: ending_before
          required: false
          schema:
            type: string
        - description: Filter for filled receivers.
          in: query
          name: filled
          required: false
          schema:
            type: boolean
        - description: A limit on the number of objects to be returned. Limit can range
            between 1 and 100, and the default is 10.
          in: query
          name: limit
          required: false
          schema:
            type: integer
        - description: A cursor for use in pagination. `starting_after` is an object ID
            that defines your place in the list. For instance, if you make a
            list request and receive 100 objects, ending with `obj_foo`, your
            subsequent call can include `starting_after=obj_foo` in order to
            fetch the next page of the list.
          in: query
          name: starting_after
          required: false
          schema:
            type: string
        - description: Filter for receivers with uncaptured funds.
          in: query
          name: uncaptured_funds
          required: false
          schema:
            type: boolean
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                properties:
                  data:
                    items:
                      $ref: "#/components/schemas/bitcoin_receiver"
                    type: array
                  has_more:
                    description: True if this list has another page of items after this one
                      that can be fetched.
                    type: boolean
                  object:
                    description: String representing the object's type. Objects of the same
                      type share the same value. Always has the value `list`.
                    enum:
                      - list
                    type: string
                  url:
                    description: The URL where this list can be accessed.
                    type: string
                required:
                  - data
                  - has_more
                  - object
                  - url
                type: object
                x-expandableFields:
                  - data
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
  "/v1/bitcoin/receivers/{id}":
    get:
      deprecated: true
      description: <p>Retrieves the Bitcoin receiver with the given ID.</p>
      operationId: GetBitcoinReceiversId
      parameters:
        - description: Specifies which fields in the response should be expanded.
          in: query
          name: expand
          required: false
          schema:
            type: array
            items: {}
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/bitcoin_receiver"
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
  "/v1/bitcoin/receivers/{receiver}/transactions":
    get:
      deprecated: true
      description: <p>List bitcoin transacitons for a given receiver.</p>
      operationId: GetBitcoinReceiversReceiverTransactions
      parameters:
        - description: Specifies which fields in the response should be expanded.
          in: query
          name: expand
          required: false
          schema:
            type: array
            items: {}
        - description: Only return transactions for the customer specified by this customer
            ID.
          in: query
          name: customer
          required: false
          schema:
            type: string
        - description: A cursor for use in pagination. `ending_before` is an object ID that
            defines your place in the list. For instance, if you make a list
            request and receive 100 objects, starting with `obj_bar`, your
            subsequent call can include `ending_before=obj_bar` in order to
            fetch the previous page of the list.
          in: query
          name: ending_before
          required: false
          schema:
            type: string
        - description: A limit on the number of objects to be returned. Limit can range
            between 1 and 100, and the default is 10.
          in: query
          name: limit
          required: false
          schema:
            type: integer
        - description: Only return transactions for the receiver specified by this receiver
            ID.
          in: path
          name: receiver
          required: true
          schema:
            type: string
        - description: A cursor for use in pagination. `starting_after` is an object ID
            that defines your place in the list. For instance, if you make a
            list request and receive 100 objects, ending with `obj_foo`, your
            subsequent call can include `starting_after=obj_foo` in order to
            fetch the next page of the list.
          in: query
          name: starting_after
          required: false
          schema:
            type: string
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                properties:
                  data:
                    items:
                      $ref: "#/components/schemas/bitcoin_transaction"
                    type: array
                  has_more:
                    description: True if this list has another page of items after this one
                      that can be fetched.
                    type: boolean
                  object:
                    description: String representing the object's type. Objects of the same
                      type share the same value. Always has the value `list`.
                    enum:
                      - list
                    type: string
                  url:
                    description: The URL where this list can be accessed.
                    type: string
                required:
                  - data
                  - has_more
                  - object
                  - url
                title: BitcoinTransactionList
                type: object
                x-expandableFields:
                  - data
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
  /v1/bitcoin/transactions:
    get:
      deprecated: true
      description: <p>List bitcoin transacitons for a given receiver.</p>
      operationId: GetBitcoinTransactions
      parameters:
        - description: Specifies which fields in the response should be expanded.
          in: query
          name: expand
          required: false
          schema:
            type: array
            items: {}
        - description: Only return transactions for the customer specified by this customer
            ID.
          in: query
          name: customer
          required: false
          schema:
            type: string
        - description: A cursor for use in pagination. `ending_before` is an object ID that
            defines your place in the list. For instance, if you make a list
            request and receive 100 objects, starting with `obj_bar`, your
            subsequent call can include `ending_before=obj_bar` in order to
            fetch the previous page of the list.
          in: query
          name: ending_before
          required: false
          schema:
            type: string
        - description: A limit on the number of objects to be returned. Limit can range
            between 1 and 100, and the default is 10.
          in: query
          name: limit
          required: false
          schema:
            type: integer
        - description: Only return transactions for the receiver specified by this receiver
            ID.
          in: query
          name: receiver
          required: false
          schema:
            type: string
        - description: A cursor for use in pagination. `starting_after` is an object ID
            that defines your place in the list. For instance, if you make a
            list request and receive 100 objects, ending with `obj_foo`, your
            subsequent call can include `starting_after=obj_foo` in order to
            fetch the next page of the list.
          in: query
          name: starting_after
          required: false
          schema:
            type: string
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                properties:
                  data:
                    items:
                      $ref: "#/components/schemas/bitcoin_transaction"
                    type: array
                  has_more:
                    description: True if this list has another page of items after this one
                      that can be fetched.
                    type: boolean
                  object:
                    description: String representing the object's type. Objects of the same
                      type share the same value. Always has the value `list`.
                    enum:
                      - list
                    type: string
                  url:
                    description: The URL where this list can be accessed.
                    type: string
                required:
                  - data
                  - has_more
                  - object
                  - url
                title: BitcoinTransactionList
                type: object
                x-expandableFields:
                  - data
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
  /v1/charges:
    get:
      description: <p>Returns a list of charges you’ve previously created. The charges are
        returned in sorted order, with the most recent charges appearing
        first.</p>
      operationId: GetCharges
      parameters:
        - description: Specifies which fields in the response should be expanded.
          in: query
          name: expand
          required: false
          schema:
            type: array
            items: {}
        - in: query
          name: created
          required: false
          schema:
            type: integer
        - description: Only return charges for the customer specified by this customer ID.
          in: query
          name: customer
          required: false
          schema:
            type: string
        - description: A cursor for use in pagination. `ending_before` is an object ID that
            defines your place in the list. For instance, if you make a list
            request and receive 100 objects, starting with `obj_bar`, your
            subsequent call can include `ending_before=obj_bar` in order to
            fetch the previous page of the list.
          in: query
          name: ending_before
          required: false
          schema:
            type: string
        - description: A limit on the number of objects to be returned. Limit can range
            between 1 and 100, and the default is 10.
          in: query
          name: limit
          required: false
          schema:
            type: integer
        - description: Only return charges that were created by the PaymentIntent specified
            by this PaymentIntent ID.
          in: query
          name: payment_intent
          required: false
          schema:
            type: string
        - description: A cursor for use in pagination. `starting_after` is an object ID
            that defines your place in the list. For instance, if you make a
            list request and receive 100 objects, ending with `obj_foo`, your
            subsequent call can include `starting_after=obj_foo` in order to
            fetch the next page of the list.
          in: query
          name: starting_after
          required: false
          schema:
            type: string
        - description: Only return charges for this transfer group.
          in: query
          name: transfer_group
          required: false
          schema:
            type: string
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                properties:
                  data:
                    items:
                      $ref: "#/components/schemas/charge"
                    type: array
                  has_more:
                    description: True if this list has another page of items after this one
                      that can be fetched.
                    type: boolean
                  object:
                    description: String representing the object's type. Objects of the same
                      type share the same value. Always has the value `list`.
                    enum:
                      - list
                    type: string
                  url:
                    description: The URL where this list can be accessed.
                    type: string
                required:
                  - data
                  - has_more
                  - object
                  - url
                type: object
                x-expandableFields:
                  - data
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
    post:
      description: <p>To charge a credit card or other payment source, you create a
        <code>Charge</code> object. If your API key is in test mode, the
        supplied payment source (e.g., card) won’t actually be charged, although
        everything else will occur as if in live mode. (Stripe assumes that the
        charge would have completed successfully).</p>
      operationId: PostCharges
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                amount:
                  description: A positive integer representing how much to charge in the
                    [smallest currency
                    unit](https://stripe.com/docs/currencies#zero-decimal)
                    (e.g., 100 cents to charge $1.00 or 100 to charge ¥100, a
                    zero-decimal currency). The minimum amount is $0.50 US or
                    [equivalent in charge
                    currency](https://stripe.com/docs/currencies#minimum-and-maximum-charge-amounts).
                    The amount value supports up to eight digits (e.g., a value
                    of 99999999 for a USD charge of $999,999.99).
                  type: integer
                application_fee:
                  type: integer
                application_fee_amount:
                  description: A fee in %s that will be applied to the charge and
                    transferred to the application owner's Stripe account. The
                    request must be made with an OAuth key or the
                    `Stripe-Account` header in order to take an application fee.
                    For more information, see the application fees
                    [documentation](https://stripe.com/docs/connect/direct-charges#collecting-fees).
                  type: integer
                capture:
                  description: Whether to immediately capture the charge. Defaults to
                    `true`. When `false`, the charge issues an authorization (or
                    pre-authorization), and will need to be
                    [captured](#capture_charge) later. Uncaptured charges expire
                    in _seven days_. For more information, see the [authorizing
                    charges and settling
                    later](https://stripe.com/docs/charges#auth-and-capture)
                    documentation.
                  type: boolean
                card:
                  description: A token, like the ones returned by
                    [Stripe.js](https://stripe.com/docs/stripe.js).
                currency:
                  description: Three-letter [ISO currency
                    code](https://www.iso.org/iso-4217-currency-codes.html), in
                    lowercase. Must be a [supported
                    currency](https://stripe.com/docs/currencies).
                  type: string
                customer:
                  description: The ID of an existing customer that will be charged in this
                    request.
                  type: string
                description:
                  description: An arbitrary string which you can attach to a `Charge`
                    object. It is displayed when in the web interface alongside
                    the charge. Note that if you use Stripe to send automatic
                    email receipts to your customers, your receipt emails will
                    include the `description` of the charge(s) that they are
                    describing.
                  type: string
                destination:
                  properties:
                    account:
                      type: string
                    amount:
                      type: integer
                  required:
                    - account
                  title: destination_specs
                  type: object
                expand:
                  description: Specifies which fields in the response should be expanded.
                  items:
                    type: string
                  type: array
                metadata:
                  description: Set of key-value pairs that you can attach to an object.
                    This can be useful for storing additional information about
                    the object in a structured format.
                  type: object
                on_behalf_of:
                  description: The Stripe account ID for which these funds are intended.
                    Automatically set if you use the `destination` parameter.
                    For details, see [Creating Separate Charges and
                    Transfers](https://stripe.com/docs/connect/charges-transfers#on-behalf-of).
                  type: string
                receipt_email:
                  description: The email address to which this charge's
                    [receipt](https://stripe.com/docs/dashboard/receipts) will
                    be sent. The receipt will not be sent until the charge is
                    paid, and no receipts will be sent for test mode charges. If
                    this charge is for a
                    [Customer](https://stripe.com/docs/api/customers/object),
                    the email address specified here will override the
                    customer's email address. If `receipt_email` is specified
                    for a charge in live mode, a receipt will be sent regardless
                    of your [email
                    settings](https://dashboard.stripe.com/account/emails).
                  type: string
                shipping:
                  description: Shipping information for the charge. Helps prevent fraud on
                    charges for physical goods.
                  properties:
                    address:
                      properties:
                        city:
                          type: string
                        country:
                          type: string
                        line1:
                          type: string
                        line2:
                          type: string
                        postal_code:
                          type: string
                        state:
                          type: string
                      required:
                        - line1
                      title: address
                      type: object
                    carrier:
                      type: string
                    name:
                      type: string
                    phone:
                      type: string
                    tracking_number:
                      type: string
                  required:
                    - address
                    - name
                  title: shipping
                  type: object
                source:
                  description: A payment source to be charged. This can be the ID of a
                    [card](https://stripe.com/docs/api#cards) (i.e., credit or
                    debit card), a [bank
                    account](https://stripe.com/docs/api#bank_accounts), a
                    [source](https://stripe.com/docs/api#sources), a
                    [token](https://stripe.com/docs/api#tokens), or a [connected
                    account](https://stripe.com/docs/connect/account-debits#charging-a-connected-account).
                    For certain sources---namely,
                    [cards](https://stripe.com/docs/api#cards), [bank
                    accounts](https://stripe.com/docs/api#bank_accounts), and
                    attached
                    [sources](https://stripe.com/docs/api#sources)---you must
                    also pass the ID of the associated customer.
                  type: string
                statement_descriptor:
                  description: For card charges, use `statement_descriptor_suffix` instead.
                    Otherwise, you can use this value as the complete
                    description of a charge on your customers’ statements. Must
                    contain at least one letter, maximum 22 characters.
                  type: string
                statement_descriptor_suffix:
                  description: Provides information about the charge that customers see on
                    their statements. Concatenated with the prefix (shortened
                    descriptor) or statement descriptor that’s set on the
                    account to form the complete statement descriptor. Maximum
                    22 characters for the concatenated descriptor.
                  type: string
                transfer_data:
                  description: An optional dictionary including the account to
                    automatically transfer to as part of a destination charge.
                    [See the Connect
                    documentation](https://stripe.com/docs/connect/destination-charges)
                    for details.
                  properties:
                    amount:
                      type: integer
                    destination:
                      type: string
                  required:
                    - destination
                  title: transfer_data_specs
                  type: object
                transfer_group:
                  description: A string that identifies this transaction as part of a
                    group. For details, see [Grouping
                    transactions](https://stripe.com/docs/connect/charges-transfers#grouping-transactions).
                  type: string
              type: object
        description: Body parameters for the request.
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/charge"
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
  "/v1/charges/{charge}":
    get:
      description: <p>Retrieves the details of a charge that has previously been created.
        Supply the unique charge ID that was returned from your previous
        request, and Stripe will return the corresponding charge information.
        The same information is returned when creating or refunding the
        charge.</p>
      operationId: GetChargesCharge
      parameters:
        - description: Specifies which fields in the response should be expanded.
          in: query
          name: expand
          required: false
          schema:
            type: array
            items: {}
        - description: The identifier of the charge to be retrieved.
          in: path
          name: charge
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/charge"
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
    post:
      description: <p>Updates the specified charge by setting the values of the parameters
        passed. Any parameters not provided will be left unchanged.</p>
      operationId: PostChargesCharge
      parameters:
        - in: path
          name: charge
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                customer:
                  description: The ID of an existing customer that will be associated with
                    this request. This field may only be updated if there is no
                    existing associated customer with this charge.
                  type: string
                description:
                  description: An arbitrary string which you can attach to a charge object.
                    It is displayed when in the web interface alongside the
                    charge. Note that if you use Stripe to send automatic email
                    receipts to your customers, your receipt emails will include
                    the `description` of the charge(s) that they are describing.
                  type: string
                expand:
                  description: Specifies which fields in the response should be expanded.
                  items:
                    type: string
                  type: array
                fraud_details:
                  description: A set of key-value pairs you can attach to a charge giving
                    information about its riskiness. If you believe a charge is
                    fraudulent, include a `user_report` key with a value of
                    `fraudulent`. If you believe a charge is safe, include a
                    `user_report` key with a value of `safe`. Stripe will use
                    the information you send to improve our fraud detection
                    algorithms.
                  properties:
                    user_report:
                      enum:
                        - ""
                        - fraudulent
                        - safe
                      type: string
                  required:
                    - user_report
                  title: fraud_details
                  type: object
                metadata:
                  description: Set of key-value pairs that you can attach to an object.
                    This can be useful for storing additional information about
                    the object in a structured format. Individual keys can be
                    unset by posting an empty value to them. All keys can be
                    unset by posting an empty value to `metadata`.
                  type: object
                receipt_email:
                  description: This is the email address that the receipt for this charge
                    will be sent to. If this field is updated, then a new email
                    receipt will be sent to the updated address.
                  type: string
                shipping:
                  description: Shipping information for the charge. Helps prevent fraud on
                    charges for physical goods.
                  properties:
                    address:
                      properties:
                        city:
                          type: string
                        country:
                          type: string
                        line1:
                          type: string
                        line2:
                          type: string
                        postal_code:
                          type: string
                        state:
                          type: string
                      required:
                        - line1
                      title: address
                      type: object
                    carrier:
                      type: string
                    name:
                      type: string
                    phone:
                      type: string
                    tracking_number:
                      type: string
                  required:
                    - address
                    - name
                  title: shipping
                  type: object
                transfer_group:
                  description: A string that identifies this transaction as part of a
                    group. `transfer_group` may only be provided if it has not
                    been set. See the [Connect
                    documentation](https://stripe.com/docs/connect/charges-transfers#grouping-transactions)
                    for details.
                  type: string
              type: object
        description: Body parameters for the request.
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/charge"
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
  "/v1/charges/{charge}/capture":
    post:
      description: >-
        <p>Capture the payment of an existing, uncaptured, charge. This is the
        second half of the two-step payment flow, where first you <a
        href="#create_charge">created a charge</a> with the capture option set
        to false.</p>


        <p>Uncaptured payments expire exactly seven days after they are created. If they are not captured by that point in time, they will be marked as refunded and will no longer be capturable.</p>
      operationId: PostChargesChargeCapture
      parameters:
        - in: path
          name: charge
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                amount:
                  description: The amount to capture, which must be less than or equal to
                    the original amount. Any additional amount will be
                    automatically refunded.
                  type: integer
                application_fee:
                  description: An application fee to add on to this charge. Can only be
                    used with Stripe Connect.
                  type: integer
                application_fee_amount:
                  description: An application fee amount to add on to this charge, which
                    must be less than or equal to the original amount. Can only
                    be used with Stripe Connect.
                  type: integer
                expand:
                  description: Specifies which fields in the response should be expanded.
                  items:
                    type: string
                  type: array
                receipt_email:
                  description: The email address to send this charge's receipt to. This
                    will override the previously-specified email address for
                    this charge, if one was set. Receipts will not be sent in
                    test mode.
                  type: string
                statement_descriptor:
                  description: For card charges, use `statement_descriptor_suffix` instead.
                    Otherwise, you can use this value as the complete
                    description of a charge on your customers’ statements. Must
                    contain at least one letter, maximum 22 characters.
                  type: string
                statement_descriptor_suffix:
                  description: Provides information about the charge that customers see on
                    their statements. Concatenated with the prefix (shortened
                    descriptor) or statement descriptor that’s set on the
                    account to form the complete statement descriptor. Maximum
                    22 characters for the concatenated descriptor.
                  type: string
                transfer_data:
                  description: An optional dictionary including the account to
                    automatically transfer to as part of a destination charge.
                    [See the Connect
                    documentation](https://stripe.com/docs/connect/destination-charges)
                    for details.
                  properties:
                    amount:
                      type: integer
                  title: transfer_data_specs
                  type: object
                transfer_group:
                  description: A string that identifies this transaction as part of a
                    group. `transfer_group` may only be provided if it has not
                    been set. See the [Connect
                    documentation](https://stripe.com/docs/connect/charges-transfers#grouping-transactions)
                    for details.
                  type: string
              type: object
        description: Body parameters for the request.
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/charge"
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
  "/v1/charges/{charge}/dispute":
    get:
      description: <p>Retrieve a dispute for a specified charge.</p>
      operationId: GetChargesChargeDispute
      parameters:
        - description: Specifies which fields in the response should be expanded.
          in: query
          name: expand
          required: false
          schema:
            type: array
            items: {}
        - in: path
          name: charge
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/dispute"
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
    post:
      description: ""
      operationId: PostChargesChargeDispute
      parameters:
        - in: path
          name: charge
          required: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/PostChargesChargeDisputePayload"
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/dispute"
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
  "/v1/charges/{charge}/dispute/close":
    post:
      description: ""
      operationId: PostChargesChargeDisputeClose
      parameters:
        - in: path
          name: charge
          required: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/PutAccountsAccountLogoutPayload"
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/dispute"
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
  "/v1/charges/{charge}/refund":
    post:
      description: >-
        <p>When you create a new refund, you must specify a charge on which to
        create it.</p>


        <p>Creating a new refund will refund a charge that has previously been created but not yet refunded.

        Funds will be refunded to the credit or debit card that was originally charged.</p>


        <p>You can optionally refund only part of a charge.

        You can do so multiple times, until the entire charge has been refunded.</p>


        <p>Once entirely refunded, a charge can’t be refunded again.

        This method will raise an error when called on an already-refunded charge,

        or when trying to refund more money than is left on a charge.</p>
      operationId: PostChargesChargeRefund
      parameters:
        - in: path
          name: charge
          required: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/PostChargesChargeRefundPayload"
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/charge"
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
  "/v1/charges/{charge}/refunds":
    get:
      description: <p>You can see a list of the refunds belonging to a specific charge.
        Note that the 10 most recent refunds are always available by default on
        the charge object. If you need more than those 10, you can use this API
        method and the <code>limit</code> and <code>starting_after</code>
        parameters to page through additional refunds.</p>
      operationId: GetChargesChargeRefunds
      parameters:
        - description: Specifies which fields in the response should be expanded.
          in: query
          name: expand
          required: false
          schema:
            type: array
            items: {}
        - description: The ID of the charge whose refunds will be retrieved.
          in: path
          name: charge
          required: true
          schema:
            type: string
        - description: A cursor for use in pagination. `ending_before` is an object ID that
            defines your place in the list. For instance, if you make a list
            request and receive 100 objects, starting with `obj_bar`, your
            subsequent call can include `ending_before=obj_bar` in order to
            fetch the previous page of the list.
          in: query
          name: ending_before
          required: false
          schema:
            type: string
        - description: A limit on the number of objects to be returned. Limit can range
            between 1 and 100, and the default is 10.
          in: query
          name: limit
          required: false
          schema:
            type: integer
        - description: A cursor for use in pagination. `starting_after` is an object ID
            that defines your place in the list. For instance, if you make a
            list request and receive 100 objects, ending with `obj_foo`, your
            subsequent call can include `starting_after=obj_foo` in order to
            fetch the next page of the list.
          in: query
          name: starting_after
          required: false
          schema:
            type: string
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                properties:
                  data:
                    items:
                      $ref: "#/components/schemas/refund"
                    type: array
                  has_more:
                    description: True if this list has another page of items after this one
                      that can be fetched.
                    type: boolean
                  object:
                    description: String representing the object's type. Objects of the same
                      type share the same value. Always has the value `list`.
                    enum:
                      - list
                    type: string
                  url:
                    description: The URL where this list can be accessed.
                    type: string
                required:
                  - data
                  - has_more
                  - object
                  - url
                title: RefundList
                type: object
                x-expandableFields:
                  - data
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
    post:
      description: <p>Create a refund.</p>
      operationId: PostChargesChargeRefunds
      parameters:
        - in: path
          name: charge
          required: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/PostChargesChargeRefundPayload"
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/refund"
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
  "/v1/charges/{charge}/refunds/{refund}":
    get:
      description: <p>Retrieves the details of an existing refund.</p>
      operationId: GetChargesChargeRefundsRefund
      parameters:
        - description: Specifies which fields in the response should be expanded.
          in: query
          name: expand
          required: false
          schema:
            type: array
            items: {}
        - in: path
          name: charge
          required: true
          schema:
            type: string
        - in: path
          name: refund
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/refund"
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
    post:
      description: <p>Update a specified refund.</p>
      operationId: PostChargesChargeRefundsRefund
      parameters:
        - in: path
          name: charge
          required: true
          schema:
            type: string
        - in: path
          name: refund
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                expand:
                  description: Specifies which fields in the response should be expanded.
                  items:
                    type: string
                  type: array
                metadata:
                  type: object
              type: object
        description: Body parameters for the request.
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/refund"
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
  /v1/checkout/sessions:
    post:
      description: <p>Creates a Session object.</p>
      operationId: PostCheckoutSessions
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                billing_address_collection:
                  description: Specify whether Checkout should collect the customer's
                    billing address. If set to `required`, Checkout will always
                    collect the customer's billing address. If not set or set to
                    `auto` Checkout will only collect the billing address when
                    necessary.
                  enum:
                    - auto
                    - required
                  type: string
                cancel_url:
                  description: The URL the customer will be directed to if they decide to
                    cancel payment and return to your website.
                  type: string
                client_reference_id:
                  description: >-
                    A unique string to reference the Checkout Session. This can
                    be a

                    customer ID, a cart ID, or similar, and can be used to reconcile the

                    session with your internal systems.
                  type: string
                customer:
                  description: >-
                    ID of an existing customer, if one exists. Only supported
                    for Checkout

                    Sessions in `payment` or `subscription` mode, but not Checkout Sessions

                    in `setup` mode. The email stored on the customer will be used to prefill

                    the email field on the Checkout page. If the customer changes their email

                    on the Checkout page, the Customer object will be updated with the new

                    email.

                    If blank for Checkout Sessions in `payment` or `subscription` mode,

                    Checkout will create a new customer object based on information

                    provided during the session.
                  type: string
                customer_email:
                  description: >-
                    If provided, this value will be used when the Customer
                    object is created.

                    If not provided, customers will be asked to enter their email address.

                    Use this parameter to prefill customer data if you already have an email

                    on file. To access information about the customer once a session is

                    complete, use the `customer` field.
                  type: string
                expand:
                  description: Specifies which fields in the response should be expanded.
                  items:
                    type: string
                  type: array
                line_items:
                  description: >-
                    A list of items the customer is purchasing. Use this
                    parameter for

                    one-time payments or adding invoice line items to a subscription (used

                    in conjunction with `subscription_data`).
                  items:
                    properties:
                      amount:
                        type: integer
                      currency:
                        type: string
                      description:
                        type: string
                      images:
                        items:
                          type: string
                        type: array
                      name:
                        type: string
                      quantity:
                        type: integer
                    required:
                      - amount
                      - currency
                      - name
                      - quantity
                    title: line_item_params
                    type: object
                  type: array
                locale:
                  description: The IETF language tag of the locale Checkout is displayed
                    in. If blank or `auto`, the browser's locale is used.
                    Supported values are `auto`, `da`, `de`, `en`, `es`, `fi`,
                    `fr`, `it`, `ja`, `nb`, `nl`, `pl`, `pt`, `sv`, or `zh`.
                  enum:
                    - auto
                    - da
                    - de
                    - en
                    - es
                    - fi
                    - fr
                    - it
                    - ja
                    - nb
                    - nl
                    - pl
                    - pt
                    - sv
                    - zh
                  type: string
                mode:
                  description: The mode of the Checkout Session, one of `payment`, `setup`,
                    or `subscription`.
                  enum:
                    - payment
                    - setup
                    - subscription
                  type: string
                payment_intent_data:
                  description: A subset of parameters to be passed to PaymentIntent
                    creation for Checkout Sessions in `payment` mode.
                  properties:
                    application_fee_amount:
                      type: integer
                    capture_method:
                      enum:
                        - automatic
                        - manual
                      type: string
                    description:
                      type: string
                    metadata:
                      type: object
                    on_behalf_of:
                      type: string
                    receipt_email:
                      type: string
                    setup_future_usage:
                      enum:
                        - off_session
                        - on_session
                      type: string
                    shipping:
                      properties:
                        address:
                          properties:
                            city:
                              type: string
                            country:
                              type: string
                            line1:
                              type: string
                            line2:
                              type: string
                            postal_code:
                              type: string
                            state:
                              type: string
                          required:
                            - line1
                          title: address
                          type: object
                        carrier:
                          type: string
                        name:
                          type: string
                        phone:
                          type: string
                        tracking_number:
                          type: string
                      required:
                        - address
                        - name
                      title: shipping
                      type: object
                    statement_descriptor:
                      type: string
                    transfer_data:
                      properties:
                        destination:
                          type: string
                      required:
                        - destination
                      title: transfer_data_params
                      type: object
                  title: payment_intent_data_params
                  type: object
                payment_method_types:
                  description: >-
                    A list of the types of payment methods (e.g. card) this
                    Checkout

                    Session is allowed to accept. The only supported value today is `card`.
                  items:
                    enum:
                      - card
                    type: string
                  type: array
                setup_intent_data:
                  description: A subset of parameters to be passed to SetupIntent creation
                    for Checkout Sessions in `setup` mode.
                  properties:
                    description:
                      type: string
                    metadata:
                      type: object
                    on_behalf_of:
                      type: string
                  title: setup_intent_data_param
                  type: object
                submit_type:
                  description: >-
                    Describes the type of transaction being performed by
                    Checkout in order to customize

                    relevant text on the page, such as the submit button. `submit_type` can only be

                    specified on Checkout Sessions in `payment` mode, but not Checkout Sessions

                    in `subscription` or `setup` mode.

                    Supported values are `auto`, `book`, `donate`, or `pay`.
                  enum:
                    - auto
                    - book
                    - donate
                    - pay
                  type: string
                subscription_data:
                  description: A subset of parameters to be passed to subscription creation
                    for Checkout Sessions in `subscription` mode.
                  properties:
                    application_fee_percent:
                      type: number
                    items:
                      items:
                        properties:
                          plan:
                            type: string
                          quantity:
                            type: integer
                        required:
                          - plan
                        title: subscription_data_item_param
                        type: object
                      type: array
                    metadata:
                      type: object
                    trial_end:
                      type: integer
                    trial_period_days:
                      type: integer
                  required:
                    - items
                  title: subscription_data_params
                  type: object
                success_url:
                  description: >-
                    The URL to which Stripe should send customers when payment
                    or setup

                    is complete.

                    If you’d like access to the Checkout Session for the successful

                    payment, read more about it in our guide on [fulfilling your payments

                    with webhooks](/docs/payments/checkout/fulfillment#webhooks).
                  type: string
              required:
                - cancel_url
                - payment_method_types
                - success_url
              type: object
        description: Body parameters for the request.
        required: true
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/checkout.session"
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
  "/v1/checkout/sessions/{session}":
    get:
      description: <p>Retrieves a Session object.</p>
      operationId: GetCheckoutSessionsSession
      parameters:
        - description: Specifies which fields in the response should be expanded.
          in: query
          name: expand
          required: false
          schema:
            type: array
            items: {}
        - description: The ID of the Checkout Session.
          in: path
          name: session
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/checkout.session"
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
  /v1/country_specs:
    get:
      description: <p>Lists all Country Spec objects available in the API.</p>
      operationId: GetCountrySpecs
      parameters:
        - description: Specifies which fields in the response should be expanded.
          in: query
          name: expand
          required: false
          schema:
            type: array
            items: {}
        - description: A cursor for use in pagination. `ending_before` is an object ID that
            defines your place in the list. For instance, if you make a list
            request and receive 100 objects, starting with `obj_bar`, your
            subsequent call can include `ending_before=obj_bar` in order to
            fetch the previous page of the list.
          in: query
          name: ending_before
          required: false
          schema:
            type: string
        - description: A limit on the number of objects to be returned. Limit can range
            between 1 and 100, and the default is 10.
          in: query
          name: limit
          required: false
          schema:
            type: integer
        - description: A cursor for use in pagination. `starting_after` is an object ID
            that defines your place in the list. For instance, if you make a
            list request and receive 100 objects, ending with `obj_foo`, your
            subsequent call can include `starting_after=obj_foo` in order to
            fetch the next page of the list.
          in: query
          name: starting_after
          required: false
          schema:
            type: string
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                properties:
                  data:
                    items:
                      $ref: "#/components/schemas/country_spec"
                    type: array
                  has_more:
                    description: True if this list has another page of items after this one
                      that can be fetched.
                    type: boolean
                  object:
                    description: String representing the object's type. Objects of the same
                      type share the same value. Always has the value `list`.
                    enum:
                      - list
                    type: string
                  url:
                    description: The URL where this list can be accessed.
                    type: string
                required:
                  - data
                  - has_more
                  - object
                  - url
                type: object
                x-expandableFields:
                  - data
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
  "/v1/country_specs/{country}":
    get:
      description: <p>Returns a Country Spec for a given Country code.</p>
      operationId: GetCountrySpecsCountry
      parameters:
        - description: Specifies which fields in the response should be expanded.
          in: query
          name: expand
          required: false
          schema:
            type: array
            items: {}
        - description: An ISO 3166-1 alpha-2 country code. Available country codes can be
            listed with the [List Country
            Specs](https://stripe.com/docs/api#list_country_specs) endpoint.
          in: path
          name: country
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/country_spec"
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
  /v1/coupons:
    get:
      description: <p>Returns a list of your coupons.</p>
      operationId: GetCoupons
      parameters:
        - description: Specifies which fields in the response should be expanded.
          in: query
          name: expand
          required: false
          schema:
            type: array
            items: {}
        - description: A filter on the list, based on the object `created` field. The value
            can be a string with an integer Unix timestamp, or it can be a
            dictionary with a number of different query options.
          in: query
          name: created
          required: false
          schema:
            type: integer
        - description: A cursor for use in pagination. `ending_before` is an object ID that
            defines your place in the list. For instance, if you make a list
            request and receive 100 objects, starting with `obj_bar`, your
            subsequent call can include `ending_before=obj_bar` in order to
            fetch the previous page of the list.
          in: query
          name: ending_before
          required: false
          schema:
            type: string
        - description: A limit on the number of objects to be returned. Limit can range
            between 1 and 100, and the default is 10.
          in: query
          name: limit
          required: false
          schema:
            type: integer
        - description: A cursor for use in pagination. `starting_after` is an object ID
            that defines your place in the list. For instance, if you make a
            list request and receive 100 objects, ending with `obj_foo`, your
            subsequent call can include `starting_after=obj_foo` in order to
            fetch the next page of the list.
          in: query
          name: starting_after
          required: false
          schema:
            type: string
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                properties:
                  data:
                    items:
                      $ref: "#/components/schemas/coupon"
                    type: array
                  has_more:
                    description: True if this list has another page of items after this one
                      that can be fetched.
                    type: boolean
                  object:
                    description: String representing the object's type. Objects of the same
                      type share the same value. Always has the value `list`.
                    enum:
                      - list
                    type: string
                  url:
                    description: The URL where this list can be accessed.
                    type: string
                required:
                  - data
                  - has_more
                  - object
                  - url
                type: object
                x-expandableFields:
                  - data
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
    post:
      description: >-
        <p>You can create coupons easily via the <a
        href="https://dashboard.stripe.com/coupons">coupon management</a> page
        of the Stripe dashboard. Coupon creation is also accessible via the API
        if you need to create coupons on the fly.</p>


        <p>A coupon has either a <code>percent_off</code> or an <code>amount_off</code> and <code>currency</code>. If you set an <code>amount_off</code>, that amount will be subtracted from any invoice’s subtotal. For example, an invoice with a subtotal of <currency>100</currency> will have a final total of <currency>0</currency> if a coupon with an <code>amount_off</code> of <amount>200</amount> is applied to it and an invoice with a subtotal of <currency>300</currency> will have a final total of <currency>100</currency> if a coupon with an <code>amount_off</code> of <amount>200</amount> is applied to it.</p>
      operationId: PostCoupons
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                amount_off:
                  description: A positive integer representing the amount to subtract from
                    an invoice total (required if `percent_off` is not passed).
                  type: integer
                currency:
                  description: Three-letter [ISO code for the
                    currency](https://stripe.com/docs/currencies) of the
                    `amount_off` parameter (required if `amount_off` is passed).
                  type: string
                duration:
                  description: Specifies how long the discount will be in effect. Can be
                    `forever`, `once`, or `repeating`.
                  enum:
                    - forever
                    - once
                    - repeating
                  type: string
                duration_in_months:
                  description: Required only if `duration` is `repeating`, in which case it
                    must be a positive integer that specifies the number of
                    months the discount will be in effect.
                  type: integer
                expand:
                  description: Specifies which fields in the response should be expanded.
                  items:
                    type: string
                  type: array
                id:
                  description: Unique string of your choice that will be used to identify
                    this coupon when applying it to a customer. This is often a
                    specific code you'll give to your customer to use when
                    signing up (e.g., `FALL25OFF`). If you don't want to specify
                    a particular code, you can leave the ID blank and we'll
                    generate a random code for you.
                  type: string
                max_redemptions:
                  description: A positive integer specifying the number of times the coupon
                    can be redeemed before it's no longer valid. For example,
                    you might have a 50% off coupon that the first 20 readers of
                    your blog can use.
                  type: integer
                metadata:
                  description: A set of key-value pairs that you can attach to a coupon
                    object. It can be useful for storing additional information
                    about the coupon in a structured format.
                  type: object
                name:
                  description: Name of the coupon displayed to customers on, for instance
                    invoices, or receipts. By default the `id` is shown if
                    `name` is not set.
                  type: string
                percent_off:
                  description: A positive float larger than 0, and smaller or equal to 100,
                    that represents the discount the coupon will apply (required
                    if `amount_off` is not passed).
                  type: number
                redeem_by:
                  description: Unix timestamp specifying the last time at which the coupon
                    can be redeemed. After the redeem_by date, the coupon can no
                    longer be applied to new customers.
                  type: integer
              required:
                - duration
              type: object
        description: Body parameters for the request.
        required: true
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/coupon"
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
  "/v1/coupons/{coupon}":
    delete:
      description: <p>You can delete coupons via the <a
        href="https://dashboard.stripe.com/coupons">coupon management</a> page
        of the Stripe dashboard. However, deleting a coupon does not affect any
        customers who have already applied the coupon; it means that new
        customers can’t redeem the coupon. You can also delete coupons via the
        API.</p>
      operationId: DeleteCouponsCoupon
      parameters:
        - description: The identifier of the coupon to be deleted.
          in: path
          name: coupon
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/deleted_coupon"
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
    get:
      description: <p>Retrieves the coupon with the given ID.</p>
      operationId: GetCouponsCoupon
      parameters:
        - description: Specifies which fields in the response should be expanded.
          in: query
          name: expand
          required: false
          schema:
            type: array
            items: {}
        - description: The ID of the desired coupon.
          in: path
          name: coupon
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/coupon"
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
    post:
      description: <p>Updates the metadata of a coupon. Other coupon details (currency,
        duration, amount_off) are, by design, not editable.</p>
      operationId: PostCouponsCoupon
      parameters:
        - description: The identifier of the coupon to be updated.
          in: path
          name: coupon
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                expand:
                  description: Specifies which fields in the response should be expanded.
                  items:
                    type: string
                  type: array
                metadata:
                  description: A set of key-value pairs that you can attach to a coupon
                    object. It can be useful for storing additional information
                    about the coupon in a structured format.
                  type: object
                name:
                  description: Name of the coupon displayed to customers on, for instance
                    invoices, or receipts. By default the `id` is shown if
                    `name` is not set.
                  type: string
              type: object
        description: Body parameters for the request.
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/coupon"
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
  /v1/credit_notes:
    get:
      description: <p>Returns a list of credit notes.</p>
      operationId: GetCreditNotes
      parameters:
        - description: Specifies which fields in the response should be expanded.
          in: query
          name: expand
          required: false
          schema:
            type: array
            items: {}
        - description: Only return credit notes for the customer specified by this customer
            ID.
          in: query
          name: customer
          required: false
          schema:
            type: string
        - description: A cursor for use in pagination. `ending_before` is an object ID that
            defines your place in the list. For instance, if you make a list
            request and receive 100 objects, starting with `obj_bar`, your
            subsequent call can include `ending_before=obj_bar` in order to
            fetch the previous page of the list.
          in: query
          name: ending_before
          required: false
          schema:
            type: string
        - description: Only return credit notes for the invoice specified by this invoice
            ID.
          in: query
          name: invoice
          required: false
          schema:
            type: string
        - description: A limit on the number of objects to be returned. Limit can range
            between 1 and 100, and the default is 10.
          in: query
          name: limit
          required: false
          schema:
            type: integer
        - description: A cursor for use in pagination. `starting_after` is an object ID
            that defines your place in the list. For instance, if you make a
            list request and receive 100 objects, ending with `obj_foo`, your
            subsequent call can include `starting_after=obj_foo` in order to
            fetch the next page of the list.
          in: query
          name: starting_after
          required: false
          schema:
            type: string
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                properties:
                  data:
                    items:
                      $ref: "#/components/schemas/credit_note"
                    type: array
                  has_more:
                    description: True if this list has another page of items after this one
                      that can be fetched.
                    type: boolean
                  object:
                    description: String representing the object's type. Objects of the same
                      type share the same value. Always has the value `list`.
                    enum:
                      - list
                    type: string
                  url:
                    description: The URL where this list can be accessed.
                    type: string
                required:
                  - data
                  - has_more
                  - object
                  - url
                title: CreditNotesList
                type: object
                x-expandableFields:
                  - data
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
    post:
      description: >-
        <p>Issue a credit note to adjust the amount of a finalized invoice. For
        a <code>status=open</code> invoice, a credit note reduces

        its <code>amount_due</code>. For a <code>status=paid</code> invoice, a credit note does not affect its <code>amount_due</code>. Instead, it can result

        in any combination of the following:</p>


        <ul>
         <li>Refund: create a new refund (using <code>refund_amount</code>) or link an existing refund (using <code>refund</code>).</li>
         <li>Customer balance credit: credit the customer’s balance (using <code>credit_amount</code>) which will be automatically applied to their next invoice when it’s finalized.</li>
         <li>Outside of Stripe credit: any positive value from the result of <code>amount - refund_amount - credit_amount</code> is represented as an “outside of Stripe” credit.</li>
        </ul>


        <p>You may issue multiple credit notes for an invoice. Each credit note will increment the invoice’s <code>pre_payment_credit_notes_amount</code>

        or <code>post_payment_credit_notes_amount</code> depending on its <code>status</code> at the time of credit note creation.</p>
      operationId: PostCreditNotes
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                amount:
                  description: The integer amount in **%s** representing the total amount
                    of the credit note.
                  type: integer
                credit_amount:
                  description: The integer amount in **%s** representing the amount to
                    credit the customer's balance, which will be automatically
                    applied to their next invoice.
                  type: integer
                expand:
                  description: Specifies which fields in the response should be expanded.
                  items:
                    type: string
                  type: array
                invoice:
                  description: ID of the invoice.
                  type: string
                memo:
                  description: The credit note's memo appears on the credit note PDF.
                  type: string
                metadata:
                  description: Set of key-value pairs that you can attach to an object.
                    This can be useful for storing additional information about
                    the object in a structured format. Individual keys can be
                    unset by posting an empty value to them. All keys can be
                    unset by posting an empty value to `metadata`.
                  type: object
                reason:
                  description: Reason for issuing this credit note, one of `duplicate`,
                    `fraudulent`, `order_change`, or `product_unsatisfactory`
                  enum:
                    - duplicate
                    - fraudulent
                    - order_change
                    - product_unsatisfactory
                  type: string
                refund:
                  description: ID of an existing refund to link this credit note to.
                  type: string
                refund_amount:
                  description: The integer amount in **%s** representing the amount to
                    refund. If set, a refund will be created for the charge
                    associated with the invoice.
                  type: integer
              required:
                - invoice
              type: object
        description: Body parameters for the request.
        required: true
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/credit_note"
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
  "/v1/credit_notes/{id}":
    get:
      description: <p>Retrieves the credit note object with the given identifier.</p>
      operationId: GetCreditNotesId
      parameters:
        - description: Specifies which fields in the response should be expanded.
          in: query
          name: expand
          required: false
          schema:
            type: array
            items: {}
        - description: ID of the credit note object to retrieve.
          in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/credit_note"
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
    post:
      description: <p>Updates an existing credit note.</p>
      operationId: PostCreditNotesId
      parameters:
        - description: ID of the credit note object to update.
          in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                expand:
                  description: Specifies which fields in the response should be expanded.
                  items:
                    type: string
                  type: array
                memo:
                  description: Credit note memo.
                  type: string
                metadata:
                  description: Set of key-value pairs that you can attach to an object.
                    This can be useful for storing additional information about
                    the object in a structured format. Individual keys can be
                    unset by posting an empty value to them. All keys can be
                    unset by posting an empty value to `metadata`.
                  type: object
              type: object
        description: Body parameters for the request.
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/credit_note"
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
  "/v1/credit_notes/{id}/void":
    post:
      description: <p>Marks a credit note as void. Learn more about <a
        href="/docs/billing/invoices/credit-notes#voiding">voiding credit
        notes</a>.</p>
      operationId: PostCreditNotesIdVoid
      parameters:
        - description: ID of the credit note object to void.
          in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/PutAccountsAccountLogoutPayload"
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/credit_note"
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
  /v1/customers:
    get:
      description: <p>Returns a list of your customers. The customers are returned sorted
        by creation date, with the most recent customers appearing first.</p>
      operationId: GetCustomers
      parameters:
        - description: Specifies which fields in the response should be expanded.
          in: query
          name: expand
          required: false
          schema:
            type: array
            items: {}
        - in: query
          name: created
          required: false
          schema:
            type: integer
        - description: A filter on the list based on the customer's `email` field. The
            value must be a string.
          in: query
          name: email
          required: false
          schema:
            type: string
        - description: A cursor for use in pagination. `ending_before` is an object ID that
            defines your place in the list. For instance, if you make a list
            request and receive 100 objects, starting with `obj_bar`, your
            subsequent call can include `ending_before=obj_bar` in order to
            fetch the previous page of the list.
          in: query
          name: ending_before
          required: false
          schema:
            type: string
        - description: A limit on the number of objects to be returned. Limit can range
            between 1 and 100, and the default is 10.
          in: query
          name: limit
          required: false
          schema:
            type: integer
        - description: A cursor for use in pagination. `starting_after` is an object ID
            that defines your place in the list. For instance, if you make a
            list request and receive 100 objects, ending with `obj_foo`, your
            subsequent call can include `starting_after=obj_foo` in order to
            fetch the next page of the list.
          in: query
          name: starting_after
          required: false
          schema:
            type: string
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                properties:
                  data:
                    items:
                      $ref: "#/components/schemas/customer"
                    type: array
                  has_more:
                    description: True if this list has another page of items after this one
                      that can be fetched.
                    type: boolean
                  object:
                    description: String representing the object's type. Objects of the same
                      type share the same value. Always has the value `list`.
                    enum:
                      - list
                    type: string
                  url:
                    description: The URL where this list can be accessed.
                    type: string
                required:
                  - data
                  - has_more
                  - object
                  - url
                type: object
                x-expandableFields:
                  - data
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
    post:
      description: <p>Creates a new customer object.</p>
      operationId: PostCustomers
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                account_balance:
                  description: This field has been renamed to `balance` and will be removed
                    in a future API version.
                  type: integer
                address:
                  description: The customer's address.
                balance:
                  description: An integer amount in %s that represents the customer's
                    current balance, which affect the customer's future
                    invoices. A negative amount represents a credit that
                    decreases the amount due on an invoice; a positive amount
                    increases the amount due on an invoice.
                  type: integer
                coupon:
                  description: The code of the coupon to apply to this subscription. A
                    coupon applied to a subscription will only affect invoices
                    created for that particular subscription.
                  type: string
                description:
                  description: An arbitrary string that you can attach to a customer
                    object. It is displayed alongside the customer in the
                    dashboard.
                  type: string
                email:
                  description: Customer's email address. It's displayed alongside the
                    customer in your dashboard and can be useful for searching
                    and tracking. This may be up to *512 characters*.
                  type: string
                expand:
                  description: Specifies which fields in the response should be expanded.
                  items:
                    type: string
                  type: array
                invoice_prefix:
                  description: The prefix for the customer used to generate unique invoice
                    numbers. Must be 3–12 uppercase letters or numbers.
                  type: string
                invoice_settings:
                  description: Default invoice settings for this customer.
                  properties:
                    custom_fields:
                      items:
                        properties:
                          name:
                            type: string
                          value:
                            type: string
                        required:
                          - name
                          - value
                        title: custom_field_params
                        type: object
                    default_payment_method:
                      type: string
                    footer:
                      type: string
                  title: customer_param
                  type: object
                metadata:
                  description: A set of key-value pairs that you can attach to a customer
                    object. It can be useful for storing additional information
                    about the customer in a structured format.
                  type: object
                name:
                  description: The customer's full name or business name.
                  type: string
                payment_method:
                  description: ID of the PaymentMethod to attach to the customer
                  type: string
                phone:
                  description: The customer's phone number.
                  type: string
                preferred_locales:
                  description: Customer's preferred languages, ordered by preference.
                  items:
                    type: string
                  type: array
                shipping:
                  description: The customer's shipping information. Appears on invoices
                    emailed to this customer.
                source:
                  description: >-
                    The source can be a
                    [Token](https://stripe.com/docs/api#tokens) or a
                    [Source](https://stripe.com/docs/api#sources), as returned
                    by [Elements](https://stripe.com/docs/elements). You must
                    provide a source if the customer does not already have a
                    valid source attached, and you are subscribing the customer
                    to be charged automatically for a plan that is not free.


                    Passing `source` will create a new source object, make it the customer default source, and delete the old customer default if one exists. If you want to add an additional source, instead use the [card creation API](https://stripe.com/docs/api#create_card) to add the card and then the [customer update API](https://stripe.com/docs/api#update_customer) to set it as the default.


                    Whenever you attach a card to a customer, Stripe will automatically validate the card.
                  type: string
                tax_exempt:
                  description: The customer's tax exemption. One of `none`, `exempt`, or
                    `reverse`.
                  enum:
                    - ""
                    - exempt
                    - none
                    - reverse
                  type: string
                tax_id_data:
                  description: The customer's tax IDs.
                  items:
                    properties:
                      type:
                        enum:
                          - au_abn
                          - eu_vat
                          - in_gst
                          - no_vat
                          - nz_gst
                        type: string
                      value:
                        type: string
                    required:
                      - type
                      - value
                    title: data_params
                    type: object
                  type: array
                tax_info:
                  description: The customer's tax information. Appears on invoices emailed
                    to this customer. This parameter has been deprecated and
                    will be removed in a future API version, for further
                    information view the [migration
                    guide](https://stripe.com/docs/billing/migration/taxes#moving-from-taxinfo-to-customer-tax-ids).
                  properties:
                    tax_id:
                      type: string
                    type:
                      enum:
                        - vat
                      type: string
                  required:
                    - tax_id
                    - type
                  title: tax_info_param
                  type: object
              type: object
        description: Body parameters for the request.
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/customer"
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
  "/v1/customers/{customer}":
    delete:
      description: <p>Permanently deletes a customer. It cannot be undone. Also immediately
        cancels any active subscriptions on the customer.</p>
      operationId: DeleteCustomersCustomer
      parameters:
        - description: The identifier of the customer to be deleted.
          in: path
          name: customer
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/deleted_customer"
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
    get:
      description: <p>Retrieves the details of an existing customer. You need only supply
        the unique customer identifier that was returned upon customer
        creation.</p>
      operationId: GetCustomersCustomer
      parameters:
        - description: Specifies which fields in the response should be expanded.
          in: query
          name: expand
          required: false
          schema:
            type: array
            items: {}
        - description: The identifier of the customer to be retrieved.
          in: path
          name: customer
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/customer"
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
    post:
      description: >-
        <p>Updates the specified customer by setting the values of the
        parameters passed. Any parameters not provided will be left unchanged.
        For example, if you pass the <strong>source</strong> parameter, that
        becomes the customer’s active source (e.g., a card) to be used for all
        charges in the future. When you update a customer to a new valid card
        source by passing the <strong>source</strong> parameter: for each of the
        customer’s current subscriptions, if the subscription bills
        automatically and is in the <code>past_due</code> state, then the latest
        open invoice for the subscription with automatic collection enabled will
        be retried. This retry will not count as an automatic retry, and will
        not affect the next regularly scheduled payment for the invoice.
        Changing the <strong>default_source</strong> for a customer will not
        trigger this behavior.</p>


        <p>This request accepts mostly the same arguments as the customer creation call.</p>
      operationId: PostCustomersCustomer
      parameters:
        - description: The identifier of the customer to subscribe.
          in: path
          name: customer
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                account_balance:
                  description: This field has been renamed to `balance` and will be removed
                    in a future API version.
                  type: integer
                address:
                  description: The customer's address.
                balance:
                  description: An integer amount in %s that represents the customer's
                    current balance, which affect the customer's future
                    invoices. A negative amount represents a credit that
                    decreases the amount due on an invoice; a positive amount
                    increases the amount due on an invoice.
                  type: integer
                bank_account:
                  description: Either a token, like the ones returned by
                    [Stripe.js](https://stripe.com/docs/stripe.js), or a
                    dictionary containing a user's bank account details.
                card:
                  description: A token, like the ones returned by
                    [Stripe.js](https://stripe.com/docs/stripe.js).
                coupon:
                  description: The code of the coupon to apply to this subscription. A
                    coupon applied to a subscription will only affect invoices
                    created for that particular subscription.
                  type: string
                default_alipay_account:
                  description: ID of Alipay account to make the customer's new default for
                    invoice payments.
                  type: string
                default_bank_account:
                  description: ID of bank account to make the customer's new default for
                    invoice payments.
                  type: string
                default_card:
                  description: ID of card to make the customer's new default for invoice
                    payments.
                  type: string
                default_source:
                  description: Provide the ID of a payment source already attached to this
                    customer to make it this customer's default payment source.
                    If you want to add a new payment source and make it the
                    default, see the
                    [source](https://stripe.com/docs/api/customers/update#update_customer-source)
                    property.
                  type: string
                description:
                  description: An arbitrary string that you can attach to a customer
                    object. It is displayed alongside the customer in the
                    dashboard.
                  type: string
                email:
                  description: Customer's email address. It's displayed alongside the
                    customer in your dashboard and can be useful for searching
                    and tracking. This may be up to *512 characters*.
                  type: string
                expand:
                  description: Specifies which fields in the response should be expanded.
                  items:
                    type: string
                  type: array
                invoice_prefix:
                  description: The prefix for the customer used to generate unique invoice
                    numbers. Must be 3–12 uppercase letters or numbers.
                  type: string
                invoice_settings:
                  description: Default invoice settings for this customer.
                  properties:
                    custom_fields:
                      items:
                        properties:
                          name:
                            type: string
                          value:
                            type: string
                        required:
                          - name
                          - value
                        title: custom_field_params
                        type: object
                    default_payment_method:
                      type: string
                    footer:
                      type: string
                  title: customer_param
                  type: object
                metadata:
                  description: A set of key-value pairs that you can attach to a customer
                    object. It can be useful for storing additional information
                    about the customer in a structured format.
                  type: object
                name:
                  description: The customer's full name or business name.
                  type: string
                phone:
                  description: The customer's phone number.
                  type: string
                preferred_locales:
                  description: Customer's preferred languages, ordered by preference.
                  items:
                    type: string
                  type: array
                shipping:
                  description: The customer's shipping information. Appears on invoices
                    emailed to this customer.
                source:
                  description: >-
                    The source can be a
                    [Token](https://stripe.com/docs/api#tokens) or a
                    [Source](https://stripe.com/docs/api#sources), as returned
                    by [Elements](https://stripe.com/docs/elements). You must
                    provide a source if the customer does not already have a
                    valid source attached, and you are subscribing the customer
                    to be charged automatically for a plan that is not free.


                    Passing `source` will create a new source object, make it the customer default source, and delete the old customer default if one exists. If you want to add an additional source, instead use the [card creation API](https://stripe.com/docs/api#create_card) to add the card and then the [customer update API](https://stripe.com/docs/api#update_customer) to set it as the default.


                    Whenever you attach a card to a customer, Stripe will automatically validate the card.
                  type: string
                tax_exempt:
                  description: The customer's tax exemption. One of `none`, `exempt`, or
                    `reverse`.
                  enum:
                    - ""
                    - exempt
                    - none
                    - reverse
                  type: string
                tax_info:
                  description: The customer's tax information. Appears on invoices emailed
                    to this customer. This parameter has been deprecated and
                    will be removed in a future API version, for further
                    information view the [migration
                    guide](https://stripe.com/docs/billing/migration/taxes#moving-from-taxinfo-to-customer-tax-ids).
                  properties:
                    tax_id:
                      type: string
                    type:
                      enum:
                        - vat
                      type: string
                  required:
                    - tax_id
                    - type
                  title: tax_info_param
                  type: object
                trial_end:
                  description: Unix timestamp representing the end of the trial period the
                    customer will get before being charged for the first time.
                    This will always overwrite any trials that might apply via a
                    subscribed plan. If set, trial_end will override the default
                    trial period of the plan the customer is being subscribed
                    to. The special value `now` can be provided to end the
                    customer's trial immediately. Can be at most two years from
                    `billing_cycle_anchor`.
              type: object
        description: Body parameters for the request.
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/customer"
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
  "/v1/customers/{customer}/balance_transactions":
    get:
      description: <p>Returns a list of transactions that updated the customer’s <a
        href="/docs/api/customers/object#customer_object-balance"><code>balance</code></a>.</p>
      operationId: GetCustomersCustomerBalanceTransactions
      parameters:
        - description: Specifies which fields in the response should be expanded.
          in: query
          name: expand
          required: false
          schema:
            type: array
            items: {}
        - description: The customer to retrieve transactions for.
          in: path
          name: customer
          required: true
          schema:
            type: string
        - description: A cursor for use in pagination. `ending_before` is an object ID that
            defines your place in the list. For instance, if you make a list
            request and receive 100 objects, starting with `obj_bar`, your
            subsequent call can include `ending_before=obj_bar` in order to
            fetch the previous page of the list.
          in: query
          name: ending_before
          required: false
          schema:
            type: string
        - description: A limit on the number of objects to be returned. Limit can range
            between 1 and 100, and the default is 10.
          in: query
          name: limit
          required: false
          schema:
            type: integer
        - description: A cursor for use in pagination. `starting_after` is an object ID
            that defines your place in the list. For instance, if you make a
            list request and receive 100 objects, ending with `obj_foo`, your
            subsequent call can include `starting_after=obj_foo` in order to
            fetch the next page of the list.
          in: query
          name: starting_after
          required: false
          schema:
            type: string
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                properties:
                  data:
                    items:
                      $ref: "#/components/schemas/customer_balance_transaction"
                    type: array
                  has_more:
                    description: True if this list has another page of items after this one
                      that can be fetched.
                    type: boolean
                  object:
                    description: String representing the object's type. Objects of the same
                      type share the same value. Always has the value `list`.
                    enum:
                      - list
                    type: string
                  url:
                    description: The URL where this list can be accessed.
                    type: string
                required:
                  - data
                  - has_more
                  - object
                  - url
                title: CustomerBalanceTransactionList
                type: object
                x-expandableFields:
                  - data
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
    post:
      description: <p>Creates an immutable transaction that updates the customer’s <a
        href="/docs/api/customers/object#customer_object-balance"><code>balance</code></a>.</p>
      operationId: PostCustomersCustomerBalanceTransactions
      parameters:
        - description: The customer the transaction belongs to.
          in: path
          name: customer
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                amount:
                  description: The integer amount in **%s** to apply to the customer's
                    balance. Pass a negative amount to credit the customer's
                    balance, and pass in a positive amount to debit the
                    customer's balance.
                  type: integer
                currency:
                  description: Three-letter [ISO currency
                    code](https://www.iso.org/iso-4217-currency-codes.html), in
                    lowercase. Must be a [supported
                    currency](https://stripe.com/docs/currencies). If the
                    customer's
                    [`currency`](https://stripe.com/docs/api/customers/object#customer_object-currency)
                    is set, this value must match it. If the customer's
                    `currency` is not set, it will be updated to this value.
                  type: string
                description:
                  description: An arbitrary string attached to the object. Often useful for
                    displaying to users.
                  type: string
                expand:
                  description: Specifies which fields in the response should be expanded.
                  items:
                    type: string
                  type: array
                metadata:
                  description: Set of key-value pairs that you can attach to an object.
                    This can be useful for storing additional information about
                    the object in a structured format.
                  type: object
              required:
                - amount
                - currency
              type: object
        description: Body parameters for the request.
        required: true
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/customer_balance_transaction"
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
  "/v1/customers/{customer}/balance_transactions/{transaction}":
    get:
      description: <p>Retrieves a specific transaction that updated the customer’s <a
        href="/docs/api/customers/object#customer_object-balance"><code>balance</code></a>.</p>
      operationId: GetCustomersCustomerBalanceTransactionsTransaction
      parameters:
        - description: Specifies which fields in the response should be expanded.
          in: query
          name: expand
          required: false
          schema:
            type: array
            items: {}
        - description: The customer the transaction belongs to.
          in: path
          name: customer
          required: true
          schema:
            type: string
        - description: The transaction to retrieve.
          in: path
          name: transaction
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/customer_balance_transaction"
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
    post:
      description: <p>Most customer balance transaction fields are immutable, but you may
        update its <code>description</code> and <code>metadata</code>.</p>
      operationId: PostCustomersCustomerBalanceTransactionsTransaction
      parameters:
        - description: The customer the transaction belongs to.
          in: path
          name: customer
          required: true
          schema:
            type: string
        - description: The transaction to update.
          in: path
          name: transaction
          required: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/PostCustomersCustomerBalanceTransactionsT\
          ransactionPayload"
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/customer_balance_transaction"
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
  "/v1/customers/{customer}/bank_accounts":
    get:
      deprecated: true
      description: <p>You can see a list of the bank accounts belonging to a Customer. Note
        that the 10 most recent sources are always available by default on the
        Customer. If you need more than those 10, you can use this API method
        and the <code>limit</code> and <code>starting_after</code> parameters to
        page through additional bank accounts.</p>
      operationId: GetCustomersCustomerBankAccounts
      parameters:
        - description: Specifies which fields in the response should be expanded.
          in: query
          name: expand
          required: false
          schema:
            type: array
            items: {}
        - description: The ID of the customer whose bank accounts will be retrieved.
          in: path
          name: customer
          required: true
          schema:
            type: string
        - description: A cursor for use in pagination. `ending_before` is an object ID that
            defines your place in the list. For instance, if you make a list
            request and receive 100 objects, starting with `obj_bar`, your
            subsequent call can include `ending_before=obj_bar` in order to
            fetch the previous page of the list.
          in: query
          name: ending_before
          required: false
          schema:
            type: string
        - description: A limit on the number of objects to be returned. Limit can range
            between 1 and 100, and the default is 10.
          in: query
          name: limit
          required: false
          schema:
            type: integer
        - description: A cursor for use in pagination. `starting_after` is an object ID
            that defines your place in the list. For instance, if you make a
            list request and receive 100 objects, ending with `obj_foo`, your
            subsequent call can include `starting_after=obj_foo` in order to
            fetch the next page of the list.
          in: query
          name: starting_after
          required: false
          schema:
            type: string
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                properties:
                  data:
                    items:
                      $ref: "#/components/schemas/bank_account"
                    type: array
                  has_more:
                    description: True if this list has another page of items after this one
                      that can be fetched.
                    type: boolean
                  object:
                    description: String representing the object's type. Objects of the same
                      type share the same value. Always has the value `list`.
                    enum:
                      - list
                    type: string
                  url:
                    description: The URL where this list can be accessed.
                    type: string
                required:
                  - data
                  - has_more
                  - object
                  - url
                title: BankAccountList
                type: object
                x-expandableFields:
                  - data
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
    post:
      description: >-
        <p>When you create a new credit card, you must specify a customer or
        recipient on which to create it.</p>


        <p>If the card’s owner has no default card, then the new card will become the default.

        However, if the owner already has a default, then it will not change.

        To change the default, you should either <a href="/docs/api#update_customer">update the customer</a> to have a new <code>default_source</code>,

        or <a href="/docs/api#update_recipient">update the recipient</a> to have a new <code>default_card</code>.</p>
      operationId: PostCustomersCustomerBankAccounts
      parameters:
        - in: path
          name: customer
          required: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/PostCustomersCustomerBankAccountsPayload"
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/payment_source"
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
  "/v1/customers/{customer}/bank_accounts/{id}":
    delete:
      description: <p>Delete a specified source for a given customer.</p>
      operationId: DeleteCustomersCustomerBankAccountsId
      parameters:
        - in: path
          name: customer
          required: true
          schema:
            type: string
        - description: The ID of the source to be deleted.
          in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/deleted_payment_source"
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
    get:
      deprecated: true
      description: <p>By default, you can see the 10 most recent sources stored on a
        Customer directly on the object, but you can also retrieve details about
        a specific bank account stored on the Stripe account.</p>
      operationId: GetCustomersCustomerBankAccountsId
      parameters:
        - description: Specifies which fields in the response should be expanded.
          in: query
          name: expand
          required: false
          schema:
            type: array
            items: {}
        - in: path
          name: customer
          required: true
          schema:
            type: string
        - description: ID of bank account to retrieve.
          in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/bank_account"
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
    post:
      description: <p>Update a specified source for a given customer.</p>
      operationId: PostCustomersCustomerBankAccountsId
      parameters:
        - in: path
          name: customer
          required: true
          schema:
            type: string
        - description: The ID of the card to be updated.
          in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/PostCustomersCustomerBankAccountsIdPayload"
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/bank_account"
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
  "/v1/customers/{customer}/bank_accounts/{id}/verify":
    post:
      description: <p>Verify a specified bank account for a given customer.</p>
      operationId: PostCustomersCustomerBankAccountsIdVerify
      parameters:
        - in: path
          name: customer
          required: true
          schema:
            type: string
        - description: The ID of the source to be verified.
          in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/PostCustomersCustomerBankAccountsIdVerify\
          Payload"
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/bank_account"
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
  "/v1/customers/{customer}/cards":
    get:
      deprecated: true
      description: >-
        <p>You can see a list of the cards belonging to a customer.

        Note that the 10 most recent sources are always available on the <code>Customer</code> object.

        If you need more than those 10, you can use this API method and the <code>limit</code> and <code>starting_after</code> parameters to page through additional cards.</p>
      operationId: GetCustomersCustomerCards
      parameters:
        - description: Specifies which fields in the response should be expanded.
          in: query
          name: expand
          required: false
          schema:
            type: array
            items: {}
        - description: The ID of the customer whose cards will be retrieved.
          in: path
          name: customer
          required: true
          schema:
            type: string
        - description: A cursor for use in pagination. `ending_before` is an object ID that
            defines your place in the list. For instance, if you make a list
            request and receive 100 objects, starting with `obj_bar`, your
            subsequent call can include `ending_before=obj_bar` in order to
            fetch the previous page of the list.
          in: query
          name: ending_before
          required: false
          schema:
            type: string
        - description: A limit on the number of objects to be returned. Limit can range
            between 1 and 100, and the default is 10.
          in: query
          name: limit
          required: false
          schema:
            type: integer
        - description: A cursor for use in pagination. `starting_after` is an object ID
            that defines your place in the list. For instance, if you make a
            list request and receive 100 objects, ending with `obj_foo`, your
            subsequent call can include `starting_after=obj_foo` in order to
            fetch the next page of the list.
          in: query
          name: starting_after
          required: false
          schema:
            type: string
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                properties:
                  data:
                    items:
                      $ref: "#/components/schemas/card"
                    type: array
                  has_more:
                    description: True if this list has another page of items after this one
                      that can be fetched.
                    type: boolean
                  object:
                    description: String representing the object's type. Objects of the same
                      type share the same value. Always has the value `list`.
                    enum:
                      - list
                    type: string
                  url:
                    description: The URL where this list can be accessed.
                    type: string
                required:
                  - data
                  - has_more
                  - object
                  - url
                title: CardList
                type: object
                x-expandableFields:
                  - data
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
    post:
      description: >-
        <p>When you create a new credit card, you must specify a customer or
        recipient on which to create it.</p>


        <p>If the card’s owner has no default card, then the new card will become the default.

        However, if the owner already has a default, then it will not change.

        To change the default, you should either <a href="/docs/api#update_customer">update the customer</a> to have a new <code>default_source</code>,

        or <a href="/docs/api#update_recipient">update the recipient</a> to have a new <code>default_card</code>.</p>
      operationId: PostCustomersCustomerCards
      parameters:
        - in: path
          name: customer
          required: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/PostCustomersCustomerBankAccountsPayload"
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/payment_source"
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
  "/v1/customers/{customer}/cards/{id}":
    delete:
      description: <p>Delete a specified source for a given customer.</p>
      operationId: DeleteCustomersCustomerCardsId
      parameters:
        - in: path
          name: customer
          required: true
          schema:
            type: string
        - description: The ID of the source to be deleted.
          in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/deleted_payment_source"
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
    get:
      deprecated: true
      description: <p>You can always see the 10 most recent cards directly on a customer;
        this method lets you retrieve details about a specific card stored on
        the customer.</p>
      operationId: GetCustomersCustomerCardsId
      parameters:
        - description: Specifies which fields in the response should be expanded.
          in: query
          name: expand
          required: false
          schema:
            type: array
            items: {}
        - in: path
          name: customer
          required: true
          schema:
            type: string
        - description: The ID of the card to be retrieved.
          in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/card"
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
    post:
      description: <p>Update a specified source for a given customer.</p>
      operationId: PostCustomersCustomerCardsId
      parameters:
        - in: path
          name: customer
          required: true
          schema:
            type: string
        - description: The ID of the card to be updated.
          in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/PostCustomersCustomerBankAccountsIdPayload"
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/bank_account"
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
  "/v1/customers/{customer}/discount":
    delete:
      description: <p>Removes the currently applied discount on a customer.</p>
      operationId: DeleteCustomersCustomerDiscount
      parameters:
        - in: path
          name: customer
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/deleted_discount"
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
    get:
      description: ""
      operationId: GetCustomersCustomerDiscount
      parameters:
        - description: Specifies which fields in the response should be expanded.
          in: query
          name: expand
          required: false
          schema:
            type: array
            items: {}
        - in: path
          name: customer
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/discount"
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
  "/v1/customers/{customer}/sources":
    get:
      description: <p>List sources for a specified customer.</p>
      operationId: GetCustomersCustomerSources
      parameters:
        - description: Specifies which fields in the response should be expanded.
          in: query
          name: expand
          required: false
          schema:
            type: array
            items: {}
        - description: The ID of the customer whose sources will be retrieved.
          in: path
          name: customer
          required: true
          schema:
            type: string
        - description: A cursor for use in pagination. `ending_before` is an object ID that
            defines your place in the list. For instance, if you make a list
            request and receive 100 objects, starting with `obj_bar`, your
            subsequent call can include `ending_before=obj_bar` in order to
            fetch the previous page of the list.
          in: query
          name: ending_before
          required: false
          schema:
            type: string
        - description: A limit on the number of objects to be returned. Limit can range
            between 1 and 100, and the default is 10.
          in: query
          name: limit
          required: false
          schema:
            type: integer
        - description: Filter sources according to a particular object type.
          in: query
          name: object
          required: false
          schema:
            type: string
        - description: A cursor for use in pagination. `starting_after` is an object ID
            that defines your place in the list. For instance, if you make a
            list request and receive 100 objects, ending with `obj_foo`, your
            subsequent call can include `starting_after=obj_foo` in order to
            fetch the next page of the list.
          in: query
          name: starting_after
          required: false
          schema:
            type: string
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                properties:
                  data:
                    description: The list contains all payment sources that have been
                      attached to the customer.
                    items:
                      $ref: "#/components/schemas/alipay_account"
                    type: array
                  has_more:
                    description: True if this list has another page of items after this one
                      that can be fetched.
                    type: boolean
                  object:
                    description: String representing the object's type. Objects of the same
                      type share the same value. Always has the value `list`.
                    enum:
                      - list
                    type: string
                  url:
                    description: The URL where this list can be accessed.
                    type: string
                required:
                  - data
                  - has_more
                  - object
                  - url
                title: ApmsSourcesSourceList
                type: object
                x-expandableFields:
                  - data
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
    post:
      description: >-
        <p>When you create a new credit card, you must specify a customer or
        recipient on which to create it.</p>


        <p>If the card’s owner has no default card, then the new card will become the default.

        However, if the owner already has a default, then it will not change.

        To change the default, you should either <a href="/docs/api#update_customer">update the customer</a> to have a new <code>default_source</code>,

        or <a href="/docs/api#update_recipient">update the recipient</a> to have a new <code>default_card</code>.</p>
      operationId: PostCustomersCustomerSources
      parameters:
        - in: path
          name: customer
          required: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/PostCustomersCustomerBankAccountsPayload"
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/payment_source"
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
  "/v1/customers/{customer}/sources/{id}":
    delete:
      description: <p>Delete a specified source for a given customer.</p>
      operationId: DeleteCustomersCustomerSourcesId
      parameters:
        - in: path
          name: customer
          required: true
          schema:
            type: string
        - description: The ID of the source to be deleted.
          in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/deleted_payment_source"
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
    get:
      description: <p>Retrieve a specified source for a given customer.</p>
      operationId: GetCustomersCustomerSourcesId
      parameters:
        - description: Specifies which fields in the response should be expanded.
          in: query
          name: expand
          required: false
          schema:
            type: array
            items: {}
        - in: path
          name: customer
          required: true
          schema:
            type: string
        - description: The ID of the source to be retrieved.
          in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/payment_source"
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
    post:
      description: <p>Update a specified source for a given customer.</p>
      operationId: PostCustomersCustomerSourcesId
      parameters:
        - in: path
          name: customer
          required: true
          schema:
            type: string
        - description: The ID of the card to be updated.
          in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/PostCustomersCustomerBankAccountsIdPayload"
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/bank_account"
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
  "/v1/customers/{customer}/sources/{id}/verify":
    post:
      description: <p>Verify a specified bank account for a given customer.</p>
      operationId: PostCustomersCustomerSourcesIdVerify
      parameters:
        - in: path
          name: customer
          required: true
          schema:
            type: string
        - description: The ID of the source to be verified.
          in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/PostCustomersCustomerBankAccountsIdVerify\
          Payload"
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/bank_account"
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
  "/v1/customers/{customer}/subscriptions":
    get:
      description: <p>You can see a list of the customer’s active subscriptions. Note that
        the 10 most recent active subscriptions are always available by default
        on the customer object. If you need more than those 10, you can use the
        limit and starting_after parameters to page through additional
        subscriptions.</p>
      operationId: GetCustomersCustomerSubscriptions
      parameters:
        - description: Specifies which fields in the response should be expanded.
          in: query
          name: expand
          required: false
          schema:
            type: array
            items: {}
        - description: The ID of the customer whose subscriptions will be retrieved.
          in: path
          name: customer
          required: true
          schema:
            type: string
        - description: A cursor for use in pagination. `ending_before` is an object ID that
            defines your place in the list. For instance, if you make a list
            request and receive 100 objects, starting with `obj_bar`, your
            subsequent call can include `ending_before=obj_bar` in order to
            fetch the previous page of the list.
          in: query
          name: ending_before
          required: false
          schema:
            type: string
        - description: A limit on the number of objects to be returned. Limit can range
            between 1 and 100, and the default is 10.
          in: query
          name: limit
          required: false
          schema:
            type: integer
        - description: A cursor for use in pagination. `starting_after` is an object ID
            that defines your place in the list. For instance, if you make a
            list request and receive 100 objects, ending with `obj_foo`, your
            subsequent call can include `starting_after=obj_foo` in order to
            fetch the next page of the list.
          in: query
          name: starting_after
          required: false
          schema:
            type: string
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                properties:
                  data:
                    items:
                      $ref: "#/components/schemas/subscription"
                    type: array
                  has_more:
                    description: True if this list has another page of items after this one
                      that can be fetched.
                    type: boolean
                  object:
                    description: String representing the object's type. Objects of the same
                      type share the same value. Always has the value `list`.
                    enum:
                      - list
                    type: string
                  url:
                    description: The URL where this list can be accessed.
                    type: string
                required:
                  - data
                  - has_more
                  - object
                  - url
                title: SubscriptionList
                type: object
                x-expandableFields:
                  - data
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
    post:
      description: <p>Creates a new subscription on an existing customer.</p>
      operationId: PostCustomersCustomerSubscriptions
      parameters:
        - description: The identifier of the customer to subscribe.
          in: path
          name: customer
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                application_fee_percent:
                  description: A non-negative decimal between 0 and 100, with at most two
                    decimal places. This represents the percentage of the
                    subscription invoice subtotal that will be transferred to
                    the application owner's Stripe account. The request must be
                    made with an OAuth key in order to set an application fee
                    percentage. For more information, see the application fees
                    [documentation](https://stripe.com/docs/connect/subscriptions#collecting-fees-on-subscriptions).
                  type: number
                backdate_start_date:
                  description: For new subscriptions, a past timestamp to backdate the
                    subscription's start date to. If set, the first invoice will
                    contain a proration for the timespan between the start date
                    and the current time. Can be combined with trials and the
                    billing cycle anchor.
                  type: integer
                billing:
                  description: This field has been renamed to `collection_method` and will
                    be removed in a future API version.
                  enum:
                    - charge_automatically
                    - send_invoice
                  type: string
                billing_cycle_anchor:
                  description: A future timestamp to anchor the subscription's [billing
                    cycle](https://stripe.com/docs/subscriptions/billing-cycle).
                    This is used to determine the date of the first full
                    invoice, and, for plans with `month` or `year` intervals,
                    the day of the month for subsequent invoices.
                  type: integer
                billing_thresholds:
                  description: Define thresholds at which an invoice will be sent, and the
                    subscription advanced to a new billing period. Pass an empty
                    string to remove previously-defined thresholds.
                cancel_at:
                  description: A timestamp at which the subscription should cancel. If set
                    to a date before the current period ends this will cause a
                    proration if `prorate=true`.
                  type: integer
                cancel_at_period_end:
                  description: Boolean indicating whether this subscription should cancel
                    at the end of the current period.
                  type: boolean
                collection_method:
                  description: Either `charge_automatically`, or `send_invoice`. When
                    charging automatically, Stripe will attempt to pay this
                    subscription at the end of the cycle using the default
                    source attached to the customer. When sending an invoice,
                    Stripe will email your customer an invoice with payment
                    instructions. Defaults to `charge_automatically`.
                  enum:
                    - charge_automatically
                    - send_invoice
                  type: string
                coupon:
                  description: The code of the coupon to apply to this subscription. A
                    coupon applied to a subscription will only affect invoices
                    created for that particular subscription.
                  type: string
                days_until_due:
                  description: Number of days a customer has to pay invoices generated by
                    this subscription. Valid only for subscriptions where
                    `collection_method` is set to `send_invoice`.
                  type: integer
                default_payment_method:
                  description: ID of the default payment method for the subscription. It
                    must belong to the customer associated with the
                    subscription. If not set, invoices will use the default
                    payment method in the customer's invoice settings.
                  type: string
                default_source:
                  description: ID of the default payment source for the subscription. It
                    must belong to the customer associated with the subscription
                    and be in a chargeable state. If not set, defaults to the
                    customer's default source.
                  type: string
                default_tax_rates:
                  description: The tax rates that will apply to any subscription item that
                    does not have `tax_rates` set. Invoices created will have
                    their `default_tax_rates` populated from the subscription.
                  items:
                    type: string
                expand:
                  description: Specifies which fields in the response should be expanded.
                  items:
                    type: string
                  type: array
                items:
                  description: List of subscription items, each with an attached plan.
                  items:
                    properties:
                      billing_thresholds: {}
                      metadata:
                        type: object
                      plan:
                        type: string
                      quantity:
                        type: integer
                      tax_rates:
                        items:
                          type: string
                    required:
                      - plan
                    title: subscription_item_create_params
                    type: object
                  type: array
                metadata:
                  description: A set of key-value pairs that you can attach to a
                    `Subscription` object. It can be useful for storing
                    additional information about the subscription in a
                    structured format.
                  type: object
                off_session:
                  description: Indicates if a customer is on or off-session while an
                    invoice payment is attempted.
                  type: boolean
                payment_behavior:
                  description: >-
                    Use `allow_incomplete` to create subscriptions with
                    `status=incomplete` if its first invoice cannot be paid.

                    Creating subscriptions with this status allows you to manage scenarios where additional user actions are needed to pay

                    a subscription's invoice. For example, SCA regulation may require 3DS authentication to complete payment. See the

                    [SCA Migration Guide](https://stripe.com/docs/billing/migration/strong-customer-authentication) for Billing to learn more. This is the

                    default behavior.


                    Use `error_if_incomplete` if you want Stripe to return an HTTP 402 status code if a subscription's first invoice

                    cannot be paid. For example, if a payment method requires 3DS authentication due to SCA regulation and further

                    user action is needed, this parameter does not create a subscription and returns an error instead. This was the default

                    behavior for API versions prior to 2019-03-14. See the [changelog](https://stripe.com/docs/upgrades#2019-03-14) to learn more.
                  enum:
                    - allow_incomplete
                    - error_if_incomplete
                  type: string
                prorate:
                  description: Boolean (defaults to `true`) telling us whether to [credit
                    for unused
                    time](https://stripe.com/docs/subscriptions/billing-cycle#prorations)
                    when the billing cycle changes (e.g. when switching plans,
                    resetting `billing_cycle_anchor=now`, or starting a trial),
                    or if an item's `quantity` changes. If `false`, the anchor
                    period will be free (similar to a trial) and no proration
                    adjustments will be created.
                  type: boolean
                tax_percent:
                  description: A non-negative decimal (with at most four decimal places)
                    between 0 and 100. This represents the percentage of the
                    subscription invoice subtotal that will be calculated and
                    added as tax to the final amount in each billing period. For
                    example, a plan which charges $10/month with a `tax_percent`
                    of `20.0` will charge $12 per invoice. To unset a
                    previously-set value, pass an empty string. This field has
                    been deprecated and will be removed in a future API version,
                    for further information view the [migration
                    docs](https://stripe.com/docs/billing/migration/taxes) for
                    `tax_rates`.
                trial_end:
                  description: Unix timestamp representing the end of the trial period the
                    customer will get before being charged for the first time.
                    This will always overwrite any trials that might apply via a
                    subscribed plan. If set, trial_end will override the default
                    trial period of the plan the customer is being subscribed
                    to. The special value `now` can be provided to end the
                    customer's trial immediately. Can be at most two years from
                    `billing_cycle_anchor`.
                trial_from_plan:
                  description: Indicates if a plan's `trial_period_days` should be applied
                    to the subscription. Setting `trial_end` per subscription is
                    preferred, and this defaults to `false`. Setting this flag
                    to `true` together with `trial_end` is not allowed.
                  type: boolean
                trial_period_days:
                  description: Integer representing the number of trial period days before
                    the customer is charged for the first time. This will always
                    overwrite any trials that might apply via a subscribed plan.
                  type: integer
              type: object
        description: Body parameters for the request.
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/subscription"
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
  "/v1/customers/{customer}/subscriptions/{subscription_exposed_id}":
    delete:
      description: >-
        <p>Cancels a customer’s subscription. If you set the
        <code>at_period_end</code> parameter to <code>true</code>, the
        subscription will remain active until the end of the period, at which
        point it will be canceled and not renewed. Otherwise, with the default
        <code>false</code> value, the subscription is terminated immediately. In
        either case, the customer will not be charged again for the
        subscription.</p>


        <p>Note, however, that any pending invoice items that you’ve created will still be charged for at the end of the period, unless manually <a href="#delete_invoiceitem">deleted</a>. If you’ve set the subscription to cancel at the end of the period, any pending prorations will also be left in place and collected at the end of the period. But if the subscription is set to cancel immediately, pending prorations will be removed.</p>


        <p>By default, upon subscription cancellation, Stripe will stop automatic collection of all finalized invoices for the customer. This is intended to prevent unexpected payment attempts after the customer has canceled a subscription. However, you can resume automatic collection of the invoices manually after subscription cancellation to have us proceed. Or, you could check for unpaid invoices before allowing the customer to cancel the subscription at all.</p>
      operationId: DeleteCustomersCustomerSubscriptionsSubscriptionExposedId
      parameters:
        - in: path
          name: customer
          required: true
          schema:
            type: string
        - in: path
          name: subscription_exposed_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                invoice_now:
                  description: Can be set to `true` if `at_period_end` is not set to
                    `true`. Will generate a final invoice that invoices for any
                    un-invoiced metered usage and new/pending proration invoice
                    items.
                  type: boolean
                prorate:
                  description: Can be set to `true` if `at_period_end` is not set to
                    `true`. Will generate a proration invoice item that credits
                    remaining unused time until the subscription period end.
                  type: boolean
              type: object
        description: Body parameters for the request.
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/subscription"
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
    get:
      description: <p>Retrieves the subscription with the given ID.</p>
      operationId: GetCustomersCustomerSubscriptionsSubscriptionExposedId
      parameters:
        - description: Specifies which fields in the response should be expanded.
          in: query
          name: expand
          required: false
          schema:
            type: array
            items: {}
        - in: path
          name: customer
          required: true
          schema:
            type: string
        - description: ID of subscription to retrieve.
          in: path
          name: subscription_exposed_id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/subscription"
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
    post:
      description: <p>Updates an existing subscription on a customer to match the specified
        parameters. When changing plans or quantities, we will optionally
        prorate the price we charge next month to make up for any price changes.
        To preview how the proration will be calculated, use the <a
        href="#upcoming_invoice">upcoming invoice</a> endpoint.</p>
      operationId: PostCustomersCustomerSubscriptionsSubscriptionExposedId
      parameters:
        - description: The identifier of the customer to subscribe.
          in: path
          name: customer
          required: true
          schema:
            type: string
        - description: The identifier of the subscription to update.
          in: path
          name: subscription_exposed_id
          required: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/PostCustomersCustomerSubscriptionsSubscri\
          ptionExposedIdPayload"
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/subscription"
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
  "/v1/customers/{customer}/subscriptions/{subscription_exposed_id}/discount":
    delete:
      description: <p>Removes the currently applied discount on a customer.</p>
      operationId: DeleteCustomersCustomerSubscriptionsSubscriptionExposedIdDiscount
      parameters:
        - in: path
          name: customer
          required: true
          schema:
            type: string
        - in: path
          name: subscription_exposed_id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/deleted_discount"
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
    get:
      description: ""
      operationId: GetCustomersCustomerSubscriptionsSubscriptionExposedIdDiscount
      parameters:
        - description: Specifies which fields in the response should be expanded.
          in: query
          name: expand
          required: false
          schema:
            type: array
            items: {}
        - in: path
          name: customer
          required: true
          schema:
            type: string
        - in: path
          name: subscription_exposed_id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/discount"
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
  "/v1/customers/{customer}/tax_ids":
    get:
      description: <p>Returns a list of tax IDs for a customer.</p>
      operationId: GetCustomersCustomerTaxIds
      parameters:
        - description: Specifies which fields in the response should be expanded.
          in: query
          name: expand
          required: false
          schema:
            type: array
            items: {}
        - description: ID of the customer whose tax IDs will be retrieved.
          in: path
          name: customer
          required: true
          schema:
            type: string
        - description: A cursor for use in pagination. `ending_before` is an object ID that
            defines your place in the list. For instance, if you make a list
            request and receive 100 objects, starting with `obj_bar`, your
            subsequent call can include `ending_before=obj_bar` in order to
            fetch the previous page of the list.
          in: query
          name: ending_before
          required: false
          schema:
            type: string
        - description: A limit on the number of objects to be returned. Limit can range
            between 1 and 100, and the default is 10.
          in: query
          name: limit
          required: false
          schema:
            type: integer
        - description: A cursor for use in pagination. `starting_after` is an object ID
            that defines your place in the list. For instance, if you make a
            list request and receive 100 objects, ending with `obj_foo`, your
            subsequent call can include `starting_after=obj_foo` in order to
            fetch the next page of the list.
          in: query
          name: starting_after
          required: false
          schema:
            type: string
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                properties:
                  data:
                    items:
                      $ref: "#/components/schemas/tax_id"
                    type: array
                  has_more:
                    description: True if this list has another page of items after this one
                      that can be fetched.
                    type: boolean
                  object:
                    description: String representing the object's type. Objects of the same
                      type share the same value. Always has the value `list`.
                    enum:
                      - list
                    type: string
                  url:
                    description: The URL where this list can be accessed.
                    type: string
                required:
                  - data
                  - has_more
                  - object
                  - url
                title: TaxIDsList
                type: object
                x-expandableFields:
                  - data
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
    post:
      description: <p>Creates a new <code>TaxID</code> object for a customer.</p>
      operationId: PostCustomersCustomerTaxIds
      parameters:
        - description: ID of the customer.
          in: path
          name: customer
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                expand:
                  description: Specifies which fields in the response should be expanded.
                  items:
                    type: string
                  type: array
                type:
                  description: Type of the tax ID, one of `au_abn`, `eu_vat`, `in_gst`,
                    `no_vat`, or `nz_gst`
                  enum:
                    - au_abn
                    - eu_vat
                    - in_gst
                    - no_vat
                    - nz_gst
                  type: string
                value:
                  description: Value of the tax ID.
                  type: string
              required:
                - type
                - value
              type: object
        description: Body parameters for the request.
        required: true
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/tax_id"
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
  "/v1/customers/{customer}/tax_ids/{id}":
    delete:
      description: <p>Deletes an existing <code>TaxID</code> object.</p>
      operationId: DeleteCustomersCustomerTaxIdsId
      parameters:
        - description: ID of the customer.
          in: path
          name: customer
          required: true
          schema:
            type: string
        - description: Unique identifier of the `TaxID` object to delete.
          in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/deleted_tax_id"
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
    get:
      description: <p>Retrieves the <code>TaxID</code> object with the given identifier.</p>
      operationId: GetCustomersCustomerTaxIdsId
      parameters:
        - description: Specifies which fields in the response should be expanded.
          in: query
          name: expand
          required: false
          schema:
            type: array
            items: {}
        - description: ID of the customer.
          in: path
          name: customer
          required: true
          schema:
            type: string
        - description: Unique identifier of the `TaxID` object to retrieve.
          in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/tax_id"
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
  /v1/disputes:
    get:
      description: <p>Returns a list of your disputes.</p>
      operationId: GetDisputes
      parameters:
        - description: Specifies which fields in the response should be expanded.
          in: query
          name: expand
          required: false
          schema:
            type: array
            items: {}
        - in: query
          name: created
          required: false
          schema:
            type: integer
        - description: A cursor for use in pagination. `ending_before` is an object ID that
            defines your place in the list. For instance, if you make a list
            request and receive 100 objects, starting with `obj_bar`, your
            subsequent call can include `ending_before=obj_bar` in order to
            fetch the previous page of the list.
          in: query
          name: ending_before
          required: false
          schema:
            type: string
        - description: A limit on the number of objects to be returned. Limit can range
            between 1 and 100, and the default is 10.
          in: query
          name: limit
          required: false
          schema:
            type: integer
        - description: A cursor for use in pagination. `starting_after` is an object ID
            that defines your place in the list. For instance, if you make a
            list request and receive 100 objects, ending with `obj_foo`, your
            subsequent call can include `starting_after=obj_foo` in order to
            fetch the next page of the list.
          in: query
          name: starting_after
          required: false
          schema:
            type: string
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                properties:
                  data:
                    items:
                      $ref: "#/components/schemas/dispute"
                    type: array
                  has_more:
                    description: True if this list has another page of items after this one
                      that can be fetched.
                    type: boolean
                  object:
                    description: String representing the object's type. Objects of the same
                      type share the same value. Always has the value `list`.
                    enum:
                      - list
                    type: string
                  url:
                    description: The URL where this list can be accessed.
                    type: string
                required:
                  - data
                  - has_more
                  - object
                  - url
                type: object
                x-expandableFields:
                  - data
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
  "/v1/disputes/{dispute}":
    get:
      description: <p>Retrieves the dispute with the given ID.</p>
      operationId: GetDisputesDispute
      parameters:
        - description: Specifies which fields in the response should be expanded.
          in: query
          name: expand
          required: false
          schema:
            type: array
            items: {}
        - description: ID of dispute to retrieve.
          in: path
          name: dispute
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/dispute"
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
    post:
      description: >-
        <p>When you get a dispute, contacting your customer is always the best
        first step. If that doesn’t work, you can submit evidence to help us
        resolve the dispute in your favor. You can do this in your <a
        href="https://dashboard.stripe.com/disputes">dashboard</a>, but if you
        prefer, you can use the API to submit evidence programmatically.</p>


        <p>Depending on your dispute type, different evidence fields will give you a better chance of winning your dispute. To figure out which evidence fields to provide, see our <a href="/docs/disputes/categories">guide to dispute types</a>.</p>
      operationId: PostDisputesDispute
      parameters:
        - description: ID of the dispute to update.
          in: path
          name: dispute
          required: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/PostChargesChargeDisputePayload"
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/dispute"
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
  "/v1/disputes/{dispute}/close":
    post:
      description: >-
        <p>Closing the dispute for a charge indicates that you do not have any
        evidence to submit and are essentially dismissing the dispute,
        acknowledging it as lost.</p>


        <p>The status of the dispute will change from <code>needs_response</code> to <code>lost</code>. <em>Closing a dispute is irreversible</em>.</p>
      operationId: PostDisputesDisputeClose
      parameters:
        - description: ID of the dispute to close.
          in: path
          name: dispute
          required: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/PutAccountsAccountLogoutPayload"
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/dispute"
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
  /v1/ephemeral_keys:
    post:
      description: <p>Creates a short-lived API key for a given resource.</p>
      operationId: PostEphemeralKeys
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                customer:
                  description: The ID of the Customer you'd like to modify using the
                    resulting ephemeral key.
                  type: string
                expand:
                  description: Specifies which fields in the response should be expanded.
                  items:
                    type: string
                  type: array
                issuing_card:
                  description: The ID of the Issuing Card you'd like to access using the
                    resulting ephemeral key.
                  type: string
              type: object
        description: Body parameters for the request.
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ephemeral_key"
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
  "/v1/ephemeral_keys/{key}":
    delete:
      description: <p>Invalidates a short-lived API key for a given resource.</p>
      operationId: DeleteEphemeralKeysKey
      parameters:
        - description: The ID of the key you'd like to invalidate.
          in: path
          name: key
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ephemeral_key"
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
  /v1/events:
    get:
      description: <p>List events, going back up to 30 days. Each event data is rendered
        according to Stripe API version at its creation time, specified in <a
        href="/docs/api/events/object">event object</a> <code>api_version</code>
        attribute (not according to your current Stripe API version or
        <code>Stripe-Version</code> header).</p>
      operationId: GetEvents
      parameters:
        - description: Specifies which fields in the response should be expanded.
          in: query
          name: expand
          required: false
          schema:
            type: array
            items: {}
        - in: query
          name: created
          required: false
          schema:
            type: integer
        - description: Filter events by whether all webhooks were successfully delivered.
            If false, events which are still pending or have failed all delivery
            attempts to a webhook endpoint will be returned.
          in: query
          name: delivery_success
          required: false
          schema:
            type: boolean
        - description: A cursor for use in pagination. `ending_before` is an object ID that
            defines your place in the list. For instance, if you make a list
            request and receive 100 objects, starting with `obj_bar`, your
            subsequent call can include `ending_before=obj_bar` in order to
            fetch the previous page of the list.
          in: query
          name: ending_before
          required: false
          schema:
            type: string
        - description: A limit on the number of objects to be returned. Limit can range
            between 1 and 100, and the default is 10.
          in: query
          name: limit
          required: false
          schema:
            type: integer
        - description: A cursor for use in pagination. `starting_after` is an object ID
            that defines your place in the list. For instance, if you make a
            list request and receive 100 objects, ending with `obj_foo`, your
            subsequent call can include `starting_after=obj_foo` in order to
            fetch the next page of the list.
          in: query
          name: starting_after
          required: false
          schema:
            type: string
        - description: A string containing a specific event name, or group of events using
            * as a wildcard. The list will be filtered to include only events
            with a matching event property.
          in: query
          name: type
          required: false
          schema:
            type: string
        - description: An array of up to 20 strings containing specific event names. The
            list will be filtered to include only events with a matching event
            property. You may pass either `type` or `types`, but not both.
          in: query
          name: types
          required: false
          schema:
            type: array
            items: {}
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                properties:
                  data:
                    items:
                      $ref: "#/components/schemas/event"
                    type: array
                  has_more:
                    description: True if this list has another page of items after this one
                      that can be fetched.
                    type: boolean
                  object:
                    description: String representing the object's type. Objects of the same
                      type share the same value. Always has the value `list`.
                    enum:
                      - list
                    type: string
                  url:
                    description: The URL where this list can be accessed.
                    type: string
                required:
                  - data
                  - has_more
                  - object
                  - url
                type: object
                x-expandableFields:
                  - data
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
  "/v1/events/{id}":
    get:
      description: <p>Retrieves the details of an event. Supply the unique identifier of
        the event, which you might have received in a webhook.</p>
      operationId: GetEventsId
      parameters:
        - description: Specifies which fields in the response should be expanded.
          in: query
          name: expand
          required: false
          schema:
            type: array
            items: {}
        - description: The identifier of the event to be retrieved.
          in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/event"
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
  /v1/exchange_rates:
    get:
      description: <p>Returns a list of objects that contain the rates at which foreign
        currencies are converted to one another. Only shows the currencies for
        which Stripe supports.</p>
      operationId: GetExchangeRates
      parameters:
        - description: Specifies which fields in the response should be expanded.
          in: query
          name: expand
          required: false
          schema:
            type: array
            items: {}
        - description: A cursor for use in pagination. `ending_before` is the currency that
            defines your place in the list. For instance, if you make a list
            request and receive 100 objects, starting with the exchange rate for
            currency X your subsequent call can include `ending_before=obj_bar`
            in order to fetch the previous page of the list.
          in: query
          name: ending_before
          required: false
          schema:
            type: string
        - description: A limit on the number of objects to be returned. Limit can range
            between 1 and total number of supported payout currencies, and the
            default is the max.
          in: query
          name: limit
          required: false
          schema:
            type: integer
        - description: A cursor for use in pagination. `starting_after` is the currency
            that defines your place in the list. For instance, if you make a
            list request and receive 100 objects, ending with the exchange rate
            for currency X, your subsequent call can include `starting_after=X`
            in order to fetch the next page of the list.
          in: query
          name: starting_after
          required: false
          schema:
            type: string
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                properties:
                  data:
                    items:
                      $ref: "#/components/schemas/exchange_rate"
                    type: array
                  has_more:
                    description: True if this list has another page of items after this one
                      that can be fetched.
                    type: boolean
                  object:
                    description: String representing the object's type. Objects of the same
                      type share the same value. Always has the value `list`.
                    enum:
                      - list
                    type: string
                  url:
                    description: The URL where this list can be accessed.
                    type: string
                required:
                  - data
                  - has_more
                  - object
                  - url
                type: object
                x-expandableFields:
                  - data
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
  "/v1/exchange_rates/{currency}":
    get:
      description: <p>Retrieves the exchange rates from the given currency to every
        supported currency.</p>
      operationId: GetExchangeRatesCurrency
      parameters:
        - description: Specifies which fields in the response should be expanded.
          in: query
          name: expand
          required: false
          schema:
            type: array
            items: {}
        - description: Three-letter [ISO currency
            code](https://www.iso.org/iso-4217-currency-codes.html), in
            lowercase. Must be a [supported
            currency](https://stripe.com/docs/currencies).
          in: path
          name: currency
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/exchange_rate"
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
  /v1/file_links:
    get:
      description: <p>Returns a list of file links.</p>
      operationId: GetFileLinks
      parameters:
        - description: Specifies which fields in the response should be expanded.
          in: query
          name: expand
          required: false
          schema:
            type: array
            items: {}
        - in: query
          name: created
          required: false
          schema:
            type: integer
        - description: A cursor for use in pagination. `ending_before` is an object ID that
            defines your place in the list. For instance, if you make a list
            request and receive 100 objects, starting with `obj_bar`, your
            subsequent call can include `ending_before=obj_bar` in order to
            fetch the previous page of the list.
          in: query
          name: ending_before
          required: false
          schema:
            type: string
        - description: Filter links by their expiration status. By default, all links are
            returned.
          in: query
          name: expired
          required: false
          schema:
            type: boolean
        - description: Only return links for the given file.
          in: query
          name: file
          required: false
          schema:
            type: string
        - description: A limit on the number of objects to be returned. Limit can range
            between 1 and 100, and the default is 10.
          in: query
          name: limit
          required: false
          schema:
            type: integer
        - description: A cursor for use in pagination. `starting_after` is an object ID
            that defines your place in the list. For instance, if you make a
            list request and receive 100 objects, ending with `obj_foo`, your
            subsequent call can include `starting_after=obj_foo` in order to
            fetch the next page of the list.
          in: query
          name: starting_after
          required: false
          schema:
            type: string
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                properties:
                  data:
                    items:
                      $ref: "#/components/schemas/file_link"
                    type: array
                  has_more:
                    description: True if this list has another page of items after this one
                      that can be fetched.
                    type: boolean
                  object:
                    description: String representing the object's type. Objects of the same
                      type share the same value. Always has the value `list`.
                    enum:
                      - list
                    type: string
                  url:
                    description: The URL where this list can be accessed.
                    type: string
                required:
                  - data
                  - has_more
                  - object
                  - url
                type: object
                x-expandableFields:
                  - data
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
    post:
      description: <p>Creates a new file link object.</p>
      operationId: PostFileLinks
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                expand:
                  description: Specifies which fields in the response should be expanded.
                  items:
                    type: string
                  type: array
                expires_at:
                  description: A future timestamp after which the link will no longer be
                    usable.
                  type: integer
                file:
                  description: "The ID of the file. The file's `purpose` must be one of the
                    following: `business_icon`, `business_logo`,
                    `customer_signature`, `dispute_evidence`,
                    `finance_report_run`, `pci_document`,
                    `sigma_scheduled_query`, or `tax_document_user_upload`."
                  type: string
                metadata:
                  description: Set of key-value pairs that you can attach to an object.
                    This can be useful for storing additional information about
                    the object in a structured format.
                  type: object
              required:
                - file
              type: object
        description: Body parameters for the request.
        required: true
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/file_link"
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
  "/v1/file_links/{link}":
    get:
      description: <p>Retrieves the file link with the given ID.</p>
      operationId: GetFileLinksLink
      parameters:
        - description: Specifies which fields in the response should be expanded.
          in: query
          name: expand
          required: false
          schema:
            type: array
            items: {}
        - description: The identifier of the file link to be retrieved.
          in: path
          name: link
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/file_link"
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
    post:
      description: <p>Updates an existing file link object. Expired links can no longer be
        updated.</p>
      operationId: PostFileLinksLink
      parameters:
        - description: The ID of the file link.
          in: path
          name: link
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                expand:
                  description: Specifies which fields in the response should be expanded.
                  items:
                    type: string
                  type: array
                expires_at:
                  description: A future timestamp after which the link will no longer be
                    usable, or `now` to expire the link immediately.
                metadata:
                  description: Set of key-value pairs that you can attach to an object.
                    This can be useful for storing additional information about
                    the object in a structured format.
                  type: object
              type: object
        description: Body parameters for the request.
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/file_link"
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
  /v1/files:
    get:
      description: <p>Returns a list of the files that your account has access to. The
        files are returned sorted by creation date, with the most recently
        created files appearing first.</p>
      operationId: GetFiles
      parameters:
        - description: Specifies which fields in the response should be expanded.
          in: query
          name: expand
          required: false
          schema:
            type: array
            items: {}
        - in: query
          name: created
          required: false
          schema:
            type: integer
        - description: A cursor for use in pagination. `ending_before` is an object ID that
            defines your place in the list. For instance, if you make a list
            request and receive 100 objects, starting with `obj_bar`, your
            subsequent call can include `ending_before=obj_bar` in order to
            fetch the previous page of the list.
          in: query
          name: ending_before
          required: false
          schema:
            type: string
        - description: A limit on the number of objects to be returned. Limit can range
            between 1 and 100, and the default is 10.
          in: query
          name: limit
          required: false
          schema:
            type: integer
        - description: The file purpose to filter queries by. If none is provided, files
            will not be filtered by purpose.
          in: query
          name: purpose
          required: false
          schema:
            type: string
        - description: A cursor for use in pagination. `starting_after` is an object ID
            that defines your place in the list. For instance, if you make a
            list request and receive 100 objects, ending with `obj_foo`, your
            subsequent call can include `starting_after=obj_foo` in order to
            fetch the next page of the list.
          in: query
          name: starting_after
          required: false
          schema:
            type: string
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                properties:
                  data:
                    items:
                      $ref: "#/components/schemas/file"
                    type: array
                  has_more:
                    description: True if this list has another page of items after this one
                      that can be fetched.
                    type: boolean
                  object:
                    description: String representing the object's type. Objects of the same
                      type share the same value. Always has the value `list`.
                    enum:
                      - list
                    type: string
                  url:
                    description: The URL where this list can be accessed.
                    type: string
                required:
                  - data
                  - has_more
                  - object
                  - url
                type: object
                x-expandableFields:
                  - data
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
    post:
      description: >-
        <p>To upload a file to Stripe, you’ll need to send a request of type
        <code>multipart/form-data</code>. The request should contain the file
        you would like to upload, as well as the parameters for creating a
        file.</p>


        <p>All of Stripe’s officially supported Client libraries should have support for sending <code>multipart/form-data</code>.</p>
      operationId: PostFiles
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                expand:
                  description: Specifies which fields in the response should be expanded.
                  items:
                    type: string
                  type: array
                file:
                  description: A file to upload. The file should follow the specifications
                    of RFC 2388 (which defines file transfers for the
                    `multipart/form-data` protocol).
                  type: string
                file_link_data:
                  description: Optional parameters to automatically create a [file
                    link](#file_links) for the newly created file.
                  properties:
                    create:
                      type: boolean
                    expires_at:
                      type: integer
                    metadata:
                      type: object
                  required:
                    - create
                  title: file_link_creation_params
                  type: object
                purpose:
                  description: The purpose of the uploaded file. Possible values are
                    `business_icon`, `business_logo`, `customer_signature`,
                    `dispute_evidence`, `identity_document`, `pci_document`, or
                    `tax_document_user_upload`.
                  enum:
                    - business_icon
                    - business_logo
                    - customer_signature
                    - dispute_evidence
                    - identity_document
                    - pci_document
                    - tax_document_user_upload
                  type: string
              required:
                - file
                - purpose
              type: object
        description: Body parameters for the request.
        required: true
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/file"
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
  "/v1/files/{file}":
    get:
      description: <p>Retrieves the details of an existing file object. Supply the unique
        file ID from a file, and Stripe will return the corresponding file
        object.</p>
      operationId: GetFilesFile
      parameters:
        - description: Specifies which fields in the response should be expanded.
          in: query
          name: expand
          required: false
          schema:
            type: array
            items: {}
        - description: The identifier of the file to be retrieved.
          in: path
          name: file
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/file"
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
  /v1/invoiceitems:
    get:
      description: <p>Returns a list of your invoice items. Invoice items are returned
        sorted by creation date, with the most recently created invoice items
        appearing first.</p>
      operationId: GetInvoiceitems
      parameters:
        - description: Specifies which fields in the response should be expanded.
          in: query
          name: expand
          required: false
          schema:
            type: array
            items: {}
        - in: query
          name: created
          required: false
          schema:
            type: integer
        - description: The identifier of the customer whose invoice items to return. If
            none is provided, all invoice items will be returned.
          in: query
          name: customer
          required: false
          schema:
            type: string
        - description: A cursor for use in pagination. `ending_before` is an object ID that
            defines your place in the list. For instance, if you make a list
            request and receive 100 objects, starting with `obj_bar`, your
            subsequent call can include `ending_before=obj_bar` in order to
            fetch the previous page of the list.
          in: query
          name: ending_before
          required: false
          schema:
            type: string
        - description: Only return invoice items belonging to this invoice. If none is
            provided, all invoice items will be returned. If specifying an
            invoice, no customer identifier is needed.
          in: query
          name: invoice
          required: false
          schema:
            type: string
        - description: A limit on the number of objects to be returned. Limit can range
            between 1 and 100, and the default is 10.
          in: query
          name: limit
          required: false
          schema:
            type: integer
        - description: Set to `true` to only show pending invoice items, which are not yet
            attached to any invoices. Set to `false` to only show invoice items
            already attached to invoices. If unspecified, no filter is applied.
          in: query
          name: pending
          required: false
          schema:
            type: boolean
        - description: A cursor for use in pagination. `starting_after` is an object ID
            that defines your place in the list. For instance, if you make a
            list request and receive 100 objects, ending with `obj_foo`, your
            subsequent call can include `starting_after=obj_foo` in order to
            fetch the next page of the list.
          in: query
          name: starting_after
          required: false
          schema:
            type: string
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                properties:
                  data:
                    items:
                      $ref: "#/components/schemas/invoiceitem"
                    type: array
                  has_more:
                    description: True if this list has another page of items after this one
                      that can be fetched.
                    type: boolean
                  object:
                    description: String representing the object's type. Objects of the same
                      type share the same value. Always has the value `list`.
                    enum:
                      - list
                    type: string
                  url:
                    description: The URL where this list can be accessed.
                    type: string
                required:
                  - data
                  - has_more
                  - object
                  - url
                type: object
                x-expandableFields:
                  - data
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
    post:
      description: <p>Creates an item to be added to a draft invoice. If no invoice is
        specified, the item will be on the next invoice created for the customer
        specified.</p>
      operationId: PostInvoiceitems
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                amount:
                  description: The integer amount in **%s** of the charge to be applied to
                    the upcoming invoice. Passing in a negative `amount` will
                    reduce the `amount_due` on the invoice.
                  type: integer
                currency:
                  description: Three-letter [ISO currency
                    code](https://www.iso.org/iso-4217-currency-codes.html), in
                    lowercase. Must be a [supported
                    currency](https://stripe.com/docs/currencies).
                  type: string
                customer:
                  description: The ID of the customer who will be billed when this invoice
                    item is billed.
                  type: string
                description:
                  description: An arbitrary string which you can attach to the invoice
                    item. The description is displayed in the invoice for easy
                    tracking.
                  type: string
                discountable:
                  description: Controls whether discounts apply to this invoice item.
                    Defaults to false for prorations or negative invoice items,
                    and true for all other invoice items.
                  type: boolean
                expand:
                  description: Specifies which fields in the response should be expanded.
                  items:
                    type: string
                  type: array
                invoice:
                  description: The ID of an existing invoice to add this invoice item to.
                    When left blank, the invoice item will be added to the next
                    upcoming scheduled invoice. This is useful when adding
                    invoice items in response to an invoice.created webhook. You
                    can only add invoice items to draft invoices.
                  type: string
                metadata:
                  description: A set of key-value pairs that you can attach to an invoice
                    item object. It can be useful for storing additional
                    information about the invoice item in a structured format.
                  type: object
                period:
                  description: The period associated with this invoice item.
                  properties:
                    end:
                      type: integer
                    start:
                      type: integer
                  required:
                    - end
                    - start
                  title: period
                  type: object
                quantity:
                  description: Non-negative integer. The quantity of units for the invoice
                    item.
                  type: integer
                subscription:
                  description: The ID of a subscription to add this invoice item to. When
                    left blank, the invoice item will be be added to the next
                    upcoming scheduled invoice. When set, scheduled invoices for
                    subscriptions other than the specified subscription will
                    ignore the invoice item. Use this when you want to express
                    that an invoice item has been accrued within the context of
                    a particular subscription.
                  type: string
                tax_rates:
                  description: The tax rates which apply to the invoice item. When set, the
                    `default_tax_rates` on the invoice do not apply to this
                    invoice item.
                  items:
                    type: string
                  type: array
                unit_amount:
                  description: The integer unit amount in **%s** of the charge to be
                    applied to the upcoming invoice. This `unit_amount` will be
                    multiplied by the quantity to get the full amount. Passing
                    in a negative `unit_amount` will reduce the `amount_due` on
                    the invoice.
                  type: integer
                unit_amount_decimal:
                  description: Same as `unit_amount`, but accepts a decimal value with at
                    most 12 decimal places. Only one of `unit_amount` and
                    `unit_amount_decimal` can be set.
                  type: string
              required:
                - currency
                - customer
              type: object
        description: Body parameters for the request.
        required: true
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/invoiceitem"
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
  "/v1/invoiceitems/{invoiceitem}":
    delete:
      description: <p>Deletes an invoice item, removing it from an invoice. Deleting
        invoice items is only possible when they’re not attached to invoices, or
        if it’s attached to a draft invoice.</p>
      operationId: DeleteInvoiceitemsInvoiceitem
      parameters:
        - description: The identifier of the invoice item to be deleted.
          in: path
          name: invoiceitem
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/deleted_invoiceitem"
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
    get:
      description: <p>Retrieves the invoice item with the given ID.</p>
      operationId: GetInvoiceitemsInvoiceitem
      parameters:
        - description: Specifies which fields in the response should be expanded.
          in: query
          name: expand
          required: false
          schema:
            type: array
            items: {}
        - description: The ID of the desired invoice item.
          in: path
          name: invoiceitem
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/invoiceitem"
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
    post:
      description: <p>Updates the amount or description of an invoice item on an upcoming
        invoice. Updating an invoice item is only possible before the invoice
        it’s attached to is closed.</p>
      operationId: PostInvoiceitemsInvoiceitem
      parameters:
        - in: path
          name: invoiceitem
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                amount:
                  description: The integer amount in **%s** of the charge to be applied to
                    the upcoming invoice. If you want to apply a credit to the
                    customer's account, pass a negative amount.
                  type: integer
                description:
                  description: An arbitrary string which you can attach to the invoice
                    item. The description is displayed in the invoice for easy
                    tracking.
                  type: string
                discountable:
                  description: Controls whether discounts apply to this invoice item.
                    Defaults to false for prorations or negative invoice items,
                    and true for all other invoice items. Cannot be set to true
                    for prorations.
                  type: boolean
                expand:
                  description: Specifies which fields in the response should be expanded.
                  items:
                    type: string
                  type: array
                metadata:
                  description: A set of key-value pairs that you can attach to an invoice
                    item object. It can be useful for storing additional
                    information about the invoice item in a structured format.
                  type: object
                period:
                  description: The period associated with this invoice item.
                  properties:
                    end:
                      type: integer
                    start:
                      type: integer
                  required:
                    - end
                    - start
                  title: period
                  type: object
                quantity:
                  description: Non-negative integer. The quantity of units for the invoice
                    item.
                  type: integer
                tax_rates:
                  description: The tax rates which apply to the invoice item. When set, the
                    `default_tax_rates` on the invoice do not apply to this
                    invoice item.
                  items:
                    type: string
                unit_amount:
                  description: The integer unit amount in **%s** of the charge to be
                    applied to the upcoming invoice. This unit_amount will be
                    multiplied by the quantity to get the full amount. If you
                    want to apply a credit to the customer's account, pass a
                    negative unit_amount.
                  type: integer
                unit_amount_decimal:
                  description: Same as `unit_amount`, but accepts a decimal value with at
                    most 12 decimal places. Only one of `unit_amount` and
                    `unit_amount_decimal` can be set.
                  type: string
              type: object
        description: Body parameters for the request.
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/invoiceitem"
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
  /v1/invoices:
    get:
      description: <p>You can list all invoices, or list the invoices for a specific
        customer. The invoices are returned sorted by creation date, with the
        most recently created invoices appearing first.</p>
      operationId: GetInvoices
      parameters:
        - description: Specifies which fields in the response should be expanded.
          in: query
          name: expand
          required: false
          schema:
            type: array
            items: {}
        - description: This field has been renamed to `collection_method` and will be
            removed in a future API version.
          in: query
          name: billing
          required: false
          schema:
            type: string
        - description: The collection method of the invoice to retrieve. Either
            `charge_automatically` or `send_invoice`.
          in: query
          name: collection_method
          required: false
          schema:
            type: string
        - in: query
          name: created
          required: false
          schema:
            type: integer
        - description: Only return invoices for the customer specified by this customer ID.
          in: query
          name: customer
          required: false
          schema:
            type: string
        - in: query
          name: due_date
          required: false
          schema:
            type: integer
        - description: A cursor for use in pagination. `ending_before` is an object ID that
            defines your place in the list. For instance, if you make a list
            request and receive 100 objects, starting with `obj_bar`, your
            subsequent call can include `ending_before=obj_bar` in order to
            fetch the previous page of the list.
          in: query
          name: ending_before
          required: false
          schema:
            type: string
        - description: A limit on the number of objects to be returned. Limit can range
            between 1 and 100, and the default is 10.
          in: query
          name: limit
          required: false
          schema:
            type: integer
        - description: A cursor for use in pagination. `starting_after` is an object ID
            that defines your place in the list. For instance, if you make a
            list request and receive 100 objects, ending with `obj_foo`, your
            subsequent call can include `starting_after=obj_foo` in order to
            fetch the next page of the list.
          in: query
          name: starting_after
          required: false
          schema:
            type: string
        - description: The status of the invoice, one of `draft`, `open`, `paid`,
            `uncollectible`, or `void`. [Learn
            more](https://stripe.com/docs/billing/invoices/workflow#workflow-overview)
          in: query
          name: status
          required: false
          schema:
            type: string
        - description: Only return invoices for the subscription specified by this
            subscription ID.
          in: query
          name: subscription
          required: false
          schema:
            type: string
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                properties:
                  data:
                    items:
                      $ref: "#/components/schemas/invoice"
                    type: array
                  has_more:
                    description: True if this list has another page of items after this one
                      that can be fetched.
                    type: boolean
                  object:
                    description: String representing the object's type. Objects of the same
                      type share the same value. Always has the value `list`.
                    enum:
                      - list
                    type: string
                  url:
                    description: The URL where this list can be accessed.
                    type: string
                required:
                  - data
                  - has_more
                  - object
                  - url
                type: object
                x-expandableFields:
                  - data
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
    post:
      description: <p>This endpoint creates a draft invoice for a given customer. The draft
        invoice created pulls in all pending invoice items on that customer,
        including prorations.</p>
      operationId: PostInvoices
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                application_fee_amount:
                  description: A fee in %s that will be applied to the invoice and
                    transferred to the application owner's Stripe account. The
                    request must be made with an OAuth key or the Stripe-Account
                    header in order to take an application fee. For more
                    information, see the application fees
                    [documentation](https://stripe.com/docs/connect/subscriptions#invoices).
                  type: integer
                auto_advance:
                  description: Controls whether Stripe will perform [automatic
                    collection](https://stripe.com/docs/billing/invoices/workflow/#auto_advance)
                    of the invoice. When `false`, the invoice's state will not
                    automatically advance without an explicit action.
                  type: boolean
                billing:
                  description: This field has been renamed to `collection_method` and will
                    be removed in a future API version.
                  enum:
                    - charge_automatically
                    - send_invoice
                  type: string
                collection_method:
                  description: Either `charge_automatically`, or `send_invoice`. When
                    charging automatically, Stripe will attempt to pay this
                    invoice using the default source attached to the customer.
                    When sending an invoice, Stripe will email this invoice to
                    the customer with payment instructions. Defaults to
                    `charge_automatically`.
                  enum:
                    - charge_automatically
                    - send_invoice
                  type: string
                custom_fields:
                  description: A list of up to 4 custom fields to be displayed on the
                    invoice.
                  items:
                    properties:
                      name:
                        type: string
                      value:
                        type: string
                    required:
                      - name
                      - value
                    title: custom_field_params
                    type: object
                customer:
                  type: string
                days_until_due:
                  description: The number of days from when the invoice is created until it
                    is due. Valid only for invoices where
                    `collection_method=send_invoice`.
                  type: integer
                default_payment_method:
                  description: ID of the default payment method for the invoice. It must
                    belong to the customer associated with the invoice. If not
                    set, defaults to the subscription's default payment method,
                    if any, or to the default payment method in the customer's
                    invoice settings.
                  type: string
                default_source:
                  description: ID of the default payment source for the invoice. It must
                    belong to the customer associated with the invoice and be in
                    a chargeable state. If not set, defaults to the
                    subscription's default source, if any, or to the customer's
                    default source.
                  type: string
                default_tax_rates:
                  description: The tax rates that will apply to any line item that does not
                    have `tax_rates` set.
                  items:
                    type: string
                  type: array
                description:
                  type: string
                due_date:
                  description: The date on which payment for this invoice is due. Valid
                    only for invoices where `collection_method=send_invoice`.
                  type: integer
                expand:
                  description: Specifies which fields in the response should be expanded.
                  items:
                    type: string
                  type: array
                footer:
                  description: Footer to be displayed on the invoice.
                  type: string
                metadata:
                  type: object
                statement_descriptor:
                  description: Extra information about a charge for the customer's credit
                    card statement. It must contain at least one letter. If not
                    specified and this invoice is part of a subscription, the
                    default `statement_descriptor` will be set to the first
                    subscription item's product's `statement_descriptor`.
                  type: string
                subscription:
                  description: The ID of the subscription to invoice, if any. If not set,
                    the created invoice will include all pending invoice items
                    for the customer. If set, the created invoice will only
                    include pending invoice items for that subscription and
                    pending invoice items not associated with any subscription.
                    The subscription's billing cycle and regular subscription
                    events won't be affected.
                  type: string
                tax_percent:
                  description: The percent tax rate applied to the invoice, represented as
                    a decimal number. This field has been deprecated and will be
                    removed in a future API version, for further information
                    view the [migration
                    docs](https://stripe.com/docs/billing/migration/taxes) for
                    `tax_rates`.
                  type: number
              required:
                - customer
              type: object
        description: Body parameters for the request.
        required: true
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/invoice"
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
  /v1/invoices/upcoming:
    get:
      description: >-
        <p>At any time, you can preview the upcoming invoice for a customer.
        This will show you all the charges that are pending, including
        subscription renewal charges, invoice item charges, etc. It will also
        show you any discount that is applicable to the customer.</p>


        <p>Note that when you are viewing an upcoming invoice, you are simply viewing a preview – the invoice has not yet been created. As such, the upcoming invoice will not show up in invoice listing calls, and you cannot use the API to pay or edit the invoice. If you want to change the amount that your customer will be billed, you can add, remove, or update pending invoice items, or update the customer’s discount.</p>


        <p>You can preview the effects of updating a subscription, including a preview of what proration will take place. To ensure that the actual proration is calculated exactly the same as the previewed proration, you should pass a <code>proration_date</code> parameter when doing the actual subscription update. The value passed in should be the same as the <code>subscription_proration_date</code> returned on the upcoming invoice resource. The recommended way to get only the prorations being previewed is to consider only proration line items where <code>period[start]</code> is equal to the <code>subscription_proration_date</code> on the upcoming invoice resource.</p>
      operationId: GetInvoicesUpcoming
      parameters:
        - description: Specifies which fields in the response should be expanded.
          in: query
          name: expand
          required: false
          schema:
            type: array
            items: {}
        - description: The code of the coupon to apply. If `subscription` or
            `subscription_items` is provided, the invoice returned will preview
            updating or creating a subscription with that coupon. Otherwise, it
            will preview applying that coupon to the customer for the next
            upcoming invoice from among the customer's subscriptions. The
            invoice can be previewed without a coupon by passing this value as
            an empty string.
          in: query
          name: coupon
          required: false
          schema:
            type: string
        - description: The identifier of the customer whose upcoming invoice you'd like to
            retrieve.
          in: query
          name: customer
          required: false
          schema:
            type: string
        - description: List of invoice items to add or update in the upcoming invoice
            preview.
          in: query
          name: invoice_items
          required: false
          schema:
            type: array
            items: {}
        - description: The identifier of the unstarted schedule whose upcoming invoice
            you'd like to retrieve. Cannot be used with subscription or
            subscription fields.
          in: query
          name: schedule
          required: false
          schema:
            type: string
        - description: The identifier of the subscription for which you'd like to retrieve
            the upcoming invoice. If not provided, but a `subscription_items` is
            provided, you will preview creating a subscription with those items.
            If neither `subscription` nor `subscription_items` is provided, you
            will retrieve the next upcoming invoice from among the customer's
            subscriptions.
          in: query
          name: subscription
          required: false
          schema:
            type: string
        - description: For new subscriptions, a future timestamp to anchor the
            subscription's [billing
            cycle](https://stripe.com/docs/subscriptions/billing-cycle). This is
            used to determine the date of the first full invoice, and, for plans
            with `month` or `year` intervals, the day of the month for
            subsequent invoices. For existing subscriptions, the value can only
            be set to `now` or `unchanged`.
          in: query
          name: subscription_billing_cycle_anchor
          required: false
          schema:
            type: string
        - description: Timestamp indicating when the subscription should be scheduled to
            cancel. Will prorate if within the current period if `prorate=true`
          in: query
          name: subscription_cancel_at
          required: false
          schema:
            type: string
        - description: Boolean indicating whether this subscription should cancel at the
            end of the current period.
          in: query
          name: subscription_cancel_at_period_end
          required: false
          schema:
            type: boolean
        - description: This simulates the subscription being canceled or expired
            immediately.
          in: query
          name: subscription_cancel_now
          required: false
          schema:
            type: boolean
        - description: If provided, the invoice returned will preview updating or creating
            a subscription with these default tax rates. The default tax rates
            will apply to any line item that does not have `tax_rates` set.
          in: query
          name: subscription_default_tax_rates
          required: false
          schema:
            type: string
        - description: List of subscription items, each with an attached plan.
          in: query
          name: subscription_items
          required: false
          schema:
            type: array
            items: {}
        - description: If previewing an update to a subscription, this decides whether the
            preview will show the result of applying prorations or not. If set,
            one of `subscription_items` or `subscription`, and one of
            `subscription_items` or `subscription_trial_end` are required.
          in: query
          name: subscription_prorate
          required: false
          schema:
            type: boolean
        - description: If previewing an update to a subscription, and doing proration,
            `subscription_proration_date` forces the proration to be calculated
            as though the update was done at the specified time. The time given
            must be within the current subscription period, and cannot be before
            the subscription was on its current plan. If set, `subscription`,
            and one of `subscription_items`, or `subscription_trial_end` are
            required. Also, `subscription_proration` cannot be set to false.
          in: query
          name: subscription_proration_date
          required: false
          schema:
            type: integer
        - description: Date a subscription is intended to start (can be future or past)
          in: query
          name: subscription_start_date
          required: false
          schema:
            type: integer
        - description: If provided, the invoice returned will preview updating or creating
            a subscription with that tax percent. If set, one of
            `subscription_items` or `subscription` is required. This field has
            been deprecated and will be removed in a future API version, for
            further information view the [migration
            docs](https://stripe.com/docs/billing/migration/taxes) for
            `tax_rates`.
          in: query
          name: subscription_tax_percent
          required: false
          schema:
            type: number
        - description: If provided, the invoice returned will preview updating or creating
            a subscription with that trial end. If set, one of
            `subscription_items` or `subscription` is required.
          in: query
          name: subscription_trial_end
          required: false
          schema:
            type: string
        - description: Indicates if a plan's `trial_period_days` should be applied to the
            subscription. Setting `subscription_trial_end` per subscription is
            preferred, and this defaults to `false`. Setting this flag to `true`
            together with `subscription_trial_end` is not allowed.
          in: query
          name: subscription_trial_from_plan
          required: false
          schema:
            type: boolean
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/invoice"
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
  /v1/invoices/upcoming/lines:
    get:
      description: <p>When retrieving an upcoming invoice, you’ll get a
        <strong>lines</strong> property containing the total count of line items
        and the first handful of those items. There is also a URL where you can
        retrieve the full (paginated) list of line items.</p>
      operationId: GetInvoicesUpcomingLines
      parameters:
        - description: Specifies which fields in the response should be expanded.
          in: query
          name: expand
          required: false
          schema:
            type: array
            items: {}
        - description: The code of the coupon to apply. If `subscription` or
            `subscription_items` is provided, the invoice returned will preview
            updating or creating a subscription with that coupon. Otherwise, it
            will preview applying that coupon to the customer for the next
            upcoming invoice from among the customer's subscriptions. The
            invoice can be previewed without a coupon by passing this value as
            an empty string.
          in: query
          name: coupon
          required: false
          schema:
            type: string
        - description: The identifier of the customer whose upcoming invoice you'd like to
            retrieve.
          in: query
          name: customer
          required: false
          schema:
            type: string
        - description: A cursor for use in pagination. `ending_before` is an object ID that
            defines your place in the list. For instance, if you make a list
            request and receive 100 objects, starting with `obj_bar`, your
            subsequent call can include `ending_before=obj_bar` in order to
            fetch the previous page of the list.
          in: query
          name: ending_before
          required: false
          schema:
            type: string
        - description: List of invoice items to add or update in the upcoming invoice
            preview.
          in: query
          name: invoice_items
          required: false
          schema:
            type: array
            items: {}
        - description: A limit on the number of objects to be returned. Limit can range
            between 1 and 100, and the default is 10.
          in: query
          name: limit
          required: false
          schema:
            type: integer
        - description: The identifier of the unstarted schedule whose upcoming invoice
            you'd like to retrieve. Cannot be used with subscription or
            subscription fields.
          in: query
          name: schedule
          required: false
          schema:
            type: string
        - description: A cursor for use in pagination. `starting_after` is an object ID
            that defines your place in the list. For instance, if you make a
            list request and receive 100 objects, ending with `obj_foo`, your
            subsequent call can include `starting_after=obj_foo` in order to
            fetch the next page of the list.
          in: query
          name: starting_after
          required: false
          schema:
            type: string
        - description: The identifier of the subscription for which you'd like to retrieve
            the upcoming invoice. If not provided, but a `subscription_items` is
            provided, you will preview creating a subscription with those items.
            If neither `subscription` nor `subscription_items` is provided, you
            will retrieve the next upcoming invoice from among the customer's
            subscriptions.
          in: query
          name: subscription
          required: false
          schema:
            type: string
        - description: For new subscriptions, a future timestamp to anchor the
            subscription's [billing
            cycle](https://stripe.com/docs/subscriptions/billing-cycle). This is
            used to determine the date of the first full invoice, and, for plans
            with `month` or `year` intervals, the day of the month for
            subsequent invoices. For existing subscriptions, the value can only
            be set to `now` or `unchanged`.
          in: query
          name: subscription_billing_cycle_anchor
          required: false
          schema:
            type: string
        - description: Timestamp indicating when the subscription should be scheduled to
            cancel. Will prorate if within the current period if `prorate=true`
          in: query
          name: subscription_cancel_at
          required: false
          schema:
            type: string
        - description: Boolean indicating whether this subscription should cancel at the
            end of the current period.
          in: query
          name: subscription_cancel_at_period_end
          required: false
          schema:
            type: boolean
        - description: This simulates the subscription being canceled or expired
            immediately.
          in: query
          name: subscription_cancel_now
          required: false
          schema:
            type: boolean
        - description: If provided, the invoice returned will preview updating or creating
            a subscription with these default tax rates. The default tax rates
            will apply to any line item that does not have `tax_rates` set.
          in: query
          name: subscription_default_tax_rates
          required: false
          schema:
            type: string
        - description: List of subscription items, each with an attached plan.
          in: query
          name: subscription_items
          required: false
          schema:
            type: array
            items: {}
        - description: If previewing an update to a subscription, this decides whether the
            preview will show the result of applying prorations or not. If set,
            one of `subscription_items` or `subscription`, and one of
            `subscription_items` or `subscription_trial_end` are required.
          in: query
          name: subscription_prorate
          required: false
          schema:
            type: boolean
        - description: If previewing an update to a subscription, and doing proration,
            `subscription_proration_date` forces the proration to be calculated
            as though the update was done at the specified time. The time given
            must be within the current subscription period, and cannot be before
            the subscription was on its current plan. If set, `subscription`,
            and one of `subscription_items`, or `subscription_trial_end` are
            required. Also, `subscription_proration` cannot be set to false.
          in: query
          name: subscription_proration_date
          required: false
          schema:
            type: integer
        - description: Date a subscription is intended to start (can be future or past)
          in: query
          name: subscription_start_date
          required: false
          schema:
            type: integer
        - description: If provided, the invoice returned will preview updating or creating
            a subscription with that tax percent. If set, one of
            `subscription_items` or `subscription` is required. This field has
            been deprecated and will be removed in a future API version, for
            further information view the [migration
            docs](https://stripe.com/docs/billing/migration/taxes) for
            `tax_rates`.
          in: query
          name: subscription_tax_percent
          required: false
          schema:
            type: number
        - description: If provided, the invoice returned will preview updating or creating
            a subscription with that trial end. If set, one of
            `subscription_items` or `subscription` is required.
          in: query
          name: subscription_trial_end
          required: false
          schema:
            type: string
        - description: Indicates if a plan's `trial_period_days` should be applied to the
            subscription. Setting `subscription_trial_end` per subscription is
            preferred, and this defaults to `false`. Setting this flag to `true`
            together with `subscription_trial_end` is not allowed.
          in: query
          name: subscription_trial_from_plan
          required: false
          schema:
            type: boolean
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                properties:
                  data:
                    items:
                      $ref: "#/components/schemas/line_item"
                    type: array
                  has_more:
                    description: True if this list has another page of items after this one
                      that can be fetched.
                    type: boolean
                  object:
                    description: String representing the object's type. Objects of the same
                      type share the same value. Always has the value `list`.
                    enum:
                      - list
                    type: string
                  url:
                    description: The URL where this list can be accessed.
                    type: string
                required:
                  - data
                  - has_more
                  - object
                  - url
                title: InvoiceLinesList
                type: object
                x-expandableFields:
                  - data
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
  "/v1/invoices/{invoice}":
    delete:
      description: <p>Permanently deletes a draft invoice. This cannot be undone. Attempts
        to delete invoices that are no longer in a draft state will fail; once
        an invoice has been finalized, it must be <a
        href="#void_invoice">voided</a>.</p>
      operationId: DeleteInvoicesInvoice
      parameters:
        - description: The identifier of the invoice to be deleted.
          in: path
          name: invoice
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/deleted_invoice"
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
    get:
      description: <p>Retrieves the invoice with the given ID.</p>
      operationId: GetInvoicesInvoice
      parameters:
        - description: Specifies which fields in the response should be expanded.
          in: query
          name: expand
          required: false
          schema:
            type: array
            items: {}
        - description: The identifier of the desired invoice.
          in: path
          name: invoice
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/invoice"
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
    post:
      description: >-
        <p>Draft invoices are fully editable. Once an invoice is <a
        href="/docs/billing/invoices/workflow#finalized">finalized</a>,

        monetary values, as well as <code>collection_method</code>, become uneditable.</p>


        <p>If you would like to stop the Stripe Billing engine from automatically finalizing, reattempting payments on,

        sending reminders for, or <a href="/docs/billing/invoices/reconciliation">automatically reconciling</a> invoices, pass

        <code>auto_advance=false</code>.</p>
      operationId: PostInvoicesInvoice
      parameters:
        - in: path
          name: invoice
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                application_fee_amount:
                  description: A fee in %s that will be applied to the invoice and
                    transferred to the application owner's Stripe account. The
                    request must be made with an OAuth key or the Stripe-Account
                    header in order to take an application fee. For more
                    information, see the application fees
                    [documentation](https://stripe.com/docs/connect/subscriptions#invoices).
                  type: integer
                auto_advance:
                  description: Controls whether Stripe will perform [automatic
                    collection](https://stripe.com/docs/billing/invoices/workflow/#auto_advance)
                    of the invoice.
                  type: boolean
                collection_method:
                  description: Either `charge_automatically` or `send_invoice`. This field
                    can be updated only on `draft` invoices.
                  enum:
                    - charge_automatically
                    - send_invoice
                  type: string
                custom_fields:
                  description: A list of up to 4 custom fields to be displayed on the
                    invoice. If a value for `custom_fields` is specified, the
                    list specified will replace the existing custom field list
                    on this invoice.
                  items:
                    properties:
                      name:
                        type: string
                      value:
                        type: string
                    required:
                      - name
                      - value
                    title: custom_field_params
                    type: object
                days_until_due:
                  description: The number of days from which the invoice is created until
                    it is due. Only valid for invoices where
                    `collection_method=send_invoice`. This field can only be
                    updated on `draft` invoices.
                  type: integer
                default_payment_method:
                  description: ID of the default payment method for the invoice. It must
                    belong to the customer associated with the invoice. If not
                    set, defaults to the subscription's default payment method,
                    if any, or to the default payment method in the customer's
                    invoice settings.
                  type: string
                default_source:
                  description: ID of the default payment source for the invoice. It must
                    belong to the customer associated with the invoice and be in
                    a chargeable state. If not set, defaults to the
                    subscription's default source, if any, or to the customer's
                    default source.
                  type: string
                default_tax_rates:
                  description: The tax rates that will apply to any line item that does not
                    have `tax_rates` set. Pass an empty string to remove
                    previously-set default tax rates.
                  items:
                    type: string
                description:
                  type: string
                due_date:
                  description: The date on which payment for this invoice is due. Only
                    valid for invoices where `collection_method=send_invoice`.
                    This field can only be updated on `draft` invoices.
                  type: integer
                expand:
                  description: Specifies which fields in the response should be expanded.
                  items:
                    type: string
                  type: array
                footer:
                  description: Footer to be displayed on the invoice.
                  type: string
                metadata:
                  type: object
                statement_descriptor:
                  description: Extra information about a charge for the customer's credit
                    card statement. It must contain at least one letter. If not
                    specified and this invoice is part of a subscription, the
                    default `statement_descriptor` will be set to the first
                    subscription item's product's `statement_descriptor`.
                  type: string
                tax_percent:
                  description: The percent tax rate applied to the invoice, represented as
                    a non-negative decimal number (with at most four decimal
                    places) between 0 and 100. To unset a previously-set value,
                    pass an empty string. This field can be updated only on
                    `draft` invoices. This field has been deprecated and will be
                    removed in a future API version, for further information
                    view the [migration
                    docs](https://stripe.com/docs/billing/migration/taxes) for
                    `tax_rates`.
              type: object
        description: Body parameters for the request.
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/invoice"
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
  "/v1/invoices/{invoice}/finalize":
    post:
      description: <p>Stripe automatically finalizes drafts before sending and attempting
        payment on invoices. However, if you’d like to finalize a draft invoice
        manually, you can do so using this method.</p>
      operationId: PostInvoicesInvoiceFinalize
      parameters:
        - description: The invoice to be finalized, it must have `status=draft`.
          in: path
          name: invoice
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                auto_advance:
                  description: Controls whether Stripe will perform [automatic
                    collection](https://stripe.com/docs/billing/invoices/workflow/#auto_advance)
                    of the invoice. When `false`, the invoice's state will not
                    automatically advance without an explicit action.
                  type: boolean
                expand:
                  description: Specifies which fields in the response should be expanded.
                  items:
                    type: string
                  type: array
              type: object
        description: Body parameters for the request.
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/invoice"
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
  "/v1/invoices/{invoice}/lines":
    get:
      description: <p>When retrieving an invoice, you’ll get a <strong>lines</strong>
        property containing the total count of line items and the first handful
        of those items. There is also a URL where you can retrieve the full
        (paginated) list of line items.</p>
      operationId: GetInvoicesInvoiceLines
      parameters:
        - description: Specifies which fields in the response should be expanded.
          in: query
          name: expand
          required: false
          schema:
            type: array
            items: {}
        - description: A cursor for use in pagination. `ending_before` is an object ID that
            defines your place in the list. For instance, if you make a list
            request and receive 100 objects, starting with `obj_bar`, your
            subsequent call can include `ending_before=obj_bar` in order to
            fetch the previous page of the list.
          in: query
          name: ending_before
          required: false
          schema:
            type: string
        - description: The ID of the invoice containing the lines to be retrieved.
          in: path
          name: invoice
          required: true
          schema:
            type: string
        - description: A limit on the number of objects to be returned. Limit can range
            between 1 and 100, and the default is 10.
          in: query
          name: limit
          required: false
          schema:
            type: integer
        - description: A cursor for use in pagination. `starting_after` is an object ID
            that defines your place in the list. For instance, if you make a
            list request and receive 100 objects, ending with `obj_foo`, your
            subsequent call can include `starting_after=obj_foo` in order to
            fetch the next page of the list.
          in: query
          name: starting_after
          required: false
          schema:
            type: string
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                properties:
                  data:
                    items:
                      $ref: "#/components/schemas/line_item"
                    type: array
                  has_more:
                    description: True if this list has another page of items after this one
                      that can be fetched.
                    type: boolean
                  object:
                    description: String representing the object's type. Objects of the same
                      type share the same value. Always has the value `list`.
                    enum:
                      - list
                    type: string
                  url:
                    description: The URL where this list can be accessed.
                    type: string
                required:
                  - data
                  - has_more
                  - object
                  - url
                title: InvoiceLinesList
                type: object
                x-expandableFields:
                  - data
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
  "/v1/invoices/{invoice}/mark_uncollectible":
    post:
      description: <p>Marking an invoice as uncollectible is useful for keeping track of
        bad debts that can be written off for accounting purposes.</p>
      operationId: PostInvoicesInvoiceMarkUncollectible
      parameters:
        - description: The identifier of the invoice to be marked as uncollectible. The
            invoice must be `open`.
          in: path
          name: invoice
          required: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/PutAccountsAccountLogoutPayload"
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/invoice"
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
  "/v1/invoices/{invoice}/pay":
    post:
      description: <p>Stripe automatically creates and then attempts to collect payment on
        invoices for customers on subscriptions according to your <a
        href="https://dashboard.stripe.com/account/billing/automatic">subscriptions
        settings</a>. However, if you’d like to attempt payment on an invoice
        out of the normal collection schedule or for some other reason, you can
        do so.</p>
      operationId: PostInvoicesInvoicePay
      parameters:
        - description: ID of invoice to pay.
          in: path
          name: invoice
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                expand:
                  description: Specifies which fields in the response should be expanded.
                  items:
                    type: string
                  type: array
                forgive:
                  description: >-
                    In cases where the source used to pay the invoice has
                    insufficient funds, passing `forgive=true` controls whether
                    a charge should be attempted for the full amount available
                    on the source, up to the amount to fully pay the invoice.
                    This effectively forgives the difference between the amount
                    available on the source and the amount due. 


                    Passing `forgive=false` will fail the charge if the source hasn't been pre-funded with the right amount. An example for this case is with ACH Credit Transfers and wires: if the amount wired is less than the amount due by a small amount, you might want to forgive the difference.
                  type: boolean
                off_session:
                  description: Indicates if a customer is on or off-session while an
                    invoice payment is attempted.
                  type: boolean
                paid_out_of_band:
                  description: Boolean representing whether an invoice is paid outside of
                    Stripe. This will result in no charge being made.
                  type: boolean
                payment_method:
                  description: A PaymentMethod to be charged. The PaymentMethod must be the
                    ID of a PaymentMethod belonging to the customer associated
                    with the invoice being paid.
                  type: string
                source:
                  description: A payment source to be charged. The source must be the ID of
                    a source belonging to the customer associated with the
                    invoice being paid.
                  type: string
              type: object
        description: Body parameters for the request.
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/invoice"
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
  "/v1/invoices/{invoice}/send":
    post:
      description: >-
        <p>Stripe will automatically send invoices to customers according to
        your <a
        href="https://dashboard.stripe.com/account/billing/automatic">subscriptions
        settings</a>. However, if you’d like to manually send an invoice to your
        customer out of the normal schedule, you can do so. When sending
        invoices that have already been paid, there will be no reference to the
        payment in the email.</p>


        <p>Requests made in test-mode result in no emails being sent, despite sending an <code>invoice.sent</code> event.</p>
      operationId: PostInvoicesInvoiceSend
      parameters:
        - description: The invoice you would like to send. The billing mode for this
            invoice must be `send_invoice`.
          in: path
          name: invoice
          required: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/PutAccountsAccountLogoutPayload"
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/invoice"
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
  "/v1/invoices/{invoice}/void":
    post:
      description: <p>Mark a finalized invoice as void. This cannot be undone. Voiding an
        invoice is similar to <a href="#delete_invoice">deletion</a>, however it
        only applies to finalized invoices and maintains a papertrail where the
        invoice can still be found.</p>
      operationId: PostInvoicesInvoiceVoid
      parameters:
        - description: ID of invoice to void. It must be finalized.
          in: path
          name: invoice
          required: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/PutAccountsAccountLogoutPayload"
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/invoice"
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
  /v1/issuer_fraud_records:
    get:
      deprecated: true
      description: <p>Returns a list of issuer fraud records.</p>
      operationId: GetIssuerFraudRecords
      parameters:
        - description: Specifies which fields in the response should be expanded.
          in: query
          name: expand
          required: false
          schema:
            type: array
            items: {}
        - description: Only return issuer fraud records for the charge specified by this
            charge ID.
          in: query
          name: charge
          required: false
          schema:
            type: string
        - description: A cursor for use in pagination. `ending_before` is an object ID that
            defines your place in the list. For instance, if you make a list
            request and receive 100 objects, starting with `obj_bar`, your
            subsequent call can include `ending_before=obj_bar` in order to
            fetch the previous page of the list.
          in: query
          name: ending_before
          required: false
          schema:
            type: string
        - description: A limit on the number of objects to be returned. Limit can range
            between 1 and 100, and the default is 10.
          in: query
          name: limit
          required: false
          schema:
            type: integer
        - description: A cursor for use in pagination. `starting_after` is an object ID
            that defines your place in the list. For instance, if you make a
            list request and receive 100 objects, ending with `obj_foo`, your
            subsequent call can include `starting_after=obj_foo` in order to
            fetch the next page of the list.
          in: query
          name: starting_after
          required: false
          schema:
            type: string
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                properties:
                  data:
                    items:
                      $ref: "#/components/schemas/issuer_fraud_record"
                    type: array
                  has_more:
                    description: True if this list has another page of items after this one
                      that can be fetched.
                    type: boolean
                  object:
                    description: String representing the object's type. Objects of the same
                      type share the same value. Always has the value `list`.
                    enum:
                      - list
                    type: string
                  url:
                    description: The URL where this list can be accessed.
                    type: string
                required:
                  - data
                  - has_more
                  - object
                  - url
                title: RadarIssuerFraudRecordList
                type: object
                x-expandableFields:
                  - data
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
  "/v1/issuer_fraud_records/{issuer_fraud_record}":
    get:
      deprecated: true
      description: >-
        <p>Retrieves the details of an issuer fraud record that has previously
        been created. </p>


        <p>Please refer to the <a href="#issuer_fraud_record_object">issuer fraud record</a> object reference for more details.</p>
      operationId: GetIssuerFraudRecordsIssuerFraudRecord
      parameters:
        - description: Specifies which fields in the response should be expanded.
          in: query
          name: expand
          required: false
          schema:
            type: array
            items: {}
        - description: The identifier of the issuer fraud record to be retrieved.
          in: path
          name: issuer_fraud_record
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/issuer_fraud_record"
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
  /v1/issuing/authorizations:
    get:
      description: <p>Returns a list of Issuing <code>Authorization</code> objects. The
        objects are sorted in descending order by creation date, with the most
        recently created object appearing first.</p>
      operationId: GetIssuingAuthorizations
      parameters:
        - description: Specifies which fields in the response should be expanded.
          in: query
          name: expand
          required: false
          schema:
            type: array
            items: {}
        - description: Only return issuing transactions that belong to the given card.
          in: query
          name: card
          required: false
          schema:
            type: string
        - description: Only return authorizations belonging to the given cardholder.
          in: query
          name: cardholder
          required: false
          schema:
            type: string
        - description: Only return authorizations that were created during the given date
            interval.
          in: query
          name: created
          required: false
          schema:
            type: integer
        - description: A cursor for use in pagination. `ending_before` is an object ID that
            defines your place in the list. For instance, if you make a list
            request and receive 100 objects, starting with `obj_bar`, your
            subsequent call can include `ending_before=obj_bar` in order to
            fetch the previous page of the list.
          in: query
          name: ending_before
          required: false
          schema:
            type: string
        - description: A limit on the number of objects to be returned. Limit can range
            between 1 and 100, and the default is 10.
          in: query
          name: limit
          required: false
          schema:
            type: integer
        - description: A cursor for use in pagination. `starting_after` is an object ID
            that defines your place in the list. For instance, if you make a
            list request and receive 100 objects, ending with `obj_foo`, your
            subsequent call can include `starting_after=obj_foo` in order to
            fetch the next page of the list.
          in: query
          name: starting_after
          required: false
          schema:
            type: string
        - description: Only return authorizations with the given status. One of `pending`,
            `closed`, or `reversed`.
          in: query
          name: status
          required: false
          schema:
            type: string
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                properties:
                  data:
                    items:
                      $ref: "#/components/schemas/issuing.authorization"
                    type: array
                  has_more:
                    description: True if this list has another page of items after this one
                      that can be fetched.
                    type: boolean
                  object:
                    description: String representing the object's type. Objects of the same
                      type share the same value. Always has the value `list`.
                    enum:
                      - list
                    type: string
                  url:
                    description: The URL where this list can be accessed.
                    type: string
                required:
                  - data
                  - has_more
                  - object
                  - url
                type: object
                x-expandableFields:
                  - data
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
  "/v1/issuing/authorizations/{authorization}":
    get:
      description: <p>Retrieves an Issuing <code>Authorization</code> object.</p>
      operationId: GetIssuingAuthorizationsAuthorization
      parameters:
        - description: Specifies which fields in the response should be expanded.
          in: query
          name: expand
          required: false
          schema:
            type: array
            items: {}
        - description: The ID of the authorization to retrieve.
          in: path
          name: authorization
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/issuing.authorization"
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
    post:
      description: <p>Updates the specified Issuing <code>Authorization</code> object by
        setting the values of the parameters passed. Any parameters not provided
        will be left unchanged.</p>
      operationId: PostIssuingAuthorizationsAuthorization
      parameters:
        - description: The identifier of the authorization to update.
          in: path
          name: authorization
          required: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/PostIssuingAuthorizationsAuthorizationPay\
          load"
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/issuing.authorization"
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
  "/v1/issuing/authorizations/{authorization}/approve":
    post:
      description: <p>Approves a pending Issuing <code>Authorization</code> object.</p>
      operationId: PostIssuingAuthorizationsAuthorizationApprove
      parameters:
        - description: The identifier of the authorization to approve.
          in: path
          name: authorization
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                expand:
                  description: Specifies which fields in the response should be expanded.
                  items:
                    type: string
                  type: array
                held_amount:
                  description: If the authorization's `is_held_amount_controllable`
                    property is `true`, you may provide this value to control
                    how much to hold for the authorization. Must be positive
                    (use
                    [`decline`](https://stripe.com/docs/api/issuing/authorizations/decline)
                    to decline an authorization request).
                  type: integer
                metadata:
                  description: Set of key-value pairs that you can attach to an object.
                    This can be useful for storing additional information about
                    the object in a structured format.
              type: object
        description: Body parameters for the request.
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/issuing.authorization"
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
  "/v1/issuing/authorizations/{authorization}/decline":
    post:
      description: <p>Declines a pending Issuing <code>Authorization</code> object.</p>
      operationId: PostIssuingAuthorizationsAuthorizationDecline
      parameters:
        - description: The identifier of the issuing authorization to decline.
          in: path
          name: authorization
          required: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/PostIssuingAuthorizationsAuthorizationPay\
          load"
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/issuing.authorization"
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
  /v1/issuing/cardholders:
    get:
      description: <p>Returns a list of Issuing <code>Cardholder</code> objects. The
        objects are sorted in descending order by creation date, with the most
        recently created object appearing first.</p>
      operationId: GetIssuingCardholders
      parameters:
        - description: Specifies which fields in the response should be expanded.
          in: query
          name: expand
          required: false
          schema:
            type: array
            items: {}
        - description: Only return cardholders that were created during the given date
            interval.
          in: query
          name: created
          required: false
          schema:
            type: integer
        - description: Only return cardholders that have the given email address.
          in: query
          name: email
          required: false
          schema:
            type: string
        - description: A cursor for use in pagination. `ending_before` is an object ID that
            defines your place in the list. For instance, if you make a list
            request and receive 100 objects, starting with `obj_bar`, your
            subsequent call can include `ending_before=obj_bar` in order to
            fetch the previous page of the list.
          in: query
          name: ending_before
          required: false
          schema:
            type: string
        - description: Only return the default cardholder.
          in: query
          name: is_default
          required: false
          schema:
            type: boolean
        - description: A limit on the number of objects to be returned. Limit can range
            between 1 and 100, and the default is 10.
          in: query
          name: limit
          required: false
          schema:
            type: integer
        - description: Only return cardholders that have the given phone number.
          in: query
          name: phone_number
          required: false
          schema:
            type: string
        - description: A cursor for use in pagination. `starting_after` is an object ID
            that defines your place in the list. For instance, if you make a
            list request and receive 100 objects, ending with `obj_foo`, your
            subsequent call can include `starting_after=obj_foo` in order to
            fetch the next page of the list.
          in: query
          name: starting_after
          required: false
          schema:
            type: string
        - description: Only return cardholders that have the given status. One of `active`,
            `inactive`, or `blocked`.
          in: query
          name: status
          required: false
          schema:
            type: string
        - description: Only return cardholders that have the given type. One of
            `individual` or `business_entity`.
          in: query
          name: type
          required: false
          schema:
            type: string
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                properties:
                  data:
                    items:
                      $ref: "#/components/schemas/issuing.cardholder"
                    type: array
                  has_more:
                    description: True if this list has another page of items after this one
                      that can be fetched.
                    type: boolean
                  object:
                    description: String representing the object's type. Objects of the same
                      type share the same value. Always has the value `list`.
                    enum:
                      - list
                    type: string
                  url:
                    description: The URL where this list can be accessed.
                    type: string
                required:
                  - data
                  - has_more
                  - object
                  - url
                type: object
                x-expandableFields:
                  - data
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
    post:
      description: <p>Creates a new Issuing <code>Cardholder</code> object that can be
        issued cards.</p>
      operationId: PostIssuingCardholders
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                authorization_controls:
                  description: Spending rules that give you control over how your
                    cardholders can make charges. Refer to our
                    [authorizations](https://stripe.com/docs/issuing/authorizations)
                    documentation for more details.
                  properties:
                    allowed_categories:
                      items:
                        enum:
                          - ac_refrigeration_repair
                          - accounting_bookkeeping_services
                          - advertising_services
                          - agricultural_cooperative
                          - airlines_air_carriers
                          - airports_flying_fields
                          - ambulance_services
                          - amusement_parks_carnivals
                          - antique_reproductions
                          - antique_shops
                          - aquariums
                          - architectural_surveying_services
                          - art_dealers_and_galleries
                          - artists_supply_and_craft_shops
                          - auto_and_home_supply_stores
                          - auto_body_repair_shops
                          - auto_paint_shops
                          - auto_service_shops
                          - automated_cash_disburse
                          - automated_fuel_dispensers
                          - automobile_associations
                          - automotive_parts_and_accessories_stores
                          - automotive_tire_stores
                          - bail_and_bond_payments
                          - bakeries
                          - bands_orchestras
                          - barber_and_beauty_shops
                          - betting_casino_gambling
                          - bicycle_shops
                          - billiard_pool_establishments
                          - boat_dealers
                          - boat_rentals_and_leases
                          - book_stores
                          - books_periodicals_and_newspapers
                          - bowling_alleys
                          - bus_lines
                          - business_secretarial_schools
                          - buying_shopping_services
                          - cable_satellite_and_other_pay_television_and_radio
                          - camera_and_photographic_supply_stores
                          - candy_nut_and_confectionery_stores
                          - car_and_truck_dealers_new_used
                          - car_and_truck_dealers_used_only
                          - car_rental_agencies
                          - car_washes
                          - carpentry_services
                          - carpet_upholstery_cleaning
                          - caterers
                          - charitable_and_social_service_organizations_fundraising
                          - chemicals_and_allied_products
                          - child_care_services
                          - childrens_and_infants_wear_stores
                          - chiropodists_podiatrists
                          - chiropractors
                          - cigar_stores_and_stands
                          - civic_social_fraternal_associations
                          - cleaning_and_maintenance
                          - clothing_rental
                          - colleges_universities
                          - commercial_equipment
                          - commercial_footwear
                          - commercial_photography_art_and_graphics
                          - commuter_transport_and_ferries
                          - computer_network_services
                          - computer_programming
                          - computer_repair
                          - computer_software_stores
                          - computers_peripherals_and_software
                          - concrete_work_services
                          - construction_materials
                          - consulting_public_relations
                          - correspondence_schools
                          - cosmetic_stores
                          - counseling_services
                          - country_clubs
                          - courier_services
                          - court_costs
                          - credit_reporting_agencies
                          - cruise_lines
                          - dairy_products_stores
                          - dance_hall_studios_schools
                          - dating_escort_services
                          - dentists_orthodontists
                          - department_stores
                          - detective_agencies
                          - digital_goods_applications
                          - direct_marketing_catalog_merchant
                          - direct_marketing_combination_catalog_and_retail_merchant
                          - direct_marketing_inbound_telemarketing
                          - direct_marketing_insurance_services
                          - direct_marketing_other
                          - direct_marketing_outbound_telemarketing
                          - direct_marketing_subscription
                          - direct_marketing_travel
                          - discount_stores
                          - doctors
                          - door_to_door_sales
                          - drapery_window_covering_and_upholstery_stores
                          - drinking_places
                          - drug_stores_and_pharmacies
                          - drugs_drug_proprietaries_and_druggist_sundries
                          - dry_cleaners
                          - durable_goods
                          - duty_free_stores
                          - eating_places_restaurants
                          - educational_services
                          - electric_razor_stores
                          - electrical_parts_and_equipment
                          - electrical_services
                          - electronics_repair_shops
                          - electronics_stores
                          - elementary_secondary_schools
                          - employment_temp_agencies
                          - equipment_rental
                          - exterminating_services
                          - family_clothing_stores
                          - fast_food_restaurants
                          - financial_institutions
                          - fines_government_administrative_entities
                          - fireplace_fireplace_screens_and_accessories_stores
                          - floor_covering_stores
                          - florists
                          - florists_supplies_nursery_stock_and_flowers
                          - freezer_and_locker_meat_provisioners
                          - fuel_dealers_non_automotive
                          - funeral_services_crematories
                          - furniture_home_furnishings_and_equipment_stores_except_appliances
                          - furniture_repair_refinishing
                          - furriers_and_fur_shops
                          - general_services
                          - gift_card_novelty_and_souvenir_shops
                          - glass_paint_and_wallpaper_stores
                          - glassware_crystal_stores
                          - golf_courses_public
                          - government_services
                          - grocery_stores_supermarkets
                          - hardware_equipment_and_supplies
                          - hardware_stores
                          - health_and_beauty_spas
                          - hearing_aids_sales_and_supplies
                          - heating_plumbing_a_c
                          - hobby_toy_and_game_shops
                          - home_supply_warehouse_stores
                          - hospitals
                          - hotels_motels_and_resorts
                          - household_appliance_stores
                          - industrial_supplies
                          - information_retrieval_services
                          - insurance_default
                          - insurance_underwriting_premiums
                          - intra_company_purchases
                          - jewelry_stores_watches_clocks_and_silverware_stores
                          - landscaping_services
                          - laundries
                          - laundry_cleaning_services
                          - legal_services_attorneys
                          - luggage_and_leather_goods_stores
                          - lumber_building_materials_stores
                          - manual_cash_disburse
                          - marinas_service_and_supplies
                          - masonry_stonework_and_plaster
                          - massage_parlors
                          - medical_and_dental_labs
                          - medical_dental_ophthalmic_and_hospital_equipment_and_supplies
                          - medical_services
                          - membership_organizations
                          - mens_and_boys_clothing_and_accessories_stores
                          - mens_womens_clothing_stores
                          - metal_service_centers
                          - miscellaneous
                          - miscellaneous_apparel_and_accessory_shops
                          - miscellaneous_auto_dealers
                          - miscellaneous_business_services
                          - miscellaneous_food_stores
                          - miscellaneous_general_merchandise
                          - miscellaneous_general_services
                          - miscellaneous_home_furnishing_specialty_stores
                          - miscellaneous_publishing_and_printing
                          - miscellaneous_recreation_services
                          - miscellaneous_repair_shops
                          - miscellaneous_specialty_retail
                          - mobile_home_dealers
                          - motion_picture_theaters
                          - motor_freight_carriers_and_trucking
                          - motor_homes_dealers
                          - motor_vehicle_supplies_and_new_parts
                          - motorcycle_shops_and_dealers
                          - motorcycle_shops_dealers
                          - music_stores_musical_instruments_pianos_and_sheet_music
                          - news_dealers_and_newsstands
                          - non_fi_money_orders
                          - non_fi_stored_value_card_purchase_load
                          - nondurable_goods
                          - nurseries_lawn_and_garden_supply_stores
                          - nursing_personal_care
                          - office_and_commercial_furniture
                          - opticians_eyeglasses
                          - optometrists_ophthalmologist
                          - orthopedic_goods_prosthetic_devices
                          - osteopaths
                          - package_stores_beer_wine_and_liquor
                          - paints_varnishes_and_supplies
                          - parking_lots_garages
                          - passenger_railways
                          - pawn_shops
                          - pet_shops_pet_food_and_supplies
                          - petroleum_and_petroleum_products
                          - photo_developing
                          - photographic_photocopy_microfilm_equipment_and_supplies
                          - photographic_studios
                          - picture_video_production
                          - piece_goods_notions_and_other_dry_goods
                          - plumbing_heating_equipment_and_supplies
                          - political_organizations
                          - postal_services_government_only
                          - precious_stones_and_metals_watches_and_jewelry
                          - professional_services
                          - public_warehousing_and_storage
                          - quick_copy_repro_and_blueprint
                          - railroads
                          - real_estate_agents_and_managers_rentals
                          - record_stores
                          - recreational_vehicle_rentals
                          - religious_goods_stores
                          - religious_organizations
                          - roofing_siding_sheet_metal
                          - secretarial_support_services
                          - security_brokers_dealers
                          - service_stations
                          - sewing_needlework_fabric_and_piece_goods_stores
                          - shoe_repair_hat_cleaning
                          - shoe_stores
                          - small_appliance_repair
                          - snowmobile_dealers
                          - special_trade_services
                          - specialty_cleaning
                          - sporting_goods_stores
                          - sporting_recreation_camps
                          - sports_and_riding_apparel_stores
                          - sports_clubs_fields
                          - stamp_and_coin_stores
                          - stationary_office_supplies_printing_and_writing_paper
                          - stationery_stores_office_and_school_supply_stores
                          - swimming_pools_sales
                          - t_ui_travel_germany
                          - tailors_alterations
                          - tax_payments_government_agencies
                          - tax_preparation_services
                          - taxicabs_limousines
                          - telecommunication_equipment_and_telephone_sales
                          - telecommunication_services
                          - telegraph_services
                          - tent_and_awning_shops
                          - testing_laboratories
                          - theatrical_ticket_agencies
                          - timeshares
                          - tire_retreading_and_repair
                          - tolls_bridge_fees
                          - tourist_attractions_and_exhibits
                          - towing_services
                          - trailer_parks_campgrounds
                          - transportation_services
                          - travel_agencies_tour_operators
                          - truck_stop_iteration
                          - truck_utility_trailer_rentals
                          - typesetting_plate_making_and_related_services
                          - typewriter_stores
                          - u_s_federal_government_agencies_or_departments
                          - uniforms_commercial_clothing
                          - used_merchandise_and_secondhand_stores
                          - utilities
                          - variety_stores
                          - veterinary_services
                          - video_amusement_game_supplies
                          - video_game_arcades
                          - video_tape_rental_stores
                          - vocational_trade_schools
                          - watch_jewelry_repair
                          - welding_repair
                          - wholesale_clubs
                          - wig_and_toupee_stores
                          - wires_money_orders
                          - womens_accessory_and_specialty_shops
                          - womens_ready_to_wear_stores
                          - wrecking_and_salvage_yards
                        type: string
                      type: array
                    blocked_categories:
                      items:
                        enum:
                          - ac_refrigeration_repair
                          - accounting_bookkeeping_services
                          - advertising_services
                          - agricultural_cooperative
                          - airlines_air_carriers
                          - airports_flying_fields
                          - ambulance_services
                          - amusement_parks_carnivals
                          - antique_reproductions
                          - antique_shops
                          - aquariums
                          - architectural_surveying_services
                          - art_dealers_and_galleries
                          - artists_supply_and_craft_shops
                          - auto_and_home_supply_stores
                          - auto_body_repair_shops
                          - auto_paint_shops
                          - auto_service_shops
                          - automated_cash_disburse
                          - automated_fuel_dispensers
                          - automobile_associations
                          - automotive_parts_and_accessories_stores
                          - automotive_tire_stores
                          - bail_and_bond_payments
                          - bakeries
                          - bands_orchestras
                          - barber_and_beauty_shops
                          - betting_casino_gambling
                          - bicycle_shops
                          - billiard_pool_establishments
                          - boat_dealers
                          - boat_rentals_and_leases
                          - book_stores
                          - books_periodicals_and_newspapers
                          - bowling_alleys
                          - bus_lines
                          - business_secretarial_schools
                          - buying_shopping_services
                          - cable_satellite_and_other_pay_television_and_radio
                          - camera_and_photographic_supply_stores
                          - candy_nut_and_confectionery_stores
                          - car_and_truck_dealers_new_used
                          - car_and_truck_dealers_used_only
                          - car_rental_agencies
                          - car_washes
                          - carpentry_services
                          - carpet_upholstery_cleaning
                          - caterers
                          - charitable_and_social_service_organizations_fundraising
                          - chemicals_and_allied_products
                          - child_care_services
                          - childrens_and_infants_wear_stores
                          - chiropodists_podiatrists
                          - chiropractors
                          - cigar_stores_and_stands
                          - civic_social_fraternal_associations
                          - cleaning_and_maintenance
                          - clothing_rental
                          - colleges_universities
                          - commercial_equipment
                          - commercial_footwear
                          - commercial_photography_art_and_graphics
                          - commuter_transport_and_ferries
                          - computer_network_services
                          - computer_programming
                          - computer_repair
                          - computer_software_stores
                          - computers_peripherals_and_software
                          - concrete_work_services
                          - construction_materials
                          - consulting_public_relations
                          - correspondence_schools
                          - cosmetic_stores
                          - counseling_services
                          - country_clubs
                          - courier_services
                          - court_costs
                          - credit_reporting_agencies
                          - cruise_lines
                          - dairy_products_stores
                          - dance_hall_studios_schools
                          - dating_escort_services
                          - dentists_orthodontists
                          - department_stores
                          - detective_agencies
                          - digital_goods_applications
                          - direct_marketing_catalog_merchant
                          - direct_marketing_combination_catalog_and_retail_merchant
                          - direct_marketing_inbound_telemarketing
                          - direct_marketing_insurance_services
                          - direct_marketing_other
                          - direct_marketing_outbound_telemarketing
                          - direct_marketing_subscription
                          - direct_marketing_travel
                          - discount_stores
                          - doctors
                          - door_to_door_sales
                          - drapery_window_covering_and_upholstery_stores
                          - drinking_places
                          - drug_stores_and_pharmacies
                          - drugs_drug_proprietaries_and_druggist_sundries
                          - dry_cleaners
                          - durable_goods
                          - duty_free_stores
                          - eating_places_restaurants
                          - educational_services
                          - electric_razor_stores
                          - electrical_parts_and_equipment
                          - electrical_services
                          - electronics_repair_shops
                          - electronics_stores
                          - elementary_secondary_schools
                          - employment_temp_agencies
                          - equipment_rental
                          - exterminating_services
                          - family_clothing_stores
                          - fast_food_restaurants
                          - financial_institutions
                          - fines_government_administrative_entities
                          - fireplace_fireplace_screens_and_accessories_stores
                          - floor_covering_stores
                          - florists
                          - florists_supplies_nursery_stock_and_flowers
                          - freezer_and_locker_meat_provisioners
                          - fuel_dealers_non_automotive
                          - funeral_services_crematories
                          - furniture_home_furnishings_and_equipment_stores_except_appliances
                          - furniture_repair_refinishing
                          - furriers_and_fur_shops
                          - general_services
                          - gift_card_novelty_and_souvenir_shops
                          - glass_paint_and_wallpaper_stores
                          - glassware_crystal_stores
                          - golf_courses_public
                          - government_services
                          - grocery_stores_supermarkets
                          - hardware_equipment_and_supplies
                          - hardware_stores
                          - health_and_beauty_spas
                          - hearing_aids_sales_and_supplies
                          - heating_plumbing_a_c
                          - hobby_toy_and_game_shops
                          - home_supply_warehouse_stores
                          - hospitals
                          - hotels_motels_and_resorts
                          - household_appliance_stores
                          - industrial_supplies
                          - information_retrieval_services
                          - insurance_default
                          - insurance_underwriting_premiums
                          - intra_company_purchases
                          - jewelry_stores_watches_clocks_and_silverware_stores
                          - landscaping_services
                          - laundries
                          - laundry_cleaning_services
                          - legal_services_attorneys
                          - luggage_and_leather_goods_stores
                          - lumber_building_materials_stores
                          - manual_cash_disburse
                          - marinas_service_and_supplies
                          - masonry_stonework_and_plaster
                          - massage_parlors
                          - medical_and_dental_labs
                          - medical_dental_ophthalmic_and_hospital_equipment_and_supplies
                          - medical_services
                          - membership_organizations
                          - mens_and_boys_clothing_and_accessories_stores
                          - mens_womens_clothing_stores
                          - metal_service_centers
                          - miscellaneous
                          - miscellaneous_apparel_and_accessory_shops
                          - miscellaneous_auto_dealers
                          - miscellaneous_business_services
                          - miscellaneous_food_stores
                          - miscellaneous_general_merchandise
                          - miscellaneous_general_services
                          - miscellaneous_home_furnishing_specialty_stores
                          - miscellaneous_publishing_and_printing
                          - miscellaneous_recreation_services
                          - miscellaneous_repair_shops
                          - miscellaneous_specialty_retail
                          - mobile_home_dealers
                          - motion_picture_theaters
                          - motor_freight_carriers_and_trucking
                          - motor_homes_dealers
                          - motor_vehicle_supplies_and_new_parts
                          - motorcycle_shops_and_dealers
                          - motorcycle_shops_dealers
                          - music_stores_musical_instruments_pianos_and_sheet_music
                          - news_dealers_and_newsstands
                          - non_fi_money_orders
                          - non_fi_stored_value_card_purchase_load
                          - nondurable_goods
                          - nurseries_lawn_and_garden_supply_stores
                          - nursing_personal_care
                          - office_and_commercial_furniture
                          - opticians_eyeglasses
                          - optometrists_ophthalmologist
                          - orthopedic_goods_prosthetic_devices
                          - osteopaths
                          - package_stores_beer_wine_and_liquor
                          - paints_varnishes_and_supplies
                          - parking_lots_garages
                          - passenger_railways
                          - pawn_shops
                          - pet_shops_pet_food_and_supplies
                          - petroleum_and_petroleum_products
                          - photo_developing
                          - photographic_photocopy_microfilm_equipment_and_supplies
                          - photographic_studios
                          - picture_video_production
                          - piece_goods_notions_and_other_dry_goods
                          - plumbing_heating_equipment_and_supplies
                          - political_organizations
                          - postal_services_government_only
                          - precious_stones_and_metals_watches_and_jewelry
                          - professional_services
                          - public_warehousing_and_storage
                          - quick_copy_repro_and_blueprint
                          - railroads
                          - real_estate_agents_and_managers_rentals
                          - record_stores
                          - recreational_vehicle_rentals
                          - religious_goods_stores
                          - religious_organizations
                          - roofing_siding_sheet_metal
                          - secretarial_support_services
                          - security_brokers_dealers
                          - service_stations
                          - sewing_needlework_fabric_and_piece_goods_stores
                          - shoe_repair_hat_cleaning
                          - shoe_stores
                          - small_appliance_repair
                          - snowmobile_dealers
                          - special_trade_services
                          - specialty_cleaning
                          - sporting_goods_stores
                          - sporting_recreation_camps
                          - sports_and_riding_apparel_stores
                          - sports_clubs_fields
                          - stamp_and_coin_stores
                          - stationary_office_supplies_printing_and_writing_paper
                          - stationery_stores_office_and_school_supply_stores
                          - swimming_pools_sales
                          - t_ui_travel_germany
                          - tailors_alterations
                          - tax_payments_government_agencies
                          - tax_preparation_services
                          - taxicabs_limousines
                          - telecommunication_equipment_and_telephone_sales
                          - telecommunication_services
                          - telegraph_services
                          - tent_and_awning_shops
                          - testing_laboratories
                          - theatrical_ticket_agencies
                          - timeshares
                          - tire_retreading_and_repair
                          - tolls_bridge_fees
                          - tourist_attractions_and_exhibits
                          - towing_services
                          - trailer_parks_campgrounds
                          - transportation_services
                          - travel_agencies_tour_operators
                          - truck_stop_iteration
                          - truck_utility_trailer_rentals
                          - typesetting_plate_making_and_related_services
                          - typewriter_stores
                          - u_s_federal_government_agencies_or_departments
                          - uniforms_commercial_clothing
                          - used_merchandise_and_secondhand_stores
                          - utilities
                          - variety_stores
                          - veterinary_services
                          - video_amusement_game_supplies
                          - video_game_arcades
                          - video_tape_rental_stores
                          - vocational_trade_schools
                          - watch_jewelry_repair
                          - welding_repair
                          - wholesale_clubs
                          - wig_and_toupee_stores
                          - wires_money_orders
                          - womens_accessory_and_specialty_shops
                          - womens_ready_to_wear_stores
                          - wrecking_and_salvage_yards
                        type: string
                      type: array
                    spending_limits:
                      items:
                        properties:
                          amount:
                            type: integer
                          categories:
                            items:
                              enum:
                                - ac_refrigeration_repair
                                - accounting_bookkeeping_services
                                - advertising_services
                                - agricultural_cooperative
                                - airlines_air_carriers
                                - airports_flying_fields
                                - ambulance_services
                                - amusement_parks_carnivals
                                - antique_reproductions
                                - antique_shops
                                - aquariums
                                - architectural_surveying_services
                                - art_dealers_and_galleries
                                - artists_supply_and_craft_shops
                                - auto_and_home_supply_stores
                                - auto_body_repair_shops
                                - auto_paint_shops
                                - auto_service_shops
                                - automated_cash_disburse
                                - automated_fuel_dispensers
                                - automobile_associations
                                - automotive_parts_and_accessories_stores
                                - automotive_tire_stores
                                - bail_and_bond_payments
                                - bakeries
                                - bands_orchestras
                                - barber_and_beauty_shops
                                - betting_casino_gambling
                                - bicycle_shops
                                - billiard_pool_establishments
                                - boat_dealers
                                - boat_rentals_and_leases
                                - book_stores
                                - books_periodicals_and_newspapers
                                - bowling_alleys
                                - bus_lines
                                - business_secretarial_schools
                                - buying_shopping_services
                                - cable_satellite_and_other_pay_television_and_radio
                                - camera_and_photographic_supply_stores
                                - candy_nut_and_confectionery_stores
                                - car_and_truck_dealers_new_used
                                - car_and_truck_dealers_used_only
                                - car_rental_agencies
                                - car_washes
                                - carpentry_services
                                - carpet_upholstery_cleaning
                                - caterers
                                - charitable_and_social_service_organizations_fundraising
                                - chemicals_and_allied_products
                                - child_care_services
                                - childrens_and_infants_wear_stores
                                - chiropodists_podiatrists
                                - chiropractors
                                - cigar_stores_and_stands
                                - civic_social_fraternal_associations
                                - cleaning_and_maintenance
                                - clothing_rental
                                - colleges_universities
                                - commercial_equipment
                                - commercial_footwear
                                - commercial_photography_art_and_graphics
                                - commuter_transport_and_ferries
                                - computer_network_services
                                - computer_programming
                                - computer_repair
                                - computer_software_stores
                                - computers_peripherals_and_software
                                - concrete_work_services
                                - construction_materials
                                - consulting_public_relations
                                - correspondence_schools
                                - cosmetic_stores
                                - counseling_services
                                - country_clubs
                                - courier_services
                                - court_costs
                                - credit_reporting_agencies
                                - cruise_lines
                                - dairy_products_stores
                                - dance_hall_studios_schools
                                - dating_escort_services
                                - dentists_orthodontists
                                - department_stores
                                - detective_agencies
                                - digital_goods_applications
                                - direct_marketing_catalog_merchant
                                - direct_marketing_combination_catalog_and_retail_merchant
                                - direct_marketing_inbound_telemarketing
                                - direct_marketing_insurance_services
                                - direct_marketing_other
                                - direct_marketing_outbound_telemarketing
                                - direct_marketing_subscription
                                - direct_marketing_travel
                                - discount_stores
                                - doctors
                                - door_to_door_sales
                                - drapery_window_covering_and_upholstery_stores
                                - drinking_places
                                - drug_stores_and_pharmacies
                                - drugs_drug_proprietaries_and_druggist_sundries
                                - dry_cleaners
                                - durable_goods
                                - duty_free_stores
                                - eating_places_restaurants
                                - educational_services
                                - electric_razor_stores
                                - electrical_parts_and_equipment
                                - electrical_services
                                - electronics_repair_shops
                                - electronics_stores
                                - elementary_secondary_schools
                                - employment_temp_agencies
                                - equipment_rental
                                - exterminating_services
                                - family_clothing_stores
                                - fast_food_restaurants
                                - financial_institutions
                                - fines_government_administrative_entities
                                - fireplace_fireplace_screens_and_accessories_stores
                                - floor_covering_stores
                                - florists
                                - florists_supplies_nursery_stock_and_flowers
                                - freezer_and_locker_meat_provisioners
                                - fuel_dealers_non_automotive
                                - funeral_services_crematories
                                - furniture_home_furnishings_and_equipment_stores_except_appliances
                                - furniture_repair_refinishing
                                - furriers_and_fur_shops
                                - general_services
                                - gift_card_novelty_and_souvenir_shops
                                - glass_paint_and_wallpaper_stores
                                - glassware_crystal_stores
                                - golf_courses_public
                                - government_services
                                - grocery_stores_supermarkets
                                - hardware_equipment_and_supplies
                                - hardware_stores
                                - health_and_beauty_spas
                                - hearing_aids_sales_and_supplies
                                - heating_plumbing_a_c
                                - hobby_toy_and_game_shops
                                - home_supply_warehouse_stores
                                - hospitals
                                - hotels_motels_and_resorts
                                - household_appliance_stores
                                - industrial_supplies
                                - information_retrieval_services
                                - insurance_default
                                - insurance_underwriting_premiums
                                - intra_company_purchases
                                - jewelry_stores_watches_clocks_and_silverware_stores
                                - landscaping_services
                                - laundries
                                - laundry_cleaning_services
                                - legal_services_attorneys
                                - luggage_and_leather_goods_stores
                                - lumber_building_materials_stores
                                - manual_cash_disburse
                                - marinas_service_and_supplies
                                - masonry_stonework_and_plaster
                                - massage_parlors
                                - medical_and_dental_labs
                                - medical_dental_ophthalmic_and_hospital_equipment_and_supplies
                                - medical_services
                                - membership_organizations
                                - mens_and_boys_clothing_and_accessories_stores
                                - mens_womens_clothing_stores
                                - metal_service_centers
                                - miscellaneous
                                - miscellaneous_apparel_and_accessory_shops
                                - miscellaneous_auto_dealers
                                - miscellaneous_business_services
                                - miscellaneous_food_stores
                                - miscellaneous_general_merchandise
                                - miscellaneous_general_services
                                - miscellaneous_home_furnishing_specialty_stores
                                - miscellaneous_publishing_and_printing
                                - miscellaneous_recreation_services
                                - miscellaneous_repair_shops
                                - miscellaneous_specialty_retail
                                - mobile_home_dealers
                                - motion_picture_theaters
                                - motor_freight_carriers_and_trucking
                                - motor_homes_dealers
                                - motor_vehicle_supplies_and_new_parts
                                - motorcycle_shops_and_dealers
                                - motorcycle_shops_dealers
                                - music_stores_musical_instruments_pianos_and_sheet_music
                                - news_dealers_and_newsstands
                                - non_fi_money_orders
                                - non_fi_stored_value_card_purchase_load
                                - nondurable_goods
                                - nurseries_lawn_and_garden_supply_stores
                                - nursing_personal_care
                                - office_and_commercial_furniture
                                - opticians_eyeglasses
                                - optometrists_ophthalmologist
                                - orthopedic_goods_prosthetic_devices
                                - osteopaths
                                - package_stores_beer_wine_and_liquor
                                - paints_varnishes_and_supplies
                                - parking_lots_garages
                                - passenger_railways
                                - pawn_shops
                                - pet_shops_pet_food_and_supplies
                                - petroleum_and_petroleum_products
                                - photo_developing
                                - photographic_photocopy_microfilm_equipment_and_supplies
                                - photographic_studios
                                - picture_video_production
                                - piece_goods_notions_and_other_dry_goods
                                - plumbing_heating_equipment_and_supplies
                                - political_organizations
                                - postal_services_government_only
                                - precious_stones_and_metals_watches_and_jewelry
                                - professional_services
                                - public_warehousing_and_storage
                                - quick_copy_repro_and_blueprint
                                - railroads
                                - real_estate_agents_and_managers_rentals
                                - record_stores
                                - recreational_vehicle_rentals
                                - religious_goods_stores
                                - religious_organizations
                                - roofing_siding_sheet_metal
                                - secretarial_support_services
                                - security_brokers_dealers
                                - service_stations
                                - sewing_needlework_fabric_and_piece_goods_stores
                                - shoe_repair_hat_cleaning
                                - shoe_stores
                                - small_appliance_repair
                                - snowmobile_dealers
                                - special_trade_services
                                - specialty_cleaning
                                - sporting_goods_stores
                                - sporting_recreation_camps
                                - sports_and_riding_apparel_stores
                                - sports_clubs_fields
                                - stamp_and_coin_stores
                                - stationary_office_supplies_printing_and_writing_paper
                                - stationery_stores_office_and_school_supply_stores
                                - swimming_pools_sales
                                - t_ui_travel_germany
                                - tailors_alterations
                                - tax_payments_government_agencies
                                - tax_preparation_services
                                - taxicabs_limousines
                                - telecommunication_equipment_and_telephone_sales
                                - telecommunication_services
                                - telegraph_services
                                - tent_and_awning_shops
                                - testing_laboratories
                                - theatrical_ticket_agencies
                                - timeshares
                                - tire_retreading_and_repair
                                - tolls_bridge_fees
                                - tourist_attractions_and_exhibits
                                - towing_services
                                - trailer_parks_campgrounds
                                - transportation_services
                                - travel_agencies_tour_operators
                                - truck_stop_iteration
                                - truck_utility_trailer_rentals
                                - typesetting_plate_making_and_related_services
                                - typewriter_stores
                                - u_s_federal_government_agencies_or_departments
                                - uniforms_commercial_clothing
                                - used_merchandise_and_secondhand_stores
                                - utilities
                                - variety_stores
                                - veterinary_services
                                - video_amusement_game_supplies
                                - video_game_arcades
                                - video_tape_rental_stores
                                - vocational_trade_schools
                                - watch_jewelry_repair
                                - welding_repair
                                - wholesale_clubs
                                - wig_and_toupee_stores
                                - wires_money_orders
                                - womens_accessory_and_specialty_shops
                                - womens_ready_to_wear_stores
                                - wrecking_and_salvage_yards
                              type: string
                            type: array
                          interval:
                            enum:
                              - all_time
                              - daily
                              - monthly
                              - per_authorization
                              - weekly
                              - yearly
                            type: string
                        required:
                          - amount
                          - interval
                        title: spending_limits_param
                        type: object
                      type: array
                    spending_limits_currency:
                      type: string
                  title: authorization_controls_param_v2
                  type: object
                billing:
                  description: The cardholder's billing address.
                  properties:
                    address:
                      properties:
                        city:
                          type: string
                        country:
                          type: string
                        line1:
                          type: string
                        line2:
                          type: string
                        postal_code:
                          type: string
                        state:
                          type: string
                      required:
                        - city
                        - country
                        - line1
                        - postal_code
                      title: required_address
                      type: object
                  required:
                    - address
                  title: billing_specs
                  type: object
                email:
                  description: The cardholder's email address.
                  type: string
                expand:
                  description: Specifies which fields in the response should be expanded.
                  items:
                    type: string
                  type: array
                is_default:
                  description: Specifies whether to set this as the default cardholder.
                  type: boolean
                metadata:
                  type: object
                name:
                  description: The cardholder's name. This will be printed on cards issued
                    to them.
                  type: string
                phone_number:
                  description: The cardholder's phone number. This will be transformed to
                    [E.164](https://en.wikipedia.org/wiki/E.164) if it is not
                    provided in that format already.
                  type: string
                status:
                  description: Specifies whether to permit authorizations on this
                    cardholder's cards. Possible values are `active` or
                    `inactive`.
                  enum:
                    - active
                    - inactive
                  type: string
                type:
                  description: The type of cardholder. Possible values are `individual` or
                    `business_entity`.
                  enum:
                    - business_entity
                    - individual
                  type: string
              required:
                - billing
                - name
                - type
              type: object
        description: Body parameters for the request.
        required: true
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/issuing.cardholder"
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
  "/v1/issuing/cardholders/{cardholder}":
    get:
      description: <p>Retrieves an Issuing <code>Cardholder</code> object.</p>
      operationId: GetIssuingCardholdersCardholder
      parameters:
        - description: Specifies which fields in the response should be expanded.
          in: query
          name: expand
          required: false
          schema:
            type: array
            items: {}
        - description: The identifier of the cardholder to be retrieved.
          in: path
          name: cardholder
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/issuing.cardholder"
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
    post:
      description: <p>Updates the specified Issuing <code>Cardholder</code> object by
        setting the values of the parameters passed. Any parameters not provided
        will be left unchanged.</p>
      operationId: PostIssuingCardholdersCardholder
      parameters:
        - description: The ID of the cardholder to update.
          in: path
          name: cardholder
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                authorization_controls:
                  description: Spending rules that give you some control over how your
                    cards can be used. Refer to our
                    [authorizations](https://stripe.com/docs/issuing/authorizations)
                    documentation for more details.
                  properties:
                    allowed_categories:
                      items:
                        enum:
                          - ac_refrigeration_repair
                          - accounting_bookkeeping_services
                          - advertising_services
                          - agricultural_cooperative
                          - airlines_air_carriers
                          - airports_flying_fields
                          - ambulance_services
                          - amusement_parks_carnivals
                          - antique_reproductions
                          - antique_shops
                          - aquariums
                          - architectural_surveying_services
                          - art_dealers_and_galleries
                          - artists_supply_and_craft_shops
                          - auto_and_home_supply_stores
                          - auto_body_repair_shops
                          - auto_paint_shops
                          - auto_service_shops
                          - automated_cash_disburse
                          - automated_fuel_dispensers
                          - automobile_associations
                          - automotive_parts_and_accessories_stores
                          - automotive_tire_stores
                          - bail_and_bond_payments
                          - bakeries
                          - bands_orchestras
                          - barber_and_beauty_shops
                          - betting_casino_gambling
                          - bicycle_shops
                          - billiard_pool_establishments
                          - boat_dealers
                          - boat_rentals_and_leases
                          - book_stores
                          - books_periodicals_and_newspapers
                          - bowling_alleys
                          - bus_lines
                          - business_secretarial_schools
                          - buying_shopping_services
                          - cable_satellite_and_other_pay_television_and_radio
                          - camera_and_photographic_supply_stores
                          - candy_nut_and_confectionery_stores
                          - car_and_truck_dealers_new_used
                          - car_and_truck_dealers_used_only
                          - car_rental_agencies
                          - car_washes
                          - carpentry_services
                          - carpet_upholstery_cleaning
                          - caterers
                          - charitable_and_social_service_organizations_fundraising
                          - chemicals_and_allied_products
                          - child_care_services
                          - childrens_and_infants_wear_stores
                          - chiropodists_podiatrists
                          - chiropractors
                          - cigar_stores_and_stands
                          - civic_social_fraternal_associations
                          - cleaning_and_maintenance
                          - clothing_rental
                          - colleges_universities
                          - commercial_equipment
                          - commercial_footwear
                          - commercial_photography_art_and_graphics
                          - commuter_transport_and_ferries
                          - computer_network_services
                          - computer_programming
                          - computer_repair
                          - computer_software_stores
                          - computers_peripherals_and_software
                          - concrete_work_services
                          - construction_materials
                          - consulting_public_relations
                          - correspondence_schools
                          - cosmetic_stores
                          - counseling_services
                          - country_clubs
                          - courier_services
                          - court_costs
                          - credit_reporting_agencies
                          - cruise_lines
                          - dairy_products_stores
                          - dance_hall_studios_schools
                          - dating_escort_services
                          - dentists_orthodontists
                          - department_stores
                          - detective_agencies
                          - digital_goods_applications
                          - direct_marketing_catalog_merchant
                          - direct_marketing_combination_catalog_and_retail_merchant
                          - direct_marketing_inbound_telemarketing
                          - direct_marketing_insurance_services
                          - direct_marketing_other
                          - direct_marketing_outbound_telemarketing
                          - direct_marketing_subscription
                          - direct_marketing_travel
                          - discount_stores
                          - doctors
                          - door_to_door_sales
                          - drapery_window_covering_and_upholstery_stores
                          - drinking_places
                          - drug_stores_and_pharmacies
                          - drugs_drug_proprietaries_and_druggist_sundries
                          - dry_cleaners
                          - durable_goods
                          - duty_free_stores
                          - eating_places_restaurants
                          - educational_services
                          - electric_razor_stores
                          - electrical_parts_and_equipment
                          - electrical_services
                          - electronics_repair_shops
                          - electronics_stores
                          - elementary_secondary_schools
                          - employment_temp_agencies
                          - equipment_rental
                          - exterminating_services
                          - family_clothing_stores
                          - fast_food_restaurants
                          - financial_institutions
                          - fines_government_administrative_entities
                          - fireplace_fireplace_screens_and_accessories_stores
                          - floor_covering_stores
                          - florists
                          - florists_supplies_nursery_stock_and_flowers
                          - freezer_and_locker_meat_provisioners
                          - fuel_dealers_non_automotive
                          - funeral_services_crematories
                          - furniture_home_furnishings_and_equipment_stores_except_appliances
                          - furniture_repair_refinishing
                          - furriers_and_fur_shops
                          - general_services
                          - gift_card_novelty_and_souvenir_shops
                          - glass_paint_and_wallpaper_stores
                          - glassware_crystal_stores
                          - golf_courses_public
                          - government_services
                          - grocery_stores_supermarkets
                          - hardware_equipment_and_supplies
                          - hardware_stores
                          - health_and_beauty_spas
                          - hearing_aids_sales_and_supplies
                          - heating_plumbing_a_c
                          - hobby_toy_and_game_shops
                          - home_supply_warehouse_stores
                          - hospitals
                          - hotels_motels_and_resorts
                          - household_appliance_stores
                          - industrial_supplies
                          - information_retrieval_services
                          - insurance_default
                          - insurance_underwriting_premiums
                          - intra_company_purchases
                          - jewelry_stores_watches_clocks_and_silverware_stores
                          - landscaping_services
                          - laundries
                          - laundry_cleaning_services
                          - legal_services_attorneys
                          - luggage_and_leather_goods_stores
                          - lumber_building_materials_stores
                          - manual_cash_disburse
                          - marinas_service_and_supplies
                          - masonry_stonework_and_plaster
                          - massage_parlors
                          - medical_and_dental_labs
                          - medical_dental_ophthalmic_and_hospital_equipment_and_supplies
                          - medical_services
                          - membership_organizations
                          - mens_and_boys_clothing_and_accessories_stores
                          - mens_womens_clothing_stores
                          - metal_service_centers
                          - miscellaneous
                          - miscellaneous_apparel_and_accessory_shops
                          - miscellaneous_auto_dealers
                          - miscellaneous_business_services
                          - miscellaneous_food_stores
                          - miscellaneous_general_merchandise
                          - miscellaneous_general_services
                          - miscellaneous_home_furnishing_specialty_stores
                          - miscellaneous_publishing_and_printing
                          - miscellaneous_recreation_services
                          - miscellaneous_repair_shops
                          - miscellaneous_specialty_retail
                          - mobile_home_dealers
                          - motion_picture_theaters
                          - motor_freight_carriers_and_trucking
                          - motor_homes_dealers
                          - motor_vehicle_supplies_and_new_parts
                          - motorcycle_shops_and_dealers
                          - motorcycle_shops_dealers
                          - music_stores_musical_instruments_pianos_and_sheet_music
                          - news_dealers_and_newsstands
                          - non_fi_money_orders
                          - non_fi_stored_value_card_purchase_load
                          - nondurable_goods
                          - nurseries_lawn_and_garden_supply_stores
                          - nursing_personal_care
                          - office_and_commercial_furniture
                          - opticians_eyeglasses
                          - optometrists_ophthalmologist
                          - orthopedic_goods_prosthetic_devices
                          - osteopaths
                          - package_stores_beer_wine_and_liquor
                          - paints_varnishes_and_supplies
                          - parking_lots_garages
                          - passenger_railways
                          - pawn_shops
                          - pet_shops_pet_food_and_supplies
                          - petroleum_and_petroleum_products
                          - photo_developing
                          - photographic_photocopy_microfilm_equipment_and_supplies
                          - photographic_studios
                          - picture_video_production
                          - piece_goods_notions_and_other_dry_goods
                          - plumbing_heating_equipment_and_supplies
                          - political_organizations
                          - postal_services_government_only
                          - precious_stones_and_metals_watches_and_jewelry
                          - professional_services
                          - public_warehousing_and_storage
                          - quick_copy_repro_and_blueprint
                          - railroads
                          - real_estate_agents_and_managers_rentals
                          - record_stores
                          - recreational_vehicle_rentals
                          - religious_goods_stores
                          - religious_organizations
                          - roofing_siding_sheet_metal
                          - secretarial_support_services
                          - security_brokers_dealers
                          - service_stations
                          - sewing_needlework_fabric_and_piece_goods_stores
                          - shoe_repair_hat_cleaning
                          - shoe_stores
                          - small_appliance_repair
                          - snowmobile_dealers
                          - special_trade_services
                          - specialty_cleaning
                          - sporting_goods_stores
                          - sporting_recreation_camps
                          - sports_and_riding_apparel_stores
                          - sports_clubs_fields
                          - stamp_and_coin_stores
                          - stationary_office_supplies_printing_and_writing_paper
                          - stationery_stores_office_and_school_supply_stores
                          - swimming_pools_sales
                          - t_ui_travel_germany
                          - tailors_alterations
                          - tax_payments_government_agencies
                          - tax_preparation_services
                          - taxicabs_limousines
                          - telecommunication_equipment_and_telephone_sales
                          - telecommunication_services
                          - telegraph_services
                          - tent_and_awning_shops
                          - testing_laboratories
                          - theatrical_ticket_agencies
                          - timeshares
                          - tire_retreading_and_repair
                          - tolls_bridge_fees
                          - tourist_attractions_and_exhibits
                          - towing_services
                          - trailer_parks_campgrounds
                          - transportation_services
                          - travel_agencies_tour_operators
                          - truck_stop_iteration
                          - truck_utility_trailer_rentals
                          - typesetting_plate_making_and_related_services
                          - typewriter_stores
                          - u_s_federal_government_agencies_or_departments
                          - uniforms_commercial_clothing
                          - used_merchandise_and_secondhand_stores
                          - utilities
                          - variety_stores
                          - veterinary_services
                          - video_amusement_game_supplies
                          - video_game_arcades
                          - video_tape_rental_stores
                          - vocational_trade_schools
                          - watch_jewelry_repair
                          - welding_repair
                          - wholesale_clubs
                          - wig_and_toupee_stores
                          - wires_money_orders
                          - womens_accessory_and_specialty_shops
                          - womens_ready_to_wear_stores
                          - wrecking_and_salvage_yards
                        type: string
                      type: array
                    blocked_categories:
                      items:
                        enum:
                          - ac_refrigeration_repair
                          - accounting_bookkeeping_services
                          - advertising_services
                          - agricultural_cooperative
                          - airlines_air_carriers
                          - airports_flying_fields
                          - ambulance_services
                          - amusement_parks_carnivals
                          - antique_reproductions
                          - antique_shops
                          - aquariums
                          - architectural_surveying_services
                          - art_dealers_and_galleries
                          - artists_supply_and_craft_shops
                          - auto_and_home_supply_stores
                          - auto_body_repair_shops
                          - auto_paint_shops
                          - auto_service_shops
                          - automated_cash_disburse
                          - automated_fuel_dispensers
                          - automobile_associations
                          - automotive_parts_and_accessories_stores
                          - automotive_tire_stores
                          - bail_and_bond_payments
                          - bakeries
                          - bands_orchestras
                          - barber_and_beauty_shops
                          - betting_casino_gambling
                          - bicycle_shops
                          - billiard_pool_establishments
                          - boat_dealers
                          - boat_rentals_and_leases
                          - book_stores
                          - books_periodicals_and_newspapers
                          - bowling_alleys
                          - bus_lines
                          - business_secretarial_schools
                          - buying_shopping_services
                          - cable_satellite_and_other_pay_television_and_radio
                          - camera_and_photographic_supply_stores
                          - candy_nut_and_confectionery_stores
                          - car_and_truck_dealers_new_used
                          - car_and_truck_dealers_used_only
                          - car_rental_agencies
                          - car_washes
                          - carpentry_services
                          - carpet_upholstery_cleaning
                          - caterers
                          - charitable_and_social_service_organizations_fundraising
                          - chemicals_and_allied_products
                          - child_care_services
                          - childrens_and_infants_wear_stores
                          - chiropodists_podiatrists
                          - chiropractors
                          - cigar_stores_and_stands
                          - civic_social_fraternal_associations
                          - cleaning_and_maintenance
                          - clothing_rental
                          - colleges_universities
                          - commercial_equipment
                          - commercial_footwear
                          - commercial_photography_art_and_graphics
                          - commuter_transport_and_ferries
                          - computer_network_services
                          - computer_programming
                          - computer_repair
                          - computer_software_stores
                          - computers_peripherals_and_software
                          - concrete_work_services
                          - construction_materials
                          - consulting_public_relations
                          - correspondence_schools
                          - cosmetic_stores
                          - counseling_services
                          - country_clubs
                          - courier_services
                          - court_costs
                          - credit_reporting_agencies
                          - cruise_lines
                          - dairy_products_stores
                          - dance_hall_studios_schools
                          - dating_escort_services
                          - dentists_orthodontists
                          - department_stores
                          - detective_agencies
                          - digital_goods_applications
                          - direct_marketing_catalog_merchant
                          - direct_marketing_combination_catalog_and_retail_merchant
                          - direct_marketing_inbound_telemarketing
                          - direct_marketing_insurance_services
                          - direct_marketing_other
                          - direct_marketing_outbound_telemarketing
                          - direct_marketing_subscription
                          - direct_marketing_travel
                          - discount_stores
                          - doctors
                          - door_to_door_sales
                          - drapery_window_covering_and_upholstery_stores
                          - drinking_places
                          - drug_stores_and_pharmacies
                          - drugs_drug_proprietaries_and_druggist_sundries
                          - dry_cleaners
                          - durable_goods
                          - duty_free_stores
                          - eating_places_restaurants
                          - educational_services
                          - electric_razor_stores
                          - electrical_parts_and_equipment
                          - electrical_services
                          - electronics_repair_shops
                          - electronics_stores
                          - elementary_secondary_schools
                          - employment_temp_agencies
                          - equipment_rental
                          - exterminating_services
                          - family_clothing_stores
                          - fast_food_restaurants
                          - financial_institutions
                          - fines_government_administrative_entities
                          - fireplace_fireplace_screens_and_accessories_stores
                          - floor_covering_stores
                          - florists
                          - florists_supplies_nursery_stock_and_flowers
                          - freezer_and_locker_meat_provisioners
                          - fuel_dealers_non_automotive
                          - funeral_services_crematories
                          - furniture_home_furnishings_and_equipment_stores_except_appliances
                          - furniture_repair_refinishing
                          - furriers_and_fur_shops
                          - general_services
                          - gift_card_novelty_and_souvenir_shops
                          - glass_paint_and_wallpaper_stores
                          - glassware_crystal_stores
                          - golf_courses_public
                          - government_services
                          - grocery_stores_supermarkets
                          - hardware_equipment_and_supplies
                          - hardware_stores
                          - health_and_beauty_spas
                          - hearing_aids_sales_and_supplies
                          - heating_plumbing_a_c
                          - hobby_toy_and_game_shops
                          - home_supply_warehouse_stores
                          - hospitals
                          - hotels_motels_and_resorts
                          - household_appliance_stores
                          - industrial_supplies
                          - information_retrieval_services
                          - insurance_default
                          - insurance_underwriting_premiums
                          - intra_company_purchases
                          - jewelry_stores_watches_clocks_and_silverware_stores
                          - landscaping_services
                          - laundries
                          - laundry_cleaning_services
                          - legal_services_attorneys
                          - luggage_and_leather_goods_stores
                          - lumber_building_materials_stores
                          - manual_cash_disburse
                          - marinas_service_and_supplies
                          - masonry_stonework_and_plaster
                          - massage_parlors
                          - medical_and_dental_labs
                          - medical_dental_ophthalmic_and_hospital_equipment_and_supplies
                          - medical_services
                          - membership_organizations
                          - mens_and_boys_clothing_and_accessories_stores
                          - mens_womens_clothing_stores
                          - metal_service_centers
                          - miscellaneous
                          - miscellaneous_apparel_and_accessory_shops
                          - miscellaneous_auto_dealers
                          - miscellaneous_business_services
                          - miscellaneous_food_stores
                          - miscellaneous_general_merchandise
                          - miscellaneous_general_services
                          - miscellaneous_home_furnishing_specialty_stores
                          - miscellaneous_publishing_and_printing
                          - miscellaneous_recreation_services
                          - miscellaneous_repair_shops
                          - miscellaneous_specialty_retail
                          - mobile_home_dealers
                          - motion_picture_theaters
                          - motor_freight_carriers_and_trucking
                          - motor_homes_dealers
                          - motor_vehicle_supplies_and_new_parts
                          - motorcycle_shops_and_dealers
                          - motorcycle_shops_dealers
                          - music_stores_musical_instruments_pianos_and_sheet_music
                          - news_dealers_and_newsstands
                          - non_fi_money_orders
                          - non_fi_stored_value_card_purchase_load
                          - nondurable_goods
                          - nurseries_lawn_and_garden_supply_stores
                          - nursing_personal_care
                          - office_and_commercial_furniture
                          - opticians_eyeglasses
                          - optometrists_ophthalmologist
                          - orthopedic_goods_prosthetic_devices
                          - osteopaths
                          - package_stores_beer_wine_and_liquor
                          - paints_varnishes_and_supplies
                          - parking_lots_garages
                          - passenger_railways
                          - pawn_shops
                          - pet_shops_pet_food_and_supplies
                          - petroleum_and_petroleum_products
                          - photo_developing
                          - photographic_photocopy_microfilm_equipment_and_supplies
                          - photographic_studios
                          - picture_video_production
                          - piece_goods_notions_and_other_dry_goods
                          - plumbing_heating_equipment_and_supplies
                          - political_organizations
                          - postal_services_government_only
                          - precious_stones_and_metals_watches_and_jewelry
                          - professional_services
                          - public_warehousing_and_storage
                          - quick_copy_repro_and_blueprint
                          - railroads
                          - real_estate_agents_and_managers_rentals
                          - record_stores
                          - recreational_vehicle_rentals
                          - religious_goods_stores
                          - religious_organizations
                          - roofing_siding_sheet_metal
                          - secretarial_support_services
                          - security_brokers_dealers
                          - service_stations
                          - sewing_needlework_fabric_and_piece_goods_stores
                          - shoe_repair_hat_cleaning
                          - shoe_stores
                          - small_appliance_repair
                          - snowmobile_dealers
                          - special_trade_services
                          - specialty_cleaning
                          - sporting_goods_stores
                          - sporting_recreation_camps
                          - sports_and_riding_apparel_stores
                          - sports_clubs_fields
                          - stamp_and_coin_stores
                          - stationary_office_supplies_printing_and_writing_paper
                          - stationery_stores_office_and_school_supply_stores
                          - swimming_pools_sales
                          - t_ui_travel_germany
                          - tailors_alterations
                          - tax_payments_government_agencies
                          - tax_preparation_services
                          - taxicabs_limousines
                          - telecommunication_equipment_and_telephone_sales
                          - telecommunication_services
                          - telegraph_services
                          - tent_and_awning_shops
                          - testing_laboratories
                          - theatrical_ticket_agencies
                          - timeshares
                          - tire_retreading_and_repair
                          - tolls_bridge_fees
                          - tourist_attractions_and_exhibits
                          - towing_services
                          - trailer_parks_campgrounds
                          - transportation_services
                          - travel_agencies_tour_operators
                          - truck_stop_iteration
                          - truck_utility_trailer_rentals
                          - typesetting_plate_making_and_related_services
                          - typewriter_stores
                          - u_s_federal_government_agencies_or_departments
                          - uniforms_commercial_clothing
                          - used_merchandise_and_secondhand_stores
                          - utilities
                          - variety_stores
                          - veterinary_services
                          - video_amusement_game_supplies
                          - video_game_arcades
                          - video_tape_rental_stores
                          - vocational_trade_schools
                          - watch_jewelry_repair
                          - welding_repair
                          - wholesale_clubs
                          - wig_and_toupee_stores
                          - wires_money_orders
                          - womens_accessory_and_specialty_shops
                          - womens_ready_to_wear_stores
                          - wrecking_and_salvage_yards
                        type: string
                      type: array
                    spending_limits:
                      items:
                        properties:
                          amount:
                            type: integer
                          categories:
                            items:
                              enum:
                                - ac_refrigeration_repair
                                - accounting_bookkeeping_services
                                - advertising_services
                                - agricultural_cooperative
                                - airlines_air_carriers
                                - airports_flying_fields
                                - ambulance_services
                                - amusement_parks_carnivals
                                - antique_reproductions
                                - antique_shops
                                - aquariums
                                - architectural_surveying_services
                                - art_dealers_and_galleries
                                - artists_supply_and_craft_shops
                                - auto_and_home_supply_stores
                                - auto_body_repair_shops
                                - auto_paint_shops
                                - auto_service_shops
                                - automated_cash_disburse
                                - automated_fuel_dispensers
                                - automobile_associations
                                - automotive_parts_and_accessories_stores
                                - automotive_tire_stores
                                - bail_and_bond_payments
                                - bakeries
                                - bands_orchestras
                                - barber_and_beauty_shops
                                - betting_casino_gambling
                                - bicycle_shops
                                - billiard_pool_establishments
                                - boat_dealers
                                - boat_rentals_and_leases
                                - book_stores
                                - books_periodicals_and_newspapers
                                - bowling_alleys
                                - bus_lines
                                - business_secretarial_schools
                                - buying_shopping_services
                                - cable_satellite_and_other_pay_television_and_radio
                                - camera_and_photographic_supply_stores
                                - candy_nut_and_confectionery_stores
                                - car_and_truck_dealers_new_used
                                - car_and_truck_dealers_used_only
                                - car_rental_agencies
                                - car_washes
                                - carpentry_services
                                - carpet_upholstery_cleaning
                                - caterers
                                - charitable_and_social_service_organizations_fundraising
                                - chemicals_and_allied_products
                                - child_care_services
                                - childrens_and_infants_wear_stores
                                - chiropodists_podiatrists
                                - chiropractors
                                - cigar_stores_and_stands
                                - civic_social_fraternal_associations
                                - cleaning_and_maintenance
                                - clothing_rental
                                - colleges_universities
                                - commercial_equipment
                                - commercial_footwear
                                - commercial_photography_art_and_graphics
                                - commuter_transport_and_ferries
                                - computer_network_services
                                - computer_programming
                                - computer_repair
                                - computer_software_stores
                                - computers_peripherals_and_software
                                - concrete_work_services
                                - construction_materials
                                - consulting_public_relations
                                - correspondence_schools
                                - cosmetic_stores
                                - counseling_services
                                - country_clubs
                                - courier_services
                                - court_costs
                                - credit_reporting_agencies
                                - cruise_lines
                                - dairy_products_stores
                                - dance_hall_studios_schools
                                - dating_escort_services
                                - dentists_orthodontists
                                - department_stores
                                - detective_agencies
                                - digital_goods_applications
                                - direct_marketing_catalog_merchant
                                - direct_marketing_combination_catalog_and_retail_merchant
                                - direct_marketing_inbound_telemarketing
                                - direct_marketing_insurance_services
                                - direct_marketing_other
                                - direct_marketing_outbound_telemarketing
                                - direct_marketing_subscription
                                - direct_marketing_travel
                                - discount_stores
                                - doctors
                                - door_to_door_sales
                                - drapery_window_covering_and_upholstery_stores
                                - drinking_places
                                - drug_stores_and_pharmacies
                                - drugs_drug_proprietaries_and_druggist_sundries
                                - dry_cleaners
                                - durable_goods
                                - duty_free_stores
                                - eating_places_restaurants
                                - educational_services
                                - electric_razor_stores
                                - electrical_parts_and_equipment
                                - electrical_services
                                - electronics_repair_shops
                                - electronics_stores
                                - elementary_secondary_schools
                                - employment_temp_agencies
                                - equipment_rental
                                - exterminating_services
                                - family_clothing_stores
                                - fast_food_restaurants
                                - financial_institutions
                                - fines_government_administrative_entities
                                - fireplace_fireplace_screens_and_accessories_stores
                                - floor_covering_stores
                                - florists
                                - florists_supplies_nursery_stock_and_flowers
                                - freezer_and_locker_meat_provisioners
                                - fuel_dealers_non_automotive
                                - funeral_services_crematories
                                - furniture_home_furnishings_and_equipment_stores_except_appliances
                                - furniture_repair_refinishing
                                - furriers_and_fur_shops
                                - general_services
                                - gift_card_novelty_and_souvenir_shops
                                - glass_paint_and_wallpaper_stores
                                - glassware_crystal_stores
                                - golf_courses_public
                                - government_services
                                - grocery_stores_supermarkets
                                - hardware_equipment_and_supplies
                                - hardware_stores
                                - health_and_beauty_spas
                                - hearing_aids_sales_and_supplies
                                - heating_plumbing_a_c
                                - hobby_toy_and_game_shops
                                - home_supply_warehouse_stores
                                - hospitals
                                - hotels_motels_and_resorts
                                - household_appliance_stores
                                - industrial_supplies
                                - information_retrieval_services
                                - insurance_default
                                - insurance_underwriting_premiums
                                - intra_company_purchases
                                - jewelry_stores_watches_clocks_and_silverware_stores
                                - landscaping_services
                                - laundries
                                - laundry_cleaning_services
                                - legal_services_attorneys
                                - luggage_and_leather_goods_stores
                                - lumber_building_materials_stores
                                - manual_cash_disburse
                                - marinas_service_and_supplies
                                - masonry_stonework_and_plaster
                                - massage_parlors
                                - medical_and_dental_labs
                                - medical_dental_ophthalmic_and_hospital_equipment_and_supplies
                                - medical_services
                                - membership_organizations
                                - mens_and_boys_clothing_and_accessories_stores
                                - mens_womens_clothing_stores
                                - metal_service_centers
                                - miscellaneous
                                - miscellaneous_apparel_and_accessory_shops
                                - miscellaneous_auto_dealers
                                - miscellaneous_business_services
                                - miscellaneous_food_stores
                                - miscellaneous_general_merchandise
                                - miscellaneous_general_services
                                - miscellaneous_home_furnishing_specialty_stores
                                - miscellaneous_publishing_and_printing
                                - miscellaneous_recreation_services
                                - miscellaneous_repair_shops
                                - miscellaneous_specialty_retail
                                - mobile_home_dealers
                                - motion_picture_theaters
                                - motor_freight_carriers_and_trucking
                                - motor_homes_dealers
                                - motor_vehicle_supplies_and_new_parts
                                - motorcycle_shops_and_dealers
                                - motorcycle_shops_dealers
                                - music_stores_musical_instruments_pianos_and_sheet_music
                                - news_dealers_and_newsstands
                                - non_fi_money_orders
                                - non_fi_stored_value_card_purchase_load
                                - nondurable_goods
                                - nurseries_lawn_and_garden_supply_stores
                                - nursing_personal_care
                                - office_and_commercial_furniture
                                - opticians_eyeglasses
                                - optometrists_ophthalmologist
                                - orthopedic_goods_prosthetic_devices
                                - osteopaths
                                - package_stores_beer_wine_and_liquor
                                - paints_varnishes_and_supplies
                                - parking_lots_garages
                                - passenger_railways
                                - pawn_shops
                                - pet_shops_pet_food_and_supplies
                                - petroleum_and_petroleum_products
                                - photo_developing
                                - photographic_photocopy_microfilm_equipment_and_supplies
                                - photographic_studios
                                - picture_video_production
                                - piece_goods_notions_and_other_dry_goods
                                - plumbing_heating_equipment_and_supplies
                                - political_organizations
                                - postal_services_government_only
                                - precious_stones_and_metals_watches_and_jewelry
                                - professional_services
                                - public_warehousing_and_storage
                                - quick_copy_repro_and_blueprint
                                - railroads
                                - real_estate_agents_and_managers_rentals
                                - record_stores
                                - recreational_vehicle_rentals
                                - religious_goods_stores
                                - religious_organizations
                                - roofing_siding_sheet_metal
                                - secretarial_support_services
                                - security_brokers_dealers
                                - service_stations
                                - sewing_needlework_fabric_and_piece_goods_stores
                                - shoe_repair_hat_cleaning
                                - shoe_stores
                                - small_appliance_repair
                                - snowmobile_dealers
                                - special_trade_services
                                - specialty_cleaning
                                - sporting_goods_stores
                                - sporting_recreation_camps
                                - sports_and_riding_apparel_stores
                                - sports_clubs_fields
                                - stamp_and_coin_stores
                                - stationary_office_supplies_printing_and_writing_paper
                                - stationery_stores_office_and_school_supply_stores
                                - swimming_pools_sales
                                - t_ui_travel_germany
                                - tailors_alterations
                                - tax_payments_government_agencies
                                - tax_preparation_services
                                - taxicabs_limousines
                                - telecommunication_equipment_and_telephone_sales
                                - telecommunication_services
                                - telegraph_services
                                - tent_and_awning_shops
                                - testing_laboratories
                                - theatrical_ticket_agencies
                                - timeshares
                                - tire_retreading_and_repair
                                - tolls_bridge_fees
                                - tourist_attractions_and_exhibits
                                - towing_services
                                - trailer_parks_campgrounds
                                - transportation_services
                                - travel_agencies_tour_operators
                                - truck_stop_iteration
                                - truck_utility_trailer_rentals
                                - typesetting_plate_making_and_related_services
                                - typewriter_stores
                                - u_s_federal_government_agencies_or_departments
                                - uniforms_commercial_clothing
                                - used_merchandise_and_secondhand_stores
                                - utilities
                                - variety_stores
                                - veterinary_services
                                - video_amusement_game_supplies
                                - video_game_arcades
                                - video_tape_rental_stores
                                - vocational_trade_schools
                                - watch_jewelry_repair
                                - welding_repair
                                - wholesale_clubs
                                - wig_and_toupee_stores
                                - wires_money_orders
                                - womens_accessory_and_specialty_shops
                                - womens_ready_to_wear_stores
                                - wrecking_and_salvage_yards
                              type: string
                            type: array
                          interval:
                            enum:
                              - all_time
                              - daily
                              - monthly
                              - per_authorization
                              - weekly
                              - yearly
                            type: string
                        required:
                          - amount
                          - interval
                        title: spending_limits_param
                        type: object
                      type: array
                    spending_limits_currency:
                      type: string
                  title: authorization_controls_param_v2
                  type: object
                billing:
                  description: The cardholder's billing address.
                  properties:
                    address:
                      properties:
                        city:
                          type: string
                        country:
                          type: string
                        line1:
                          type: string
                        line2:
                          type: string
                        postal_code:
                          type: string
                        state:
                          type: string
                      required:
                        - city
                        - country
                        - line1
                        - postal_code
                      title: required_address
                      type: object
                  required:
                    - address
                  title: billing_specs
                  type: object
                email:
                  description: The cardholder's email address.
                  type: string
                expand:
                  description: Specifies which fields in the response should be expanded.
                  items:
                    type: string
                  type: array
                is_default:
                  description: Specifies whether to set this as the default cardholder.
                  type: boolean
                metadata:
                  description: Set of key-value pairs that you can attach to an object.
                    This can be useful for storing additional information about
                    the object in a structured format. Individual keys can be
                    unset by posting an empty value to them. All keys can be
                    unset by posting an empty value to `metadata`.
                  type: object
                phone_number:
                  description: The cardholder's phone number.
                  type: string
                status:
                  description: Specifies whether to permit authorizations on this
                    cardholder's cards. Possible values are `active` or
                    `inactive`.
                  enum:
                    - active
                    - inactive
                  type: string
              type: object
        description: Body parameters for the request.
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/issuing.cardholder"
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
  /v1/issuing/cards:
    get:
      description: <p>Returns a list of Issuing <code>Card</code> objects. The objects are
        sorted in descending order by creation date, with the most recently
        created object appearing first.</p>
      operationId: GetIssuingCards
      parameters:
        - description: Specifies which fields in the response should be expanded.
          in: query
          name: expand
          required: false
          schema:
            type: array
            items: {}
        - description: Only return cards belonging to the Cardholder with the provided ID.
          in: query
          name: cardholder
          required: false
          schema:
            type: string
        - description: Only return cards that were issued during the given date interval.
          in: query
          name: created
          required: false
          schema:
            type: integer
        - description: A cursor for use in pagination. `ending_before` is an object ID that
            defines your place in the list. For instance, if you make a list
            request and receive 100 objects, starting with `obj_bar`, your
            subsequent call can include `ending_before=obj_bar` in order to
            fetch the previous page of the list.
          in: query
          name: ending_before
          required: false
          schema:
            type: string
        - description: Only return cards that have the given expiration month.
          in: query
          name: exp_month
          required: false
          schema:
            type: integer
        - description: Only return cards that have the given expiration year.
          in: query
          name: exp_year
          required: false
          schema:
            type: integer
        - description: Only return cards that have the given last four digits.
          in: query
          name: last4
          required: false
          schema:
            type: string
        - description: A limit on the number of objects to be returned. Limit can range
            between 1 and 100, and the default is 10.
          in: query
          name: limit
          required: false
          schema:
            type: integer
        - description: Only return cards that have the given name.
          in: query
          name: name
          required: false
          schema:
            type: string
        - description: Only return cards whose full card number matches that of this card
            source ID.
          in: query
          name: source
          required: false
          schema:
            type: string
        - description: A cursor for use in pagination. `starting_after` is an object ID
            that defines your place in the list. For instance, if you make a
            list request and receive 100 objects, ending with `obj_foo`, your
            subsequent call can include `starting_after=obj_foo` in order to
            fetch the next page of the list.
          in: query
          name: starting_after
          required: false
          schema:
            type: string
        - description: Only return cards that have the given status. One of `active`,
            `inactive`, `canceled`, `lost`, or `stolen`.
          in: query
          name: status
          required: false
          schema:
            type: string
        - description: Only return cards that have the given type. One of `virtual` or
            `physical`.
          in: query
          name: type
          required: false
          schema:
            type: string
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                properties:
                  data:
                    items:
                      $ref: "#/components/schemas/issuing.card"
                    type: array
                  has_more:
                    description: True if this list has another page of items after this one
                      that can be fetched.
                    type: boolean
                  object:
                    description: String representing the object's type. Objects of the same
                      type share the same value. Always has the value `list`.
                    enum:
                      - list
                    type: string
                  url:
                    description: The URL where this list can be accessed.
                    type: string
                required:
                  - data
                  - has_more
                  - object
                  - url
                type: object
                x-expandableFields:
                  - data
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
    post:
      description: <p>Creates an Issuing <code>Card</code> object.</p>
      operationId: PostIssuingCards
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                authorization_controls:
                  description: Spending rules that give you some control over how your
                    cards can be used. Refer to our
                    [authorizations](https://stripe.com/docs/issuing/authorizations)
                    documentation for more details.
                  properties:
                    allowed_categories:
                      items:
                        enum:
                          - ac_refrigeration_repair
                          - accounting_bookkeeping_services
                          - advertising_services
                          - agricultural_cooperative
                          - airlines_air_carriers
                          - airports_flying_fields
                          - ambulance_services
                          - amusement_parks_carnivals
                          - antique_reproductions
                          - antique_shops
                          - aquariums
                          - architectural_surveying_services
                          - art_dealers_and_galleries
                          - artists_supply_and_craft_shops
                          - auto_and_home_supply_stores
                          - auto_body_repair_shops
                          - auto_paint_shops
                          - auto_service_shops
                          - automated_cash_disburse
                          - automated_fuel_dispensers
                          - automobile_associations
                          - automotive_parts_and_accessories_stores
                          - automotive_tire_stores
                          - bail_and_bond_payments
                          - bakeries
                          - bands_orchestras
                          - barber_and_beauty_shops
                          - betting_casino_gambling
                          - bicycle_shops
                          - billiard_pool_establishments
                          - boat_dealers
                          - boat_rentals_and_leases
                          - book_stores
                          - books_periodicals_and_newspapers
                          - bowling_alleys
                          - bus_lines
                          - business_secretarial_schools
                          - buying_shopping_services
                          - cable_satellite_and_other_pay_television_and_radio
                          - camera_and_photographic_supply_stores
                          - candy_nut_and_confectionery_stores
                          - car_and_truck_dealers_new_used
                          - car_and_truck_dealers_used_only
                          - car_rental_agencies
                          - car_washes
                          - carpentry_services
                          - carpet_upholstery_cleaning
                          - caterers
                          - charitable_and_social_service_organizations_fundraising
                          - chemicals_and_allied_products
                          - child_care_services
                          - childrens_and_infants_wear_stores
                          - chiropodists_podiatrists
                          - chiropractors
                          - cigar_stores_and_stands
                          - civic_social_fraternal_associations
                          - cleaning_and_maintenance
                          - clothing_rental
                          - colleges_universities
                          - commercial_equipment
                          - commercial_footwear
                          - commercial_photography_art_and_graphics
                          - commuter_transport_and_ferries
                          - computer_network_services
                          - computer_programming
                          - computer_repair
                          - computer_software_stores
                          - computers_peripherals_and_software
                          - concrete_work_services
                          - construction_materials
                          - consulting_public_relations
                          - correspondence_schools
                          - cosmetic_stores
                          - counseling_services
                          - country_clubs
                          - courier_services
                          - court_costs
                          - credit_reporting_agencies
                          - cruise_lines
                          - dairy_products_stores
                          - dance_hall_studios_schools
                          - dating_escort_services
                          - dentists_orthodontists
                          - department_stores
                          - detective_agencies
                          - digital_goods_applications
                          - direct_marketing_catalog_merchant
                          - direct_marketing_combination_catalog_and_retail_merchant
                          - direct_marketing_inbound_telemarketing
                          - direct_marketing_insurance_services
                          - direct_marketing_other
                          - direct_marketing_outbound_telemarketing
                          - direct_marketing_subscription
                          - direct_marketing_travel
                          - discount_stores
                          - doctors
                          - door_to_door_sales
                          - drapery_window_covering_and_upholstery_stores
                          - drinking_places
                          - drug_stores_and_pharmacies
                          - drugs_drug_proprietaries_and_druggist_sundries
                          - dry_cleaners
                          - durable_goods
                          - duty_free_stores
                          - eating_places_restaurants
                          - educational_services
                          - electric_razor_stores
                          - electrical_parts_and_equipment
                          - electrical_services
                          - electronics_repair_shops
                          - electronics_stores
                          - elementary_secondary_schools
                          - employment_temp_agencies
                          - equipment_rental
                          - exterminating_services
                          - family_clothing_stores
                          - fast_food_restaurants
                          - financial_institutions
                          - fines_government_administrative_entities
                          - fireplace_fireplace_screens_and_accessories_stores
                          - floor_covering_stores
                          - florists
                          - florists_supplies_nursery_stock_and_flowers
                          - freezer_and_locker_meat_provisioners
                          - fuel_dealers_non_automotive
                          - funeral_services_crematories
                          - furniture_home_furnishings_and_equipment_stores_except_appliances
                          - furniture_repair_refinishing
                          - furriers_and_fur_shops
                          - general_services
                          - gift_card_novelty_and_souvenir_shops
                          - glass_paint_and_wallpaper_stores
                          - glassware_crystal_stores
                          - golf_courses_public
                          - government_services
                          - grocery_stores_supermarkets
                          - hardware_equipment_and_supplies
                          - hardware_stores
                          - health_and_beauty_spas
                          - hearing_aids_sales_and_supplies
                          - heating_plumbing_a_c
                          - hobby_toy_and_game_shops
                          - home_supply_warehouse_stores
                          - hospitals
                          - hotels_motels_and_resorts
                          - household_appliance_stores
                          - industrial_supplies
                          - information_retrieval_services
                          - insurance_default
                          - insurance_underwriting_premiums
                          - intra_company_purchases
                          - jewelry_stores_watches_clocks_and_silverware_stores
                          - landscaping_services
                          - laundries
                          - laundry_cleaning_services
                          - legal_services_attorneys
                          - luggage_and_leather_goods_stores
                          - lumber_building_materials_stores
                          - manual_cash_disburse
                          - marinas_service_and_supplies
                          - masonry_stonework_and_plaster
                          - massage_parlors
                          - medical_and_dental_labs
                          - medical_dental_ophthalmic_and_hospital_equipment_and_supplies
                          - medical_services
                          - membership_organizations
                          - mens_and_boys_clothing_and_accessories_stores
                          - mens_womens_clothing_stores
                          - metal_service_centers
                          - miscellaneous
                          - miscellaneous_apparel_and_accessory_shops
                          - miscellaneous_auto_dealers
                          - miscellaneous_business_services
                          - miscellaneous_food_stores
                          - miscellaneous_general_merchandise
                          - miscellaneous_general_services
                          - miscellaneous_home_furnishing_specialty_stores
                          - miscellaneous_publishing_and_printing
                          - miscellaneous_recreation_services
                          - miscellaneous_repair_shops
                          - miscellaneous_specialty_retail
                          - mobile_home_dealers
                          - motion_picture_theaters
                          - motor_freight_carriers_and_trucking
                          - motor_homes_dealers
                          - motor_vehicle_supplies_and_new_parts
                          - motorcycle_shops_and_dealers
                          - motorcycle_shops_dealers
                          - music_stores_musical_instruments_pianos_and_sheet_music
                          - news_dealers_and_newsstands
                          - non_fi_money_orders
                          - non_fi_stored_value_card_purchase_load
                          - nondurable_goods
                          - nurseries_lawn_and_garden_supply_stores
                          - nursing_personal_care
                          - office_and_commercial_furniture
                          - opticians_eyeglasses
                          - optometrists_ophthalmologist
                          - orthopedic_goods_prosthetic_devices
                          - osteopaths
                          - package_stores_beer_wine_and_liquor
                          - paints_varnishes_and_supplies
                          - parking_lots_garages
                          - passenger_railways
                          - pawn_shops
                          - pet_shops_pet_food_and_supplies
                          - petroleum_and_petroleum_products
                          - photo_developing
                          - photographic_photocopy_microfilm_equipment_and_supplies
                          - photographic_studios
                          - picture_video_production
                          - piece_goods_notions_and_other_dry_goods
                          - plumbing_heating_equipment_and_supplies
                          - political_organizations
                          - postal_services_government_only
                          - precious_stones_and_metals_watches_and_jewelry
                          - professional_services
                          - public_warehousing_and_storage
                          - quick_copy_repro_and_blueprint
                          - railroads
                          - real_estate_agents_and_managers_rentals
                          - record_stores
                          - recreational_vehicle_rentals
                          - religious_goods_stores
                          - religious_organizations
                          - roofing_siding_sheet_metal
                          - secretarial_support_services
                          - security_brokers_dealers
                          - service_stations
                          - sewing_needlework_fabric_and_piece_goods_stores
                          - shoe_repair_hat_cleaning
                          - shoe_stores
                          - small_appliance_repair
                          - snowmobile_dealers
                          - special_trade_services
                          - specialty_cleaning
                          - sporting_goods_stores
                          - sporting_recreation_camps
                          - sports_and_riding_apparel_stores
                          - sports_clubs_fields
                          - stamp_and_coin_stores
                          - stationary_office_supplies_printing_and_writing_paper
                          - stationery_stores_office_and_school_supply_stores
                          - swimming_pools_sales
                          - t_ui_travel_germany
                          - tailors_alterations
                          - tax_payments_government_agencies
                          - tax_preparation_services
                          - taxicabs_limousines
                          - telecommunication_equipment_and_telephone_sales
                          - telecommunication_services
                          - telegraph_services
                          - tent_and_awning_shops
                          - testing_laboratories
                          - theatrical_ticket_agencies
                          - timeshares
                          - tire_retreading_and_repair
                          - tolls_bridge_fees
                          - tourist_attractions_and_exhibits
                          - towing_services
                          - trailer_parks_campgrounds
                          - transportation_services
                          - travel_agencies_tour_operators
                          - truck_stop_iteration
                          - truck_utility_trailer_rentals
                          - typesetting_plate_making_and_related_services
                          - typewriter_stores
                          - u_s_federal_government_agencies_or_departments
                          - uniforms_commercial_clothing
                          - used_merchandise_and_secondhand_stores
                          - utilities
                          - variety_stores
                          - veterinary_services
                          - video_amusement_game_supplies
                          - video_game_arcades
                          - video_tape_rental_stores
                          - vocational_trade_schools
                          - watch_jewelry_repair
                          - welding_repair
                          - wholesale_clubs
                          - wig_and_toupee_stores
                          - wires_money_orders
                          - womens_accessory_and_specialty_shops
                          - womens_ready_to_wear_stores
                          - wrecking_and_salvage_yards
                        type: string
                      type: array
                    blocked_categories:
                      items:
                        enum:
                          - ac_refrigeration_repair
                          - accounting_bookkeeping_services
                          - advertising_services
                          - agricultural_cooperative
                          - airlines_air_carriers
                          - airports_flying_fields
                          - ambulance_services
                          - amusement_parks_carnivals
                          - antique_reproductions
                          - antique_shops
                          - aquariums
                          - architectural_surveying_services
                          - art_dealers_and_galleries
                          - artists_supply_and_craft_shops
                          - auto_and_home_supply_stores
                          - auto_body_repair_shops
                          - auto_paint_shops
                          - auto_service_shops
                          - automated_cash_disburse
                          - automated_fuel_dispensers
                          - automobile_associations
                          - automotive_parts_and_accessories_stores
                          - automotive_tire_stores
                          - bail_and_bond_payments
                          - bakeries
                          - bands_orchestras
                          - barber_and_beauty_shops
                          - betting_casino_gambling
                          - bicycle_shops
                          - billiard_pool_establishments
                          - boat_dealers
                          - boat_rentals_and_leases
                          - book_stores
                          - books_periodicals_and_newspapers
                          - bowling_alleys
                          - bus_lines
                          - business_secretarial_schools
                          - buying_shopping_services
                          - cable_satellite_and_other_pay_television_and_radio
                          - camera_and_photographic_supply_stores
                          - candy_nut_and_confectionery_stores
                          - car_and_truck_dealers_new_used
                          - car_and_truck_dealers_used_only
                          - car_rental_agencies
                          - car_washes
                          - carpentry_services
                          - carpet_upholstery_cleaning
                          - caterers
                          - charitable_and_social_service_organizations_fundraising
                          - chemicals_and_allied_products
                          - child_care_services
                          - childrens_and_infants_wear_stores
                          - chiropodists_podiatrists
                          - chiropractors
                          - cigar_stores_and_stands
                          - civic_social_fraternal_associations
                          - cleaning_and_maintenance
                          - clothing_rental
                          - colleges_universities
                          - commercial_equipment
                          - commercial_footwear
                          - commercial_photography_art_and_graphics
                          - commuter_transport_and_ferries
                          - computer_network_services
                          - computer_programming
                          - computer_repair
                          - computer_software_stores
                          - computers_peripherals_and_software
                          - concrete_work_services
                          - construction_materials
                          - consulting_public_relations
                          - correspondence_schools
                          - cosmetic_stores
                          - counseling_services
                          - country_clubs
                          - courier_services
                          - court_costs
                          - credit_reporting_agencies
                          - cruise_lines
                          - dairy_products_stores
                          - dance_hall_studios_schools
                          - dating_escort_services
                          - dentists_orthodontists
                          - department_stores
                          - detective_agencies
                          - digital_goods_applications
                          - direct_marketing_catalog_merchant
                          - direct_marketing_combination_catalog_and_retail_merchant
                          - direct_marketing_inbound_telemarketing
                          - direct_marketing_insurance_services
                          - direct_marketing_other
                          - direct_marketing_outbound_telemarketing
                          - direct_marketing_subscription
                          - direct_marketing_travel
                          - discount_stores
                          - doctors
                          - door_to_door_sales
                          - drapery_window_covering_and_upholstery_stores
                          - drinking_places
                          - drug_stores_and_pharmacies
                          - drugs_drug_proprietaries_and_druggist_sundries
                          - dry_cleaners
                          - durable_goods
                          - duty_free_stores
                          - eating_places_restaurants
                          - educational_services
                          - electric_razor_stores
                          - electrical_parts_and_equipment
                          - electrical_services
                          - electronics_repair_shops
                          - electronics_stores
                          - elementary_secondary_schools
                          - employment_temp_agencies
                          - equipment_rental
                          - exterminating_services
                          - family_clothing_stores
                          - fast_food_restaurants
                          - financial_institutions
                          - fines_government_administrative_entities
                          - fireplace_fireplace_screens_and_accessories_stores
                          - floor_covering_stores
                          - florists
                          - florists_supplies_nursery_stock_and_flowers
                          - freezer_and_locker_meat_provisioners
                          - fuel_dealers_non_automotive
                          - funeral_services_crematories
                          - furniture_home_furnishings_and_equipment_stores_except_appliances
                          - furniture_repair_refinishing
                          - furriers_and_fur_shops
                          - general_services
                          - gift_card_novelty_and_souvenir_shops
                          - glass_paint_and_wallpaper_stores
                          - glassware_crystal_stores
                          - golf_courses_public
                          - government_services
                          - grocery_stores_supermarkets
                          - hardware_equipment_and_supplies
                          - hardware_stores
                          - health_and_beauty_spas
                          - hearing_aids_sales_and_supplies
                          - heating_plumbing_a_c
                          - hobby_toy_and_game_shops
                          - home_supply_warehouse_stores
                          - hospitals
                          - hotels_motels_and_resorts
                          - household_appliance_stores
                          - industrial_supplies
                          - information_retrieval_services
                          - insurance_default
                          - insurance_underwriting_premiums
                          - intra_company_purchases
                          - jewelry_stores_watches_clocks_and_silverware_stores
                          - landscaping_services
                          - laundries
                          - laundry_cleaning_services
                          - legal_services_attorneys
                          - luggage_and_leather_goods_stores
                          - lumber_building_materials_stores
                          - manual_cash_disburse
                          - marinas_service_and_supplies
                          - masonry_stonework_and_plaster
                          - massage_parlors
                          - medical_and_dental_labs
                          - medical_dental_ophthalmic_and_hospital_equipment_and_supplies
                          - medical_services
                          - membership_organizations
                          - mens_and_boys_clothing_and_accessories_stores
                          - mens_womens_clothing_stores
                          - metal_service_centers
                          - miscellaneous
                          - miscellaneous_apparel_and_accessory_shops
                          - miscellaneous_auto_dealers
                          - miscellaneous_business_services
                          - miscellaneous_food_stores
                          - miscellaneous_general_merchandise
                          - miscellaneous_general_services
                          - miscellaneous_home_furnishing_specialty_stores
                          - miscellaneous_publishing_and_printing
                          - miscellaneous_recreation_services
                          - miscellaneous_repair_shops
                          - miscellaneous_specialty_retail
                          - mobile_home_dealers
                          - motion_picture_theaters
                          - motor_freight_carriers_and_trucking
                          - motor_homes_dealers
                          - motor_vehicle_supplies_and_new_parts
                          - motorcycle_shops_and_dealers
                          - motorcycle_shops_dealers
                          - music_stores_musical_instruments_pianos_and_sheet_music
                          - news_dealers_and_newsstands
                          - non_fi_money_orders
                          - non_fi_stored_value_card_purchase_load
                          - nondurable_goods
                          - nurseries_lawn_and_garden_supply_stores
                          - nursing_personal_care
                          - office_and_commercial_furniture
                          - opticians_eyeglasses
                          - optometrists_ophthalmologist
                          - orthopedic_goods_prosthetic_devices
                          - osteopaths
                          - package_stores_beer_wine_and_liquor
                          - paints_varnishes_and_supplies
                          - parking_lots_garages
                          - passenger_railways
                          - pawn_shops
                          - pet_shops_pet_food_and_supplies
                          - petroleum_and_petroleum_products
                          - photo_developing
                          - photographic_photocopy_microfilm_equipment_and_supplies
                          - photographic_studios
                          - picture_video_production
                          - piece_goods_notions_and_other_dry_goods
                          - plumbing_heating_equipment_and_supplies
                          - political_organizations
                          - postal_services_government_only
                          - precious_stones_and_metals_watches_and_jewelry
                          - professional_services
                          - public_warehousing_and_storage
                          - quick_copy_repro_and_blueprint
                          - railroads
                          - real_estate_agents_and_managers_rentals
                          - record_stores
                          - recreational_vehicle_rentals
                          - religious_goods_stores
                          - religious_organizations
                          - roofing_siding_sheet_metal
                          - secretarial_support_services
                          - security_brokers_dealers
                          - service_stations
                          - sewing_needlework_fabric_and_piece_goods_stores
                          - shoe_repair_hat_cleaning
                          - shoe_stores
                          - small_appliance_repair
                          - snowmobile_dealers
                          - special_trade_services
                          - specialty_cleaning
                          - sporting_goods_stores
                          - sporting_recreation_camps
                          - sports_and_riding_apparel_stores
                          - sports_clubs_fields
                          - stamp_and_coin_stores
                          - stationary_office_supplies_printing_and_writing_paper
                          - stationery_stores_office_and_school_supply_stores
                          - swimming_pools_sales
                          - t_ui_travel_germany
                          - tailors_alterations
                          - tax_payments_government_agencies
                          - tax_preparation_services
                          - taxicabs_limousines
                          - telecommunication_equipment_and_telephone_sales
                          - telecommunication_services
                          - telegraph_services
                          - tent_and_awning_shops
                          - testing_laboratories
                          - theatrical_ticket_agencies
                          - timeshares
                          - tire_retreading_and_repair
                          - tolls_bridge_fees
                          - tourist_attractions_and_exhibits
                          - towing_services
                          - trailer_parks_campgrounds
                          - transportation_services
                          - travel_agencies_tour_operators
                          - truck_stop_iteration
                          - truck_utility_trailer_rentals
                          - typesetting_plate_making_and_related_services
                          - typewriter_stores
                          - u_s_federal_government_agencies_or_departments
                          - uniforms_commercial_clothing
                          - used_merchandise_and_secondhand_stores
                          - utilities
                          - variety_stores
                          - veterinary_services
                          - video_amusement_game_supplies
                          - video_game_arcades
                          - video_tape_rental_stores
                          - vocational_trade_schools
                          - watch_jewelry_repair
                          - welding_repair
                          - wholesale_clubs
                          - wig_and_toupee_stores
                          - wires_money_orders
                          - womens_accessory_and_specialty_shops
                          - womens_ready_to_wear_stores
                          - wrecking_and_salvage_yards
                        type: string
                      type: array
                    max_amount:
                      type: integer
                    max_approvals:
                      type: integer
                    spending_limits:
                      items:
                        properties:
                          amount:
                            type: integer
                          categories:
                            items:
                              enum:
                                - ac_refrigeration_repair
                                - accounting_bookkeeping_services
                                - advertising_services
                                - agricultural_cooperative
                                - airlines_air_carriers
                                - airports_flying_fields
                                - ambulance_services
                                - amusement_parks_carnivals
                                - antique_reproductions
                                - antique_shops
                                - aquariums
                                - architectural_surveying_services
                                - art_dealers_and_galleries
                                - artists_supply_and_craft_shops
                                - auto_and_home_supply_stores
                                - auto_body_repair_shops
                                - auto_paint_shops
                                - auto_service_shops
                                - automated_cash_disburse
                                - automated_fuel_dispensers
                                - automobile_associations
                                - automotive_parts_and_accessories_stores
                                - automotive_tire_stores
                                - bail_and_bond_payments
                                - bakeries
                                - bands_orchestras
                                - barber_and_beauty_shops
                                - betting_casino_gambling
                                - bicycle_shops
                                - billiard_pool_establishments
                                - boat_dealers
                                - boat_rentals_and_leases
                                - book_stores
                                - books_periodicals_and_newspapers
                                - bowling_alleys
                                - bus_lines
                                - business_secretarial_schools
                                - buying_shopping_services
                                - cable_satellite_and_other_pay_television_and_radio
                                - camera_and_photographic_supply_stores
                                - candy_nut_and_confectionery_stores
                                - car_and_truck_dealers_new_used
                                - car_and_truck_dealers_used_only
                                - car_rental_agencies
                                - car_washes
                                - carpentry_services
                                - carpet_upholstery_cleaning
                                - caterers
                                - charitable_and_social_service_organizations_fundraising
                                - chemicals_and_allied_products
                                - child_care_services
                                - childrens_and_infants_wear_stores
                                - chiropodists_podiatrists
                                - chiropractors
                                - cigar_stores_and_stands
                                - civic_social_fraternal_associations
                                - cleaning_and_maintenance
                                - clothing_rental
                                - colleges_universities
                                - commercial_equipment
                                - commercial_footwear
                                - commercial_photography_art_and_graphics
                                - commuter_transport_and_ferries
                                - computer_network_services
                                - computer_programming
                                - computer_repair
                                - computer_software_stores
                                - computers_peripherals_and_software
                                - concrete_work_services
                                - construction_materials
                                - consulting_public_relations
                                - correspondence_schools
                                - cosmetic_stores
                                - counseling_services
                                - country_clubs
                                - courier_services
                                - court_costs
                                - credit_reporting_agencies
                                - cruise_lines
                                - dairy_products_stores
                                - dance_hall_studios_schools
                                - dating_escort_services
                                - dentists_orthodontists
                                - department_stores
                                - detective_agencies
                                - digital_goods_applications
                                - direct_marketing_catalog_merchant
                                - direct_marketing_combination_catalog_and_retail_merchant
                                - direct_marketing_inbound_telemarketing
                                - direct_marketing_insurance_services
                                - direct_marketing_other
                                - direct_marketing_outbound_telemarketing
                                - direct_marketing_subscription
                                - direct_marketing_travel
                                - discount_stores
                                - doctors
                                - door_to_door_sales
                                - drapery_window_covering_and_upholstery_stores
                                - drinking_places
                                - drug_stores_and_pharmacies
                                - drugs_drug_proprietaries_and_druggist_sundries
                                - dry_cleaners
                                - durable_goods
                                - duty_free_stores
                                - eating_places_restaurants
                                - educational_services
                                - electric_razor_stores
                                - electrical_parts_and_equipment
                                - electrical_services
                                - electronics_repair_shops
                                - electronics_stores
                                - elementary_secondary_schools
                                - employment_temp_agencies
                                - equipment_rental
                                - exterminating_services
                                - family_clothing_stores
                                - fast_food_restaurants
                                - financial_institutions
                                - fines_government_administrative_entities
                                - fireplace_fireplace_screens_and_accessories_stores
                                - floor_covering_stores
                                - florists
                                - florists_supplies_nursery_stock_and_flowers
                                - freezer_and_locker_meat_provisioners
                                - fuel_dealers_non_automotive
                                - funeral_services_crematories
                                - furniture_home_furnishings_and_equipment_stores_except_appliances
                                - furniture_repair_refinishing
                                - furriers_and_fur_shops
                                - general_services
                                - gift_card_novelty_and_souvenir_shops
                                - glass_paint_and_wallpaper_stores
                                - glassware_crystal_stores
                                - golf_courses_public
                                - government_services
                                - grocery_stores_supermarkets
                                - hardware_equipment_and_supplies
                                - hardware_stores
                                - health_and_beauty_spas
                                - hearing_aids_sales_and_supplies
                                - heating_plumbing_a_c
                                - hobby_toy_and_game_shops
                                - home_supply_warehouse_stores
                                - hospitals
                                - hotels_motels_and_resorts
                                - household_appliance_stores
                                - industrial_supplies
                                - information_retrieval_services
                                - insurance_default
                                - insurance_underwriting_premiums
                                - intra_company_purchases
                                - jewelry_stores_watches_clocks_and_silverware_stores
                                - landscaping_services
                                - laundries
                                - laundry_cleaning_services
                                - legal_services_attorneys
                                - luggage_and_leather_goods_stores
                                - lumber_building_materials_stores
                                - manual_cash_disburse
                                - marinas_service_and_supplies
                                - masonry_stonework_and_plaster
                                - massage_parlors
                                - medical_and_dental_labs
                                - medical_dental_ophthalmic_and_hospital_equipment_and_supplies
                                - medical_services
                                - membership_organizations
                                - mens_and_boys_clothing_and_accessories_stores
                                - mens_womens_clothing_stores
                                - metal_service_centers
                                - miscellaneous
                                - miscellaneous_apparel_and_accessory_shops
                                - miscellaneous_auto_dealers
                                - miscellaneous_business_services
                                - miscellaneous_food_stores
                                - miscellaneous_general_merchandise
                                - miscellaneous_general_services
                                - miscellaneous_home_furnishing_specialty_stores
                                - miscellaneous_publishing_and_printing
                                - miscellaneous_recreation_services
                                - miscellaneous_repair_shops
                                - miscellaneous_specialty_retail
                                - mobile_home_dealers
                                - motion_picture_theaters
                                - motor_freight_carriers_and_trucking
                                - motor_homes_dealers
                                - motor_vehicle_supplies_and_new_parts
                                - motorcycle_shops_and_dealers
                                - motorcycle_shops_dealers
                                - music_stores_musical_instruments_pianos_and_sheet_music
                                - news_dealers_and_newsstands
                                - non_fi_money_orders
                                - non_fi_stored_value_card_purchase_load
                                - nondurable_goods
                                - nurseries_lawn_and_garden_supply_stores
                                - nursing_personal_care
                                - office_and_commercial_furniture
                                - opticians_eyeglasses
                                - optometrists_ophthalmologist
                                - orthopedic_goods_prosthetic_devices
                                - osteopaths
                                - package_stores_beer_wine_and_liquor
                                - paints_varnishes_and_supplies
                                - parking_lots_garages
                                - passenger_railways
                                - pawn_shops
                                - pet_shops_pet_food_and_supplies
                                - petroleum_and_petroleum_products
                                - photo_developing
                                - photographic_photocopy_microfilm_equipment_and_supplies
                                - photographic_studios
                                - picture_video_production
                                - piece_goods_notions_and_other_dry_goods
                                - plumbing_heating_equipment_and_supplies
                                - political_organizations
                                - postal_services_government_only
                                - precious_stones_and_metals_watches_and_jewelry
                                - professional_services
                                - public_warehousing_and_storage
                                - quick_copy_repro_and_blueprint
                                - railroads
                                - real_estate_agents_and_managers_rentals
                                - record_stores
                                - recreational_vehicle_rentals
                                - religious_goods_stores
                                - religious_organizations
                                - roofing_siding_sheet_metal
                                - secretarial_support_services
                                - security_brokers_dealers
                                - service_stations
                                - sewing_needlework_fabric_and_piece_goods_stores
                                - shoe_repair_hat_cleaning
                                - shoe_stores
                                - small_appliance_repair
                                - snowmobile_dealers
                                - special_trade_services
                                - specialty_cleaning
                                - sporting_goods_stores
                                - sporting_recreation_camps
                                - sports_and_riding_apparel_stores
                                - sports_clubs_fields
                                - stamp_and_coin_stores
                                - stationary_office_supplies_printing_and_writing_paper
                                - stationery_stores_office_and_school_supply_stores
                                - swimming_pools_sales
                                - t_ui_travel_germany
                                - tailors_alterations
                                - tax_payments_government_agencies
                                - tax_preparation_services
                                - taxicabs_limousines
                                - telecommunication_equipment_and_telephone_sales
                                - telecommunication_services
                                - telegraph_services
                                - tent_and_awning_shops
                                - testing_laboratories
                                - theatrical_ticket_agencies
                                - timeshares
                                - tire_retreading_and_repair
                                - tolls_bridge_fees
                                - tourist_attractions_and_exhibits
                                - towing_services
                                - trailer_parks_campgrounds
                                - transportation_services
                                - travel_agencies_tour_operators
                                - truck_stop_iteration
                                - truck_utility_trailer_rentals
                                - typesetting_plate_making_and_related_services
                                - typewriter_stores
                                - u_s_federal_government_agencies_or_departments
                                - uniforms_commercial_clothing
                                - used_merchandise_and_secondhand_stores
                                - utilities
                                - variety_stores
                                - veterinary_services
                                - video_amusement_game_supplies
                                - video_game_arcades
                                - video_tape_rental_stores
                                - vocational_trade_schools
                                - watch_jewelry_repair
                                - welding_repair
                                - wholesale_clubs
                                - wig_and_toupee_stores
                                - wires_money_orders
                                - womens_accessory_and_specialty_shops
                                - womens_ready_to_wear_stores
                                - wrecking_and_salvage_yards
                              type: string
                            type: array
                          interval:
                            enum:
                              - all_time
                              - daily
                              - monthly
                              - per_authorization
                              - weekly
                              - yearly
                            type: string
                        required:
                          - amount
                          - interval
                        title: spending_limits_param
                        type: object
                      type: array
                  title: authorization_controls_param
                  type: object
                cardholder:
                  description: The
                    [Cardholder](https://stripe.com/docs/api#issuing_cardholder_object)
                    object with which the card will be associated.
                  type: string
                currency:
                  description: The currency for the card. This currently must be `usd`.
                  type: string
                expand:
                  description: Specifies which fields in the response should be expanded.
                  items:
                    type: string
                  type: array
                metadata:
                  type: object
                replacement_for:
                  description: The card this is meant to be a replacement for (if any).
                  type: string
                replacement_reason:
                  description: If `replacement_for` is specified, this should indicate why
                    that card is being replaced. One of `damage`, `expiration`,
                    `loss`, or `theft`.
                  enum:
                    - damage
                    - expiration
                    - loss
                    - theft
                  type: string
                shipping:
                  description: The address where the card will be shipped.
                  properties:
                    address:
                      properties:
                        city:
                          type: string
                        country:
                          type: string
                        line1:
                          type: string
                        line2:
                          type: string
                        postal_code:
                          type: string
                        state:
                          type: string
                      required:
                        - city
                        - country
                        - line1
                        - postal_code
                      title: required_address
                      type: object
                    name:
                      type: string
                    type:
                      enum:
                        - ""
                        - bulk
                        - individual
                      type: string
                  required:
                    - address
                    - name
                  title: shipping_specs
                  type: object
                status:
                  description: Specifies whether to permit authorizations on this card.
                    Possible values are `active` or `inactive`.
                  enum:
                    - active
                    - inactive
                  type: string
                type:
                  description: The type of card to issue. Possible values are `physical` or
                    `virtual`.
                  enum:
                    - physical
                    - virtual
                  type: string
              required:
                - currency
                - type
              type: object
        description: Body parameters for the request.
        required: true
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/issuing.card"
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
  "/v1/issuing/cards/{card}":
    get:
      description: <p>Retrieves an Issuing <code>Card</code> object.</p>
      operationId: GetIssuingCardsCard
      parameters:
        - description: Specifies which fields in the response should be expanded.
          in: query
          name: expand
          required: false
          schema:
            type: array
            items: {}
        - description: The identifier of the card to be retrieved.
          in: path
          name: card
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/issuing.card"
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
    post:
      description: <p>Updates the specified Issuing <code>Card</code> object by setting the
        values of the parameters passed. Any parameters not provided will be
        left unchanged.</p>
      operationId: PostIssuingCardsCard
      parameters:
        - description: The identifier of the issued card to update.
          in: path
          name: card
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                authorization_controls:
                  description: Spending rules that give you some control over how your
                    cards can be used. Refer to our
                    [authorizations](https://stripe.com/docs/issuing/authorizations)
                    documentation for more details.
                  properties:
                    allowed_categories:
                      items:
                        enum:
                          - ac_refrigeration_repair
                          - accounting_bookkeeping_services
                          - advertising_services
                          - agricultural_cooperative
                          - airlines_air_carriers
                          - airports_flying_fields
                          - ambulance_services
                          - amusement_parks_carnivals
                          - antique_reproductions
                          - antique_shops
                          - aquariums
                          - architectural_surveying_services
                          - art_dealers_and_galleries
                          - artists_supply_and_craft_shops
                          - auto_and_home_supply_stores
                          - auto_body_repair_shops
                          - auto_paint_shops
                          - auto_service_shops
                          - automated_cash_disburse
                          - automated_fuel_dispensers
                          - automobile_associations
                          - automotive_parts_and_accessories_stores
                          - automotive_tire_stores
                          - bail_and_bond_payments
                          - bakeries
                          - bands_orchestras
                          - barber_and_beauty_shops
                          - betting_casino_gambling
                          - bicycle_shops
                          - billiard_pool_establishments
                          - boat_dealers
                          - boat_rentals_and_leases
                          - book_stores
                          - books_periodicals_and_newspapers
                          - bowling_alleys
                          - bus_lines
                          - business_secretarial_schools
                          - buying_shopping_services
                          - cable_satellite_and_other_pay_television_and_radio
                          - camera_and_photographic_supply_stores
                          - candy_nut_and_confectionery_stores
                          - car_and_truck_dealers_new_used
                          - car_and_truck_dealers_used_only
                          - car_rental_agencies
                          - car_washes
                          - carpentry_services
                          - carpet_upholstery_cleaning
                          - caterers
                          - charitable_and_social_service_organizations_fundraising
                          - chemicals_and_allied_products
                          - child_care_services
                          - childrens_and_infants_wear_stores
                          - chiropodists_podiatrists
                          - chiropractors
                          - cigar_stores_and_stands
                          - civic_social_fraternal_associations
                          - cleaning_and_maintenance
                          - clothing_rental
                          - colleges_universities
                          - commercial_equipment
                          - commercial_footwear
                          - commercial_photography_art_and_graphics
                          - commuter_transport_and_ferries
                          - computer_network_services
                          - computer_programming
                          - computer_repair
                          - computer_software_stores
                          - computers_peripherals_and_software
                          - concrete_work_services
                          - construction_materials
                          - consulting_public_relations
                          - correspondence_schools
                          - cosmetic_stores
                          - counseling_services
                          - country_clubs
                          - courier_services
                          - court_costs
                          - credit_reporting_agencies
                          - cruise_lines
                          - dairy_products_stores
                          - dance_hall_studios_schools
                          - dating_escort_services
                          - dentists_orthodontists
                          - department_stores
                          - detective_agencies
                          - digital_goods_applications
                          - direct_marketing_catalog_merchant
                          - direct_marketing_combination_catalog_and_retail_merchant
                          - direct_marketing_inbound_telemarketing
                          - direct_marketing_insurance_services
                          - direct_marketing_other
                          - direct_marketing_outbound_telemarketing
                          - direct_marketing_subscription
                          - direct_marketing_travel
                          - discount_stores
                          - doctors
                          - door_to_door_sales
                          - drapery_window_covering_and_upholstery_stores
                          - drinking_places
                          - drug_stores_and_pharmacies
                          - drugs_drug_proprietaries_and_druggist_sundries
                          - dry_cleaners
                          - durable_goods
                          - duty_free_stores
                          - eating_places_restaurants
                          - educational_services
                          - electric_razor_stores
                          - electrical_parts_and_equipment
                          - electrical_services
                          - electronics_repair_shops
                          - electronics_stores
                          - elementary_secondary_schools
                          - employment_temp_agencies
                          - equipment_rental
                          - exterminating_services
                          - family_clothing_stores
                          - fast_food_restaurants
                          - financial_institutions
                          - fines_government_administrative_entities
                          - fireplace_fireplace_screens_and_accessories_stores
                          - floor_covering_stores
                          - florists
                          - florists_supplies_nursery_stock_and_flowers
                          - freezer_and_locker_meat_provisioners
                          - fuel_dealers_non_automotive
                          - funeral_services_crematories
                          - furniture_home_furnishings_and_equipment_stores_except_appliances
                          - furniture_repair_refinishing
                          - furriers_and_fur_shops
                          - general_services
                          - gift_card_novelty_and_souvenir_shops
                          - glass_paint_and_wallpaper_stores
                          - glassware_crystal_stores
                          - golf_courses_public
                          - government_services
                          - grocery_stores_supermarkets
                          - hardware_equipment_and_supplies
                          - hardware_stores
                          - health_and_beauty_spas
                          - hearing_aids_sales_and_supplies
                          - heating_plumbing_a_c
                          - hobby_toy_and_game_shops
                          - home_supply_warehouse_stores
                          - hospitals
                          - hotels_motels_and_resorts
                          - household_appliance_stores
                          - industrial_supplies
                          - information_retrieval_services
                          - insurance_default
                          - insurance_underwriting_premiums
                          - intra_company_purchases
                          - jewelry_stores_watches_clocks_and_silverware_stores
                          - landscaping_services
                          - laundries
                          - laundry_cleaning_services
                          - legal_services_attorneys
                          - luggage_and_leather_goods_stores
                          - lumber_building_materials_stores
                          - manual_cash_disburse
                          - marinas_service_and_supplies
                          - masonry_stonework_and_plaster
                          - massage_parlors
                          - medical_and_dental_labs
                          - medical_dental_ophthalmic_and_hospital_equipment_and_supplies
                          - medical_services
                          - membership_organizations
                          - mens_and_boys_clothing_and_accessories_stores
                          - mens_womens_clothing_stores
                          - metal_service_centers
                          - miscellaneous
                          - miscellaneous_apparel_and_accessory_shops
                          - miscellaneous_auto_dealers
                          - miscellaneous_business_services
                          - miscellaneous_food_stores
                          - miscellaneous_general_merchandise
                          - miscellaneous_general_services
                          - miscellaneous_home_furnishing_specialty_stores
                          - miscellaneous_publishing_and_printing
                          - miscellaneous_recreation_services
                          - miscellaneous_repair_shops
                          - miscellaneous_specialty_retail
                          - mobile_home_dealers
                          - motion_picture_theaters
                          - motor_freight_carriers_and_trucking
                          - motor_homes_dealers
                          - motor_vehicle_supplies_and_new_parts
                          - motorcycle_shops_and_dealers
                          - motorcycle_shops_dealers
                          - music_stores_musical_instruments_pianos_and_sheet_music
                          - news_dealers_and_newsstands
                          - non_fi_money_orders
                          - non_fi_stored_value_card_purchase_load
                          - nondurable_goods
                          - nurseries_lawn_and_garden_supply_stores
                          - nursing_personal_care
                          - office_and_commercial_furniture
                          - opticians_eyeglasses
                          - optometrists_ophthalmologist
                          - orthopedic_goods_prosthetic_devices
                          - osteopaths
                          - package_stores_beer_wine_and_liquor
                          - paints_varnishes_and_supplies
                          - parking_lots_garages
                          - passenger_railways
                          - pawn_shops
                          - pet_shops_pet_food_and_supplies
                          - petroleum_and_petroleum_products
                          - photo_developing
                          - photographic_photocopy_microfilm_equipment_and_supplies
                          - photographic_studios
                          - picture_video_production
                          - piece_goods_notions_and_other_dry_goods
                          - plumbing_heating_equipment_and_supplies
                          - political_organizations
                          - postal_services_government_only
                          - precious_stones_and_metals_watches_and_jewelry
                          - professional_services
                          - public_warehousing_and_storage
                          - quick_copy_repro_and_blueprint
                          - railroads
                          - real_estate_agents_and_managers_rentals
                          - record_stores
                          - recreational_vehicle_rentals
                          - religious_goods_stores
                          - religious_organizations
                          - roofing_siding_sheet_metal
                          - secretarial_support_services
                          - security_brokers_dealers
                          - service_stations
                          - sewing_needlework_fabric_and_piece_goods_stores
                          - shoe_repair_hat_cleaning
                          - shoe_stores
                          - small_appliance_repair
                          - snowmobile_dealers
                          - special_trade_services
                          - specialty_cleaning
                          - sporting_goods_stores
                          - sporting_recreation_camps
                          - sports_and_riding_apparel_stores
                          - sports_clubs_fields
                          - stamp_and_coin_stores
                          - stationary_office_supplies_printing_and_writing_paper
                          - stationery_stores_office_and_school_supply_stores
                          - swimming_pools_sales
                          - t_ui_travel_germany
                          - tailors_alterations
                          - tax_payments_government_agencies
                          - tax_preparation_services
                          - taxicabs_limousines
                          - telecommunication_equipment_and_telephone_sales
                          - telecommunication_services
                          - telegraph_services
                          - tent_and_awning_shops
                          - testing_laboratories
                          - theatrical_ticket_agencies
                          - timeshares
                          - tire_retreading_and_repair
                          - tolls_bridge_fees
                          - tourist_attractions_and_exhibits
                          - towing_services
                          - trailer_parks_campgrounds
                          - transportation_services
                          - travel_agencies_tour_operators
                          - truck_stop_iteration
                          - truck_utility_trailer_rentals
                          - typesetting_plate_making_and_related_services
                          - typewriter_stores
                          - u_s_federal_government_agencies_or_departments
                          - uniforms_commercial_clothing
                          - used_merchandise_and_secondhand_stores
                          - utilities
                          - variety_stores
                          - veterinary_services
                          - video_amusement_game_supplies
                          - video_game_arcades
                          - video_tape_rental_stores
                          - vocational_trade_schools
                          - watch_jewelry_repair
                          - welding_repair
                          - wholesale_clubs
                          - wig_and_toupee_stores
                          - wires_money_orders
                          - womens_accessory_and_specialty_shops
                          - womens_ready_to_wear_stores
                          - wrecking_and_salvage_yards
                        type: string
                      type: array
                    blocked_categories:
                      items:
                        enum:
                          - ac_refrigeration_repair
                          - accounting_bookkeeping_services
                          - advertising_services
                          - agricultural_cooperative
                          - airlines_air_carriers
                          - airports_flying_fields
                          - ambulance_services
                          - amusement_parks_carnivals
                          - antique_reproductions
                          - antique_shops
                          - aquariums
                          - architectural_surveying_services
                          - art_dealers_and_galleries
                          - artists_supply_and_craft_shops
                          - auto_and_home_supply_stores
                          - auto_body_repair_shops
                          - auto_paint_shops
                          - auto_service_shops
                          - automated_cash_disburse
                          - automated_fuel_dispensers
                          - automobile_associations
                          - automotive_parts_and_accessories_stores
                          - automotive_tire_stores
                          - bail_and_bond_payments
                          - bakeries
                          - bands_orchestras
                          - barber_and_beauty_shops
                          - betting_casino_gambling
                          - bicycle_shops
                          - billiard_pool_establishments
                          - boat_dealers
                          - boat_rentals_and_leases
                          - book_stores
                          - books_periodicals_and_newspapers
                          - bowling_alleys
                          - bus_lines
                          - business_secretarial_schools
                          - buying_shopping_services
                          - cable_satellite_and_other_pay_television_and_radio
                          - camera_and_photographic_supply_stores
                          - candy_nut_and_confectionery_stores
                          - car_and_truck_dealers_new_used
                          - car_and_truck_dealers_used_only
                          - car_rental_agencies
                          - car_washes
                          - carpentry_services
                          - carpet_upholstery_cleaning
                          - caterers
                          - charitable_and_social_service_organizations_fundraising
                          - chemicals_and_allied_products
                          - child_care_services
                          - childrens_and_infants_wear_stores
                          - chiropodists_podiatrists
                          - chiropractors
                          - cigar_stores_and_stands
                          - civic_social_fraternal_associations
                          - cleaning_and_maintenance
                          - clothing_rental
                          - colleges_universities
                          - commercial_equipment
                          - commercial_footwear
                          - commercial_photography_art_and_graphics
                          - commuter_transport_and_ferries
                          - computer_network_services
                          - computer_programming
                          - computer_repair
                          - computer_software_stores
                          - computers_peripherals_and_software
                          - concrete_work_services
                          - construction_materials
                          - consulting_public_relations
                          - correspondence_schools
                          - cosmetic_stores
                          - counseling_services
                          - country_clubs
                          - courier_services
                          - court_costs
                          - credit_reporting_agencies
                          - cruise_lines
                          - dairy_products_stores
                          - dance_hall_studios_schools
                          - dating_escort_services
                          - dentists_orthodontists
                          - department_stores
                          - detective_agencies
                          - digital_goods_applications
                          - direct_marketing_catalog_merchant
                          - direct_marketing_combination_catalog_and_retail_merchant
                          - direct_marketing_inbound_telemarketing
                          - direct_marketing_insurance_services
                          - direct_marketing_other
                          - direct_marketing_outbound_telemarketing
                          - direct_marketing_subscription
                          - direct_marketing_travel
                          - discount_stores
                          - doctors
                          - door_to_door_sales
                          - drapery_window_covering_and_upholstery_stores
                          - drinking_places
                          - drug_stores_and_pharmacies
                          - drugs_drug_proprietaries_and_druggist_sundries
                          - dry_cleaners
                          - durable_goods
                          - duty_free_stores
                          - eating_places_restaurants
                          - educational_services
                          - electric_razor_stores
                          - electrical_parts_and_equipment
                          - electrical_services
                          - electronics_repair_shops
                          - electronics_stores
                          - elementary_secondary_schools
                          - employment_temp_agencies
                          - equipment_rental
                          - exterminating_services
                          - family_clothing_stores
                          - fast_food_restaurants
                          - financial_institutions
                          - fines_government_administrative_entities
                          - fireplace_fireplace_screens_and_accessories_stores
                          - floor_covering_stores
                          - florists
                          - florists_supplies_nursery_stock_and_flowers
                          - freezer_and_locker_meat_provisioners
                          - fuel_dealers_non_automotive
                          - funeral_services_crematories
                          - furniture_home_furnishings_and_equipment_stores_except_appliances
                          - furniture_repair_refinishing
                          - furriers_and_fur_shops
                          - general_services
                          - gift_card_novelty_and_souvenir_shops
                          - glass_paint_and_wallpaper_stores
                          - glassware_crystal_stores
                          - golf_courses_public
                          - government_services
                          - grocery_stores_supermarkets
                          - hardware_equipment_and_supplies
                          - hardware_stores
                          - health_and_beauty_spas
                          - hearing_aids_sales_and_supplies
                          - heating_plumbing_a_c
                          - hobby_toy_and_game_shops
                          - home_supply_warehouse_stores
                          - hospitals
                          - hotels_motels_and_resorts
                          - household_appliance_stores
                          - industrial_supplies
                          - information_retrieval_services
                          - insurance_default
                          - insurance_underwriting_premiums
                          - intra_company_purchases
                          - jewelry_stores_watches_clocks_and_silverware_stores
                          - landscaping_services
                          - laundries
                          - laundry_cleaning_services
                          - legal_services_attorneys
                          - luggage_and_leather_goods_stores
                          - lumber_building_materials_stores
                          - manual_cash_disburse
                          - marinas_service_and_supplies
                          - masonry_stonework_and_plaster
                          - massage_parlors
                          - medical_and_dental_labs
                          - medical_dental_ophthalmic_and_hospital_equipment_and_supplies
                          - medical_services
                          - membership_organizations
                          - mens_and_boys_clothing_and_accessories_stores
                          - mens_womens_clothing_stores
                          - metal_service_centers
                          - miscellaneous
                          - miscellaneous_apparel_and_accessory_shops
                          - miscellaneous_auto_dealers
                          - miscellaneous_business_services
                          - miscellaneous_food_stores
                          - miscellaneous_general_merchandise
                          - miscellaneous_general_services
                          - miscellaneous_home_furnishing_specialty_stores
                          - miscellaneous_publishing_and_printing
                          - miscellaneous_recreation_services
                          - miscellaneous_repair_shops
                          - miscellaneous_specialty_retail
                          - mobile_home_dealers
                          - motion_picture_theaters
                          - motor_freight_carriers_and_trucking
                          - motor_homes_dealers
                          - motor_vehicle_supplies_and_new_parts
                          - motorcycle_shops_and_dealers
                          - motorcycle_shops_dealers
                          - music_stores_musical_instruments_pianos_and_sheet_music
                          - news_dealers_and_newsstands
                          - non_fi_money_orders
                          - non_fi_stored_value_card_purchase_load
                          - nondurable_goods
                          - nurseries_lawn_and_garden_supply_stores
                          - nursing_personal_care
                          - office_and_commercial_furniture
                          - opticians_eyeglasses
                          - optometrists_ophthalmologist
                          - orthopedic_goods_prosthetic_devices
                          - osteopaths
                          - package_stores_beer_wine_and_liquor
                          - paints_varnishes_and_supplies
                          - parking_lots_garages
                          - passenger_railways
                          - pawn_shops
                          - pet_shops_pet_food_and_supplies
                          - petroleum_and_petroleum_products
                          - photo_developing
                          - photographic_photocopy_microfilm_equipment_and_supplies
                          - photographic_studios
                          - picture_video_production
                          - piece_goods_notions_and_other_dry_goods
                          - plumbing_heating_equipment_and_supplies
                          - political_organizations
                          - postal_services_government_only
                          - precious_stones_and_metals_watches_and_jewelry
                          - professional_services
                          - public_warehousing_and_storage
                          - quick_copy_repro_and_blueprint
                          - railroads
                          - real_estate_agents_and_managers_rentals
                          - record_stores
                          - recreational_vehicle_rentals
                          - religious_goods_stores
                          - religious_organizations
                          - roofing_siding_sheet_metal
                          - secretarial_support_services
                          - security_brokers_dealers
                          - service_stations
                          - sewing_needlework_fabric_and_piece_goods_stores
                          - shoe_repair_hat_cleaning
                          - shoe_stores
                          - small_appliance_repair
                          - snowmobile_dealers
                          - special_trade_services
                          - specialty_cleaning
                          - sporting_goods_stores
                          - sporting_recreation_camps
                          - sports_and_riding_apparel_stores
                          - sports_clubs_fields
                          - stamp_and_coin_stores
                          - stationary_office_supplies_printing_and_writing_paper
                          - stationery_stores_office_and_school_supply_stores
                          - swimming_pools_sales
                          - t_ui_travel_germany
                          - tailors_alterations
                          - tax_payments_government_agencies
                          - tax_preparation_services
                          - taxicabs_limousines
                          - telecommunication_equipment_and_telephone_sales
                          - telecommunication_services
                          - telegraph_services
                          - tent_and_awning_shops
                          - testing_laboratories
                          - theatrical_ticket_agencies
                          - timeshares
                          - tire_retreading_and_repair
                          - tolls_bridge_fees
                          - tourist_attractions_and_exhibits
                          - towing_services
                          - trailer_parks_campgrounds
                          - transportation_services
                          - travel_agencies_tour_operators
                          - truck_stop_iteration
                          - truck_utility_trailer_rentals
                          - typesetting_plate_making_and_related_services
                          - typewriter_stores
                          - u_s_federal_government_agencies_or_departments
                          - uniforms_commercial_clothing
                          - used_merchandise_and_secondhand_stores
                          - utilities
                          - variety_stores
                          - veterinary_services
                          - video_amusement_game_supplies
                          - video_game_arcades
                          - video_tape_rental_stores
                          - vocational_trade_schools
                          - watch_jewelry_repair
                          - welding_repair
                          - wholesale_clubs
                          - wig_and_toupee_stores
                          - wires_money_orders
                          - womens_accessory_and_specialty_shops
                          - womens_ready_to_wear_stores
                          - wrecking_and_salvage_yards
                        type: string
                      type: array
                    max_amount:
                      type: integer
                    max_approvals:
                      type: integer
                    spending_limits:
                      items:
                        properties:
                          amount:
                            type: integer
                          categories:
                            items:
                              enum:
                                - ac_refrigeration_repair
                                - accounting_bookkeeping_services
                                - advertising_services
                                - agricultural_cooperative
                                - airlines_air_carriers
                                - airports_flying_fields
                                - ambulance_services
                                - amusement_parks_carnivals
                                - antique_reproductions
                                - antique_shops
                                - aquariums
                                - architectural_surveying_services
                                - art_dealers_and_galleries
                                - artists_supply_and_craft_shops
                                - auto_and_home_supply_stores
                                - auto_body_repair_shops
                                - auto_paint_shops
                                - auto_service_shops
                                - automated_cash_disburse
                                - automated_fuel_dispensers
                                - automobile_associations
                                - automotive_parts_and_accessories_stores
                                - automotive_tire_stores
                                - bail_and_bond_payments
                                - bakeries
                                - bands_orchestras
                                - barber_and_beauty_shops
                                - betting_casino_gambling
                                - bicycle_shops
                                - billiard_pool_establishments
                                - boat_dealers
                                - boat_rentals_and_leases
                                - book_stores
                                - books_periodicals_and_newspapers
                                - bowling_alleys
                                - bus_lines
                                - business_secretarial_schools
                                - buying_shopping_services
                                - cable_satellite_and_other_pay_television_and_radio
                                - camera_and_photographic_supply_stores
                                - candy_nut_and_confectionery_stores
                                - car_and_truck_dealers_new_used
                                - car_and_truck_dealers_used_only
                                - car_rental_agencies
                                - car_washes
                                - carpentry_services
                                - carpet_upholstery_cleaning
                                - caterers
                                - charitable_and_social_service_organizations_fundraising
                                - chemicals_and_allied_products
                                - child_care_services
                                - childrens_and_infants_wear_stores
                                - chiropodists_podiatrists
                                - chiropractors
                                - cigar_stores_and_stands
                                - civic_social_fraternal_associations
                                - cleaning_and_maintenance
                                - clothing_rental
                                - colleges_universities
                                - commercial_equipment
                                - commercial_footwear
                                - commercial_photography_art_and_graphics
                                - commuter_transport_and_ferries
                                - computer_network_services
                                - computer_programming
                                - computer_repair
                                - computer_software_stores
                                - computers_peripherals_and_software
                                - concrete_work_services
                                - construction_materials
                                - consulting_public_relations
                                - correspondence_schools
                                - cosmetic_stores
                                - counseling_services
                                - country_clubs
                                - courier_services
                                - court_costs
                                - credit_reporting_agencies
                                - cruise_lines
                                - dairy_products_stores
                                - dance_hall_studios_schools
                                - dating_escort_services
                                - dentists_orthodontists
                                - department_stores
                                - detective_agencies
                                - digital_goods_applications
                                - direct_marketing_catalog_merchant
                                - direct_marketing_combination_catalog_and_retail_merchant
                                - direct_marketing_inbound_telemarketing
                                - direct_marketing_insurance_services
                                - direct_marketing_other
                                - direct_marketing_outbound_telemarketing
                                - direct_marketing_subscription
                                - direct_marketing_travel
                                - discount_stores
                                - doctors
                                - door_to_door_sales
                                - drapery_window_covering_and_upholstery_stores
                                - drinking_places
                                - drug_stores_and_pharmacies
                                - drugs_drug_proprietaries_and_druggist_sundries
                                - dry_cleaners
                                - durable_goods
                                - duty_free_stores
                                - eating_places_restaurants
                                - educational_services
                                - electric_razor_stores
                                - electrical_parts_and_equipment
                                - electrical_services
                                - electronics_repair_shops
                                - electronics_stores
                                - elementary_secondary_schools
                                - employment_temp_agencies
                                - equipment_rental
                                - exterminating_services
                                - family_clothing_stores
                                - fast_food_restaurants
                                - financial_institutions
                                - fines_government_administrative_entities
                                - fireplace_fireplace_screens_and_accessories_stores
                                - floor_covering_stores
                                - florists
                                - florists_supplies_nursery_stock_and_flowers
                                - freezer_and_locker_meat_provisioners
                                - fuel_dealers_non_automotive
                                - funeral_services_crematories
                                - furniture_home_furnishings_and_equipment_stores_except_appliances
                                - furniture_repair_refinishing
                                - furriers_and_fur_shops
                                - general_services
                                - gift_card_novelty_and_souvenir_shops
                                - glass_paint_and_wallpaper_stores
                                - glassware_crystal_stores
                                - golf_courses_public
                                - government_services
                                - grocery_stores_supermarkets
                                - hardware_equipment_and_supplies
                                - hardware_stores
                                - health_and_beauty_spas
                                - hearing_aids_sales_and_supplies
                                - heating_plumbing_a_c
                                - hobby_toy_and_game_shops
                                - home_supply_warehouse_stores
                                - hospitals
                                - hotels_motels_and_resorts
                                - household_appliance_stores
                                - industrial_supplies
                                - information_retrieval_services
                                - insurance_default
                                - insurance_underwriting_premiums
                                - intra_company_purchases
                                - jewelry_stores_watches_clocks_and_silverware_stores
                                - landscaping_services
                                - laundries
                                - laundry_cleaning_services
                                - legal_services_attorneys
                                - luggage_and_leather_goods_stores
                                - lumber_building_materials_stores
                                - manual_cash_disburse
                                - marinas_service_and_supplies
                                - masonry_stonework_and_plaster
                                - massage_parlors
                                - medical_and_dental_labs
                                - medical_dental_ophthalmic_and_hospital_equipment_and_supplies
                                - medical_services
                                - membership_organizations
                                - mens_and_boys_clothing_and_accessories_stores
                                - mens_womens_clothing_stores
                                - metal_service_centers
                                - miscellaneous
                                - miscellaneous_apparel_and_accessory_shops
                                - miscellaneous_auto_dealers
                                - miscellaneous_business_services
                                - miscellaneous_food_stores
                                - miscellaneous_general_merchandise
                                - miscellaneous_general_services
                                - miscellaneous_home_furnishing_specialty_stores
                                - miscellaneous_publishing_and_printing
                                - miscellaneous_recreation_services
                                - miscellaneous_repair_shops
                                - miscellaneous_specialty_retail
                                - mobile_home_dealers
                                - motion_picture_theaters
                                - motor_freight_carriers_and_trucking
                                - motor_homes_dealers
                                - motor_vehicle_supplies_and_new_parts
                                - motorcycle_shops_and_dealers
                                - motorcycle_shops_dealers
                                - music_stores_musical_instruments_pianos_and_sheet_music
                                - news_dealers_and_newsstands
                                - non_fi_money_orders
                                - non_fi_stored_value_card_purchase_load
                                - nondurable_goods
                                - nurseries_lawn_and_garden_supply_stores
                                - nursing_personal_care
                                - office_and_commercial_furniture
                                - opticians_eyeglasses
                                - optometrists_ophthalmologist
                                - orthopedic_goods_prosthetic_devices
                                - osteopaths
                                - package_stores_beer_wine_and_liquor
                                - paints_varnishes_and_supplies
                                - parking_lots_garages
                                - passenger_railways
                                - pawn_shops
                                - pet_shops_pet_food_and_supplies
                                - petroleum_and_petroleum_products
                                - photo_developing
                                - photographic_photocopy_microfilm_equipment_and_supplies
                                - photographic_studios
                                - picture_video_production
                                - piece_goods_notions_and_other_dry_goods
                                - plumbing_heating_equipment_and_supplies
                                - political_organizations
                                - postal_services_government_only
                                - precious_stones_and_metals_watches_and_jewelry
                                - professional_services
                                - public_warehousing_and_storage
                                - quick_copy_repro_and_blueprint
                                - railroads
                                - real_estate_agents_and_managers_rentals
                                - record_stores
                                - recreational_vehicle_rentals
                                - religious_goods_stores
                                - religious_organizations
                                - roofing_siding_sheet_metal
                                - secretarial_support_services
                                - security_brokers_dealers
                                - service_stations
                                - sewing_needlework_fabric_and_piece_goods_stores
                                - shoe_repair_hat_cleaning
                                - shoe_stores
                                - small_appliance_repair
                                - snowmobile_dealers
                                - special_trade_services
                                - specialty_cleaning
                                - sporting_goods_stores
                                - sporting_recreation_camps
                                - sports_and_riding_apparel_stores
                                - sports_clubs_fields
                                - stamp_and_coin_stores
                                - stationary_office_supplies_printing_and_writing_paper
                                - stationery_stores_office_and_school_supply_stores
                                - swimming_pools_sales
                                - t_ui_travel_germany
                                - tailors_alterations
                                - tax_payments_government_agencies
                                - tax_preparation_services
                                - taxicabs_limousines
                                - telecommunication_equipment_and_telephone_sales
                                - telecommunication_services
                                - telegraph_services
                                - tent_and_awning_shops
                                - testing_laboratories
                                - theatrical_ticket_agencies
                                - timeshares
                                - tire_retreading_and_repair
                                - tolls_bridge_fees
                                - tourist_attractions_and_exhibits
                                - towing_services
                                - trailer_parks_campgrounds
                                - transportation_services
                                - travel_agencies_tour_operators
                                - truck_stop_iteration
                                - truck_utility_trailer_rentals
                                - typesetting_plate_making_and_related_services
                                - typewriter_stores
                                - u_s_federal_government_agencies_or_departments
                                - uniforms_commercial_clothing
                                - used_merchandise_and_secondhand_stores
                                - utilities
                                - variety_stores
                                - veterinary_services
                                - video_amusement_game_supplies
                                - video_game_arcades
                                - video_tape_rental_stores
                                - vocational_trade_schools
                                - watch_jewelry_repair
                                - welding_repair
                                - wholesale_clubs
                                - wig_and_toupee_stores
                                - wires_money_orders
                                - womens_accessory_and_specialty_shops
                                - womens_ready_to_wear_stores
                                - wrecking_and_salvage_yards
                              type: string
                            type: array
                          interval:
                            enum:
                              - all_time
                              - daily
                              - monthly
                              - per_authorization
                              - weekly
                              - yearly
                            type: string
                        required:
                          - amount
                          - interval
                        title: spending_limits_param
                        type: object
                      type: array
                  title: authorization_controls_param
                  type: object
                cardholder:
                  description: The
                    [Cardholder](https://stripe.com/docs/api#issuing_cardholder_object)
                    to associate the card with.
                  type: string
                expand:
                  description: Specifies which fields in the response should be expanded.
                  items:
                    type: string
                  type: array
                metadata: {}
                status:
                  description: "Specifies whether to permit authorizations on this card.
                    Possible values are `active`, `inactive`, or the terminal
                    states: `canceled`, `lost`, `stolen`."
                  enum:
                    - active
                    - canceled
                    - inactive
                    - lost
                    - stolen
                  type: string
              type: object
        description: Body parameters for the request.
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/issuing.card"
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
  "/v1/issuing/cards/{card}/details":
    get:
      description: <p>For virtual cards only. Retrieves an Issuing
        <code>card_details</code> object that contains <a
        href="/docs/issuing/cards/management#virtual-card-info">the sensitive
        details</a> of a virtual card.</p>
      operationId: GetIssuingCardsCardDetails
      parameters:
        - description: Specifies which fields in the response should be expanded.
          in: query
          name: expand
          required: false
          schema:
            type: array
            items: {}
        - description: The identifier of the virtual card to be retrieved.
          in: path
          name: card
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/issuing.card_details"
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
  "/v1/issuing/cards/{card}/pin":
    get:
      description: <p>Retrieves the PIN for a card object, subject to cardholder
        verification, see <a href="/docs/issuing/pin_management">Retrieve and
        update cardholder PIN</a></p>
      operationId: GetIssuingCardsCardPin
      parameters:
        - description: Specifies which fields in the response should be expanded.
          in: query
          name: expand
          required: false
          schema:
            type: array
            items: {}
        - description: The id of the `Card` that the PIN belongs to
          in: path
          name: card
          required: true
          schema:
            type: string
        - description: The id of the `Verification` that was sent and the code entered by
            the cardholder
          in: query
          name: verification
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/issuing.card_pin"
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
    post:
      description: <p>Updates the PIN for a card, subject to cardholder verification. See
        <a href="/docs/issuing/pin_management">Retrieve and update cardholder
        PIN</a></p>
      operationId: PostIssuingCardsCardPin
      parameters:
        - description: The id of the `Card` that the PIN belongs to
          in: path
          name: card
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                expand:
                  description: Specifies which fields in the response should be expanded.
                  items:
                    type: string
                  type: array
                pin:
                  description: The new desired PIN
                  type: string
                verification:
                  description: The id of the `Verification` that was sent and the code
                    entered by the cardholder
                  properties:
                    id:
                      type: string
                    one_time_code:
                      type: string
                  required:
                    - id
                    - one_time_code
                  title: verification_params
                  type: object
              required:
                - pin
                - verification
              type: object
        description: Body parameters for the request.
        required: true
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/issuing.card_pin"
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
  /v1/issuing/disputes:
    get:
      description: <p>Returns a list of Issuing <code>Dispute</code> objects. The objects
        are sorted in descending order by creation date, with the most recently
        created object appearing first.</p>
      operationId: GetIssuingDisputes
      parameters:
        - description: Specifies which fields in the response should be expanded.
          in: query
          name: expand
          required: false
          schema:
            type: array
            items: {}
        - description: Only return issuing disputes that were created during the given date
            interval.
          in: query
          name: created
          required: false
          schema:
            type: integer
        - description: Only return issuing disputes for the given transaction.
          in: query
          name: disputed_transaction
          required: false
          schema:
            type: string
        - description: A cursor for use in pagination. `ending_before` is an object ID that
            defines your place in the list. For instance, if you make a list
            request and receive 100 objects, starting with `obj_bar`, your
            subsequent call can include `ending_before=obj_bar` in order to
            fetch the previous page of the list.
          in: query
          name: ending_before
          required: false
          schema:
            type: string
        - description: A limit on the number of objects to be returned. Limit can range
            between 1 and 100, and the default is 10.
          in: query
          name: limit
          required: false
          schema:
            type: integer
        - description: A cursor for use in pagination. `starting_after` is an object ID
            that defines your place in the list. For instance, if you make a
            list request and receive 100 objects, ending with `obj_foo`, your
            subsequent call can include `starting_after=obj_foo` in order to
            fetch the next page of the list.
          in: query
          name: starting_after
          required: false
          schema:
            type: string
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                properties:
                  data:
                    items:
                      $ref: "#/components/schemas/issuing.dispute"
                    type: array
                  has_more:
                    description: True if this list has another page of items after this one
                      that can be fetched.
                    type: boolean
                  object:
                    description: String representing the object's type. Objects of the same
                      type share the same value. Always has the value `list`.
                    enum:
                      - list
                    type: string
                  url:
                    description: The URL where this list can be accessed.
                    type: string
                required:
                  - data
                  - has_more
                  - object
                  - url
                title: IssuingDisputeList
                type: object
                x-expandableFields:
                  - data
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
    post:
      description: <p>Creates an Issuing <code>Dispute</code> object.</p>
      operationId: PostIssuingDisputes
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                amount:
                  description: Amount to dispute, defaults to full value, given in the
                    currency the transaction was made in.
                  type: integer
                disputed_transaction:
                  description: The ID of the issuing transaction to create a dispute for.
                  type: string
                evidence:
                  description: A hash containing all the evidence related to the dispute.
                    This should have a single key, equal to the provided
                    `reason`, mapping to an appropriate evidence object.
                  properties:
                    fraudulent:
                      properties:
                        dispute_explanation:
                          type: string
                        uncategorized_file:
                          type: string
                      required:
                        - dispute_explanation
                      title: fraudulent
                      type: object
                    other:
                      properties:
                        dispute_explanation:
                          type: string
                        uncategorized_file:
                          type: string
                      required:
                        - dispute_explanation
                      title: other
                      type: object
                  title: disputes_evidence
                  type: object
                expand:
                  description: Specifies which fields in the response should be expanded.
                  items:
                    type: string
                  type: array
                metadata:
                  description: Set of key-value pairs that you can attach to an object.
                    This can be useful for storing additional information about
                    the object in a structured format. Individual keys can be
                    unset by posting an empty value to them. All keys can be
                    unset by posting an empty value to `metadata`.
                  type: object
                reason:
                  description: The reason for the dispute. One of `other` or `fraudulent`.
                  enum:
                    - fraudulent
                    - other
                  type: string
              required:
                - disputed_transaction
                - reason
              type: object
        description: Body parameters for the request.
        required: true
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/issuing.dispute"
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
  "/v1/issuing/disputes/{dispute}":
    get:
      description: <p>Retrieves an Issuing <code>Dispute</code> object.</p>
      operationId: GetIssuingDisputesDispute
      parameters:
        - description: Specifies which fields in the response should be expanded.
          in: query
          name: expand
          required: false
          schema:
            type: array
            items: {}
        - description: The ID of the dispute to retrieve.
          in: path
          name: dispute
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/issuing.dispute"
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
    post:
      description: <p>Updates the specified Issuing <code>Dispute</code> object by setting
        the values of the parameters passed. Any parameters not provided will be
        left unchanged.</p>
      operationId: PostIssuingDisputesDispute
      parameters:
        - description: The ID of the dispute to update.
          in: path
          name: dispute
          required: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/PostApplicationFeesFeeRefundsIdPayload"
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/issuing.dispute"
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
  /v1/issuing/settlements:
    get:
      description: <p>Returns a list of Issuing <code>Settlement</code> objects. The
        objects are sorted in descending order by creation date, with the most
        recently created object appearing first.</p>
      operationId: GetIssuingSettlements
      parameters:
        - description: Specifies which fields in the response should be expanded.
          in: query
          name: expand
          required: false
          schema:
            type: array
            items: {}
        - description: Only return issuing settlements that were created during the given
            date interval.
          in: query
          name: created
          required: false
          schema:
            type: integer
        - description: A cursor for use in pagination. `ending_before` is an object ID that
            defines your place in the list. For instance, if you make a list
            request and receive 100 objects, starting with `obj_bar`, your
            subsequent call can include `ending_before=obj_bar` in order to
            fetch the previous page of the list.
          in: query
          name: ending_before
          required: false
          schema:
            type: string
        - description: A limit on the number of objects to be returned. Limit can range
            between 1 and 100, and the default is 10.
          in: query
          name: limit
          required: false
          schema:
            type: integer
        - description: A cursor for use in pagination. `starting_after` is an object ID
            that defines your place in the list. For instance, if you make a
            list request and receive 100 objects, ending with `obj_foo`, your
            subsequent call can include `starting_after=obj_foo` in order to
            fetch the next page of the list.
          in: query
          name: starting_after
          required: false
          schema:
            type: string
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                properties:
                  data:
                    items:
                      $ref: "#/components/schemas/issuing.settlement"
                    type: array
                  has_more:
                    description: True if this list has another page of items after this one
                      that can be fetched.
                    type: boolean
                  object:
                    description: String representing the object's type. Objects of the same
                      type share the same value. Always has the value `list`.
                    enum:
                      - list
                    type: string
                  url:
                    description: The URL where this list can be accessed.
                    type: string
                required:
                  - data
                  - has_more
                  - object
                  - url
                type: object
                x-expandableFields:
                  - data
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
  "/v1/issuing/settlements/{settlement}":
    get:
      description: <p>Retrieves an Issuing <code>Settlement</code> object.</p>
      operationId: GetIssuingSettlementsSettlement
      parameters:
        - description: Specifies which fields in the response should be expanded.
          in: query
          name: expand
          required: false
          schema:
            type: array
            items: {}
        - description: The ID of the settlement to retrieve.
          in: path
          name: settlement
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/issuing.settlement"
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
    post:
      description: <p>Updates the specified Issuing <code>Settlement</code> object by
        setting the values of the parameters passed. Any parameters not provided
        will be left unchanged.</p>
      operationId: PostIssuingSettlementsSettlement
      parameters:
        - description: The ID of the settlement to update.
          in: path
          name: settlement
          required: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/PostApplicationFeesFeeRefundsIdPayload"
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/issuing.settlement"
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
  /v1/issuing/transactions:
    get:
      description: <p>Returns a list of Issuing <code>Transaction</code> objects. The
        objects are sorted in descending order by creation date, with the most
        recently created object appearing first.</p>
      operationId: GetIssuingTransactions
      parameters:
        - description: Specifies which fields in the response should be expanded.
          in: query
          name: expand
          required: false
          schema:
            type: array
            items: {}
        - description: Only return issuing transactions that belong to the given card.
          in: query
          name: card
          required: false
          schema:
            type: string
        - description: Only return authorizations belonging to the given cardholder.
          in: query
          name: cardholder
          required: false
          schema:
            type: string
        - description: Only return transactions that were created during the given date
            interval.
          in: query
          name: created
          required: false
          schema:
            type: integer
        - description: Only return transactions that originate from a given dispute.
          in: query
          name: dispute
          required: false
          schema:
            type: string
        - description: A cursor for use in pagination. `ending_before` is an object ID that
            defines your place in the list. For instance, if you make a list
            request and receive 100 objects, starting with `obj_bar`, your
            subsequent call can include `ending_before=obj_bar` in order to
            fetch the previous page of the list.
          in: query
          name: ending_before
          required: false
          schema:
            type: string
        - description: A limit on the number of objects to be returned. Limit can range
            between 1 and 100, and the default is 10.
          in: query
          name: limit
          required: false
          schema:
            type: integer
        - description: Only return transactions that are associated with the given
            settlement.
          in: query
          name: settlement
          required: false
          schema:
            type: string
        - description: A cursor for use in pagination. `starting_after` is an object ID
            that defines your place in the list. For instance, if you make a
            list request and receive 100 objects, ending with `obj_foo`, your
            subsequent call can include `starting_after=obj_foo` in order to
            fetch the next page of the list.
          in: query
          name: starting_after
          required: false
          schema:
            type: string
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                properties:
                  data:
                    items:
                      $ref: "#/components/schemas/issuing.transaction"
                    type: array
                  has_more:
                    description: True if this list has another page of items after this one
                      that can be fetched.
                    type: boolean
                  object:
                    description: String representing the object's type. Objects of the same
                      type share the same value. Always has the value `list`.
                    enum:
                      - list
                    type: string
                  url:
                    description: The URL where this list can be accessed.
                    type: string
                required:
                  - data
                  - has_more
                  - object
                  - url
                type: object
                x-expandableFields:
                  - data
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
  "/v1/issuing/transactions/{transaction}":
    get:
      description: <p>Retrieves an Issuing <code>Transaction</code> object.</p>
      operationId: GetIssuingTransactionsTransaction
      parameters:
        - description: Specifies which fields in the response should be expanded.
          in: query
          name: expand
          required: false
          schema:
            type: array
            items: {}
        - description: The ID of the transaction to retrieve.
          in: path
          name: transaction
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/issuing.transaction"
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
    post:
      description: <p>Updates the specified Issuing <code>Transaction</code> object by
        setting the values of the parameters passed. Any parameters not provided
        will be left unchanged.</p>
      operationId: PostIssuingTransactionsTransaction
      parameters:
        - description: The identifier of the transaction to update.
          in: path
          name: transaction
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                expand:
                  description: Specifies which fields in the response should be expanded.
                  items:
                    type: string
                  type: array
                metadata: {}
              type: object
        description: Body parameters for the request.
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/issuing.transaction"
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
  /v1/issuing/verifications:
    post:
      description: "<p>Some actions (eg: updating a PIN) need confirmation from the
        cardholder</p>"
      operationId: PostIssuingVerifications
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                card:
                  description: The `Card` for which a verification is requested
                  type: string
                expand:
                  description: Specifies which fields in the response should be expanded.
                  items:
                    type: string
                  type: array
                scope:
                  description: The scope of the verification (one of `card_pin_retrieve` or
                    `card_pin_update`)
                  enum:
                    - card_pin_retrieve
                    - card_pin_update
                  type: string
                verification_method:
                  description: The method used to send the cardholder the verification (one
                    of `email` or `sms`)
                  enum:
                    - email
                    - sms
                  type: string
              required:
                - card
                - scope
                - verification_method
              type: object
        description: Body parameters for the request.
        required: true
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/issuing.verification"
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
  /v1/order_returns:
    get:
      description: <p>Returns a list of your order returns. The returns are returned sorted
        by creation date, with the most recently created return appearing
        first.</p>
      operationId: GetOrderReturns
      parameters:
        - description: Specifies which fields in the response should be expanded.
          in: query
          name: expand
          required: false
          schema:
            type: array
            items: {}
        - description: Date this return was created.
          in: query
          name: created
          required: false
          schema:
            type: integer
        - description: A cursor for use in pagination. `ending_before` is an object ID that
            defines your place in the list. For instance, if you make a list
            request and receive 100 objects, starting with `obj_bar`, your
            subsequent call can include `ending_before=obj_bar` in order to
            fetch the previous page of the list.
          in: query
          name: ending_before
          required: false
          schema:
            type: string
        - description: A limit on the number of objects to be returned. Limit can range
            between 1 and 100, and the default is 10.
          in: query
          name: limit
          required: false
          schema:
            type: integer
        - description: The order to retrieve returns for.
          in: query
          name: order
          required: false
          schema:
            type: string
        - description: A cursor for use in pagination. `starting_after` is an object ID
            that defines your place in the list. For instance, if you make a
            list request and receive 100 objects, ending with `obj_foo`, your
            subsequent call can include `starting_after=obj_foo` in order to
            fetch the next page of the list.
          in: query
          name: starting_after
          required: false
          schema:
            type: string
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                properties:
                  data:
                    items:
                      $ref: "#/components/schemas/order_return"
                    type: array
                  has_more:
                    description: True if this list has another page of items after this one
                      that can be fetched.
                    type: boolean
                  object:
                    description: String representing the object's type. Objects of the same
                      type share the same value. Always has the value `list`.
                    enum:
                      - list
                    type: string
                  url:
                    description: The URL where this list can be accessed.
                    type: string
                required:
                  - data
                  - has_more
                  - object
                  - url
                type: object
                x-expandableFields:
                  - data
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
  "/v1/order_returns/{id}":
    get:
      description: <p>Retrieves the details of an existing order return. Supply the unique
        order ID from either an order return creation request or the order
        return list, and Stripe will return the corresponding order
        information.</p>
      operationId: GetOrderReturnsId
      parameters:
        - description: Specifies which fields in the response should be expanded.
          in: query
          name: expand
          required: false
          schema:
            type: array
            items: {}
        - description: The identifier of the order return to be retrieved.
          in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/order_return"
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
  /v1/orders:
    get:
      description: <p>Returns a list of your orders. The orders are returned sorted by
        creation date, with the most recently created orders appearing
        first.</p>
      operationId: GetOrders
      parameters:
        - description: Specifies which fields in the response should be expanded.
          in: query
          name: expand
          required: false
          schema:
            type: array
            items: {}
        - description: Date this order was created.
          in: query
          name: created
          required: false
          schema:
            type: integer
        - description: Only return orders for the given customer.
          in: query
          name: customer
          required: false
          schema:
            type: string
        - description: A cursor for use in pagination. `ending_before` is an object ID that
            defines your place in the list. For instance, if you make a list
            request and receive 100 objects, starting with `obj_bar`, your
            subsequent call can include `ending_before=obj_bar` in order to
            fetch the previous page of the list.
          in: query
          name: ending_before
          required: false
          schema:
            type: string
        - description: Only return orders with the given IDs.
          in: query
          name: ids
          required: false
          schema:
            type: array
            items: {}
        - description: A limit on the number of objects to be returned. Limit can range
            between 1 and 100, and the default is 10.
          in: query
          name: limit
          required: false
          schema:
            type: integer
        - description: A cursor for use in pagination. `starting_after` is an object ID
            that defines your place in the list. For instance, if you make a
            list request and receive 100 objects, ending with `obj_foo`, your
            subsequent call can include `starting_after=obj_foo` in order to
            fetch the next page of the list.
          in: query
          name: starting_after
          required: false
          schema:
            type: string
        - description: Only return orders that have the given status. One of `created`,
            `paid`, `fulfilled`, or `refunded`.
          in: query
          name: status
          required: false
          schema:
            type: string
        - description: Filter orders based on when they were paid, fulfilled, canceled, or
            returned.
          in: query
          name: status_transitions
          required: false
          schema:
            type: string
        - description: Only return orders with the given upstream order IDs.
          in: query
          name: upstream_ids
          required: false
          schema:
            type: array
            items: {}
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                properties:
                  data:
                    items:
                      $ref: "#/components/schemas/order"
                    type: array
                  has_more:
                    description: True if this list has another page of items after this one
                      that can be fetched.
                    type: boolean
                  object:
                    description: String representing the object's type. Objects of the same
                      type share the same value. Always has the value `list`.
                    enum:
                      - list
                    type: string
                  url:
                    description: The URL where this list can be accessed.
                    type: string
                required:
                  - data
                  - has_more
                  - object
                  - url
                type: object
                x-expandableFields:
                  - data
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
    post:
      description: <p>Creates a new order object.</p>
      operationId: PostOrders
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                coupon:
                  description: A coupon code that represents a discount to be applied to
                    this order. Must be one-time duration and in same currency
                    as the order. An order can have multiple coupons.
                  type: string
                currency:
                  description: Three-letter [ISO currency
                    code](https://www.iso.org/iso-4217-currency-codes.html), in
                    lowercase. Must be a [supported
                    currency](https://stripe.com/docs/currencies).
                  type: string
                customer:
                  description: The ID of an existing customer to use for this order. If
                    provided, the customer email and shipping address will be
                    used to create the order. Subsequently, the customer will
                    also be charged to pay the order. If `email` or `shipping`
                    are also provided, they will override the values retrieved
                    from the customer object.
                  type: string
                email:
                  description: The email address of the customer placing the order.
                  type: string
                expand:
                  description: Specifies which fields in the response should be expanded.
                  items:
                    type: string
                  type: array
                items:
                  description: List of items constituting the order. An order can have up
                    to 25 items.
                  items:
                    properties:
                      amount:
                        type: integer
                      currency:
                        type: string
                      description:
                        type: string
                      parent:
                        type: string
                      quantity:
                        type: integer
                      type:
                        enum:
                          - discount
                          - shipping
                          - sku
                          - tax
                        type: string
                    title: order_item_specs
                    type: object
                  type: array
                metadata:
                  description: A set of key-value pairs that you can attach to an order
                    object. Limited to 500 characters. Metadata can be useful
                    for storing additional information about the order in a
                    structured format.
                  type: object
                shipping:
                  description: Shipping address for the order. Required if any of the SKUs
                    are for products that have `shippable` set to true.
                  properties:
                    address:
                      properties:
                        city:
                          type: string
                        country:
                          type: string
                        line1:
                          type: string
                        line2:
                          type: string
                        postal_code:
                          type: string
                        state:
                          type: string
                      required:
                        - line1
                      title: address
                      type: object
                    name:
                      type: string
                    phone:
                      type: string
                  required:
                    - address
                    - name
                  title: customer_shipping
                  type: object
              required:
                - currency
              type: object
        description: Body parameters for the request.
        required: true
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/order"
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
  "/v1/orders/{id}":
    get:
      description: <p>Retrieves the details of an existing order. Supply the unique order
        ID from either an order creation request or the order list, and Stripe
        will return the corresponding order information.</p>
      operationId: GetOrdersId
      parameters:
        - description: Specifies which fields in the response should be expanded.
          in: query
          name: expand
          required: false
          schema:
            type: array
            items: {}
        - description: The identifier of the order to be retrieved.
          in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/order"
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
    post:
      description: <p>Updates the specific order by setting the values of the parameters
        passed. Any parameters not provided will be left unchanged.</p>
      operationId: PostOrdersId
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                coupon:
                  description: A coupon code that represents a discount to be applied to
                    this order. Must be one-time duration and in same currency
                    as the order. An order can have multiple coupons.
                  type: string
                expand:
                  description: Specifies which fields in the response should be expanded.
                  items:
                    type: string
                  type: array
                metadata:
                  description: A set of key-value pairs that you can attach to a product
                    object. It can be useful for storing additional information
                    about the order in a structured format.
                  type: object
                selected_shipping_method:
                  description: The shipping method to select for fulfilling this order. If
                    specified, must be one of the `id`s of a shipping method in
                    the `shipping_methods` array. If specified, will overwrite
                    the existing selected shipping method, updating `items` as
                    necessary.
                  type: string
                shipping:
                  description: Tracking information once the order has been fulfilled.
                  properties:
                    carrier:
                      type: string
                    tracking_number:
                      type: string
                  required:
                    - carrier
                    - tracking_number
                  title: shipping_tracking_params
                  type: object
                status:
                  description: Current order status. One of `created`, `paid`, `canceled`,
                    `fulfilled`, or `returned`. More detail in the [Orders
                    Guide](https://stripe.com/docs/orders/guide#understanding-order-statuses).
                  enum:
                    - canceled
                    - created
                    - fulfilled
                    - paid
                    - returned
                  type: string
              type: object
        description: Body parameters for the request.
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/order"
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
  "/v1/orders/{id}/pay":
    post:
      description: <p>Pay an order by providing a <code>source</code> to create a
        payment.</p>
      operationId: PostOrdersIdPay
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                application_fee:
                  type: integer
                customer:
                  description: The ID of an existing customer that will be charged for this
                    order. If no customer was attached to the order at creation,
                    either `source` or `customer` is required. Otherwise, the
                    specified customer will be charged instead of the one
                    attached to the order.
                  type: string
                email:
                  description: The email address of the customer placing the order.
                    Required if not previously specified for the order.
                  type: string
                expand:
                  description: Specifies which fields in the response should be expanded.
                  items:
                    type: string
                  type: array
                metadata:
                  description: A set of key-value pairs that you can attach to an order
                    object. Limited to 500 characters. Metadata can be useful
                    for storing additional information about the order in a
                    structured format.
                  type: object
                source:
                  description: A [Token](https://stripe.com/docs/api#tokens)'s or a
                    [Source](https://stripe.com/docs/api#sources)'s ID, as
                    returned by [Elements](https://stripe.com/docs/elements). If
                    no customer was attached to the order at creation, either
                    `source` or `customer is required. Otherwise, the specified
                    source will be charged intead of the customer attached to
                    the order.
                  type: string
              type: object
        description: Body parameters for the request.
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/order"
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
  "/v1/orders/{id}/returns":
    post:
      description: <p>Return all or part of an order. The order must have a status of
        <code>paid</code> or <code>fulfilled</code> before it can be returned.
        Once all items have been returned, the order will become
        <code>canceled</code> or <code>returned</code> depending on which status
        the order started in.</p>
      operationId: PostOrdersIdReturns
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                expand:
                  description: Specifies which fields in the response should be expanded.
                  items:
                    type: string
                  type: array
                items:
                  description: List of items to return.
                  items:
                    properties:
                      amount:
                        type: integer
                      description:
                        type: string
                      parent:
                        type: string
                      quantity:
                        type: integer
                      type:
                        enum:
                          - discount
                          - shipping
                          - sku
                          - tax
                        type: string
                    title: return_order_item_specs
                    type: object
              type: object
        description: Body parameters for the request.
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/order_return"
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
  /v1/payment_intents:
    get:
      description: <p>Returns a list of PaymentIntents.</p>
      operationId: GetPaymentIntents
      parameters:
        - description: Specifies which fields in the response should be expanded.
          in: query
          name: expand
          required: false
          schema:
            type: array
            items: {}
        - description: A filter on the list, based on the object `created` field. The value
            can be a string with an integer Unix timestamp, or it can be a
            dictionary with a number of different query options.
          in: query
          name: created
          required: false
          schema:
            type: integer
        - description: Only return PaymentIntents for the customer specified by this
            customer ID.
          in: query
          name: customer
          required: false
          schema:
            type: string
        - description: A cursor for use in pagination. `ending_before` is an object ID that
            defines your place in the list. For instance, if you make a list
            request and receive 100 objects, starting with `obj_bar`, your
            subsequent call can include `ending_before=obj_bar` in order to
            fetch the previous page of the list.
          in: query
          name: ending_before
          required: false
          schema:
            type: string
        - description: A limit on the number of objects to be returned. Limit can range
            between 1 and 100, and the default is 10.
          in: query
          name: limit
          required: false
          schema:
            type: integer
        - description: A cursor for use in pagination. `starting_after` is an object ID
            that defines your place in the list. For instance, if you make a
            list request and receive 100 objects, ending with `obj_foo`, your
            subsequent call can include `starting_after=obj_foo` in order to
            fetch the next page of the list.
          in: query
          name: starting_after
          required: false
          schema:
            type: string
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                properties:
                  data:
                    items:
                      $ref: "#/components/schemas/payment_intent"
                    type: array
                  has_more:
                    description: True if this list has another page of items after this one
                      that can be fetched.
                    type: boolean
                  object:
                    description: String representing the object's type. Objects of the same
                      type share the same value. Always has the value `list`.
                    enum:
                      - list
                    type: string
                  url:
                    description: The URL where this list can be accessed.
                    type: string
                required:
                  - data
                  - has_more
                  - object
                  - url
                title: PaymentFlowsPaymentIntentList
                type: object
                x-expandableFields:
                  - data
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
    post:
      description: >-
        <p>Creates a PaymentIntent object.</p>


        <p>After the PaymentIntent is created, attach a payment method and <a href="/docs/api/payment_intents/confirm">confirm</a>

        to continue the payment. You can read more about the different payment flows

        available via the Payment Intents API <a href="/docs/payments/payment-intents">here</a>.</p>


        <p>When <code>confirm=true</code> is used during creation, it is equivalent to creating

        and confirming the PaymentIntent in the same call. You may use any parameters

        available in the <a href="/docs/api/payment_intents/confirm">confirm API</a> when <code>confirm=true</code>

        is supplied.</p>
      operationId: PostPaymentIntents
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                amount:
                  description: A positive integer representing how much to charge in the
                    [smallest currency
                    unit](https://stripe.com/docs/currencies#zero-decimal)
                    (e.g., 100 cents to charge $1.00 or 100 to charge ¥100, a
                    zero-decimal currency). The minimum amount is $0.50 US or
                    [equivalent in charge
                    currency](https://stripe.com/docs/currencies#minimum-and-maximum-charge-amounts).
                    The amount value supports up to eight digits (e.g., a value
                    of 99999999 for a USD charge of $999,999.99).
                  type: integer
                application_fee_amount:
                  description: >-
                    The amount of the application fee (if any) that will be
                    applied to the

                    payment and transferred to the application owner's Stripe account. For

                    more information, see the PaymentIntents [use case for connected accounts](https://stripe.com/docs/payments/payment-intents/use-cases#connected-accounts).
                  type: integer
                capture_method:
                  description: >-
                    One of `automatic` (default) or `manual`.


                    When the capture method is `automatic`, Stripe automatically captures funds when the customer authorizes the payment.


                    Change `capture_method` to manual if you wish to [separate authorization and capture](https://stripe.com/docs/payments/payment-intents/creating-payment-intents#separate-authorization-and-capture) for payment methods that support this.
                  enum:
                    - automatic
                    - manual
                  type: string
                confirm:
                  description: Set to `true` to attempt to
                    [confirm](https://stripe.com/docs/api/payment_intents/confirm)
                    this PaymentIntent immediately. This parameter defaults to
                    `false`. When creating and confirming a PaymentIntent at the
                    same time, parameters available in the
                    [confirm](https://stripe.com/docs/api/payment_intents/confirm)
                    API may also be provided.
                  type: boolean
                confirmation_method:
                  description: >-
                    One of `automatic` (default) or `manual`.


                    When the confirmation method is `automatic`, a PaymentIntent can be confirmed using a publishable key. After `next_action`s are handled, no additional confirmation is required to complete the payment.


                    When the confirmation method is `manual`, all payment attempts must be made using a secret key. The PaymentIntent returns to the `requires_confirmation` state after handling `next_action`s, and requires your server to initiate each payment attempt with an explicit confirmation.


                    Learn more about the different [confirmation flows](https://stripe.com/docs/payments/payment-intents/use-cases#one-time-payments).
                  enum:
                    - automatic
                    - manual
                  type: string
                currency:
                  description: Three-letter [ISO currency
                    code](https://www.iso.org/iso-4217-currency-codes.html), in
                    lowercase. Must be a [supported
                    currency](https://stripe.com/docs/currencies).
                  type: string
                customer:
                  description: >-
                    ID of the Customer this PaymentIntent belongs to, if one
                    exists.


                    If present, payment methods used with this PaymentIntent can only be attached to this Customer, and payment methods attached to other Customers cannot be used with this PaymentIntent.
                  type: string
                description:
                  description: An arbitrary string attached to the object. Often useful for
                    displaying to users.
                  type: string
                expand:
                  description: Specifies which fields in the response should be expanded.
                  items:
                    type: string
                  type: array
                metadata:
                  description: Set of key-value pairs that you can attach to an object.
                    This can be useful for storing additional information about
                    the object in a structured format.
                  type: object
                off_session:
                  description: Set to `true` to indicate that the customer is not in your
                    checkout flow during this payment attempt, and therefore is
                    unable to authenticate. This parameter is intended for
                    scenarios where you collect card details and [charge them
                    later](https://stripe.com/docs/payments/cards/charging-saved-cards).
                    This parameter can only be used with
                    [`confirm=true`](https://stripe.com/docs/api/payment_intents/create#create_payment_intent-confirm).
                on_behalf_of:
                  description: The Stripe account ID for which these funds are intended.
                    For details, see the PaymentIntents [use case for connected
                    accounts](https://stripe.com/docs/payments/payment-intents/use-cases#connected-accounts).
                  type: string
                payment_method:
                  description: ID of the payment method (a PaymentMethod, Card,
                    BankAccount, or saved Source object) to attach to this
                    PaymentIntent.
                  type: string
                payment_method_options:
                  description: Payment-method-specific configuration for this PaymentIntent.
                  properties:
                    card:
                      properties:
                        request_three_d_secure:
                          enum:
                            - any
                            - automatic
                          type: string
                      title: payment_intent_param
                      type: object
                  title: payment_method_options_param
                  type: object
                payment_method_types:
                  description: The list of payment method types (e.g. card) that this
                    PaymentIntent is allowed to use. If this is not provided,
                    defaults to ["card"].
                  items:
                    type: string
                  type: array
                receipt_email:
                  description: Email address that the receipt for the resulting payment
                    will be sent to.
                  type: string
                return_url:
                  description: The URL to redirect your customer back to after they
                    authenticate or cancel their payment on the payment method's
                    app or site. If you'd prefer to redirect to a mobile
                    application, you can alternatively supply an application URI
                    scheme. This parameter can only be used with
                    [`confirm=true`](https://stripe.com/docs/api/payment_intents/create#create_payment_intent-confirm).
                  type: string
                save_payment_method:
                  description: >-
                    If the PaymentIntent has a `payment_method` and a `customer`
                    or if you're attaching a payment method to the PaymentIntent
                    in this request, you can pass `save_payment_method=true` to
                    save the payment method to the customer. Defaults to
                    `false`.


                    If the payment method is already saved to a customer, this does nothing. If this type of payment method cannot be saved to a customer, the request will error.
                  type: boolean
                setup_future_usage:
                  description: >-
                    Indicates that you intend to make future payments with this
                    PaymentIntent's payment method.


                    If present, the payment method used with this PaymentIntent can be [attached](https://stripe.com/docs/api/payment_methods/attach) to a Customer, even after the transaction completes.


                    Use `on_session` if you intend to only reuse the payment method when your customer is present in your checkout flow. Use `off_session` if your customer may or may not be in your checkout flow. See [Saving card details after a payment](https://stripe.com/docs/payments/cards/saving-cards-after-payment) to learn more.


                    Stripe uses `setup_future_usage` to dynamically optimize your payment flow and comply with regional legislation and network rules. For example, if your customer is impacted by [SCA](https://stripe.com/docs/strong-customer-authentication), using `off_session` will ensure that they are authenticated while processing this PaymentIntent. You will then be able to collect [off-session payments](https://stripe.com/docs/payments/cards/charging-saved-cards#off-session-payments-with-saved-cards) for this customer.
                  enum:
                    - off_session
                    - on_session
                  type: string
                shipping:
                  description: Shipping information for this PaymentIntent.
                  properties:
                    address:
                      properties:
                        city:
                          type: string
                        country:
                          type: string
                        line1:
                          type: string
                        line2:
                          type: string
                        postal_code:
                          type: string
                        state:
                          type: string
                      required:
                        - line1
                      title: address
                      type: object
                    carrier:
                      type: string
                    name:
                      type: string
                    phone:
                      type: string
                    tracking_number:
                      type: string
                  required:
                    - address
                    - name
                  title: shipping
                  type: object
                statement_descriptor:
                  description: For non-card charges, you can use this value as the complete
                    description that appears on your customers’ statements. Must
                    contain at least one letter, maximum 22 characters.
                  type: string
                statement_descriptor_suffix:
                  description: Provides information about a card payment that customers see
                    on their statements. Concatenated with the prefix (shortened
                    descriptor) or statement descriptor that’s set on the
                    account to form the complete statement descriptor. Maximum
                    22 characters for the concatenated descriptor.
                  type: string
                transfer_data:
                  description: >-
                    The parameters used to automatically create a Transfer when
                    the payment succeeds.

                    For more information, see the PaymentIntents [use case for connected accounts](https://stripe.com/docs/payments/payment-intents/use-cases#connected-accounts).
                  properties:
                    amount:
                      type: integer
                    destination:
                      type: string
                  required:
                    - destination
                  title: transfer_data_creation_params
                  type: object
                transfer_group:
                  description: A string that identifies the resulting payment as part of a
                    group. See the PaymentIntents [use case for connected
                    accounts](https://stripe.com/docs/payments/payment-intents/use-cases#connected-accounts)
                    for details.
                  type: string
              required:
                - amount
                - currency
              type: object
        description: Body parameters for the request.
        required: true
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/payment_intent"
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
  "/v1/payment_intents/{intent}":
    get:
      description: >-
        <p>Retrieves the details of a PaymentIntent that has previously been
        created. </p>


        <p>Client-side retrieval using a publishable key is allowed when the <code>client_secret</code> is provided in the query string. </p>


        <p>When retrieved with a publishable key, only a subset of properties will be returned. Please refer to the <a href="#payment_intent_object">payment intent</a> object reference for more details.</p>
      operationId: GetPaymentIntentsIntent
      parameters:
        - description: Specifies which fields in the response should be expanded.
          in: query
          name: expand
          required: false
          schema:
            type: array
            items: {}
        - description: The client secret of the PaymentIntent. Required if a publishable
            key is used to retrieve the source.
          in: query
          name: client_secret
          required: false
          schema:
            type: string
        - description: ID of the PaymentIntent to retrieve.
          in: path
          name: intent
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/payment_intent"
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
    post:
      description: >-
        <p>Updates properties on a PaymentIntent object without confirming.</p>


        <p>Depending on which properties you update, you may need to confirm the

        PaymentIntent again. For example, updating the <code>payment_method</code> will

        always require you to confirm the PaymentIntent again. If you prefer to

        update and confirm at the same time, we recommend updating properties via

        the <a href="/docs/api/payment_intents/confirm">confirm API</a> instead.</p>
      operationId: PostPaymentIntentsIntent
      parameters:
        - description: ID of the PaymentIntent to retrieve.
          in: path
          name: intent
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                amount:
                  description: Amount intended to be collected by this PaymentIntent
                  type: integer
                application_fee_amount:
                  description: The amount of the application fee (if any) for the resulting
                    payment. See the PaymentIntents [use case for connected
                    accounts](https://stripe.com/docs/payments/payment-intents/use-cases#connected-accounts)
                    for details.
                currency:
                  description: Three-letter [ISO currency
                    code](https://www.iso.org/iso-4217-currency-codes.html), in
                    lowercase. Must be a [supported
                    currency](https://stripe.com/docs/currencies).
                  type: string
                customer:
                  description: >-
                    ID of the Customer this PaymentIntent belongs to, if one
                    exists.


                    If present, payment methods used with this PaymentIntent can only be attached to this Customer, and payment methods attached to other Customers cannot be used with this PaymentIntent.
                  type: string
                description:
                  description: An arbitrary string attached to the object. Often useful for
                    displaying to users.
                  type: string
                expand:
                  description: Specifies which fields in the response should be expanded.
                  items:
                    type: string
                  type: array
                metadata:
                  description: Set of key-value pairs that you can attach to an object.
                    This can be useful for storing additional information about
                    the object in a structured format.
                  type: object
                payment_method:
                  description: ID of the payment method (a PaymentMethod, Card,
                    BankAccount, or saved Source object) to attach to this
                    PaymentIntent.
                  type: string
                payment_method_types:
                  description: The list of payment method types (e.g. card) that this
                    PaymentIntent is allowed to use.
                  items:
                    type: string
                  type: array
                receipt_email:
                  description: Email address that the receipt for the resulting payment
                    will be sent to.
                  type: string
                save_payment_method:
                  description: >-
                    If the PaymentIntent has a `payment_method` and a `customer`
                    or if you're attaching a payment method to the PaymentIntent
                    in this request, you can pass `save_payment_method=true` to
                    save the payment method to the customer. Defaults to
                    `false`.


                    If the payment method is already saved to a customer, this does nothing. If this type of payment method cannot be saved to a customer, the request will error.
                  type: boolean
                setup_future_usage:
                  description: >-
                    Indicates that you intend to make future payments with this
                    PaymentIntent's payment method.


                    If present, the payment method used with this PaymentIntent can be [attached](https://stripe.com/docs/api/payment_methods/attach) to a Customer, even after the transaction completes.


                    Use `on_session` if you intend to only reuse the payment method when your customer is present in your checkout flow. Use `off_session` if your customer may or may not be in your checkout flow.


                    Stripe uses `setup_future_usage` to dynamically optimize your payment flow and comply with regional legislation and network rules. For example, if your customer is impacted by [SCA](https://stripe.com/docs/strong-customer-authentication), using `off_session` will ensure that they are authenticated while processing this PaymentIntent. You will then be able to collect [off-session payments](https://stripe.com/docs/payments/cards/charging-saved-cards#off-session-payments-with-saved-cards) for this customer.


                    If `setup_future_usage` is already set and you are performing a request using a publishable key, you may only update the value from `on_session` to `off_session`.
                  enum:
                    - ""
                    - off_session
                    - on_session
                  type: string
                shipping:
                  description: Shipping information for this PaymentIntent.
                statement_descriptor:
                  description: For non-card charges, you can use this value as the complete
                    description that appears on your customers’ statements. Must
                    contain at least one letter, maximum 22 characters.
                  type: string
                statement_descriptor_suffix:
                  description: Provides information about a card payment that customers see
                    on their statements. Concatenated with the prefix (shortened
                    descriptor) or statement descriptor that’s set on the
                    account to form the complete statement descriptor. Maximum
                    22 characters for the concatenated descriptor.
                  type: string
                transfer_data:
                  description: The parameters used to automatically create a Transfer when
                    the payment succeeds. For more information, see the
                    PaymentIntents [use case for connected
                    accounts](https://stripe.com/docs/payments/payment-intents/use-cases#connected-accounts).
                  properties:
                    amount:
                      type: integer
                  title: transfer_data_update_params
                  type: object
                transfer_group:
                  description: A string that identifies the resulting payment as part of a
                    group. `transfer_group` may only be provided if it has not
                    been set. See the PaymentIntents [use case for connected
                    accounts](https://stripe.com/docs/payments/payment-intents/use-cases#connected-accounts)
                    for details.
                  type: string
              type: object
        description: Body parameters for the request.
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/payment_intent"
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
  "/v1/payment_intents/{intent}/cancel":
    post:
      description: >-
        <p>A PaymentIntent object can be canceled when it is in one of these
        statuses: <code>requires_payment_method</code>,
        <code>requires_capture</code>, <code>requires_confirmation</code>,
        <code>requires_action</code>. </p>


        <p>Once canceled, no additional charges will be made by the PaymentIntent and any operations on the PaymentIntent will fail with an error. For PaymentIntents with <code>status='requires_capture'</code>, the remaining <code>amount_capturable</code> will automatically be refunded.</p>
      operationId: PostPaymentIntentsIntentCancel
      parameters:
        - description: ID of the PaymentIntent to retrieve.
          in: path
          name: intent
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                cancellation_reason:
                  description: Reason for canceling this PaymentIntent. Possible values are
                    `duplicate`, `fraudulent`, `requested_by_customer`, or
                    `abandoned`
                  enum:
                    - abandoned
                    - duplicate
                    - fraudulent
                    - requested_by_customer
                  type: string
                expand:
                  description: Specifies which fields in the response should be expanded.
                  items:
                    type: string
                  type: array
              type: object
        description: Body parameters for the request.
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/payment_intent"
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
  "/v1/payment_intents/{intent}/capture":
    post:
      description: >-
        <p>Capture the funds of an existing uncaptured PaymentIntent when its
        status is <code>requires_capture</code>.</p>


        <p>Uncaptured PaymentIntents will be canceled exactly seven days after they are created.</p>


        <p>Read the <a href="/docs/payments/payment-intents/creating-payment-intents#separate-auth-capture">expanded documentation</a> to learn more about separate authorization and capture.</p>
      operationId: PostPaymentIntentsIntentCapture
      parameters:
        - description: ID of the PaymentIntent to retrieve.
          in: path
          name: intent
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                amount_to_capture:
                  description: The amount to capture from the PaymentIntent, which must be
                    less than or equal to the original amount. Any additional
                    amount will be automatically refunded. Defaults to the full
                    `amount_capturable` if not provided.
                  type: integer
                application_fee_amount:
                  description: >-
                    The amount of the application fee (if any) that will be
                    applied to the

                    payment and transferred to the application owner's Stripe account. For

                    more information, see the PaymentIntents [use case for connected accounts](https://stripe.com/docs/payments/payment-intents/use-cases#connected-accounts).
                  type: integer
                expand:
                  description: Specifies which fields in the response should be expanded.
                  items:
                    type: string
                  type: array
                statement_descriptor:
                  description: For non-card charges, you can use this value as the complete
                    description that appears on your customers’ statements. Must
                    contain at least one letter, maximum 22 characters.
                  type: string
                statement_descriptor_suffix:
                  description: Provides information about a card payment that customers see
                    on their statements. Concatenated with the prefix (shortened
                    descriptor) or statement descriptor that’s set on the
                    account to form the complete statement descriptor. Maximum
                    22 characters for the concatenated descriptor.
                  type: string
                transfer_data:
                  description: >-
                    The parameters used to automatically create a Transfer when
                    the payment

                    is captured. For more information, see the PaymentIntents [use case for connected accounts](https://stripe.com/docs/payments/payment-intents/use-cases#connected-accounts).
                  properties:
                    amount:
                      type: integer
                  title: transfer_data_update_params
                  type: object
              type: object
        description: Body parameters for the request.
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/payment_intent"
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
  "/v1/payment_intents/{intent}/confirm":
    post:
      description: >-
        <p>Confirm that your customer intends to pay with current or provided

        payment method. Upon confirmation, the PaymentIntent will attempt to initiate

        a payment.</p>


        <p>If the selected payment method requires additional authentication steps, the

        PaymentIntent will transition to the <code>requires_action</code> status and

        suggest additional actions via <code>next_action</code>. If payment fails,

        the PaymentIntent will transition to the <code>requires_payment_method</code> status. If

        payment succeeds, the PaymentIntent will transition to the <code>succeeded</code>

        status (or <code>requires_capture</code>, if <code>capture_method</code> is set to <code>manual</code>).</p>


        <p>If the <code>confirmation_method</code> is <code>automatic</code>, payment may be attempted

        using our <a href="/docs/stripe-js/reference#stripe-handle-card-payment">client SDKs</a>

        and the PaymentIntent’s <a href="#payment_intent_object-client_secret">client_secret</a>.

        After <code>next_action</code>s are handled by the client, no additional

        confirmation is required to complete the payment.</p>


        <p>If the <code>confirmation_method</code> is <code>manual</code>, all payment attempts must be

        initiated using a secret key.

        If any actions are required for the payment, the PaymentIntent will

        return to the <code>requires_confirmation</code> state

        after those actions are completed. Your server needs to then

        explicitly re-confirm the PaymentIntent to initiate the next payment

        attempt. Read the <a href="/docs/payments/payment-intents/web-manual">expanded documentation</a>

        to learn more about manual confirmation.</p>
      operationId: PostPaymentIntentsIntentConfirm
      parameters:
        - description: ID of the PaymentIntent to retrieve.
          in: path
          name: intent
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                client_secret:
                  description: The client secret of the PaymentIntent.
                  type: string
                expand:
                  description: Specifies which fields in the response should be expanded.
                  items:
                    type: string
                  type: array
                off_session:
                  description: Set to `true` to indicate that the customer is not in your
                    checkout flow during this payment attempt, and therefore is
                    unable to authenticate. This parameter is intended for
                    scenarios where you collect card details and [charge them
                    later](https://stripe.com/docs/payments/cards/charging-saved-cards).
                payment_method:
                  description: ID of the payment method (a PaymentMethod, Card,
                    BankAccount, or saved Source object) to attach to this
                    PaymentIntent.
                  type: string
                payment_method_options:
                  description: Payment-method-specific configuration for this PaymentIntent.
                  properties:
                    card:
                      properties:
                        request_three_d_secure:
                          enum:
                            - any
                            - automatic
                          type: string
                      title: payment_intent_param
                      type: object
                  title: payment_method_options_param
                  type: object
                payment_method_types:
                  description: The list of payment method types (e.g. card) that this
                    PaymentIntent is allowed to use.
                  items:
                    type: string
                  type: array
                receipt_email:
                  description: Email address that the receipt for the resulting payment
                    will be sent to.
                  type: string
                return_url:
                  description: >-
                    The URL to redirect your customer back to after they
                    authenticate or cancel their payment on the payment method's
                    app or site.

                    If you'd prefer to redirect to a mobile application, you can alternatively supply an application URI scheme.

                    This parameter is only used for cards and other redirect-based payment methods.
                  type: string
                save_payment_method:
                  description: >-
                    If the PaymentIntent has a `payment_method` and a `customer`
                    or if you're attaching a payment method to the PaymentIntent
                    in this request, you can pass `save_payment_method=true` to
                    save the payment method to the customer. Defaults to
                    `false`.


                    If the payment method is already saved to a customer, this does nothing. If this type of payment method cannot be saved to a customer, the request will error.
                  type: boolean
                setup_future_usage:
                  description: >-
                    Indicates that you intend to make future payments with this
                    PaymentIntent's payment method.


                    If present, the payment method used with this PaymentIntent can be [attached](https://stripe.com/docs/api/payment_methods/attach) to a Customer, even after the transaction completes.


                    Use `on_session` if you intend to only reuse the payment method when your customer is present in your checkout flow. Use `off_session` if your customer may or may not be in your checkout flow.


                    Stripe uses `setup_future_usage` to dynamically optimize your payment flow and comply with regional legislation and network rules. For example, if your customer is impacted by [SCA](https://stripe.com/docs/strong-customer-authentication), using `off_session` will ensure that they are authenticated while processing this PaymentIntent. You will then be able to collect [off-session payments](https://stripe.com/docs/payments/cards/charging-saved-cards#off-session-payments-with-saved-cards) for this customer.


                    If `setup_future_usage` is already set and you are performing a request using a publishable key, you may only update the value from `on_session` to `off_session`.
                  enum:
                    - ""
                    - off_session
                    - on_session
                  type: string
                shipping:
                  description: Shipping information for this PaymentIntent.
              type: object
        description: Body parameters for the request.
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/payment_intent"
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
  /v1/payment_methods:
    get:
      description: <p>Returns a list of PaymentMethods for a given Customer</p>
      operationId: GetPaymentMethods
      parameters:
        - description: Specifies which fields in the response should be expanded.
          in: query
          name: expand
          required: false
          schema:
            type: array
            items: {}
        - description: The ID of the customer whose PaymentMethods will be retrieved.
          in: query
          name: customer
          required: true
          schema:
            type: string
        - description: A cursor for use in pagination. `ending_before` is an object ID that
            defines your place in the list. For instance, if you make a list
            request and receive 100 objects, starting with `obj_bar`, your
            subsequent call can include `ending_before=obj_bar` in order to
            fetch the previous page of the list.
          in: query
          name: ending_before
          required: false
          schema:
            type: string
        - description: A limit on the number of objects to be returned. Limit can range
            between 1 and 100, and the default is 10.
          in: query
          name: limit
          required: false
          schema:
            type: integer
        - description: A cursor for use in pagination. `starting_after` is an object ID
            that defines your place in the list. For instance, if you make a
            list request and receive 100 objects, ending with `obj_foo`, your
            subsequent call can include `starting_after=obj_foo` in order to
            fetch the next page of the list.
          in: query
          name: starting_after
          required: false
          schema:
            type: string
        - description: A required filter on the list, based on the object `type` field.
          in: query
          name: type
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                properties:
                  data:
                    items:
                      $ref: "#/components/schemas/payment_method"
                    type: array
                  has_more:
                    description: True if this list has another page of items after this one
                      that can be fetched.
                    type: boolean
                  object:
                    description: String representing the object's type. Objects of the same
                      type share the same value. Always has the value `list`.
                    enum:
                      - list
                    type: string
                  url:
                    description: The URL where this list can be accessed.
                    type: string
                required:
                  - data
                  - has_more
                  - object
                  - url
                title: PaymentFlowsPaymentMethodList
                type: object
                x-expandableFields:
                  - data
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
    post:
      description: <p>Creates a PaymentMethod object. Read the <a
        href="/docs/stripe-js/reference#stripe-create-payment-method">Stripe.js
        reference</a> to learn how to create PaymentMethods via Stripe.js.</p>
      operationId: PostPaymentMethods
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                billing_details:
                  description: Billing information associated with the PaymentMethod that
                    may be used or required by particular types of payment
                    methods.
                  properties:
                    address:
                      properties:
                        city:
                          type: string
                        country:
                          type: string
                        line1:
                          type: string
                        line2:
                          type: string
                        postal_code:
                          type: string
                        state:
                          type: string
                      title: billing_details_address
                      type: object
                    email:
                      type: string
                    name:
                      type: string
                    phone:
                      type: string
                  title: billing_details_inner_params
                  type: object
                card:
                  description: "If this is a `card` PaymentMethod, this hash contains the
                    user's card details. For backwards compatibility, you can
                    alternatively provide a Stripe token (e.g., for Apple Pay,
                    Amex Express Checkout, or legacy Checkout) into the card
                    hash with format `card: {token: \"tok_visa\"}`. When
                    creating with a card number, you must meet the requirements
                    for [PCI
                    compliance](https://stripe.com/docs/security#validating-pci\
                    -compliance). We strongly recommend using Stripe.js instead
                    of interacting with this API directly."
                  type: object
                customer:
                  description: The `Customer` to whom the original PaymentMethod is
                    attached.
                  type: string
                expand:
                  description: Specifies which fields in the response should be expanded.
                  items:
                    type: string
                  type: array
                metadata:
                  description: Set of key-value pairs that you can attach to an object.
                    This can be useful for storing additional information about
                    the object in a structured format.
                  type: object
                payment_method:
                  description: The PaymentMethod to share.
                  type: string
                type:
                  description: The type of the PaymentMethod. An additional hash is
                    included on the PaymentMethod with a name matching this
                    value. It contains additional information specific to the
                    PaymentMethod type. Required unless `payment_method` is
                    specified (see the [Shared
                    PaymentMethods](https://stripe.com/docs/payments/payment-methods/connect#shared-payment-methods)
                    guide)
                  enum:
                    - card
                  type: string
              type: object
        description: Body parameters for the request.
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/payment_method"
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
  "/v1/payment_methods/{payment_method}":
    get:
      description: <p>Retrieves a PaymentMethod object.</p>
      operationId: GetPaymentMethodsPaymentMethod
      parameters:
        - description: Specifies which fields in the response should be expanded.
          in: query
          name: expand
          required: false
          schema:
            type: array
            items: {}
        - description: The ID of the PaymentMethod.
          in: path
          name: payment_method
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/payment_method"
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
    post:
      description: <p>Updates a PaymentMethod object. A PaymentMethod must be attached a
        customer to be updated.</p>
      operationId: PostPaymentMethodsPaymentMethod
      parameters:
        - in: path
          name: payment_method
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                billing_details:
                  description: Billing information associated with the PaymentMethod that
                    may be used or required by particular types of payment
                    methods.
                  properties:
                    address:
                      properties:
                        city:
                          type: string
                        country:
                          type: string
                        line1:
                          type: string
                        line2:
                          type: string
                        postal_code:
                          type: string
                        state:
                          type: string
                      title: billing_details_address
                      type: object
                    email:
                      type: string
                    name:
                      type: string
                    phone:
                      type: string
                  title: billing_details_inner_params
                  type: object
                card:
                  properties:
                    exp_month:
                      type: integer
                    exp_year:
                      type: integer
                  title: update_api_param
                  type: object
                expand:
                  description: Specifies which fields in the response should be expanded.
                  items:
                    type: string
                  type: array
                metadata:
                  description: Set of key-value pairs that you can attach to an object.
                    This can be useful for storing additional information about
                    the object in a structured format.
                  type: object
              type: object
        description: Body parameters for the request.
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/payment_method"
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
  "/v1/payment_methods/{payment_method}/attach":
    post:
      description: >-
        <p>Attaches a PaymentMethod object to a Customer.</p>


        <p>To use this PaymentMethod as the default for invoice or subscription payments,

        set <a href="/docs/api/customers/update#update_customer-invoice_settings-default_payment_method"><code>invoice_settings.default_payment_method</code></a>,

        on the Customer to the PaymentMethod’s ID.</p>
      operationId: PostPaymentMethodsPaymentMethodAttach
      parameters:
        - in: path
          name: payment_method
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                customer:
                  description: The ID of the customer to which to attach the PaymentMethod.
                  type: string
                expand:
                  description: Specifies which fields in the response should be expanded.
                  items:
                    type: string
                  type: array
              required:
                - customer
              type: object
        description: Body parameters for the request.
        required: true
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/payment_method"
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
  "/v1/payment_methods/{payment_method}/detach":
    post:
      description: <p>Detaches a PaymentMethod object from a Customer.</p>
      operationId: PostPaymentMethodsPaymentMethodDetach
      parameters:
        - in: path
          name: payment_method
          required: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/PutAccountsAccountLogoutPayload"
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/payment_method"
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
  /v1/payouts:
    get:
      description: <p>Returns a list of existing payouts sent to third-party bank accounts
        or that Stripe has sent you. The payouts are returned in sorted order,
        with the most recently created payouts appearing first.</p>
      operationId: GetPayouts
      parameters:
        - description: Specifies which fields in the response should be expanded.
          in: query
          name: expand
          required: false
          schema:
            type: array
            items: {}
        - in: query
          name: arrival_date
          required: false
          schema:
            type: integer
        - in: query
          name: created
          required: false
          schema:
            type: integer
        - description: The ID of an external account - only return payouts sent to this
            external account.
          in: query
          name: destination
          required: false
          schema:
            type: string
        - description: A cursor for use in pagination. `ending_before` is an object ID that
            defines your place in the list. For instance, if you make a list
            request and receive 100 objects, starting with `obj_bar`, your
            subsequent call can include `ending_before=obj_bar` in order to
            fetch the previous page of the list.
          in: query
          name: ending_before
          required: false
          schema:
            type: string
        - description: A limit on the number of objects to be returned. Limit can range
            between 1 and 100, and the default is 10.
          in: query
          name: limit
          required: false
          schema:
            type: integer
        - description: A cursor for use in pagination. `starting_after` is an object ID
            that defines your place in the list. For instance, if you make a
            list request and receive 100 objects, ending with `obj_foo`, your
            subsequent call can include `starting_after=obj_foo` in order to
            fetch the next page of the list.
          in: query
          name: starting_after
          required: false
          schema:
            type: string
        - description: "Only return payouts that have the given status: `pending`, `paid`,
            `failed`, or `canceled`."
          in: query
          name: status
          required: false
          schema:
            type: string
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                properties:
                  data:
                    items:
                      $ref: "#/components/schemas/payout"
                    type: array
                  has_more:
                    description: True if this list has another page of items after this one
                      that can be fetched.
                    type: boolean
                  object:
                    description: String representing the object's type. Objects of the same
                      type share the same value. Always has the value `list`.
                    enum:
                      - list
                    type: string
                  url:
                    description: The URL where this list can be accessed.
                    type: string
                required:
                  - data
                  - has_more
                  - object
                  - url
                title: PayoutList
                type: object
                x-expandableFields:
                  - data
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
    post:
      description: >-
        <p>To send funds to your own bank account, you create a new payout
        object. Your <a href="#balance">Stripe balance</a> must be able to cover
        the payout amount, or you’ll receive an “Insufficient Funds” error.</p>


        <p>If your API key is in test mode, money won’t actually be sent, though everything else will occur as if in live mode.</p>


        <p>If you are creating a manual payout on a Stripe account that uses multiple payment source types, you’ll need to specify the source type balance that the payout should draw from. The <a href="#balance_object">balance object</a> details available and pending amounts by source type.</p>
      operationId: PostPayouts
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                amount:
                  description: A positive integer in cents representing how much to payout.
                  type: integer
                currency:
                  description: Three-letter [ISO currency
                    code](https://www.iso.org/iso-4217-currency-codes.html), in
                    lowercase. Must be a [supported
                    currency](https://stripe.com/docs/currencies).
                  type: string
                description:
                  description: An arbitrary string attached to the object. Often useful for
                    displaying to users.
                  type: string
                destination:
                  description: The ID of a bank account or a card to send the payout to. If
                    no destination is supplied, the default external account for
                    the specified currency will be used.
                  type: string
                expand:
                  description: Specifies which fields in the response should be expanded.
                  items:
                    type: string
                  type: array
                metadata:
                  description: A set of key-value pairs that you can attach to a payout
                    object. It can be useful for storing additional information
                    about the payout in a structured format.
                  type: object
                method:
                  description: The method used to send this payout, which can be `standard`
                    or `instant`. `instant` is only supported for payouts to
                    debit cards. (See [Instant payouts for marketplaces for more
                    information](https://stripe.com/blog/instant-payouts-for-marketplaces).)
                  enum:
                    - instant
                    - standard
                  type: string
                source_type:
                  description: The source balance to draw this payout from. Balances for
                    different payment sources are kept separately. You can find
                    the amounts with the balances API. One of `bank_account` or
                    `card`.
                  enum:
                    - bank_account
                    - card
                  type: string
                statement_descriptor:
                  description: "A string to be displayed on the recipient's bank or card
                    statement. This may be at most 22 characters. Attempting to
                    use a `statement_descriptor` longer than 22 characters will
                    return an error. Note: Most banks will truncate this
                    information and/or display it inconsistently. Some may not
                    display it at all."
                  type: string
              required:
                - amount
                - currency
              type: object
        description: Body parameters for the request.
        required: true
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/payout"
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
  "/v1/payouts/{payout}":
    get:
      description: <p>Retrieves the details of an existing payout. Supply the unique payout
        ID from either a payout creation request or the payout list, and Stripe
        will return the corresponding payout information.</p>
      operationId: GetPayoutsPayout
      parameters:
        - description: Specifies which fields in the response should be expanded.
          in: query
          name: expand
          required: false
          schema:
            type: array
            items: {}
        - description: The identifier of the payout to be retrieved.
          in: path
          name: payout
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/payout"
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
    post:
      description: <p>Updates the specified payout by setting the values of the parameters
        passed. Any parameters not provided will be left unchanged. This request
        accepts only the metadata as arguments.</p>
      operationId: PostPayoutsPayout
      parameters:
        - description: The identifier of the payout to be updated.
          in: path
          name: payout
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                expand:
                  description: Specifies which fields in the response should be expanded.
                  items:
                    type: string
                  type: array
                metadata:
                  description: A set of key-value pairs that you can attach to a payout
                    object. It can be useful for storing additional information
                    about the payout in a structured format.
                  type: object
              type: object
        description: Body parameters for the request.
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/payout"
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
  "/v1/payouts/{payout}/cancel":
    post:
      description: <p>A previously created payout can be canceled if it has not yet been
        paid out. Funds will be refunded to your available balance. You may not
        cancel automatic Stripe payouts.</p>
      operationId: PostPayoutsPayoutCancel
      parameters:
        - description: The identifier of the payout to be canceled.
          in: path
          name: payout
          required: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/PutAccountsAccountLogoutPayload"
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/payout"
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
  /v1/plans:
    get:
      description: <p>Returns a list of your plans.</p>
      operationId: GetPlans
      parameters:
        - description: Specifies which fields in the response should be expanded.
          in: query
          name: expand
          required: false
          schema:
            type: array
            items: {}
        - description: Only return plans that are active or inactive (e.g., pass `false` to
            list all inactive products).
          in: query
          name: active
          required: false
          schema:
            type: boolean
        - description: A filter on the list, based on the object `created` field. The value
            can be a string with an integer Unix timestamp, or it can be a
            dictionary with a number of different query options.
          in: query
          name: created
          required: false
          schema:
            type: integer
        - description: A cursor for use in pagination. `ending_before` is an object ID that
            defines your place in the list. For instance, if you make a list
            request and receive 100 objects, starting with `obj_bar`, your
            subsequent call can include `ending_before=obj_bar` in order to
            fetch the previous page of the list.
          in: query
          name: ending_before
          required: false
          schema:
            type: string
        - description: A limit on the number of objects to be returned. Limit can range
            between 1 and 100, and the default is 10.
          in: query
          name: limit
          required: false
          schema:
            type: integer
        - description: Only return plans for the given product.
          in: query
          name: product
          required: false
          schema:
            type: string
        - description: A cursor for use in pagination. `starting_after` is an object ID
            that defines your place in the list. For instance, if you make a
            list request and receive 100 objects, ending with `obj_foo`, your
            subsequent call can include `starting_after=obj_foo` in order to
            fetch the next page of the list.
          in: query
          name: starting_after
          required: false
          schema:
            type: string
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                properties:
                  data:
                    items:
                      $ref: "#/components/schemas/plan"
                    type: array
                  has_more:
                    description: True if this list has another page of items after this one
                      that can be fetched.
                    type: boolean
                  object:
                    description: String representing the object's type. Objects of the same
                      type share the same value. Always has the value `list`.
                    enum:
                      - list
                    type: string
                  url:
                    description: The URL where this list can be accessed.
                    type: string
                required:
                  - data
                  - has_more
                  - object
                  - url
                type: object
                x-expandableFields:
                  - data
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
    post:
      description: <p>You can create plans using the API, or in the Stripe <a
        href="https://dashboard.stripe.com/subscriptions/products">Dashboard</a>.</p>
      operationId: PostPlans
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                active:
                  description: Whether the plan is currently available for new
                    subscriptions. Defaults to `true`.
                  type: boolean
                aggregate_usage:
                  description: Specifies a usage aggregation strategy for plans of
                    `usage_type=metered`. Allowed values are `sum` for summing
                    up all usage during a period, `last_during_period` for
                    picking the last usage record reported within a period,
                    `last_ever` for picking the last usage record ever (across
                    period bounds) or `max` which picks the usage record with
                    the maximum reported usage during a period. Defaults to
                    `sum`.
                  enum:
                    - last_during_period
                    - last_ever
                    - max
                    - sum
                  type: string
                amount:
                  description: A positive integer in %s (or 0 for a free plan) representing
                    how much to charge on a recurring basis.
                  type: integer
                amount_decimal:
                  description: Same as `amount`, but accepts a decimal value with at most
                    12 decimal places. Only one of `amount` and `amount_decimal`
                    can be set.
                  type: string
                billing_scheme:
                  description: Describes how to compute the price per period. Either
                    `per_unit` or `tiered`. `per_unit` indicates that the fixed
                    amount (specified in `amount`) will be charged per unit in
                    `quantity` (for plans with `usage_type=licensed`), or per
                    unit of total usage (for plans with `usage_type=metered`).
                    `tiered` indicates that the unit pricing will be computed
                    using a tiering strategy as defined using the `tiers` and
                    `tiers_mode` attributes.
                  enum:
                    - per_unit
                    - tiered
                  type: string
                currency:
                  description: Three-letter [ISO currency
                    code](https://www.iso.org/iso-4217-currency-codes.html), in
                    lowercase. Must be a [supported
                    currency](https://stripe.com/docs/currencies).
                  type: string
                expand:
                  description: Specifies which fields in the response should be expanded.
                  items:
                    type: string
                  type: array
                id:
                  description: An identifier randomly generated by Stripe. Used to identify
                    this plan when subscribing a customer. You can optionally
                    override this ID, but the ID must be unique across all plans
                    in your Stripe account. You can, however, use the same plan
                    ID in both live and test modes.
                  type: string
                interval:
                  description: Specifies billing frequency. Either `day`, `week`, `month`
                    or `year`.
                  enum:
                    - day
                    - month
                    - week
                    - year
                  type: string
                interval_count:
                  description: The number of intervals between subscription billings. For
                    example, `interval=month` and `interval_count=3` bills every
                    3 months. Maximum of one year interval allowed (1 year, 12
                    months, or 52 weeks).
                  type: integer
                metadata:
                  description: A set of key-value pairs that you can attach to a plan
                    object. It can be useful for storing additional information
                    about the plan in a structured format.
                  type: object
                nickname:
                  description: A brief description of the plan, hidden from customers.
                  type: string
                product:
                  description: The product whose pricing the created plan will represent.
                    This can either be the ID of an existing product, or a
                    dictionary containing fields used to create a [service
                    product](https://stripe.com/docs/api#product_object-type).
                  properties:
                    active:
                      type: boolean
                    id:
                      type: string
                    metadata:
                      type: object
                    name:
                      type: string
                    statement_descriptor:
                      type: string
                    unit_label:
                      type: string
                  required:
                    - name
                  title: inline_product_params
                  type: object
                tiers:
                  description: Each element represents a pricing tier. This parameter
                    requires `billing_scheme` to be set to `tiered`. See also
                    the documentation for `billing_scheme`.
                  items:
                    properties:
                      flat_amount:
                        type: integer
                      flat_amount_decimal:
                        type: string
                      unit_amount:
                        type: integer
                      unit_amount_decimal:
                        type: string
                      up_to: {}
                    required:
                      - up_to
                    title: plan_tier_param
                    type: object
                  type: array
                tiers_mode:
                  description: Defines if the tiering price should be `graduated` or
                    `volume` based. In `volume`-based tiering, the maximum
                    quantity within a period determines the per unit price, in
                    `graduated` tiering pricing can successively change as the
                    quantity grows.
                  enum:
                    - graduated
                    - volume
                  type: string
                transform_usage:
                  description: Apply a transformation to the reported usage or set quantity
                    before computing the billed price. Cannot be combined with
                    `tiers`.
                  properties:
                    divide_by:
                      type: integer
                    round:
                      enum:
                        - down
                        - up
                      type: string
                  required:
                    - divide_by
                    - round
                  title: transform_usage_param
                  type: object
                trial_period_days:
                  description: Default number of trial days when subscribing a customer to
                    this plan using
                    [`trial_from_plan=true`](https://stripe.com/docs/api#create_subscription-trial_from_plan).
                  type: integer
                usage_type:
                  description: Configures how the quantity per period should be determined,
                    can be either `metered` or `licensed`. `licensed` will
                    automatically bill the `quantity` set for a plan when adding
                    it to a subscription, `metered` will aggregate the total
                    usage based on usage records. Defaults to `licensed`.
                  enum:
                    - licensed
                    - metered
                  type: string
              required:
                - currency
                - interval
              type: object
        description: Body parameters for the request.
        required: true
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/plan"
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
  "/v1/plans/{plan}":
    delete:
      description: <p>Deleting plans means new subscribers can’t be added. Existing
        subscribers aren’t affected.</p>
      operationId: DeletePlansPlan
      parameters:
        - description: The identifier of the plan to be deleted.
          in: path
          name: plan
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/deleted_plan"
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
    get:
      description: <p>Retrieves the plan with the given ID.</p>
      operationId: GetPlansPlan
      parameters:
        - description: Specifies which fields in the response should be expanded.
          in: query
          name: expand
          required: false
          schema:
            type: array
            items: {}
        - description: The ID of the desired plan.
          in: path
          name: plan
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/plan"
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
    post:
      description: <p>Updates the specified plan by setting the values of the parameters
        passed. Any parameters not provided are left unchanged. By design, you
        cannot change a plan’s ID, amount, currency, or billing cycle.</p>
      operationId: PostPlansPlan
      parameters:
        - description: The identifier of the plan to be updated.
          in: path
          name: plan
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                active:
                  description: Whether the plan is currently available for new
                    subscriptions.
                  type: boolean
                expand:
                  description: Specifies which fields in the response should be expanded.
                  items:
                    type: string
                  type: array
                metadata:
                  description: A set of key-value pairs that you can attach to a plan
                    object. It can be useful for storing additional information
                    about the plan in a structured format.
                  type: object
                nickname:
                  description: A brief description of the plan, hidden from customers.
                  type: string
                product:
                  description: The product the plan belongs to. Note that after updating,
                    statement descriptors and line items of the plan in active
                    subscriptions will be affected.
                  type: string
                trial_period_days:
                  description: Default number of trial days when subscribing a customer to
                    this plan using
                    [`trial_from_plan=true`](https://stripe.com/docs/api#create_subscription-trial_from_plan).
                  type: integer
              type: object
        description: Body parameters for the request.
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/plan"
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
  /v1/products:
    get:
      description: <p>Returns a list of your products. The products are returned sorted by
        creation date, with the most recently created products appearing
        first.</p>
      operationId: GetProducts
      parameters:
        - description: Specifies which fields in the response should be expanded.
          in: query
          name: expand
          required: false
          schema:
            type: array
            items: {}
        - description: Only return products that are active or inactive (e.g., pass `false`
            to list all inactive products).
          in: query
          name: active
          required: false
          schema:
            type: boolean
        - description: Only return products that were created during the given date
            interval.
          in: query
          name: created
          required: false
          schema:
            type: integer
        - description: A cursor for use in pagination. `ending_before` is an object ID that
            defines your place in the list. For instance, if you make a list
            request and receive 100 objects, starting with `obj_bar`, your
            subsequent call can include `ending_before=obj_bar` in order to
            fetch the previous page of the list.
          in: query
          name: ending_before
          required: false
          schema:
            type: string
        - description: Only return products with the given IDs.
          in: query
          name: ids
          required: false
          schema:
            type: array
            items: {}
        - description: A limit on the number of objects to be returned. Limit can range
            between 1 and 100, and the default is 10.
          in: query
          name: limit
          required: false
          schema:
            type: integer
        - description: Only return products that can be shipped (i.e., physical, not
            digital products).
          in: query
          name: shippable
          required: false
          schema:
            type: boolean
        - description: A cursor for use in pagination. `starting_after` is an object ID
            that defines your place in the list. For instance, if you make a
            list request and receive 100 objects, ending with `obj_foo`, your
            subsequent call can include `starting_after=obj_foo` in order to
            fetch the next page of the list.
          in: query
          name: starting_after
          required: false
          schema:
            type: string
        - description: Only return products of this type.
          in: query
          name: type
          required: false
          schema:
            type: string
        - description: Only return products with the given url.
          in: query
          name: url
          required: false
          schema:
            type: string
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                properties:
                  data:
                    items:
                      $ref: "#/components/schemas/product"
                    type: array
                  has_more:
                    description: True if this list has another page of items after this one
                      that can be fetched.
                    type: boolean
                  object:
                    description: String representing the object's type. Objects of the same
                      type share the same value. Always has the value `list`.
                    enum:
                      - list
                    type: string
                  url:
                    description: The URL where this list can be accessed.
                    type: string
                required:
                  - data
                  - has_more
                  - object
                  - url
                type: object
                x-expandableFields:
                  - data
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
    post:
      description: <p>Creates a new product object. To create a product for use with
        subscriptions, see <a href="#create_service_product">Subscriptions
        Products</a>.</p>
      operationId: PostProducts
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                active:
                  description: Whether the product is currently available for purchase.
                    Defaults to `true`.
                  type: boolean
                attributes:
                  description: A list of up to 5 alphanumeric attributes. Applicable to
                    both `service` and `good` types.
                  items:
                    type: string
                  type: array
                caption:
                  description: A short one-line description of the product, meant to be
                    displayable to the customer. May only be set if type=`good`.
                  type: string
                deactivate_on:
                  description: An array of Connect application names or identifiers that
                    should not be able to order the SKUs for this product. May
                    only be set if type=`good`.
                  items:
                    type: string
                  type: array
                description:
                  description: The product's description, meant to be displayable to the
                    customer. May only be set if type=`good`.
                  type: string
                expand:
                  description: Specifies which fields in the response should be expanded.
                  items:
                    type: string
                  type: array
                id:
                  description: An identifier will be randomly generated by Stripe. You can
                    optionally override this ID, but the ID must be unique
                    across all products in your Stripe account. Applicable to
                    both `service` and `good` types.
                  type: string
                images:
                  description: A list of up to 8 URLs of images for this product, meant to
                    be displayable to the customer. May only be set if
                    type=`good`.
                  items:
                    type: string
                  type: array
                metadata:
                  description: A set of key-value pairs that you can attach to a product
                    object. It can be useful for storing additional information
                    about the product in a structured format. Applicable to both
                    `service` and `good` types.
                  type: object
                name:
                  description: The product's name, meant to be displayable to the customer.
                    Applicable to both `service` and `good` types.
                  type: string
                package_dimensions:
                  description: The dimensions of this product for shipping purposes. A SKU
                    associated with this product can override this value by
                    having its own `package_dimensions`. May only be set if
                    type=`good`.
                  properties:
                    height:
                      type: number
                    length:
                      type: number
                    weight:
                      type: number
                    width:
                      type: number
                  required:
                    - height
                    - length
                    - weight
                    - width
                  title: package_dimensions_specs
                  type: object
                shippable:
                  description: Whether this product is shipped (i.e., physical goods).
                    Defaults to `true`. May only be set if type=`good`.
                  type: boolean
                statement_descriptor:
                  description: An arbitrary string to be displayed on your customer's
                    credit card statement. This may be up to 22 characters. The
                    statement description may not include <>"' characters, and
                    will appear on your customer's statement in capital letters.
                    Non-ASCII characters are automatically stripped. While most
                    banks display this information consistently, some may
                    display it incorrectly or not at all. It must contain at
                    least one letter. May only be set if type=`service`.
                  type: string
                type:
                  description: The type of the product. The product is either of type
                    `service`, which is eligible for use with Subscriptions and
                    Plans or `good`, which is eligible for use with Orders and
                    SKUs.
                  enum:
                    - good
                    - service
                  type: string
                unit_label:
                  description: A label that represents units of this product, such as
                    seat(s), in Stripe and on customers’ receipts and invoices.
                    Only available on products of type=`service`.
                  type: string
                url:
                  description: A URL of a publicly-accessible webpage for this product. May
                    only be set if type=`good`.
                  type: string
              required:
                - name
                - type
              type: object
        description: Body parameters for the request.
        required: true
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/product"
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
  "/v1/products/{id}":
    delete:
      description: <p>Delete a product. Deleting a product with type=<code>good</code> is
        only possible if it has no SKUs associated with it. Deleting a product
        with type=<code>service</code> is only possible if it has no plans
        associated with it.</p>
      operationId: DeleteProductsId
      parameters:
        - description: The ID of the product to delete.
          in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/deleted_product"
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
    get:
      description: <p>Retrieves the details of an existing product. Supply the unique
        product ID from either a product creation request or the product list,
        and Stripe will return the corresponding product information.</p>
      operationId: GetProductsId
      parameters:
        - description: Specifies which fields in the response should be expanded.
          in: query
          name: expand
          required: false
          schema:
            type: array
            items: {}
        - description: The identifier of the product to be retrieved.
          in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/product"
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
    post:
      description: >-
        <p>Updates the specific product by setting the values of the parameters
        passed. Any parameters not provided will be left unchanged.</p>


        <p>Note that a product’s <code>attributes</code> are not editable. Instead, you would need to deactivate the existing product and create a new one with the new attribute values.</p>
      operationId: PostProductsId
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                active:
                  description: Whether the product is available for purchase.
                  type: boolean
                attributes:
                  description: A list of up to 5 alphanumeric attributes that each SKU can
                    provide values for (e.g., `["color", "size"]`). If a value
                    for `attributes` is specified, the list specified will
                    replace the existing attributes list on this product. Any
                    attributes not present after the update will be deleted from
                    the SKUs for this product.
                  items:
                    type: string
                caption:
                  description: A short one-line description of the product, meant to be
                    displayable to the customer.
                  type: string
                deactivate_on:
                  description: An array of Connect application names or identifiers that
                    should not be able to order the SKUs for this product.
                  items:
                    type: string
                  type: array
                description:
                  description: The product's description, meant to be displayable to the
                    customer.
                  type: string
                expand:
                  description: Specifies which fields in the response should be expanded.
                  items:
                    type: string
                  type: array
                images:
                  description: A list of up to 8 URLs of images for this product, meant to
                    be displayable to the customer.
                  items:
                    type: string
                metadata:
                  description: A set of key-value pairs that you can attach to a product
                    object. It can be useful for storing additional information
                    about the product in a structured format.
                  type: object
                name:
                  description: The product's name, meant to be displayable to the customer.
                    Applicable to both `service` and `good` types.
                  type: string
                package_dimensions:
                  description: The dimensions of this product for shipping purposes. A SKU
                    associated with this product can override this value by
                    having its own `package_dimensions`.
                shippable:
                  description: Whether this product is shipped (i.e., physical goods).
                    Defaults to `true`.
                  type: boolean
                statement_descriptor:
                  description: An arbitrary string to be displayed on your customer's
                    credit card statement. This may be up to 22 characters. The
                    statement description may not include <>"' characters, and
                    will appear on your customer's statement in capital letters.
                    Non-ASCII characters are automatically stripped. While most
                    banks display this information consistently, some may
                    display it incorrectly or not at all. It must contain at
                    least one letter. May only be set if type=`service`.
                  type: string
                unit_label:
                  description: A label that represents units of this product, such as
                    seat(s), in Stripe and on customers’ receipts and invoices.
                    Only available on products of type=`service`.
                  type: string
                url:
                  description: A URL of a publicly-accessible webpage for this product.
                  type: string
              type: object
        description: Body parameters for the request.
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/product"
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
  /v1/radar/early_fraud_warnings:
    get:
      description: <p>Returns a list of early fraud warnings.</p>
      operationId: GetRadarEarlyFraudWarnings
      parameters:
        - description: Specifies which fields in the response should be expanded.
          in: query
          name: expand
          required: false
          schema:
            type: array
            items: {}
        - description: Only return early fraud warnings for the charge specified by this
            charge ID.
          in: query
          name: charge
          required: false
          schema:
            type: string
        - description: A cursor for use in pagination. `ending_before` is an object ID that
            defines your place in the list. For instance, if you make a list
            request and receive 100 objects, starting with `obj_bar`, your
            subsequent call can include `ending_before=obj_bar` in order to
            fetch the previous page of the list.
          in: query
          name: ending_before
          required: false
          schema:
            type: string
        - description: A limit on the number of objects to be returned. Limit can range
            between 1 and 100, and the default is 10.
          in: query
          name: limit
          required: false
          schema:
            type: integer
        - description: A cursor for use in pagination. `starting_after` is an object ID
            that defines your place in the list. For instance, if you make a
            list request and receive 100 objects, ending with `obj_foo`, your
            subsequent call can include `starting_after=obj_foo` in order to
            fetch the next page of the list.
          in: query
          name: starting_after
          required: false
          schema:
            type: string
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                properties:
                  data:
                    items:
                      $ref: "#/components/schemas/radar.early_fraud_warning"
                    type: array
                  has_more:
                    description: True if this list has another page of items after this one
                      that can be fetched.
                    type: boolean
                  object:
                    description: String representing the object's type. Objects of the same
                      type share the same value. Always has the value `list`.
                    enum:
                      - list
                    type: string
                  url:
                    description: The URL where this list can be accessed.
                    type: string
                required:
                  - data
                  - has_more
                  - object
                  - url
                title: RadarEarlyFraudWarningList
                type: object
                x-expandableFields:
                  - data
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
  "/v1/radar/early_fraud_warnings/{early_fraud_warning}":
    get:
      description: >-
        <p>Retrieves the details of an early fraud warning that has previously
        been created. </p>


        <p>Please refer to the <a href="#early_fraud_warning_object">early fraud warning</a> object reference for more details.</p>
      operationId: GetRadarEarlyFraudWarningsEarlyFraudWarning
      parameters:
        - description: Specifies which fields in the response should be expanded.
          in: query
          name: expand
          required: false
          schema:
            type: array
            items: {}
        - description: The identifier of the early fraud warning to be retrieved.
          in: path
          name: early_fraud_warning
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/radar.early_fraud_warning"
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
  /v1/radar/value_list_items:
    get:
      description: <p>Returns a list of <code>ValueListItem</code> objects. The objects are
        sorted in descending order by creation date, with the most recently
        created object appearing first.</p>
      operationId: GetRadarValueListItems
      parameters:
        - description: Specifies which fields in the response should be expanded.
          in: query
          name: expand
          required: false
          schema:
            type: array
            items: {}
        - in: query
          name: created
          required: false
          schema:
            type: integer
        - description: A cursor for use in pagination. `ending_before` is an object ID that
            defines your place in the list. For instance, if you make a list
            request and receive 100 objects, starting with `obj_bar`, your
            subsequent call can include `ending_before=obj_bar` in order to
            fetch the previous page of the list.
          in: query
          name: ending_before
          required: false
          schema:
            type: string
        - description: A limit on the number of objects to be returned. Limit can range
            between 1 and 100, and the default is 10.
          in: query
          name: limit
          required: false
          schema:
            type: integer
        - description: A cursor for use in pagination. `starting_after` is an object ID
            that defines your place in the list. For instance, if you make a
            list request and receive 100 objects, ending with `obj_foo`, your
            subsequent call can include `starting_after=obj_foo` in order to
            fetch the next page of the list.
          in: query
          name: starting_after
          required: false
          schema:
            type: string
        - description: Return items belonging to the parent list whose value matches the
            specified value (using an "is like" match).
          in: query
          name: value
          required: false
          schema:
            type: string
        - description: Identifier for the parent value list this item belongs to.
          in: query
          name: value_list
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                properties:
                  data:
                    items:
                      $ref: "#/components/schemas/radar.value_list_item"
                    type: array
                  has_more:
                    description: True if this list has another page of items after this one
                      that can be fetched.
                    type: boolean
                  object:
                    description: String representing the object's type. Objects of the same
                      type share the same value. Always has the value `list`.
                    enum:
                      - list
                    type: string
                  url:
                    description: The URL where this list can be accessed.
                    type: string
                required:
                  - data
                  - has_more
                  - object
                  - url
                type: object
                x-expandableFields:
                  - data
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
    post:
      description: <p>Creates a new <code>ValueListItem</code> object, which is added to
        the specified parent value list.</p>
      operationId: PostRadarValueListItems
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                expand:
                  description: Specifies which fields in the response should be expanded.
                  items:
                    type: string
                  type: array
                value:
                  description: The value of the item (whose type must match the type of the
                    parent value list).
                  type: string
                value_list:
                  description: The identifier of the value list which the created item will
                    be added to.
                  type: string
              required:
                - value
                - value_list
              type: object
        description: Body parameters for the request.
        required: true
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/radar.value_list_item"
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
  "/v1/radar/value_list_items/{item}":
    delete:
      description: <p>Deletes a <code>ValueListItem</code> object, removing it from its
        parent value list.</p>
      operationId: DeleteRadarValueListItemsItem
      parameters:
        - description: The identifier of the value list item to be deleted.
          in: path
          name: item
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/deleted_radar.value_list_item"
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
    get:
      description: <p>Retrieves a <code>ValueListItem</code> object.</p>
      operationId: GetRadarValueListItemsItem
      parameters:
        - description: Specifies which fields in the response should be expanded.
          in: query
          name: expand
          required: false
          schema:
            type: array
            items: {}
        - description: The identifier of the value list item to be retrieved.
          in: path
          name: item
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/radar.value_list_item"
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
  /v1/radar/value_lists:
    get:
      description: <p>Returns a list of <code>ValueList</code> objects. The objects are
        sorted in descending order by creation date, with the most recently
        created object appearing first.</p>
      operationId: GetRadarValueLists
      parameters:
        - description: Specifies which fields in the response should be expanded.
          in: query
          name: expand
          required: false
          schema:
            type: array
            items: {}
        - description: The alias used to reference the value list when writing rules.
          in: query
          name: alias
          required: false
          schema:
            type: string
        - description: A value contained within a value list - returns all value lists
            containing this value.
          in: query
          name: contains
          required: false
          schema:
            type: string
        - in: query
          name: created
          required: false
          schema:
            type: integer
        - description: A cursor for use in pagination. `ending_before` is an object ID that
            defines your place in the list. For instance, if you make a list
            request and receive 100 objects, starting with `obj_bar`, your
            subsequent call can include `ending_before=obj_bar` in order to
            fetch the previous page of the list.
          in: query
          name: ending_before
          required: false
          schema:
            type: string
        - description: A limit on the number of objects to be returned. Limit can range
            between 1 and 100, and the default is 10.
          in: query
          name: limit
          required: false
          schema:
            type: integer
        - description: A cursor for use in pagination. `starting_after` is an object ID
            that defines your place in the list. For instance, if you make a
            list request and receive 100 objects, ending with `obj_foo`, your
            subsequent call can include `starting_after=obj_foo` in order to
            fetch the next page of the list.
          in: query
          name: starting_after
          required: false
          schema:
            type: string
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                properties:
                  data:
                    items:
                      $ref: "#/components/schemas/radar.value_list"
                    type: array
                  has_more:
                    description: True if this list has another page of items after this one
                      that can be fetched.
                    type: boolean
                  object:
                    description: String representing the object's type. Objects of the same
                      type share the same value. Always has the value `list`.
                    enum:
                      - list
                    type: string
                  url:
                    description: The URL where this list can be accessed.
                    type: string
                required:
                  - data
                  - has_more
                  - object
                  - url
                type: object
                x-expandableFields:
                  - data
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
    post:
      description: <p>Creates a new <code>ValueList</code> object, which can then be
        referenced in rules.</p>
      operationId: PostRadarValueLists
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                alias:
                  description: The name of the value list for use in rules.
                  type: string
                expand:
                  description: Specifies which fields in the response should be expanded.
                  items:
                    type: string
                  type: array
                item_type:
                  description: Type of the items in the value list. One of
                    `card_fingerprint`, `card_bin`, `email`, `ip_address`,
                    `country`, `string`, or `case_sensitive_string`. Use
                    `string` if the item type is unknown or mixed.
                  enum:
                    - card_bin
                    - card_fingerprint
                    - case_sensitive_string
                    - country
                    - email
                    - ip_address
                    - string
                  type: string
                metadata:
                  description: Set of key-value pairs that you can attach to an object.
                    This can be useful for storing additional information about
                    the object in a structured format. Individual keys can be
                    unset by posting an empty value to them. All keys can be
                    unset by posting an empty value to `metadata`.
                  type: object
                name:
                  description: The human-readable name of the value list.
                  type: string
              required:
                - alias
                - name
              type: object
        description: Body parameters for the request.
        required: true
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/radar.value_list"
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
  "/v1/radar/value_lists/{value_list}":
    delete:
      description: <p>Deletes a <code>ValueList</code> object, also deleting any items
        contained within the value list. To be deleted, a value list must not be
        referenced in any rules.</p>
      operationId: DeleteRadarValueListsValueList
      parameters:
        - description: The identifier of the value list to be deleted.
          in: path
          name: value_list
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/deleted_radar.value_list"
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
    get:
      description: <p>Retrieves a <code>ValueList</code> object.</p>
      operationId: GetRadarValueListsValueList
      parameters:
        - description: Specifies which fields in the response should be expanded.
          in: query
          name: expand
          required: false
          schema:
            type: array
            items: {}
        - description: The identifier of the value list to be retrieved.
          in: path
          name: value_list
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/radar.value_list"
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
    post:
      description: <p>Updates a <code>ValueList</code> object by setting the values of the
        parameters passed. Any parameters not provided will be left unchanged.
        Note that <code>item_type</code> is immutable.</p>
      operationId: PostRadarValueListsValueList
      parameters:
        - description: The identifier of the value list to be updated.
          in: path
          name: value_list
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                alias:
                  description: The name of the value list for use in rules.
                  type: string
                expand:
                  description: Specifies which fields in the response should be expanded.
                  items:
                    type: string
                  type: array
                metadata:
                  description: Set of key-value pairs that you can attach to an object.
                    This can be useful for storing additional information about
                    the object in a structured format. Individual keys can be
                    unset by posting an empty value to them. All keys can be
                    unset by posting an empty value to `metadata`.
                  type: object
                name:
                  description: The human-readable name of the value list.
                  type: string
              type: object
        description: Body parameters for the request.
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/radar.value_list"
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
  /v1/recipients:
    get:
      deprecated: true
      description: <p>Returns a list of your recipients. The recipients are returned sorted
        by creation date, with the most recently created recipients appearing
        first.</p>
      operationId: GetRecipients
      parameters:
        - description: Specifies which fields in the response should be expanded.
          in: query
          name: expand
          required: false
          schema:
            type: array
            items: {}
        - in: query
          name: created
          required: false
          schema:
            type: integer
        - description: A cursor for use in pagination. `ending_before` is an object ID that
            defines your place in the list. For instance, if you make a list
            request and receive 100 objects, starting with `obj_bar`, your
            subsequent call can include `ending_before=obj_bar` in order to
            fetch the previous page of the list.
          in: query
          name: ending_before
          required: false
          schema:
            type: string
        - description: A limit on the number of objects to be returned. Limit can range
            between 1 and 100, and the default is 10.
          in: query
          name: limit
          required: false
          schema:
            type: integer
        - description: A cursor for use in pagination. `starting_after` is an object ID
            that defines your place in the list. For instance, if you make a
            list request and receive 100 objects, ending with `obj_foo`, your
            subsequent call can include `starting_after=obj_foo` in order to
            fetch the next page of the list.
          in: query
          name: starting_after
          required: false
          schema:
            type: string
        - in: query
          name: type
          required: false
          schema:
            type: string
        - description: Only return recipients that are verified or unverified.
          in: query
          name: verified
          required: false
          schema:
            type: boolean
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                properties:
                  data:
                    items:
                      $ref: "#/components/schemas/recipient"
                    type: array
                  has_more:
                    description: True if this list has another page of items after this one
                      that can be fetched.
                    type: boolean
                  object:
                    description: String representing the object's type. Objects of the same
                      type share the same value. Always has the value `list`.
                    enum:
                      - list
                    type: string
                  url:
                    description: The URL where this list can be accessed.
                    type: string
                required:
                  - data
                  - has_more
                  - object
                  - url
                type: object
                x-expandableFields:
                  - data
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
    post:
      deprecated: true
      description: >-
        <p>Creates a new <code>Recipient</code> object and verifies the
        recipient’s identity.

        Also verifies the recipient’s bank account information or debit card, if either is provided.</p>
      operationId: PostRecipients
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                bank_account:
                  description: A bank account to attach to the recipient. You can provide
                    either a token, like the ones returned by
                    [Stripe.js](https://stripe.com/docs/stripe-js), or a
                    dictionary containing a user's bank account details, with
                    the options described below.
                  type: string
                card:
                  description: A U.S. Visa or MasterCard debit card (_not_ prepaid) to
                    attach to the recipient. If the debit card is not valid,
                    recipient creation will fail. You can provide either a
                    token, like the ones returned by
                    [Stripe.js](https://stripe.com/docs/stripe-js), or a
                    dictionary containing a user's debit card details, with the
                    options described below. Although not all information is
                    required, the extra info helps prevent fraud.
                  type: string
                description:
                  description: An arbitrary string which you can attach to a `Recipient`
                    object. It is displayed alongside the recipient in the web
                    interface.
                  type: string
                email:
                  description: The recipient's email address. It is displayed alongside the
                    recipient in the web interface, and can be useful for
                    searching and tracking.
                  type: string
                expand:
                  description: Specifies which fields in the response should be expanded.
                  items:
                    type: string
                  type: array
                metadata:
                  description: Set of key-value pairs that you can attach to an object.
                    This can be useful for storing additional information about
                    the object in a structured format. Individual keys can be
                    unset by posting an empty value to them. All keys can be
                    unset by posting an empty value to `metadata`.
                  type: object
                name:
                  description: The recipient's full, legal name. For type `individual`,
                    should be in the format `First Last`, `First Middle Last`,
                    or `First M Last` (no prefixes or suffixes). For
                    `corporation`, the full, incorporated name.
                  type: string
                tax_id:
                  description: The recipient's tax ID, as a string. For type `individual`,
                    the full SSN; for type `corporation`, the full EIN.
                  type: string
                type:
                  description: "Type of the recipient: either `individual` or
                    `corporation`."
                  type: string
              required:
                - name
                - type
              type: object
        description: Body parameters for the request.
        required: true
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/recipient"
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
  "/v1/recipients/{id}":
    delete:
      deprecated: true
      description: <p>Permanently deletes a recipient. It cannot be undone.</p>
      operationId: DeleteRecipientsId
      parameters:
        - description: The identifier of the recipient to be deleted.
          in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/deleted_recipient"
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
    get:
      deprecated: true
      description: <p>Retrieves the details of an existing recipient. You need only supply
        the unique recipient identifier that was returned upon recipient
        creation.</p>
      operationId: GetRecipientsId
      parameters:
        - description: Specifies which fields in the response should be expanded.
          in: query
          name: expand
          required: false
          schema:
            type: array
            items: {}
        - description: The identifier of the recipient to be retrieved.
          in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/deleted_recipient"
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
    post:
      deprecated: true
      description: >-
        <p>Updates the specified recipient by setting the values of the
        parameters passed.

        Any parameters not provided will be left unchanged.</p>


        <p>If you update the name or tax ID, the identity verification will automatically be rerun.

        If you update the bank account, the bank account validation will automatically be rerun.</p>
      operationId: PostRecipientsId
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                bank_account:
                  description: A bank account to attach to the recipient. You can provide
                    either a token, like the ones returned by
                    [Stripe.js](https://stripe.com/docs/stripe-js), or a
                    dictionary containing a user's bank account details, with
                    the options described below.
                  type: string
                card:
                  description: A U.S. Visa or MasterCard debit card (not prepaid) to attach
                    to the recipient. You can provide either a token, like the
                    ones returned by
                    [Stripe.js](https://stripe.com/docs/stripe-js), or a
                    dictionary containing a user's debit card details, with the
                    options described below. Passing `card` will create a new
                    card, make it the new recipient default card, and delete the
                    old recipient default (if one exists). If you want to add
                    additional debit cards instead of replacing the existing
                    default, use the [card creation API](#create_card). Whenever
                    you attach a card to a recipient, Stripe will automatically
                    validate the debit card.
                  type: string
                default_card:
                  description: ID of the card to set as the recipient's new default for
                    payouts.
                  type: string
                description:
                  description: An arbitrary string which you can attach to a `Recipient`
                    object. It is displayed alongside the recipient in the web
                    interface.
                  type: string
                email:
                  description: The recipient's email address. It is displayed alongside the
                    recipient in the web interface, and can be useful for
                    searching and tracking.
                  type: string
                expand:
                  description: Specifies which fields in the response should be expanded.
                  items:
                    type: string
                  type: array
                metadata:
                  description: Set of key-value pairs that you can attach to an object.
                    This can be useful for storing additional information about
                    the object in a structured format. Individual keys can be
                    unset by posting an empty value to them. All keys can be
                    unset by posting an empty value to `metadata`.
                  type: object
                name:
                  description: The recipient's full, legal name. For type `individual`,
                    should be in the format `First Last`, `First Middle Last`,
                    or `First M Last` (no prefixes or suffixes). For
                    `corporation`, the full, incorporated name.
                  type: string
                tax_id:
                  description: The recipient's tax ID, as a string. For type `individual`,
                    the full SSN; for type `corporation`, the full EIN.
                  type: string
              type: object
        description: Body parameters for the request.
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/recipient"
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
  /v1/refunds:
    get:
      description: <p>Returns a list of all refunds you’ve previously created. The refunds
        are returned in sorted order, with the most recent refunds appearing
        first. For convenience, the 10 most recent refunds are always available
        by default on the charge object.</p>
      operationId: GetRefunds
      parameters:
        - description: Specifies which fields in the response should be expanded.
          in: query
          name: expand
          required: false
          schema:
            type: array
            items: {}
        - description: Only return refunds for the charge specified by this charge ID.
          in: query
          name: charge
          required: false
          schema:
            type: string
        - in: query
          name: created
          required: false
          schema:
            type: integer
        - description: A cursor for use in pagination. `ending_before` is an object ID that
            defines your place in the list. For instance, if you make a list
            request and receive 100 objects, starting with `obj_bar`, your
            subsequent call can include `ending_before=obj_bar` in order to
            fetch the previous page of the list.
          in: query
          name: ending_before
          required: false
          schema:
            type: string
        - description: A limit on the number of objects to be returned. Limit can range
            between 1 and 100, and the default is 10.
          in: query
          name: limit
          required: false
          schema:
            type: integer
        - description: A cursor for use in pagination. `starting_after` is an object ID
            that defines your place in the list. For instance, if you make a
            list request and receive 100 objects, ending with `obj_foo`, your
            subsequent call can include `starting_after=obj_foo` in order to
            fetch the next page of the list.
          in: query
          name: starting_after
          required: false
          schema:
            type: string
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                properties:
                  data:
                    items:
                      $ref: "#/components/schemas/refund"
                    type: array
                  has_more:
                    description: True if this list has another page of items after this one
                      that can be fetched.
                    type: boolean
                  object:
                    description: String representing the object's type. Objects of the same
                      type share the same value. Always has the value `list`.
                    enum:
                      - list
                    type: string
                  url:
                    description: The URL where this list can be accessed.
                    type: string
                required:
                  - data
                  - has_more
                  - object
                  - url
                type: object
                x-expandableFields:
                  - data
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
    post:
      description: <p>Create a refund.</p>
      operationId: PostRefunds
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                amount:
                  type: integer
                charge:
                  type: string
                expand:
                  description: Specifies which fields in the response should be expanded.
                  items:
                    type: string
                  type: array
                metadata:
                  type: object
                reason:
                  enum:
                    - duplicate
                    - fraudulent
                    - requested_by_customer
                  type: string
                refund_application_fee:
                  type: boolean
                reverse_transfer:
                  type: boolean
              type: object
        description: Body parameters for the request.
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/refund"
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
  "/v1/refunds/{refund}":
    get:
      description: <p>Retrieves the details of an existing refund.</p>
      operationId: GetRefundsRefund
      parameters:
        - description: Specifies which fields in the response should be expanded.
          in: query
          name: expand
          required: false
          schema:
            type: array
            items: {}
        - description: ID of refund to retrieve.
          in: path
          name: refund
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/refund"
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
    post:
      description: >-
        <p>Updates the specified refund by setting the values of the parameters
        passed. Any parameters not provided will be left unchanged.</p>


        <p>This request only accepts <code>metadata</code> as an argument.</p>
      operationId: PostRefundsRefund
      parameters:
        - in: path
          name: refund
          required: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/PostApplicationFeesFeeRefundsIdPayload"
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/refund"
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
  /v1/reporting/report_runs:
    get:
      description: <p>Returns a list of Report Runs, with the most recent appearing first.
        (Requires a <a
        href="https://stripe.com/docs/keys#test-live-modes">live-mode API
        key</a>.)</p>
      operationId: GetReportingReportRuns
      parameters:
        - description: Specifies which fields in the response should be expanded.
          in: query
          name: expand
          required: false
          schema:
            type: array
            items: {}
        - in: query
          name: created
          required: false
          schema:
            type: integer
        - description: A cursor for use in pagination. `ending_before` is an object ID that
            defines your place in the list. For instance, if you make a list
            request and receive 100 objects, starting with `obj_bar`, your
            subsequent call can include `ending_before=obj_bar` in order to
            fetch the previous page of the list.
          in: query
          name: ending_before
          required: false
          schema:
            type: string
        - description: A limit on the number of objects to be returned. Limit can range
            between 1 and 100, and the default is 10.
          in: query
          name: limit
          required: false
          schema:
            type: integer
        - description: A cursor for use in pagination. `starting_after` is an object ID
            that defines your place in the list. For instance, if you make a
            list request and receive 100 objects, ending with `obj_foo`, your
            subsequent call can include `starting_after=obj_foo` in order to
            fetch the next page of the list.
          in: query
          name: starting_after
          required: false
          schema:
            type: string
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                properties:
                  data:
                    items:
                      $ref: "#/components/schemas/reporting.report_run"
                    type: array
                  has_more:
                    description: True if this list has another page of items after this one
                      that can be fetched.
                    type: boolean
                  object:
                    description: String representing the object's type. Objects of the same
                      type share the same value. Always has the value `list`.
                    enum:
                      - list
                    type: string
                  url:
                    description: The URL where this list can be accessed.
                    type: string
                required:
                  - data
                  - has_more
                  - object
                  - url
                type: object
                x-expandableFields:
                  - data
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
    post:
      description: <p>Creates a new object and begin running the report. (Requires a <a
        href="https://stripe.com/docs/keys#test-live-modes">live-mode API
        key</a>.)</p>
      operationId: PostReportingReportRuns
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                expand:
                  description: Specifies which fields in the response should be expanded.
                  items:
                    type: string
                  type: array
                parameters:
                  description: Parameters specifying how the report should be run.
                    Different Report Types have different required and optional
                    parameters, listed in the [API Access to
                    Reports](https://stripe.com/docs/reporting/statements/api)
                    documentation.
                  properties:
                    columns:
                      items:
                        type: string
                      type: array
                    connected_account:
                      type: string
                    currency:
                      type: string
                    interval_end:
                      type: integer
                    interval_start:
                      type: integer
                    payout:
                      type: string
                    reporting_category:
                      enum:
                        - advance
                        - advance_funding
                        - charge
                        - charge_failure
                        - connect_collection_transfer
                        - connect_reserved_funds
                        - dispute
                        - dispute_reversal
                        - fee
                        - financing_paydown
                        - financing_paydown_reversal
                        - financing_payout
                        - financing_payout_reversal
                        - issuing_authorization_hold
                        - issuing_authorization_release
                        - issuing_transaction
                        - network_cost
                        - other_adjustment
                        - partial_capture_reversal
                        - payout
                        - payout_reversal
                        - platform_earning
                        - platform_earning_refund
                        - refund
                        - refund_failure
                        - risk_reserved_funds
                        - tax
                        - topup
                        - topup_reversal
                        - transfer
                        - transfer_reversal
                      type: string
                  title: run_parameter_specs
                  type: object
                report_type:
                  description: The ID of the [report
                    type](https://stripe.com/docs/reporting/statements/api#report-types)
                    to run, such as `"balance.summary.1"`.
                  type: string
              required:
                - report_type
              type: object
        description: Body parameters for the request.
        required: true
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/reporting.report_run"
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
  "/v1/reporting/report_runs/{report_run}":
    get:
      description: <p>Retrieves the details of an existing Report Run. (Requires a <a
        href="https://stripe.com/docs/keys#test-live-modes">live-mode API
        key</a>.)</p>
      operationId: GetReportingReportRunsReportRun
      parameters:
        - description: Specifies which fields in the response should be expanded.
          in: query
          name: expand
          required: false
          schema:
            type: array
            items: {}
        - description: The ID of the run to retrieve
          in: path
          name: report_run
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/reporting.report_run"
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
  /v1/reporting/report_types:
    get:
      description: <p>Returns a full list of Report Types. (Requires a <a
        href="https://stripe.com/docs/keys#test-live-modes">live-mode API
        key</a>.)</p>
      operationId: GetReportingReportTypes
      parameters:
        - description: Specifies which fields in the response should be expanded.
          in: query
          name: expand
          required: false
          schema:
            type: array
            items: {}
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                properties:
                  data:
                    items:
                      $ref: "#/components/schemas/reporting.report_type"
                    type: array
                  has_more:
                    description: True if this list has another page of items after this one
                      that can be fetched.
                    type: boolean
                  object:
                    description: String representing the object's type. Objects of the same
                      type share the same value. Always has the value `list`.
                    enum:
                      - list
                    type: string
                  url:
                    description: The URL where this list can be accessed.
                    type: string
                required:
                  - data
                  - has_more
                  - object
                  - url
                title: FinancialReportingFinanceReportTypeList
                type: object
                x-expandableFields:
                  - data
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
  "/v1/reporting/report_types/{report_type}":
    get:
      description: <p>Retrieves the details of a Report Type. (Requires a <a
        href="https://stripe.com/docs/keys#test-live-modes">live-mode API
        key</a>.)</p>
      operationId: GetReportingReportTypesReportType
      parameters:
        - description: Specifies which fields in the response should be expanded.
          in: query
          name: expand
          required: false
          schema:
            type: array
            items: {}
        - description: The [ID of the Report
            Type](https://stripe.com/docs/reporting/statements/api#available-report-types)
            to retrieve, such as `balance.summary.1`.
          in: path
          name: report_type
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/reporting.report_type"
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
  /v1/reviews:
    get:
      description: <p>Returns a list of <code>Review</code> objects that have
        <code>open</code> set to <code>true</code>. The objects are sorted in
        descending order by creation date, with the most recently created object
        appearing first.</p>
      operationId: GetReviews
      parameters:
        - description: Specifies which fields in the response should be expanded.
          in: query
          name: expand
          required: false
          schema:
            type: array
            items: {}
        - in: query
          name: created
          required: false
          schema:
            type: integer
        - description: A cursor for use in pagination. `ending_before` is an object ID that
            defines your place in the list. For instance, if you make a list
            request and receive 100 objects, starting with `obj_bar`, your
            subsequent call can include `ending_before=obj_bar` in order to
            fetch the previous page of the list.
          in: query
          name: ending_before
          required: false
          schema:
            type: string
        - description: A limit on the number of objects to be returned. Limit can range
            between 1 and 100, and the default is 10.
          in: query
          name: limit
          required: false
          schema:
            type: integer
        - description: A cursor for use in pagination. `starting_after` is an object ID
            that defines your place in the list. For instance, if you make a
            list request and receive 100 objects, ending with `obj_foo`, your
            subsequent call can include `starting_after=obj_foo` in order to
            fetch the next page of the list.
          in: query
          name: starting_after
          required: false
          schema:
            type: string
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                properties:
                  data:
                    items:
                      $ref: "#/components/schemas/review"
                    type: array
                  has_more:
                    description: True if this list has another page of items after this one
                      that can be fetched.
                    type: boolean
                  object:
                    description: String representing the object's type. Objects of the same
                      type share the same value. Always has the value `list`.
                    enum:
                      - list
                    type: string
                  url:
                    description: The URL where this list can be accessed.
                    type: string
                required:
                  - data
                  - has_more
                  - object
                  - url
                type: object
                x-expandableFields:
                  - data
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
  "/v1/reviews/{review}":
    get:
      description: <p>Retrieves a <code>Review</code> object.</p>
      operationId: GetReviewsReview
      parameters:
        - description: Specifies which fields in the response should be expanded.
          in: query
          name: expand
          required: false
          schema:
            type: array
            items: {}
        - description: The identifier of the review to be retrieved.
          in: path
          name: review
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/review"
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
  "/v1/reviews/{review}/approve":
    post:
      description: <p>Approves a <code>Review</code> object, closing it and removing it
        from the list of reviews.</p>
      operationId: PostReviewsReviewApprove
      parameters:
        - description: The identifier of the review to be approved.
          in: path
          name: review
          required: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/PutAccountsAccountLogoutPayload"
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/review"
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
  /v1/setup_intents:
    get:
      description: <p>Returns a list of SetupIntents.</p>
      operationId: GetSetupIntents
      parameters:
        - description: Specifies which fields in the response should be expanded.
          in: query
          name: expand
          required: false
          schema:
            type: array
            items: {}
        - description: A filter on the list, based on the object `created` field. The value
            can be a string with an integer Unix timestamp, or it can be a
            dictionary with a number of different query options.
          in: query
          name: created
          required: false
          schema:
            type: integer
        - description: Only return SetupIntents for the customer specified by this customer
            ID.
          in: query
          name: customer
          required: false
          schema:
            type: string
        - description: A cursor for use in pagination. `ending_before` is an object ID that
            defines your place in the list. For instance, if you make a list
            request and receive 100 objects, starting with `obj_bar`, your
            subsequent call can include `ending_before=obj_bar` in order to
            fetch the previous page of the list.
          in: query
          name: ending_before
          required: false
          schema:
            type: string
        - description: A limit on the number of objects to be returned. Limit can range
            between 1 and 100, and the default is 10.
          in: query
          name: limit
          required: false
          schema:
            type: integer
        - description: Only return SetupIntents associated with the specified payment
            method.
          in: query
          name: payment_method
          required: false
          schema:
            type: string
        - description: A cursor for use in pagination. `starting_after` is an object ID
            that defines your place in the list. For instance, if you make a
            list request and receive 100 objects, ending with `obj_foo`, your
            subsequent call can include `starting_after=obj_foo` in order to
            fetch the next page of the list.
          in: query
          name: starting_after
          required: false
          schema:
            type: string
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                properties:
                  data:
                    items:
                      $ref: "#/components/schemas/setup_intent"
                    type: array
                  has_more:
                    description: True if this list has another page of items after this one
                      that can be fetched.
                    type: boolean
                  object:
                    description: String representing the object's type. Objects of the same
                      type share the same value. Always has the value `list`.
                    enum:
                      - list
                    type: string
                  url:
                    description: The URL where this list can be accessed.
                    type: string
                required:
                  - data
                  - has_more
                  - object
                  - url
                title: PaymentFlowsSetupIntentList
                type: object
                x-expandableFields:
                  - data
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
    post:
      description: >-
        <p>Creates a SetupIntent object.</p>


        <p>After the SetupIntent is created, attach a payment method and <a href="/docs/api/setup_intents/confirm">confirm</a>

        to collect any required permissions to charge the payment method later.</p>
      operationId: PostSetupIntents
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                confirm:
                  description: Set to `true` to attempt to confirm this SetupIntent
                    immediately. This parameter defaults to `false`. If the
                    payment method attached is a card, a return_url may be
                    provided in case additional authentication is required.
                  type: boolean
                customer:
                  description: >-
                    ID of the Customer this SetupIntent belongs to, if one
                    exists.


                    If present, payment methods used with this SetupIntent can only be attached to this Customer, and payment methods attached to other Customers cannot be used with this SetupIntent.
                  type: string
                description:
                  description: An arbitrary string attached to the object. Often useful for
                    displaying to users.
                  type: string
                expand:
                  description: Specifies which fields in the response should be expanded.
                  items:
                    type: string
                  type: array
                metadata:
                  description: Set of key-value pairs that you can attach to an object.
                    This can be useful for storing additional information about
                    the object in a structured format.
                  type: object
                on_behalf_of:
                  description: The Stripe account ID for which this SetupIntent is created.
                  type: string
                payment_method:
                  description: ID of the payment method (a PaymentMethod, Card,
                    BankAccount, or saved Source object) to attach to this
                    SetupIntent.
                  type: string
                payment_method_options:
                  description: Payment-method-specific configuration for this SetupIntent.
                  properties:
                    card:
                      properties:
                        request_three_d_secure:
                          enum:
                            - any
                            - automatic
                          type: string
                      title: setup_intent_param
                      type: object
                  title: payment_method_options_param
                  type: object
                payment_method_types:
                  description: The list of payment method types (e.g. card) that this
                    SetupIntent is allowed to use. If this is not provided,
                    defaults to ["card"].
                  items:
                    type: string
                  type: array
                return_url:
                  description: The URL to redirect your customer back to after they
                    authenticate or cancel their payment on the payment method's
                    app or site. If you'd prefer to redirect to a mobile
                    application, you can alternatively supply an application URI
                    scheme. This parameter can only be used with
                    [`confirm=true`](https://stripe.com/docs/api/setup_intents/create#create_setup_intent-confirm).
                  type: string
                usage:
                  description: Indicates how the payment method is intended to be used in
                    the future. If not provided, this value defaults to
                    `off_session`.
                  type: string
              type: object
        description: Body parameters for the request.
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/setup_intent"
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
  "/v1/setup_intents/{intent}":
    get:
      description: >-
        <p>Retrieves the details of a SetupIntent that has previously been
        created. </p>


        <p>Client-side retrieval using a publishable key is allowed when the <code>client_secret</code> is provided in the query string. </p>


        <p>When retrieved with a publishable key, only a subset of properties will be returned. Please refer to the <a href="#setup_intent_object">SetupIntent</a> object reference for more details.</p>
      operationId: GetSetupIntentsIntent
      parameters:
        - description: Specifies which fields in the response should be expanded.
          in: query
          name: expand
          required: false
          schema:
            type: array
            items: {}
        - description: The client secret of the SetupIntent. Required if a publishable key
            is used to retrieve the SetupIntent.
          in: query
          name: client_secret
          required: false
          schema:
            type: string
        - description: ID of the SetupIntent to retrieve.
          in: path
          name: intent
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/setup_intent"
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
    post:
      description: <p>Updates a SetupIntent object.</p>
      operationId: PostSetupIntentsIntent
      parameters:
        - description: ID of the SetupIntent to retrieve.
          in: path
          name: intent
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                customer:
                  description: >-
                    ID of the Customer this SetupIntent belongs to, if one
                    exists.


                    If present, payment methods used with this SetupIntent can only be attached to this Customer, and payment methods attached to other Customers cannot be used with this SetupIntent.
                  type: string
                description:
                  description: An arbitrary string attached to the object. Often useful for
                    displaying to users.
                  type: string
                expand:
                  description: Specifies which fields in the response should be expanded.
                  items:
                    type: string
                  type: array
                metadata:
                  description: Set of key-value pairs that you can attach to an object.
                    This can be useful for storing additional information about
                    the object in a structured format.
                  type: object
                payment_method:
                  description: ID of the payment method (a PaymentMethod, Card,
                    BankAccount, or saved Source object) to attach to this
                    SetupIntent.
                  type: string
                payment_method_types:
                  description: The list of payment method types (e.g. card) that this
                    SetupIntent is allowed to set up. If this is not provided,
                    defaults to ["card"].
                  items:
                    type: string
                  type: array
              type: object
        description: Body parameters for the request.
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/setup_intent"
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
  "/v1/setup_intents/{intent}/cancel":
    post:
      description: >-
        <p>A SetupIntent object can be canceled when it is in one of these
        statuses: <code>requires_payment_method</code>,
        <code>requires_capture</code>, <code>requires_confirmation</code>,
        <code>requires_action</code>. </p>


        <p>Once canceled, setup is abandoned and any operations on the SetupIntent will fail with an error.</p>
      operationId: PostSetupIntentsIntentCancel
      parameters:
        - description: ID of the SetupIntent to retrieve.
          in: path
          name: intent
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                cancellation_reason:
                  description: Reason for canceling this SetupIntent. Possible values are
                    `abandoned`, `requested_by_customer`, or `duplicate`
                  enum:
                    - abandoned
                    - duplicate
                    - requested_by_customer
                  type: string
                expand:
                  description: Specifies which fields in the response should be expanded.
                  items:
                    type: string
                  type: array
              type: object
        description: Body parameters for the request.
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/setup_intent"
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
  "/v1/setup_intents/{intent}/confirm":
    post:
      description: >-
        <p>Confirm that your customer intends to set up the current or

        provided payment method. For example, you would confirm a SetupIntent

        when a customer hits the “Save” button on a payment method management

        page on your website.</p>


        <p>If the selected payment method does not require any additional

        steps from the customer, the SetupIntent will transition to the

        <code>succeeded</code> status.</p>


        <p>Otherwise, it will transition to the <code>requires_action</code> status and

        suggest additional actions via <code>next_action</code>. If setup fails,

        the SetupIntent will transition to the

        <code>requires_payment_method</code> status.</p>
      operationId: PostSetupIntentsIntentConfirm
      parameters:
        - description: ID of the SetupIntent to retrieve.
          in: path
          name: intent
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                client_secret:
                  description: The client secret of the SetupIntent.
                  type: string
                expand:
                  description: Specifies which fields in the response should be expanded.
                  items:
                    type: string
                  type: array
                payment_method:
                  description: ID of the payment method (a PaymentMethod, Card,
                    BankAccount, or saved Source object) to attach to this
                    SetupIntent.
                  type: string
                payment_method_options:
                  description: Payment-method-specific configuration for this SetupIntent.
                  properties:
                    card:
                      properties:
                        request_three_d_secure:
                          enum:
                            - any
                            - automatic
                          type: string
                      title: setup_intent_param
                      type: object
                  title: payment_method_options_param
                  type: object
                return_url:
                  description: >-
                    The URL to redirect your customer back to after they
                    authenticate on the payment method's app or site.

                    If you'd prefer to redirect to a mobile application, you can alternatively supply an application URI scheme.

                    This parameter is only used for cards and other redirect-based payment methods.
                  type: string
              type: object
        description: Body parameters for the request.
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/setup_intent"
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
  /v1/sigma/scheduled_query_runs:
    get:
      description: <p>Returns a list of scheduled query runs.</p>
      operationId: GetSigmaScheduledQueryRuns
      parameters:
        - description: Specifies which fields in the response should be expanded.
          in: query
          name: expand
          required: false
          schema:
            type: array
            items: {}
        - description: A cursor for use in pagination. `ending_before` is an object ID that
            defines your place in the list. For instance, if you make a list
            request and receive 100 objects, starting with `obj_bar`, your
            subsequent call can include `ending_before=obj_bar` in order to
            fetch the previous page of the list.
          in: query
          name: ending_before
          required: false
          schema:
            type: string
        - description: A limit on the number of objects to be returned. Limit can range
            between 1 and 100, and the default is 10.
          in: query
          name: limit
          required: false
          schema:
            type: integer
        - description: A cursor for use in pagination. `starting_after` is an object ID
            that defines your place in the list. For instance, if you make a
            list request and receive 100 objects, ending with `obj_foo`, your
            subsequent call can include `starting_after=obj_foo` in order to
            fetch the next page of the list.
          in: query
          name: starting_after
          required: false
          schema:
            type: string
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                properties:
                  data:
                    items:
                      $ref: "#/components/schemas/scheduled_query_run"
                    type: array
                  has_more:
                    description: True if this list has another page of items after this one
                      that can be fetched.
                    type: boolean
                  object:
                    description: String representing the object's type. Objects of the same
                      type share the same value. Always has the value `list`.
                    enum:
                      - list
                    type: string
                  url:
                    description: The URL where this list can be accessed.
                    type: string
                required:
                  - data
                  - has_more
                  - object
                  - url
                type: object
                x-expandableFields:
                  - data
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
  "/v1/sigma/scheduled_query_runs/{scheduled_query_run}":
    get:
      description: <p>Retrieves the details of an scheduled query run.</p>
      operationId: GetSigmaScheduledQueryRunsScheduledQueryRun
      parameters:
        - description: Specifies which fields in the response should be expanded.
          in: query
          name: expand
          required: false
          schema:
            type: array
            items: {}
        - description: Unique identifier for the object.
          in: path
          name: scheduled_query_run
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/scheduled_query_run"
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
  /v1/skus:
    get:
      description: <p>Returns a list of your SKUs. The SKUs are returned sorted by creation
        date, with the most recently created SKUs appearing first.</p>
      operationId: GetSkus
      parameters:
        - description: Specifies which fields in the response should be expanded.
          in: query
          name: expand
          required: false
          schema:
            type: array
            items: {}
        - description: Only return SKUs that are active or inactive (e.g., pass `false` to
            list all inactive products).
          in: query
          name: active
          required: false
          schema:
            type: boolean
        - description: Only return SKUs that have the specified key-value pairs in this
            partially constructed dictionary. Can be specified only if `product`
            is also supplied. For instance, if the associated product has
            attributes `["color", "size"]`, passing in `attributes[color]=red`
            returns all the SKUs for this product that have `color` set to
            `red`.
          in: query
          name: attributes
          required: false
          schema:
            type: string
        - description: A cursor for use in pagination. `ending_before` is an object ID that
            defines your place in the list. For instance, if you make a list
            request and receive 100 objects, starting with `obj_bar`, your
            subsequent call can include `ending_before=obj_bar` in order to
            fetch the previous page of the list.
          in: query
          name: ending_before
          required: false
          schema:
            type: string
        - description: Only return SKUs with the given IDs.
          in: query
          name: ids
          required: false
          schema:
            type: array
            items: {}
        - description: Only return SKUs that are either in stock or out of stock (e.g.,
            pass `false` to list all SKUs that are out of stock). If no value is
            provided, all SKUs are returned.
          in: query
          name: in_stock
          required: false
          schema:
            type: boolean
        - description: A limit on the number of objects to be returned. Limit can range
            between 1 and 100, and the default is 10.
          in: query
          name: limit
          required: false
          schema:
            type: integer
        - description: The ID of the product whose SKUs will be retrieved. Must be a
            product with type `good`.
          in: query
          name: product
          required: false
          schema:
            type: string
        - description: A cursor for use in pagination. `starting_after` is an object ID
            that defines your place in the list. For instance, if you make a
            list request and receive 100 objects, ending with `obj_foo`, your
            subsequent call can include `starting_after=obj_foo` in order to
            fetch the next page of the list.
          in: query
          name: starting_after
          required: false
          schema:
            type: string
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                properties:
                  data:
                    items:
                      $ref: "#/components/schemas/sku"
                    type: array
                  has_more:
                    description: True if this list has another page of items after this one
                      that can be fetched.
                    type: boolean
                  object:
                    description: String representing the object's type. Objects of the same
                      type share the same value. Always has the value `list`.
                    enum:
                      - list
                    type: string
                  url:
                    description: The URL where this list can be accessed.
                    type: string
                required:
                  - data
                  - has_more
                  - object
                  - url
                type: object
                x-expandableFields:
                  - data
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
    post:
      description: <p>Creates a new SKU associated with a product.</p>
      operationId: PostSkus
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                active:
                  description: Whether the SKU is available for purchase. Default to `true`.
                  type: boolean
                attributes:
                  description: "A dictionary of attributes and values for the attributes
                    defined by the product. If, for example, a product's
                    attributes are `[\"size\", \"gender\"]`, a valid SKU has the
                    following dictionary of attributes: `{\"size\": \"Medium\",
                    \"gender\": \"Unisex\"}`."
                  type: object
                currency:
                  description: Three-letter [ISO currency
                    code](https://www.iso.org/iso-4217-currency-codes.html), in
                    lowercase. Must be a [supported
                    currency](https://stripe.com/docs/currencies).
                  type: string
                expand:
                  description: Specifies which fields in the response should be expanded.
                  items:
                    type: string
                  type: array
                id:
                  description: The identifier for the SKU. Must be unique. If not provided,
                    an identifier will be randomly generated.
                  type: string
                image:
                  description: The URL of an image for this SKU, meant to be displayable to
                    the customer.
                  type: string
                inventory:
                  description: Description of the SKU's inventory.
                  properties:
                    quantity:
                      type: integer
                    type:
                      enum:
                        - bucket
                        - finite
                        - infinite
                      type: string
                    value:
                      enum:
                        - ""
                        - in_stock
                        - limited
                        - out_of_stock
                      type: string
                  title: inventory_specs
                  type: object
                metadata:
                  description: A set of key-value pairs that you can attach to a SKU
                    object. It can be useful for storing additional information
                    about the SKU in a structured format.
                  type: object
                package_dimensions:
                  description: The dimensions of this SKU for shipping purposes.
                  properties:
                    height:
                      type: number
                    length:
                      type: number
                    weight:
                      type: number
                    width:
                      type: number
                  required:
                    - height
                    - length
                    - weight
                    - width
                  title: package_dimensions_specs
                  type: object
                price:
                  description: The cost of the item as a nonnegative integer in the
                    smallest currency unit (that is, 100 cents to charge $1.00,
                    or 100 to charge ¥100, Japanese Yen being a zero-decimal
                    currency).
                  type: integer
                product:
                  description: The ID of the product this SKU is associated with. Must be a
                    product with type `good`.
                  type: string
              required:
                - currency
                - inventory
                - price
                - product
              type: object
        description: Body parameters for the request.
        required: true
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/sku"
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
  "/v1/skus/{id}":
    delete:
      description: <p>Delete a SKU. Deleting a SKU is only possible until it has been used
        in an order.</p>
      operationId: DeleteSkusId
      parameters:
        - description: The identifier of the SKU to be deleted.
          in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/deleted_sku"
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
    get:
      description: <p>Retrieves the details of an existing SKU. Supply the unique SKU
        identifier from either a SKU creation request or from the product, and
        Stripe will return the corresponding SKU information.</p>
      operationId: GetSkusId
      parameters:
        - description: Specifies which fields in the response should be expanded.
          in: query
          name: expand
          required: false
          schema:
            type: array
            items: {}
        - description: The identifier of the SKU to be retrieved.
          in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/deleted_sku"
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
    post:
      description: >-
        <p>Updates the specific SKU by setting the values of the parameters
        passed. Any parameters not provided will be left unchanged.</p>


        <p>Note that a SKU’s <code>attributes</code> are not editable. Instead, you would need to deactivate the existing SKU and create a new one with the new attribute values.</p>
      operationId: PostSkusId
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                active:
                  description: Whether this SKU is available for purchase.
                  type: boolean
                attributes:
                  description: A dictionary of attributes and values for the attributes
                    defined by the product. When specified, `attributes` will
                    partially update the existing attributes dictionary on the
                    product, with the postcondition that a value must be present
                    for each attribute key on the product.
                  type: object
                currency:
                  description: Three-letter [ISO currency
                    code](https://www.iso.org/iso-4217-currency-codes.html), in
                    lowercase. Must be a [supported
                    currency](https://stripe.com/docs/currencies).
                  type: string
                expand:
                  description: Specifies which fields in the response should be expanded.
                  items:
                    type: string
                  type: array
                image:
                  description: The URL of an image for this SKU, meant to be displayable to
                    the customer.
                  type: string
                inventory:
                  description: Description of the SKU's inventory.
                  properties:
                    quantity:
                      type: integer
                    type:
                      enum:
                        - bucket
                        - finite
                        - infinite
                      type: string
                    value:
                      enum:
                        - ""
                        - in_stock
                        - limited
                        - out_of_stock
                      type: string
                  title: inventory_update_specs
                  type: object
                metadata:
                  description: A set of key-value pairs that you can attach to a SKU
                    object. It can be useful for storing additional information
                    about the SKU in a structured format.
                  type: object
                package_dimensions:
                  description: The dimensions of this SKU for shipping purposes.
                price:
                  description: The cost of the item as a positive integer in the smallest
                    currency unit (that is, 100 cents to charge $1.00, or 100 to
                    charge ¥100, Japanese Yen being a zero-decimal currency).
                  type: integer
                product:
                  description: The ID of the product that this SKU should belong to. The
                    product must exist, have the same set of attribute names as
                    the SKU's current product, and be of type `good`.
                  type: string
              type: object
        description: Body parameters for the request.
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/sku"
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
  /v1/sources:
    post:
      description: <p>Creates a new source object.</p>
      operationId: PostSources
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                amount:
                  description: Amount associated with the source. This is the amount for
                    which the source will be chargeable once ready. Required for
                    `single_use` sources.
                  type: integer
                currency:
                  description: Three-letter [ISO code for the
                    currency](https://stripe.com/docs/currencies) associated
                    with the source. This is the currency for which the source
                    will be chargeable once ready.
                  type: string
                customer:
                  description: The `Customer` to whom the original source is attached to.
                    Must be set when the original source is not a `Source`
                    (e.g., `Card`).
                  type: string
                expand:
                  description: Specifies which fields in the response should be expanded.
                  items:
                    type: string
                  type: array
                flow:
                  description: The authentication `flow` of the source to create. `flow` is
                    one of `redirect`, `receiver`, `code_verification`, `none`.
                    It is generally inferred unless a type supports multiple
                    flows.
                  enum:
                    - code_verification
                    - none
                    - receiver
                    - redirect
                  type: string
                mandate:
                  description: Information about a mandate possibility attached to a source
                    object (generally for bank debits) as well as its acceptance
                    status.
                  properties:
                    acceptance:
                      properties:
                        date:
                          type: integer
                        ip:
                          type: string
                        offline:
                          properties:
                            contact_email:
                              type: string
                          required:
                            - contact_email
                          title: mandate_offline_acceptance_params
                          type: object
                        online:
                          properties:
                            date:
                              type: integer
                            ip:
                              type: string
                            user_agent:
                              type: string
                          title: mandate_online_acceptance_params
                          type: object
                        status:
                          enum:
                            - accepted
                            - pending
                            - refused
                            - revoked
                          type: string
                        type:
                          enum:
                            - offline
                            - online
                          type: string
                        user_agent:
                          type: string
                      required:
                        - status
                      title: mandate_acceptance_params
                      type: object
                    amount: {}
                    currency:
                      type: string
                    interval:
                      enum:
                        - one_time
                        - scheduled
                        - variable
                      type: string
                    notification_method:
                      enum:
                        - deprecated_none
                        - email
                        - manual
                        - none
                        - stripe_email
                      type: string
                  title: mandate_params
                  type: object
                metadata:
                  description: A set of key-value pairs that you can attach to a source
                    object. It can be useful for storing additional information
                    about the source in a structured format.
                  type: object
                original_source:
                  description: The source to share.
                  type: string
                owner:
                  description: Information about the owner of the payment instrument that
                    may be used or required by particular source types.
                  properties:
                    address:
                      properties:
                        city:
                          type: string
                        country:
                          type: string
                        line1:
                          type: string
                        line2:
                          type: string
                        postal_code:
                          type: string
                        state:
                          type: string
                      title: source_address
                      type: object
                    email:
                      type: string
                    name:
                      type: string
                    phone:
                      type: string
                  title: owner
                  type: object
                receiver:
                  description: Optional parameters for the receiver flow. Can be set only
                    if the source is a receiver (`flow` is `receiver`).
                  properties:
                    refund_attributes_method:
                      enum:
                        - email
                        - manual
                        - none
                      type: string
                  title: receiver_params
                  type: object
                redirect:
                  description: Parameters required for the redirect flow. Required if the
                    source is authenticated by a redirect (`flow` is
                    `redirect`).
                  properties:
                    return_url:
                      type: string
                  required:
                    - return_url
                  title: redirect_params
                  type: object
                source_order:
                  description: Information about the items and shipping associated with the
                    source. Required for transactional credit (for example
                    Klarna) sources before you can charge it.
                  properties:
                    items:
                      items:
                        properties:
                          amount:
                            type: integer
                          currency:
                            type: string
                          description:
                            type: string
                          parent:
                            type: string
                          quantity:
                            type: integer
                          type:
                            enum:
                              - discount
                              - shipping
                              - sku
                              - tax
                            type: string
                        title: order_item_specs
                        type: object
                      type: array
                    shipping:
                      properties:
                        address:
                          properties:
                            city:
                              type: string
                            country:
                              type: string
                            line1:
                              type: string
                            line2:
                              type: string
                            postal_code:
                              type: string
                            state:
                              type: string
                          required:
                            - line1
                          title: address
                          type: object
                        carrier:
                          type: string
                        name:
                          type: string
                        phone:
                          type: string
                        tracking_number:
                          type: string
                      required:
                        - address
                      title: order_shipping
                      type: object
                  title: shallow_order_specs
                  type: object
                statement_descriptor:
                  description: An arbitrary string to be displayed on your customer's
                    statement. As an example, if your website is `RunClub` and
                    the item you're charging for is a race ticket, you may want
                    to specify a `statement_descriptor` of `RunClub 5K race
                    ticket.` While many payment types will display this
                    information, some may not display it at all.
                  type: string
                token:
                  description: An optional token used to create the source. When passed,
                    token properties will override source parameters.
                  type: string
                type:
                  description: The `type` of the source to create. Required unless
                    `customer` and `original_source` are specified (see the
                    [Shared card
                    Sources](https://stripe.com/docs/sources/connect#shared-card-sources)
                    guide)
                  type: string
                usage:
                  description: Either `reusable` or `single_use`. Whether this source
                    should be reusable or not. Some source types may or may not
                    be reusable by construction, while others may leave the
                    option at creation. If an incompatible value is passed, an
                    error will be returned.
                  enum:
                    - reusable
                    - single_use
                  type: string
              type: object
        description: Body parameters for the request.
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/source"
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
  "/v1/sources/{source}":
    get:
      description: <p>Retrieves an existing source object. Supply the unique source ID from
        a source creation request and Stripe will return the corresponding
        up-to-date source object information.</p>
      operationId: GetSourcesSource
      parameters:
        - description: Specifies which fields in the response should be expanded.
          in: query
          name: expand
          required: false
          schema:
            type: array
            items: {}
        - description: The client secret of the source. Required if a publishable key is
            used to retrieve the source.
          in: query
          name: client_secret
          required: false
          schema:
            type: string
        - description: The identifier of the source to be retrieved.
          in: path
          name: source
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/source"
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
    post:
      description: >-
        <p>Updates the specified source by setting the values of the parameters
        passed. Any parameters not provided will be left unchanged.</p>


        <p>This request accepts the <code>metadata</code> and <code>owner</code> as arguments. It is also possible to update type specific information for selected payment methods. Please refer to our <a href="/docs/sources">payment method guides</a> for more detail.</p>
      operationId: PostSourcesSource
      parameters:
        - in: path
          name: source
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                amount:
                  description: Amount associated with the source.
                  type: integer
                expand:
                  description: Specifies which fields in the response should be expanded.
                  items:
                    type: string
                  type: array
                mandate:
                  description: Information about a mandate possibility attached to a source
                    object (generally for bank debits) as well as its acceptance
                    status.
                  properties:
                    acceptance:
                      properties:
                        date:
                          type: integer
                        ip:
                          type: string
                        offline:
                          properties:
                            contact_email:
                              type: string
                          required:
                            - contact_email
                          title: mandate_offline_acceptance_params
                          type: object
                        online:
                          properties:
                            date:
                              type: integer
                            ip:
                              type: string
                            user_agent:
                              type: string
                          title: mandate_online_acceptance_params
                          type: object
                        status:
                          enum:
                            - accepted
                            - pending
                            - refused
                            - revoked
                          type: string
                        type:
                          enum:
                            - offline
                            - online
                          type: string
                        user_agent:
                          type: string
                      required:
                        - status
                      title: mandate_acceptance_params
                      type: object
                    amount: {}
                    currency:
                      type: string
                    interval:
                      enum:
                        - one_time
                        - scheduled
                        - variable
                      type: string
                    notification_method:
                      enum:
                        - deprecated_none
                        - email
                        - manual
                        - none
                        - stripe_email
                      type: string
                  title: mandate_params
                  type: object
                metadata:
                  description: A set of key-value pairs that you can attach to a source
                    object. It can be useful for storing additional information
                    about the source in a structured format.
                  type: object
                owner:
                  description: Information about the owner of the payment instrument that
                    may be used or required by particular source types.
                  properties:
                    address:
                      properties:
                        city:
                          type: string
                        country:
                          type: string
                        line1:
                          type: string
                        line2:
                          type: string
                        postal_code:
                          type: string
                        state:
                          type: string
                      title: source_address
                      type: object
                    email:
                      type: string
                    name:
                      type: string
                    phone:
                      type: string
                  title: owner
                  type: object
                source_order:
                  description: Information about the items and shipping associated with the
                    source. Required for transactional credit (for example
                    Klarna) sources before you can charge it.
                  properties:
                    items:
                      items:
                        properties:
                          amount:
                            type: integer
                          currency:
                            type: string
                          description:
                            type: string
                          parent:
                            type: string
                          quantity:
                            type: integer
                          type:
                            enum:
                              - discount
                              - shipping
                              - sku
                              - tax
                            type: string
                        title: order_item_specs
                        type: object
                      type: array
                    shipping:
                      properties:
                        address:
                          properties:
                            city:
                              type: string
                            country:
                              type: string
                            line1:
                              type: string
                            line2:
                              type: string
                            postal_code:
                              type: string
                            state:
                              type: string
                          required:
                            - line1
                          title: address
                          type: object
                        carrier:
                          type: string
                        name:
                          type: string
                        phone:
                          type: string
                        tracking_number:
                          type: string
                      required:
                        - address
                      title: order_shipping
                      type: object
                  title: order_params
                  type: object
              type: object
        description: Body parameters for the request.
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/source"
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
  "/v1/sources/{source}/mandate_notifications/{mandate_notification}":
    get:
      description: <p>Retrieves a new Source MandateNotification.</p>
      operationId: GetSourcesSourceMandateNotificationsMandateNotification
      parameters:
        - description: Specifies which fields in the response should be expanded.
          in: query
          name: expand
          required: false
          schema:
            type: array
            items: {}
        - description: The ID of the Source MandateNotification.
          in: path
          name: mandate_notification
          required: true
          schema:
            type: string
        - description: The ID of the Source that received a ManateNotification.
          in: path
          name: source
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/source_mandate_notification"
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
  "/v1/sources/{source}/source_transactions":
    get:
      description: <p>List source transactions for a given source.</p>
      operationId: GetSourcesSourceSourceTransactions
      parameters:
        - description: Specifies which fields in the response should be expanded.
          in: query
          name: expand
          required: false
          schema:
            type: array
            items: {}
        - description: A cursor for use in pagination. `ending_before` is an object ID that
            defines your place in the list. For instance, if you make a list
            request and receive 100 objects, starting with `obj_bar`, your
            subsequent call can include `ending_before=obj_bar` in order to
            fetch the previous page of the list.
          in: query
          name: ending_before
          required: false
          schema:
            type: string
        - description: A limit on the number of objects to be returned. Limit can range
            between 1 and 100, and the default is 10.
          in: query
          name: limit
          required: false
          schema:
            type: integer
        - description: The ID of the source whose source transactions will be retrieved.
          in: path
          name: source
          required: true
          schema:
            type: string
        - description: A cursor for use in pagination. `starting_after` is an object ID
            that defines your place in the list. For instance, if you make a
            list request and receive 100 objects, ending with `obj_foo`, your
            subsequent call can include `starting_after=obj_foo` in order to
            fetch the next page of the list.
          in: query
          name: starting_after
          required: false
          schema:
            type: string
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                properties:
                  data:
                    items:
                      $ref: "#/components/schemas/source_transaction"
                    type: array
                  has_more:
                    description: True if this list has another page of items after this one
                      that can be fetched.
                    type: boolean
                  object:
                    description: String representing the object's type. Objects of the same
                      type share the same value. Always has the value `list`.
                    enum:
                      - list
                    type: string
                  url:
                    description: The URL where this list can be accessed.
                    type: string
                required:
                  - data
                  - has_more
                  - object
                  - url
                title: ApmsSourcesSourceTransactionList
                type: object
                x-expandableFields:
                  - data
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
  "/v1/sources/{source}/source_transactions/{source_transaction}":
    get:
      description: <p>Retrieve an existing source transaction object. Supply the unique
        source ID from a source creation request and the source transaction ID
        and Stripe will return the corresponding up-to-date source object
        information.</p>
      operationId: GetSourcesSourceSourceTransactionsSourceTransaction
      parameters:
        - description: Specifies which fields in the response should be expanded.
          in: query
          name: expand
          required: false
          schema:
            type: array
            items: {}
        - description: The ID of the source whose source transaction will be retrieved.
          in: path
          name: source
          required: true
          schema:
            type: string
        - description: The ID of the source transaction that will be retrieved.
          in: path
          name: source_transaction
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/source_transaction"
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
  "/v1/sources/{source}/verify":
    post:
      description: <p>Verify a given source.</p>
      operationId: PostSourcesSourceVerify
      parameters:
        - description: The ID of the desired source.
          in: path
          name: source
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                expand:
                  description: Specifies which fields in the response should be expanded.
                  items:
                    type: string
                  type: array
                values:
                  description: The values needed to verify the source.
                  items:
                    type: string
                  type: array
              required:
                - values
              type: object
        description: Body parameters for the request.
        required: true
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/source"
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
  /v1/subscription_items:
    get:
      description: <p>Returns a list of your subscription items for a given
        subscription.</p>
      operationId: GetSubscriptionItems
      parameters:
        - description: Specifies which fields in the response should be expanded.
          in: query
          name: expand
          required: false
          schema:
            type: array
            items: {}
        - description: A cursor for use in pagination. `ending_before` is an object ID that
            defines your place in the list. For instance, if you make a list
            request and receive 100 objects, starting with `obj_bar`, your
            subsequent call can include `ending_before=obj_bar` in order to
            fetch the previous page of the list.
          in: query
          name: ending_before
          required: false
          schema:
            type: string
        - description: A limit on the number of objects to be returned. Limit can range
            between 1 and 100, and the default is 10.
          in: query
          name: limit
          required: false
          schema:
            type: integer
        - description: A cursor for use in pagination. `starting_after` is an object ID
            that defines your place in the list. For instance, if you make a
            list request and receive 100 objects, ending with `obj_foo`, your
            subsequent call can include `starting_after=obj_foo` in order to
            fetch the next page of the list.
          in: query
          name: starting_after
          required: false
          schema:
            type: string
        - description: The ID of the subscription whose items will be retrieved.
          in: query
          name: subscription
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                properties:
                  data:
                    items:
                      $ref: "#/components/schemas/subscription_item"
                    type: array
                  has_more:
                    description: True if this list has another page of items after this one
                      that can be fetched.
                    type: boolean
                  object:
                    description: String representing the object's type. Objects of the same
                      type share the same value. Always has the value `list`.
                    enum:
                      - list
                    type: string
                  url:
                    description: The URL where this list can be accessed.
                    type: string
                required:
                  - data
                  - has_more
                  - object
                  - url
                type: object
                x-expandableFields:
                  - data
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
    post:
      description: <p>Adds a new item to an existing subscription. No existing items will
        be changed or replaced.</p>
      operationId: PostSubscriptionItems
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                billing_thresholds:
                  description: Define thresholds at which an invoice will be sent, and the
                    subscription advanced to a new billing period
                expand:
                  description: Specifies which fields in the response should be expanded.
                  items:
                    type: string
                  type: array
                metadata:
                  description: Set of key-value pairs that you can attach to an object.
                    This can be useful for storing additional information about
                    the object in a structured format.
                  type: object
                plan:
                  description: The identifier of the plan to add to the subscription.
                  type: string
                prorate:
                  description: Flag indicating whether to
                    [prorate](https://stripe.com/docs/billing/subscriptions/prorations)
                    switching plans during a billing cycle.
                  type: boolean
                proration_date:
                  description: If set, the proration will be calculated as though the
                    subscription was updated at the given time. This can be used
                    to apply the same proration that was previewed with the
                    [upcoming invoice](#retrieve_customer_invoice) endpoint.
                  type: integer
                quantity:
                  description: The quantity you'd like to apply to the subscription item
                    you're creating.
                  type: integer
                subscription:
                  description: The identifier of the subscription to modify.
                  type: string
                tax_rates:
                  description: The tax rates which apply to this `subscription_item`. When
                    set, the `default_tax_rates` on the subscription do not
                    apply to this `subscription_item`.
                  items:
                    type: string
              required:
                - plan
                - subscription
              type: object
        description: Body parameters for the request.
        required: true
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/subscription_item"
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
  "/v1/subscription_items/{item}":
    delete:
      description: <p>Deletes an item from the subscription. Removing a subscription item
        from a subscription will not cancel the subscription.</p>
      operationId: DeleteSubscriptionItemsItem
      parameters:
        - description: The identifier of the subscription item to delete.
          in: path
          name: item
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                clear_usage:
                  description: Delete all usage for the given subscription item. Allowed
                    only when the current plan's `usage_type` is `metered`.
                  type: boolean
                prorate:
                  description: Flag indicating whether to
                    [prorate](https://stripe.com/docs/billing/subscriptions/prorations)
                    switching plans during a billing cycle.
                  type: boolean
                proration_date:
                  description: If set, the proration will be calculated as though the
                    subscription was updated at the given time. This can be used
                    to apply the same proration that was previewed with the
                    [upcoming invoice](#retrieve_customer_invoice) endpoint.
                  type: integer
              type: object
        description: Body parameters for the request.
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/deleted_subscription_item"
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
    get:
      description: <p>Retrieves the invoice item with the given ID.</p>
      operationId: GetSubscriptionItemsItem
      parameters:
        - description: Specifies which fields in the response should be expanded.
          in: query
          name: expand
          required: false
          schema:
            type: array
            items: {}
        - description: The identifier of the subscription item to retrieve.
          in: path
          name: item
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/subscription_item"
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
    post:
      description: <p>Updates the plan or quantity of an item on a current subscription.</p>
      operationId: PostSubscriptionItemsItem
      parameters:
        - description: The identifier of the subscription item to modify.
          in: path
          name: item
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                billing_thresholds:
                  description: Define thresholds at which an invoice will be sent, and the
                    subscription advanced to a new billing period
                expand:
                  description: Specifies which fields in the response should be expanded.
                  items:
                    type: string
                  type: array
                metadata:
                  description: Set of key-value pairs that you can attach to an object.
                    This can be useful for storing additional information about
                    the object in a structured format.
                  type: object
                off_session:
                  type: boolean
                payment_behavior:
                  enum:
                    - allow_incomplete
                    - error_if_incomplete
                  type: string
                plan:
                  description: The identifier of the new plan for this subscription item.
                  type: string
                prorate:
                  description: Flag indicating whether to
                    [prorate](https://stripe.com/docs/billing/subscriptions/prorations)
                    switching plans during a billing cycle.
                  type: boolean
                proration_date:
                  description: If set, the proration will be calculated as though the
                    subscription was updated at the given time. This can be used
                    to apply the same proration that was previewed with the
                    [upcoming invoice](#retrieve_customer_invoice) endpoint.
                  type: integer
                quantity:
                  description: The quantity you'd like to apply to the subscription item
                    you're creating.
                  type: integer
                tax_rates:
                  description: The tax rates which apply to this `subscription_item`. When
                    set, the `default_tax_rates` on the subscription do not
                    apply to this `subscription_item`.
                  items:
                    type: string
              type: object
        description: Body parameters for the request.
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/subscription_item"
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
  "/v1/subscription_items/{subscription_item}/usage_record_summaries":
    get:
      description: >-
        <p>For the specified subscription item, returns a list of summary
        objects. Each object in the list provides usage information that’s been
        summarized from multiple usage records and over a subscription billing
        period (e.g., 15 usage records in the billing plan’s month of
        September).</p>


        <p>The list is sorted in reverse-chronological order (newest first). The first list item represents the most current usage period that hasn’t ended yet. Since new usage records can still be added, the returned summary information for the subscription item’s ID should be seen as unstable until the subscription billing period ends.</p>
      operationId: GetSubscriptionItemsSubscriptionItemUsageRecordSummaries
      parameters:
        - description: Specifies which fields in the response should be expanded.
          in: query
          name: expand
          required: false
          schema:
            type: array
            items: {}
        - description: A cursor for use in pagination. `ending_before` is an object ID that
            defines your place in the list. For instance, if you make a list
            request and receive 100 objects, starting with `obj_bar`, your
            subsequent call can include `ending_before=obj_bar` in order to
            fetch the previous page of the list.
          in: query
          name: ending_before
          required: false
          schema:
            type: string
        - description: A limit on the number of objects to be returned. Limit can range
            between 1 and 100, and the default is 10.
          in: query
          name: limit
          required: false
          schema:
            type: integer
        - description: A cursor for use in pagination. `starting_after` is an object ID
            that defines your place in the list. For instance, if you make a
            list request and receive 100 objects, ending with `obj_foo`, your
            subsequent call can include `starting_after=obj_foo` in order to
            fetch the next page of the list.
          in: query
          name: starting_after
          required: false
          schema:
            type: string
        - description: Only summary items for the given subscription item.
          in: path
          name: subscription_item
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                properties:
                  data:
                    items:
                      $ref: "#/components/schemas/usage_record_summary"
                    type: array
                  has_more:
                    description: True if this list has another page of items after this one
                      that can be fetched.
                    type: boolean
                  object:
                    description: String representing the object's type. Objects of the same
                      type share the same value. Always has the value `list`.
                    enum:
                      - list
                    type: string
                  url:
                    description: The URL where this list can be accessed.
                    type: string
                required:
                  - data
                  - has_more
                  - object
                  - url
                type: object
                x-expandableFields:
                  - data
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
  "/v1/subscription_items/{subscription_item}/usage_records":
    post:
      description: >-
        <p>Creates a usage record for a specified subscription item and date,
        and fills it with a quantity.</p>


        <p>Usage records provide <code>quantity</code> information that Stripe uses to track how much a customer is using your service. With usage information and the pricing model set up by the <a href="https://stripe.com/docs/billing/subscriptions/metered-billing">metered billing</a> plan, Stripe helps you send accurate invoices to your customers.</p>


        <p>The default calculation for usage is to add up all the <code>quantity</code> values of the usage records within a billing period. You can change this default behavior with the billing plan’s <code>aggregate_usage</code> <a href="https://stripe.com/docs/api/plans/create#create_plan-aggregate_usage">parameter</a>. When there is more than one usage record with the same timestamp, Stripe adds the <code>quantity</code> values together. In most cases, this is the desired resolution, however, you can change this behavior with the <code>action</code> parameter.</p>


        <p>The default pricing model for metered billing is <a href="https://stripe.com/docs/api/plans/object#plan_object-billing_scheme">per-unit pricing</a>. For finer granularity, you can configure metered billing to have a <a href="https://stripe.com/docs/billing/subscriptions/tiers">tiered pricing</a> model.</p>
      operationId: PostSubscriptionItemsSubscriptionItemUsageRecords
      parameters:
        - description: The ID of the subscription item for this usage record.
          in: path
          name: subscription_item
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                action:
                  description: Valid values are `increment` (default) or `set`. When using
                    `increment` the specified `quantity` will be added to the
                    usage at the specified timestamp. The `set` action will
                    overwrite the usage quantity at that timestamp. If the
                    subscription has [billing
                    thresholds](https://stripe.com/docs/api/subscriptions/object#subscription_object-billing_thresholds),
                    `increment` is the only allowed value.
                  enum:
                    - increment
                    - set
                  type: string
                expand:
                  description: Specifies which fields in the response should be expanded.
                  items:
                    type: string
                  type: array
                quantity:
                  description: The usage quantity for the specified timestamp.
                  type: integer
                timestamp:
                  description: The timestamp for the usage event. This timestamp must be
                    within the current billing period of the subscription of the
                    provided `subscription_item`.
                  type: integer
              required:
                - quantity
                - timestamp
              type: object
        description: Body parameters for the request.
        required: true
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/usage_record"
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
  /v1/subscription_schedules:
    get:
      description: <p>Retrieves the list of your subscription schedules.</p>
      operationId: GetSubscriptionSchedules
      parameters:
        - description: Specifies which fields in the response should be expanded.
          in: query
          name: expand
          required: false
          schema:
            type: array
            items: {}
        - description: Only return subscription schedules that were created canceled the
            given date interval.
          in: query
          name: canceled_at
          required: false
          schema:
            type: integer
        - description: Only return subscription schedules that completed during the given
            date interval.
          in: query
          name: completed_at
          required: false
          schema:
            type: integer
        - description: Only return subscription schedules that were created during the
            given date interval.
          in: query
          name: created
          required: false
          schema:
            type: integer
        - description: Only return subscription schedules for the given customer.
          in: query
          name: customer
          required: false
          schema:
            type: string
        - description: A cursor for use in pagination. `ending_before` is an object ID that
            defines your place in the list. For instance, if you make a list
            request and receive 100 objects, starting with `obj_bar`, your
            subsequent call can include `ending_before=obj_bar` in order to
            fetch the previous page of the list.
          in: query
          name: ending_before
          required: false
          schema:
            type: string
        - description: A limit on the number of objects to be returned. Limit can range
            between 1 and 100, and the default is 10.
          in: query
          name: limit
          required: false
          schema:
            type: integer
        - description: Only return subscription schedules that were released during the
            given date interval.
          in: query
          name: released_at
          required: false
          schema:
            type: integer
        - description: Only return subscription schedules that have not started yet.
          in: query
          name: scheduled
          required: false
          schema:
            type: boolean
        - description: A cursor for use in pagination. `starting_after` is an object ID
            that defines your place in the list. For instance, if you make a
            list request and receive 100 objects, ending with `obj_foo`, your
            subsequent call can include `starting_after=obj_foo` in order to
            fetch the next page of the list.
          in: query
          name: starting_after
          required: false
          schema:
            type: string
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                properties:
                  data:
                    items:
                      $ref: "#/components/schemas/subscription_schedule"
                    type: array
                  has_more:
                    description: True if this list has another page of items after this one
                      that can be fetched.
                    type: boolean
                  object:
                    description: String representing the object's type. Objects of the same
                      type share the same value. Always has the value `list`.
                    enum:
                      - list
                    type: string
                  url:
                    description: The URL where this list can be accessed.
                    type: string
                required:
                  - data
                  - has_more
                  - object
                  - url
                type: object
                x-expandableFields:
                  - data
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
    post:
      description: <p>Creates a new subscription schedule object.</p>
      operationId: PostSubscriptionSchedules
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                billing:
                  description: This field has been renamed to `collection_method` and will
                    be removed in a future API version.
                  enum:
                    - charge_automatically
                    - send_invoice
                  type: string
                billing_thresholds:
                  description: Define thresholds at which an invoice will be sent, and the
                    subscription advanced to a new billing period. Pass an empty
                    string to remove previously-defined thresholds.
                collection_method:
                  description: Either `charge_automatically`, or `send_invoice`. When
                    charging automatically, Stripe will attempt to pay the
                    underlying subscription at the end of each billing cycle
                    using the default source attached to the customer. When
                    sending an invoice, Stripe will email your customer an
                    invoice with payment instructions. Defaults to
                    `charge_automatically` on creation.
                  enum:
                    - charge_automatically
                    - send_invoice
                  type: string
                customer:
                  description: The identifier of the customer to create the subscription
                    schedule for.
                  type: string
                default_payment_method:
                  description: ID of the default payment method for the subscription
                    schedule. It must belong to the customer associated with the
                    subscription schedule. If not set, invoices will use the
                    default payment method in the customer's invoice settings.
                  type: string
                default_source:
                  description: ID of the default payment source for the subscription
                    schedule. It must belong to the customer associated with the
                    subscription schedule and be in a chargeable state. If not
                    set, defaults to the customer's default source.
                  type: string
                end_behavior:
                  enum:
                    - cancel
                    - none
                    - release
                    - renew
                  type: string
                expand:
                  description: Specifies which fields in the response should be expanded.
                  items:
                    type: string
                  type: array
                from_subscription:
                  description: Migrate an existing subscription to be managed by a
                    subscription schedule. If this parameter is set, a
                    subscription schedule will be created using the
                    subscription's plan(s), set to auto-renew using the
                    subscription's interval. Other parameters cannot be set
                    since their values will be inferred from the subscription.
                  type: string
                invoice_settings:
                  description: All invoices will be billed using the specified settings.
                  properties:
                    days_until_due:
                      type: integer
                  title: invoice_settings_params
                  type: object
                metadata:
                  description: Set of key-value pairs that you can attach to an object.
                    This can be useful for storing additional information about
                    the object in a structured format.
                  type: object
                phases:
                  description: List representing phases of the subscription schedule. Each
                    phase can be customized to have different durations, plans,
                    and coupons. If there are multiple phases, the `end_date` of
                    one phase will always equal the `start_date` of the next
                    phase.
                  items:
                    properties:
                      application_fee_percent:
                        type: number
                      billing_thresholds: {}
                      collection_method:
                        enum:
                          - charge_automatically
                          - send_invoice
                        type: string
                      coupon:
                        type: string
                      default_payment_method:
                        type: string
                      default_tax_rates:
                        items:
                          type: string
                      end_date:
                        type: integer
                      invoice_settings:
                        properties:
                          days_until_due:
                            type: integer
                        title: invoice_settings_params
                        type: object
                      iterations:
                        type: integer
                      plans:
                        items:
                          properties:
                            billing_thresholds: {}
                            plan:
                              type: string
                            quantity:
                              type: integer
                            tax_rates:
                              items:
                                type: string
                          required:
                            - plan
                          title: configuration_item_params
                          type: object
                        type: array
                      tax_percent:
                        type: number
                      trial:
                        type: boolean
                      trial_end:
                        type: integer
                    required:
                      - plans
                    title: phase_configuration_params
                    type: object
                  type: array
                renewal_behavior:
                  description: Configures how the subscription schedule behaves when it
                    ends. Possible values are `none`, `cancel`, `renew`, or
                    `release`. `renew` will create a new subscription schedule
                    revision by adding a new phase using the most recent phase's
                    `plans` applied to a duration set by `renewal_interval`.
                    `none` will stop the subscription schedule and cancel the
                    underlying subscription. `cancel` is semantically the same
                    as `none`. `release` will stop the subscription schedule,
                    but keep the underlying subscription running.
                  enum:
                    - cancel
                    - none
                    - release
                    - renew
                  type: string
                renewal_interval:
                  description: Configuration for renewing the subscription schedule when it
                    ends. Must be set if `renewal_behavior` is `renew`.
                    Otherwise, must not be set.
                  properties:
                    interval:
                      enum:
                        - day
                        - month
                        - week
                        - year
                      type: string
                    length:
                      type: integer
                  required:
                    - interval
                    - length
                  title: renewal_interval_params
                  type: object
                start_date:
                  description: The date at which the subscription schedule starts.
              type: object
        description: Body parameters for the request.
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/subscription_schedule"
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
  "/v1/subscription_schedules/{schedule}":
    get:
      description: <p>Retrieves the details of an existing subscription schedule. You only
        need to supply the unique subscription schedule identifier that was
        returned upon subscription schedule creation.</p>
      operationId: GetSubscriptionSchedulesSchedule
      parameters:
        - description: Specifies which fields in the response should be expanded.
          in: query
          name: expand
          required: false
          schema:
            type: array
            items: {}
        - description: The identifier of the subscription schedule to be retrieved.
          in: path
          name: schedule
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/subscription_schedule"
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
    post:
      description: <p>Updates an existing subscription schedule.</p>
      operationId: PostSubscriptionSchedulesSchedule
      parameters:
        - in: path
          name: schedule
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                billing:
                  description: This field has been renamed to `collection_method` and will
                    be removed in a future API version.
                  enum:
                    - charge_automatically
                    - send_invoice
                  type: string
                billing_thresholds:
                  description: Define thresholds at which an invoice will be sent, and the
                    subscription advanced to a new billing period. Pass an empty
                    string to remove previously-defined thresholds.
                collection_method:
                  description: Either `charge_automatically`, or `send_invoice`. When
                    charging automatically, Stripe will attempt to pay the
                    underlying subscription at the end of each billing cycle
                    using the default source attached to the customer. When
                    sending an invoice, Stripe will email your customer an
                    invoice with payment instructions. Defaults to
                    `charge_automatically` on creation.
                  enum:
                    - charge_automatically
                    - send_invoice
                  type: string
                default_payment_method:
                  description: ID of the default payment method for the subscription
                    schedule. It must belong to the customer associated with the
                    subscription schedule. If not set, invoices will use the
                    default payment method in the customer's invoice settings.
                  type: string
                default_source:
                  description: ID of the default payment source for the subscription
                    schedule. It must belong to the customer associated with the
                    subscription schedule and be in a chargeable state. If not
                    set, defaults to the customer's default source.
                  type: string
                end_behavior:
                  enum:
                    - cancel
                    - none
                    - release
                    - renew
                  type: string
                expand:
                  description: Specifies which fields in the response should be expanded.
                  items:
                    type: string
                  type: array
                invoice_settings:
                  description: All invoices will be billed using the specified settings.
                  properties:
                    days_until_due:
                      type: integer
                  title: invoice_settings_params
                  type: object
                metadata:
                  description: Set of key-value pairs that you can attach to an object.
                    This can be useful for storing additional information about
                    the object in a structured format.
                  type: object
                phases:
                  description: List representing phases of the subscription schedule. Each
                    phase can be customized to have different durations, plans,
                    and coupons. If there are multiple phases, the `end_date` of
                    one phase will always equal the `start_date` of the next
                    phase. Note that past phases can be omitted.
                  items:
                    properties:
                      application_fee_percent:
                        type: number
                      billing_thresholds: {}
                      collection_method:
                        enum:
                          - charge_automatically
                          - send_invoice
                        type: string
                      coupon:
                        type: string
                      default_payment_method:
                        type: string
                      default_tax_rates:
                        items:
                          type: string
                      end_date: {}
                      invoice_settings:
                        properties:
                          days_until_due:
                            type: integer
                        title: invoice_settings_params
                        type: object
                      iterations:
                        type: integer
                      plans:
                        items:
                          properties:
                            billing_thresholds: {}
                            plan:
                              type: string
                            quantity:
                              type: integer
                            tax_rates:
                              items:
                                type: string
                          required:
                            - plan
                          title: configuration_item_params
                          type: object
                        type: array
                      start_date: {}
                      tax_percent:
                        type: number
                      trial:
                        type: boolean
                      trial_end: {}
                    required:
                      - plans
                    title: phase_configuration_params
                    type: object
                  type: array
                prorate:
                  description: If the update changes the current phase, indicates if the
                    changes should be prorated. Defaults to `true`.
                  type: boolean
                renewal_behavior:
                  description: Configures how the subscription schedule behaves when it
                    ends. Possible values are `none`, `cancel`, `renew`, or
                    `release`. `renew` will create a new subscription schedule
                    revision by adding a new phase using the most recent phase's
                    `plans` applied to a duration set by `renewal_interval`.
                    `none` will stop the subscription schedule and cancel the
                    underlying subscription. `cancel` is semantically the same
                    as `none`. `release` will stop the subscription schedule,
                    but keep the underlying subscription running.
                  enum:
                    - cancel
                    - none
                    - release
                    - renew
                  type: string
                renewal_interval:
                  description: Configuration for renewing the subscription schedule when it
                    ends. Must be set if `renewal_behavior` is `renew`.
                    Otherwise, must not be set.
                  properties:
                    interval:
                      enum:
                        - day
                        - month
                        - week
                        - year
                      type: string
                    length:
                      type: integer
                  required:
                    - interval
                    - length
                  title: renewal_interval_params
                  type: object
              type: object
        description: Body parameters for the request.
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/subscription_schedule"
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
  "/v1/subscription_schedules/{schedule}/cancel":
    post:
      description: <p>Cancels a subscription schedule and its associated subscription
        immediately (if the subscription schedule has an active subscription). A
        subscription schedule can only be canceled if its status is
        <code>not_started</code> or <code>active</code>.</p>
      operationId: PostSubscriptionSchedulesScheduleCancel
      parameters:
        - description: The identifier of the subscription schedule to be canceled.
          in: path
          name: schedule
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                expand:
                  description: Specifies which fields in the response should be expanded.
                  items:
                    type: string
                  type: array
                invoice_now:
                  description: If the subscription schedule is `active`, indicates whether
                    or not to generate a final invoice that contains any
                    un-invoiced metered usage and new/pending proration invoice
                    items. Defaults to `true`.
                  type: boolean
                prorate:
                  description: If the subscription schedule is `active`, indicates if the
                    cancellation should be prorated. Defaults to `true`.
                  type: boolean
              type: object
        description: Body parameters for the request.
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/subscription_schedule"
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
  "/v1/subscription_schedules/{schedule}/release":
    post:
      description: <p>Releases the subscription schedule immediately, which will stop
        scheduling of its phases, but leave any existing subscription in place.
        A schedule can only be released if its status is
        <code>not_started</code> or <code>active</code>. If the subscription
        schedule is currently associated with a subscription, releasing it will
        remove its <code>subscription</code> property and set the subscription’s
        ID to the <code>released_subscription</code> property.</p>
      operationId: PostSubscriptionSchedulesScheduleRelease
      parameters:
        - description: The identifier of the subscription schedule to be released.
          in: path
          name: schedule
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                expand:
                  description: Specifies which fields in the response should be expanded.
                  items:
                    type: string
                  type: array
                preserve_cancel_date:
                  description: Keep any cancellation on the subscription that the schedule
                    has set
                  type: boolean
              type: object
        description: Body parameters for the request.
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/subscription_schedule"
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
  /v1/subscriptions:
    get:
      description: <p>By default, returns a list of subscriptions that have not been
        canceled. In order to list canceled subscriptions, specify
        <code>status=canceled</code>.</p>
      operationId: GetSubscriptions
      parameters:
        - description: Specifies which fields in the response should be expanded.
          in: query
          name: expand
          required: false
          schema:
            type: array
            items: {}
        - description: This field has been renamed to `collection_method` and will be
            removed in a future API version.
          in: query
          name: billing
          required: false
          schema:
            type: string
        - description: The collection method of the subscriptions to retrieve. Either
            `charge_automatically` or `send_invoice`.
          in: query
          name: collection_method
          required: false
          schema:
            type: string
        - in: query
          name: created
          required: false
          schema:
            type: integer
        - in: query
          name: current_period_end
          required: false
          schema:
            type: integer
        - in: query
          name: current_period_start
          required: false
          schema:
            type: integer
        - description: The ID of the customer whose subscriptions will be retrieved.
          in: query
          name: customer
          required: false
          schema:
            type: string
        - description: A cursor for use in pagination. `ending_before` is an object ID that
            defines your place in the list. For instance, if you make a list
            request and receive 100 objects, starting with `obj_bar`, your
            subsequent call can include `ending_before=obj_bar` in order to
            fetch the previous page of the list.
          in: query
          name: ending_before
          required: false
          schema:
            type: string
        - description: A limit on the number of objects to be returned. Limit can range
            between 1 and 100, and the default is 10.
          in: query
          name: limit
          required: false
          schema:
            type: integer
        - description: The ID of the plan whose subscriptions will be retrieved.
          in: query
          name: plan
          required: false
          schema:
            type: string
        - description: A cursor for use in pagination. `starting_after` is an object ID
            that defines your place in the list. For instance, if you make a
            list request and receive 100 objects, ending with `obj_foo`, your
            subsequent call can include `starting_after=obj_foo` in order to
            fetch the next page of the list.
          in: query
          name: starting_after
          required: false
          schema:
            type: string
        - description: "The status of the subscriptions to retrieve. One of: `incomplete`,
            `incomplete_expired`, `trialing`, `active`, `past_due`, `unpaid`,
            `canceled`, or `all`. Passing in a value of `canceled` will return
            all canceled subscriptions, including those belonging to deleted
            customers. Passing in a value of `all` will return subscriptions of
            all statuses."
          in: query
          name: status
          required: false
          schema:
            type: string
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                properties:
                  data:
                    items:
                      $ref: "#/components/schemas/subscription"
                    type: array
                  has_more:
                    description: True if this list has another page of items after this one
                      that can be fetched.
                    type: boolean
                  object:
                    description: String representing the object's type. Objects of the same
                      type share the same value. Always has the value `list`.
                    enum:
                      - list
                    type: string
                  url:
                    description: The URL where this list can be accessed.
                    type: string
                required:
                  - data
                  - has_more
                  - object
                  - url
                type: object
                x-expandableFields:
                  - data
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
    post:
      description: <p>Creates a new subscription on an existing customer.</p>
      operationId: PostSubscriptions
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                application_fee_percent:
                  description: A non-negative decimal between 0 and 100, with at most two
                    decimal places. This represents the percentage of the
                    subscription invoice subtotal that will be transferred to
                    the application owner's Stripe account. The request must be
                    made with an OAuth key in order to set an application fee
                    percentage. For more information, see the application fees
                    [documentation](https://stripe.com/docs/connect/subscriptions#collecting-fees-on-subscriptions).
                  type: number
                backdate_start_date:
                  description: For new subscriptions, a past timestamp to backdate the
                    subscription's start date to. If set, the first invoice will
                    contain a proration for the timespan between the start date
                    and the current time. Can be combined with trials and the
                    billing cycle anchor.
                  type: integer
                billing:
                  description: This field has been renamed to `collection_method` and will
                    be removed in a future API version.
                  enum:
                    - charge_automatically
                    - send_invoice
                  type: string
                billing_cycle_anchor:
                  description: A future timestamp to anchor the subscription's [billing
                    cycle](https://stripe.com/docs/subscriptions/billing-cycle).
                    This is used to determine the date of the first full
                    invoice, and, for plans with `month` or `year` intervals,
                    the day of the month for subsequent invoices.
                  type: integer
                billing_thresholds:
                  description: Define thresholds at which an invoice will be sent, and the
                    subscription advanced to a new billing period. Pass an empty
                    string to remove previously-defined thresholds.
                cancel_at:
                  description: A timestamp at which the subscription should cancel. If set
                    to a date before the current period ends this will cause a
                    proration if `prorate=true`.
                  type: integer
                cancel_at_period_end:
                  description: Boolean indicating whether this subscription should cancel
                    at the end of the current period.
                  type: boolean
                collection_method:
                  description: Either `charge_automatically`, or `send_invoice`. When
                    charging automatically, Stripe will attempt to pay this
                    subscription at the end of the cycle using the default
                    source attached to the customer. When sending an invoice,
                    Stripe will email your customer an invoice with payment
                    instructions. Defaults to `charge_automatically`.
                  enum:
                    - charge_automatically
                    - send_invoice
                  type: string
                coupon:
                  description: The code of the coupon to apply to this subscription. A
                    coupon applied to a subscription will only affect invoices
                    created for that particular subscription.
                  type: string
                customer:
                  description: The identifier of the customer to subscribe.
                  type: string
                days_until_due:
                  description: Number of days a customer has to pay invoices generated by
                    this subscription. Valid only for subscriptions where
                    `collection_method` is set to `send_invoice`.
                  type: integer
                default_payment_method:
                  description: ID of the default payment method for the subscription. It
                    must belong to the customer associated with the
                    subscription. If not set, invoices will use the default
                    payment method in the customer's invoice settings.
                  type: string
                default_source:
                  description: ID of the default payment source for the subscription. It
                    must belong to the customer associated with the subscription
                    and be in a chargeable state. If not set, defaults to the
                    customer's default source.
                  type: string
                default_tax_rates:
                  description: The tax rates that will apply to any subscription item that
                    does not have `tax_rates` set. Invoices created will have
                    their `default_tax_rates` populated from the subscription.
                  items:
                    type: string
                expand:
                  description: Specifies which fields in the response should be expanded.
                  items:
                    type: string
                  type: array
                items:
                  description: List of subscription items, each with an attached plan.
                  items:
                    properties:
                      billing_thresholds: {}
                      metadata:
                        type: object
                      plan:
                        type: string
                      quantity:
                        type: integer
                      tax_rates:
                        items:
                          type: string
                    required:
                      - plan
                    title: subscription_item_create_params
                    type: object
                  type: array
                metadata:
                  description: A set of key-value pairs that you can attach to a
                    `Subscription` object. It can be useful for storing
                    additional information about the subscription in a
                    structured format.
                  type: object
                off_session:
                  description: Indicates if a customer is on or off-session while an
                    invoice payment is attempted.
                  type: boolean
                payment_behavior:
                  description: >-
                    Use `allow_incomplete` to create subscriptions with
                    `status=incomplete` if its first invoice cannot be paid.

                    Creating subscriptions with this status allows you to manage scenarios where additional user actions are needed to pay

                    a subscription's invoice. For example, SCA regulation may require 3DS authentication to complete payment. See the

                    [SCA Migration Guide](https://stripe.com/docs/billing/migration/strong-customer-authentication) for Billing to learn more. This is the

                    default behavior.


                    Use `error_if_incomplete` if you want Stripe to return an HTTP 402 status code if a subscription's first invoice

                    cannot be paid. For example, if a payment method requires 3DS authentication due to SCA regulation and further

                    user action is needed, this parameter does not create a subscription and returns an error instead. This was the default

                    behavior for API versions prior to 2019-03-14. See the [changelog](https://stripe.com/docs/upgrades#2019-03-14) to learn more.
                  enum:
                    - allow_incomplete
                    - error_if_incomplete
                  type: string
                prorate:
                  description: Boolean (defaults to `true`) telling us whether to [credit
                    for unused
                    time](https://stripe.com/docs/subscriptions/billing-cycle#prorations)
                    when the billing cycle changes (e.g. when switching plans,
                    resetting `billing_cycle_anchor=now`, or starting a trial),
                    or if an item's `quantity` changes. If `false`, the anchor
                    period will be free (similar to a trial) and no proration
                    adjustments will be created.
                  type: boolean
                tax_percent:
                  description: A non-negative decimal (with at most four decimal places)
                    between 0 and 100. This represents the percentage of the
                    subscription invoice subtotal that will be calculated and
                    added as tax to the final amount in each billing period. For
                    example, a plan which charges $10/month with a `tax_percent`
                    of `20.0` will charge $12 per invoice. To unset a
                    previously-set value, pass an empty string. This field has
                    been deprecated and will be removed in a future API version,
                    for further information view the [migration
                    docs](https://stripe.com/docs/billing/migration/taxes) for
                    `tax_rates`.
                trial_end:
                  description: Unix timestamp representing the end of the trial period the
                    customer will get before being charged for the first time.
                    This will always overwrite any trials that might apply via a
                    subscribed plan. If set, trial_end will override the default
                    trial period of the plan the customer is being subscribed
                    to. The special value `now` can be provided to end the
                    customer's trial immediately. Can be at most two years from
                    `billing_cycle_anchor`.
                trial_from_plan:
                  description: Indicates if a plan's `trial_period_days` should be applied
                    to the subscription. Setting `trial_end` per subscription is
                    preferred, and this defaults to `false`. Setting this flag
                    to `true` together with `trial_end` is not allowed.
                  type: boolean
                trial_period_days:
                  description: Integer representing the number of trial period days before
                    the customer is charged for the first time. This will always
                    overwrite any trials that might apply via a subscribed plan.
                  type: integer
              required:
                - customer
              type: object
        description: Body parameters for the request.
        required: true
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/subscription"
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
  "/v1/subscriptions/{subscription_exposed_id}":
    delete:
      description: >-
        <p>Cancels a customer’s subscription immediately. The customer will not
        be charged again for the subscription.</p>


        <p>Note, however, that any pending invoice items that you’ve created will still be charged for at the end of the period, unless manually <a href="#delete_invoiceitem">deleted</a>. If you’ve set the subscription to cancel at the end of the period, any pending prorations will also be left in place and collected at the end of the period. But if the subscription is set to cancel immediately, pending prorations will be removed.</p>


        <p>By default, upon subscription cancellation, Stripe will stop automatic collection of all finalized invoices for the customer. This is intended to prevent unexpected payment attempts after the customer has canceled a subscription. However, you can resume automatic collection of the invoices manually after subscription cancellation to have us proceed. Or, you could check for unpaid invoices before allowing the customer to cancel the subscription at all.</p>
      operationId: DeleteSubscriptionsSubscriptionExposedId
      parameters:
        - in: path
          name: subscription_exposed_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                invoice_now:
                  description: Will generate a final invoice that invoices for any
                    un-invoiced metered usage and new/pending proration invoice
                    items.
                  type: boolean
                prorate:
                  description: Will generate a proration invoice item that credits
                    remaining unused time until the subscription period end.
                  type: boolean
              type: object
        description: Body parameters for the request.
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/subscription"
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
    get:
      description: <p>Retrieves the subscription with the given ID.</p>
      operationId: GetSubscriptionsSubscriptionExposedId
      parameters:
        - description: Specifies which fields in the response should be expanded.
          in: query
          name: expand
          required: false
          schema:
            type: array
            items: {}
        - in: path
          name: subscription_exposed_id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/subscription"
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
    post:
      description: <p>Updates an existing subscription on a customer to match the specified
        parameters. When changing plans or quantities, we will optionally
        prorate the price we charge next month to make up for any price changes.
        To preview how the proration will be calculated, use the <a
        href="#upcoming_invoice">upcoming invoice</a> endpoint.</p>
      operationId: PostSubscriptionsSubscriptionExposedId
      parameters:
        - in: path
          name: subscription_exposed_id
          required: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/PostCustomersCustomerSubscriptionsSubscri\
          ptionExposedIdPayload"
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/subscription"
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
  "/v1/subscriptions/{subscription_exposed_id}/discount":
    delete:
      description: <p>Removes the currently applied discount on a subscription.</p>
      operationId: DeleteSubscriptionsSubscriptionExposedIdDiscount
      parameters:
        - in: path
          name: subscription_exposed_id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/deleted_discount"
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
  /v1/tax_rates:
    get:
      description: <p>Returns a list of your tax rates. Tax rates are returned sorted by
        creation date, with the most recently created tax rates appearing
        first.</p>
      operationId: GetTaxRates
      parameters:
        - description: Specifies which fields in the response should be expanded.
          in: query
          name: expand
          required: false
          schema:
            type: array
            items: {}
        - description: Optional flag to filter by tax rates that are either active or not
            active (archived)
          in: query
          name: active
          required: false
          schema:
            type: boolean
        - description: Optional range for filtering created date
          in: query
          name: created
          required: false
          schema:
            type: integer
        - description: A cursor for use in pagination. `ending_before` is an object ID that
            defines your place in the list. For instance, if you make a list
            request and receive 100 objects, starting with `obj_bar`, your
            subsequent call can include `ending_before=obj_bar` in order to
            fetch the previous page of the list.
          in: query
          name: ending_before
          required: false
          schema:
            type: string
        - description: Optional flag to filter by tax rates that are inclusive (or those
            that are not inclusive)
          in: query
          name: inclusive
          required: false
          schema:
            type: boolean
        - description: A limit on the number of objects to be returned. Limit can range
            between 1 and 100, and the default is 10.
          in: query
          name: limit
          required: false
          schema:
            type: integer
        - description: A cursor for use in pagination. `starting_after` is an object ID
            that defines your place in the list. For instance, if you make a
            list request and receive 100 objects, ending with `obj_foo`, your
            subsequent call can include `starting_after=obj_foo` in order to
            fetch the next page of the list.
          in: query
          name: starting_after
          required: false
          schema:
            type: string
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                properties:
                  data:
                    items:
                      $ref: "#/components/schemas/tax_rate"
                    type: array
                  has_more:
                    description: True if this list has another page of items after this one
                      that can be fetched.
                    type: boolean
                  object:
                    description: String representing the object's type. Objects of the same
                      type share the same value. Always has the value `list`.
                    enum:
                      - list
                    type: string
                  url:
                    description: The URL where this list can be accessed.
                    type: string
                required:
                  - data
                  - has_more
                  - object
                  - url
                type: object
                x-expandableFields:
                  - data
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
    post:
      description: <p>Creates a new tax rate.</p>
      operationId: PostTaxRates
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                active:
                  description: Flag determining whether the tax rate is active or inactive.
                    Inactive tax rates continue to work where they are currently
                    applied however they cannot be used for new applications.
                  type: boolean
                description:
                  description: An arbitrary string attached to the tax rate for your
                    internal use only. It will not be visible to your customers.
                  type: string
                display_name:
                  description: The display name of the tax rate, which will be shown to
                    users.
                  type: string
                expand:
                  description: Specifies which fields in the response should be expanded.
                  items:
                    type: string
                  type: array
                inclusive:
                  description: This specifies if the tax rate is inclusive or exclusive.
                  type: boolean
                jurisdiction:
                  description: The jurisdiction for the tax rate.
                  type: string
                metadata:
                  description: Set of key-value pairs that you can attach to an object.
                    This can be useful for storing additional information about
                    the object in a structured format. Individual keys can be
                    unset by posting an empty value to them. All keys can be
                    unset by posting an empty value to `metadata`.
                  type: object
                percentage:
                  description: This represents the tax rate percent out of 100.
                  type: number
              required:
                - display_name
                - inclusive
                - percentage
              type: object
        description: Body parameters for the request.
        required: true
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/tax_rate"
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
  "/v1/tax_rates/{tax_rate}":
    get:
      description: <p>Retrieves a tax rate with the given ID</p>
      operationId: GetTaxRatesTaxRate
      parameters:
        - description: Specifies which fields in the response should be expanded.
          in: query
          name: expand
          required: false
          schema:
            type: array
            items: {}
        - description: The ID of the desired tax rate.
          in: path
          name: tax_rate
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/tax_rate"
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
    post:
      description: <p>Updates an existing tax rate.</p>
      operationId: PostTaxRatesTaxRate
      parameters:
        - description: ID of the tax rate to update.
          in: path
          name: tax_rate
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                active:
                  description: Flag determining whether the tax rate is active or inactive.
                    Inactive tax rates continue to work where they are currently
                    applied however they cannot be used for new applications.
                  type: boolean
                description:
                  description: An arbitrary string attached to the tax rate for your
                    internal use only. It will not be visible to your customers.
                  type: string
                display_name:
                  description: The display name of the tax rate, which will be shown to
                    users.
                  type: string
                expand:
                  description: Specifies which fields in the response should be expanded.
                  items:
                    type: string
                  type: array
                jurisdiction:
                  description: The jurisdiction for the tax rate.
                  type: string
                metadata:
                  description: Set of key-value pairs that you can attach to an object.
                    This can be useful for storing additional information about
                    the object in a structured format. Individual keys can be
                    unset by posting an empty value to them. All keys can be
                    unset by posting an empty value to `metadata`.
                  type: object
              type: object
        description: Body parameters for the request.
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/tax_rate"
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
  /v1/terminal/connection_tokens:
    post:
      description: <p>To connect to a reader the Stripe Terminal SDK needs to retrieve a
        short-lived connection token from Stripe, proxied through your server.
        On your backend, add an endpoint that creates and returns a connection
        token.</p>
      operationId: PostTerminalConnectionTokens
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                expand:
                  description: Specifies which fields in the response should be expanded.
                  items:
                    type: string
                  type: array
                location:
                  description: The id of the location that this connection token is scoped
                    to. If specified the connection token will only be usable
                    with readers assigned to that location, otherwise the
                    connection token will be usable with all readers.
                  type: string
              type: object
        description: Body parameters for the request.
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/terminal.connection_token"
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
  /v1/terminal/locations:
    get:
      description: <p>Returns a list of <code>Location</code> objects.</p>
      operationId: GetTerminalLocations
      parameters:
        - description: Specifies which fields in the response should be expanded.
          in: query
          name: expand
          required: false
          schema:
            type: array
            items: {}
        - description: A cursor for use in pagination. `ending_before` is an object ID that
            defines your place in the list. For instance, if you make a list
            request and receive 100 objects, starting with `obj_bar`, your
            subsequent call can include `ending_before=obj_bar` in order to
            fetch the previous page of the list.
          in: query
          name: ending_before
          required: false
          schema:
            type: string
        - description: A limit on the number of objects to be returned. Limit can range
            between 1 and 100, and the default is 10.
          in: query
          name: limit
          required: false
          schema:
            type: integer
        - description: A cursor for use in pagination. `starting_after` is an object ID
            that defines your place in the list. For instance, if you make a
            list request and receive 100 objects, ending with `obj_foo`, your
            subsequent call can include `starting_after=obj_foo` in order to
            fetch the next page of the list.
          in: query
          name: starting_after
          required: false
          schema:
            type: string
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                properties:
                  data:
                    items:
                      $ref: "#/components/schemas/terminal.location"
                    type: array
                  has_more:
                    description: True if this list has another page of items after this one
                      that can be fetched.
                    type: boolean
                  object:
                    description: String representing the object's type. Objects of the same
                      type share the same value. Always has the value `list`.
                    enum:
                      - list
                    type: string
                  url:
                    description: The URL where this list can be accessed.
                    type: string
                required:
                  - data
                  - has_more
                  - object
                  - url
                title: TerminalLocationLocationList
                type: object
                x-expandableFields:
                  - data
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
    post:
      description: <p>Creates a new <code>Location</code> object.</p>
      operationId: PostTerminalLocations
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                address:
                  description: The full address of the location.
                  properties:
                    city:
                      type: string
                    country:
                      type: string
                    line1:
                      type: string
                    line2:
                      type: string
                    postal_code:
                      type: string
                    state:
                      type: string
                  required:
                    - country
                  title: required_country_address
                  type: object
                display_name:
                  description: A name for the location.
                  type: string
                expand:
                  description: Specifies which fields in the response should be expanded.
                  items:
                    type: string
                  type: array
              required:
                - address
                - display_name
              type: object
        description: Body parameters for the request.
        required: true
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/terminal.location"
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
  "/v1/terminal/locations/{location}":
    delete:
      description: <p>Deletes a <code>Location</code> object.</p>
      operationId: DeleteTerminalLocationsLocation
      parameters:
        - description: The identifier of the location to be deleted.
          in: path
          name: location
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/deleted_terminal.location"
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
    get:
      description: <p>Retrieves a <code>Location</code> object.</p>
      operationId: GetTerminalLocationsLocation
      parameters:
        - description: Specifies which fields in the response should be expanded.
          in: query
          name: expand
          required: false
          schema:
            type: array
            items: {}
        - description: The identifier of the location to be retrieved.
          in: path
          name: location
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/terminal.location"
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
    post:
      description: <p>Updates a <code>Location</code> object by setting the values of the
        parameters passed. Any parameters not provided will be left
        unchanged.</p>
      operationId: PostTerminalLocationsLocation
      parameters:
        - description: The identifier of the location to be updated.
          in: path
          name: location
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                address:
                  description: The full address of the location.
                  properties:
                    city:
                      type: string
                    country:
                      type: string
                    line1:
                      type: string
                    line2:
                      type: string
                    postal_code:
                      type: string
                    state:
                      type: string
                  required:
                    - country
                  title: required_country_address
                  type: object
                display_name:
                  description: A name for the location.
                  type: string
                expand:
                  description: Specifies which fields in the response should be expanded.
                  items:
                    type: string
                  type: array
              type: object
        description: Body parameters for the request.
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/terminal.location"
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
  /v1/terminal/readers:
    get:
      description: <p>Returns a list of <code>Reader</code> objects.</p>
      operationId: GetTerminalReaders
      parameters:
        - description: Specifies which fields in the response should be expanded.
          in: query
          name: expand
          required: false
          schema:
            type: array
            items: {}
        - description: A cursor for use in pagination. `ending_before` is an object ID that
            defines your place in the list. For instance, if you make a list
            request and receive 100 objects, starting with `obj_bar`, your
            subsequent call can include `ending_before=obj_bar` in order to
            fetch the previous page of the list.
          in: query
          name: ending_before
          required: false
          schema:
            type: string
        - description: A limit on the number of objects to be returned. Limit can range
            between 1 and 100, and the default is 10.
          in: query
          name: limit
          required: false
          schema:
            type: integer
        - description: A location ID to filter the response list to only readers at the
            specific location
          in: query
          name: location
          required: false
          schema:
            type: string
        - description: A cursor for use in pagination. `starting_after` is an object ID
            that defines your place in the list. For instance, if you make a
            list request and receive 100 objects, ending with `obj_foo`, your
            subsequent call can include `starting_after=obj_foo` in order to
            fetch the next page of the list.
          in: query
          name: starting_after
          required: false
          schema:
            type: string
        - description: A status filter to filter readers to only offline or online readers
          in: query
          name: status
          required: false
          schema:
            type: string
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                properties:
                  data:
                    description: A list of readers
                    items:
                      $ref: "#/components/schemas/terminal.reader"
                    type: array
                  has_more:
                    description: True if this list has another page of items after this one
                      that can be fetched.
                    type: boolean
                  object:
                    description: String representing the object's type. Objects of the same
                      type share the same value. Always has the value `list`.
                    enum:
                      - list
                    type: string
                  url:
                    description: The URL where this list can be accessed.
                    type: string
                required:
                  - data
                  - has_more
                  - object
                  - url
                title: TerminalReaderRetrieveReader
                type: object
                x-expandableFields:
                  - data
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
    post:
      description: <p>Creates a new <code>Reader</code> object.</p>
      operationId: PostTerminalReaders
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                expand:
                  description: Specifies which fields in the response should be expanded.
                  items:
                    type: string
                  type: array
                label:
                  description: Custom label given to the reader for easier identification.
                    If no label is specified, the registration code will be
                    used.
                  type: string
                location:
                  description: The location to assign the reader to. If no location is
                    specified, the reader will be assigned to the account's
                    default location.
                  type: string
                registration_code:
                  description: A code generated by the reader used for registering to an
                    account.
                  type: string
              required:
                - registration_code
              type: object
        description: Body parameters for the request.
        required: true
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/terminal.reader"
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
  "/v1/terminal/readers/{reader}":
    delete:
      description: <p>Deletes a <code>Reader</code> object.</p>
      operationId: DeleteTerminalReadersReader
      parameters:
        - description: The identifier of the reader to be deleted.
          in: path
          name: reader
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/deleted_terminal.reader"
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
    get:
      description: <p>Retrieves a <code>Reader</code> object.</p>
      operationId: GetTerminalReadersReader
      parameters:
        - description: Specifies which fields in the response should be expanded.
          in: query
          name: expand
          required: false
          schema:
            type: array
            items: {}
        - description: The identifier of the reader to be retrieved.
          in: path
          name: reader
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/terminal.reader"
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
    post:
      description: <p>Updates a <code>Reader</code> object by setting the values of the
        parameters passed. Any parameters not provided will be left
        unchanged.</p>
      operationId: PostTerminalReadersReader
      parameters:
        - description: The identifier of the reader to be updated.
          in: path
          name: reader
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                expand:
                  description: Specifies which fields in the response should be expanded.
                  items:
                    type: string
                  type: array
                label:
                  description: The new label of the reader.
                  type: string
              type: object
        description: Body parameters for the request.
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/terminal.reader"
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
  /v1/tokens:
    post:
      description: >-
        <p>Creates a single-use token that represents a bank account’s details.

        This token can be used with any API method in place of a bank account dictionary. This token can be used only once, by attaching it to a <a href="#accounts">Custom account</a>.</p>
      operationId: PostTokens
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                account:
                  description: Information for the account this token will represent.
                  properties:
                    business_type:
                      type: string
                    company:
                      properties:
                        address:
                          properties:
                            city:
                              type: string
                            country:
                              type: string
                            line1:
                              type: string
                            line2:
                              type: string
                            postal_code:
                              type: string
                            state:
                              type: string
                          title: address_specs
                          type: object
                        address_kana:
                          properties:
                            city:
                              type: string
                            country:
                              type: string
                            line1:
                              type: string
                            line2:
                              type: string
                            postal_code:
                              type: string
                            state:
                              type: string
                            town:
                              type: string
                          title: japan_address_kana_specs
                          type: object
                        address_kanji:
                          properties:
                            city:
                              type: string
                            country:
                              type: string
                            line1:
                              type: string
                            line2:
                              type: string
                            postal_code:
                              type: string
                            state:
                              type: string
                            town:
                              type: string
                          title: japan_address_kanji_specs
                          type: object
                        directors_provided:
                          type: boolean
                        name:
                          type: string
                        name_kana:
                          type: string
                        name_kanji:
                          type: string
                        owners_provided:
                          type: boolean
                        phone:
                          type: string
                        tax_id:
                          type: string
                        tax_id_registrar:
                          type: string
                        vat_id:
                          type: string
                        verification:
                          properties:
                            document:
                              properties:
                                back:
                                  type: string
                                front:
                                  type: string
                              title: verification_document_specs
                              type: object
                          title: verification_specs
                          type: object
                      title: company_specs
                      type: object
                    individual:
                      properties:
                        address:
                          properties:
                            city:
                              type: string
                            country:
                              type: string
                            line1:
                              type: string
                            line2:
                              type: string
                            postal_code:
                              type: string
                            state:
                              type: string
                          title: address_specs
                          type: object
                        address_kana:
                          properties:
                            city:
                              type: string
                            country:
                              type: string
                            line1:
                              type: string
                            line2:
                              type: string
                            postal_code:
                              type: string
                            state:
                              type: string
                            town:
                              type: string
                          title: japan_address_kana_specs
                          type: object
                        address_kanji:
                          properties:
                            city:
                              type: string
                            country:
                              type: string
                            line1:
                              type: string
                            line2:
                              type: string
                            postal_code:
                              type: string
                            state:
                              type: string
                            town:
                              type: string
                          title: japan_address_kanji_specs
                          type: object
                        dob: {}
                        email:
                          type: string
                        first_name:
                          type: string
                        first_name_kana:
                          type: string
                        first_name_kanji:
                          type: string
                        gender:
                          type: string
                        id_number:
                          type: string
                        last_name:
                          type: string
                        last_name_kana:
                          type: string
                        last_name_kanji:
                          type: string
                        maiden_name:
                          type: string
                        metadata:
                          type: object
                        phone:
                          type: string
                        ssn_last_4:
                          type: string
                        verification:
                          properties:
                            additional_document:
                              properties:
                                back:
                                  type: string
                                front:
                                  type: string
                              title: person_verification_document_specs
                              type: object
                            document:
                              properties:
                                back:
                                  type: string
                                front:
                                  type: string
                              title: person_verification_document_specs
                              type: object
                          title: person_verification_specs
                          type: object
                      title: individual_specs
                      type: object
                    tos_shown_and_accepted:
                      type: boolean
                  title: connect_js_account_token_specs
                  type: object
                bank_account:
                  description: The bank account this token will represent.
                  properties:
                    account_holder_name:
                      type: string
                    account_holder_type:
                      enum:
                        - company
                        - individual
                      type: string
                    account_number:
                      type: string
                    country:
                      type: string
                    currency:
                      type: string
                    routing_number:
                      type: string
                  required:
                    - account_number
                    - country
                  title: token_create_bank_account
                  type: object
                card: {}
                customer:
                  description: The customer (owned by the application's account) for which
                    to create a token. For use only with [Stripe
                    Connect](https://stripe.com/docs/connect). Also, this can be
                    used only with an [OAuth access
                    token](https://stripe.com/docs/connect/standard-accounts) or
                    [Stripe-Account
                    header](https://stripe.com/docs/connect/authentication). For
                    more details, see [Shared
                    Customers](https://stripe.com/docs/connect/shared-customers).
                  type: string
                expand:
                  description: Specifies which fields in the response should be expanded.
                  items:
                    type: string
                  type: array
                person:
                  description: Information for the person this token will represent.
                  properties:
                    address:
                      properties:
                        city:
                          type: string
                        country:
                          type: string
                        line1:
                          type: string
                        line2:
                          type: string
                        postal_code:
                          type: string
                        state:
                          type: string
                      title: address_specs
                      type: object
                    address_kana:
                      properties:
                        city:
                          type: string
                        country:
                          type: string
                        line1:
                          type: string
                        line2:
                          type: string
                        postal_code:
                          type: string
                        state:
                          type: string
                        town:
                          type: string
                      title: japan_address_kana_specs
                      type: object
                    address_kanji:
                      properties:
                        city:
                          type: string
                        country:
                          type: string
                        line1:
                          type: string
                        line2:
                          type: string
                        postal_code:
                          type: string
                        state:
                          type: string
                        town:
                          type: string
                      title: japan_address_kanji_specs
                      type: object
                    dob: {}
                    email:
                      type: string
                    first_name:
                      type: string
                    first_name_kana:
                      type: string
                    first_name_kanji:
                      type: string
                    gender:
                      type: string
                    id_number:
                      type: string
                    last_name:
                      type: string
                    last_name_kana:
                      type: string
                    last_name_kanji:
                      type: string
                    maiden_name:
                      type: string
                    metadata:
                      type: object
                    phone:
                      type: string
                    relationship:
                      properties:
                        director:
                          type: boolean
                        executive:
                          type: boolean
                        owner:
                          type: boolean
                        percent_ownership: {}
                        representative:
                          type: boolean
                        title:
                          type: string
                      title: relationship_specs
                      type: object
                    ssn_last_4:
                      type: string
                    verification:
                      properties:
                        additional_document:
                          properties:
                            back:
                              type: string
                            front:
                              type: string
                          title: person_verification_document_specs
                          type: object
                        document:
                          properties:
                            back:
                              type: string
                            front:
                              type: string
                          title: person_verification_document_specs
                          type: object
                      title: person_verification_specs
                      type: object
                  title: person_token_specs
                  type: object
                pii:
                  description: The PII this token will represent.
                  properties:
                    id_number:
                      type: string
                  title: pii_token_specs
                  type: object
              type: object
        description: Body parameters for the request.
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/token"
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
  "/v1/tokens/{token}":
    get:
      description: <p>Retrieves the token with the given ID.</p>
      operationId: GetTokensToken
      parameters:
        - description: Specifies which fields in the response should be expanded.
          in: query
          name: expand
          required: false
          schema:
            type: array
            items: {}
        - description: The ID of the desired token.
          in: path
          name: token
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/token"
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
  /v1/topups:
    get:
      description: <p>Returns a list of top-ups.</p>
      operationId: GetTopups
      parameters:
        - description: Specifies which fields in the response should be expanded.
          in: query
          name: expand
          required: false
          schema:
            type: array
            items: {}
        - description: A positive integer representing how much to transfer.
          in: query
          name: amount
          required: false
          schema:
            type: integer
        - description: A filter on the list, based on the object `created` field. The value
            can be a string with an integer Unix timestamp, or it can be a
            dictionary with a number of different query options.
          in: query
          name: created
          required: false
          schema:
            type: integer
        - description: A cursor for use in pagination. `ending_before` is an object ID that
            defines your place in the list. For instance, if you make a list
            request and receive 100 objects, starting with `obj_bar`, your
            subsequent call can include `ending_before=obj_bar` in order to
            fetch the previous page of the list.
          in: query
          name: ending_before
          required: false
          schema:
            type: string
        - description: A limit on the number of objects to be returned. Limit can range
            between 1 and 100, and the default is 10.
          in: query
          name: limit
          required: false
          schema:
            type: integer
        - description: A cursor for use in pagination. `starting_after` is an object ID
            that defines your place in the list. For instance, if you make a
            list request and receive 100 objects, ending with `obj_foo`, your
            subsequent call can include `starting_after=obj_foo` in order to
            fetch the next page of the list.
          in: query
          name: starting_after
          required: false
          schema:
            type: string
        - description: Only return top-ups that have the given status. One of `canceled`,
            `failed`, `pending` or `succeeded`.
          in: query
          name: status
          required: false
          schema:
            type: string
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                properties:
                  data:
                    items:
                      $ref: "#/components/schemas/topup"
                    type: array
                  has_more:
                    description: True if this list has another page of items after this one
                      that can be fetched.
                    type: boolean
                  object:
                    description: String representing the object's type. Objects of the same
                      type share the same value. Always has the value `list`.
                    enum:
                      - list
                    type: string
                  url:
                    description: The URL where this list can be accessed.
                    type: string
                required:
                  - data
                  - has_more
                  - object
                  - url
                title: TopupList
                type: object
                x-expandableFields:
                  - data
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
    post:
      description: <p>Top up the balance of an account</p>
      operationId: PostTopups
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                amount:
                  description: A positive integer representing how much to transfer.
                  type: integer
                currency:
                  description: Three-letter [ISO currency
                    code](https://www.iso.org/iso-4217-currency-codes.html), in
                    lowercase. Must be a [supported
                    currency](https://stripe.com/docs/currencies).
                  type: string
                description:
                  description: An arbitrary string attached to the object. Often useful for
                    displaying to users.
                  type: string
                expand:
                  description: Specifies which fields in the response should be expanded.
                  items:
                    type: string
                  type: array
                metadata:
                  description: Set of key-value pairs that you can attach to an object.
                    This can be useful for storing additional information about
                    the object in a structured format.
                  type: object
                source:
                  description: The ID of a source to transfer funds from. For most users,
                    this should be left unspecified which will use the bank
                    account that was set up in the dashboard for the specified
                    currency. In test mode, this can be a test bank token (see
                    [Testing
                    Top-ups](https://stripe.com/docs/connect/testing#testing-top-ups)).
                  type: string
                statement_descriptor:
                  description: Extra information about a top-up for the source's bank
                    statement. Limited to 15 ASCII characters.
                  type: string
                transfer_group:
                  description: A string that identifies this top-up as part of a group.
                  type: string
              required:
                - amount
                - currency
              type: object
        description: Body parameters for the request.
        required: true
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/topup"
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
  "/v1/topups/{topup}":
    get:
      description: <p>Retrieves the details of a top-up that has previously been created.
        Supply the unique top-up ID that was returned from your previous
        request, and Stripe will return the corresponding top-up
        information.</p>
      operationId: GetTopupsTopup
      parameters:
        - description: Specifies which fields in the response should be expanded.
          in: query
          name: expand
          required: false
          schema:
            type: array
            items: {}
        - description: The ID of the top-up to retrieve.
          in: path
          name: topup
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/topup"
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
    post:
      description: <p>Updates the metadata of a top-up. Other top-up details are not
        editable by design.</p>
      operationId: PostTopupsTopup
      parameters:
        - description: The ID of the top-up to retrieve.
          in: path
          name: topup
          required: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/PostCustomersCustomerBalanceTransactionsT\
          ransactionPayload"
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/topup"
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
  "/v1/topups/{topup}/cancel":
    post:
      description: <p>Cancels a top-up. Only pending top-ups can be canceled.</p>
      operationId: PostTopupsTopupCancel
      parameters:
        - description: The ID of the top-up to cancel.
          in: path
          name: topup
          required: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/PutAccountsAccountLogoutPayload"
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/topup"
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
  /v1/transfers:
    get:
      description: <p>Returns a list of existing transfers sent to connected accounts. The
        transfers are returned in sorted order, with the most recently created
        transfers appearing first.</p>
      operationId: GetTransfers
      parameters:
        - description: Specifies which fields in the response should be expanded.
          in: query
          name: expand
          required: false
          schema:
            type: array
            items: {}
        - in: query
          name: created
          required: false
          schema:
            type: integer
        - description: Only return transfers for the destination specified by this account
            ID.
          in: query
          name: destination
          required: false
          schema:
            type: string
        - description: A cursor for use in pagination. `ending_before` is an object ID that
            defines your place in the list. For instance, if you make a list
            request and receive 100 objects, starting with `obj_bar`, your
            subsequent call can include `ending_before=obj_bar` in order to
            fetch the previous page of the list.
          in: query
          name: ending_before
          required: false
          schema:
            type: string
        - description: A limit on the number of objects to be returned. Limit can range
            between 1 and 100, and the default is 10.
          in: query
          name: limit
          required: false
          schema:
            type: integer
        - description: A cursor for use in pagination. `starting_after` is an object ID
            that defines your place in the list. For instance, if you make a
            list request and receive 100 objects, ending with `obj_foo`, your
            subsequent call can include `starting_after=obj_foo` in order to
            fetch the next page of the list.
          in: query
          name: starting_after
          required: false
          schema:
            type: string
        - description: Only return transfers with the specified transfer group.
          in: query
          name: transfer_group
          required: false
          schema:
            type: string
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                properties:
                  data:
                    items:
                      $ref: "#/components/schemas/transfer"
                    type: array
                  has_more:
                    description: True if this list has another page of items after this one
                      that can be fetched.
                    type: boolean
                  object:
                    description: String representing the object's type. Objects of the same
                      type share the same value. Always has the value `list`.
                    enum:
                      - list
                    type: string
                  url:
                    description: The URL where this list can be accessed.
                    type: string
                required:
                  - data
                  - has_more
                  - object
                  - url
                title: TransferList
                type: object
                x-expandableFields:
                  - data
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
    post:
      description: <p>To send funds from your Stripe account to a connected account, you
        create a new transfer object. Your <a href="#balance">Stripe balance</a>
        must be able to cover the transfer amount, or you’ll receive an
        “Insufficient Funds” error.</p>
      operationId: PostTransfers
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                amount:
                  description: A positive integer in %s representing how much to transfer.
                  type: integer
                currency:
                  description: 3-letter [ISO code for
                    currency](https://stripe.com/docs/payouts).
                  type: string
                description:
                  description: An arbitrary string attached to the object. Often useful for
                    displaying to users.
                  type: string
                destination:
                  description: The ID of a connected Stripe account. <a
                    href="/docs/connect/charges-transfers">See the Connect
                    documentation</a> for details.
                  type: string
                expand:
                  description: Specifies which fields in the response should be expanded.
                  items:
                    type: string
                  type: array
                metadata:
                  description: Set of key-value pairs that you can attach to an object.
                    This can be useful for storing additional information about
                    the object in a structured format. Individual keys can be
                    unset by posting an empty value to them. All keys can be
                    unset by posting an empty value to `metadata`.
                  type: object
                source_transaction:
                  description: You can use this parameter to transfer funds from a charge
                    before they are added to your available balance. A pending
                    balance will transfer immediately but the funds will not
                    become available until the original charge becomes
                    available. [See the Connect
                    documentation](https://stripe.com/docs/connect/charges-transfers#transfer-availability)
                    for details.
                  type: string
                source_type:
                  description: The source balance to use for this transfer. One of
                    `bank_account` or `card`. For most users, this will default
                    to `card`.
                  enum:
                    - bank_account
                    - card
                  type: string
                transfer_group:
                  description: A string that identifies this transaction as part of a
                    group. See the [Connect
                    documentation](https://stripe.com/docs/connect/charges-transfers#grouping-transactions)
                    for details.
                  type: string
              required:
                - currency
                - destination
              type: object
        description: Body parameters for the request.
        required: true
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/transfer"
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
  "/v1/transfers/{id}/reversals":
    get:
      description: <p>You can see a list of the reversals belonging to a specific transfer.
        Note that the 10 most recent reversals are always available by default
        on the transfer object. If you need more than those 10, you can use this
        API method and the <code>limit</code> and <code>starting_after</code>
        parameters to page through additional reversals.</p>
      operationId: GetTransfersIdReversals
      parameters:
        - description: Specifies which fields in the response should be expanded.
          in: query
          name: expand
          required: false
          schema:
            type: array
            items: {}
        - description: A cursor for use in pagination. `ending_before` is an object ID that
            defines your place in the list. For instance, if you make a list
            request and receive 100 objects, starting with `obj_bar`, your
            subsequent call can include `ending_before=obj_bar` in order to
            fetch the previous page of the list.
          in: query
          name: ending_before
          required: false
          schema:
            type: string
        - description: The ID of the transfer whose reversals will be retrieved.
          in: path
          name: id
          required: true
          schema:
            type: string
        - description: A limit on the number of objects to be returned. Limit can range
            between 1 and 100, and the default is 10.
          in: query
          name: limit
          required: false
          schema:
            type: integer
        - description: A cursor for use in pagination. `starting_after` is an object ID
            that defines your place in the list. For instance, if you make a
            list request and receive 100 objects, ending with `obj_foo`, your
            subsequent call can include `starting_after=obj_foo` in order to
            fetch the next page of the list.
          in: query
          name: starting_after
          required: false
          schema:
            type: string
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                properties:
                  data:
                    items:
                      $ref: "#/components/schemas/transfer_reversal"
                    type: array
                  has_more:
                    description: True if this list has another page of items after this one
                      that can be fetched.
                    type: boolean
                  object:
                    description: String representing the object's type. Objects of the same
                      type share the same value. Always has the value `list`.
                    enum:
                      - list
                    type: string
                  url:
                    description: The URL where this list can be accessed.
                    type: string
                required:
                  - data
                  - has_more
                  - object
                  - url
                title: TransferReversalList
                type: object
                x-expandableFields:
                  - data
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
    post:
      description: >-
        <p>When you create a new reversal, you must specify a transfer to create
        it on.</p>


        <p>When reversing transfers, you can optionally reverse part of the transfer. You can do so as many times as you wish until the entire transfer has been reversed.</p>


        <p>Once entirely reversed, a transfer can’t be reversed again. This method will return an error when called on an already-reversed transfer, or when trying to reverse more money than is left on a transfer.</p>
      operationId: PostTransfersIdReversals
      parameters:
        - description: The ID of the transfer to be reversed.
          in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                amount:
                  description: A positive integer in %s representing how much of this
                    transfer to reverse. Can only reverse up to the unreversed
                    amount remaining of the transfer. Partial transfer reversals
                    are only allowed for transfers to Stripe Accounts. Defaults
                    to the entire transfer amount.
                  type: integer
                description:
                  description: An arbitrary string which you can attach to a reversal
                    object. It is displayed alongside the reversal in the
                    Dashboard. This will be unset if you POST an empty value.
                  type: string
                expand:
                  description: Specifies which fields in the response should be expanded.
                  items:
                    type: string
                  type: array
                metadata:
                  description: Set of key-value pairs that you can attach to an object.
                    This can be useful for storing additional information about
                    the object in a structured format. Individual keys can be
                    unset by posting an empty value to them. All keys can be
                    unset by posting an empty value to `metadata`.
                  type: object
                refund_application_fee:
                  description: Boolean indicating whether the application fee should be
                    refunded when reversing this transfer. If a full transfer
                    reversal is given, the full application fee will be
                    refunded. Otherwise, the application fee will be refunded
                    with an amount proportional to the amount of the transfer
                    reversed.
                  type: boolean
              type: object
        description: Body parameters for the request.
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/transfer_reversal"
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
  "/v1/transfers/{transfer}":
    get:
      description: <p>Retrieves the details of an existing transfer. Supply the unique
        transfer ID from either a transfer creation request or the transfer
        list, and Stripe will return the corresponding transfer information.</p>
      operationId: GetTransfersTransfer
      parameters:
        - description: Specifies which fields in the response should be expanded.
          in: query
          name: expand
          required: false
          schema:
            type: array
            items: {}
        - description: The identifier of the transfer to be retrieved.
          in: path
          name: transfer
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/transfer"
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
    post:
      description: >-
        <p>Updates the specified transfer by setting the values of the
        parameters passed. Any parameters not provided will be left
        unchanged.</p>


        <p>This request accepts only metadata as an argument.</p>
      operationId: PostTransfersTransfer
      parameters:
        - description: The ID of the transfer to be updated.
          in: path
          name: transfer
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                description:
                  description: An arbitrary string attached to the object. Often useful for
                    displaying to users.
                  type: string
                expand:
                  description: Specifies which fields in the response should be expanded.
                  items:
                    type: string
                  type: array
                metadata:
                  description: Set of key-value pairs that you can attach to an object.
                    This can be useful for storing additional information about
                    the object in a structured format. Individual keys can be
                    unset by posting an empty value to them. All keys can be
                    unset by posting an empty value to `metadata`.
                  type: object
              type: object
        description: Body parameters for the request.
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/transfer"
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
  "/v1/transfers/{transfer}/reversals/{id}":
    get:
      description: <p>By default, you can see the 10 most recent reversals stored directly
        on the transfer object, but you can also retrieve details about a
        specific reversal stored on the transfer.</p>
      operationId: GetTransfersTransferReversalsId
      parameters:
        - description: Specifies which fields in the response should be expanded.
          in: query
          name: expand
          required: false
          schema:
            type: array
            items: {}
        - description: ID of reversal to retrieve.
          in: path
          name: id
          required: true
          schema:
            type: string
        - description: ID of the transfer reversed.
          in: path
          name: transfer
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/transfer_reversal"
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
    post:
      description: >-
        <p>Updates the specified reversal by setting the values of the
        parameters passed. Any parameters not provided will be left
        unchanged.</p>


        <p>This request only accepts metadata and description as arguments.</p>
      operationId: PostTransfersTransferReversalsId
      parameters:
        - description: ID of reversal to retrieve.
          in: path
          name: id
          required: true
          schema:
            type: string
        - description: ID of the transfer reversed.
          in: path
          name: transfer
          required: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/PostApplicationFeesFeeRefundsIdPayload"
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/transfer_reversal"
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
  /v1/webhook_endpoints:
    get:
      description: <p>Returns a list of your webhook endpoints.</p>
      operationId: GetWebhookEndpoints
      parameters:
        - description: Specifies which fields in the response should be expanded.
          in: query
          name: expand
          required: false
          schema:
            type: array
            items: {}
        - description: A cursor for use in pagination. `ending_before` is an object ID that
            defines your place in the list. For instance, if you make a list
            request and receive 100 objects, starting with `obj_bar`, your
            subsequent call can include `ending_before=obj_bar` in order to
            fetch the previous page of the list.
          in: query
          name: ending_before
          required: false
          schema:
            type: string
        - description: A limit on the number of objects to be returned. Limit can range
            between 1 and 100, and the default is 10.
          in: query
          name: limit
          required: false
          schema:
            type: integer
        - description: A cursor for use in pagination. `starting_after` is an object ID
            that defines your place in the list. For instance, if you make a
            list request and receive 100 objects, ending with `obj_foo`, your
            subsequent call can include `starting_after=obj_foo` in order to
            fetch the next page of the list.
          in: query
          name: starting_after
          required: false
          schema:
            type: string
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                properties:
                  data:
                    items:
                      $ref: "#/components/schemas/webhook_endpoint"
                    type: array
                  has_more:
                    description: True if this list has another page of items after this one
                      that can be fetched.
                    type: boolean
                  object:
                    description: String representing the object's type. Objects of the same
                      type share the same value. Always has the value `list`.
                    enum:
                      - list
                    type: string
                  url:
                    description: The URL where this list can be accessed.
                    type: string
                required:
                  - data
                  - has_more
                  - object
                  - url
                type: object
                x-expandableFields:
                  - data
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
    post:
      description: <p>A webhook endpoint must have a <code>url</code> and a list of
        <code>enabled_events</code>. You may optionally specify the Boolean
        <code>connect</code> parameter. If set to true, then a Connect webhook
        endpoint that notifies the specified <code>url</code> about events from
        all connected accounts is created; otherwise an account webhook endpoint
        that notifies the specified <code>url</code> only about events from your
        account is created. You can also create webhook endpoints in the <a
        href="https://dashboard.stripe.com/account/webhooks">webhooks
        settings</a> section of the Dashboard.</p>
      operationId: PostWebhookEndpoints
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                api_version:
                  description: Events sent to this endpoint will be generated with this
                    Stripe Version instead of your account's default Stripe
                    Version.
                  enum:
                    - 2011-01-01
                    - 2011-06-21
                    - 2011-06-28
                    - 2011-08-01
                    - 2011-09-15
                    - 2011-11-17
                    - 2012-02-23
                    - 2012-03-25
                    - 2012-06-18
                    - 2012-06-28
                    - 2012-07-09
                    - 2012-09-24
                    - 2012-10-26
                    - 2012-11-07
                    - 2013-02-11
                    - 2013-02-13
                    - 2013-07-05
                    - 2013-08-12
                    - 2013-08-13
                    - 2013-10-29
                    - 2013-12-03
                    - 2014-01-31
                    - 2014-03-13
                    - 2014-03-28
                    - 2014-05-19
                    - 2014-06-13
                    - 2014-06-17
                    - 2014-07-22
                    - 2014-07-26
                    - 2014-08-04
                    - 2014-08-20
                    - 2014-09-08
                    - 2014-10-07
                    - 2014-11-05
                    - 2014-11-20
                    - 2014-12-08
                    - 2014-12-17
                    - 2014-12-22
                    - 2015-01-11
                    - 2015-01-26
                    - 2015-02-10
                    - 2015-02-16
                    - 2015-02-18
                    - 2015-03-24
                    - 2015-04-07
                    - 2015-06-15
                    - 2015-07-07
                    - 2015-07-13
                    - 2015-07-28
                    - 2015-08-07
                    - 2015-08-19
                    - 2015-09-03
                    - 2015-09-08
                    - 2015-09-23
                    - 2015-10-01
                    - 2015-10-12
                    - 2015-10-16
                    - 2016-02-03
                    - 2016-02-19
                    - 2016-02-22
                    - 2016-02-23
                    - 2016-02-29
                    - 2016-03-07
                    - 2016-06-15
                    - 2016-07-06
                    - 2016-10-19
                    - 2017-01-27
                    - 2017-02-14
                    - 2017-04-06
                    - 2017-05-25
                    - 2017-06-05
                    - 2017-08-15
                    - 2017-12-14
                    - 2018-01-23
                    - 2018-02-05
                    - 2018-02-06
                    - 2018-02-28
                    - 2018-05-21
                    - 2018-07-27
                    - 2018-08-23
                    - 2018-09-06
                    - 2018-09-24
                    - 2018-10-31
                    - 2018-11-08
                    - 2019-02-11
                    - 2019-02-19
                    - 2019-03-14
                    - 2019-05-16
                    - 2019-08-14
                    - 2019-09-09
                  type: string
                connect:
                  description: Whether this endpoint should receive events from connected
                    accounts (`true`), or your account (`false`).
                  type: boolean
                enabled_events:
                  description: The list of events to enable for this endpoint. You may
                    specify `['*']` to enable all events.
                  items:
                    enum:
                      - "*"
                      - account.application.authorized
                      - account.application.deauthorized
                      - account.external_account.created
                      - account.external_account.deleted
                      - account.external_account.updated
                      - account.updated
                      - application_fee.created
                      - application_fee.refund.updated
                      - application_fee.refunded
                      - balance.available
                      - capability.updated
                      - charge.captured
                      - charge.dispute.closed
                      - charge.dispute.created
                      - charge.dispute.funds_reinstated
                      - charge.dispute.funds_withdrawn
                      - charge.dispute.updated
                      - charge.expired
                      - charge.failed
                      - charge.pending
                      - charge.refund.updated
                      - charge.refunded
                      - charge.succeeded
                      - charge.updated
                      - checkout.session.completed
                      - coupon.created
                      - coupon.deleted
                      - coupon.updated
                      - credit_note.created
                      - credit_note.updated
                      - credit_note.voided
                      - customer.created
                      - customer.deleted
                      - customer.discount.created
                      - customer.discount.deleted
                      - customer.discount.updated
                      - customer.source.created
                      - customer.source.deleted
                      - customer.source.expiring
                      - customer.source.updated
                      - customer.subscription.created
                      - customer.subscription.deleted
                      - customer.subscription.trial_will_end
                      - customer.subscription.updated
                      - customer.tax_id.created
                      - customer.tax_id.deleted
                      - customer.tax_id.updated
                      - customer.updated
                      - file.created
                      - invoice.created
                      - invoice.deleted
                      - invoice.finalized
                      - invoice.marked_uncollectible
                      - invoice.payment_action_required
                      - invoice.payment_failed
                      - invoice.payment_succeeded
                      - invoice.sent
                      - invoice.upcoming
                      - invoice.updated
                      - invoice.voided
                      - invoiceitem.created
                      - invoiceitem.deleted
                      - invoiceitem.updated
                      - issuing_authorization.created
                      - issuing_authorization.request
                      - issuing_authorization.updated
                      - issuing_card.created
                      - issuing_card.updated
                      - issuing_cardholder.created
                      - issuing_cardholder.updated
                      - issuing_dispute.created
                      - issuing_dispute.updated
                      - issuing_settlement.created
                      - issuing_settlement.updated
                      - issuing_transaction.created
                      - issuing_transaction.updated
                      - order.created
                      - order.payment_failed
                      - order.payment_succeeded
                      - order.updated
                      - order_return.created
                      - payment_intent.amount_capturable_updated
                      - payment_intent.canceled
                      - payment_intent.created
                      - payment_intent.payment_failed
                      - payment_intent.succeeded
                      - payment_method.attached
                      - payment_method.card_automatically_updated
                      - payment_method.detached
                      - payment_method.updated
                      - payout.canceled
                      - payout.created
                      - payout.failed
                      - payout.paid
                      - payout.updated
                      - person.created
                      - person.deleted
                      - person.updated
                      - plan.created
                      - plan.deleted
                      - plan.updated
                      - product.created
                      - product.deleted
                      - product.updated
                      - radar.early_fraud_warning.created
                      - radar.early_fraud_warning.updated
                      - recipient.created
                      - recipient.deleted
                      - recipient.updated
                      - reporting.report_run.failed
                      - reporting.report_run.succeeded
                      - reporting.report_type.updated
                      - review.closed
                      - review.opened
                      - setup_intent.canceled
                      - setup_intent.created
                      - setup_intent.setup_failed
                      - setup_intent.succeeded
                      - sigma.scheduled_query_run.created
                      - sku.created
                      - sku.deleted
                      - sku.updated
                      - source.canceled
                      - source.chargeable
                      - source.failed
                      - source.mandate_notification
                      - source.refund_attributes_required
                      - source.transaction.created
                      - source.transaction.updated
                      - subscription_schedule.aborted
                      - subscription_schedule.canceled
                      - subscription_schedule.completed
                      - subscription_schedule.created
                      - subscription_schedule.expiring
                      - subscription_schedule.released
                      - subscription_schedule.updated
                      - tax_rate.created
                      - tax_rate.updated
                      - topup.canceled
                      - topup.created
                      - topup.failed
                      - topup.reversed
                      - topup.succeeded
                      - transfer.created
                      - transfer.failed
                      - transfer.paid
                      - transfer.reversed
                      - transfer.updated
                    type: string
                  type: array
                expand:
                  description: Specifies which fields in the response should be expanded.
                  items:
                    type: string
                  type: array
                url:
                  description: The URL of the webhook endpoint.
                  type: string
              required:
                - enabled_events
                - url
              type: object
        description: Body parameters for the request.
        required: true
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/webhook_endpoint"
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
  "/v1/webhook_endpoints/{webhook_endpoint}":
    delete:
      description: <p>You can also delete webhook endpoints via the <a
        href="https://dashboard.stripe.com/account/webhooks">webhook endpoint
        management</a> page of the Stripe dashboard.</p>
      operationId: DeleteWebhookEndpointsWebhookEndpoint
      parameters:
        - description: The ID of the webhook endpoint to delete.
          in: path
          name: webhook_endpoint
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/deleted_webhook_endpoint"
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
    get:
      description: <p>Retrieves the webhook endpoint with the given ID.</p>
      operationId: GetWebhookEndpointsWebhookEndpoint
      parameters:
        - description: Specifies which fields in the response should be expanded.
          in: query
          name: expand
          required: false
          schema:
            type: array
            items: {}
        - description: The ID of the desired webhook endpoint.
          in: path
          name: webhook_endpoint
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/webhook_endpoint"
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
    post:
      description: <p>Updates the webhook endpoint. You may edit the <code>url</code>, the
        list of <code>enabled_events</code>, and the status of your
        endpoint.</p>
      operationId: PostWebhookEndpointsWebhookEndpoint
      parameters:
        - description: The ID of the desired webhook endpoint.
          in: path
          name: webhook_endpoint
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                disabled:
                  description: Disable the webhook endpoint if set to true.
                  type: boolean
                enabled_events:
                  description: The list of events to enable for this endpoint. You may
                    specify `['*']` to enable all events.
                  items:
                    enum:
                      - "*"
                      - account.application.authorized
                      - account.application.deauthorized
                      - account.external_account.created
                      - account.external_account.deleted
                      - account.external_account.updated
                      - account.updated
                      - application_fee.created
                      - application_fee.refund.updated
                      - application_fee.refunded
                      - balance.available
                      - capability.updated
                      - charge.captured
                      - charge.dispute.closed
                      - charge.dispute.created
                      - charge.dispute.funds_reinstated
                      - charge.dispute.funds_withdrawn
                      - charge.dispute.updated
                      - charge.expired
                      - charge.failed
                      - charge.pending
                      - charge.refund.updated
                      - charge.refunded
                      - charge.succeeded
                      - charge.updated
                      - checkout.session.completed
                      - coupon.created
                      - coupon.deleted
                      - coupon.updated
                      - credit_note.created
                      - credit_note.updated
                      - credit_note.voided
                      - customer.created
                      - customer.deleted
                      - customer.discount.created
                      - customer.discount.deleted
                      - customer.discount.updated
                      - customer.source.created
                      - customer.source.deleted
                      - customer.source.expiring
                      - customer.source.updated
                      - customer.subscription.created
                      - customer.subscription.deleted
                      - customer.subscription.trial_will_end
                      - customer.subscription.updated
                      - customer.tax_id.created
                      - customer.tax_id.deleted
                      - customer.tax_id.updated
                      - customer.updated
                      - file.created
                      - invoice.created
                      - invoice.deleted
                      - invoice.finalized
                      - invoice.marked_uncollectible
                      - invoice.payment_action_required
                      - invoice.payment_failed
                      - invoice.payment_succeeded
                      - invoice.sent
                      - invoice.upcoming
                      - invoice.updated
                      - invoice.voided
                      - invoiceitem.created
                      - invoiceitem.deleted
                      - invoiceitem.updated
                      - issuing_authorization.created
                      - issuing_authorization.request
                      - issuing_authorization.updated
                      - issuing_card.created
                      - issuing_card.updated
                      - issuing_cardholder.created
                      - issuing_cardholder.updated
                      - issuing_dispute.created
                      - issuing_dispute.updated
                      - issuing_settlement.created
                      - issuing_settlement.updated
                      - issuing_transaction.created
                      - issuing_transaction.updated
                      - order.created
                      - order.payment_failed
                      - order.payment_succeeded
                      - order.updated
                      - order_return.created
                      - payment_intent.amount_capturable_updated
                      - payment_intent.canceled
                      - payment_intent.created
                      - payment_intent.payment_failed
                      - payment_intent.succeeded
                      - payment_method.attached
                      - payment_method.card_automatically_updated
                      - payment_method.detached
                      - payment_method.updated
                      - payout.canceled
                      - payout.created
                      - payout.failed
                      - payout.paid
                      - payout.updated
                      - person.created
                      - person.deleted
                      - person.updated
                      - plan.created
                      - plan.deleted
                      - plan.updated
                      - product.created
                      - product.deleted
                      - product.updated
                      - radar.early_fraud_warning.created
                      - radar.early_fraud_warning.updated
                      - recipient.created
                      - recipient.deleted
                      - recipient.updated
                      - reporting.report_run.failed
                      - reporting.report_run.succeeded
                      - reporting.report_type.updated
                      - review.closed
                      - review.opened
                      - setup_intent.canceled
                      - setup_intent.created
                      - setup_intent.setup_failed
                      - setup_intent.succeeded
                      - sigma.scheduled_query_run.created
                      - sku.created
                      - sku.deleted
                      - sku.updated
                      - source.canceled
                      - source.chargeable
                      - source.failed
                      - source.mandate_notification
                      - source.refund_attributes_required
                      - source.transaction.created
                      - source.transaction.updated
                      - subscription_schedule.aborted
                      - subscription_schedule.canceled
                      - subscription_schedule.completed
                      - subscription_schedule.created
                      - subscription_schedule.expiring
                      - subscription_schedule.released
                      - subscription_schedule.updated
                      - tax_rate.created
                      - tax_rate.updated
                      - topup.canceled
                      - topup.created
                      - topup.failed
                      - topup.reversed
                      - topup.succeeded
                      - transfer.created
                      - transfer.failed
                      - transfer.paid
                      - transfer.reversed
                      - transfer.updated
                    type: string
                  type: array
                expand:
                  description: Specifies which fields in the response should be expanded.
                  items:
                    type: string
                  type: array
                url:
                  description: The URL of the webhook endpoint.
                  type: string
              type: object
        description: Body parameters for the request.
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/webhook_endpoint"
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
servers:
  - url: https://api.stripe.com
components:
  requestBodies:
    PostAccountPayload:
      content:
        application/x-www-form-urlencoded:
          schema:
            properties:
              account_token:
                description: An [account
                  token](https://stripe.com/docs/api#create_account_token), used
                  to securely provide details to the account.
                type: string
              bank_account:
                description: Either a token, like the ones returned by
                  [Stripe.js](https://stripe.com/docs/stripe.js), or a
                  dictionary containing a user's bank account details.
              business_profile:
                description: Non-essential business information about the account
                properties:
                  mcc:
                    type: string
                  name:
                    type: string
                  product_description:
                    type: string
                  support_email:
                    type: string
                  support_phone:
                    type: string
                  support_url:
                    type: string
                  url:
                    type: string
                title: business_profile_specs
                type: object
              business_type:
                description: The business type. Can be `individual` or `company`.
                type: string
              company:
                description: Information about the company or business. This field is null
                  unless `business_type` is set to `company`.
                properties:
                  address:
                    properties:
                      city:
                        type: string
                      country:
                        type: string
                      line1:
                        type: string
                      line2:
                        type: string
                      postal_code:
                        type: string
                      state:
                        type: string
                    title: address_specs
                    type: object
                  address_kana:
                    properties:
                      city:
                        type: string
                      country:
                        type: string
                      line1:
                        type: string
                      line2:
                        type: string
                      postal_code:
                        type: string
                      state:
                        type: string
                      town:
                        type: string
                    title: japan_address_kana_specs
                    type: object
                  address_kanji:
                    properties:
                      city:
                        type: string
                      country:
                        type: string
                      line1:
                        type: string
                      line2:
                        type: string
                      postal_code:
                        type: string
                      state:
                        type: string
                      town:
                        type: string
                    title: japan_address_kanji_specs
                    type: object
                  directors_provided:
                    type: boolean
                  name:
                    type: string
                  name_kana:
                    type: string
                  name_kanji:
                    type: string
                  owners_provided:
                    type: boolean
                  phone:
                    type: string
                  tax_id:
                    type: string
                  tax_id_registrar:
                    type: string
                  vat_id:
                    type: string
                  verification:
                    properties:
                      document:
                        properties:
                          back:
                            type: string
                          front:
                            type: string
                        title: verification_document_specs
                        type: object
                    title: verification_specs
                    type: object
                title: company_specs
                type: object
              default_currency:
                description: Three-letter ISO currency code representing the default
                  currency for the account. This must be a currency that [Stripe
                  supports in the account's
                  country](https://stripe.com/docs/payouts).
                type: string
              email:
                description: Email address of the account representative. For Standard
                  accounts, this is used to ask them to claim their Stripe
                  account. For Custom accounts, this only makes the account
                  easier to identify to platforms; Stripe does not email the
                  account representative.
                type: string
              expand:
                description: Specifies which fields in the response should be expanded.
                items:
                  type: string
                type: array
              external_account:
                description: A card or bank account to attach to the account. You can
                  provide either a token, like the ones returned by
                  [Stripe.js](https://stripe.com/docs/stripe.js), or a
                  dictionary, as documented in the `external_account` parameter
                  for [bank
                  account](https://stripe.com/docs/api#account_create_bank_account)
                  creation. <br><br>By default, providing an external account
                  sets it as the new default external account for its currency,
                  and deletes the old default if one exists. To add additional
                  external accounts without replacing the existing default for
                  the currency, use the bank account or card creation API.
                type: string
              individual:
                description: Information about the person represented by the account. This
                  field is null unless `business_type` is set to `individual`.
                properties:
                  address:
                    properties:
                      city:
                        type: string
                      country:
                        type: string
                      line1:
                        type: string
                      line2:
                        type: string
                      postal_code:
                        type: string
                      state:
                        type: string
                    title: address_specs
                    type: object
                  address_kana:
                    properties:
                      city:
                        type: string
                      country:
                        type: string
                      line1:
                        type: string
                      line2:
                        type: string
                      postal_code:
                        type: string
                      state:
                        type: string
                      town:
                        type: string
                    title: japan_address_kana_specs
                    type: object
                  address_kanji:
                    properties:
                      city:
                        type: string
                      country:
                        type: string
                      line1:
                        type: string
                      line2:
                        type: string
                      postal_code:
                        type: string
                      state:
                        type: string
                      town:
                        type: string
                    title: japan_address_kanji_specs
                    type: object
                  dob: {}
                  email:
                    type: string
                  first_name:
                    type: string
                  first_name_kana:
                    type: string
                  first_name_kanji:
                    type: string
                  gender:
                    type: string
                  id_number:
                    type: string
                  last_name:
                    type: string
                  last_name_kana:
                    type: string
                  last_name_kanji:
                    type: string
                  maiden_name:
                    type: string
                  metadata:
                    type: object
                  phone:
                    type: string
                  ssn_last_4:
                    type: string
                  verification:
                    properties:
                      additional_document:
                        properties:
                          back:
                            type: string
                          front:
                            type: string
                        title: person_verification_document_specs
                        type: object
                      document:
                        properties:
                          back:
                            type: string
                          front:
                            type: string
                        title: person_verification_document_specs
                        type: object
                    title: person_verification_specs
                    type: object
                title: individual_specs
                type: object
              metadata:
                description: A set of key-value pairs that you can attach to an `Account`
                  object. This can be useful for storing additional information
                  about the account in a structured format.
                type: object
              requested_capabilities:
                description: The set of capabilities you want to unlock for this account
                  (US only). Each capability will be inactive until you have
                  provided its specific requirements and Stripe has verified
                  them. An account may have some of its requested capabilities
                  be active and some be inactive.
                items:
                  enum:
                    - card_issuing
                    - card_payments
                    - legacy_payments
                    - transfers
                  type: string
                type: array
              settings:
                description: Options for customizing how the account functions within
                  Stripe.
                properties:
                  branding:
                    properties:
                      icon:
                        type: string
                      logo:
                        type: string
                      primary_color:
                        type: string
                    title: branding_settings_specs
                    type: object
                  card_payments:
                    properties:
                      decline_on:
                        properties:
                          avs_failure:
                            type: boolean
                          cvc_failure:
                            type: boolean
                        title: decline_charge_on_specs
                        type: object
                      statement_descriptor_prefix:
                        type: string
                    title: card_payments_settings_specs
                    type: object
                  payments:
                    properties:
                      statement_descriptor:
                        type: string
                      statement_descriptor_kana:
                        type: string
                      statement_descriptor_kanji:
                        type: string
                    title: payments_settings_specs
                    type: object
                  payouts:
                    properties:
                      debit_negative_balances:
                        type: boolean
                      schedule:
                        properties:
                          delay_days: {}
                          interval:
                            enum:
                              - daily
                              - manual
                              - monthly
                              - weekly
                            type: string
                          monthly_anchor:
                            type: integer
                          weekly_anchor:
                            enum:
                              - friday
                              - monday
                              - saturday
                              - sunday
                              - thursday
                              - tuesday
                              - wednesday
                            type: string
                        title: transfer_schedule_specs
                        type: object
                      statement_descriptor:
                        type: string
                    title: payout_settings_specs
                    type: object
                title: settings_specs
                type: object
              tos_acceptance:
                description: Details on the account's acceptance of the [Stripe Services
                  Agreement](https://stripe.com/docs/connect/updating-accounts#tos-acceptance).
                properties:
                  date:
                    type: integer
                  ip:
                    type: string
                  user_agent:
                    type: string
                required:
                  - date
                  - ip
                title: tos_acceptance_specs
                type: object
            type: object
      description: Body parameters for the request.
    PostIssuingAuthorizationsAuthorizationPayload:
      content:
        application/x-www-form-urlencoded:
          schema:
            properties:
              expand:
                description: Specifies which fields in the response should be expanded.
                items:
                  type: string
                type: array
              metadata:
                description: Set of key-value pairs that you can attach to an object. This
                  can be useful for storing additional information about the
                  object in a structured format.
            type: object
      description: Body parameters for the request.
    PostApplicationFeesFeeRefundsIdPayload:
      content:
        application/x-www-form-urlencoded:
          schema:
            properties:
              expand:
                description: Specifies which fields in the response should be expanded.
                items:
                  type: string
                type: array
              metadata:
                description: Set of key-value pairs that you can attach to an object. This
                  can be useful for storing additional information about the
                  object in a structured format. Individual keys can be unset by
                  posting an empty value to them. All keys can be unset by
                  posting an empty value to `metadata`.
                type: object
            type: object
      description: Body parameters for the request.
    PostChargesChargeDisputePayload:
      content:
        application/x-www-form-urlencoded:
          schema:
            properties:
              evidence:
                description: Evidence to upload, to respond to a dispute. Updating any
                  field in the hash will submit all fields in the hash for
                  review. The combined character count of all fields is limited
                  to 150,000.
                properties:
                  access_activity_log:
                    type: string
                  billing_address:
                    type: string
                  cancellation_policy:
                    type: string
                  cancellation_policy_disclosure:
                    type: string
                  cancellation_rebuttal:
                    type: string
                  customer_communication:
                    type: string
                  customer_email_address:
                    type: string
                  customer_name:
                    type: string
                  customer_purchase_ip:
                    type: string
                  customer_signature:
                    type: string
                  duplicate_charge_documentation:
                    type: string
                  duplicate_charge_explanation:
                    type: string
                  duplicate_charge_id:
                    type: string
                  product_description:
                    type: string
                  receipt:
                    type: string
                  refund_policy:
                    type: string
                  refund_policy_disclosure:
                    type: string
                  refund_refusal_explanation:
                    type: string
                  service_date:
                    type: string
                  service_documentation:
                    type: string
                  shipping_address:
                    type: string
                  shipping_carrier:
                    type: string
                  shipping_date:
                    type: string
                  shipping_documentation:
                    type: string
                  shipping_tracking_number:
                    type: string
                  uncategorized_file:
                    type: string
                  uncategorized_text:
                    type: string
                title: dispute_evidence_params
                type: object
              expand:
                description: Specifies which fields in the response should be expanded.
                items:
                  type: string
                type: array
              metadata:
                description: A set of key-value pairs that you can attach to a dispute
                  object. This can be useful for storing additional information
                  about the dispute in a structured format.
                type: object
              submit:
                description: Whether to immediately submit evidence to the bank. If
                  `false`, evidence is staged on the dispute. Staged evidence is
                  visible in the API and Dashboard, and can be submitted to the
                  bank by making another request with this attribute set to
                  `true` (the default).
                type: boolean
            type: object
      description: Body parameters for the request.
    PostCustomersCustomerBankAccountsPayload:
      content:
        application/x-www-form-urlencoded:
          schema:
            properties:
              alipay_account:
                description: A token returned by
                  [Stripe.js](https://stripe.com/docs/stripe.js) representing
                  the user’s Alipay account details.
                type: string
              bank_account:
                description: Either a token, like the ones returned by
                  [Stripe.js](https://stripe.com/docs/stripe.js), or a
                  dictionary containing a user's bank account details.
              card:
                description: A token, like the ones returned by
                  [Stripe.js](https://stripe.com/docs/stripe.js).
              expand:
                description: Specifies which fields in the response should be expanded.
                items:
                  type: string
                type: array
              metadata:
                description: A set of key-value pairs that you can attach to a card object.
                  It can be useful for storing additional information about the
                  card in a structured format.
                type: object
              source:
                description: Please refer to full
                  [documentation](https://stripe.com/docs/api) instead.
                type: string
            type: object
      description: Body parameters for the request.
    PostAccountPeoplePayload:
      content:
        application/x-www-form-urlencoded:
          schema:
            properties:
              account:
                description: The account that the person is associated with.
                type: string
              address:
                description: The person's address.
                properties:
                  city:
                    type: string
                  country:
                    type: string
                  line1:
                    type: string
                  line2:
                    type: string
                  postal_code:
                    type: string
                  state:
                    type: string
                title: address_specs
                type: object
              address_kana:
                description: The Kana variation of the person's address (Japan only).
                properties:
                  city:
                    type: string
                  country:
                    type: string
                  line1:
                    type: string
                  line2:
                    type: string
                  postal_code:
                    type: string
                  state:
                    type: string
                  town:
                    type: string
                title: japan_address_kana_specs
                type: object
              address_kanji:
                description: The Kanji variation of the person's address (Japan only).
                properties:
                  city:
                    type: string
                  country:
                    type: string
                  line1:
                    type: string
                  line2:
                    type: string
                  postal_code:
                    type: string
                  state:
                    type: string
                  town:
                    type: string
                title: japan_address_kanji_specs
                type: object
              dob:
                description: The person's date of birth.
              email:
                description: The person's email address.
                type: string
              expand:
                description: Specifies which fields in the response should be expanded.
                items:
                  type: string
                type: array
              first_name:
                description: The person's first name.
                type: string
              first_name_kana:
                description: The Kana variation of the person's first name (Japan only).
                type: string
              first_name_kanji:
                description: The Kanji variation of the person's first name (Japan only).
                type: string
              gender:
                description: The person's gender (International regulations require either
                  "male" or "female").
                type: string
              id_number:
                description: The person's ID number, as appropriate for their country. For
                  example, a social security number in the U.S., social
                  insurance number in Canada, etc. Instead of the number itself,
                  you can also provide a [PII token provided by
                  Stripe.js](https://stripe.com/docs/stripe.js#collecting-pii-data).
                type: string
              last_name:
                description: The person's last name.
                type: string
              last_name_kana:
                description: The Kana variation of the person's last name (Japan only).
                type: string
              last_name_kanji:
                description: The Kanji variation of the person's last name (Japan only).
                type: string
              maiden_name:
                description: The person's maiden name.
                type: string
              metadata:
                description: Set of key-value pairs that you can attach to an object. This
                  can be useful for storing additional information about the
                  object in a structured format. Individual keys can be unset by
                  posting an empty value to them. All keys can be unset by
                  posting an empty value to `metadata`.
                type: object
              person_token:
                description: A [person
                  token](https://stripe.com/docs/connect/account-tokens), used
                  to securely provide details to the person.
                type: string
              phone:
                description: The person's phone number.
                type: string
              relationship:
                description: The relationship that this person has with the account's legal
                  entity.
                properties:
                  account_opener:
                    type: boolean
                  director:
                    type: boolean
                  executive:
                    type: boolean
                  owner:
                    type: boolean
                  percent_ownership: {}
                  title:
                    type: string
                title: relationship_specs
                type: object
              ssn_last_4:
                description: The last 4 digits of the person's social security number.
                type: string
              verification:
                description: The person's verification status.
                properties:
                  additional_document:
                    properties:
                      back:
                        type: string
                      front:
                        type: string
                    title: person_verification_document_specs
                    type: object
                  document:
                    properties:
                      back:
                        type: string
                      front:
                        type: string
                    title: person_verification_document_specs
                    type: object
                title: person_verification_specs
                type: object
            type: object
      description: Body parameters for the request.
    PostCustomersCustomerSubscriptionsSubscriptionExposedIdPayload:
      content:
        application/x-www-form-urlencoded:
          schema:
            properties:
              application_fee_percent:
                description: A non-negative decimal between 0 and 100, with at most two
                  decimal places. This represents the percentage of the
                  subscription invoice subtotal that will be transferred to the
                  application owner's Stripe account. The request must be made
                  with an OAuth key in order to set an application fee
                  percentage. For more information, see the application fees
                  [documentation](https://stripe.com/docs/connect/subscriptions#collecting-fees-on-subscriptions).
                type: number
              billing:
                description: This field has been renamed to `collection_method` and will be
                  removed in a future API version.
                enum:
                  - charge_automatically
                  - send_invoice
                type: string
              billing_cycle_anchor:
                description: Either `now` or `unchanged`. Setting the value to `now` resets
                  the subscription's billing cycle anchor to the current time.
                  For more information, see the billing cycle
                  [documentation](https://stripe.com/docs/billing/subscriptions/billing-cycle).
                enum:
                  - now
                  - unchanged
                type: string
              billing_thresholds:
                description: Define thresholds at which an invoice will be sent, and the
                  subscription advanced to a new billing period. Pass an empty
                  string to remove previously-defined thresholds.
              cancel_at:
                description: A timestamp at which the subscription should cancel. If set to
                  a date before the current period ends this will cause a
                  proration if `prorate=true`.
              cancel_at_period_end:
                description: Boolean indicating whether this subscription should cancel at
                  the end of the current period.
                type: boolean
              collection_method:
                description: Either `charge_automatically`, or `send_invoice`. When
                  charging automatically, Stripe will attempt to pay this
                  subscription at the end of the cycle using the default source
                  attached to the customer. When sending an invoice, Stripe will
                  email your customer an invoice with payment instructions.
                  Defaults to `charge_automatically`.
                enum:
                  - charge_automatically
                  - send_invoice
                type: string
              coupon:
                description: The code of the coupon to apply to this subscription. A coupon
                  applied to a subscription will only affect invoices created
                  for that particular subscription.
                type: string
              days_until_due:
                description: Number of days a customer has to pay invoices generated by
                  this subscription. Valid only for subscriptions where
                  `collection_method` is set to `send_invoice`.
                type: integer
              default_payment_method:
                description: ID of the default payment method for the subscription. It must
                  belong to the customer associated with the subscription. If
                  not set, invoices will use the default payment method in the
                  customer's invoice settings.
                type: string
              default_source:
                description: ID of the default payment source for the subscription. It must
                  belong to the customer associated with the subscription and be
                  in a chargeable state. If not set, defaults to the customer's
                  default source.
                type: string
              default_tax_rates:
                description: The tax rates that will apply to any subscription item that
                  does not have `tax_rates` set. Invoices created will have
                  their `default_tax_rates` populated from the subscription.
                items:
                  type: string
              expand:
                description: Specifies which fields in the response should be expanded.
                items:
                  type: string
                type: array
              items:
                description: List of subscription items, each with an attached plan.
                items:
                  properties:
                    billing_thresholds: {}
                    clear_usage:
                      type: boolean
                    deleted:
                      type: boolean
                    id:
                      type: string
                    metadata:
                      type: object
                    plan:
                      type: string
                    quantity:
                      type: integer
                    tax_rates:
                      items:
                        type: string
                  title: subscription_item_update_params
                  type: object
                type: array
              metadata:
                description: A set of key-value pairs that you can attach to a subscription
                  object. This can be useful for storing additional information
                  about the subscription in a structured format.
                type: object
              off_session:
                description: Indicates if a customer is on or off-session while an invoice
                  payment is attempted.
                type: boolean
              payment_behavior:
                description: >-
                  Use `allow_incomplete` to create subscriptions with
                  `status=incomplete` if its first invoice cannot be paid.

                  Creating subscriptions with this status allows you to manage scenarios where additional user actions are needed to pay

                  a subscription's invoice. For example, SCA regulation may require 3DS authentication to complete payment. See the

                  [SCA Migration Guide](https://stripe.com/docs/billing/migration/strong-customer-authentication) for Billing to learn more. This is the

                  default behavior.


                  Use `error_if_incomplete` if you want Stripe to return an HTTP 402 status code if a subscription's first invoice

                  cannot be paid. For example, if a payment method requires 3DS authentication due to SCA regulation and further

                  user action is needed, this parameter does not create a subscription and returns an error instead. This was the default

                  behavior for API versions prior to 2019-03-14. See the [changelog](https://stripe.com/docs/upgrades#2019-03-14) to learn more.
                enum:
                  - allow_incomplete
                  - error_if_incomplete
                type: string
              prorate:
                description: Boolean (defaults to `true`) telling us whether to [credit for
                  unused
                  time](https://stripe.com/docs/subscriptions/billing-cycle#prorations)
                  when the billing cycle changes (e.g. when switching plans,
                  resetting `billing_cycle_anchor=now`, or starting a trial), or
                  if an item's `quantity` changes. If `false`, the anchor period
                  will be free (similar to a trial) and no proration adjustments
                  will be created.
                type: boolean
              proration_date:
                description: If set, the proration will be calculated as though the
                  subscription was updated at the given time. This can be used
                  to apply exactly the same proration that was previewed with
                  [upcoming invoice](#retrieve_customer_invoice) endpoint. It
                  can also be used to implement custom proration logic, such as
                  prorating by day instead of by second, by providing the time
                  that you wish to use for proration calculations.
                type: integer
              tax_percent:
                description: A non-negative decimal (with at most four decimal places)
                  between 0 and 100. This represents the percentage of the
                  subscription invoice subtotal that will be calculated and
                  added as tax to the final amount in each billing period. For
                  example, a plan which charges $10/month with a `tax_percent`
                  of `20.0` will charge $12 per invoice. To unset a
                  previously-set value, pass an empty string. This field has
                  been deprecated and will be removed in a future API version,
                  for further information view the [migration
                  docs](https://stripe.com/docs/billing/migration/taxes) for
                  `tax_rates`.
              trial_end:
                description: Unix timestamp representing the end of the trial period the
                  customer will get before being charged for the first time.
                  This will always overwrite any trials that might apply via a
                  subscribed plan. If set, trial_end will override the default
                  trial period of the plan the customer is being subscribed to.
                  The special value `now` can be provided to end the customer's
                  trial immediately. Can be at most two years from
                  `billing_cycle_anchor`.
              trial_from_plan:
                description: Indicates if a plan's `trial_period_days` should be applied to
                  the subscription. Setting `trial_end` per subscription is
                  preferred, and this defaults to `false`. Setting this flag to
                  `true` together with `trial_end` is not allowed.
                type: boolean
            type: object
      description: Body parameters for the request.
    PutAccountsAccountLogoutPayload:
      content:
        application/x-www-form-urlencoded:
          schema:
            properties:
              expand:
                description: Specifies which fields in the response should be expanded.
                items:
                  type: string
                type: array
            type: object
      description: Body parameters for the request.
    PostAccountCapabilitiesCapabilityPayload:
      content:
        application/x-www-form-urlencoded:
          schema:
            properties:
              expand:
                description: Specifies which fields in the response should be expanded.
                items:
                  type: string
                type: array
              requested:
                description: Passing true requests the capability for the account, if it is
                  not already requested. A requested capability may not
                  immediately become active. Any requirements to activate the
                  capability are returned in the `requirements` arrays.
                type: boolean
            type: object
      description: Body parameters for the request.
    PostAccountBankAccountsIdPayload:
      content:
        application/x-www-form-urlencoded:
          schema:
            properties:
              account_holder_name:
                description: The name of the person or business that owns the bank account.
                type: string
              account_holder_type:
                description: The type of entity that holds the account. This can be either
                  `individual` or `company`.
                enum:
                  - ""
                  - company
                  - individual
                type: string
              address_city:
                description: City/District/Suburb/Town/Village.
                type: string
              address_country:
                description: Billing address country, if provided when creating card.
                type: string
              address_line1:
                description: Address line 1 (Street address/PO Box/Company name).
                type: string
              address_line2:
                description: Address line 2 (Apartment/Suite/Unit/Building).
                type: string
              address_state:
                description: State/County/Province/Region.
                type: string
              address_zip:
                description: ZIP or postal code.
                type: string
              default_for_currency:
                description: When set to true, this becomes the default external account
                  for its currency.
                type: boolean
              exp_month:
                description: Two digit number representing the card’s expiration month.
                type: string
              exp_year:
                description: Four digit number representing the card’s expiration year.
                type: string
              expand:
                description: Specifies which fields in the response should be expanded.
                items:
                  type: string
                type: array
              metadata:
                type: object
              name:
                description: Cardholder name.
                type: string
            type: object
      description: Body parameters for the request.
    PostCustomersCustomerBankAccountsIdPayload:
      content:
        application/x-www-form-urlencoded:
          schema:
            properties:
              account_holder_name:
                description: The name of the person or business that owns the bank account.
                type: string
              account_holder_type:
                description: The type of entity that holds the account. This can be either
                  `individual` or `company`.
                enum:
                  - company
                  - individual
                type: string
              address_city:
                description: City/District/Suburb/Town/Village.
                type: string
              address_country:
                description: Billing address country, if provided when creating card.
                type: string
              address_line1:
                description: Address line 1 (Street address/PO Box/Company name).
                type: string
              address_line2:
                description: Address line 2 (Apartment/Suite/Unit/Building).
                type: string
              address_state:
                description: State/County/Province/Region.
                type: string
              address_zip:
                description: ZIP or postal code.
                type: string
              exp_month:
                description: Two digit number representing the card’s expiration month.
                type: string
              exp_year:
                description: Four digit number representing the card’s expiration year.
                type: string
              expand:
                description: Specifies which fields in the response should be expanded.
                items:
                  type: string
                type: array
              metadata:
                type: object
              name:
                description: Cardholder name.
                type: string
              owner:
                properties:
                  address:
                    properties:
                      city:
                        type: string
                      country:
                        type: string
                      line1:
                        type: string
                      line2:
                        type: string
                      postal_code:
                        type: string
                      state:
                        type: string
                    title: source_address
                    type: object
                  email:
                    type: string
                  name:
                    type: string
                  phone:
                    type: string
                title: owner
                type: object
            type: object
      description: Body parameters for the request.
    PostChargesChargeRefundPayload:
      content:
        application/x-www-form-urlencoded:
          schema:
            properties:
              amount:
                type: integer
              expand:
                description: Specifies which fields in the response should be expanded.
                items:
                  type: string
                type: array
              metadata:
                type: object
              reason:
                enum:
                  - duplicate
                  - fraudulent
                  - requested_by_customer
                type: string
              refund_application_fee:
                type: boolean
              reverse_transfer:
                type: boolean
            type: object
      description: Body parameters for the request.
    PostAccountBankAccountsPayload:
      content:
        application/x-www-form-urlencoded:
          schema:
            properties:
              bank_account:
                description: Either a token, like the ones returned by
                  [Stripe.js](https://stripe.com/docs/stripe.js), or a
                  dictionary containing a user's bank account details.
              default_for_currency:
                description: When set to true, or if this is the first external account
                  added in this currency, this account becomes the default
                  external account for its currency.
                type: boolean
              expand:
                description: Specifies which fields in the response should be expanded.
                items:
                  type: string
                type: array
              external_account:
                description: Please refer to full
                  [documentation](https://stripe.com/docs/api) instead.
                type: string
              metadata:
                description: A set of key-value pairs that you can attach to an external
                  account object. It can be useful for storing additional
                  information about the external account in a structured format.
                type: object
            type: object
      description: Body parameters for the request.
    PostAccountsAccountPeoplePayload:
      content:
        application/x-www-form-urlencoded:
          schema:
            properties:
              address:
                description: The person's address.
                properties:
                  city:
                    type: string
                  country:
                    type: string
                  line1:
                    type: string
                  line2:
                    type: string
                  postal_code:
                    type: string
                  state:
                    type: string
                title: address_specs
                type: object
              address_kana:
                description: The Kana variation of the person's address (Japan only).
                properties:
                  city:
                    type: string
                  country:
                    type: string
                  line1:
                    type: string
                  line2:
                    type: string
                  postal_code:
                    type: string
                  state:
                    type: string
                  town:
                    type: string
                title: japan_address_kana_specs
                type: object
              address_kanji:
                description: The Kanji variation of the person's address (Japan only).
                properties:
                  city:
                    type: string
                  country:
                    type: string
                  line1:
                    type: string
                  line2:
                    type: string
                  postal_code:
                    type: string
                  state:
                    type: string
                  town:
                    type: string
                title: japan_address_kanji_specs
                type: object
              dob:
                description: The person's date of birth.
              email:
                description: The person's email address.
                type: string
              expand:
                description: Specifies which fields in the response should be expanded.
                items:
                  type: string
                type: array
              first_name:
                description: The person's first name.
                type: string
              first_name_kana:
                description: The Kana variation of the person's first name (Japan only).
                type: string
              first_name_kanji:
                description: The Kanji variation of the person's first name (Japan only).
                type: string
              gender:
                description: The person's gender (International regulations require either
                  "male" or "female").
                type: string
              id_number:
                description: The person's ID number, as appropriate for their country. For
                  example, a social security number in the U.S., social
                  insurance number in Canada, etc. Instead of the number itself,
                  you can also provide a [PII token provided by
                  Stripe.js](https://stripe.com/docs/stripe.js#collecting-pii-data).
                type: string
              last_name:
                description: The person's last name.
                type: string
              last_name_kana:
                description: The Kana variation of the person's last name (Japan only).
                type: string
              last_name_kanji:
                description: The Kanji variation of the person's last name (Japan only).
                type: string
              maiden_name:
                description: The person's maiden name.
                type: string
              metadata:
                description: Set of key-value pairs that you can attach to an object. This
                  can be useful for storing additional information about the
                  object in a structured format. Individual keys can be unset by
                  posting an empty value to them. All keys can be unset by
                  posting an empty value to `metadata`.
                type: object
              person_token:
                description: A [person
                  token](https://stripe.com/docs/connect/account-tokens), used
                  to securely provide details to the person.
                type: string
              phone:
                description: The person's phone number.
                type: string
              relationship:
                description: The relationship that this person has with the account's legal
                  entity.
                properties:
                  account_opener:
                    type: boolean
                  director:
                    type: boolean
                  executive:
                    type: boolean
                  owner:
                    type: boolean
                  percent_ownership: {}
                  title:
                    type: string
                title: relationship_specs
                type: object
              ssn_last_4:
                description: The last 4 digits of the person's social security number.
                type: string
              verification:
                description: The person's verification status.
                properties:
                  additional_document:
                    properties:
                      back:
                        type: string
                      front:
                        type: string
                    title: person_verification_document_specs
                    type: object
                  document:
                    properties:
                      back:
                        type: string
                      front:
                        type: string
                    title: person_verification_document_specs
                    type: object
                title: person_verification_specs
                type: object
            type: object
      description: Body parameters for the request.
    PostCustomersCustomerBalanceTransactionsTransactionPayload:
      content:
        application/x-www-form-urlencoded:
          schema:
            properties:
              description:
                description: An arbitrary string attached to the object. Often useful for
                  displaying to users.
                type: string
              expand:
                description: Specifies which fields in the response should be expanded.
                items:
                  type: string
                type: array
              metadata:
                description: Set of key-value pairs that you can attach to an object. This
                  can be useful for storing additional information about the
                  object in a structured format.
                type: object
            type: object
      description: Body parameters for the request.
    PostCustomersCustomerBankAccountsIdVerifyPayload:
      content:
        application/x-www-form-urlencoded:
          schema:
            properties:
              amounts:
                description: Two positive integers, in *cents*, equal to the values of the
                  microdeposits sent to the bank account.
                items:
                  type: integer
                type: array
              expand:
                description: Specifies which fields in the response should be expanded.
                items:
                  type: string
                type: array
            type: object
      description: Body parameters for the request.
  schemas:
    account:
      properties:
        business_profile:
          $ref: "#/components/schemas/account_business_profile"
        business_type:
          description: The business type. Can be `individual` or `company`.
          type: string
        capabilities:
          $ref: "#/components/schemas/account_capabilities"
        charges_enabled:
          description: Whether the account can create live charges.
          type: boolean
        company:
          $ref: "#/components/schemas/legal_entity_company"
        country:
          description: The account's country.
          type: string
        created:
          description: Time at which the object was created. Measured in seconds since the
            Unix epoch.
          type: integer
        default_currency:
          description: Three-letter ISO currency code representing the default currency for
            the account. This must be a currency that [Stripe supports in the
            account's country](https://stripe.com/docs/payouts).
          type: string
        details_submitted:
          description: Whether account details have been submitted. Standard accounts
            cannot receive payouts before this is true.
          type: boolean
        email:
          description: The primary user's email address.
          type: string
        external_accounts:
          description: External accounts (bank accounts and debit cards) currently attached
            to this account
          properties:
            data:
              description: The list contains all external accounts that have been attached
                to the Stripe account. These may be bank accounts or cards.
              items:
                $ref: "#/components/schemas/bank_account"
              type: array
            has_more:
              description: True if this list has another page of items after this one that
                can be fetched.
              type: boolean
            object:
              description: String representing the object's type. Objects of the same type
                share the same value. Always has the value `list`.
              enum:
                - list
              type: string
            url:
              description: The URL where this list can be accessed.
              type: string
          required:
            - data
            - has_more
            - object
            - url
          title: ExternalAccountList
          type: object
          x-expandableFields:
            - data
        id:
          description: Unique identifier for the object.
          type: string
        individual:
          $ref: "#/components/schemas/person"
        metadata:
          description: Set of key-value pairs that you can attach to an object. This can be
            useful for storing additional information about the object in a
            structured format.
          type: object
        object:
          description: String representing the object's type. Objects of the same type
            share the same value.
          enum:
            - account
          type: string
        payouts_enabled:
          description: Whether Stripe can send payouts to this account.
          type: boolean
        requirements:
          $ref: "#/components/schemas/account_requirements"
        settings:
          $ref: "#/components/schemas/account_settings"
        tos_acceptance:
          $ref: "#/components/schemas/account_tos_acceptance"
        type:
          description: The Stripe account type. Can be `standard`, `express`, or `custom`.
          enum:
            - custom
            - express
            - standard
          type: string
      required:
        - id
        - object
      title: Account
      type: object
      x-expandableFields:
        - business_profile
        - capabilities
        - company
        - external_accounts
        - individual
        - requirements
        - settings
        - tos_acceptance
      x-resourceId: account
    account_branding_settings:
      properties:
        icon:
          description: (ID of a [file upload](https://stripe.com/docs/guides/file-upload))
            An icon for the account. Must be square and at least 128px x 128px.
          type: string
          x-expansionResources:
            oneOf:
              - $ref: "#/components/schemas/file"
        logo:
          description: (ID of a [file upload](https://stripe.com/docs/guides/file-upload))
            A logo for the account that will be used in Checkout instead of the
            icon and without the account's name next to it if provided. Must be
            at least 128px x 128px.
          type: string
          x-expansionResources:
            oneOf:
              - $ref: "#/components/schemas/file"
        primary_color:
          description: A CSS hex color value representing the primary branding color for
            this account
          type: string
      title: AccountBrandingSettings
      type: object
      x-expandableFields:
        - icon
        - logo
    account_business_profile:
      properties:
        mcc:
          description: The merchant category code for the account. MCCs are used to
            classify businesses based on the goods or services they provide.
          type: string
        name:
          description: The customer-facing business name.
          type: string
        product_description:
          description: Internal-only description of the product sold or service provided by
            the business. It's used by Stripe for risk and underwriting
            purposes.
          type: string
        support_address:
          $ref: "#/components/schemas/address"
        support_email:
          description: A publicly available email address for sending support issues to.
          type: string
        support_phone:
          description: A publicly available phone number to call with support issues.
          type: string
        support_url:
          description: A publicly available website for handling support issues.
          type: string
        url:
          description: The business's publicly available website.
          type: string
      title: AccountBusinessProfile
      type: object
      x-expandableFields:
        - support_address
    account_capabilities:
      properties:
        card_payments:
          description: The status of the card payments capability of the account, or
            whether the account can directly process credit and debit card
            charges.
          enum:
            - active
            - inactive
            - pending
          type: string
        legacy_payments:
          description: The status of the legacy payments capability of the account.
          enum:
            - active
            - inactive
            - pending
          type: string
        transfers:
          description: The status of the transfers capability of the account, or whether
            your platform can transfer funds to the account.
          enum:
            - active
            - inactive
            - pending
          type: string
      title: AccountCapabilities
      type: object
      x-expandableFields: []
    account_capability_requirements:
      properties:
        current_deadline:
          description: The date the fields in `currently_due` must be collected by to keep
            the capability enabled for the account.
          type: integer
        currently_due:
          description: The fields that need to be collected to keep the capability enabled.
            If not collected by the `current_deadline`, these fields appear in
            `past_due` as well, and the capability is disabled.
          items:
            type: string
          type: array
        disabled_reason:
          description: If the capability is disabled, this string describes why. Possible
            values are `requirement.fields_needed`, `pending.onboarding`,
            `pending.review`, `rejected_fraud`, or `rejected.other`.
          type: string
        eventually_due:
          description: The fields that need to be collected assuming all volume thresholds
            are reached. As they become required, these fields appear in
            `currently_due` as well, and the `current_deadline` is set.
          items:
            type: string
          type: array
        past_due:
          description: The fields that weren't collected by the `current_deadline`. These
            fields need to be collected to enable the capability for the
            account.
          items:
            type: string
          type: array
        pending_verification:
          description: Fields that may become required depending on the results of
            verification or review. An empty array unless an asynchronous
            verification is pending. If verification fails, the fields in this
            array become required and move to `currently_due` or `past_due`.
          items:
            type: string
          type: array
      required:
        - currently_due
        - eventually_due
        - past_due
        - pending_verification
      title: AccountCapabilityRequirements
      type: object
      x-expandableFields: []
    account_card_payments_settings:
      properties:
        decline_on:
          $ref: "#/components/schemas/account_decline_charge_on"
        statement_descriptor_prefix:
          description: The default text that appears on credit card statements when a
            charge is made. This field prefixes any dynamic
            `statement_descriptor` specified on the charge.
            `statement_descriptor_prefix` is useful for maximizing descriptor
            space for the dynamic portion.
          type: string
      title: AccountCardPaymentsSettings
      type: object
      x-expandableFields:
        - decline_on
    account_dashboard_settings:
      properties:
        display_name:
          description: The display name for this account. This is used on the Stripe
            Dashboard to differentiate between accounts.
          type: string
        timezone:
          description: The timezone used in the Stripe Dashboard for this account. A list
            of possible time zone values is maintained at the [IANA Time Zone
            Database](http://www.iana.org/time-zones).
          type: string
      title: AccountDashboardSettings
      type: object
      x-expandableFields: []
    account_decline_charge_on:
      properties:
        avs_failure:
          description: Whether Stripe automatically declines charges with an incorrect ZIP
            or postal code. This setting only applies when a ZIP or postal code
            is provided and they fail bank verification.
          type: boolean
        cvc_failure:
          description: Whether Stripe automatically declines charges with an incorrect CVC.
            This setting only applies when a CVC is provided and it fails bank
            verification.
          type: boolean
      required:
        - avs_failure
        - cvc_failure
      title: AccountDeclineChargeOn
      type: object
      x-expandableFields: []
    account_link:
      properties:
        created:
          description: Time at which the object was created. Measured in seconds since the
            Unix epoch.
          type: integer
        expires_at:
          description: The timestamp at which this account link will expire.
          type: integer
        object:
          description: String representing the object's type. Objects of the same type
            share the same value.
          enum:
            - account_link
          type: string
        url:
          description: The URL for the account link.
          type: string
      required:
        - created
        - expires_at
        - object
        - url
      title: AccountLink
      type: object
      x-expandableFields: []
      x-resourceId: account_link
    account_payments_settings:
      properties:
        statement_descriptor:
          description: The default text that appears on credit card statements when a
            charge is made. This field prefixes any dynamic
            `statement_descriptor` specified on the charge.
          type: string
        statement_descriptor_kana:
          description: The Kana variation of the default text that appears on credit card
            statements when a charge is made (Japan only)
          type: string
        statement_descriptor_kanji:
          description: The Kanji variation of the default text that appears on credit card
            statements when a charge is made (Japan only)
          type: string
      title: AccountPaymentsSettings
      type: object
      x-expandableFields: []
    account_payout_settings:
      properties:
        debit_negative_balances:
          description: A Boolean indicating if Stripe should try to reclaim negative
            balances from an attached bank account. See our [Understanding
            Connect Account
            Balances](https://stripe.com/docs/connect/account-balances)
            documentation for details. Default value is `true` for Express
            accounts and `false` for Custom accounts.
          type: boolean
        schedule:
          $ref: "#/components/schemas/transfer_schedule"
        statement_descriptor:
          description: The text that appears on the bank account statement for payouts. If
            not set, this defaults to the platform's bank descriptor as set in
            the Dashboard.
          type: string
      required:
        - debit_negative_balances
        - schedule
      title: AccountPayoutSettings
      type: object
      x-expandableFields:
        - schedule
    account_requirements:
      properties:
        current_deadline:
          description: The date the fields in `currently_due` must be collected by to keep
            payouts enabled for the account. These fields might block payouts
            sooner if the next threshold is reached before these fields are
            collected.
          type: integer
        currently_due:
          description: The fields that need to be collected to keep the account enabled. If
            not collected by the `current_deadline`, these fields appear in
            `past_due` as well, and the account is disabled.
          items:
            type: string
          type: array
        disabled_reason:
          description: If the account is disabled, this string describes why the account
            can’t create charges or receive payouts. Can be
            `requirements.past_due`, `requirements.pending_verification`,
            `rejected.fraud`, `rejected.terms_of_service`, `rejected.listed`,
            `rejected.other`, `listed`, `under_review`, or `other`.
          type: string
        eventually_due:
          description: The fields that need to be collected assuming all volume thresholds
            are reached. As they become required, these fields appear in
            `currently_due` as well, and the `current_deadline` is set.
          items:
            type: string
          type: array
        past_due:
          description: The fields that weren't collected by the `current_deadline`. These
            fields need to be collected to re-enable the account.
          items:
            type: string
          type: array
        pending_verification:
          description: Fields that may become required depending on the results of
            verification or review. An empty array unless an asynchronous
            verification is pending. If verification fails, the fields in this
            array become required and move to `currently_due` or `past_due`.
          items:
            type: string
          type: array
      title: AccountRequirements
      type: object
      x-expandableFields: []
    account_settings:
      properties:
        branding:
          $ref: "#/components/schemas/account_branding_settings"
        card_payments:
          $ref: "#/components/schemas/account_card_payments_settings"
        dashboard:
          $ref: "#/components/schemas/account_dashboard_settings"
        payments:
          $ref: "#/components/schemas/account_payments_settings"
        payouts:
          $ref: "#/components/schemas/account_payout_settings"
      required:
        - branding
        - card_payments
        - dashboard
        - payments
      title: AccountSettings
      type: object
      x-expandableFields:
        - branding
        - card_payments
        - dashboard
        - payments
        - payouts
    account_tos_acceptance:
      properties:
        date:
          description: The Unix timestamp marking when the Stripe Services Agreement was
            accepted by the account representative
          type: integer
        ip:
          description: The IP address from which the Stripe Services Agreement was accepted
            by the account representative
          type: string
        user_agent:
          description: The user agent of the browser from which the Stripe Services
            Agreement was accepted by the account representative
          type: string
      title: AccountTOSAcceptance
      type: object
      x-expandableFields: []
    address:
      properties:
        city:
          description: City/District/Suburb/Town/Village.
          type: string
        country:
          description: 2-letter country code.
          type: string
        line1:
          description: Address line 1 (Street address/PO Box/Company name).
          type: string
        line2:
          description: Address line 2 (Apartment/Suite/Unit/Building).
          type: string
        postal_code:
          description: ZIP or postal code.
          type: string
        state:
          description: State/County/Province/Region.
          type: string
      title: Address
      type: object
      x-expandableFields: []
    alipay_account:
      properties:
        created:
          description: Time at which the object was created. Measured in seconds since the
            Unix epoch.
          type: integer
        customer:
          type: string
          x-expansionResources:
            oneOf:
              - $ref: "#/components/schemas/customer"
              - $ref: "#/components/schemas/deleted_customer"
        fingerprint:
          description: Uniquely identifies the account and will be the same across all
            Alipay account objects that are linked to the same Alipay account.
          type: string
        id:
          description: Unique identifier for the object.
          type: string
        livemode:
          description: Has the value `true` if the object exists in live mode or the value
            `false` if the object exists in test mode.
          type: boolean
        metadata:
          description: Set of key-value pairs that you can attach to an object. This can be
            useful for storing additional information about the object in a
            structured format.
          type: object
        object:
          description: String representing the object's type. Objects of the same type
            share the same value.
          enum:
            - alipay_account
          type: string
        payment_amount:
          description: If the Alipay account object is not reusable, the exact amount that
            you can create a charge for.
          type: integer
        payment_currency:
          description: If the Alipay account object is not reusable, the exact currency
            that you can create a charge for.
          type: string
        reusable:
          description: True if you can create multiple payments using this account. If the
            account is reusable, then you can freely choose the amount of each
            payment.
          type: boolean
        used:
          description: Whether this Alipay account object has ever been used for a payment.
          type: boolean
        username:
          description: The username for the Alipay account.
          type: string
      required:
        - created
        - fingerprint
        - id
        - livemode
        - object
        - reusable
        - used
        - username
      title: AlipayAccount
      type: object
      x-expandableFields:
        - customer
      x-resourceId: alipay_account
    api_errors:
      properties:
        charge:
          description: For card errors, the ID of the failed charge.
          type: string
        code:
          description: For some errors that could be handled programmatically, a short
            string indicating the [error
            code](https://stripe.com/docs/error-codes) reported.
          type: string
        decline_code:
          description: For card errors resulting from a card issuer decline, a short string
            indicating the [card issuer's reason for the
            decline](https://stripe.com/docs/declines#issuer-declines) if they
            provide one.
          type: string
        doc_url:
          description: A URL to more information about the [error
            code](https://stripe.com/docs/error-codes) reported.
          type: string
        message:
          description: A human-readable message providing more details about the error. For
            card errors, these messages can be shown to your users.
          type: string
        param:
          description: If the error is parameter-specific, the parameter related to the
            error. For example, you can use this to display a message near the
            correct form field.
          type: string
        payment_intent:
          $ref: "#/components/schemas/payment_intent"
        payment_method:
          $ref: "#/components/schemas/payment_method"
        setup_intent:
          $ref: "#/components/schemas/setup_intent"
        source:
          $ref: "#/components/schemas/bank_account"
        type:
          description: The type of error returned. One of `api_connection_error`,
            `api_error`, `authentication_error`, `card_error`,
            `idempotency_error`, `invalid_request_error`, or `rate_limit_error`
          enum:
            - api_connection_error
            - api_error
            - authentication_error
            - card_error
            - idempotency_error
            - invalid_request_error
            - rate_limit_error
          type: string
      required:
        - type
      title: APIErrors
      type: object
      x-expandableFields:
        - payment_intent
        - payment_method
        - setup_intent
        - source
    apple_pay_domain:
      properties:
        created:
          description: Time at which the object was created. Measured in seconds since the
            Unix epoch.
          type: integer
        domain_name:
          type: string
        id:
          description: Unique identifier for the object.
          type: string
        livemode:
          description: Has the value `true` if the object exists in live mode or the value
            `false` if the object exists in test mode.
          type: boolean
        object:
          description: String representing the object's type. Objects of the same type
            share the same value.
          enum:
            - apple_pay_domain
          type: string
      required:
        - created
        - domain_name
        - id
        - livemode
        - object
      title: ApplePayDomain
      type: object
      x-expandableFields: []
      x-resourceId: apple_pay_domain
    application:
      properties:
        id:
          description: Unique identifier for the object.
          type: string
        name:
          description: The name of the application.
          type: string
        object:
          description: String representing the object's type. Objects of the same type
            share the same value.
          enum:
            - application
          type: string
      required:
        - id
        - object
      title: Application
      type: object
      x-expandableFields: []
    application_fee:
      properties:
        account:
          description: ID of the Stripe account this fee was taken from.
          type: string
          x-expansionResources:
            oneOf:
              - $ref: "#/components/schemas/account"
        amount:
          description: Amount earned, in %s.
          type: integer
        amount_refunded:
          description: Amount in %s refunded (can be less than the amount attribute on the
            fee if a partial refund was issued)
          type: integer
        application:
          description: ID of the Connect application that earned the fee.
          type: string
          x-expansionResources:
            oneOf:
              - $ref: "#/components/schemas/application"
        balance_transaction:
          description: Balance transaction that describes the impact of this collected
            application fee on your account balance (not including refunds).
          type: string
          x-expansionResources:
            oneOf:
              - $ref: "#/components/schemas/balance_transaction"
        charge:
          description: ID of the charge that the application fee was taken from.
          type: string
          x-expansionResources:
            oneOf:
              - $ref: "#/components/schemas/charge"
        created:
          description: Time at which the object was created. Measured in seconds since the
            Unix epoch.
          type: integer
        currency:
          description: Three-letter [ISO currency
            code](https://www.iso.org/iso-4217-currency-codes.html), in
            lowercase. Must be a [supported
            currency](https://stripe.com/docs/currencies).
          type: string
        id:
          description: Unique identifier for the object.
          type: string
        livemode:
          description: Has the value `true` if the object exists in live mode or the value
            `false` if the object exists in test mode.
          type: boolean
        object:
          description: String representing the object's type. Objects of the same type
            share the same value.
          enum:
            - application_fee
          type: string
        originating_transaction:
          description: ID of the corresponding charge on the platform account, if this fee
            was the result of a charge using the `destination` parameter.
          type: string
          x-expansionResources:
            oneOf:
              - $ref: "#/components/schemas/charge"
        refunded:
          description: Whether the fee has been fully refunded. If the fee is only
            partially refunded, this attribute will still be false.
          type: boolean
        refunds:
          description: A list of refunds that have been applied to the fee.
          properties:
            data:
              items:
                $ref: "#/components/schemas/fee_refund"
              type: array
            has_more:
              description: True if this list has another page of items after this one that
                can be fetched.
              type: boolean
            object:
              description: String representing the object's type. Objects of the same type
                share the same value. Always has the value `list`.
              enum:
                - list
              type: string
            url:
              description: The URL where this list can be accessed.
              type: string
          required:
            - data
            - has_more
            - object
            - url
          title: FeeRefundList
          type: object
          x-expandableFields:
            - data
      required:
        - account
        - amount
        - amount_refunded
        - application
        - charge
        - created
        - currency
        - id
        - livemode
        - object
        - refunded
        - refunds
      title: PlatformFee
      type: object
      x-expandableFields:
        - account
        - application
        - balance_transaction
        - charge
        - originating_transaction
        - refunds
      x-resourceId: application_fee
    balance:
      properties:
        available:
          description: Funds that are available to be transferred or paid out, whether
            automatically by Stripe or explicitly via the [Transfers
            API](#transfers) or [Payouts API](#payouts). The available balance
            for each currency and payment type can be found in the
            `source_types` property.
          items:
            $ref: "#/components/schemas/balance_amount"
          type: array
        connect_reserved:
          description: Funds held due to negative balances on connected Custom accounts.
            The connect reserve balance for each currency and payment type can
            be found in the `source_types` property.
          items:
            $ref: "#/components/schemas/balance_amount"
          type: array
        livemode:
          description: Has the value `true` if the object exists in live mode or the value
            `false` if the object exists in test mode.
          type: boolean
        object:
          description: String representing the object's type. Objects of the same type
            share the same value.
          enum:
            - balance
          type: string
        pending:
          description: Funds that are not yet available in the balance, due to the 7-day
            rolling pay cycle. The pending balance for each currency, and for
            each payment type, can be found in the `source_types` property.
          items:
            $ref: "#/components/schemas/balance_amount"
          type: array
      required:
        - available
        - livemode
        - object
        - pending
      title: Balance
      type: object
      x-expandableFields:
        - available
        - connect_reserved
        - pending
      x-resourceId: balance
    balance_amount:
      properties:
        amount:
          description: Balance amount.
          type: integer
        currency:
          description: Three-letter [ISO currency
            code](https://www.iso.org/iso-4217-currency-codes.html), in
            lowercase. Must be a [supported
            currency](https://stripe.com/docs/currencies).
          type: string
        source_types:
          $ref: "#/components/schemas/balance_amount_by_source_type"
      required:
        - amount
        - currency
      title: BalanceAmount
      type: object
      x-expandableFields:
        - source_types
    balance_amount_by_source_type:
      properties:
        bank_account:
          description: Amount for bank account.
          type: integer
        card:
          description: Amount for card.
          type: integer
      title: BalanceAmountBySourceType
      type: object
      x-expandableFields: []
    balance_transaction:
      properties:
        amount:
          description: Gross amount of the transaction, in %s.
          type: integer
        available_on:
          description: The date the transaction's net funds will become available in the
            Stripe balance.
          type: integer
        created:
          description: Time at which the object was created. Measured in seconds since the
            Unix epoch.
          type: integer
        currency:
          description: Three-letter [ISO currency
            code](https://www.iso.org/iso-4217-currency-codes.html), in
            lowercase. Must be a [supported
            currency](https://stripe.com/docs/currencies).
          type: string
        description:
          description: An arbitrary string attached to the object. Often useful for
            displaying to users.
          type: string
        exchange_rate:
          type: number
        fee:
          description: Fees (in %s) paid for this transaction.
          type: integer
        fee_details:
          description: Detailed breakdown of fees (in %s) paid for this transaction.
          items:
            $ref: "#/components/schemas/fee"
          type: array
        id:
          description: Unique identifier for the object.
          type: string
        net:
          description: Net amount of the transaction, in %s.
          type: integer
        object:
          description: String representing the object's type. Objects of the same type
            share the same value.
          enum:
            - balance_transaction
          type: string
        source:
          description: The Stripe object to which this transaction is related.
          type: string
          x-expansionResources:
            oneOf:
              - $ref: "#/components/schemas/application_fee"
              - $ref: "#/components/schemas/charge"
              - $ref: "#/components/schemas/connect_collection_transfer"
              - $ref: "#/components/schemas/dispute"
              - $ref: "#/components/schemas/fee_refund"
              - $ref: "#/components/schemas/issuing.authorization"
              - $ref: "#/components/schemas/issuing.transaction"
              - $ref: "#/components/schemas/payout"
              - $ref: "#/components/schemas/platform_tax_fee"
              - $ref: "#/components/schemas/refund"
              - $ref: "#/components/schemas/reserve_transaction"
              - $ref: "#/components/schemas/topup"
              - $ref: "#/components/schemas/transfer"
              - $ref: "#/components/schemas/transfer_reversal"
        status:
          description: If the transaction's net funds are available in the Stripe balance
            yet. Either `available` or `pending`.
          type: string
        type:
          description: "Transaction type: `adjustment`, `advance`, `advance_funding`,
            `application_fee`, `application_fee_refund`, `charge`,
            `connect_collection_transfer`, `issuing_authorization_hold`,
            `issuing_authorization_release`, `issuing_transaction`, `payment`,
            `payment_failure_refund`, `payment_refund`, `payout`,
            `payout_cancel`, `payout_failure`, `refund`, `refund_failure`,
            `reserve_transaction`, `reserved_funds`, `stripe_fee`,
            `stripe_fx_fee`, `tax_fee`, `topup`, `topup_reversal`, `transfer`,
            `transfer_cancel`, `transfer_failure`, or `transfer_refund`. [Learn
            more](https://stripe.com/docs/reports/balance-transaction-types)
            about balance transaction types and what they represent."
          enum:
            - adjustment
            - advance
            - advance_funding
            - application_fee
            - application_fee_refund
            - charge
            - connect_collection_transfer
            - issuing_authorization_hold
            - issuing_authorization_release
            - issuing_transaction
            - payment
            - payment_failure_refund
            - payment_refund
            - payout
            - payout_cancel
            - payout_failure
            - refund
            - refund_failure
            - reserve_transaction
            - reserved_funds
            - stripe_fee
            - stripe_fx_fee
            - tax_fee
            - topup
            - topup_reversal
            - transfer
            - transfer_cancel
            - transfer_failure
            - transfer_refund
          type: string
      required:
        - amount
        - available_on
        - created
        - currency
        - fee
        - fee_details
        - id
        - net
        - object
        - status
        - type
      title: BalanceTransaction
      type: object
      x-expandableFields:
        - fee_details
        - source
      x-resourceId: balance_transaction
    bank_account:
      properties:
        account:
          type: string
          x-expansionResources:
            oneOf:
              - $ref: "#/components/schemas/account"
        account_holder_name:
          description: The name of the person or business that owns the bank account.
          type: string
        account_holder_type:
          description: The type of entity that holds the account. This can be either
            `individual` or `company`.
          type: string
        bank_name:
          description: Name of the bank associated with the routing number (e.g., `WELLS
            FARGO`).
          type: string
        country:
          description: Two-letter ISO code representing the country the bank account is
            located in.
          type: string
        currency:
          description: Three-letter [ISO code for the
            currency](https://stripe.com/docs/payouts) paid out to the bank
            account.
          type: string
        customer:
          type: string
          x-expansionResources:
            oneOf:
              - $ref: "#/components/schemas/customer"
              - $ref: "#/components/schemas/deleted_customer"
        default_for_currency:
          description: Whether this bank account is the default external account for its
            currency.
          type: boolean
        fingerprint:
          description: Uniquely identifies this particular bank account. You can use this
            attribute to check whether two bank accounts are the same.
          type: string
        id:
          description: Unique identifier for the object.
          type: string
        last4:
          type: string
        metadata:
          description: Set of key-value pairs that you can attach to an object. This can be
            useful for storing additional information about the object in a
            structured format.
          type: object
        object:
          description: String representing the object's type. Objects of the same type
            share the same value.
          enum:
            - bank_account
          type: string
        routing_number:
          description: The routing transit number for the bank account.
          type: string
        status:
          description: >-
            For bank accounts, possible values are `new`, `validated`,
            `verified`, `verification_failed`, or `errored`. A bank account that
            hasn't had any activity or validation performed is `new`. If Stripe
            can determine that the bank account exists, its status will be
            `validated`. Note that there often isn’t enough information to know
            (e.g., for smaller credit unions), and the validation is not always
            run. If customer bank account verification has succeeded, the bank
            account status will be `verified`. If the verification failed for
            any reason, such as microdeposit failure, the status will be
            `verification_failed`. If a transfer sent to this bank account
            fails, we'll set the status to `errored` and will not continue to
            send transfers until the bank details are updated.


            For external accounts, possible values are `new` and `errored`. Validations aren't run against external accounts because they're only used for payouts. This means the other statuses don't apply. If a transfer fails, the status is set to `errored` and transfers are stopped until account details are updated.
          type: string
      required:
        - country
        - currency
        - id
        - last4
        - object
        - status
      title: BankAccount
      type: object
      x-expandableFields:
        - account
        - customer
      x-resourceId: bank_account
    billing_details:
      properties:
        address:
          $ref: "#/components/schemas/address"
        email:
          description: Email address.
          type: string
        name:
          description: Full name.
          type: string
        phone:
          description: Billing phone number (including extension).
          type: string
      title: billing_details
      type: object
      x-expandableFields:
        - address
    bitcoin_receiver:
      properties:
        active:
          description: True when this bitcoin receiver has received a non-zero amount of
            bitcoin.
          type: boolean
        amount:
          description: The amount of `currency` that you are collecting as payment.
          type: integer
        amount_received:
          description: The amount of `currency` to which `bitcoin_amount_received` has been
            converted.
          type: integer
        bitcoin_amount:
          description: "The amount of bitcoin that the customer should send to fill the
            receiver. The `bitcoin_amount` is denominated in Satoshi: there are
            10^8 Satoshi in one bitcoin."
          type: integer
        bitcoin_amount_received:
          description: The amount of bitcoin that has been sent by the customer to this
            receiver.
          type: integer
        bitcoin_uri:
          description: This URI can be displayed to the customer as a clickable link (to
            activate their bitcoin client) or as a QR code (for mobile wallets).
          type: string
        created:
          description: Time at which the object was created. Measured in seconds since the
            Unix epoch.
          type: integer
        currency:
          description: Three-letter [ISO code for the
            currency](https://stripe.com/docs/currencies) to which the bitcoin
            will be converted.
          type: string
        customer:
          type: string
        description:
          description: An arbitrary string attached to the object. Often useful for
            displaying to users.
          type: string
        email:
          description: The customer's email address, set by the API call that creates the
            receiver.
          type: string
        filled:
          description: This flag is initially false and updates to true when the customer
            sends the `bitcoin_amount` to this receiver.
          type: boolean
        id:
          description: Unique identifier for the object.
          type: string
        inbound_address:
          description: A bitcoin address that is specific to this receiver. The customer
            can send bitcoin to this address to fill the receiver.
          type: string
        livemode:
          description: Has the value `true` if the object exists in live mode or the value
            `false` if the object exists in test mode.
          type: boolean
        metadata:
          description: Set of key-value pairs that you can attach to an object. This can be
            useful for storing additional information about the object in a
            structured format.
          type: object
        object:
          description: String representing the object's type. Objects of the same type
            share the same value.
          enum:
            - bitcoin_receiver
          type: string
        payment:
          description: The ID of the payment created from the receiver, if any. Hidden when
            viewing the receiver with a publishable key.
          type: string
        refund_address:
          type: string
        transactions:
          description: A list with one entry for each time that the customer sent bitcoin
            to the receiver. Hidden when viewing the receiver with a publishable
            key.
          properties:
            data:
              items:
                $ref: "#/components/schemas/bitcoin_transaction"
              type: array
            has_more:
              description: True if this list has another page of items after this one that
                can be fetched.
              type: boolean
            object:
              description: String representing the object's type. Objects of the same type
                share the same value. Always has the value `list`.
              enum:
                - list
              type: string
            url:
              description: The URL where this list can be accessed.
              type: string
          required:
            - data
            - has_more
            - object
            - url
          title: BitcoinTransactionList
          type: object
          x-expandableFields:
            - data
        uncaptured_funds:
          description: This receiver contains uncaptured funds that can be used for a
            payment or refunded.
          type: boolean
        used_for_payment:
          type: boolean
      required:
        - active
        - amount
        - amount_received
        - bitcoin_amount
        - bitcoin_amount_received
        - bitcoin_uri
        - created
        - currency
        - filled
        - id
        - inbound_address
        - livemode
        - metadata
        - object
        - uncaptured_funds
      title: BitcoinReceiver
      type: object
      x-expandableFields:
        - transactions
      x-resourceId: bitcoin_receiver
    bitcoin_transaction:
      properties:
        amount:
          description: The amount of `currency` that the transaction was converted to in
            real-time.
          type: integer
        bitcoin_amount:
          description: The amount of bitcoin contained in the transaction.
          type: integer
        created:
          description: Time at which the object was created. Measured in seconds since the
            Unix epoch.
          type: integer
        currency:
          description: Three-letter [ISO code for the
            currency](https://stripe.com/docs/currencies) to which this
            transaction was converted.
          type: string
        id:
          description: Unique identifier for the object.
          type: string
        object:
          description: String representing the object's type. Objects of the same type
            share the same value.
          enum:
            - bitcoin_transaction
          type: string
        receiver:
          description: The receiver to which this transaction was sent.
          type: string
      required:
        - amount
        - bitcoin_amount
        - created
        - currency
        - id
        - object
        - receiver
      title: BitcoinTransaction
      type: object
      x-expandableFields: []
      x-resourceId: bitcoin_transaction
    capability:
      properties:
        account:
          description: The account for which the capability enables functionality.
          type: string
          x-expansionResources:
            oneOf:
              - $ref: "#/components/schemas/account"
        id:
          description: The identifier for the capability.
          type: string
        object:
          description: String representing the object's type. Objects of the same type
            share the same value.
          enum:
            - capability
          type: string
        requested:
          description: Whether the capability has been requested.
          type: boolean
        requested_at:
          description: Time at which the capability was requested. Measured in seconds
            since the Unix epoch.
          type: integer
        requirements:
          $ref: "#/components/schemas/account_capability_requirements"
        status:
          description: The status of the capability. Can be `active`, `inactive`,
            `pending`, or `unrequested`.
          enum:
            - active
            - disabled
            - inactive
            - pending
            - unrequested
          type: string
      required:
        - account
        - id
        - object
        - requested
        - status
      title: AccountCapability
      type: object
      x-expandableFields:
        - account
        - requirements
      x-resourceId: capability
    card:
      properties:
        account:
          description: The account this card belongs to. This attribute will not be in the
            card object if the card belongs to a customer or recipient instead.
          type: string
          x-expansionResources:
            oneOf:
              - $ref: "#/components/schemas/account"
        address_city:
          description: City/District/Suburb/Town/Village.
          type: string
        address_country:
          description: Billing address country, if provided when creating card.
          type: string
        address_line1:
          description: Address line 1 (Street address/PO Box/Company name).
          type: string
        address_line1_check:
          description: "If `address_line1` was provided, results of the check: `pass`,
            `fail`, `unavailable`, or `unchecked`."
          type: string
        address_line2:
          description: Address line 2 (Apartment/Suite/Unit/Building).
          type: string
        address_state:
          description: State/County/Province/Region.
          type: string
        address_zip:
          description: ZIP or postal code.
          type: string
        address_zip_check:
          description: "If `address_zip` was provided, results of the check: `pass`,
            `fail`, `unavailable`, or `unchecked`."
          type: string
        available_payout_methods:
          description: A set of available payout methods for this card. Will be either
            `["standard"]` or `["standard", "instant"]`. Only values from this
            set should be passed as the `method` when creating a transfer.
          items:
            enum:
              - instant
              - standard
            type: string
          type: array
        brand:
          description: Card brand. Can be `American Express`, `Diners Club`, `Discover`,
            `JCB`, `MasterCard`, `UnionPay`, `Visa`, or `Unknown`.
          type: string
        country:
          description: Two-letter ISO code representing the country of the card. You could
            use this attribute to get a sense of the international breakdown of
            cards you've collected.
          type: string
        currency:
          type: string
        customer:
          description: The customer that this card belongs to. This attribute will not be
            in the card object if the card belongs to an account or recipient
            instead.
          type: string
          x-expansionResources:
            oneOf:
              - $ref: "#/components/schemas/customer"
              - $ref: "#/components/schemas/deleted_customer"
        cvc_check:
          description: "If a CVC was provided, results of the check: `pass`, `fail`,
            `unavailable`, or `unchecked`."
          type: string
        default_for_currency:
          description: Whether this card is the default external account for its currency.
          type: boolean
        dynamic_last4:
          description: (For tokenized numbers only.) The last four digits of the device
            account number.
          type: string
        exp_month:
          description: Two-digit number representing the card's expiration month.
          type: integer
        exp_year:
          description: Four-digit number representing the card's expiration year.
          type: integer
        fingerprint:
          description: Uniquely identifies this particular card number. You can use this
            attribute to check whether two customers who've signed up with you
            are using the same card number, for example.
          type: string
        funding:
          description: Card funding type. Can be `credit`, `debit`, `prepaid`, or `unknown`.
          type: string
        id:
          description: Unique identifier for the object.
          type: string
        last4:
          description: The last four digits of the card.
          type: string
        metadata:
          description: Set of key-value pairs that you can attach to an object. This can be
            useful for storing additional information about the object in a
            structured format.
          type: object
        name:
          description: Cardholder name.
          type: string
        object:
          description: String representing the object's type. Objects of the same type
            share the same value.
          enum:
            - card
          type: string
        recipient:
          description: The recipient that this card belongs to. This attribute will not be
            in the card object if the card belongs to a customer or account
            instead.
          type: string
          x-expansionResources:
            oneOf:
              - $ref: "#/components/schemas/recipient"
        tokenization_method:
          description: If the card number is tokenized, this is the method that was used.
            Can be `apple_pay` or `google_pay`.
          type: string
      required:
        - brand
        - exp_month
        - exp_year
        - funding
        - id
        - last4
        - metadata
        - object
      title: Card
      type: object
      x-expandableFields:
        - account
        - customer
        - recipient
      x-resourceId: card
    charge:
      properties:
        amount:
          description: A positive integer representing how much to charge in the [smallest
            currency unit](https://stripe.com/docs/currencies#zero-decimal)
            (e.g., 100 cents to charge $1.00 or 100 to charge ¥100, a
            zero-decimal currency). The minimum amount is $0.50 US or
            [equivalent in charge
            currency](https://stripe.com/docs/currencies#minimum-and-maximum-charge-amounts).
            The amount value supports up to eight digits (e.g., a value of
            99999999 for a USD charge of $999,999.99).
          type: integer
        amount_refunded:
          description: Amount in %s refunded (can be less than the amount attribute on the
            charge if a partial refund was issued).
          type: integer
        application:
          description: ID of the Connect application that created the charge.
          type: string
          x-expansionResources:
            oneOf:
              - $ref: "#/components/schemas/application"
        application_fee:
          description: The application fee (if any) for the charge. [See the Connect
            documentation](https://stripe.com/docs/connect/direct-charges#collecting-fees)
            for details.
          type: string
          x-expansionResources:
            oneOf:
              - $ref: "#/components/schemas/application_fee"
        application_fee_amount:
          description: The amount of the application fee (if any) for the charge. [See the
            Connect
            documentation](https://stripe.com/docs/connect/direct-charges#collecting-fees)
            for details.
          type: integer
        balance_transaction:
          description: ID of the balance transaction that describes the impact of this
            charge on your account balance (not including refunds or disputes).
          type: string
          x-expansionResources:
            oneOf:
              - $ref: "#/components/schemas/balance_transaction"
        billing_details:
          $ref: "#/components/schemas/billing_details"
        captured:
          description: If the charge was created without capturing, this Boolean represents
            whether it is still uncaptured or has since been captured.
          type: boolean
        created:
          description: Time at which the object was created. Measured in seconds since the
            Unix epoch.
          type: integer
        currency:
          description: Three-letter [ISO currency
            code](https://www.iso.org/iso-4217-currency-codes.html), in
            lowercase. Must be a [supported
            currency](https://stripe.com/docs/currencies).
          type: string
        customer:
          description: ID of the customer this charge is for if one exists.
          type: string
          x-expansionResources:
            oneOf:
              - $ref: "#/components/schemas/customer"
              - $ref: "#/components/schemas/deleted_customer"
        description:
          description: An arbitrary string attached to the object. Often useful for
            displaying to users.
          type: string
        dispute:
          description: Details about the dispute if the charge has been disputed.
          type: string
          x-expansionResources:
            oneOf:
              - $ref: "#/components/schemas/dispute"
        failure_code:
          description: Error code explaining reason for charge failure if available (see
            [the errors section](https://stripe.com/docs/api#errors) for a list
            of codes).
          type: string
        failure_message:
          description: Message to user further explaining reason for charge failure if
            available.
          type: string
        fraud_details:
          $ref: "#/components/schemas/charge_fraud_details"
        id:
          description: Unique identifier for the object.
          type: string
        invoice:
          description: ID of the invoice this charge is for if one exists.
          type: string
          x-expansionResources:
            oneOf:
              - $ref: "#/components/schemas/invoice"
        livemode:
          description: Has the value `true` if the object exists in live mode or the value
            `false` if the object exists in test mode.
          type: boolean
        metadata:
          description: Set of key-value pairs that you can attach to an object. This can be
            useful for storing additional information about the object in a
            structured format.
          type: object
        object:
          description: String representing the object's type. Objects of the same type
            share the same value.
          enum:
            - charge
          type: string
        on_behalf_of:
          description: The account (if any) the charge was made on behalf of without
            triggering an automatic transfer. See the [Connect
            documentation](https://stripe.com/docs/connect/charges-transfers)
            for details.
          type: string
          x-expansionResources:
            oneOf:
              - $ref: "#/components/schemas/account"
        order:
          description: ID of the order this charge is for if one exists.
          type: string
          x-expansionResources:
            oneOf:
              - $ref: "#/components/schemas/order"
        outcome:
          $ref: "#/components/schemas/charge_outcome"
        paid:
          description: "`true` if the charge succeeded, or was successfully authorized for
            later capture."
          type: boolean
        payment_intent:
          description: ID of the PaymentIntent associated with this charge, if one exists.
          type: string
        payment_method:
          description: ID of the payment method used in this charge.
          type: string
        payment_method_details:
          $ref: "#/components/schemas/payment_method_details"
        receipt_email:
          description: This is the email address that the receipt for this charge was sent
            to.
          type: string
        receipt_number:
          description: This is the transaction number that appears on email receipts sent
            for this charge. This attribute will be `null` until a receipt has
            been sent.
          type: string
        receipt_url:
          description: This is the URL to view the receipt for this charge. The receipt is
            kept up-to-date to the latest state of the charge, including any
            refunds. If the charge is for an Invoice, the receipt will be
            stylized as an Invoice receipt.
          type: string
        refunded:
          description: Whether the charge has been fully refunded. If the charge is only
            partially refunded, this attribute will still be false.
          type: boolean
        refunds:
          description: A list of refunds that have been applied to the charge.
          properties:
            data:
              items:
                $ref: "#/components/schemas/refund"
              type: array
            has_more:
              description: True if this list has another page of items after this one that
                can be fetched.
              type: boolean
            object:
              description: String representing the object's type. Objects of the same type
                share the same value. Always has the value `list`.
              enum:
                - list
              type: string
            url:
              description: The URL where this list can be accessed.
              type: string
          required:
            - data
            - has_more
            - object
            - url
          title: RefundList
          type: object
          x-expandableFields:
            - data
        review:
          description: ID of the review associated with this charge if one exists.
          type: string
          x-expansionResources:
            oneOf:
              - $ref: "#/components/schemas/review"
        shipping:
          $ref: "#/components/schemas/shipping"
        source_transfer:
          description: The transfer ID which created this charge. Only present if the
            charge came from another Stripe account. [See the Connect
            documentation](https://stripe.com/docs/connect/destination-charges)
            for details.
          type: string
          x-expansionResources:
            oneOf:
              - $ref: "#/components/schemas/transfer"
        statement_descriptor:
          description: For card charges, use `statement_descriptor_suffix` instead.
            Otherwise, you can use this value as the complete description of a
            charge on your customers’ statements. Must contain at least one
            letter, maximum 22 characters.
          type: string
        statement_descriptor_suffix:
          description: Provides information about the charge that customers see on their
            statements. Concatenated with the prefix (shortened descriptor) or
            statement descriptor that’s set on the account to form the complete
            statement descriptor. Maximum 22 characters for the concatenated
            descriptor.
          type: string
        status:
          description: The status of the payment is either `succeeded`, `pending`, or
            `failed`.
          type: string
        transfer:
          description: ID of the transfer to the `destination` account (only applicable if
            the charge was created using the `destination` parameter).
          type: string
          x-expansionResources:
            oneOf:
              - $ref: "#/components/schemas/transfer"
        transfer_data:
          $ref: "#/components/schemas/charge_transfer_data"
        transfer_group:
          description: A string that identifies this transaction as part of a group. See
            the [Connect
            documentation](https://stripe.com/docs/connect/charges-transfers#grouping-transactions)
            for details.
          type: string
      required:
        - amount
        - amount_refunded
        - billing_details
        - captured
        - created
        - currency
        - id
        - livemode
        - metadata
        - object
        - paid
        - receipt_url
        - refunded
        - refunds
        - status
      title: Charge
      type: object
      x-expandableFields:
        - application
        - application_fee
        - balance_transaction
        - billing_details
        - customer
        - dispute
        - fraud_details
        - invoice
        - on_behalf_of
        - order
        - outcome
        - payment_method_details
        - refunds
        - review
        - shipping
        - source_transfer
        - transfer
        - transfer_data
      x-resourceId: charge
    charge_fraud_details:
      properties:
        stripe_report:
          description: Assessments from Stripe. If set, the value is `fraudulent`.
          type: string
        user_report:
          description: Assessments reported by you. If set, possible values of are `safe`
            and `fraudulent`.
          type: string
      title: ChargeFraudDetails
      type: object
      x-expandableFields: []
    charge_outcome:
      properties:
        network_status:
          description: Possible values are `approved_by_network`, `declined_by_network`,
            `not_sent_to_network`, and `reversed_after_approval`. The value
            `reversed_after_approval` indicates the payment was [blocked by
            Stripe](https://stripe.com/docs/declines#blocked-payments) after
            bank authorization, and may temporarily appear as "pending" on a
            cardholder's statement.
          type: string
        reason:
          description: An enumerated value providing a more detailed explanation of the
            outcome's `type`. Charges blocked by Radar's default block rule have
            the value `highest_risk_level`. Charges placed in review by Radar's
            default review rule have the value `elevated_risk_level`. Charges
            authorized, blocked, or placed in review by custom rules have the
            value `rule`. See [understanding
            declines](https://stripe.com/docs/declines) for more details.
          type: string
        risk_level:
          description: Stripe's evaluation of the riskiness of the payment. Possible values
            for evaluated payments are `normal`, `elevated`, `highest`. For
            non-card payments, and card-based payments predating the public
            assignment of risk levels, this field will have the value
            `not_assessed`. In the event of an error in the evaluation, this
            field will have the value `unknown`.
          type: string
        risk_score:
          description: Stripe's evaluation of the riskiness of the payment. Possible values
            for evaluated payments are between 0 and 100. For non-card payments,
            card-based payments predating the public assignment of risk scores,
            or in the event of an error during evaluation, this field will not
            be present. This field is only available with Radar for Fraud Teams.
          type: integer
        rule:
          description: The ID of the Radar rule that matched the payment, if applicable.
          type: string
          x-expansionResources:
            oneOf:
              - $ref: "#/components/schemas/rule"
        seller_message:
          description: A human-readable description of the outcome type and reason,
            designed for you (the recipient of the payment), not your customer.
          type: string
        type:
          description: Possible values are `authorized`, `manual_review`,
            `issuer_declined`, `blocked`, and `invalid`. See [understanding
            declines](https://stripe.com/docs/declines) and [Radar
            reviews](radar/review) for details.
          type: string
      required:
        - type
      title: ChargeOutcome
      type: object
      x-expandableFields:
        - rule
    charge_transfer_data:
      properties:
        amount:
          description: The amount transferred to the destination account, if specified. By
            default, the entire charge amount is transferred to the destination
            account.
          type: integer
        destination:
          description: ID of an existing, connected Stripe account to transfer funds to if
            `transfer_data` was specified in the charge request.
          type: string
          x-expansionResources:
            oneOf:
              - $ref: "#/components/schemas/account"
      required:
        - destination
      title: ChargeTransferData
      type: object
      x-expandableFields:
        - destination
    checkout.session:
      properties:
        billing_address_collection:
          description: |-
            The value (`auto` or `required`) for whether Checkout collected the
            customer's billing address.
          type: string
        cancel_url:
          description: The URL the customer will be directed to if they decide to cancel
            payment and return to your website.
          type: string
        client_reference_id:
          description: |-
            A unique string to reference the Checkout Session. This can be a
            customer ID, a cart ID, or similar, and can be used to reconcile the
            session with your internal systems.
          type: string
        customer:
          description: |-
            The ID of the customer for this session.
            For Checkout Sessions in `payment` or `subscription` mode, Checkout
            will create a new customer object based on information provided
            during the session unless an existing customer was provided when
            the session was created.
          type: string
          x-expansionResources:
            oneOf:
              - $ref: "#/components/schemas/customer"
        customer_email:
          description: >-
            If provided, this value will be used when the Customer object is
            created.

            If not provided, customers will be asked to enter their email address.

            Use this parameter to prefill customer data if you already have an email

            on file. To access information about the customer once a session is

            complete, use the `customer` field.
          type: string
        display_items:
          description: The line items, plans, or SKUs purchased by the customer.
          items:
            $ref: "#/components/schemas/checkout_session_display_item"
          type: array
        id:
          description: >-
            Unique identifier for the object. Used to pass to
            `redirectToCheckout`

            in Stripe.js.
          type: string
        livemode:
          description: Has the value `true` if the object exists in live mode or the value
            `false` if the object exists in test mode.
          type: boolean
        locale:
          description: >-
            The IETF language tag of the locale Checkout is displayed in. If
            blank

            or `auto`, the browser's locale is used.
          enum:
            - auto
            - da
            - de
            - en
            - es
            - fi
            - fr
            - it
            - ja
            - nb
            - nl
            - pl
            - pt
            - sv
            - zh
          type: string
        mode:
          description: The mode of the Checkout Session, one of `payment`, `setup`, or
            `subscription`.
          enum:
            - payment
            - setup
            - subscription
          type: string
        object:
          description: String representing the object's type. Objects of the same type
            share the same value.
          enum:
            - checkout.session
          type: string
        payment_intent:
          description: The ID of the PaymentIntent for Checkout Sessions in `payment` mode.
          type: string
          x-expansionResources:
            oneOf:
              - $ref: "#/components/schemas/payment_intent"
        payment_method_types:
          description: |-
            A list of the types of payment methods (e.g. card) this Checkout
            Session is allowed to accept.
          items:
            type: string
          type: array
        setup_intent:
          description: The ID of the SetupIntent for Checkout Sessions in `setup` mode.
          type: string
          x-expansionResources:
            oneOf:
              - $ref: "#/components/schemas/setup_intent"
        submit_type:
          description: >-
            Describes the type of transaction being performed by Checkout in
            order to customize

            relevant text on the page, such as the submit button. `submit_type` can only be

            specified on Checkout Sessions in `payment` mode, but not Checkout Sessions

            in `subscription` or `setup` mode.

            Supported values are `auto`, `book`, `donate`, or `pay`.
          enum:
            - auto
            - book
            - donate
            - pay
          type: string
        subscription:
          description: The ID of the subscription for Checkout Sessions in `subscription`
            mode.
          type: string
          x-expansionResources:
            oneOf:
              - $ref: "#/components/schemas/subscription"
        success_url:
          description: |-
            The URL the customer will be directed to after the payment or
            subscription creation is successful.
          type: string
      required:
        - cancel_url
        - id
        - livemode
        - object
        - payment_method_types
        - success_url
      title: Session
      type: object
      x-expandableFields:
        - customer
        - display_items
        - payment_intent
        - setup_intent
        - subscription
      x-resourceId: checkout.session
    checkout_session_custom_display_item_description:
      properties:
        description:
          description: The description of the line item.
          type: string
        images:
          description: The images of the line item.
          items:
            type: string
          type: array
        name:
          description: The name of the line item.
          type: string
      required:
        - name
      title: checkout_session_custom_display_item_description
      type: object
      x-expandableFields: []
    checkout_session_display_item:
      properties:
        amount:
          description: Amount for the display item.
          type: integer
        currency:
          description: Three-letter [ISO currency
            code](https://www.iso.org/iso-4217-currency-codes.html), in
            lowercase. Must be a [supported
            currency](https://stripe.com/docs/currencies).
          type: string
        custom:
          $ref: "#/components/schemas/checkout_session_custom_display_item_descript\
            ion"
        plan:
          $ref: "#/components/schemas/plan"
        quantity:
          description: Quantity of the display item being purchased.
          type: integer
        sku:
          $ref: "#/components/schemas/sku"
        type:
          description: The type of display item. One of `custom`, `plan` or `sku`
          type: string
      title: checkout_session_display_item
      type: object
      x-expandableFields:
        - custom
        - plan
        - sku
    connect_collection_transfer:
      properties:
        amount:
          description: Amount transferred, in %s.
          type: integer
        currency:
          description: Three-letter [ISO currency
            code](https://www.iso.org/iso-4217-currency-codes.html), in
            lowercase. Must be a [supported
            currency](https://stripe.com/docs/currencies).
          type: string
        destination:
          description: ID of the account that funds are being collected for.
          type: string
          x-expansionResources:
            oneOf:
              - $ref: "#/components/schemas/account"
        id:
          description: Unique identifier for the object.
          type: string
        livemode:
          description: Has the value `true` if the object exists in live mode or the value
            `false` if the object exists in test mode.
          type: boolean
        object:
          description: String representing the object's type. Objects of the same type
            share the same value.
          enum:
            - connect_collection_transfer
          type: string
      required:
        - amount
        - currency
        - destination
        - id
        - livemode
        - object
      title: ConnectCollectionTransfer
      type: object
      x-expandableFields:
        - destination
    country_spec:
      properties:
        default_currency:
          description: The default currency for this country. This applies to both payment
            methods and bank accounts.
          type: string
        id:
          description: Unique identifier for the object. Represented as the ISO country
            code for this country.
          type: string
        object:
          description: String representing the object's type. Objects of the same type
            share the same value.
          enum:
            - country_spec
          type: string
        supported_bank_account_currencies:
          description: Currencies that can be accepted in the specific country (for
            transfers).
          type: object
        supported_payment_currencies:
          description: Currencies that can be accepted in the specified country (for
            payments).
          items:
            type: string
          type: array
        supported_payment_methods:
          description: Payment methods available in the specified country. You may need to
            enable some payment methods (e.g.,
            [ACH](https://stripe.com/docs/ach)) on your account before they
            appear in this list. The `stripe` payment method refers to [charging
            through your
            platform](https://stripe.com/docs/connect/destination-charges).
          items:
            type: string
          type: array
        supported_transfer_countries:
          description: Countries that can accept transfers from the specified country.
          items:
            type: string
          type: array
        verification_fields:
          $ref: "#/components/schemas/country_spec_verification_fields"
      required:
        - default_currency
        - id
        - object
        - supported_bank_account_currencies
        - supported_payment_currencies
        - supported_payment_methods
        - supported_transfer_countries
        - verification_fields
      title: CountrySpec
      type: object
      x-expandableFields:
        - verification_fields
      x-resourceId: country_spec
    country_spec_verification_field_details:
      properties:
        additional:
          description: Additional fields which are only required for some users.
          items:
            type: string
          type: array
        minimum:
          description: Fields which every account must eventually provide.
          items:
            type: string
          type: array
      required:
        - additional
        - minimum
      title: CountrySpecVerificationFieldDetails
      type: object
      x-expandableFields: []
    country_spec_verification_fields:
      properties:
        company:
          $ref: "#/components/schemas/country_spec_verification_field_details"
        individual:
          $ref: "#/components/schemas/country_spec_verification_field_details"
      required:
        - company
        - individual
      title: CountrySpecVerificationFields
      type: object
      x-expandableFields:
        - company
        - individual
    coupon:
      properties:
        amount_off:
          description: Amount (in the `currency` specified) that will be taken off the
            subtotal of any invoices for this customer.
          type: integer
        created:
          description: Time at which the object was created. Measured in seconds since the
            Unix epoch.
          type: integer
        currency:
          description: If `amount_off` has been set, the three-letter [ISO code for the
            currency](https://stripe.com/docs/currencies) of the amount to take
            off.
          type: string
        duration:
          description: One of `forever`, `once`, and `repeating`. Describes how long a
            customer who applies this coupon will get the discount.
          enum:
            - forever
            - once
            - repeating
          type: string
        duration_in_months:
          description: If `duration` is `repeating`, the number of months the coupon
            applies. Null if coupon `duration` is `forever` or `once`.
          type: integer
        id:
          description: Unique identifier for the object.
          type: string
        livemode:
          description: Has the value `true` if the object exists in live mode or the value
            `false` if the object exists in test mode.
          type: boolean
        max_redemptions:
          description: Maximum number of times this coupon can be redeemed, in total,
            across all customers, before it is no longer valid.
          type: integer
        metadata:
          description: Set of key-value pairs that you can attach to an object. This can be
            useful for storing additional information about the object in a
            structured format.
          type: object
        name:
          description: Name of the coupon displayed to customers on for instance invoices
            or receipts.
          type: string
        object:
          description: String representing the object's type. Objects of the same type
            share the same value.
          enum:
            - coupon
          type: string
        percent_off:
          description: Percent that will be taken off the subtotal of any invoices for this
            customer for the duration of the coupon. For example, a coupon with
            percent_off of 50 will make a %s100 invoice %s50 instead.
          type: number
        redeem_by:
          description: Date after which the coupon can no longer be redeemed.
          type: integer
        times_redeemed:
          description: Number of times this coupon has been applied to a customer.
          type: integer
        valid:
          description: Taking account of the above properties, whether this coupon can
            still be applied to a customer.
          type: boolean
      required:
        - created
        - duration
        - id
        - livemode
        - metadata
        - object
        - times_redeemed
        - valid
      title: Coupon
      type: object
      x-expandableFields: []
      x-resourceId: coupon
    credit_note:
      properties:
        amount:
          description: The integer amount in **%s** representing the total amount of the
            credit note, including tax.
          type: integer
        created:
          description: Time at which the object was created. Measured in seconds since the
            Unix epoch.
          type: integer
        currency:
          description: Three-letter [ISO currency
            code](https://www.iso.org/iso-4217-currency-codes.html), in
            lowercase. Must be a [supported
            currency](https://stripe.com/docs/currencies).
          type: string
        customer:
          description: ID of the customer.
          type: string
          x-expansionResources:
            oneOf:
              - $ref: "#/components/schemas/customer"
        customer_balance_transaction:
          description: Customer balance transaction related to this credit note.
          type: string
          x-expansionResources:
            oneOf:
              - $ref: "#/components/schemas/customer_balance_transaction"
        id:
          description: Unique identifier for the object.
          type: string
        invoice:
          description: ID of the invoice.
          type: string
          x-expansionResources:
            oneOf:
              - $ref: "#/components/schemas/invoice"
        livemode:
          description: Has the value `true` if the object exists in live mode or the value
            `false` if the object exists in test mode.
          type: boolean
        memo:
          description: Customer-facing text that appears on the credit note PDF.
          type: string
        metadata:
          description: Set of key-value pairs that you can attach to an object. This can be
            useful for storing additional information about the object in a
            structured format.
          type: object
        number:
          description: A unique number that identifies this particular credit note and
            appears on the PDF of the credit note and its associated invoice.
          type: string
        object:
          description: String representing the object's type. Objects of the same type
            share the same value.
          enum:
            - credit_note
          type: string
        pdf:
          description: The link to download the PDF of the credit note.
          type: string
        reason:
          description: Reason for issuing this credit note, one of `duplicate`,
            `fraudulent`, `order_change`, or `product_unsatisfactory`
          enum:
            - duplicate
            - fraudulent
            - order_change
            - product_unsatisfactory
          type: string
        refund:
          description: Refund related to this credit note.
          type: string
          x-expansionResources:
            oneOf:
              - $ref: "#/components/schemas/refund"
        status:
          description: Status of this credit note, one of `issued` or `void`. Learn more
            about [voiding credit
            notes](https://stripe.com/docs/billing/invoices/credit-notes#voiding).
          enum:
            - issued
            - void
          type: string
        type:
          description: Type of this credit note, one of `post_payment` or `pre_payment`. A
            `pre_payment` credit note means it was issued when the invoice was
            open. A `post_payment` credit note means it was issued when the
            invoice was paid.
          enum:
            - post_payment
            - pre_payment
          type: string
        voided_at:
          description: The time that the credit note was voided.
          type: integer
      required:
        - amount
        - created
        - currency
        - customer
        - id
        - invoice
        - livemode
        - metadata
        - number
        - object
        - pdf
        - status
        - type
      title: CreditNote
      type: object
      x-expandableFields:
        - customer
        - customer_balance_transaction
        - invoice
        - refund
      x-resourceId: credit_note
    customer:
      properties:
        account_balance:
          description: This field has been renamed to `balance` and will be removed in a
            future API version.
          type: integer
        address:
          $ref: "#/components/schemas/address"
        balance:
          description: Current balance, if any, being stored on the customer. If negative,
            the customer has credit to apply to their next invoice. If positive,
            the customer has an amount owed that will be added to their next
            invoice. The balance does not refer to any unpaid invoices; it
            solely takes into account amounts that have yet to be successfully
            applied to any invoice. This balance is only taken into account as
            invoices are finalized.
          type: integer
        created:
          description: Time at which the object was created. Measured in seconds since the
            Unix epoch.
          type: integer
        currency:
          description: Three-letter [ISO code for the
            currency](https://stripe.com/docs/currencies) the customer can be
            charged in for recurring billing purposes.
          type: string
        default_source:
          description: ID of the default payment source for the customer.
          type: string
          x-expansionResources:
            oneOf:
              - $ref: "#/components/schemas/alipay_account"
              - $ref: "#/components/schemas/bank_account"
              - $ref: "#/components/schemas/bitcoin_receiver"
              - $ref: "#/components/schemas/card"
              - $ref: "#/components/schemas/source"
        delinquent:
          description: When the customer's latest invoice is billed by charging
            automatically, delinquent is true if the invoice's latest charge is
            failed. When the customer's latest invoice is billed by sending an
            invoice, delinquent is true if the invoice is not paid by its due
            date.
          type: boolean
        description:
          description: An arbitrary string attached to the object. Often useful for
            displaying to users.
          type: string
        discount:
          $ref: "#/components/schemas/discount"
        email:
          description: The customer's email address.
          type: string
        id:
          description: Unique identifier for the object.
          type: string
        invoice_prefix:
          description: The prefix for the customer used to generate unique invoice numbers.
          type: string
        invoice_settings:
          $ref: "#/components/schemas/invoice_setting_customer_setting"
        livemode:
          description: Has the value `true` if the object exists in live mode or the value
            `false` if the object exists in test mode.
          type: boolean
        metadata:
          description: Set of key-value pairs that you can attach to an object. This can be
            useful for storing additional information about the object in a
            structured format.
          type: object
        name:
          description: The customer's full name or business name.
          type: string
        object:
          description: String representing the object's type. Objects of the same type
            share the same value.
          enum:
            - customer
          type: string
        phone:
          description: The customer's phone number.
          type: string
        preferred_locales:
          description: The customer's preferred locales (languages), ordered by preference.
          items:
            type: string
          type: array
        shipping:
          $ref: "#/components/schemas/shipping"
        sources:
          description: The customer's payment sources, if any.
          properties:
            data:
              description: The list contains all payment sources that have been attached to
                the customer.
              items:
                $ref: "#/components/schemas/alipay_account"
              type: array
            has_more:
              description: True if this list has another page of items after this one that
                can be fetched.
              type: boolean
            object:
              description: String representing the object's type. Objects of the same type
                share the same value. Always has the value `list`.
              enum:
                - list
              type: string
            url:
              description: The URL where this list can be accessed.
              type: string
          required:
            - data
            - has_more
            - object
            - url
          title: ApmsSourcesSourceList
          type: object
          x-expandableFields:
            - data
        subscriptions:
          description: The customer's current subscriptions, if any.
          properties:
            data:
              items:
                $ref: "#/components/schemas/subscription"
              type: array
            has_more:
              description: True if this list has another page of items after this one that
                can be fetched.
              type: boolean
            object:
              description: String representing the object's type. Objects of the same type
                share the same value. Always has the value `list`.
              enum:
                - list
              type: string
            url:
              description: The URL where this list can be accessed.
              type: string
          required:
            - data
            - has_more
            - object
            - url
          title: SubscriptionList
          type: object
          x-expandableFields:
            - data
        tax_exempt:
          description: Describes the customer's tax exemption status. One of `none`,
            `exempt`, or `reverse`. When set to `reverse`, invoice and receipt
            PDFs include the text **"Reverse charge"**.
          enum:
            - exempt
            - none
            - reverse
          type: string
        tax_ids:
          description: The customer's tax IDs.
          properties:
            data:
              items:
                $ref: "#/components/schemas/tax_id"
              type: array
            has_more:
              description: True if this list has another page of items after this one that
                can be fetched.
              type: boolean
            object:
              description: String representing the object's type. Objects of the same type
                share the same value. Always has the value `list`.
              enum:
                - list
              type: string
            url:
              description: The URL where this list can be accessed.
              type: string
          required:
            - data
            - has_more
            - object
            - url
          title: TaxIDsList
          type: object
          x-expandableFields:
            - data
        tax_info:
          $ref: "#/components/schemas/tax_info"
        tax_info_verification:
          $ref: "#/components/schemas/tax_info_verification"
      required:
        - created
        - id
        - livemode
        - object
        - sources
      title: Customer
      type: object
      x-expandableFields:
        - address
        - default_source
        - discount
        - invoice_settings
        - shipping
        - sources
        - subscriptions
        - tax_ids
        - tax_info
        - tax_info_verification
      x-resourceId: customer
    customer_balance_transaction:
      properties:
        amount:
          description: The amount of the transaction. A negative value is a credit for the
            customer's balance, and a positive value is a debit to the
            customer's `balance`.
          type: integer
        created:
          description: Time at which the object was created. Measured in seconds since the
            Unix epoch.
          type: integer
        credit_note:
          description: The ID of the credit note (if any) related to the transaction.
          type: string
          x-expansionResources:
            oneOf:
              - $ref: "#/components/schemas/credit_note"
        currency:
          description: Three-letter [ISO currency
            code](https://www.iso.org/iso-4217-currency-codes.html), in
            lowercase. Must be a [supported
            currency](https://stripe.com/docs/currencies).
          type: string
        customer:
          description: The ID of the customer the transaction belongs to.
          type: string
          x-expansionResources:
            oneOf:
              - $ref: "#/components/schemas/customer"
        description:
          description: An arbitrary string attached to the object. Often useful for
            displaying to users.
          type: string
        ending_balance:
          description: The customer's `balance` after the transaction was applied. A
            negative value decreases the amount due on the customer's next
            invoice. A positive value increases the amount due on the customer's
            next invoice.
          type: integer
        id:
          description: Unique identifier for the object.
          type: string
        invoice:
          description: The ID of the invoice (if any) related to the transaction.
          type: string
          x-expansionResources:
            oneOf:
              - $ref: "#/components/schemas/invoice"
        livemode:
          description: Has the value `true` if the object exists in live mode or the value
            `false` if the object exists in test mode.
          type: boolean
        metadata:
          description: Set of key-value pairs that you can attach to an object. This can be
            useful for storing additional information about the object in a
            structured format.
          type: object
        object:
          description: String representing the object's type. Objects of the same type
            share the same value.
          enum:
            - customer_balance_transaction
          type: string
        type:
          description: "Transaction type: `adjustment`, `applied_to_invoice`,
            `credit_note`, `initial`, `invoice_too_large`, `invoice_too_small`,
            or `unspent_receiver_credit`. See the [Customer Balance
            page](https://stripe.com/docs/billing/customer/balance#types) to
            learn more about transaction types."
          enum:
            - adjustment
            - applied_to_invoice
            - credit_note
            - initial
            - invoice_too_large
            - invoice_too_small
            - migration
            - unspent_receiver_credit
          type: string
      required:
        - amount
        - created
        - currency
        - customer
        - ending_balance
        - id
        - livemode
        - object
        - type
      title: CustomerBalanceTransaction
      type: object
      x-expandableFields:
        - credit_note
        - customer
        - invoice
      x-resourceId: customer_balance_transaction
    deleted_account:
      properties:
        deleted:
          description: Always true for a deleted object
          enum:
            - true
          type: boolean
        id:
          description: Unique identifier for the object.
          type: string
        object:
          description: String representing the object's type. Objects of the same type
            share the same value.
          enum:
            - account
          type: string
      required:
        - deleted
        - id
        - object
      title: DeletedAccount
      type: object
      x-expandableFields: []
      x-resourceId: deleted_account
    deleted_alipay_account:
      properties:
        deleted:
          description: Always true for a deleted object
          enum:
            - true
          type: boolean
        id:
          description: Unique identifier for the object.
          type: string
        object:
          description: String representing the object's type. Objects of the same type
            share the same value.
          enum:
            - alipay_account
          type: string
      required:
        - deleted
        - id
        - object
      title: AlipayDeletedAccount
      type: object
      x-expandableFields: []
    deleted_apple_pay_domain:
      properties:
        deleted:
          description: Always true for a deleted object
          enum:
            - true
          type: boolean
        id:
          description: Unique identifier for the object.
          type: string
        object:
          description: String representing the object's type. Objects of the same type
            share the same value.
          enum:
            - apple_pay_domain
          type: string
      required:
        - deleted
        - id
        - object
      title: DeletedApplePayDomain
      type: object
      x-expandableFields: []
      x-resourceId: deleted_apple_pay_domain
    deleted_bank_account:
      properties:
        currency:
          description: Three-letter [ISO code for the
            currency](https://stripe.com/docs/payouts) paid out to the bank
            account.
          type: string
        deleted:
          description: Always true for a deleted object
          enum:
            - true
          type: boolean
        id:
          description: Unique identifier for the object.
          type: string
        object:
          description: String representing the object's type. Objects of the same type
            share the same value.
          enum:
            - bank_account
          type: string
      required:
        - deleted
        - id
        - object
      title: DeletedBankAccount
      type: object
      x-expandableFields: []
    deleted_bitcoin_receiver:
      properties:
        deleted:
          description: Always true for a deleted object
          enum:
            - true
          type: boolean
        id:
          description: Unique identifier for the object.
          type: string
        object:
          description: String representing the object's type. Objects of the same type
            share the same value.
          enum:
            - bitcoin_receiver
          type: string
      required:
        - deleted
        - id
        - object
      title: BitcoinDeletedReceiver
      type: object
      x-expandableFields: []
    deleted_card:
      properties:
        currency:
          description: Three-letter [ISO code for the
            currency](https://stripe.com/docs/payouts) paid out to the bank
            account.
          type: string
        deleted:
          description: Always true for a deleted object
          enum:
            - true
          type: boolean
        id:
          description: Unique identifier for the object.
          type: string
        object:
          description: String representing the object's type. Objects of the same type
            share the same value.
          enum:
            - card
          type: string
      required:
        - deleted
        - id
        - object
      title: DeletedCard
      type: object
      x-expandableFields: []
    deleted_coupon:
      properties:
        deleted:
          description: Always true for a deleted object
          enum:
            - true
          type: boolean
        id:
          description: Unique identifier for the object.
          type: string
        object:
          description: String representing the object's type. Objects of the same type
            share the same value.
          enum:
            - coupon
          type: string
      required:
        - deleted
        - id
        - object
      title: DeletedCoupon
      type: object
      x-expandableFields: []
      x-resourceId: deleted_coupon
    deleted_customer:
      properties:
        deleted:
          description: Always true for a deleted object
          enum:
            - true
          type: boolean
        id:
          description: Unique identifier for the object.
          type: string
        object:
          description: String representing the object's type. Objects of the same type
            share the same value.
          enum:
            - customer
          type: string
      required:
        - deleted
        - id
        - object
      title: DeletedCustomer
      type: object
      x-expandableFields: []
      x-resourceId: deleted_customer
    deleted_discount:
      properties:
        deleted:
          description: Always true for a deleted object
          enum:
            - true
          type: boolean
        object:
          description: String representing the object's type. Objects of the same type
            share the same value.
          enum:
            - discount
          type: string
      required:
        - deleted
        - object
      title: DeletedDiscount
      type: object
      x-expandableFields: []
      x-resourceId: deleted_discount
    deleted_external_account:
      properties:
        currency:
          description: Three-letter [ISO code for the
            currency](https://stripe.com/docs/payouts) paid out to the bank
            account.
          type: string
        deleted:
          description: Always true for a deleted object
          enum:
            - true
          type: boolean
        id:
          description: Unique identifier for the object.
          type: string
        object:
          description: String representing the object's type. Objects of the same type
            share the same value.
          enum:
            - bank_account
          type: string
      required:
        - deleted
        - id
        - object
      title: Polymorphic
      type: object
      x-polymorphicResources:
        oneOf:
          - $ref: "#/components/schemas/deleted_bank_account"
          - $ref: "#/components/schemas/deleted_card"
      x-resourceId: deleted_external_account
    deleted_invoice:
      properties:
        deleted:
          description: Always true for a deleted object
          enum:
            - true
          type: boolean
        id:
          description: Unique identifier for the object.
          type: string
        object:
          description: String representing the object's type. Objects of the same type
            share the same value.
          enum:
            - invoice
          type: string
      required:
        - deleted
        - id
        - object
      title: DeletedInvoice
      type: object
      x-expandableFields: []
      x-resourceId: deleted_invoice
    deleted_invoiceitem:
      properties:
        deleted:
          description: Always true for a deleted object
          enum:
            - true
          type: boolean
        id:
          description: Unique identifier for the object.
          type: string
        object:
          description: String representing the object's type. Objects of the same type
            share the same value.
          enum:
            - invoiceitem
          type: string
      required:
        - deleted
        - id
        - object
      title: DeletedInvoiceItem
      type: object
      x-expandableFields: []
      x-resourceId: deleted_invoiceitem
    deleted_payment_source:
      properties:
        deleted:
          description: Always true for a deleted object
          enum:
            - true
          type: boolean
        id:
          description: Unique identifier for the object.
          type: string
        object:
          description: String representing the object's type. Objects of the same type
            share the same value.
          enum:
            - alipay_account
          type: string
      required:
        - deleted
        - id
        - object
      title: Polymorphic
      type: object
      x-polymorphicResources:
        oneOf:
          - $ref: "#/components/schemas/deleted_alipay_account"
          - $ref: "#/components/schemas/deleted_bank_account"
          - $ref: "#/components/schemas/deleted_bitcoin_receiver"
          - $ref: "#/components/schemas/deleted_card"
      x-resourceId: deleted_payment_source
    deleted_person:
      properties:
        deleted:
          description: Always true for a deleted object
          enum:
            - true
          type: boolean
        id:
          description: Unique identifier for the object.
          type: string
        object:
          description: String representing the object's type. Objects of the same type
            share the same value.
          enum:
            - person
          type: string
      required:
        - deleted
        - id
        - object
      title: DeletedPerson
      type: object
      x-expandableFields: []
      x-resourceId: deleted_person
    deleted_plan:
      properties:
        deleted:
          description: Always true for a deleted object
          enum:
            - true
          type: boolean
        id:
          description: Unique identifier for the object.
          type: string
        object:
          description: String representing the object's type. Objects of the same type
            share the same value.
          enum:
            - plan
          type: string
      required:
        - deleted
        - id
        - object
      title: DeletedPlan
      type: object
      x-expandableFields: []
      x-resourceId: deleted_plan
    deleted_product:
      properties:
        deleted:
          description: Always true for a deleted object
          enum:
            - true
          type: boolean
        id:
          description: Unique identifier for the object.
          type: string
        object:
          description: String representing the object's type. Objects of the same type
            share the same value.
          enum:
            - product
          type: string
      required:
        - deleted
        - id
        - object
      title: DeletedProduct
      type: object
      x-expandableFields: []
      x-resourceId: deleted_product
    deleted_radar.value_list:
      properties:
        deleted:
          description: Always true for a deleted object
          enum:
            - true
          type: boolean
        id:
          description: Unique identifier for the object.
          type: string
        object:
          description: String representing the object's type. Objects of the same type
            share the same value.
          enum:
            - radar.value_list
          type: string
      required:
        - deleted
        - id
        - object
      title: RadarListDeletedList
      type: object
      x-expandableFields: []
      x-resourceId: deleted_radar.value_list
    deleted_radar.value_list_item:
      properties:
        deleted:
          description: Always true for a deleted object
          enum:
            - true
          type: boolean
        id:
          description: Unique identifier for the object.
          type: string
        object:
          description: String representing the object's type. Objects of the same type
            share the same value.
          enum:
            - radar.value_list_item
          type: string
      required:
        - deleted
        - id
        - object
      title: RadarListDeletedListItem
      type: object
      x-expandableFields: []
      x-resourceId: deleted_radar.value_list_item
    deleted_recipient:
      properties:
        deleted:
          description: Always true for a deleted object
          enum:
            - true
          type: boolean
        id:
          description: Unique identifier for the object.
          type: string
        object:
          description: String representing the object's type. Objects of the same type
            share the same value.
          enum:
            - recipient
          type: string
      required:
        - deleted
        - id
        - object
      title: DeletedTransferRecipient
      type: object
      x-expandableFields: []
      x-resourceId: deleted_recipient
    deleted_sku:
      properties:
        deleted:
          description: Always true for a deleted object
          enum:
            - true
          type: boolean
        id:
          description: Unique identifier for the object.
          type: string
        object:
          description: String representing the object's type. Objects of the same type
            share the same value.
          enum:
            - sku
          type: string
      required:
        - deleted
        - id
        - object
      title: DeletedSKU
      type: object
      x-expandableFields: []
      x-resourceId: deleted_sku
    deleted_subscription_item:
      properties:
        deleted:
          description: Always true for a deleted object
          enum:
            - true
          type: boolean
        id:
          description: Unique identifier for the object.
          type: string
        object:
          description: String representing the object's type. Objects of the same type
            share the same value.
          enum:
            - subscription_item
          type: string
      required:
        - deleted
        - id
        - object
      title: DeletedSubscriptionItem
      type: object
      x-expandableFields: []
      x-resourceId: deleted_subscription_item
    deleted_tax_id:
      properties:
        deleted:
          description: Always true for a deleted object
          enum:
            - true
          type: boolean
        id:
          description: Unique identifier for the object.
          type: string
        object:
          description: String representing the object's type. Objects of the same type
            share the same value.
          enum:
            - tax_id
          type: string
      required:
        - deleted
        - id
        - object
      title: deleted_tax_id
      type: object
      x-expandableFields: []
      x-resourceId: deleted_tax_id
    deleted_terminal.location:
      properties:
        deleted:
          description: Always true for a deleted object
          enum:
            - true
          type: boolean
        id:
          description: Unique identifier for the object.
          type: string
        object:
          description: String representing the object's type. Objects of the same type
            share the same value.
          enum:
            - terminal.location
          type: string
      required:
        - deleted
        - id
        - object
      title: TerminalLocationDeletedLocation
      type: object
      x-expandableFields: []
      x-resourceId: deleted_terminal.location
    deleted_terminal.reader:
      properties:
        deleted:
          description: Always true for a deleted object
          enum:
            - true
          type: boolean
        id:
          description: Unique identifier for the object.
          type: string
        object:
          description: String representing the object's type. Objects of the same type
            share the same value.
          enum:
            - terminal.reader
          type: string
      required:
        - deleted
        - id
        - object
      title: TerminalReaderDeletedReader
      type: object
      x-expandableFields: []
      x-resourceId: deleted_terminal.reader
    deleted_webhook_endpoint:
      properties:
        deleted:
          description: Always true for a deleted object
          enum:
            - true
          type: boolean
        id:
          description: Unique identifier for the object.
          type: string
        object:
          description: String representing the object's type. Objects of the same type
            share the same value.
          enum:
            - webhook_endpoint
          type: string
      required:
        - deleted
        - id
        - object
      title: NotificationWebhookEndpointDeleted
      type: object
      x-expandableFields: []
      x-resourceId: deleted_webhook_endpoint
    delivery_estimate:
      properties:
        date:
          description: If `type` is `"exact"`, `date` will be the expected delivery date in
            the format YYYY-MM-DD.
          type: string
        earliest:
          description: If `type` is `"range"`, `earliest` will be be the earliest delivery
            date in the format YYYY-MM-DD.
          type: string
        latest:
          description: If `type` is `"range"`, `latest` will be the latest delivery date in
            the format YYYY-MM-DD.
          type: string
        type:
          description: The type of estimate. Must be either `"range"` or `"exact"`.
          type: string
      required:
        - type
      title: DeliveryEstimate
      type: object
      x-expandableFields: []
    discount:
      properties:
        coupon:
          $ref: "#/components/schemas/coupon"
        customer:
          type: string
          x-expansionResources:
            oneOf:
              - $ref: "#/components/schemas/customer"
              - $ref: "#/components/schemas/deleted_customer"
        end:
          description: If the coupon has a duration of `repeating`, the date that this
            discount will end. If the coupon has a duration of `once` or
            `forever`, this attribute will be null.
          type: integer
        object:
          description: String representing the object's type. Objects of the same type
            share the same value.
          enum:
            - discount
          type: string
        start:
          description: Date that the coupon was applied.
          type: integer
        subscription:
          description: The subscription that this coupon is applied to, if it is applied to
            a particular subscription.
          type: string
      required:
        - coupon
        - object
        - start
      title: Discount
      type: object
      x-expandableFields:
        - coupon
        - customer
      x-resourceId: discount
    dispute:
      properties:
        amount:
          description: Disputed amount. Usually the amount of the charge, but can differ
            (usually because of currency fluctuation or because only part of the
            order is disputed).
          type: integer
        balance_transactions:
          description: List of zero, one, or two balance transactions that show funds
            withdrawn and reinstated to your Stripe account as a result of this
            dispute.
          items:
            $ref: "#/components/schemas/balance_transaction"
          type: array
        charge:
          description: ID of the charge that was disputed.
          type: string
          x-expansionResources:
            oneOf:
              - $ref: "#/components/schemas/charge"
        created:
          description: Time at which the object was created. Measured in seconds since the
            Unix epoch.
          type: integer
        currency:
          description: Three-letter [ISO currency
            code](https://www.iso.org/iso-4217-currency-codes.html), in
            lowercase. Must be a [supported
            currency](https://stripe.com/docs/currencies).
          type: string
        evidence:
          $ref: "#/components/schemas/dispute_evidence"
        evidence_details:
          $ref: "#/components/schemas/dispute_evidence_details"
        id:
          description: Unique identifier for the object.
          type: string
        is_charge_refundable:
          description: If true, it is still possible to refund the disputed payment. Once
            the payment has been fully refunded, no further funds will be
            withdrawn from your Stripe account as a result of this dispute.
          type: boolean
        livemode:
          description: Has the value `true` if the object exists in live mode or the value
            `false` if the object exists in test mode.
          type: boolean
        metadata:
          description: Set of key-value pairs that you can attach to an object. This can be
            useful for storing additional information about the object in a
            structured format.
          type: object
        object:
          description: String representing the object's type. Objects of the same type
            share the same value.
          enum:
            - dispute
          type: string
        reason:
          description: Reason given by cardholder for dispute. Possible values are
            `bank_cannot_process`, `check_returned`, `credit_not_processed`,
            `customer_initiated`, `debit_not_authorized`, `duplicate`,
            `fraudulent`, `general`, `incorrect_account_details`,
            `insufficient_funds`, `product_not_received`,
            `product_unacceptable`, `subscription_canceled`, or `unrecognized`.
            Read more about [dispute
            reasons](https://stripe.com/docs/disputes/categories).
          type: string
        status:
          description: Current status of dispute. Possible values are
            `warning_needs_response`, `warning_under_review`, `warning_closed`,
            `needs_response`, `under_review`, `charge_refunded`, `won`, or
            `lost`.
          enum:
            - charge_refunded
            - lost
            - needs_response
            - under_review
            - warning_closed
            - warning_needs_response
            - warning_under_review
            - won
          type: string
      required:
        - amount
        - balance_transactions
        - charge
        - created
        - currency
        - evidence
        - evidence_details
        - id
        - is_charge_refundable
        - livemode
        - metadata
        - object
        - reason
        - status
      title: Dispute
      type: object
      x-expandableFields:
        - balance_transactions
        - charge
        - evidence
        - evidence_details
      x-resourceId: dispute
    dispute_evidence:
      properties:
        access_activity_log:
          description: Any server or activity logs showing proof that the customer accessed
            or downloaded the purchased digital product. This information should
            include IP addresses, corresponding timestamps, and any detailed
            recorded activity.
          type: string
        billing_address:
          description: The billing address provided by the customer.
          type: string
        cancellation_policy:
          description: (ID of a [file upload](https://stripe.com/docs/guides/file-upload))
            Your subscription cancellation policy, as shown to the customer.
          type: string
          x-expansionResources:
            oneOf:
              - $ref: "#/components/schemas/file"
        cancellation_policy_disclosure:
          description: An explanation of how and when the customer was shown your refund
            policy prior to purchase.
          type: string
        cancellation_rebuttal:
          description: A justification for why the customer's subscription was not canceled.
          type: string
        customer_communication:
          description: (ID of a [file upload](https://stripe.com/docs/guides/file-upload))
            Any communication with the customer that you feel is relevant to
            your case. Examples include emails proving that the customer
            received the product or service, or demonstrating their use of or
            satisfaction with the product or service.
          type: string
          x-expansionResources:
            oneOf:
              - $ref: "#/components/schemas/file"
        customer_email_address:
          description: The email address of the customer.
          type: string
        customer_name:
          description: The name of the customer.
          type: string
        customer_purchase_ip:
          description: The IP address that the customer used when making the purchase.
          type: string
        customer_signature:
          description: (ID of a [file upload](https://stripe.com/docs/guides/file-upload))
            A relevant document or contract showing the customer's signature.
          type: string
          x-expansionResources:
            oneOf:
              - $ref: "#/components/schemas/file"
        duplicate_charge_documentation:
          description: (ID of a [file upload](https://stripe.com/docs/guides/file-upload))
            Documentation for the prior charge that can uniquely identify the
            charge, such as a receipt, shipping label, work order, etc. This
            document should be paired with a similar document from the disputed
            payment that proves the two payments are separate.
          type: string
          x-expansionResources:
            oneOf:
              - $ref: "#/components/schemas/file"
        duplicate_charge_explanation:
          description: An explanation of the difference between the disputed charge versus
            the prior charge that appears to be a duplicate.
          type: string
        duplicate_charge_id:
          description: The Stripe ID for the prior charge which appears to be a duplicate
            of the disputed charge.
          type: string
        product_description:
          description: A description of the product or service that was sold.
          type: string
        receipt:
          description: (ID of a [file upload](https://stripe.com/docs/guides/file-upload))
            Any receipt or message sent to the customer notifying them of the
            charge.
          type: string
          x-expansionResources:
            oneOf:
              - $ref: "#/components/schemas/file"
        refund_policy:
          description: (ID of a [file upload](https://stripe.com/docs/guides/file-upload))
            Your refund policy, as shown to the customer.
          type: string
          x-expansionResources:
            oneOf:
              - $ref: "#/components/schemas/file"
        refund_policy_disclosure:
          description: Documentation demonstrating that the customer was shown your refund
            policy prior to purchase.
          type: string
        refund_refusal_explanation:
          description: A justification for why the customer is not entitled to a refund.
          type: string
        service_date:
          description: The date on which the customer received or began receiving the
            purchased service, in a clear human-readable format.
          type: string
        service_documentation:
          description: (ID of a [file upload](https://stripe.com/docs/guides/file-upload))
            Documentation showing proof that a service was provided to the
            customer. This could include a copy of a signed contract, work
            order, or other form of written agreement.
          type: string
          x-expansionResources:
            oneOf:
              - $ref: "#/components/schemas/file"
        shipping_address:
          description: The address to which a physical product was shipped. You should try
            to include as complete address information as possible.
          type: string
        shipping_carrier:
          description: The delivery service that shipped a physical product, such as Fedex,
            UPS, USPS, etc. If multiple carriers were used for this purchase,
            please separate them with commas.
          type: string
        shipping_date:
          description: The date on which a physical product began its route to the shipping
            address, in a clear human-readable format.
          type: string
        shipping_documentation:
          description: (ID of a [file upload](https://stripe.com/docs/guides/file-upload))
            Documentation showing proof that a product was shipped to the
            customer at the same address the customer provided to you. This
            could include a copy of the shipment receipt, shipping label, etc.
            It should show the customer's full shipping address, if possible.
          type: string
          x-expansionResources:
            oneOf:
              - $ref: "#/components/schemas/file"
        shipping_tracking_number:
          description: The tracking number for a physical product, obtained from the
            delivery service. If multiple tracking numbers were generated for
            this purchase, please separate them with commas.
          type: string
        uncategorized_file:
          description: (ID of a [file upload](https://stripe.com/docs/guides/file-upload))
            Any additional evidence or statements.
          type: string
          x-expansionResources:
            oneOf:
              - $ref: "#/components/schemas/file"
        uncategorized_text:
          description: Any additional evidence or statements.
          type: string
      title: DisputeEvidence
      type: object
      x-expandableFields:
        - cancellation_policy
        - customer_communication
        - customer_signature
        - duplicate_charge_documentation
        - receipt
        - refund_policy
        - service_documentation
        - shipping_documentation
        - uncategorized_file
    dispute_evidence_details:
      properties:
        due_by:
          description: Date by which evidence must be submitted in order to successfully
            challenge dispute. Will be null if the customer's bank or credit
            card company doesn't allow a response for this particular dispute.
          type: integer
        has_evidence:
          description: Whether evidence has been staged for this dispute.
          type: boolean
        past_due:
          description: Whether the last evidence submission was submitted past the due
            date. Defaults to `false` if no evidence submissions have occurred.
            If `true`, then delivery of the latest evidence is *not* guaranteed.
          type: boolean
        submission_count:
          description: The number of times evidence has been submitted. Typically, you may
            only submit evidence once.
          type: integer
      required:
        - has_evidence
        - past_due
        - submission_count
      title: DisputeEvidenceDetails
      type: object
      x-expandableFields: []
    ephemeral_key:
      properties:
        created:
          description: Time at which the object was created. Measured in seconds since the
            Unix epoch.
          type: integer
        expires:
          description: Time at which the key will expire. Measured in seconds since the
            Unix epoch.
          type: integer
        id:
          description: Unique identifier for the object.
          type: string
        livemode:
          description: Has the value `true` if the object exists in live mode or the value
            `false` if the object exists in test mode.
          type: boolean
        object:
          description: String representing the object's type. Objects of the same type
            share the same value.
          enum:
            - ephemeral_key
          type: string
        secret:
          description: The key's secret. You can use this value to make authorized requests
            to the Stripe API.
          type: string
      required:
        - created
        - expires
        - id
        - livemode
        - object
      title: EphemeralKey
      type: object
      x-expandableFields: []
      x-resourceId: ephemeral_key
    error:
      description: An error response from the Stripe API
      properties:
        error:
          $ref: "#/components/schemas/api_errors"
      required:
        - error
      type: object
    event:
      properties:
        api_version:
          description: "The Stripe API version used to render `data`. *Note: This property
            is populated only for events on or after October 31, 2014*."
          type: string
        created:
          description: Time at which the object was created. Measured in seconds since the
            Unix epoch.
          type: integer
        data:
          $ref: "#/components/schemas/notification_event_data"
        id:
          description: Unique identifier for the object.
          type: string
        livemode:
          description: Has the value `true` if the object exists in live mode or the value
            `false` if the object exists in test mode.
          type: boolean
        object:
          description: String representing the object's type. Objects of the same type
            share the same value.
          enum:
            - event
          type: string
        pending_webhooks:
          description: Number of webhooks that have yet to be successfully delivered (i.e.,
            to return a 20x response) to the URLs you've specified.
          type: integer
        request:
          $ref: "#/components/schemas/notification_event_request"
        type:
          description: Description of the event (e.g., `invoice.created` or
            `charge.refunded`).
          type: string
      required:
        - created
        - data
        - id
        - livemode
        - object
        - pending_webhooks
        - type
      title: NotificationEvent
      type: object
      x-expandableFields:
        - data
        - request
      x-resourceId: event
    exchange_rate:
      properties:
        id:
          description: Unique identifier for the object. Represented as the three-letter
            [ISO currency
            code](https://www.iso.org/iso-4217-currency-codes.html) in
            lowercase.
          type: string
        object:
          description: String representing the object's type. Objects of the same type
            share the same value.
          enum:
            - exchange_rate
          type: string
        rates:
          description: Hash where the keys are supported currencies and the values are the
            exchange rate at which the base id currency converts to the key
            currency.
          type: object
      required:
        - id
        - object
        - rates
      title: ExchangeRate
      type: object
      x-expandableFields: []
      x-resourceId: exchange_rate
    external_account:
      properties:
        account:
          type: string
          x-expansionResources:
            oneOf:
              - $ref: "#/components/schemas/account"
        country:
          description: Two-letter ISO code representing the country the bank account is
            located in.
          type: string
        currency:
          description: Three-letter [ISO code for the
            currency](https://stripe.com/docs/payouts) paid out to the bank
            account.
          type: string
        customer:
          type: string
          x-expansionResources:
            oneOf:
              - $ref: "#/components/schemas/customer"
              - $ref: "#/components/schemas/deleted_customer"
        default_for_currency:
          description: Whether this bank account is the default external account for its
            currency.
          type: boolean
        fingerprint:
          description: Uniquely identifies this particular bank account. You can use this
            attribute to check whether two bank accounts are the same.
          type: string
        id:
          description: Unique identifier for the object.
          type: string
        last4:
          type: string
        metadata:
          description: Set of key-value pairs that you can attach to an object. This can be
            useful for storing additional information about the object in a
            structured format.
          type: object
        object:
          description: String representing the object's type. Objects of the same type
            share the same value.
          enum:
            - bank_account
          type: string
      required:
        - country
        - currency
        - id
        - last4
        - object
      title: Polymorphic
      type: object
      x-expandableFields:
        - account
        - customer
      x-polymorphicResources:
        oneOf:
          - $ref: "#/components/schemas/bank_account"
          - $ref: "#/components/schemas/card"
      x-resourceId: external_account
    fee:
      properties:
        amount:
          description: Amount of the fee, in cents.
          type: integer
        application:
          type: string
        currency:
          description: Three-letter [ISO currency
            code](https://www.iso.org/iso-4217-currency-codes.html), in
            lowercase. Must be a [supported
            currency](https://stripe.com/docs/currencies).
          type: string
        description:
          description: An arbitrary string attached to the object. Often useful for
            displaying to users.
          type: string
        type:
          description: "Type of the fee, one of: `application_fee`, `stripe_fee` or `tax`."
          type: string
      required:
        - amount
        - currency
        - type
      title: Fee
      type: object
      x-expandableFields: []
    fee_refund:
      properties:
        amount:
          description: Amount, in %s.
          type: integer
        balance_transaction:
          description: Balance transaction that describes the impact on your account
            balance.
          type: string
          x-expansionResources:
            oneOf:
              - $ref: "#/components/schemas/balance_transaction"
        created:
          description: Time at which the object was created. Measured in seconds since the
            Unix epoch.
          type: integer
        currency:
          description: Three-letter [ISO currency
            code](https://www.iso.org/iso-4217-currency-codes.html), in
            lowercase. Must be a [supported
            currency](https://stripe.com/docs/currencies).
          type: string
        fee:
          description: ID of the application fee that was refunded.
          type: string
          x-expansionResources:
            oneOf:
              - $ref: "#/components/schemas/application_fee"
        id:
          description: Unique identifier for the object.
          type: string
        metadata:
          description: Set of key-value pairs that you can attach to an object. This can be
            useful for storing additional information about the object in a
            structured format.
          type: object
        object:
          description: String representing the object's type. Objects of the same type
            share the same value.
          enum:
            - fee_refund
          type: string
      required:
        - amount
        - created
        - currency
        - fee
        - id
        - metadata
        - object
      title: FeeRefund
      type: object
      x-expandableFields:
        - balance_transaction
        - fee
      x-resourceId: fee_refund
    file:
      properties:
        created:
          description: Time at which the object was created. Measured in seconds since the
            Unix epoch.
          type: integer
        filename:
          description: A filename for the file, suitable for saving to a filesystem.
          type: string
        id:
          description: Unique identifier for the object.
          type: string
        links:
          properties:
            data:
              items:
                $ref: "#/components/schemas/file_link"
              type: array
            has_more:
              description: True if this list has another page of items after this one that
                can be fetched.
              type: boolean
            object:
              description: String representing the object's type. Objects of the same type
                share the same value. Always has the value `list`.
              enum:
                - list
              type: string
            url:
              description: The URL where this list can be accessed.
              type: string
          required:
            - data
            - has_more
            - object
            - url
          title: FileFileLinkList
          type: object
          x-expandableFields:
            - data
        object:
          description: String representing the object's type. Objects of the same type
            share the same value.
          enum:
            - file
          type: string
        purpose:
          description: The purpose of the file. Possible values are `business_icon`,
            `business_logo`, `customer_signature`, `dispute_evidence`,
            `finance_report_run`, `identity_document`, `pci_document`,
            `sigma_scheduled_query`, or `tax_document_user_upload`.
          type: string
        size:
          description: The size in bytes of the file object.
          type: integer
        title:
          description: A user friendly title for the document.
          type: string
        type:
          description: The type of the file returned (e.g., `csv`, `pdf`, `jpg`, or `png`).
          type: string
        url:
          description: The URL from which the file can be downloaded using your live secret
            API key.
          type: string
      required:
        - created
        - id
        - object
        - purpose
        - size
      title: File
      type: object
      x-expandableFields:
        - links
      x-resourceId: file
    file_link:
      properties:
        created:
          description: Time at which the object was created. Measured in seconds since the
            Unix epoch.
          type: integer
        expired:
          description: Whether this link is already expired.
          type: boolean
        expires_at:
          description: Time at which the link expires.
          type: integer
        file:
          description: The file object this link points to.
          type: string
          x-expansionResources:
            oneOf:
              - $ref: "#/components/schemas/file"
        id:
          description: Unique identifier for the object.
          type: string
        livemode:
          description: Has the value `true` if the object exists in live mode or the value
            `false` if the object exists in test mode.
          type: boolean
        metadata:
          description: Set of key-value pairs that you can attach to an object. This can be
            useful for storing additional information about the object in a
            structured format.
          type: object
        object:
          description: String representing the object's type. Objects of the same type
            share the same value.
          enum:
            - file_link
          type: string
        url:
          description: The publicly accessible URL to download the file.
          type: string
      required:
        - created
        - expired
        - file
        - id
        - livemode
        - metadata
        - object
      title: FileLink
      type: object
      x-expandableFields:
        - file
      x-resourceId: file_link
    financial_reporting_finance_report_run_run_parameters:
      properties:
        columns:
          description: The set of output columns requested for inclusion in the report run.
          items:
            type: string
          type: array
        connected_account:
          description: Connected account ID by which to filter the report run.
          type: string
        currency:
          description: Currency of objects to be included in the report run.
          type: string
        interval_end:
          description: Ending timestamp of data to be included in the report run
            (exclusive).
          type: integer
        interval_start:
          description: Starting timestamp of data to be included in the report run.
          type: integer
        payout:
          description: Payout ID by which to filter the report run.
          type: string
        reporting_category:
          description: Category of balance transactions to be included in the report run.
          type: string
      title: FinancialReportingFinanceReportRunRunParameters
      type: object
      x-expandableFields: []
    inventory:
      properties:
        quantity:
          description: The count of inventory available. Will be present if and only if
            `type` is `finite`.
          type: integer
        type:
          description: Inventory type. Possible values are `finite`, `bucket` (not
            quantified), and `infinite`.
          type: string
        value:
          description: An indicator of the inventory available. Possible values are
            `in_stock`, `limited`, and `out_of_stock`. Will be present if and
            only if `type` is `bucket`.
          type: string
      required:
        - type
      title: Inventory
      type: object
      x-expandableFields: []
    invoice:
      properties:
        account_country:
          description: The country of the business associated with this invoice, most often
            the business creating the invoice.
          type: string
        account_name:
          description: The public name of the business associated with this invoice, most
            often the business creating the invoice.
          type: string
        amount_due:
          description: Final amount due at this time for this invoice. If the invoice's
            total is smaller than the minimum charge amount, for example, or if
            there is account credit that can be applied to the invoice, the
            `amount_due` may be 0. If there is a positive `starting_balance` for
            the invoice (the customer owes money), the `amount_due` will also
            take that into account. The charge that gets generated for the
            invoice will be for the amount specified in `amount_due`.
          type: integer
        amount_paid:
          description: The amount, in %s, that was paid.
          type: integer
        amount_remaining:
          description: The amount remaining, in %s, that is due.
          type: integer
        application_fee_amount:
          description: The fee in %s that will be applied to the invoice and transferred to
            the application owner's Stripe account when the invoice is paid.
          type: integer
        attempt_count:
          description: Number of payment attempts made for this invoice, from the
            perspective of the payment retry schedule. Any payment attempt
            counts as the first attempt, and subsequently only automatic retries
            increment the attempt count. In other words, manual payment attempts
            after the first attempt do not affect the retry schedule.
          type: integer
        attempted:
          description: Whether an attempt has been made to pay the invoice. An invoice is
            not attempted until 1 hour after the `invoice.created` webhook, for
            example, so you might not want to display that invoice as unpaid to
            your users.
          type: boolean
        auto_advance:
          description: Controls whether Stripe will perform [automatic
            collection](https://stripe.com/docs/billing/invoices/workflow/#auto_advance)
            of the invoice. When `false`, the invoice's state will not
            automatically advance without an explicit action.
          type: boolean
        billing:
          description: This field has been renamed to `collection_method` and will be
            removed in a future API version.
          enum:
            - charge_automatically
            - send_invoice
          type: string
        billing_reason:
          description: "Indicates the reason why the invoice was created.
            `subscription_cycle` indicates an invoice created by a subscription
            advancing into a new period. `subscription_create` indicates an
            invoice created due to creating a subscription.
            `subscription_update` indicates an invoice created due to updating a
            subscription. `subscription` is set for all old invoices to indicate
            either a change to a subscription or a period advancement. `manual`
            is set for all invoices unrelated to a subscription (for example:
            created via the invoice editor). The `upcoming` value is reserved
            for simulated invoices per the upcoming invoice endpoint.
            `subscription_threshold` indicates an invoice created due to a
            billing threshold being reached."
          enum:
            - automatic_pending_invoice_item_invoice
            - manual
            - subscription
            - subscription_create
            - subscription_cycle
            - subscription_threshold
            - subscription_update
            - upcoming
          type: string
        charge:
          description: ID of the latest charge generated for this invoice, if any.
          type: string
          x-expansionResources:
            oneOf:
              - $ref: "#/components/schemas/charge"
        collection_method:
          description: Either `charge_automatically`, or `send_invoice`. When charging
            automatically, Stripe will attempt to pay this invoice using the
            default source attached to the customer. When sending an invoice,
            Stripe will email this invoice to the customer with payment
            instructions.
          enum:
            - charge_automatically
            - send_invoice
          type: string
        created:
          description: Time at which the object was created. Measured in seconds since the
            Unix epoch.
          type: integer
        currency:
          description: Three-letter [ISO currency
            code](https://www.iso.org/iso-4217-currency-codes.html), in
            lowercase. Must be a [supported
            currency](https://stripe.com/docs/currencies).
          type: string
        custom_fields:
          description: Custom fields displayed on the invoice.
          items:
            $ref: "#/components/schemas/invoice_setting_custom_field"
          type: array
        customer:
          type: string
          x-expansionResources:
            oneOf:
              - $ref: "#/components/schemas/customer"
              - $ref: "#/components/schemas/deleted_customer"
        customer_address:
          $ref: "#/components/schemas/address"
        customer_email:
          description: The customer's email. Until the invoice is finalized, this field
            will equal `customer.email`. Once the invoice is finalized, this
            field will no longer be updated.
          type: string
        customer_name:
          description: The customer's name. Until the invoice is finalized, this field will
            equal `customer.name`. Once the invoice is finalized, this field
            will no longer be updated.
          type: string
        customer_phone:
          description: The customer's phone number. Until the invoice is finalized, this
            field will equal `customer.phone`. Once the invoice is finalized,
            this field will no longer be updated.
          type: string
        customer_shipping:
          $ref: "#/components/schemas/shipping"
        customer_tax_exempt:
          description: The customer's tax exempt status. Until the invoice is finalized,
            this field will equal `customer.tax_exempt`. Once the invoice is
            finalized, this field will no longer be updated.
          enum:
            - exempt
            - none
            - reverse
          type: string
        customer_tax_ids:
          description: The customer's tax IDs. Until the invoice is finalized, this field
            will contain the same tax IDs as `customer.tax_ids`. Once the
            invoice is finalized, this field will no longer be updated.
          items:
            $ref: "#/components/schemas/invoices_resource_invoice_tax_id"
          type: array
        default_payment_method:
          description: ID of the default payment method for the invoice. It must belong to
            the customer associated with the invoice. If not set, defaults to
            the subscription's default payment method, if any, or to the default
            payment method in the customer's invoice settings.
          type: string
          x-expansionResources:
            oneOf:
              - $ref: "#/components/schemas/payment_method"
        default_source:
          description: ID of the default payment source for the invoice. It must belong to
            the customer associated with the invoice and be in a chargeable
            state. If not set, defaults to the subscription's default source, if
            any, or to the customer's default source.
          type: string
          x-expansionResources:
            oneOf:
              - $ref: "#/components/schemas/alipay_account"
              - $ref: "#/components/schemas/bank_account"
              - $ref: "#/components/schemas/bitcoin_receiver"
              - $ref: "#/components/schemas/card"
              - $ref: "#/components/schemas/source"
        default_tax_rates:
          description: The tax rates applied to this invoice, if any.
          items:
            $ref: "#/components/schemas/tax_rate"
          type: array
        description:
          description: An arbitrary string attached to the object. Often useful for
            displaying to users. Referenced as 'memo' in the Dashboard.
          type: string
        discount:
          $ref: "#/components/schemas/discount"
        due_date:
          description: The date on which payment for this invoice is due. This value will
            be `null` for invoices where
            `collection_method=charge_automatically`.
          type: integer
        ending_balance:
          description: Ending customer balance after the invoice is finalized. Invoices are
            finalized approximately an hour after successful webhook delivery or
            when payment collection is attempted for the invoice. If the invoice
            has not been finalized yet, this will be null.
          type: integer
        footer:
          description: Footer displayed on the invoice.
          type: string
        hosted_invoice_url:
          description: The URL for the hosted invoice page, which allows customers to view
            and pay an invoice. If the invoice has not been finalized yet, this
            will be null.
          type: string
        id:
          description: Unique identifier for the object.
          type: string
        invoice_pdf:
          description: The link to download the PDF for the invoice. If the invoice has not
            been finalized yet, this will be null.
          type: string
        lines:
          description: "The individual line items that make up the invoice. `lines` is
            sorted as follows: invoice items in reverse chronological order,
            followed by the subscription, if any."
          properties:
            data:
              items:
                $ref: "#/components/schemas/line_item"
              type: array
            has_more:
              description: True if this list has another page of items after this one that
                can be fetched.
              type: boolean
            object:
              description: String representing the object's type. Objects of the same type
                share the same value. Always has the value `list`.
              enum:
                - list
              type: string
            url:
              description: The URL where this list can be accessed.
              type: string
          required:
            - data
            - has_more
            - object
            - url
          title: InvoiceLinesList
          type: object
          x-expandableFields:
            - data
        livemode:
          description: Has the value `true` if the object exists in live mode or the value
            `false` if the object exists in test mode.
          type: boolean
        metadata:
          description: Set of key-value pairs that you can attach to an object. This can be
            useful for storing additional information about the object in a
            structured format.
          type: object
        next_payment_attempt:
          description: The time at which payment will next be attempted. This value will be
            `null` for invoices where `collection_method=send_invoice`.
          type: integer
        number:
          description: A unique, identifying string that appears on emails sent to the
            customer for this invoice. This starts with the customer's unique
            invoice_prefix if it is specified.
          type: string
        object:
          description: String representing the object's type. Objects of the same type
            share the same value.
          enum:
            - invoice
          type: string
        paid:
          description: Whether payment was successfully collected for this invoice. An
            invoice can be paid (most commonly) with a charge or with credit
            from the customer's account balance.
          type: boolean
        payment_intent:
          description: The PaymentIntent associated with this invoice. The PaymentIntent is
            generated when the invoice is finalized, and can then be used to pay
            the invoice. Note that voiding an invoice will cancel the
            PaymentIntent.
          type: string
          x-expansionResources:
            oneOf:
              - $ref: "#/components/schemas/payment_intent"
        period_end:
          description: End of the usage period during which invoice items were added to
            this invoice.
          type: integer
        period_start:
          description: Start of the usage period during which invoice items were added to
            this invoice.
          type: integer
        post_payment_credit_notes_amount:
          description: Total amount of all post-payment credit notes issued for this
            invoice.
          type: integer
        pre_payment_credit_notes_amount:
          description: Total amount of all pre-payment credit notes issued for this invoice.
          type: integer
        receipt_number:
          description: This is the transaction number that appears on email receipts sent
            for this invoice.
          type: string
        starting_balance:
          description: Starting customer balance before the invoice is finalized. If the
            invoice has not been finalized yet, this will be the current
            customer balance.
          type: integer
        statement_descriptor:
          description: Extra information about an invoice for the customer's credit card
            statement.
          type: string
        status:
          description: The status of the invoice, one of `draft`, `open`, `paid`,
            `uncollectible`, or `void`. [Learn
            more](https://stripe.com/docs/billing/invoices/workflow#workflow-overview)
          enum:
            - deleted
            - draft
            - open
            - paid
            - uncollectible
            - void
          type: string
        status_transitions:
          $ref: "#/components/schemas/invoices_status_transitions"
        subscription:
          description: The subscription that this invoice was prepared for, if any.
          type: string
          x-expansionResources:
            oneOf:
              - $ref: "#/components/schemas/subscription"
        subscription_proration_date:
          description: Only set for upcoming invoices that preview prorations. The time
            used to calculate prorations.
          type: integer
        subtotal:
          description: Total of all subscriptions, invoice items, and prorations on the
            invoice before any discount or tax is applied.
          type: integer
        tax:
          description: The amount of tax on this invoice. This is the sum of all the tax
            amounts on this invoice.
          type: integer
        tax_percent:
          description: This percentage of the subtotal has been added to the total amount
            of the invoice, including invoice line items and discounts. This
            field is inherited from the subscription's `tax_percent` field, but
            can be changed before the invoice is paid. This field defaults to
            null.
          type: number
        threshold_reason:
          $ref: "#/components/schemas/invoice_threshold_reason"
        total:
          description: Total after discounts and taxes.
          type: integer
        total_tax_amounts:
          description: The aggregate amounts calculated per tax rate for all line items.
          items:
            $ref: "#/components/schemas/invoice_tax_amount"
          type: array
        webhooks_delivered_at:
          description: The time at which webhooks for this invoice were successfully
            delivered (if the invoice had no webhooks to deliver, this will
            match `created`). Invoice payment is delayed until webhooks are
            delivered, or until all webhook delivery attempts have been
            exhausted.
          type: integer
      required:
        - amount_due
        - amount_paid
        - amount_remaining
        - attempt_count
        - attempted
        - created
        - currency
        - customer
        - lines
        - livemode
        - object
        - paid
        - period_end
        - period_start
        - post_payment_credit_notes_amount
        - pre_payment_credit_notes_amount
        - starting_balance
        - status_transitions
        - subtotal
        - total
      title: Invoice
      type: object
      x-expandableFields:
        - charge
        - custom_fields
        - customer
        - customer_address
        - customer_shipping
        - customer_tax_ids
        - default_payment_method
        - default_source
        - default_tax_rates
        - discount
        - lines
        - payment_intent
        - status_transitions
        - subscription
        - threshold_reason
        - total_tax_amounts
      x-resourceId: invoice
    invoice_item_threshold_reason:
      properties:
        line_item_ids:
          description: The IDs of the line items that triggered the threshold invoice.
          items:
            type: string
          type: array
        usage_gte:
          description: The quantity threshold boundary that applied to the given line item.
          type: integer
      required:
        - line_item_ids
        - usage_gte
      title: InvoiceItemThresholdReason
      type: object
      x-expandableFields: []
    invoice_line_item_period:
      properties:
        end:
          description: End of the line item's billing period
          type: integer
        start:
          description: Start of the line item's billing period
          type: integer
      required:
        - end
        - start
      title: InvoiceLineItemPeriod
      type: object
      x-expandableFields: []
    invoice_setting_custom_field:
      properties:
        name:
          description: The name of the custom field.
          type: string
        value:
          description: The value of the custom field.
          type: string
      required:
        - name
        - value
      title: InvoiceSettingCustomField
      type: object
      x-expandableFields: []
    invoice_setting_customer_setting:
      properties:
        custom_fields:
          description: Default custom fields to be displayed on invoices for this customer.
          items:
            $ref: "#/components/schemas/invoice_setting_custom_field"
          type: array
        default_payment_method:
          description: ID of the default payment method used for subscriptions and invoices
            for the customer.
          type: string
          x-expansionResources:
            oneOf:
              - $ref: "#/components/schemas/payment_method"
        footer:
          description: Default footer to be displayed on invoices for this customer.
          type: string
      title: InvoiceSettingCustomerSetting
      type: object
      x-expandableFields:
        - custom_fields
        - default_payment_method
    invoice_setting_subscription_schedule_setting:
      properties:
        days_until_due:
          description: Number of days within which a customer must pay invoices generated
            by this subscription schedule. This value will be `null` for
            subscription schedules where `billing=charge_automatically`.
          type: integer
      title: InvoiceSettingSubscriptionScheduleSetting
      type: object
      x-expandableFields: []
    invoice_tax_amount:
      properties:
        amount:
          description: The amount, in %s, of the tax.
          type: integer
        inclusive:
          description: Whether this tax amount is inclusive or exclusive.
          type: boolean
        tax_rate:
          description: The tax rate that was applied to get this tax amount.
          type: string
          x-expansionResources:
            oneOf:
              - $ref: "#/components/schemas/tax_rate"
      required:
        - amount
        - inclusive
        - tax_rate
      title: InvoiceTaxAmount
      type: object
      x-expandableFields:
        - tax_rate
    invoice_threshold_reason:
      properties:
        amount_gte:
          description: The total invoice amount threshold boundary if it triggered the
            threshold invoice.
          type: integer
        item_reasons:
          description: Indicates which line items triggered a threshold invoice.
          items:
            $ref: "#/components/schemas/invoice_item_threshold_reason"
          type: array
      required:
        - item_reasons
      title: InvoiceThresholdReason
      type: object
      x-expandableFields:
        - item_reasons
    invoiceitem:
      properties:
        amount:
          description: Amount (in the `currency` specified) of the invoice item. This
            should always be equal to `unit_amount * quantity`.
          type: integer
        currency:
          description: Three-letter [ISO currency
            code](https://www.iso.org/iso-4217-currency-codes.html), in
            lowercase. Must be a [supported
            currency](https://stripe.com/docs/currencies).
          type: string
        customer:
          description: The ID of the customer who will be billed when this invoice item is
            billed.
          type: string
          x-expansionResources:
            oneOf:
              - $ref: "#/components/schemas/customer"
              - $ref: "#/components/schemas/deleted_customer"
        date:
          description: Time at which the object was created. Measured in seconds since the
            Unix epoch.
          type: integer
        description:
          description: An arbitrary string attached to the object. Often useful for
            displaying to users.
          type: string
        discountable:
          description: If true, discounts will apply to this invoice item. Always false for
            prorations.
          type: boolean
        id:
          description: Unique identifier for the object.
          type: string
        invoice:
          description: The ID of the invoice this invoice item belongs to.
          type: string
          x-expansionResources:
            oneOf:
              - $ref: "#/components/schemas/invoice"
        livemode:
          description: Has the value `true` if the object exists in live mode or the value
            `false` if the object exists in test mode.
          type: boolean
        metadata:
          description: Set of key-value pairs that you can attach to an object. This can be
            useful for storing additional information about the object in a
            structured format.
          type: object
        object:
          description: String representing the object's type. Objects of the same type
            share the same value.
          enum:
            - invoiceitem
          type: string
        period:
          $ref: "#/components/schemas/invoice_line_item_period"
        plan:
          $ref: "#/components/schemas/plan"
        proration:
          description: Whether the invoice item was created automatically as a proration
            adjustment when the customer switched plans.
          type: boolean
        quantity:
          description: Quantity of units for the invoice item. If the invoice item is a
            proration, the quantity of the subscription that the proration was
            computed for.
          type: integer
        subscription:
          description: The subscription that this invoice item has been created for, if any.
          type: string
          x-expansionResources:
            oneOf:
              - $ref: "#/components/schemas/subscription"
        subscription_item:
          description: The subscription item that this invoice item has been created for,
            if any.
          type: string
        tax_rates:
          description: The tax rates which apply to the invoice item. When set, the
            `default_tax_rates` on the invoice do not apply to this invoice
            item.
          items:
            $ref: "#/components/schemas/tax_rate"
          type: array
        unified_proration:
          description: For prorations this indicates whether Stripe automatically grouped
            multiple related debit and credit line items into a single combined
            line item.
          type: boolean
        unit_amount:
          description: Unit Amount (in the `currency` specified) of the invoice item.
          type: integer
        unit_amount_decimal:
          description: Same as `unit_amount`, but contains a decimal value with at most 12
            decimal places.
          type: string
      required:
        - amount
        - currency
        - customer
        - date
        - discountable
        - id
        - livemode
        - metadata
        - object
        - period
        - proration
        - quantity
      title: InvoiceItem
      type: object
      x-expandableFields:
        - customer
        - invoice
        - period
        - plan
        - subscription
        - tax_rates
      x-resourceId: invoiceitem
    invoices_resource_invoice_tax_id:
      properties:
        type:
          description: The type of the tax ID, one of `au_abn`, `eu_vat`, `in_gst`,
            `no_vat`, `nz_gst`, or `unknown`
          enum:
            - au_abn
            - eu_vat
            - in_gst
            - no_vat
            - nz_gst
            - unknown
          type: string
        value:
          description: The value of the tax ID.
          type: string
      required:
        - type
      title: InvoicesResourceInvoiceTaxID
      type: object
      x-expandableFields: []
    invoices_status_transitions:
      properties:
        finalized_at:
          description: The time that the invoice draft was finalized.
          type: integer
        marked_uncollectible_at:
          description: The time that the invoice was marked uncollectible.
          type: integer
        paid_at:
          description: The time that the invoice was paid.
          type: integer
        voided_at:
          description: The time that the invoice was voided.
          type: integer
      title: InvoicesStatusTransitions
      type: object
      x-expandableFields: []
    issuer_fraud_record:
      properties:
        actionable:
          description: An IFR is actionable if it has not received a dispute and has not
            been fully refunded. You may wish to proactively refund a charge
            that receives an IFR, in order to avoid receiving a dispute later.
          type: boolean
        charge:
          description: ID of the charge this issuer fraud record is for, optionally
            expanded.
          type: string
          x-expansionResources:
            oneOf:
              - $ref: "#/components/schemas/charge"
        created:
          description: Time at which the object was created. Measured in seconds since the
            Unix epoch.
          type: integer
        fraud_type:
          description: The type of fraud labelled by the issuer. One of
            `card_never_received`, `fraudulent_card_application`,
            `made_with_counterfeit_card`, `made_with_lost_card`,
            `made_with_stolen_card`, `misc`, `unauthorized_use_of_card`.
          type: string
        has_liability_shift:
          description: If true, the associated charge is subject to [liability
            shift](https://stripe.com/docs/sources/three-d-secure#disputed-payments).
          type: boolean
        id:
          description: Unique identifier for the object.
          type: string
        livemode:
          description: Has the value `true` if the object exists in live mode or the value
            `false` if the object exists in test mode.
          type: boolean
        object:
          description: String representing the object's type. Objects of the same type
            share the same value.
          enum:
            - issuer_fraud_record
          type: string
        post_date:
          description: The timestamp at which the card issuer posted the issuer fraud
            record.
          type: integer
      required:
        - actionable
        - charge
        - created
        - fraud_type
        - has_liability_shift
        - id
        - livemode
        - object
        - post_date
      title: IssuerFraudRecord
      type: object
      x-expandableFields:
        - charge
      x-resourceId: issuer_fraud_record
    issuing.authorization:
      properties:
        approved:
          description: Whether the authorization has been approved.
          type: boolean
        authorization_method:
          description: How the card details were provided. One of `chip`, `contactless`,
            `keyed_in`, `online`, or `swipe`.
          type: string
        authorized_amount:
          description: The amount that has been authorized. This will be `0` when the
            object is created, and increase after it has been approved.
          type: integer
        authorized_currency:
          description: The currency that was presented to the cardholder for the
            authorization. Three-letter [ISO currency
            code](https://www.iso.org/iso-4217-currency-codes.html), in
            lowercase. Must be a [supported
            currency](https://stripe.com/docs/currencies).
          type: string
        balance_transactions:
          items:
            $ref: "#/components/schemas/balance_transaction"
          type: array
        card:
          $ref: "#/components/schemas/issuing.card"
        cardholder:
          description: The cardholder to whom this authorization belongs.
          type: string
          x-expansionResources:
            oneOf:
              - $ref: "#/components/schemas/issuing.cardholder"
        created:
          description: Time at which the object was created. Measured in seconds since the
            Unix epoch.
          type: integer
        held_amount:
          description: The amount the authorization is expected to be in `held_currency`.
            When Stripe holds funds from you, this is the amount reserved for
            the authorization. This will be `0` when the object is created, and
            increase after it has been approved. For multi-currency
            transactions, `held_amount` can be used to determine the expected
            exchange rate.
          type: integer
        held_currency:
          description: The currency of the [held
            amount](https://stripe.com/docs/api#issuing_authorization_object-held_amount).
            This will always be the card currency.
          type: string
        id:
          description: Unique identifier for the object.
          type: string
        is_held_amount_controllable:
          type: boolean
        livemode:
          description: Has the value `true` if the object exists in live mode or the value
            `false` if the object exists in test mode.
          type: boolean
        merchant_data:
          $ref: "#/components/schemas/issuing_authorization_merchant_data"
        metadata:
          description: Set of key-value pairs that you can attach to an object. This can be
            useful for storing additional information about the object in a
            structured format.
          type: object
        object:
          description: String representing the object's type. Objects of the same type
            share the same value.
          enum:
            - issuing.authorization
          type: string
        pending_authorized_amount:
          description: The amount the user is requesting to be authorized. This field will
            only be non-zero during an `issuing.authorization.request` webhook.
          type: integer
        pending_held_amount:
          description: The additional amount Stripe will hold if the authorization is
            approved. This field will only be non-zero during an
            `issuing.authorization.request` webhook.
          type: integer
        request_history:
          items:
            $ref: "#/components/schemas/issuing_authorization_request"
          type: array
        status:
          description: One of `pending`, `reversed`, or `closed`.
          type: string
        transactions:
          items:
            $ref: "#/components/schemas/issuing.transaction"
          type: array
        verification_data:
          $ref: "#/components/schemas/issuing_authorization_verification_data"
        wallet_provider:
          description: What, if any, digital wallet was used for this authorization. One of
            `apple_pay`, `google_pay`, or `samsung_pay`.
          type: string
      required:
        - approved
        - authorization_method
        - authorized_amount
        - authorized_currency
        - balance_transactions
        - card
        - created
        - held_amount
        - held_currency
        - id
        - is_held_amount_controllable
        - livemode
        - merchant_data
        - metadata
        - object
        - pending_authorized_amount
        - pending_held_amount
        - request_history
        - status
        - transactions
        - verification_data
      title: IssuingAuthorization
      type: object
      x-expandableFields:
        - balance_transactions
        - card
        - cardholder
        - merchant_data
        - request_history
        - transactions
        - verification_data
      x-resourceId: issuing.authorization
    issuing.card:
      properties:
        authorization_controls:
          $ref: "#/components/schemas/issuing_card_authorization_controls"
        brand:
          description: The brand of the card.
          type: string
        cardholder:
          $ref: "#/components/schemas/issuing.cardholder"
        created:
          description: Time at which the object was created. Measured in seconds since the
            Unix epoch.
          type: integer
        currency:
          description: Three-letter [ISO currency
            code](https://www.iso.org/iso-4217-currency-codes.html), in
            lowercase. Must be a [supported
            currency](https://stripe.com/docs/currencies).
          type: string
        exp_month:
          description: The expiration month of the card.
          type: integer
        exp_year:
          description: The expiration year of the card.
          type: integer
        id:
          description: Unique identifier for the object.
          type: string
        last4:
          description: The last 4 digits of the card number.
          type: string
        livemode:
          description: Has the value `true` if the object exists in live mode or the value
            `false` if the object exists in test mode.
          type: boolean
        metadata:
          description: Set of key-value pairs that you can attach to an object. This can be
            useful for storing additional information about the object in a
            structured format.
          type: object
        name:
          description: The name of the cardholder, printed on the card.
          type: string
        object:
          description: String representing the object's type. Objects of the same type
            share the same value.
          enum:
            - issuing.card
          type: string
        pin:
          $ref: "#/components/schemas/issuing_card_pin"
        replacement_for:
          description: The card this card replaces, if any.
          type: string
          x-expansionResources:
            oneOf:
              - $ref: "#/components/schemas/issuing.card"
        replacement_reason:
          description: Why the card that this card replaces (if any) needed to be replaced.
            One of `damage`, `expiration`, `loss`, or `theft`.
          enum:
            - damage
            - expiration
            - loss
            - theft
          type: string
        shipping:
          $ref: "#/components/schemas/issuing_card_shipping"
        status:
          description: One of `active`, `inactive`, `canceled`, `lost`, `stolen`, or
            `pending`.
          enum:
            - active
            - canceled
            - inactive
            - lost
            - pending
            - stolen
          type: string
        type:
          description: One of `virtual` or `physical`.
          type: string
      required:
        - authorization_controls
        - brand
        - created
        - currency
        - exp_month
        - exp_year
        - id
        - last4
        - livemode
        - metadata
        - name
        - object
        - status
        - type
      title: IssuingCard
      type: object
      x-expandableFields:
        - authorization_controls
        - cardholder
        - pin
        - replacement_for
        - shipping
      x-resourceId: issuing.card
    issuing.card_details:
      properties:
        card:
          $ref: "#/components/schemas/issuing.card"
        cvc:
          description: The CVC number for the card.
          type: string
        exp_month:
          description: The expiration month of the card.
          type: integer
        exp_year:
          description: The expiration year of the card.
          type: integer
        number:
          description: The card number.
          type: string
        object:
          description: String representing the object's type. Objects of the same type
            share the same value.
          enum:
            - issuing.card_details
          type: string
      required:
        - card
        - cvc
        - exp_month
        - exp_year
        - number
        - object
      title: IssuingCardDetails
      type: object
      x-expandableFields:
        - card
      x-resourceId: issuing.card_details
    issuing.card_pin:
      properties:
        card:
          $ref: "#/components/schemas/issuing.card"
        object:
          description: String representing the object's type. Objects of the same type
            share the same value.
          enum:
            - issuing.card_pin
          type: string
        pin:
          description: The PIN (4 digits number)
          type: string
      required:
        - card
        - object
      title: IssuingPinPinResponse
      type: object
      x-expandableFields:
        - card
      x-resourceId: issuing.card_pin
    issuing.cardholder:
      properties:
        authorization_controls:
          $ref: "#/components/schemas/issuing_cardholder_authorization_controls"
        billing:
          $ref: "#/components/schemas/issuing_cardholder_address"
        created:
          description: Time at which the object was created. Measured in seconds since the
            Unix epoch.
          type: integer
        email:
          description: The cardholder's email address.
          type: string
        id:
          description: Unique identifier for the object.
          type: string
        is_default:
          description: Whether or not this cardholder is the default cardholder.
          type: boolean
        livemode:
          description: Has the value `true` if the object exists in live mode or the value
            `false` if the object exists in test mode.
          type: boolean
        metadata:
          description: Set of key-value pairs that you can attach to an object. This can be
            useful for storing additional information about the object in a
            structured format.
          type: object
        name:
          description: The cardholder's name. This will be printed on cards issued to them.
          type: string
        object:
          description: String representing the object's type. Objects of the same type
            share the same value.
          enum:
            - issuing.cardholder
          type: string
        phone_number:
          description: The cardholder's phone number.
          type: string
        status:
          description: One of `active`, `inactive`, `blocked`, or `pending`.
          enum:
            - active
            - blocked
            - inactive
            - pending
          type: string
        type:
          description: One of `individual` or `business_entity`.
          enum:
            - business_entity
            - individual
          type: string
      required:
        - billing
        - created
        - id
        - is_default
        - livemode
        - metadata
        - name
        - object
        - status
        - type
      title: IssuingCardholder
      type: object
      x-expandableFields:
        - authorization_controls
        - billing
      x-resourceId: issuing.cardholder
    issuing.dispute:
      properties:
        amount:
          description: Disputed amount. Usually the amount of the `disputed_transaction`,
            but can differ (usually because of currency fluctuation or because
            only part of the order is disputed).
          type: integer
        created:
          description: Time at which the object was created. Measured in seconds since the
            Unix epoch.
          type: integer
        currency:
          description: The currency the `disputed_transaction` was made in.
          type: string
        disputed_transaction:
          description: The transaction being disputed.
          type: string
          x-expansionResources:
            oneOf:
              - $ref: "#/components/schemas/issuing.transaction"
        evidence:
          $ref: "#/components/schemas/issuing_dispute_evidence"
        id:
          description: Unique identifier for the object.
          type: string
        livemode:
          description: Has the value `true` if the object exists in live mode or the value
            `false` if the object exists in test mode.
          type: boolean
        metadata:
          description: Set of key-value pairs that you can attach to an object. This can be
            useful for storing additional information about the object in a
            structured format. Individual keys can be unset by posting an empty
            value to them. All keys can be unset by posting an empty value to
            `metadata`.
          type: object
        object:
          description: String representing the object's type. Objects of the same type
            share the same value.
          enum:
            - issuing.dispute
          type: string
        reason:
          description: Reason for this dispute. One of `other` or `fraudulent`.
          type: string
        status:
          description: Current status of dispute. One of `unsubmitted`, `under_review`,
            `won`, or `lost`.
          type: string
      required:
        - amount
        - created
        - currency
        - disputed_transaction
        - evidence
        - id
        - livemode
        - metadata
        - object
        - reason
        - status
      title: IssuingDispute
      type: object
      x-expandableFields:
        - disputed_transaction
        - evidence
      x-resourceId: issuing.dispute
    issuing.settlement:
      properties:
        bin:
          description: The Bank Identification Number reflecting this settlement record.
          type: string
        clearing_date:
          description: The date that the transactions are cleared and posted to user's
            accounts.
          type: integer
        created:
          description: Time at which the object was created. Measured in seconds since the
            Unix epoch.
          type: integer
        currency:
          description: Three-letter [ISO currency
            code](https://www.iso.org/iso-4217-currency-codes.html), in
            lowercase. Must be a [supported
            currency](https://stripe.com/docs/currencies).
          type: string
        id:
          description: Unique identifier for the object.
          type: string
        interchange_fees:
          description: The total interchange received as reimbursement for the transactions.
          type: integer
        livemode:
          description: Has the value `true` if the object exists in live mode or the value
            `false` if the object exists in test mode.
          type: boolean
        metadata:
          description: Set of key-value pairs that you can attach to an object. This can be
            useful for storing additional information about the object in a
            structured format.
          type: object
        net_total:
          description: The total net amount required to settle with the network.
          type: integer
        network_fees:
          description: The total amount of fees owed to the network.
          type: integer
        network_settlement_identifier:
          description: The Settlement Identification Number assigned by the network.
          type: string
        object:
          description: String representing the object's type. Objects of the same type
            share the same value.
          enum:
            - issuing.settlement
          type: string
        settlement_service:
          description: One of `international` or `uk_national_net`.
          type: string
        transaction_count:
          description: The total number of transactions reflected in this settlement.
          type: integer
        transaction_volume:
          description: The total transaction amount reflected in this settlement.
          type: integer
      required:
        - bin
        - clearing_date
        - created
        - currency
        - id
        - interchange_fees
        - livemode
        - metadata
        - net_total
        - network_fees
        - network_settlement_identifier
        - object
        - settlement_service
        - transaction_count
        - transaction_volume
      title: IssuingSettlement
      type: object
      x-expandableFields: []
      x-resourceId: issuing.settlement
    issuing.transaction:
      properties:
        amount:
          type: integer
        authorization:
          description: The `Authorization` object that led to this transaction.
          type: string
          x-expansionResources:
            oneOf:
              - $ref: "#/components/schemas/issuing.authorization"
        balance_transaction:
          type: string
          x-expansionResources:
            oneOf:
              - $ref: "#/components/schemas/balance_transaction"
        card:
          description: The card used to make this transaction.
          type: string
          x-expansionResources:
            oneOf:
              - $ref: "#/components/schemas/issuing.card"
        cardholder:
          description: The cardholder to whom this transaction belongs.
          type: string
          x-expansionResources:
            oneOf:
              - $ref: "#/components/schemas/issuing.cardholder"
        created:
          description: Time at which the object was created. Measured in seconds since the
            Unix epoch.
          type: integer
        currency:
          description: Three-letter [ISO currency
            code](https://www.iso.org/iso-4217-currency-codes.html), in
            lowercase. Must be a [supported
            currency](https://stripe.com/docs/currencies).
          type: string
        dispute:
          type: string
          x-expansionResources:
            oneOf:
              - $ref: "#/components/schemas/issuing.dispute"
        id:
          description: Unique identifier for the object.
          type: string
        livemode:
          description: Has the value `true` if the object exists in live mode or the value
            `false` if the object exists in test mode.
          type: boolean
        merchant_amount:
          type: integer
        merchant_currency:
          type: string
        merchant_data:
          $ref: "#/components/schemas/issuing_authorization_merchant_data"
        metadata:
          description: Set of key-value pairs that you can attach to an object. This can be
            useful for storing additional information about the object in a
            structured format.
          type: object
        object:
          description: String representing the object's type. Objects of the same type
            share the same value.
          enum:
            - issuing.transaction
          type: string
        type:
          description: One of `capture`, `refund`, `cash_withdrawal`, `refund_reversal`,
            `dispute`, or `dispute_loss`.
          type: string
      required:
        - amount
        - card
        - created
        - currency
        - id
        - livemode
        - merchant_amount
        - merchant_currency
        - merchant_data
        - metadata
        - object
        - type
      title: IssuingTransaction
      type: object
      x-expandableFields:
        - authorization
        - balance_transaction
        - card
        - cardholder
        - dispute
        - merchant_data
      x-resourceId: issuing.transaction
    issuing.verification:
      properties:
        card:
          description: The id of the `Card` on which the verification was requested
          type: string
        created:
          description: Time at which the object was created. Measured in seconds since the
            Unix epoch.
          type: integer
        expires_at:
          description: Timestamp of the expiry for that verification
          type: integer
        id:
          description: Unique identifier for the object.
          type: string
        object:
          description: String representing the object's type. Objects of the same type
            share the same value.
          enum:
            - issuing.verification
          type: string
        scope:
          description: The scope of the verification (one of `card_pin_retrieve` or
            `card_pin_update`)
          enum:
            - card_pin_retrieve
            - card_pin_update
          type: string
        verification_method:
          description: The method by which the cardholder will be sent a one-time code (one
            of `email` or `sms`)
          enum:
            - email
            - sms
          type: string
      required:
        - card
        - created
        - expires_at
        - id
        - object
        - scope
        - verification_method
      title: IssuingVerification
      type: object
      x-expandableFields: []
      x-resourceId: issuing.verification
    issuing_authorization_merchant_data:
      properties:
        category:
          description: A categorization of the seller's type of business. See our [merchant
            categories
            guide](https://stripe.com/docs/issuing/merchant-categories) for a
            list of possible values.
          type: string
        city:
          description: City where the seller is located
          type: string
        country:
          description: Country where the seller is located
          type: string
        name:
          description: Name of the seller
          type: string
        network_id:
          description: Identifier assigned to the seller by the card brand
          type: string
        postal_code:
          description: Postal code where the seller is located
          type: string
        state:
          description: State where the seller is located
          type: string
        url:
          description: The url an online purchase was made from
          type: string
      required:
        - category
        - network_id
      title: IssuingAuthorizationMerchantData
      type: object
      x-expandableFields: []
    issuing_authorization_request:
      properties:
        approved:
          description: Whether this request was approved.
          type: boolean
        authorized_amount:
          description: The amount that was authorized at the time of this request
          type: integer
        authorized_currency:
          description: The currency that was presented to the cardholder for the
            authorization. Three-letter [ISO currency
            code](https://www.iso.org/iso-4217-currency-codes.html), in
            lowercase. Must be a [supported
            currency](https://stripe.com/docs/currencies).
          type: string
        created:
          description: Time at which the object was created. Measured in seconds since the
            Unix epoch.
          type: integer
        held_amount:
          description: The amount Stripe held from your account to fund the authorization,
            if the request was approved
          type: integer
        held_currency:
          description: The currency of the [held
            amount](https://stripe.com/docs/api#issuing_authorization_object-held_amount)
          type: string
        reason:
          description: One of `authentication_failed`, `authorization_controls`,
            `card_active`, `card_inactive`, `insufficient_funds`,
            `account_compliance_disabled`, `account_inactive`,
            `suspected_fraud`, `webhook_approved`, `webhook_declined`, or
            `webhook_timeout`.
          type: string
      required:
        - approved
        - authorized_amount
        - authorized_currency
        - created
        - held_amount
        - held_currency
        - reason
      title: IssuingAuthorizationRequest
      type: object
      x-expandableFields: []
    issuing_authorization_verification_data:
      properties:
        address_line1_check:
          description: One of `match`, `mismatch`, or `not_provided`.
          type: string
        address_zip_check:
          description: One of `match`, `mismatch`, or `not_provided`.
          type: string
        authentication:
          description: One of `success`, `failure`, `exempt`, or `none`.
          type: string
        cvc_check:
          description: One of `match`, `mismatch`, or `not_provided`.
          type: string
      required:
        - address_line1_check
        - address_zip_check
        - authentication
        - cvc_check
      title: IssuingAuthorizationVerificationData
      type: object
      x-expandableFields: []
    issuing_card_authorization_controls:
      properties:
        allowed_categories:
          description: Array of strings containing
            [categories](https://stripe.com/docs/api#issuing_authorization_object-merchant_data-category)
            of authorizations permitted on this card.
          items:
            enum:
              - ac_refrigeration_repair
              - accounting_bookkeeping_services
              - advertising_services
              - agricultural_cooperative
              - airlines_air_carriers
              - airports_flying_fields
              - ambulance_services
              - amusement_parks_carnivals
              - antique_reproductions
              - antique_shops
              - aquariums
              - architectural_surveying_services
              - art_dealers_and_galleries
              - artists_supply_and_craft_shops
              - auto_and_home_supply_stores
              - auto_body_repair_shops
              - auto_paint_shops
              - auto_service_shops
              - automated_cash_disburse
              - automated_fuel_dispensers
              - automobile_associations
              - automotive_parts_and_accessories_stores
              - automotive_tire_stores
              - bail_and_bond_payments
              - bakeries
              - bands_orchestras
              - barber_and_beauty_shops
              - betting_casino_gambling
              - bicycle_shops
              - billiard_pool_establishments
              - boat_dealers
              - boat_rentals_and_leases
              - book_stores
              - books_periodicals_and_newspapers
              - bowling_alleys
              - bus_lines
              - business_secretarial_schools
              - buying_shopping_services
              - cable_satellite_and_other_pay_television_and_radio
              - camera_and_photographic_supply_stores
              - candy_nut_and_confectionery_stores
              - car_and_truck_dealers_new_used
              - car_and_truck_dealers_used_only
              - car_rental_agencies
              - car_washes
              - carpentry_services
              - carpet_upholstery_cleaning
              - caterers
              - charitable_and_social_service_organizations_fundraising
              - chemicals_and_allied_products
              - child_care_services
              - childrens_and_infants_wear_stores
              - chiropodists_podiatrists
              - chiropractors
              - cigar_stores_and_stands
              - civic_social_fraternal_associations
              - cleaning_and_maintenance
              - clothing_rental
              - colleges_universities
              - commercial_equipment
              - commercial_footwear
              - commercial_photography_art_and_graphics
              - commuter_transport_and_ferries
              - computer_network_services
              - computer_programming
              - computer_repair
              - computer_software_stores
              - computers_peripherals_and_software
              - concrete_work_services
              - construction_materials
              - consulting_public_relations
              - correspondence_schools
              - cosmetic_stores
              - counseling_services
              - country_clubs
              - courier_services
              - court_costs
              - credit_reporting_agencies
              - cruise_lines
              - dairy_products_stores
              - dance_hall_studios_schools
              - dating_escort_services
              - dentists_orthodontists
              - department_stores
              - detective_agencies
              - digital_goods_applications
              - direct_marketing_catalog_merchant
              - direct_marketing_combination_catalog_and_retail_merchant
              - direct_marketing_inbound_telemarketing
              - direct_marketing_insurance_services
              - direct_marketing_other
              - direct_marketing_outbound_telemarketing
              - direct_marketing_subscription
              - direct_marketing_travel
              - discount_stores
              - doctors
              - door_to_door_sales
              - drapery_window_covering_and_upholstery_stores
              - drinking_places
              - drug_stores_and_pharmacies
              - drugs_drug_proprietaries_and_druggist_sundries
              - dry_cleaners
              - durable_goods
              - duty_free_stores
              - eating_places_restaurants
              - educational_services
              - electric_razor_stores
              - electrical_parts_and_equipment
              - electrical_services
              - electronics_repair_shops
              - electronics_stores
              - elementary_secondary_schools
              - employment_temp_agencies
              - equipment_rental
              - exterminating_services
              - family_clothing_stores
              - fast_food_restaurants
              - financial_institutions
              - fines_government_administrative_entities
              - fireplace_fireplace_screens_and_accessories_stores
              - floor_covering_stores
              - florists
              - florists_supplies_nursery_stock_and_flowers
              - freezer_and_locker_meat_provisioners
              - fuel_dealers_non_automotive
              - funeral_services_crematories
              - furniture_home_furnishings_and_equipment_stores_except_appliances
              - furniture_repair_refinishing
              - furriers_and_fur_shops
              - general_services
              - gift_card_novelty_and_souvenir_shops
              - glass_paint_and_wallpaper_stores
              - glassware_crystal_stores
              - golf_courses_public
              - government_services
              - grocery_stores_supermarkets
              - hardware_equipment_and_supplies
              - hardware_stores
              - health_and_beauty_spas
              - hearing_aids_sales_and_supplies
              - heating_plumbing_a_c
              - hobby_toy_and_game_shops
              - home_supply_warehouse_stores
              - hospitals
              - hotels_motels_and_resorts
              - household_appliance_stores
              - industrial_supplies
              - information_retrieval_services
              - insurance_default
              - insurance_underwriting_premiums
              - intra_company_purchases
              - jewelry_stores_watches_clocks_and_silverware_stores
              - landscaping_services
              - laundries
              - laundry_cleaning_services
              - legal_services_attorneys
              - luggage_and_leather_goods_stores
              - lumber_building_materials_stores
              - manual_cash_disburse
              - marinas_service_and_supplies
              - masonry_stonework_and_plaster
              - massage_parlors
              - medical_and_dental_labs
              - medical_dental_ophthalmic_and_hospital_equipment_and_supplies
              - medical_services
              - membership_organizations
              - mens_and_boys_clothing_and_accessories_stores
              - mens_womens_clothing_stores
              - metal_service_centers
              - miscellaneous
              - miscellaneous_apparel_and_accessory_shops
              - miscellaneous_auto_dealers
              - miscellaneous_business_services
              - miscellaneous_food_stores
              - miscellaneous_general_merchandise
              - miscellaneous_general_services
              - miscellaneous_home_furnishing_specialty_stores
              - miscellaneous_publishing_and_printing
              - miscellaneous_recreation_services
              - miscellaneous_repair_shops
              - miscellaneous_specialty_retail
              - mobile_home_dealers
              - motion_picture_theaters
              - motor_freight_carriers_and_trucking
              - motor_homes_dealers
              - motor_vehicle_supplies_and_new_parts
              - motorcycle_shops_and_dealers
              - motorcycle_shops_dealers
              - music_stores_musical_instruments_pianos_and_sheet_music
              - news_dealers_and_newsstands
              - non_fi_money_orders
              - non_fi_stored_value_card_purchase_load
              - nondurable_goods
              - nurseries_lawn_and_garden_supply_stores
              - nursing_personal_care
              - office_and_commercial_furniture
              - opticians_eyeglasses
              - optometrists_ophthalmologist
              - orthopedic_goods_prosthetic_devices
              - osteopaths
              - package_stores_beer_wine_and_liquor
              - paints_varnishes_and_supplies
              - parking_lots_garages
              - passenger_railways
              - pawn_shops
              - pet_shops_pet_food_and_supplies
              - petroleum_and_petroleum_products
              - photo_developing
              - photographic_photocopy_microfilm_equipment_and_supplies
              - photographic_studios
              - picture_video_production
              - piece_goods_notions_and_other_dry_goods
              - plumbing_heating_equipment_and_supplies
              - political_organizations
              - postal_services_government_only
              - precious_stones_and_metals_watches_and_jewelry
              - professional_services
              - public_warehousing_and_storage
              - quick_copy_repro_and_blueprint
              - railroads
              - real_estate_agents_and_managers_rentals
              - record_stores
              - recreational_vehicle_rentals
              - religious_goods_stores
              - religious_organizations
              - roofing_siding_sheet_metal
              - secretarial_support_services
              - security_brokers_dealers
              - service_stations
              - sewing_needlework_fabric_and_piece_goods_stores
              - shoe_repair_hat_cleaning
              - shoe_stores
              - small_appliance_repair
              - snowmobile_dealers
              - special_trade_services
              - specialty_cleaning
              - sporting_goods_stores
              - sporting_recreation_camps
              - sports_and_riding_apparel_stores
              - sports_clubs_fields
              - stamp_and_coin_stores
              - stationary_office_supplies_printing_and_writing_paper
              - stationery_stores_office_and_school_supply_stores
              - swimming_pools_sales
              - t_ui_travel_germany
              - tailors_alterations
              - tax_payments_government_agencies
              - tax_preparation_services
              - taxicabs_limousines
              - telecommunication_equipment_and_telephone_sales
              - telecommunication_services
              - telegraph_services
              - tent_and_awning_shops
              - testing_laboratories
              - theatrical_ticket_agencies
              - timeshares
              - tire_retreading_and_repair
              - tolls_bridge_fees
              - tourist_attractions_and_exhibits
              - towing_services
              - trailer_parks_campgrounds
              - transportation_services
              - travel_agencies_tour_operators
              - truck_stop_iteration
              - truck_utility_trailer_rentals
              - typesetting_plate_making_and_related_services
              - typewriter_stores
              - u_s_federal_government_agencies_or_departments
              - uniforms_commercial_clothing
              - used_merchandise_and_secondhand_stores
              - utilities
              - variety_stores
              - veterinary_services
              - video_amusement_game_supplies
              - video_game_arcades
              - video_tape_rental_stores
              - vocational_trade_schools
              - watch_jewelry_repair
              - welding_repair
              - wholesale_clubs
              - wig_and_toupee_stores
              - wires_money_orders
              - womens_accessory_and_specialty_shops
              - womens_ready_to_wear_stores
              - wrecking_and_salvage_yards
            type: string
          type: array
        blocked_categories:
          description: Array of strings containing
            [categories](https://stripe.com/docs/api#issuing_authorization_object-merchant_data-category)
            of authorizations to always decline on this card.
          items:
            enum:
              - ac_refrigeration_repair
              - accounting_bookkeeping_services
              - advertising_services
              - agricultural_cooperative
              - airlines_air_carriers
              - airports_flying_fields
              - ambulance_services
              - amusement_parks_carnivals
              - antique_reproductions
              - antique_shops
              - aquariums
              - architectural_surveying_services
              - art_dealers_and_galleries
              - artists_supply_and_craft_shops
              - auto_and_home_supply_stores
              - auto_body_repair_shops
              - auto_paint_shops
              - auto_service_shops
              - automated_cash_disburse
              - automated_fuel_dispensers
              - automobile_associations
              - automotive_parts_and_accessories_stores
              - automotive_tire_stores
              - bail_and_bond_payments
              - bakeries
              - bands_orchestras
              - barber_and_beauty_shops
              - betting_casino_gambling
              - bicycle_shops
              - billiard_pool_establishments
              - boat_dealers
              - boat_rentals_and_leases
              - book_stores
              - books_periodicals_and_newspapers
              - bowling_alleys
              - bus_lines
              - business_secretarial_schools
              - buying_shopping_services
              - cable_satellite_and_other_pay_television_and_radio
              - camera_and_photographic_supply_stores
              - candy_nut_and_confectionery_stores
              - car_and_truck_dealers_new_used
              - car_and_truck_dealers_used_only
              - car_rental_agencies
              - car_washes
              - carpentry_services
              - carpet_upholstery_cleaning
              - caterers
              - charitable_and_social_service_organizations_fundraising
              - chemicals_and_allied_products
              - child_care_services
              - childrens_and_infants_wear_stores
              - chiropodists_podiatrists
              - chiropractors
              - cigar_stores_and_stands
              - civic_social_fraternal_associations
              - cleaning_and_maintenance
              - clothing_rental
              - colleges_universities
              - commercial_equipment
              - commercial_footwear
              - commercial_photography_art_and_graphics
              - commuter_transport_and_ferries
              - computer_network_services
              - computer_programming
              - computer_repair
              - computer_software_stores
              - computers_peripherals_and_software
              - concrete_work_services
              - construction_materials
              - consulting_public_relations
              - correspondence_schools
              - cosmetic_stores
              - counseling_services
              - country_clubs
              - courier_services
              - court_costs
              - credit_reporting_agencies
              - cruise_lines
              - dairy_products_stores
              - dance_hall_studios_schools
              - dating_escort_services
              - dentists_orthodontists
              - department_stores
              - detective_agencies
              - digital_goods_applications
              - direct_marketing_catalog_merchant
              - direct_marketing_combination_catalog_and_retail_merchant
              - direct_marketing_inbound_telemarketing
              - direct_marketing_insurance_services
              - direct_marketing_other
              - direct_marketing_outbound_telemarketing
              - direct_marketing_subscription
              - direct_marketing_travel
              - discount_stores
              - doctors
              - door_to_door_sales
              - drapery_window_covering_and_upholstery_stores
              - drinking_places
              - drug_stores_and_pharmacies
              - drugs_drug_proprietaries_and_druggist_sundries
              - dry_cleaners
              - durable_goods
              - duty_free_stores
              - eating_places_restaurants
              - educational_services
              - electric_razor_stores
              - electrical_parts_and_equipment
              - electrical_services
              - electronics_repair_shops
              - electronics_stores
              - elementary_secondary_schools
              - employment_temp_agencies
              - equipment_rental
              - exterminating_services
              - family_clothing_stores
              - fast_food_restaurants
              - financial_institutions
              - fines_government_administrative_entities
              - fireplace_fireplace_screens_and_accessories_stores
              - floor_covering_stores
              - florists
              - florists_supplies_nursery_stock_and_flowers
              - freezer_and_locker_meat_provisioners
              - fuel_dealers_non_automotive
              - funeral_services_crematories
              - furniture_home_furnishings_and_equipment_stores_except_appliances
              - furniture_repair_refinishing
              - furriers_and_fur_shops
              - general_services
              - gift_card_novelty_and_souvenir_shops
              - glass_paint_and_wallpaper_stores
              - glassware_crystal_stores
              - golf_courses_public
              - government_services
              - grocery_stores_supermarkets
              - hardware_equipment_and_supplies
              - hardware_stores
              - health_and_beauty_spas
              - hearing_aids_sales_and_supplies
              - heating_plumbing_a_c
              - hobby_toy_and_game_shops
              - home_supply_warehouse_stores
              - hospitals
              - hotels_motels_and_resorts
              - household_appliance_stores
              - industrial_supplies
              - information_retrieval_services
              - insurance_default
              - insurance_underwriting_premiums
              - intra_company_purchases
              - jewelry_stores_watches_clocks_and_silverware_stores
              - landscaping_services
              - laundries
              - laundry_cleaning_services
              - legal_services_attorneys
              - luggage_and_leather_goods_stores
              - lumber_building_materials_stores
              - manual_cash_disburse
              - marinas_service_and_supplies
              - masonry_stonework_and_plaster
              - massage_parlors
              - medical_and_dental_labs
              - medical_dental_ophthalmic_and_hospital_equipment_and_supplies
              - medical_services
              - membership_organizations
              - mens_and_boys_clothing_and_accessories_stores
              - mens_womens_clothing_stores
              - metal_service_centers
              - miscellaneous
              - miscellaneous_apparel_and_accessory_shops
              - miscellaneous_auto_dealers
              - miscellaneous_business_services
              - miscellaneous_food_stores
              - miscellaneous_general_merchandise
              - miscellaneous_general_services
              - miscellaneous_home_furnishing_specialty_stores
              - miscellaneous_publishing_and_printing
              - miscellaneous_recreation_services
              - miscellaneous_repair_shops
              - miscellaneous_specialty_retail
              - mobile_home_dealers
              - motion_picture_theaters
              - motor_freight_carriers_and_trucking
              - motor_homes_dealers
              - motor_vehicle_supplies_and_new_parts
              - motorcycle_shops_and_dealers
              - motorcycle_shops_dealers
              - music_stores_musical_instruments_pianos_and_sheet_music
              - news_dealers_and_newsstands
              - non_fi_money_orders
              - non_fi_stored_value_card_purchase_load
              - nondurable_goods
              - nurseries_lawn_and_garden_supply_stores
              - nursing_personal_care
              - office_and_commercial_furniture
              - opticians_eyeglasses
              - optometrists_ophthalmologist
              - orthopedic_goods_prosthetic_devices
              - osteopaths
              - package_stores_beer_wine_and_liquor
              - paints_varnishes_and_supplies
              - parking_lots_garages
              - passenger_railways
              - pawn_shops
              - pet_shops_pet_food_and_supplies
              - petroleum_and_petroleum_products
              - photo_developing
              - photographic_photocopy_microfilm_equipment_and_supplies
              - photographic_studios
              - picture_video_production
              - piece_goods_notions_and_other_dry_goods
              - plumbing_heating_equipment_and_supplies
              - political_organizations
              - postal_services_government_only
              - precious_stones_and_metals_watches_and_jewelry
              - professional_services
              - public_warehousing_and_storage
              - quick_copy_repro_and_blueprint
              - railroads
              - real_estate_agents_and_managers_rentals
              - record_stores
              - recreational_vehicle_rentals
              - religious_goods_stores
              - religious_organizations
              - roofing_siding_sheet_metal
              - secretarial_support_services
              - security_brokers_dealers
              - service_stations
              - sewing_needlework_fabric_and_piece_goods_stores
              - shoe_repair_hat_cleaning
              - shoe_stores
              - small_appliance_repair
              - snowmobile_dealers
              - special_trade_services
              - specialty_cleaning
              - sporting_goods_stores
              - sporting_recreation_camps
              - sports_and_riding_apparel_stores
              - sports_clubs_fields
              - stamp_and_coin_stores
              - stationary_office_supplies_printing_and_writing_paper
              - stationery_stores_office_and_school_supply_stores
              - swimming_pools_sales
              - t_ui_travel_germany
              - tailors_alterations
              - tax_payments_government_agencies
              - tax_preparation_services
              - taxicabs_limousines
              - telecommunication_equipment_and_telephone_sales
              - telecommunication_services
              - telegraph_services
              - tent_and_awning_shops
              - testing_laboratories
              - theatrical_ticket_agencies
              - timeshares
              - tire_retreading_and_repair
              - tolls_bridge_fees
              - tourist_attractions_and_exhibits
              - towing_services
              - trailer_parks_campgrounds
              - transportation_services
              - travel_agencies_tour_operators
              - truck_stop_iteration
              - truck_utility_trailer_rentals
              - typesetting_plate_making_and_related_services
              - typewriter_stores
              - u_s_federal_government_agencies_or_departments
              - uniforms_commercial_clothing
              - used_merchandise_and_secondhand_stores
              - utilities
              - variety_stores
              - veterinary_services
              - video_amusement_game_supplies
              - video_game_arcades
              - video_tape_rental_stores
              - vocational_trade_schools
              - watch_jewelry_repair
              - welding_repair
              - wholesale_clubs
              - wig_and_toupee_stores
              - wires_money_orders
              - womens_accessory_and_specialty_shops
              - womens_ready_to_wear_stores
              - wrecking_and_salvage_yards
            type: string
          type: array
        currency:
          description: The currency of the card. See
            [max_amount](https://stripe.com/docs/api#issuing_card_object-authorization_controls-max_amount)
          type: string
        max_amount:
          description: Maximum amount allowed per authorization on this card, in the
            currency of the card. Authorization amounts in a different currency
            will be converted to the card's currency when evaluating this
            control.
          type: integer
        max_approvals:
          description: Maximum count of approved authorizations on this card. Counts all
            authorizations retroactively.
          type: integer
        spending_limits:
          description: Limit the spending with rules based on time intervals and categories.
          items:
            $ref: "#/components/schemas/issuing_card_spending_limit"
          type: array
        spending_limits_currency:
          description: Currency for the amounts within spending_limits. Locked to the
            currency of the card.
          type: string
      title: IssuingCardAuthorizationControls
      type: object
      x-expandableFields:
        - spending_limits
    issuing_card_pin:
      properties:
        status:
          description: The status of the pin. One of `blocked` or `active`.
          type: string
      required:
        - status
      title: IssuingCardPin
      type: object
      x-expandableFields: []
    issuing_card_shipping:
      properties:
        address:
          $ref: "#/components/schemas/address"
        carrier:
          description: The delivery service that shipped a physical product, such as Fedex,
            UPS, USPS, etc.
          type: string
        eta:
          description: A unix timestamp representing a best estimate of when the card will
            be delivered.
          type: integer
        name:
          description: Recipient name.
          type: string
        status:
          description: The delivery status of the card. One of `pending`, `shipped`,
            `delivered`, `returned`, `failure`, or `canceled`.
          type: string
        tracking_number:
          description: A tracking number for a card shipment.
          type: string
        tracking_url:
          description: A link to the shipping carrier's site where you can view detailed
            information about a card shipment.
          type: string
        type:
          description: One of `bulk` or `individual`. Bulk shipments will be grouped and
            mailed together, while individual ones will not.
          type: string
      required:
        - address
        - name
        - type
      title: IssuingCardShipping
      type: object
      x-expandableFields:
        - address
    issuing_card_spending_limit:
      properties:
        amount:
          description: Maximum amount allowed to spend per time interval.
          type: integer
        categories:
          description: Array of strings containing
            [categories](https://stripe.com/docs/api#issuing_authorization_object-merchant_data-category)
            on which to apply the spending limit. Leave this blank to limit all
            charges.
          items:
            enum:
              - ac_refrigeration_repair
              - accounting_bookkeeping_services
              - advertising_services
              - agricultural_cooperative
              - airlines_air_carriers
              - airports_flying_fields
              - ambulance_services
              - amusement_parks_carnivals
              - antique_reproductions
              - antique_shops
              - aquariums
              - architectural_surveying_services
              - art_dealers_and_galleries
              - artists_supply_and_craft_shops
              - auto_and_home_supply_stores
              - auto_body_repair_shops
              - auto_paint_shops
              - auto_service_shops
              - automated_cash_disburse
              - automated_fuel_dispensers
              - automobile_associations
              - automotive_parts_and_accessories_stores
              - automotive_tire_stores
              - bail_and_bond_payments
              - bakeries
              - bands_orchestras
              - barber_and_beauty_shops
              - betting_casino_gambling
              - bicycle_shops
              - billiard_pool_establishments
              - boat_dealers
              - boat_rentals_and_leases
              - book_stores
              - books_periodicals_and_newspapers
              - bowling_alleys
              - bus_lines
              - business_secretarial_schools
              - buying_shopping_services
              - cable_satellite_and_other_pay_television_and_radio
              - camera_and_photographic_supply_stores
              - candy_nut_and_confectionery_stores
              - car_and_truck_dealers_new_used
              - car_and_truck_dealers_used_only
              - car_rental_agencies
              - car_washes
              - carpentry_services
              - carpet_upholstery_cleaning
              - caterers
              - charitable_and_social_service_organizations_fundraising
              - chemicals_and_allied_products
              - child_care_services
              - childrens_and_infants_wear_stores
              - chiropodists_podiatrists
              - chiropractors
              - cigar_stores_and_stands
              - civic_social_fraternal_associations
              - cleaning_and_maintenance
              - clothing_rental
              - colleges_universities
              - commercial_equipment
              - commercial_footwear
              - commercial_photography_art_and_graphics
              - commuter_transport_and_ferries
              - computer_network_services
              - computer_programming
              - computer_repair
              - computer_software_stores
              - computers_peripherals_and_software
              - concrete_work_services
              - construction_materials
              - consulting_public_relations
              - correspondence_schools
              - cosmetic_stores
              - counseling_services
              - country_clubs
              - courier_services
              - court_costs
              - credit_reporting_agencies
              - cruise_lines
              - dairy_products_stores
              - dance_hall_studios_schools
              - dating_escort_services
              - dentists_orthodontists
              - department_stores
              - detective_agencies
              - digital_goods_applications
              - direct_marketing_catalog_merchant
              - direct_marketing_combination_catalog_and_retail_merchant
              - direct_marketing_inbound_telemarketing
              - direct_marketing_insurance_services
              - direct_marketing_other
              - direct_marketing_outbound_telemarketing
              - direct_marketing_subscription
              - direct_marketing_travel
              - discount_stores
              - doctors
              - door_to_door_sales
              - drapery_window_covering_and_upholstery_stores
              - drinking_places
              - drug_stores_and_pharmacies
              - drugs_drug_proprietaries_and_druggist_sundries
              - dry_cleaners
              - durable_goods
              - duty_free_stores
              - eating_places_restaurants
              - educational_services
              - electric_razor_stores
              - electrical_parts_and_equipment
              - electrical_services
              - electronics_repair_shops
              - electronics_stores
              - elementary_secondary_schools
              - employment_temp_agencies
              - equipment_rental
              - exterminating_services
              - family_clothing_stores
              - fast_food_restaurants
              - financial_institutions
              - fines_government_administrative_entities
              - fireplace_fireplace_screens_and_accessories_stores
              - floor_covering_stores
              - florists
              - florists_supplies_nursery_stock_and_flowers
              - freezer_and_locker_meat_provisioners
              - fuel_dealers_non_automotive
              - funeral_services_crematories
              - furniture_home_furnishings_and_equipment_stores_except_appliances
              - furniture_repair_refinishing
              - furriers_and_fur_shops
              - general_services
              - gift_card_novelty_and_souvenir_shops
              - glass_paint_and_wallpaper_stores
              - glassware_crystal_stores
              - golf_courses_public
              - government_services
              - grocery_stores_supermarkets
              - hardware_equipment_and_supplies
              - hardware_stores
              - health_and_beauty_spas
              - hearing_aids_sales_and_supplies
              - heating_plumbing_a_c
              - hobby_toy_and_game_shops
              - home_supply_warehouse_stores
              - hospitals
              - hotels_motels_and_resorts
              - household_appliance_stores
              - industrial_supplies
              - information_retrieval_services
              - insurance_default
              - insurance_underwriting_premiums
              - intra_company_purchases
              - jewelry_stores_watches_clocks_and_silverware_stores
              - landscaping_services
              - laundries
              - laundry_cleaning_services
              - legal_services_attorneys
              - luggage_and_leather_goods_stores
              - lumber_building_materials_stores
              - manual_cash_disburse
              - marinas_service_and_supplies
              - masonry_stonework_and_plaster
              - massage_parlors
              - medical_and_dental_labs
              - medical_dental_ophthalmic_and_hospital_equipment_and_supplies
              - medical_services
              - membership_organizations
              - mens_and_boys_clothing_and_accessories_stores
              - mens_womens_clothing_stores
              - metal_service_centers
              - miscellaneous
              - miscellaneous_apparel_and_accessory_shops
              - miscellaneous_auto_dealers
              - miscellaneous_business_services
              - miscellaneous_food_stores
              - miscellaneous_general_merchandise
              - miscellaneous_general_services
              - miscellaneous_home_furnishing_specialty_stores
              - miscellaneous_publishing_and_printing
              - miscellaneous_recreation_services
              - miscellaneous_repair_shops
              - miscellaneous_specialty_retail
              - mobile_home_dealers
              - motion_picture_theaters
              - motor_freight_carriers_and_trucking
              - motor_homes_dealers
              - motor_vehicle_supplies_and_new_parts
              - motorcycle_shops_and_dealers
              - motorcycle_shops_dealers
              - music_stores_musical_instruments_pianos_and_sheet_music
              - news_dealers_and_newsstands
              - non_fi_money_orders
              - non_fi_stored_value_card_purchase_load
              - nondurable_goods
              - nurseries_lawn_and_garden_supply_stores
              - nursing_personal_care
              - office_and_commercial_furniture
              - opticians_eyeglasses
              - optometrists_ophthalmologist
              - orthopedic_goods_prosthetic_devices
              - osteopaths
              - package_stores_beer_wine_and_liquor
              - paints_varnishes_and_supplies
              - parking_lots_garages
              - passenger_railways
              - pawn_shops
              - pet_shops_pet_food_and_supplies
              - petroleum_and_petroleum_products
              - photo_developing
              - photographic_photocopy_microfilm_equipment_and_supplies
              - photographic_studios
              - picture_video_production
              - piece_goods_notions_and_other_dry_goods
              - plumbing_heating_equipment_and_supplies
              - political_organizations
              - postal_services_government_only
              - precious_stones_and_metals_watches_and_jewelry
              - professional_services
              - public_warehousing_and_storage
              - quick_copy_repro_and_blueprint
              - railroads
              - real_estate_agents_and_managers_rentals
              - record_stores
              - recreational_vehicle_rentals
              - religious_goods_stores
              - religious_organizations
              - roofing_siding_sheet_metal
              - secretarial_support_services
              - security_brokers_dealers
              - service_stations
              - sewing_needlework_fabric_and_piece_goods_stores
              - shoe_repair_hat_cleaning
              - shoe_stores
              - small_appliance_repair
              - snowmobile_dealers
              - special_trade_services
              - specialty_cleaning
              - sporting_goods_stores
              - sporting_recreation_camps
              - sports_and_riding_apparel_stores
              - sports_clubs_fields
              - stamp_and_coin_stores
              - stationary_office_supplies_printing_and_writing_paper
              - stationery_stores_office_and_school_supply_stores
              - swimming_pools_sales
              - t_ui_travel_germany
              - tailors_alterations
              - tax_payments_government_agencies
              - tax_preparation_services
              - taxicabs_limousines
              - telecommunication_equipment_and_telephone_sales
              - telecommunication_services
              - telegraph_services
              - tent_and_awning_shops
              - testing_laboratories
              - theatrical_ticket_agencies
              - timeshares
              - tire_retreading_and_repair
              - tolls_bridge_fees
              - tourist_attractions_and_exhibits
              - towing_services
              - trailer_parks_campgrounds
              - transportation_services
              - travel_agencies_tour_operators
              - truck_stop_iteration
              - truck_utility_trailer_rentals
              - typesetting_plate_making_and_related_services
              - typewriter_stores
              - u_s_federal_government_agencies_or_departments
              - uniforms_commercial_clothing
              - used_merchandise_and_secondhand_stores
              - utilities
              - variety_stores
              - veterinary_services
              - video_amusement_game_supplies
              - video_game_arcades
              - video_tape_rental_stores
              - vocational_trade_schools
              - watch_jewelry_repair
              - welding_repair
              - wholesale_clubs
              - wig_and_toupee_stores
              - wires_money_orders
              - womens_accessory_and_specialty_shops
              - womens_ready_to_wear_stores
              - wrecking_and_salvage_yards
            type: string
          type: array
        interval:
          description: The time interval with which to apply this spending limit towards.
            Allowed values are `per_authorization`, `daily`, `weekly`,
            `monthly`, `yearly`, or `all_time`.
          enum:
            - all_time
            - daily
            - monthly
            - per_authorization
            - weekly
            - yearly
          type: string
      required:
        - amount
        - interval
      title: IssuingCardSpendingLimit
      type: object
      x-expandableFields: []
    issuing_cardholder_address:
      properties:
        address:
          $ref: "#/components/schemas/address"
        name:
          type: string
      required:
        - address
      title: IssuingCardholderAddress
      type: object
      x-expandableFields:
        - address
    issuing_cardholder_authorization_controls:
      properties:
        allowed_categories:
          description: Array of strings containing
            [categories](https://stripe.com/docs/api#issuing_authorization_object-merchant_data-category)
            of authorizations permitted on this card.
          items:
            enum:
              - ac_refrigeration_repair
              - accounting_bookkeeping_services
              - advertising_services
              - agricultural_cooperative
              - airlines_air_carriers
              - airports_flying_fields
              - ambulance_services
              - amusement_parks_carnivals
              - antique_reproductions
              - antique_shops
              - aquariums
              - architectural_surveying_services
              - art_dealers_and_galleries
              - artists_supply_and_craft_shops
              - auto_and_home_supply_stores
              - auto_body_repair_shops
              - auto_paint_shops
              - auto_service_shops
              - automated_cash_disburse
              - automated_fuel_dispensers
              - automobile_associations
              - automotive_parts_and_accessories_stores
              - automotive_tire_stores
              - bail_and_bond_payments
              - bakeries
              - bands_orchestras
              - barber_and_beauty_shops
              - betting_casino_gambling
              - bicycle_shops
              - billiard_pool_establishments
              - boat_dealers
              - boat_rentals_and_leases
              - book_stores
              - books_periodicals_and_newspapers
              - bowling_alleys
              - bus_lines
              - business_secretarial_schools
              - buying_shopping_services
              - cable_satellite_and_other_pay_television_and_radio
              - camera_and_photographic_supply_stores
              - candy_nut_and_confectionery_stores
              - car_and_truck_dealers_new_used
              - car_and_truck_dealers_used_only
              - car_rental_agencies
              - car_washes
              - carpentry_services
              - carpet_upholstery_cleaning
              - caterers
              - charitable_and_social_service_organizations_fundraising
              - chemicals_and_allied_products
              - child_care_services
              - childrens_and_infants_wear_stores
              - chiropodists_podiatrists
              - chiropractors
              - cigar_stores_and_stands
              - civic_social_fraternal_associations
              - cleaning_and_maintenance
              - clothing_rental
              - colleges_universities
              - commercial_equipment
              - commercial_footwear
              - commercial_photography_art_and_graphics
              - commuter_transport_and_ferries
              - computer_network_services
              - computer_programming
              - computer_repair
              - computer_software_stores
              - computers_peripherals_and_software
              - concrete_work_services
              - construction_materials
              - consulting_public_relations
              - correspondence_schools
              - cosmetic_stores
              - counseling_services
              - country_clubs
              - courier_services
              - court_costs
              - credit_reporting_agencies
              - cruise_lines
              - dairy_products_stores
              - dance_hall_studios_schools
              - dating_escort_services
              - dentists_orthodontists
              - department_stores
              - detective_agencies
              - digital_goods_applications
              - direct_marketing_catalog_merchant
              - direct_marketing_combination_catalog_and_retail_merchant
              - direct_marketing_inbound_telemarketing
              - direct_marketing_insurance_services
              - direct_marketing_other
              - direct_marketing_outbound_telemarketing
              - direct_marketing_subscription
              - direct_marketing_travel
              - discount_stores
              - doctors
              - door_to_door_sales
              - drapery_window_covering_and_upholstery_stores
              - drinking_places
              - drug_stores_and_pharmacies
              - drugs_drug_proprietaries_and_druggist_sundries
              - dry_cleaners
              - durable_goods
              - duty_free_stores
              - eating_places_restaurants
              - educational_services
              - electric_razor_stores
              - electrical_parts_and_equipment
              - electrical_services
              - electronics_repair_shops
              - electronics_stores
              - elementary_secondary_schools
              - employment_temp_agencies
              - equipment_rental
              - exterminating_services
              - family_clothing_stores
              - fast_food_restaurants
              - financial_institutions
              - fines_government_administrative_entities
              - fireplace_fireplace_screens_and_accessories_stores
              - floor_covering_stores
              - florists
              - florists_supplies_nursery_stock_and_flowers
              - freezer_and_locker_meat_provisioners
              - fuel_dealers_non_automotive
              - funeral_services_crematories
              - furniture_home_furnishings_and_equipment_stores_except_appliances
              - furniture_repair_refinishing
              - furriers_and_fur_shops
              - general_services
              - gift_card_novelty_and_souvenir_shops
              - glass_paint_and_wallpaper_stores
              - glassware_crystal_stores
              - golf_courses_public
              - government_services
              - grocery_stores_supermarkets
              - hardware_equipment_and_supplies
              - hardware_stores
              - health_and_beauty_spas
              - hearing_aids_sales_and_supplies
              - heating_plumbing_a_c
              - hobby_toy_and_game_shops
              - home_supply_warehouse_stores
              - hospitals
              - hotels_motels_and_resorts
              - household_appliance_stores
              - industrial_supplies
              - information_retrieval_services
              - insurance_default
              - insurance_underwriting_premiums
              - intra_company_purchases
              - jewelry_stores_watches_clocks_and_silverware_stores
              - landscaping_services
              - laundries
              - laundry_cleaning_services
              - legal_services_attorneys
              - luggage_and_leather_goods_stores
              - lumber_building_materials_stores
              - manual_cash_disburse
              - marinas_service_and_supplies
              - masonry_stonework_and_plaster
              - massage_parlors
              - medical_and_dental_labs
              - medical_dental_ophthalmic_and_hospital_equipment_and_supplies
              - medical_services
              - membership_organizations
              - mens_and_boys_clothing_and_accessories_stores
              - mens_womens_clothing_stores
              - metal_service_centers
              - miscellaneous
              - miscellaneous_apparel_and_accessory_shops
              - miscellaneous_auto_dealers
              - miscellaneous_business_services
              - miscellaneous_food_stores
              - miscellaneous_general_merchandise
              - miscellaneous_general_services
              - miscellaneous_home_furnishing_specialty_stores
              - miscellaneous_publishing_and_printing
              - miscellaneous_recreation_services
              - miscellaneous_repair_shops
              - miscellaneous_specialty_retail
              - mobile_home_dealers
              - motion_picture_theaters
              - motor_freight_carriers_and_trucking
              - motor_homes_dealers
              - motor_vehicle_supplies_and_new_parts
              - motorcycle_shops_and_dealers
              - motorcycle_shops_dealers
              - music_stores_musical_instruments_pianos_and_sheet_music
              - news_dealers_and_newsstands
              - non_fi_money_orders
              - non_fi_stored_value_card_purchase_load
              - nondurable_goods
              - nurseries_lawn_and_garden_supply_stores
              - nursing_personal_care
              - office_and_commercial_furniture
              - opticians_eyeglasses
              - optometrists_ophthalmologist
              - orthopedic_goods_prosthetic_devices
              - osteopaths
              - package_stores_beer_wine_and_liquor
              - paints_varnishes_and_supplies
              - parking_lots_garages
              - passenger_railways
              - pawn_shops
              - pet_shops_pet_food_and_supplies
              - petroleum_and_petroleum_products
              - photo_developing
              - photographic_photocopy_microfilm_equipment_and_supplies
              - photographic_studios
              - picture_video_production
              - piece_goods_notions_and_other_dry_goods
              - plumbing_heating_equipment_and_supplies
              - political_organizations
              - postal_services_government_only
              - precious_stones_and_metals_watches_and_jewelry
              - professional_services
              - public_warehousing_and_storage
              - quick_copy_repro_and_blueprint
              - railroads
              - real_estate_agents_and_managers_rentals
              - record_stores
              - recreational_vehicle_rentals
              - religious_goods_stores
              - religious_organizations
              - roofing_siding_sheet_metal
              - secretarial_support_services
              - security_brokers_dealers
              - service_stations
              - sewing_needlework_fabric_and_piece_goods_stores
              - shoe_repair_hat_cleaning
              - shoe_stores
              - small_appliance_repair
              - snowmobile_dealers
              - special_trade_services
              - specialty_cleaning
              - sporting_goods_stores
              - sporting_recreation_camps
              - sports_and_riding_apparel_stores
              - sports_clubs_fields
              - stamp_and_coin_stores
              - stationary_office_supplies_printing_and_writing_paper
              - stationery_stores_office_and_school_supply_stores
              - swimming_pools_sales
              - t_ui_travel_germany
              - tailors_alterations
              - tax_payments_government_agencies
              - tax_preparation_services
              - taxicabs_limousines
              - telecommunication_equipment_and_telephone_sales
              - telecommunication_services
              - telegraph_services
              - tent_and_awning_shops
              - testing_laboratories
              - theatrical_ticket_agencies
              - timeshares
              - tire_retreading_and_repair
              - tolls_bridge_fees
              - tourist_attractions_and_exhibits
              - towing_services
              - trailer_parks_campgrounds
              - transportation_services
              - travel_agencies_tour_operators
              - truck_stop_iteration
              - truck_utility_trailer_rentals
              - typesetting_plate_making_and_related_services
              - typewriter_stores
              - u_s_federal_government_agencies_or_departments
              - uniforms_commercial_clothing
              - used_merchandise_and_secondhand_stores
              - utilities
              - variety_stores
              - veterinary_services
              - video_amusement_game_supplies
              - video_game_arcades
              - video_tape_rental_stores
              - vocational_trade_schools
              - watch_jewelry_repair
              - welding_repair
              - wholesale_clubs
              - wig_and_toupee_stores
              - wires_money_orders
              - womens_accessory_and_specialty_shops
              - womens_ready_to_wear_stores
              - wrecking_and_salvage_yards
            type: string
          type: array
        blocked_categories:
          description: Array of strings containing
            [categories](https://stripe.com/docs/api#issuing_authorization_object-merchant_data-category)
            of authorizations to always decline on this card.
          items:
            enum:
              - ac_refrigeration_repair
              - accounting_bookkeeping_services
              - advertising_services
              - agricultural_cooperative
              - airlines_air_carriers
              - airports_flying_fields
              - ambulance_services
              - amusement_parks_carnivals
              - antique_reproductions
              - antique_shops
              - aquariums
              - architectural_surveying_services
              - art_dealers_and_galleries
              - artists_supply_and_craft_shops
              - auto_and_home_supply_stores
              - auto_body_repair_shops
              - auto_paint_shops
              - auto_service_shops
              - automated_cash_disburse
              - automated_fuel_dispensers
              - automobile_associations
              - automotive_parts_and_accessories_stores
              - automotive_tire_stores
              - bail_and_bond_payments
              - bakeries
              - bands_orchestras
              - barber_and_beauty_shops
              - betting_casino_gambling
              - bicycle_shops
              - billiard_pool_establishments
              - boat_dealers
              - boat_rentals_and_leases
              - book_stores
              - books_periodicals_and_newspapers
              - bowling_alleys
              - bus_lines
              - business_secretarial_schools
              - buying_shopping_services
              - cable_satellite_and_other_pay_television_and_radio
              - camera_and_photographic_supply_stores
              - candy_nut_and_confectionery_stores
              - car_and_truck_dealers_new_used
              - car_and_truck_dealers_used_only
              - car_rental_agencies
              - car_washes
              - carpentry_services
              - carpet_upholstery_cleaning
              - caterers
              - charitable_and_social_service_organizations_fundraising
              - chemicals_and_allied_products
              - child_care_services
              - childrens_and_infants_wear_stores
              - chiropodists_podiatrists
              - chiropractors
              - cigar_stores_and_stands
              - civic_social_fraternal_associations
              - cleaning_and_maintenance
              - clothing_rental
              - colleges_universities
              - commercial_equipment
              - commercial_footwear
              - commercial_photography_art_and_graphics
              - commuter_transport_and_ferries
              - computer_network_services
              - computer_programming
              - computer_repair
              - computer_software_stores
              - computers_peripherals_and_software
              - concrete_work_services
              - construction_materials
              - consulting_public_relations
              - correspondence_schools
              - cosmetic_stores
              - counseling_services
              - country_clubs
              - courier_services
              - court_costs
              - credit_reporting_agencies
              - cruise_lines
              - dairy_products_stores
              - dance_hall_studios_schools
              - dating_escort_services
              - dentists_orthodontists
              - department_stores
              - detective_agencies
              - digital_goods_applications
              - direct_marketing_catalog_merchant
              - direct_marketing_combination_catalog_and_retail_merchant
              - direct_marketing_inbound_telemarketing
              - direct_marketing_insurance_services
              - direct_marketing_other
              - direct_marketing_outbound_telemarketing
              - direct_marketing_subscription
              - direct_marketing_travel
              - discount_stores
              - doctors
              - door_to_door_sales
              - drapery_window_covering_and_upholstery_stores
              - drinking_places
              - drug_stores_and_pharmacies
              - drugs_drug_proprietaries_and_druggist_sundries
              - dry_cleaners
              - durable_goods
              - duty_free_stores
              - eating_places_restaurants
              - educational_services
              - electric_razor_stores
              - electrical_parts_and_equipment
              - electrical_services
              - electronics_repair_shops
              - electronics_stores
              - elementary_secondary_schools
              - employment_temp_agencies
              - equipment_rental
              - exterminating_services
              - family_clothing_stores
              - fast_food_restaurants
              - financial_institutions
              - fines_government_administrative_entities
              - fireplace_fireplace_screens_and_accessories_stores
              - floor_covering_stores
              - florists
              - florists_supplies_nursery_stock_and_flowers
              - freezer_and_locker_meat_provisioners
              - fuel_dealers_non_automotive
              - funeral_services_crematories
              - furniture_home_furnishings_and_equipment_stores_except_appliances
              - furniture_repair_refinishing
              - furriers_and_fur_shops
              - general_services
              - gift_card_novelty_and_souvenir_shops
              - glass_paint_and_wallpaper_stores
              - glassware_crystal_stores
              - golf_courses_public
              - government_services
              - grocery_stores_supermarkets
              - hardware_equipment_and_supplies
              - hardware_stores
              - health_and_beauty_spas
              - hearing_aids_sales_and_supplies
              - heating_plumbing_a_c
              - hobby_toy_and_game_shops
              - home_supply_warehouse_stores
              - hospitals
              - hotels_motels_and_resorts
              - household_appliance_stores
              - industrial_supplies
              - information_retrieval_services
              - insurance_default
              - insurance_underwriting_premiums
              - intra_company_purchases
              - jewelry_stores_watches_clocks_and_silverware_stores
              - landscaping_services
              - laundries
              - laundry_cleaning_services
              - legal_services_attorneys
              - luggage_and_leather_goods_stores
              - lumber_building_materials_stores
              - manual_cash_disburse
              - marinas_service_and_supplies
              - masonry_stonework_and_plaster
              - massage_parlors
              - medical_and_dental_labs
              - medical_dental_ophthalmic_and_hospital_equipment_and_supplies
              - medical_services
              - membership_organizations
              - mens_and_boys_clothing_and_accessories_stores
              - mens_womens_clothing_stores
              - metal_service_centers
              - miscellaneous
              - miscellaneous_apparel_and_accessory_shops
              - miscellaneous_auto_dealers
              - miscellaneous_business_services
              - miscellaneous_food_stores
              - miscellaneous_general_merchandise
              - miscellaneous_general_services
              - miscellaneous_home_furnishing_specialty_stores
              - miscellaneous_publishing_and_printing
              - miscellaneous_recreation_services
              - miscellaneous_repair_shops
              - miscellaneous_specialty_retail
              - mobile_home_dealers
              - motion_picture_theaters
              - motor_freight_carriers_and_trucking
              - motor_homes_dealers
              - motor_vehicle_supplies_and_new_parts
              - motorcycle_shops_and_dealers
              - motorcycle_shops_dealers
              - music_stores_musical_instruments_pianos_and_sheet_music
              - news_dealers_and_newsstands
              - non_fi_money_orders
              - non_fi_stored_value_card_purchase_load
              - nondurable_goods
              - nurseries_lawn_and_garden_supply_stores
              - nursing_personal_care
              - office_and_commercial_furniture
              - opticians_eyeglasses
              - optometrists_ophthalmologist
              - orthopedic_goods_prosthetic_devices
              - osteopaths
              - package_stores_beer_wine_and_liquor
              - paints_varnishes_and_supplies
              - parking_lots_garages
              - passenger_railways
              - pawn_shops
              - pet_shops_pet_food_and_supplies
              - petroleum_and_petroleum_products
              - photo_developing
              - photographic_photocopy_microfilm_equipment_and_supplies
              - photographic_studios
              - picture_video_production
              - piece_goods_notions_and_other_dry_goods
              - plumbing_heating_equipment_and_supplies
              - political_organizations
              - postal_services_government_only
              - precious_stones_and_metals_watches_and_jewelry
              - professional_services
              - public_warehousing_and_storage
              - quick_copy_repro_and_blueprint
              - railroads
              - real_estate_agents_and_managers_rentals
              - record_stores
              - recreational_vehicle_rentals
              - religious_goods_stores
              - religious_organizations
              - roofing_siding_sheet_metal
              - secretarial_support_services
              - security_brokers_dealers
              - service_stations
              - sewing_needlework_fabric_and_piece_goods_stores
              - shoe_repair_hat_cleaning
              - shoe_stores
              - small_appliance_repair
              - snowmobile_dealers
              - special_trade_services
              - specialty_cleaning
              - sporting_goods_stores
              - sporting_recreation_camps
              - sports_and_riding_apparel_stores
              - sports_clubs_fields
              - stamp_and_coin_stores
              - stationary_office_supplies_printing_and_writing_paper
              - stationery_stores_office_and_school_supply_stores
              - swimming_pools_sales
              - t_ui_travel_germany
              - tailors_alterations
              - tax_payments_government_agencies
              - tax_preparation_services
              - taxicabs_limousines
              - telecommunication_equipment_and_telephone_sales
              - telecommunication_services
              - telegraph_services
              - tent_and_awning_shops
              - testing_laboratories
              - theatrical_ticket_agencies
              - timeshares
              - tire_retreading_and_repair
              - tolls_bridge_fees
              - tourist_attractions_and_exhibits
              - towing_services
              - trailer_parks_campgrounds
              - transportation_services
              - travel_agencies_tour_operators
              - truck_stop_iteration
              - truck_utility_trailer_rentals
              - typesetting_plate_making_and_related_services
              - typewriter_stores
              - u_s_federal_government_agencies_or_departments
              - uniforms_commercial_clothing
              - used_merchandise_and_secondhand_stores
              - utilities
              - variety_stores
              - veterinary_services
              - video_amusement_game_supplies
              - video_game_arcades
              - video_tape_rental_stores
              - vocational_trade_schools
              - watch_jewelry_repair
              - welding_repair
              - wholesale_clubs
              - wig_and_toupee_stores
              - wires_money_orders
              - womens_accessory_and_specialty_shops
              - womens_ready_to_wear_stores
              - wrecking_and_salvage_yards
            type: string
          type: array
        spending_limits:
          description: Limit the spending with rules based on time intervals and categories.
          items:
            $ref: "#/components/schemas/issuing_cardholder_spending_limit"
          type: array
        spending_limits_currency:
          description: Currency for the amounts within spending_limits.
          type: string
      title: IssuingCardholderAuthorizationControls
      type: object
      x-expandableFields:
        - spending_limits
    issuing_cardholder_spending_limit:
      properties:
        amount:
          description: Maximum amount allowed to spend per time interval.
          type: integer
        categories:
          description: Array of strings containing
            [categories](https://stripe.com/docs/api#issuing_authorization_object-merchant_data-category)
            on which to apply the spending limit. Leave this blank to limit all
            charges.
          items:
            enum:
              - ac_refrigeration_repair
              - accounting_bookkeeping_services
              - advertising_services
              - agricultural_cooperative
              - airlines_air_carriers
              - airports_flying_fields
              - ambulance_services
              - amusement_parks_carnivals
              - antique_reproductions
              - antique_shops
              - aquariums
              - architectural_surveying_services
              - art_dealers_and_galleries
              - artists_supply_and_craft_shops
              - auto_and_home_supply_stores
              - auto_body_repair_shops
              - auto_paint_shops
              - auto_service_shops
              - automated_cash_disburse
              - automated_fuel_dispensers
              - automobile_associations
              - automotive_parts_and_accessories_stores
              - automotive_tire_stores
              - bail_and_bond_payments
              - bakeries
              - bands_orchestras
              - barber_and_beauty_shops
              - betting_casino_gambling
              - bicycle_shops
              - billiard_pool_establishments
              - boat_dealers
              - boat_rentals_and_leases
              - book_stores
              - books_periodicals_and_newspapers
              - bowling_alleys
              - bus_lines
              - business_secretarial_schools
              - buying_shopping_services
              - cable_satellite_and_other_pay_television_and_radio
              - camera_and_photographic_supply_stores
              - candy_nut_and_confectionery_stores
              - car_and_truck_dealers_new_used
              - car_and_truck_dealers_used_only
              - car_rental_agencies
              - car_washes
              - carpentry_services
              - carpet_upholstery_cleaning
              - caterers
              - charitable_and_social_service_organizations_fundraising
              - chemicals_and_allied_products
              - child_care_services
              - childrens_and_infants_wear_stores
              - chiropodists_podiatrists
              - chiropractors
              - cigar_stores_and_stands
              - civic_social_fraternal_associations
              - cleaning_and_maintenance
              - clothing_rental
              - colleges_universities
              - commercial_equipment
              - commercial_footwear
              - commercial_photography_art_and_graphics
              - commuter_transport_and_ferries
              - computer_network_services
              - computer_programming
              - computer_repair
              - computer_software_stores
              - computers_peripherals_and_software
              - concrete_work_services
              - construction_materials
              - consulting_public_relations
              - correspondence_schools
              - cosmetic_stores
              - counseling_services
              - country_clubs
              - courier_services
              - court_costs
              - credit_reporting_agencies
              - cruise_lines
              - dairy_products_stores
              - dance_hall_studios_schools
              - dating_escort_services
              - dentists_orthodontists
              - department_stores
              - detective_agencies
              - digital_goods_applications
              - direct_marketing_catalog_merchant
              - direct_marketing_combination_catalog_and_retail_merchant
              - direct_marketing_inbound_telemarketing
              - direct_marketing_insurance_services
              - direct_marketing_other
              - direct_marketing_outbound_telemarketing
              - direct_marketing_subscription
              - direct_marketing_travel
              - discount_stores
              - doctors
              - door_to_door_sales
              - drapery_window_covering_and_upholstery_stores
              - drinking_places
              - drug_stores_and_pharmacies
              - drugs_drug_proprietaries_and_druggist_sundries
              - dry_cleaners
              - durable_goods
              - duty_free_stores
              - eating_places_restaurants
              - educational_services
              - electric_razor_stores
              - electrical_parts_and_equipment
              - electrical_services
              - electronics_repair_shops
              - electronics_stores
              - elementary_secondary_schools
              - employment_temp_agencies
              - equipment_rental
              - exterminating_services
              - family_clothing_stores
              - fast_food_restaurants
              - financial_institutions
              - fines_government_administrative_entities
              - fireplace_fireplace_screens_and_accessories_stores
              - floor_covering_stores
              - florists
              - florists_supplies_nursery_stock_and_flowers
              - freezer_and_locker_meat_provisioners
              - fuel_dealers_non_automotive
              - funeral_services_crematories
              - furniture_home_furnishings_and_equipment_stores_except_appliances
              - furniture_repair_refinishing
              - furriers_and_fur_shops
              - general_services
              - gift_card_novelty_and_souvenir_shops
              - glass_paint_and_wallpaper_stores
              - glassware_crystal_stores
              - golf_courses_public
              - government_services
              - grocery_stores_supermarkets
              - hardware_equipment_and_supplies
              - hardware_stores
              - health_and_beauty_spas
              - hearing_aids_sales_and_supplies
              - heating_plumbing_a_c
              - hobby_toy_and_game_shops
              - home_supply_warehouse_stores
              - hospitals
              - hotels_motels_and_resorts
              - household_appliance_stores
              - industrial_supplies
              - information_retrieval_services
              - insurance_default
              - insurance_underwriting_premiums
              - intra_company_purchases
              - jewelry_stores_watches_clocks_and_silverware_stores
              - landscaping_services
              - laundries
              - laundry_cleaning_services
              - legal_services_attorneys
              - luggage_and_leather_goods_stores
              - lumber_building_materials_stores
              - manual_cash_disburse
              - marinas_service_and_supplies
              - masonry_stonework_and_plaster
              - massage_parlors
              - medical_and_dental_labs
              - medical_dental_ophthalmic_and_hospital_equipment_and_supplies
              - medical_services
              - membership_organizations
              - mens_and_boys_clothing_and_accessories_stores
              - mens_womens_clothing_stores
              - metal_service_centers
              - miscellaneous
              - miscellaneous_apparel_and_accessory_shops
              - miscellaneous_auto_dealers
              - miscellaneous_business_services
              - miscellaneous_food_stores
              - miscellaneous_general_merchandise
              - miscellaneous_general_services
              - miscellaneous_home_furnishing_specialty_stores
              - miscellaneous_publishing_and_printing
              - miscellaneous_recreation_services
              - miscellaneous_repair_shops
              - miscellaneous_specialty_retail
              - mobile_home_dealers
              - motion_picture_theaters
              - motor_freight_carriers_and_trucking
              - motor_homes_dealers
              - motor_vehicle_supplies_and_new_parts
              - motorcycle_shops_and_dealers
              - motorcycle_shops_dealers
              - music_stores_musical_instruments_pianos_and_sheet_music
              - news_dealers_and_newsstands
              - non_fi_money_orders
              - non_fi_stored_value_card_purchase_load
              - nondurable_goods
              - nurseries_lawn_and_garden_supply_stores
              - nursing_personal_care
              - office_and_commercial_furniture
              - opticians_eyeglasses
              - optometrists_ophthalmologist
              - orthopedic_goods_prosthetic_devices
              - osteopaths
              - package_stores_beer_wine_and_liquor
              - paints_varnishes_and_supplies
              - parking_lots_garages
              - passenger_railways
              - pawn_shops
              - pet_shops_pet_food_and_supplies
              - petroleum_and_petroleum_products
              - photo_developing
              - photographic_photocopy_microfilm_equipment_and_supplies
              - photographic_studios
              - picture_video_production
              - piece_goods_notions_and_other_dry_goods
              - plumbing_heating_equipment_and_supplies
              - political_organizations
              - postal_services_government_only
              - precious_stones_and_metals_watches_and_jewelry
              - professional_services
              - public_warehousing_and_storage
              - quick_copy_repro_and_blueprint
              - railroads
              - real_estate_agents_and_managers_rentals
              - record_stores
              - recreational_vehicle_rentals
              - religious_goods_stores
              - religious_organizations
              - roofing_siding_sheet_metal
              - secretarial_support_services
              - security_brokers_dealers
              - service_stations
              - sewing_needlework_fabric_and_piece_goods_stores
              - shoe_repair_hat_cleaning
              - shoe_stores
              - small_appliance_repair
              - snowmobile_dealers
              - special_trade_services
              - specialty_cleaning
              - sporting_goods_stores
              - sporting_recreation_camps
              - sports_and_riding_apparel_stores
              - sports_clubs_fields
              - stamp_and_coin_stores
              - stationary_office_supplies_printing_and_writing_paper
              - stationery_stores_office_and_school_supply_stores
              - swimming_pools_sales
              - t_ui_travel_germany
              - tailors_alterations
              - tax_payments_government_agencies
              - tax_preparation_services
              - taxicabs_limousines
              - telecommunication_equipment_and_telephone_sales
              - telecommunication_services
              - telegraph_services
              - tent_and_awning_shops
              - testing_laboratories
              - theatrical_ticket_agencies
              - timeshares
              - tire_retreading_and_repair
              - tolls_bridge_fees
              - tourist_attractions_and_exhibits
              - towing_services
              - trailer_parks_campgrounds
              - transportation_services
              - travel_agencies_tour_operators
              - truck_stop_iteration
              - truck_utility_trailer_rentals
              - typesetting_plate_making_and_related_services
              - typewriter_stores
              - u_s_federal_government_agencies_or_departments
              - uniforms_commercial_clothing
              - used_merchandise_and_secondhand_stores
              - utilities
              - variety_stores
              - veterinary_services
              - video_amusement_game_supplies
              - video_game_arcades
              - video_tape_rental_stores
              - vocational_trade_schools
              - watch_jewelry_repair
              - welding_repair
              - wholesale_clubs
              - wig_and_toupee_stores
              - wires_money_orders
              - womens_accessory_and_specialty_shops
              - womens_ready_to_wear_stores
              - wrecking_and_salvage_yards
            type: string
          type: array
        interval:
          description: The time interval with which to apply this spending limit towards.
            Allowed values are `per_authorization`, `daily`, `weekly`,
            `monthly`, `yearly`, or `all_time`.
          enum:
            - all_time
            - daily
            - monthly
            - per_authorization
            - weekly
            - yearly
          type: string
      required:
        - amount
        - interval
      title: IssuingCardholderSpendingLimit
      type: object
      x-expandableFields: []
    issuing_dispute_evidence:
      properties:
        fraudulent:
          $ref: "#/components/schemas/issuing_dispute_fraudulent_evidence"
        other:
          $ref: "#/components/schemas/issuing_dispute_other_evidence"
      title: IssuingDisputeEvidence
      type: object
      x-expandableFields:
        - fraudulent
        - other
    issuing_dispute_fraudulent_evidence:
      properties:
        dispute_explanation:
          description: Brief freeform text explaining why you are disputing this
            transaction.
          type: string
        uncategorized_file:
          description: (ID of a [file upload](https://stripe.com/docs/guides/file-upload))
            Additional file evidence supporting your dispute.
          type: string
          x-expansionResources:
            oneOf:
              - $ref: "#/components/schemas/file"
      title: IssuingDisputeFraudulentEvidence
      type: object
      x-expandableFields:
        - uncategorized_file
    issuing_dispute_other_evidence:
      properties:
        dispute_explanation:
          description: Brief freeform text explaining why you are disputing this
            transaction.
          type: string
        uncategorized_file:
          description: (ID of a [file upload](https://stripe.com/docs/guides/file-upload))
            Additional file evidence supporting your dispute.
          type: string
          x-expansionResources:
            oneOf:
              - $ref: "#/components/schemas/file"
      required:
        - dispute_explanation
      title: IssuingDisputeOtherEvidence
      type: object
      x-expandableFields:
        - uncategorized_file
    legal_entity_company:
      properties:
        address:
          $ref: "#/components/schemas/address"
        address_kana:
          $ref: "#/components/schemas/legal_entity_japan_address"
        address_kanji:
          $ref: "#/components/schemas/legal_entity_japan_address"
        directors_provided:
          description: Whether the company's directors have been provided. This Boolean
            will be `true` if you've manually indicated that all directors are
            provided via [the `directors_provided`
            parameter](https://stripe.com/docs/api/accounts/update#update_account-company-directors_provided).
          type: boolean
        name:
          description: The company's legal name.
          type: string
        name_kana:
          description: The Kana variation of the company's legal name (Japan only).
          type: string
        name_kanji:
          description: The Kanji variation of the company's legal name (Japan only).
          type: string
        owners_provided:
          description: Whether the company's owners have been provided. This Boolean will
            be `true` if you've manually indicated that all owners are provided
            via [the `owners_provided`
            parameter](https://stripe.com/docs/api/accounts/update#update_account-company-owners_provided),
            or if Stripe determined that all owners were provided. Stripe
            determines ownership requirements using both the number of owners
            provided and their total percent ownership (calculated by adding the
            `percent_ownership` of each owner together).
          type: boolean
        phone:
          description: The company's phone number (used for verification).
          type: string
        tax_id_provided:
          description: Whether the company's business ID number was provided.
          type: boolean
        tax_id_registrar:
          description: The jurisdiction in which the `tax_id` is registered (Germany-based
            companies only).
          type: string
        vat_id_provided:
          description: Whether the company's business VAT number was provided.
          type: boolean
        verification:
          $ref: "#/components/schemas/legal_entity_company_verification"
      required:
        - directors_provided
        - owners_provided
      title: LegalEntityCompany
      type: object
      x-expandableFields:
        - address
        - address_kana
        - address_kanji
        - verification
    legal_entity_company_verification:
      properties:
        document:
          $ref: "#/components/schemas/legal_entity_company_verification_document"
      required:
        - document
      title: LegalEntityCompanyVerification
      type: object
      x-expandableFields:
        - document
    legal_entity_company_verification_document:
      properties:
        back:
          description: The back of a document returned by a [file upload](#create_file)
            with a `purpose` value of `additional_verification`.
          type: string
          x-expansionResources:
            oneOf:
              - $ref: "#/components/schemas/file"
        details:
          description: A user-displayable string describing the verification state of this
            document.
          type: string
        details_code:
          description: One of `document_corrupt`, `document_expired`,
            `document_failed_copy`, `document_failed_greyscale`,
            `document_failed_other`, `document_failed_test_mode`,
            `document_fraudulent`, `document_incomplete`, `document_invalid`,
            `document_manipulated`, `document_not_readable`,
            `document_not_uploaded`, `document_type_not_supported`, or
            `document_too_large`. A machine-readable code specifying the
            verification state for this document.
          type: string
        front:
          description: The front of a document returned by a [file upload](#create_file)
            with a `purpose` value of `additional_verification`.
          type: string
          x-expansionResources:
            oneOf:
              - $ref: "#/components/schemas/file"
      title: LegalEntityCompanyVerificationDocument
      type: object
      x-expandableFields:
        - back
        - front
    legal_entity_dob:
      properties:
        day:
          description: The day of birth, between 1 and 31.
          type: integer
        month:
          description: The month of birth, between 1 and 12.
          type: integer
        year:
          description: The four-digit year of birth.
          type: integer
      title: LegalEntityDOB
      type: object
      x-expandableFields: []
    legal_entity_japan_address:
      properties:
        city:
          description: City/Ward.
          type: string
        country:
          description: Two-letter country code ([ISO 3166-1
            alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)).
          type: string
        line1:
          description: Block/Building number.
          type: string
        line2:
          description: Building details.
          type: string
        postal_code:
          description: Zip/Postal Code.
          type: string
        state:
          description: Prefecture.
          type: string
        town:
          description: Town/cho-me.
          type: string
      title: LegalEntityJapanAddress
      type: object
      x-expandableFields: []
    legal_entity_person_verification:
      properties:
        additional_document:
          $ref: "#/components/schemas/legal_entity_person_verification_document"
        details:
          description: A user-displayable string describing the verification state for the
            person. For example, this may say "Provided identity information
            could not be verified".
          type: string
        details_code:
          description: One of `document_address_mismatch`, `document_dob_mismatch`,
            `document_duplicate_type`, `document_id_number_mismatch`,
            `document_name_mismatch`, `failed_keyed_identity`, or
            `failed_other`. A machine-readable code specifying the verification
            state for the person.
          type: string
        document:
          $ref: "#/components/schemas/legal_entity_person_verification_document"
        status:
          description: The state of verification for the person. Possible values are
            `unverified`, `pending`, or `verified`.
          type: string
      required:
        - status
      title: LegalEntityPersonVerification
      type: object
      x-expandableFields:
        - additional_document
        - document
    legal_entity_person_verification_document:
      properties:
        back:
          description: The back of an ID returned by a [file upload](#create_file) with a
            `purpose` value of `identity_document`.
          type: string
          x-expansionResources:
            oneOf:
              - $ref: "#/components/schemas/file"
        details:
          description: A user-displayable string describing the verification state of this
            document. For example, if a document is uploaded and the picture is
            too fuzzy, this may say "Identity document is too unclear to read".
          type: string
        details_code:
          description: One of `document_corrupt`, `document_country_not_supported`,
            `document_expired`, `document_failed_copy`, `document_failed_other`,
            `document_failed_test_mode`, `document_fraudulent`,
            `document_failed_greyscale`, `document_incomplete`,
            `document_invalid`, `document_manipulated`, `document_missing_back`,
            `document_missing_front`, `document_not_readable`,
            `document_not_uploaded`, `document_photo_mismatch`,
            `document_too_large`, or `document_type_not_supported`. A
            machine-readable code specifying the verification state for this
            document.
          type: string
        front:
          description: The front of an ID returned by a [file upload](#create_file) with a
            `purpose` value of `identity_document`.
          type: string
          x-expansionResources:
            oneOf:
              - $ref: "#/components/schemas/file"
      title: LegalEntityPersonVerificationDocument
      type: object
      x-expandableFields:
        - back
        - front
    light_account_logout:
      properties: {}
      title: LightAccountLogout
      type: object
      x-expandableFields: []
      x-resourceId: light_account_logout
    line_item:
      properties:
        amount:
          description: The amount, in %s.
          type: integer
        currency:
          description: Three-letter [ISO currency
            code](https://www.iso.org/iso-4217-currency-codes.html), in
            lowercase. Must be a [supported
            currency](https://stripe.com/docs/currencies).
          type: string
        description:
          description: An arbitrary string attached to the object. Often useful for
            displaying to users.
          type: string
        discountable:
          description: If true, discounts will apply to this line item. Always false for
            prorations.
          type: boolean
        id:
          description: Unique identifier for the object.
          type: string
        invoice_item:
          type: string
        livemode:
          description: Whether this is a test line item.
          type: boolean
        metadata:
          description: Set of key-value pairs that you can attach to an object. This can be
            useful for storing additional information about the object in a
            structured format. Note that for line items with `type=subscription`
            this will reflect the metadata of the subscription that caused the
            line item to be created.
          type: object
        object:
          description: String representing the object's type. Objects of the same type
            share the same value.
          enum:
            - line_item
          type: string
        period:
          $ref: "#/components/schemas/invoice_line_item_period"
        plan:
          $ref: "#/components/schemas/plan"
        proration:
          description: Whether this is a proration.
          type: boolean
        quantity:
          description: The quantity of the subscription, if the line item is a subscription
            or a proration.
          type: integer
        subscription:
          description: The subscription that the invoice item pertains to, if any.
          type: string
        subscription_item:
          description: The subscription item that generated this invoice item. Left empty
            if the line item is not an explicit result of a subscription.
          type: string
        tax_amounts:
          description: The amount of tax calculated per tax rate for this line item
          items:
            $ref: "#/components/schemas/invoice_tax_amount"
          type: array
        tax_rates:
          description: The tax rates which apply to the line item.
          items:
            $ref: "#/components/schemas/tax_rate"
          type: array
        type:
          description: A string identifying the type of the source of this line item,
            either an `invoiceitem` or a `subscription`.
          enum:
            - invoiceitem
            - subscription
          type: string
        unified_proration:
          description: For prorations this indicates whether Stripe automatically grouped
            multiple related debit and credit line items into a single combined
            line item.
          type: boolean
      required:
        - amount
        - currency
        - discountable
        - id
        - livemode
        - metadata
        - object
        - period
        - proration
        - type
      title: InvoiceLineItem
      type: object
      x-expandableFields:
        - period
        - plan
        - tax_amounts
        - tax_rates
      x-resourceId: line_item
    login_link:
      properties:
        created:
          description: Time at which the object was created. Measured in seconds since the
            Unix epoch.
          type: integer
        object:
          description: String representing the object's type. Objects of the same type
            share the same value.
          enum:
            - login_link
          type: string
        url:
          description: The URL for the login link.
          type: string
      required:
        - created
        - object
        - url
      title: LoginLink
      type: object
      x-expandableFields: []
      x-resourceId: login_link
    notification_event_data:
      properties:
        object:
          description: Object containing the API resource relevant to the event. For
            example, an `invoice.created` event will have a full [invoice
            object](#invoice_object) as the value of the object key.
          type: object
        previous_attributes:
          description: Object containing the names of the attributes that have changed, and
            their previous values (sent along only with *.updated events).
          type: object
      required:
        - object
      title: NotificationEventData
      type: object
      x-expandableFields: []
    notification_event_request:
      properties:
        id:
          description: ID of the API request that caused the event. If null, the event was
            automatic (e.g., Stripe's automatic subscription handling). Request
            logs are available in the
            [dashboard](https://dashboard.stripe.com/logs), but currently not in
            the API.
          type: string
        idempotency_key:
          description: "The idempotency key transmitted during the request, if any. *Note:
            This property is populated only for events on or after May 23,
            2017*."
          type: string
      title: NotificationEventRequest
      type: object
      x-expandableFields: []
    order:
      properties:
        amount:
          description: A positive integer in the smallest currency unit (that is, 100 cents
            for $1.00, or 1 for ¥1, Japanese Yen being a zero-decimal currency)
            representing the total amount for the order.
          type: integer
        amount_returned:
          type: integer
        application:
          description: ID of the Connect Application that created the order.
          type: string
        application_fee:
          type: integer
        charge:
          description: The ID of the payment used to pay for the order. Present if the
            order status is `paid`, `fulfilled`, or `refunded`.
          type: string
          x-expansionResources:
            oneOf:
              - $ref: "#/components/schemas/charge"
        created:
          description: Time at which the object was created. Measured in seconds since the
            Unix epoch.
          type: integer
        currency:
          description: Three-letter [ISO currency
            code](https://www.iso.org/iso-4217-currency-codes.html), in
            lowercase. Must be a [supported
            currency](https://stripe.com/docs/currencies).
          type: string
        customer:
          description: The customer used for the order.
          type: string
          x-expansionResources:
            oneOf:
              - $ref: "#/components/schemas/customer"
              - $ref: "#/components/schemas/deleted_customer"
        email:
          description: The email address of the customer placing the order.
          type: string
        external_coupon_code:
          type: string
        id:
          description: Unique identifier for the object.
          type: string
        items:
          description: List of items constituting the order. An order can have up to 25
            items.
          items:
            $ref: "#/components/schemas/order_item"
          type: array
        livemode:
          description: Has the value `true` if the object exists in live mode or the value
            `false` if the object exists in test mode.
          type: boolean
        metadata:
          description: Set of key-value pairs that you can attach to an object. This can be
            useful for storing additional information about the object in a
            structured format.
          type: object
        object:
          description: String representing the object's type. Objects of the same type
            share the same value.
          enum:
            - order
          type: string
        returns:
          properties:
            data:
              items:
                $ref: "#/components/schemas/order_return"
              type: array
            has_more:
              description: True if this list has another page of items after this one that
                can be fetched.
              type: boolean
            object:
              description: String representing the object's type. Objects of the same type
                share the same value. Always has the value `list`.
              enum:
                - list
              type: string
            url:
              description: The URL where this list can be accessed.
              type: string
          required:
            - data
            - has_more
            - object
            - url
          title: OrderReturnList
          type: object
          x-expandableFields:
            - data
        selected_shipping_method:
          description: The shipping method that is currently selected for this order, if
            any. If present, it is equal to one of the `id`s of shipping methods
            in the `shipping_methods` array. At order creation time, if there
            are multiple shipping methods, Stripe will automatically selected
            the first method.
          type: string
        shipping:
          $ref: "#/components/schemas/shipping"
        shipping_methods:
          description: A list of supported shipping methods for this order. The desired
            shipping method can be specified either by updating the order, or
            when paying it.
          items:
            $ref: "#/components/schemas/shipping_method"
          type: array
        status:
          description: Current order status. One of `created`, `paid`, `canceled`,
            `fulfilled`, or `returned`. More details in the [Orders
            Guide](https://stripe.com/docs/orders/guide#understanding-order-statuses).
          type: string
        status_transitions:
          $ref: "#/components/schemas/status_transitions"
        updated:
          type: integer
        upstream_id:
          description: The user's order ID if it is different from the Stripe order ID.
          type: string
      required:
        - amount
        - created
        - currency
        - id
        - items
        - livemode
        - metadata
        - object
        - status
      title: Order
      type: object
      x-expandableFields:
        - charge
        - customer
        - items
        - returns
        - shipping
        - shipping_methods
        - status_transitions
      x-resourceId: order
    order_item:
      properties:
        amount:
          description: A positive integer in the smallest currency unit (that is, 100 cents
            for $1.00, or 1 for ¥1, Japanese Yen being a zero-decimal currency)
            representing the total amount for the line item.
          type: integer
        currency:
          description: Three-letter [ISO currency
            code](https://www.iso.org/iso-4217-currency-codes.html), in
            lowercase. Must be a [supported
            currency](https://stripe.com/docs/currencies).
          type: string
        description:
          description: Description of the line item, meant to be displayable to the user
            (e.g., `"Express shipping"`).
          type: string
        object:
          description: String representing the object's type. Objects of the same type
            share the same value.
          enum:
            - order_item
          type: string
        parent:
          description: The ID of the associated object for this line item. Expandable if
            not null (e.g., expandable to a SKU).
          type: string
          x-expansionResources:
            oneOf:
              - $ref: "#/components/schemas/sku"
        quantity:
          description: A positive integer representing the number of instances of `parent`
            that are included in this order item. Applicable/present only if
            `type` is `sku`.
          type: integer
        type:
          description: The type of line item. One of `sku`, `tax`, `shipping`, or
            `discount`.
          type: string
      required:
        - amount
        - currency
        - description
        - object
        - type
      title: OrderItem
      type: object
      x-expandableFields:
        - parent
    order_return:
      properties:
        amount:
          description: A positive integer in the smallest currency unit (that is, 100 cents
            for $1.00, or 1 for ¥1, Japanese Yen being a zero-decimal currency)
            representing the total amount for the returned line item.
          type: integer
        created:
          description: Time at which the object was created. Measured in seconds since the
            Unix epoch.
          type: integer
        currency:
          description: Three-letter [ISO currency
            code](https://www.iso.org/iso-4217-currency-codes.html), in
            lowercase. Must be a [supported
            currency](https://stripe.com/docs/currencies).
          type: string
        id:
          description: Unique identifier for the object.
          type: string
        items:
          description: The items included in this order return.
          items:
            $ref: "#/components/schemas/order_item"
          type: array
        livemode:
          description: Has the value `true` if the object exists in live mode or the value
            `false` if the object exists in test mode.
          type: boolean
        object:
          description: String representing the object's type. Objects of the same type
            share the same value.
          enum:
            - order_return
          type: string
        order:
          description: The order that this return includes items from.
          type: string
          x-expansionResources:
            oneOf:
              - $ref: "#/components/schemas/order"
        refund:
          description: The ID of the refund issued for this return.
          type: string
          x-expansionResources:
            oneOf:
              - $ref: "#/components/schemas/refund"
      required:
        - amount
        - created
        - currency
        - id
        - items
        - livemode
        - object
      title: OrderReturn
      type: object
      x-expandableFields:
        - items
        - order
        - refund
      x-resourceId: order_return
    package_dimensions:
      properties:
        height:
          description: Height, in inches.
          type: number
        length:
          description: Length, in inches.
          type: number
        weight:
          description: Weight, in ounces.
          type: number
        width:
          description: Width, in inches.
          type: number
      required:
        - height
        - length
        - weight
        - width
      title: PackageDimensions
      type: object
      x-expandableFields: []
    payment_intent:
      properties:
        amount:
          description: Amount intended to be collected by this PaymentIntent.
          type: integer
        amount_capturable:
          description: Amount that can be captured from this PaymentIntent.
          type: integer
        amount_received:
          description: Amount that was collected by this PaymentIntent.
          type: integer
        application:
          description: ID of the Connect application that created the PaymentIntent.
          type: string
          x-expansionResources:
            oneOf:
              - $ref: "#/components/schemas/application"
        application_fee_amount:
          description: The amount of the application fee (if any) for the resulting
            payment. See the PaymentIntents [use case for connected
            accounts](https://stripe.com/docs/payments/payment-intents/use-cases#connected-accounts)
            for details.
          type: integer
        canceled_at:
          description: Populated when `status` is `canceled`, this is the time at which the
            PaymentIntent was canceled. Measured in seconds since the Unix
            epoch.
          type: integer
        cancellation_reason:
          description: Reason for cancellation of this PaymentIntent, either user-provided
            (`duplicate`, `fraudulent`, `requested_by_customer`, or `abandoned`)
            or generated by Stripe internally (`failed_invoice`, `void_invoice`,
            or `automatic`).
          enum:
            - abandoned
            - automatic
            - duplicate
            - failed_invoice
            - fraudulent
            - requested_by_customer
            - void_invoice
          type: string
        capture_method:
          description: >-
            One of `automatic` (default) or `manual`.


            When the capture method is `automatic`, Stripe automatically captures funds when the customer authorizes the payment.


            Change `capture_method` to manual if you wish to [separate authorization and capture](https://stripe.com/docs/payments/payment-intents/creating-payment-intents#separate-authorization-and-capture) for payment methods that support this.
          enum:
            - automatic
            - manual
          type: string
        charges:
          description: Charges that were created by this PaymentIntent, if any.
          properties:
            data:
              description: This list only contains the latest charge, even if there were
                previously multiple unsuccessful charges. To view all previous
                charges for a PaymentIntent, you can filter the charges list
                using the `payment_intent`
                [parameter](https://stripe.com/docs/api/charges/list#list_charges-payment_intent).
              items:
                $ref: "#/components/schemas/charge"
              type: array
            has_more:
              description: True if this list has another page of items after this one that
                can be fetched.
              type: boolean
            object:
              description: String representing the object's type. Objects of the same type
                share the same value. Always has the value `list`.
              enum:
                - list
              type: string
            url:
              description: The URL where this list can be accessed.
              type: string
          required:
            - data
            - has_more
            - object
            - url
          title: PaymentFlowsPaymentIntentResourceChargeList
          type: object
          x-expandableFields:
            - data
        client_secret:
          description: >-
            The client secret of this PaymentIntent. Used for client-side
            retrieval using a publishable key. 


            The client secret can be used to complete a payment from your frontend. It should not be stored, logged, embedded in URLs, or exposed to anyone other than the customer. Make sure that you have TLS enabled on any page that includes the client secret.


            Please refer to our [quickstart guide](https://stripe.com/docs/payments/payment-intents/web) to learn about how `client_secret` should be handled.
          type: string
        confirmation_method:
          description: >-
            One of `automatic` (default) or `manual`.


            When the confirmation method is `automatic`, a PaymentIntent can be confirmed using a publishable key. After `next_action`s are handled, no additional confirmation is required to complete the payment.


            When the confirmation method is `manual`, all payment attempts must be made using a secret key. The PaymentIntent returns to the `requires_confirmation` state after handling `next_action`s, and requires your server to initiate each payment attempt with an explicit confirmation.


            Learn more about the different [confirmation flows](https://stripe.com/docs/payments/payment-intents/use-cases#one-time-payments).
          enum:
            - automatic
            - manual
          type: string
        created:
          description: Time at which the object was created. Measured in seconds since the
            Unix epoch.
          type: integer
        currency:
          description: Three-letter [ISO currency
            code](https://www.iso.org/iso-4217-currency-codes.html), in
            lowercase. Must be a [supported
            currency](https://stripe.com/docs/currencies).
          type: string
        customer:
          description: >-
            ID of the Customer this PaymentIntent belongs to, if one exists.


            If present, payment methods used with this PaymentIntent can only be attached to this Customer, and payment methods attached to other Customers cannot be used with this PaymentIntent.
          type: string
          x-expansionResources:
            oneOf:
              - $ref: "#/components/schemas/customer"
              - $ref: "#/components/schemas/deleted_customer"
        description:
          description: An arbitrary string attached to the object. Often useful for
            displaying to users.
          type: string
        id:
          description: Unique identifier for the object.
          type: string
        invoice:
          description: ID of the invoice that created this PaymentIntent, if it exists.
          type: string
          x-expansionResources:
            oneOf:
              - $ref: "#/components/schemas/invoice"
        last_payment_error:
          $ref: "#/components/schemas/api_errors"
        livemode:
          description: Has the value `true` if the object exists in live mode or the value
            `false` if the object exists in test mode.
          type: boolean
        metadata:
          description: Set of key-value pairs that you can attach to an object. This can be
            useful for storing additional information about the object in a
            structured format. For more information, see the
            [documentation](https://stripe.com/docs/payments/payment-intents/creating-payment-intents#storing-information-in-metadata).
          type: object
        next_action:
          $ref: "#/components/schemas/payment_intent_next_action"
        object:
          description: String representing the object's type. Objects of the same type
            share the same value.
          enum:
            - payment_intent
          type: string
        on_behalf_of:
          description: The account (if any) for which the funds of the PaymentIntent are
            intended. See the PaymentIntents [use case for connected
            accounts](https://stripe.com/docs/payments/payment-intents/use-cases#connected-accounts)
            for details.
          type: string
          x-expansionResources:
            oneOf:
              - $ref: "#/components/schemas/account"
        payment_method:
          description: ID of the payment method used in this PaymentIntent.
          type: string
          x-expansionResources:
            oneOf:
              - $ref: "#/components/schemas/payment_method"
        payment_method_options:
          $ref: "#/components/schemas/payment_intent_payment_method_options"
        payment_method_types:
          description: The list of payment method types (e.g. card) that this PaymentIntent
            is allowed to use.
          items:
            type: string
          type: array
        receipt_email:
          description: Email address that the receipt for the resulting payment will be
            sent to.
          type: string
        review:
          description: ID of the review associated with this PaymentIntent, if any.
          type: string
          x-expansionResources:
            oneOf:
              - $ref: "#/components/schemas/review"
        setup_future_usage:
          description: >-
            Indicates that you intend to make future payments with this
            PaymentIntent's payment method.


            If present, the payment method used with this PaymentIntent can be [attached](https://stripe.com/docs/api/payment_methods/attach) to a Customer, even after the transaction completes.


            Use `on_session` if you intend to only reuse the payment method when your customer is present in your checkout flow. Use `off_session` if your customer may or may not be in your checkout flow. See [Saving card details after a payment](https://stripe.com/docs/payments/cards/saving-cards-after-payment) to learn more.


            Stripe uses `setup_future_usage` to dynamically optimize your payment flow and comply with regional legislation and network rules. For example, if your customer is impacted by [SCA](https://stripe.com/docs/strong-customer-authentication), using `off_session` will ensure that they are authenticated while processing this PaymentIntent. You will then be able to collect [off-session payments](https://stripe.com/docs/payments/cards/charging-saved-cards#off-session-payments-with-saved-cards) for this customer.
          type: string
        shipping:
          $ref: "#/components/schemas/shipping"
        statement_descriptor:
          description: For non-card charges, you can use this value as the complete
            description that appears on your customers’ statements. Must contain
            at least one letter, maximum 22 characters.
          type: string
        statement_descriptor_suffix:
          description: Provides information about a card payment that customers see on
            their statements. Concatenated with the prefix (shortened
            descriptor) or statement descriptor that’s set on the account to
            form the complete statement descriptor. Maximum 22 characters for
            the concatenated descriptor.
          type: string
        status:
          description: Status of this PaymentIntent, one of `requires_payment_method`,
            `requires_confirmation`, `requires_action`, `processing`,
            `requires_capture`, `canceled`, or `succeeded`. Read more about each
            PaymentIntent
            [status](https://stripe.com/docs/payments/intents#intent-statuses).
          enum:
            - canceled
            - processing
            - requires_action
            - requires_capture
            - requires_confirmation
            - requires_payment_method
            - succeeded
          type: string
        transfer_data:
          $ref: "#/components/schemas/transfer_data"
        transfer_group:
          description: A string that identifies the resulting payment as part of a group.
            See the PaymentIntents [use case for connected
            accounts](https://stripe.com/docs/payments/payment-intents/use-cases#connected-accounts)
            for details.
          type: string
      required:
        - amount
        - capture_method
        - confirmation_method
        - created
        - currency
        - id
        - livemode
        - object
        - payment_method_types
        - status
      title: PaymentIntent
      type: object
      x-expandableFields:
        - application
        - charges
        - customer
        - invoice
        - last_payment_error
        - next_action
        - on_behalf_of
        - payment_method
        - payment_method_options
        - review
        - shipping
        - transfer_data
      x-resourceId: payment_intent
    payment_intent_next_action:
      properties:
        redirect_to_url:
          $ref: "#/components/schemas/payment_intent_next_action_redirect_to_url"
        type:
          description: Type of the next action to perform, one of `redirect_to_url` or
            `use_stripe_sdk`.
          type: string
        use_stripe_sdk:
          description: When confirming a PaymentIntent with Stripe.js, Stripe.js depends on
            the contents of this dictionary to invoke authentication flows. The
            shape of the contents is subject to change and is only intended to
            be used by Stripe.js.
          type: object
      required:
        - type
      title: PaymentIntentNextAction
      type: object
      x-expandableFields:
        - redirect_to_url
    payment_intent_next_action_redirect_to_url:
      properties:
        return_url:
          description: If the customer does not exit their browser while authenticating,
            they will be redirected to this specified URL after completion.
          type: string
        url:
          description: The URL you must redirect your customer to in order to authenticate
            the payment.
          type: string
      title: PaymentIntentNextActionRedirectToUrl
      type: object
      x-expandableFields: []
    payment_intent_payment_method_options:
      properties:
        card:
          $ref: "#/components/schemas/payment_intent_payment_method_options_card"
      title: PaymentIntentPaymentMethodOptions
      type: object
      x-expandableFields:
        - card
    payment_intent_payment_method_options_card:
      properties:
        request_three_d_secure:
          description: "We strongly recommend that you rely on our SCA Engine to
            automatically prompt your customers for authentication based on risk
            level and [other
            requirements](https://stripe.com/docs/strong-customer-authenticatio\
            n). However, if you wish to request 3D Secure based on logic from
            your own fraud engine, provide this option. Permitted values
            include: `automatic` or `any`. If not provided, defaults to
            `automatic`. Read our guide on [manually requesting 3D
            Secure](https://stripe.com/docs/payments/3d-secure#manual-three-ds)
            for more information on how this configuration interacts with Radar
            and our SCA Engine."
          enum:
            - any
            - automatic
            - challenge_only
          type: string
      title: payment_intent_payment_method_options_card
      type: object
      x-expandableFields: []
    payment_method:
      properties:
        billing_details:
          $ref: "#/components/schemas/billing_details"
        card:
          $ref: "#/components/schemas/payment_method_card"
        card_present:
          $ref: "#/components/schemas/payment_method_card_present"
        created:
          description: Time at which the object was created. Measured in seconds since the
            Unix epoch.
          type: integer
        customer:
          description: The ID of the Customer to which this PaymentMethod is saved. This
            will not be set when the PaymentMethod has not been saved to a
            Customer.
          type: string
          x-expansionResources:
            oneOf:
              - $ref: "#/components/schemas/customer"
        id:
          description: Unique identifier for the object.
          type: string
        livemode:
          description: Has the value `true` if the object exists in live mode or the value
            `false` if the object exists in test mode.
          type: boolean
        metadata:
          description: Set of key-value pairs that you can attach to an object. This can be
            useful for storing additional information about the object in a
            structured format.
          type: object
        object:
          description: String representing the object's type. Objects of the same type
            share the same value.
          enum:
            - payment_method
          type: string
        type:
          description: The type of the PaymentMethod. An additional hash is included on the
            PaymentMethod with a name matching this value. It contains
            additional information specific to the PaymentMethod type.
          enum:
            - card
            - card_present
          type: string
      required:
        - billing_details
        - created
        - id
        - livemode
        - metadata
        - object
        - type
      title: PaymentMethod
      type: object
      x-expandableFields:
        - billing_details
        - card
        - card_present
        - customer
      x-resourceId: payment_method
    payment_method_card:
      properties:
        brand:
          description: Card brand. Can be `amex`, `diners`, `discover`, `jcb`,
            `mastercard`, `unionpay`, `visa`, or `unknown`.
          type: string
        checks:
          $ref: "#/components/schemas/payment_method_card_checks"
        country:
          description: Two-letter ISO code representing the country of the card. You could
            use this attribute to get a sense of the international breakdown of
            cards you've collected.
          type: string
        exp_month:
          description: Two-digit number representing the card's expiration month.
          type: integer
        exp_year:
          description: Four-digit number representing the card's expiration year.
          type: integer
        fingerprint:
          description: Uniquely identifies this particular card number. You can use this
            attribute to check whether two customers who've signed up with you
            are using the same card number, for example.
          type: string
        funding:
          description: Card funding type. Can be `credit`, `debit`, `prepaid`, or `unknown`.
          type: string
        generated_from:
          $ref: "#/components/schemas/payment_method_card_generated_card"
        last4:
          description: The last four digits of the card.
          type: string
        three_d_secure_usage:
          $ref: "#/components/schemas/three_d_secure_usage"
        wallet:
          $ref: "#/components/schemas/payment_method_card_wallet"
      required:
        - brand
        - exp_month
        - exp_year
        - funding
        - last4
      title: payment_method_card
      type: object
      x-expandableFields:
        - checks
        - generated_from
        - three_d_secure_usage
        - wallet
    payment_method_card_checks:
      properties:
        address_line1_check:
          description: If a address line1 was provided, results of the check, one of
            'pass', 'failed', 'unavailable' or 'unchecked'.
          type: string
        address_postal_code_check:
          description: If a address postal code was provided, results of the check, one of
            'pass', 'failed', 'unavailable' or 'unchecked'.
          type: string
        cvc_check:
          description: If a CVC was provided, results of the check, one of 'pass',
            'failed', 'unavailable' or 'unchecked'.
          type: string
      title: payment_method_card_checks
      type: object
      x-expandableFields: []
    payment_method_card_generated_card:
      properties:
        charge:
          description: The charge that created this object.
          type: string
        payment_method_details:
          $ref: "#/components/schemas/payment_method_details"
      title: payment_method_card_generated_card
      type: object
      x-expandableFields:
        - payment_method_details
    payment_method_card_present:
      properties: {}
      title: payment_method_card_present
      type: object
      x-expandableFields: []
    payment_method_card_wallet:
      properties:
        amex_express_checkout:
          $ref: "#/components/schemas/payment_method_card_wallet_amex_express_check\
            out"
        apple_pay:
          $ref: "#/components/schemas/payment_method_card_wallet_apple_pay"
        dynamic_last4:
          description: (For tokenized numbers only.) The last four digits of the device
            account number.
          type: string
        google_pay:
          $ref: "#/components/schemas/payment_method_card_wallet_google_pay"
        masterpass:
          $ref: "#/components/schemas/payment_method_card_wallet_masterpass"
        samsung_pay:
          $ref: "#/components/schemas/payment_method_card_wallet_samsung_pay"
        type:
          description: The type of the card wallet, one of `amex_express_checkout`,
            `apple_pay`, `google_pay`, `masterpass`, `samsung_pay`, or
            `visa_checkout`. An additional hash is included on the Wallet
            subhash with a name matching this value. It contains additional
            information specific to the card wallet type.
          enum:
            - amex_express_checkout
            - apple_pay
            - google_pay
            - masterpass
            - samsung_pay
            - visa_checkout
          type: string
        visa_checkout:
          $ref: "#/components/schemas/payment_method_card_wallet_visa_checkout"
      required:
        - type
      title: payment_method_card_wallet
      type: object
      x-expandableFields:
        - amex_express_checkout
        - apple_pay
        - google_pay
        - masterpass
        - samsung_pay
        - visa_checkout
    payment_method_card_wallet_amex_express_checkout:
      properties: {}
      title: payment_method_card_wallet_amex_express_checkout
      type: object
      x-expandableFields: []
    payment_method_card_wallet_apple_pay:
      properties: {}
      title: payment_method_card_wallet_apple_pay
      type: object
      x-expandableFields: []
    payment_method_card_wallet_google_pay:
      properties: {}
      title: payment_method_card_wallet_google_pay
      type: object
      x-expandableFields: []
    payment_method_card_wallet_masterpass:
      properties:
        billing_address:
          $ref: "#/components/schemas/address"
        email:
          description: Owner's verified email. Values are verified or provided by the
            wallet directly (if supported) at the time of authorization or
            settlement. They cannot be set or mutated.
          type: string
        name:
          description: Owner's verified full name. Values are verified or provided by the
            wallet directly (if supported) at the time of authorization or
            settlement. They cannot be set or mutated.
          type: string
        shipping_address:
          $ref: "#/components/schemas/address"
      title: payment_method_card_wallet_masterpass
      type: object
      x-expandableFields:
        - billing_address
        - shipping_address
    payment_method_card_wallet_samsung_pay:
      properties: {}
      title: payment_method_card_wallet_samsung_pay
      type: object
      x-expandableFields: []
    payment_method_card_wallet_visa_checkout:
      properties:
        billing_address:
          $ref: "#/components/schemas/address"
        email:
          description: Owner's verified email. Values are verified or provided by the
            wallet directly (if supported) at the time of authorization or
            settlement. They cannot be set or mutated.
          type: string
        name:
          description: Owner's verified full name. Values are verified or provided by the
            wallet directly (if supported) at the time of authorization or
            settlement. They cannot be set or mutated.
          type: string
        shipping_address:
          $ref: "#/components/schemas/address"
      title: payment_method_card_wallet_visa_checkout
      type: object
      x-expandableFields:
        - billing_address
        - shipping_address
    payment_method_details:
      properties:
        ach_credit_transfer:
          $ref: "#/components/schemas/payment_method_details_ach_credit_transfer"
        ach_debit:
          $ref: "#/components/schemas/payment_method_details_ach_debit"
        alipay:
          $ref: "#/components/schemas/payment_method_details_alipay"
        bancontact:
          $ref: "#/components/schemas/payment_method_details_bancontact"
        card:
          $ref: "#/components/schemas/payment_method_details_card"
        card_present:
          $ref: "#/components/schemas/payment_method_details_card_present"
        eps:
          $ref: "#/components/schemas/payment_method_details_eps"
        giropay:
          $ref: "#/components/schemas/payment_method_details_giropay"
        ideal:
          $ref: "#/components/schemas/payment_method_details_ideal"
        klarna:
          $ref: "#/components/schemas/payment_method_details_klarna"
        multibanco:
          $ref: "#/components/schemas/payment_method_details_multibanco"
        p24:
          $ref: "#/components/schemas/payment_method_details_p24"
        sepa_debit:
          $ref: "#/components/schemas/payment_method_details_sepa_debit"
        sofort:
          $ref: "#/components/schemas/payment_method_details_sofort"
        stripe_account:
          $ref: "#/components/schemas/payment_method_details_stripe_account"
        type:
          description: >-
            The type of transaction-specific details of the payment method used
            in the payment, one of `ach_credit_transfer`, `ach_debit`, `alipay`,
            `bancontact`, `card`, `card_present`, `eps`, `giropay`, `ideal`,
            `klarna`, `multibanco`, `p24`, `sepa_debit`, `sofort`,
            `stripe_account`, or `wechat`.

            An additional hash is included on `payment_method_details` with a name matching this value.

            It contains information specific to the payment method.
          type: string
        wechat:
          $ref: "#/components/schemas/payment_method_details_wechat"
      required:
        - type
      title: payment_method_details
      type: object
      x-expandableFields:
        - ach_credit_transfer
        - ach_debit
        - alipay
        - bancontact
        - card
        - card_present
        - eps
        - giropay
        - ideal
        - klarna
        - multibanco
        - p24
        - sepa_debit
        - sofort
        - stripe_account
        - wechat
    payment_method_details_ach_credit_transfer:
      properties:
        account_number:
          description: Account number to transfer funds to.
          type: string
        bank_name:
          description: Name of the bank associated with the routing number.
          type: string
        routing_number:
          description: Routing transit number for the bank account to transfer funds to.
          type: string
        swift_code:
          description: SWIFT code of the bank associated with the routing number.
          type: string
      title: payment_method_details_ach_credit_transfer
      type: object
      x-expandableFields: []
    payment_method_details_ach_debit:
      properties:
        account_holder_type:
          description: Type of entity that holds the account. This can be either
            `individual` or `company`.
          enum:
            - company
            - individual
          type: string
        bank_name:
          description: Name of the bank associated with the bank account.
          type: string
        country:
          description: Two-letter ISO code representing the country the bank account is
            located in.
          type: string
        fingerprint:
          description: Uniquely identifies this particular bank account. You can use this
            attribute to check whether two bank accounts are the same.
          type: string
        last4:
          description: Last four digits of the bank account number.
          type: string
        routing_number:
          description: Routing transit number of the bank account.
          type: string
      title: payment_method_details_ach_debit
      type: object
      x-expandableFields: []
    payment_method_details_alipay:
      properties: {}
      title: payment_method_details_alipay
      type: object
      x-expandableFields: []
    payment_method_details_bancontact:
      properties:
        bank_code:
          description: Bank code of bank associated with the bank account.
          type: string
        bank_name:
          description: Name of the bank associated with the bank account.
          type: string
        bic:
          description: Bank Identifier Code of the bank associated with the bank account.
          type: string
        iban_last4:
          description: Last four characters of the IBAN.
          type: string
        preferred_language:
          description: >-
            Preferred language of the Bancontact authorization page that the
            customer is redirected to.

            Can be one of `en`, `de`, `fr`, or `nl`
          enum:
            - de
            - en
            - fr
            - nl
          type: string
        verified_name:
          description: >-
            Owner's verified full name. Values are verified or provided by
            Bancontact directly

            (if supported) at the time of authorization or settlement. They cannot be set or mutated.
          type: string
      title: payment_method_details_bancontact
      type: object
      x-expandableFields: []
    payment_method_details_card:
      properties:
        brand:
          description: Card brand. Can be `amex`, `diners`, `discover`, `jcb`,
            `mastercard`, `unionpay`, `visa`, or `unknown`.
          type: string
        checks:
          $ref: "#/components/schemas/payment_method_details_card_checks"
        country:
          description: Two-letter ISO code representing the country of the card. You could
            use this attribute to get a sense of the international breakdown of
            cards you've collected.
          type: string
        exp_month:
          description: Two-digit number representing the card's expiration month.
          type: integer
        exp_year:
          description: Four-digit number representing the card's expiration year.
          type: integer
        fingerprint:
          description: Uniquely identifies this particular card number. You can use this
            attribute to check whether two customers who've signed up with you
            are using the same card number, for example.
          type: string
        funding:
          description: Card funding type. Can be `credit`, `debit`, `prepaid`, or `unknown`.
          type: string
        last4:
          description: The last four digits of the card.
          type: string
        three_d_secure:
          $ref: "#/components/schemas/three_d_secure_details"
        wallet:
          $ref: "#/components/schemas/payment_method_details_card_wallet"
      title: payment_method_details_card
      type: object
      x-expandableFields:
        - checks
        - three_d_secure
        - wallet
    payment_method_details_card_checks:
      properties:
        address_line1_check:
          description: If a address line1 was provided, results of the check, one of
            'pass', 'failed', 'unavailable' or 'unchecked'.
          type: string
        address_postal_code_check:
          description: If a address postal code was provided, results of the check, one of
            'pass', 'failed', 'unavailable' or 'unchecked'.
          type: string
        cvc_check:
          description: If a CVC was provided, results of the check, one of 'pass',
            'failed', 'unavailable' or 'unchecked'.
          type: string
      title: payment_method_details_card_checks
      type: object
      x-expandableFields: []
    payment_method_details_card_present:
      properties:
        brand:
          description: Card brand. Can be `amex`, `diners`, `discover`, `jcb`,
            `mastercard`, `unionpay`, `visa`, or `unknown`.
          type: string
        country:
          description: Two-letter ISO code representing the country of the card. You could
            use this attribute to get a sense of the international breakdown of
            cards you've collected.
          type: string
        emv_auth_data:
          description: Authorization response cryptogram.
          type: string
        exp_month:
          description: Two-digit number representing the card's expiration month.
          type: integer
        exp_year:
          description: Four-digit number representing the card's expiration year.
          type: integer
        fingerprint:
          description: Uniquely identifies this particular card number. You can use this
            attribute to check whether two customers who've signed up with you
            are using the same card number, for example.
          type: string
        funding:
          description: Card funding type. Can be `credit`, `debit`, `prepaid`, or `unknown`.
          type: string
        generated_card:
          description: ID of a card PaymentMethod generated from the card_present
            PaymentMethod that may be attached to a Customer for future
            transactions. Only present if it was possible to generate a card
            PaymentMethod.
          type: string
        last4:
          description: The last four digits of the card.
          type: string
        read_method:
          description: How were card details read in this transaction. Can be contact_emv,
            contactless_emv, magnetic_stripe_fallback, magnetic_stripe_track2,
            or contactless_magstripe_mode
          type: string
        receipt:
          $ref: "#/components/schemas/payment_method_details_card_present_receipt"
      title: payment_method_details_card_present
      type: object
      x-expandableFields:
        - receipt
    payment_method_details_card_present_receipt:
      properties:
        application_cryptogram:
          description: EMV tag 9F26, cryptogram generated by the integrated circuit chip.
          type: string
        application_preferred_name:
          description: Mnenomic of the Application Identifier.
          type: string
        authorization_code:
          description: Identifier for this transaction.
          type: string
        authorization_response_code:
          description: EMV tag 8A. A code returned by the card issuer.
          type: string
        cardholder_verification_method:
          description: How the cardholder verified ownership of the card.
          type: string
        dedicated_file_name:
          description: EMV tag 84. Similar to the application identifier stored on the
            integrated circuit chip.
          type: string
        terminal_verification_results:
          description: The outcome of a series of EMV functions performed by the card
            reader.
          type: string
        transaction_status_information:
          description: An indication of various EMV functions performed during the
            transaction.
          type: string
      title: payment_method_details_card_present_receipt
      type: object
      x-expandableFields: []
    payment_method_details_card_wallet:
      properties:
        amex_express_checkout:
          $ref: "#/components/schemas/payment_method_details_card_wallet_amex_expre\
            ss_checkout"
        apple_pay:
          $ref: "#/components/schemas/payment_method_details_card_wallet_apple_pay"
        dynamic_last4:
          description: (For tokenized numbers only.) The last four digits of the device
            account number.
          type: string
        google_pay:
          $ref: "#/components/schemas/payment_method_details_card_wallet_google_pay"
        masterpass:
          $ref: "#/components/schemas/payment_method_details_card_wallet_masterpass"
        samsung_pay:
          $ref: "#/components/schemas/payment_method_details_card_wallet_samsung_pay"
        type:
          description: The type of the card wallet, one of `amex_express_checkout`,
            `apple_pay`, `google_pay`, `masterpass`, `samsung_pay`, or
            `visa_checkout`. An additional hash is included on the Wallet
            subhash with a name matching this value. It contains additional
            information specific to the card wallet type.
          enum:
            - amex_express_checkout
            - apple_pay
            - google_pay
            - masterpass
            - samsung_pay
            - visa_checkout
          type: string
        visa_checkout:
          $ref: "#/components/schemas/payment_method_details_card_wallet_visa_check\
            out"
      required:
        - type
      title: payment_method_details_card_wallet
      type: object
      x-expandableFields:
        - amex_express_checkout
        - apple_pay
        - google_pay
        - masterpass
        - samsung_pay
        - visa_checkout
    payment_method_details_card_wallet_amex_express_checkout:
      properties: {}
      title: payment_method_details_card_wallet_amex_express_checkout
      type: object
      x-expandableFields: []
    payment_method_details_card_wallet_apple_pay:
      properties: {}
      title: payment_method_details_card_wallet_apple_pay
      type: object
      x-expandableFields: []
    payment_method_details_card_wallet_google_pay:
      properties: {}
      title: payment_method_details_card_wallet_google_pay
      type: object
      x-expandableFields: []
    payment_method_details_card_wallet_masterpass:
      properties:
        billing_address:
          $ref: "#/components/schemas/address"
        email:
          description: Owner's verified email. Values are verified or provided by the
            wallet directly (if supported) at the time of authorization or
            settlement. They cannot be set or mutated.
          type: string
        name:
          description: Owner's verified full name. Values are verified or provided by the
            wallet directly (if supported) at the time of authorization or
            settlement. They cannot be set or mutated.
          type: string
        shipping_address:
          $ref: "#/components/schemas/address"
      title: payment_method_details_card_wallet_masterpass
      type: object
      x-expandableFields:
        - billing_address
        - shipping_address
    payment_method_details_card_wallet_samsung_pay:
      properties: {}
      title: payment_method_details_card_wallet_samsung_pay
      type: object
      x-expandableFields: []
    payment_method_details_card_wallet_visa_checkout:
      properties:
        billing_address:
          $ref: "#/components/schemas/address"
        email:
          description: Owner's verified email. Values are verified or provided by the
            wallet directly (if supported) at the time of authorization or
            settlement. They cannot be set or mutated.
          type: string
        name:
          description: Owner's verified full name. Values are verified or provided by the
            wallet directly (if supported) at the time of authorization or
            settlement. They cannot be set or mutated.
          type: string
        shipping_address:
          $ref: "#/components/schemas/address"
      title: payment_method_details_card_wallet_visa_checkout
      type: object
      x-expandableFields:
        - billing_address
        - shipping_address
    payment_method_details_eps:
      properties:
        verified_name:
          description: >-
            Owner's verified full name. Values are verified or provided by EPS
            directly

            (if supported) at the time of authorization or settlement. They cannot be set or mutated.
          type: string
      title: payment_method_details_eps
      type: object
      x-expandableFields: []
    payment_method_details_giropay:
      properties:
        bank_code:
          description: Bank code of bank associated with the bank account.
          type: string
        bank_name:
          description: Name of the bank associated with the bank account.
          type: string
        bic:
          description: Bank Identifier Code of the bank associated with the bank account.
          type: string
        verified_name:
          description: >-
            Owner's verified full name. Values are verified or provided by
            Giropay directly

            (if supported) at the time of authorization or settlement. They cannot be set or mutated.
          type: string
      title: payment_method_details_giropay
      type: object
      x-expandableFields: []
    payment_method_details_ideal:
      properties:
        bank:
          description: The customer's bank. Can be one of `abn_amro`, `asn_bank`, `bunq`,
            `handelsbanken`, `ing`, `knab`, `moneyou`, `rabobank`, `regiobank`,
            `sns_bank`, `triodos_bank`, or `van_lanschot`.
          enum:
            - abn_amro
            - asn_bank
            - bunq
            - handelsbanken
            - ing
            - knab
            - moneyou
            - rabobank
            - regiobank
            - sns_bank
            - triodos_bank
            - van_lanschot
          type: string
        bic:
          description: The Bank Identifier Code of the customer's bank.
          enum:
            - ABNANL2A
            - ASNBNL21
            - BUNQNL2A
            - FVLBNL22
            - HANDNL2A
            - INGBNL2A
            - KNABNL2H
            - MOYONL21
            - RABONL2U
            - RBRBNL21
            - SNSBNL2A
            - TRIONL2U
          type: string
        iban_last4:
          description: Last four characters of the IBAN.
          type: string
        verified_name:
          description: >-
            Owner's verified full name. Values are verified or provided by iDEAL
            directly

            (if supported) at the time of authorization or settlement. They cannot be set or mutated.
          type: string
      title: payment_method_details_ideal
      type: object
      x-expandableFields: []
    payment_method_details_klarna:
      properties: {}
      title: payment_method_details_klarna
      type: object
      x-expandableFields: []
    payment_method_details_multibanco:
      properties:
        entity:
          description: Entity number associated with this Multibanco payment.
          type: string
        reference:
          description: Reference number associated with this Multibanco payment.
          type: string
      title: payment_method_details_multibanco
      type: object
      x-expandableFields: []
    payment_method_details_p24:
      properties:
        reference:
          description: Unique reference for this Przelewy24 payment.
          type: string
        verified_name:
          description: >-
            Owner's verified full name. Values are verified or provided by
            Przelewy24 directly

            (if supported) at the time of authorization or settlement. They cannot be set or mutated.
          type: string
      title: payment_method_details_p24
      type: object
      x-expandableFields: []
    payment_method_details_sepa_debit:
      properties:
        bank_code:
          description: Bank code of bank associated with the bank account.
          type: string
        branch_code:
          description: Branch code of bank associated with the bank account.
          type: string
        country:
          description: Two-letter ISO code representing the country the bank account is
            located in.
          type: string
        fingerprint:
          description: Uniquely identifies this particular bank account. You can use this
            attribute to check whether two bank accounts are the same.
          type: string
        last4:
          description: Last four characters of the IBAN.
          type: string
        mandate:
          description: ID of the mandate used to make this payment.
          type: string
      title: payment_method_details_sepa_debit
      type: object
      x-expandableFields: []
    payment_method_details_sofort:
      properties:
        bank_code:
          description: Bank code of bank associated with the bank account.
          type: string
        bank_name:
          description: Name of the bank associated with the bank account.
          type: string
        bic:
          description: Bank Identifier Code of the bank associated with the bank account.
          type: string
        country:
          description: Two-letter ISO code representing the country the bank account is
            located in.
          type: string
        iban_last4:
          description: Last four characters of the IBAN.
          type: string
        verified_name:
          description: >-
            Owner's verified full name. Values are verified or provided by
            SOFORT directly

            (if supported) at the time of authorization or settlement. They cannot be set or mutated.
          type: string
      title: payment_method_details_sofort
      type: object
      x-expandableFields: []
    payment_method_details_stripe_account:
      properties: {}
      title: payment_method_details_stripe_account
      type: object
      x-expandableFields: []
    payment_method_details_wechat:
      properties: {}
      title: payment_method_details_wechat
      type: object
      x-expandableFields: []
    payment_source:
      properties:
        id:
          description: Unique identifier for the object.
          type: string
        metadata:
          description: Set of key-value pairs that you can attach to an object. This can be
            useful for storing additional information about the object in a
            structured format.
          type: object
        object:
          description: String representing the object's type. Objects of the same type
            share the same value.
          enum:
            - account
          type: string
      required:
        - id
        - object
      title: Polymorphic
      type: object
      x-polymorphicResources:
        oneOf:
          - $ref: "#/components/schemas/account"
          - $ref: "#/components/schemas/alipay_account"
          - $ref: "#/components/schemas/bank_account"
          - $ref: "#/components/schemas/bitcoin_receiver"
          - $ref: "#/components/schemas/card"
          - $ref: "#/components/schemas/source"
      x-resourceId: payment_source
    payout:
      properties:
        amount:
          description: Amount (in %s) to be transferred to your bank account or debit card.
          type: integer
        arrival_date:
          description: Date the payout is expected to arrive in the bank. This factors in
            delays like weekends or bank holidays.
          type: integer
        automatic:
          description: Returns `true` if the payout was created by an [automated payout
            schedule](https://stripe.com/docs/payouts#payout-schedule), and
            `false` if it was [requested
            manually](https://stripe.com/docs/payouts#manual-payouts).
          type: boolean
        balance_transaction:
          description: ID of the balance transaction that describes the impact of this
            payout on your account balance.
          type: string
          x-expansionResources:
            oneOf:
              - $ref: "#/components/schemas/balance_transaction"
        created:
          description: Time at which the object was created. Measured in seconds since the
            Unix epoch.
          type: integer
        currency:
          description: Three-letter [ISO currency
            code](https://www.iso.org/iso-4217-currency-codes.html), in
            lowercase. Must be a [supported
            currency](https://stripe.com/docs/currencies).
          type: string
        description:
          description: An arbitrary string attached to the object. Often useful for
            displaying to users.
          type: string
        destination:
          description: ID of the bank account or card the payout was sent to.
          type: string
          x-expansionResources:
            oneOf:
              - $ref: "#/components/schemas/bank_account"
              - $ref: "#/components/schemas/card"
              - $ref: "#/components/schemas/deleted_bank_account"
              - $ref: "#/components/schemas/deleted_card"
        failure_balance_transaction:
          description: If the payout failed or was canceled, this will be the ID of the
            balance transaction that reversed the initial balance transaction,
            and puts the funds from the failed payout back in your balance.
          type: string
          x-expansionResources:
            oneOf:
              - $ref: "#/components/schemas/balance_transaction"
        failure_code:
          description: Error code explaining reason for payout failure if available. See
            [Types of payout
            failures](https://stripe.com/docs/api#payout_failures) for a list of
            failure codes.
          type: string
        failure_message:
          description: Message to user further explaining reason for payout failure if
            available.
          type: string
        id:
          description: Unique identifier for the object.
          type: string
        livemode:
          description: Has the value `true` if the object exists in live mode or the value
            `false` if the object exists in test mode.
          type: boolean
        metadata:
          description: Set of key-value pairs that you can attach to an object. This can be
            useful for storing additional information about the object in a
            structured format.
          type: object
        method:
          description: The method used to send this payout, which can be `standard` or
            `instant`. `instant` is only supported for payouts to debit cards.
            (See [Instant payouts for
            marketplaces](/blog/instant-payouts-for-marketplaces) for more
            information.)
          type: string
        object:
          description: String representing the object's type. Objects of the same type
            share the same value.
          enum:
            - payout
          type: string
        source_type:
          description: The source balance this payout came from. One of `card` or
            `bank_account`.
          type: string
        statement_descriptor:
          description: Extra information about a payout to be displayed on the user's bank
            statement.
          type: string
        status:
          description: Current status of the payout (`paid`, `pending`, `in_transit`,
            `canceled` or `failed`). A payout will be `pending` until it is
            submitted to the bank, at which point it becomes `in_transit`. It
            will then change to `paid` if the transaction goes through. If it
            does not go through successfully, its status will change to `failed`
            or `canceled`.
          type: string
        type:
          description: Can be `bank_account` or `card`.
          enum:
            - bank_account
            - card
          type: string
      required:
        - amount
        - arrival_date
        - automatic
        - created
        - currency
        - id
        - livemode
        - metadata
        - method
        - object
        - source_type
        - status
        - type
      title: Payout
      type: object
      x-expandableFields:
        - balance_transaction
        - destination
        - failure_balance_transaction
      x-resourceId: payout
    period:
      properties:
        end:
          description: The end date of this usage period. All usage up to and including
            this point in time is included.
          type: integer
        start:
          description: The start date of this usage period. All usage after this point in
            time is included.
          type: integer
      title: Period
      type: object
      x-expandableFields: []
    person:
      properties:
        account:
          type: string
        address:
          $ref: "#/components/schemas/address"
        address_kana:
          $ref: "#/components/schemas/legal_entity_japan_address"
        address_kanji:
          $ref: "#/components/schemas/legal_entity_japan_address"
        created:
          description: Time at which the object was created. Measured in seconds since the
            Unix epoch.
          type: integer
        dob:
          $ref: "#/components/schemas/legal_entity_dob"
        email:
          type: string
        first_name:
          type: string
        first_name_kana:
          type: string
        first_name_kanji:
          type: string
        gender:
          type: string
        id:
          description: Unique identifier for the object.
          type: string
        id_number_provided:
          type: boolean
        last_name:
          type: string
        last_name_kana:
          type: string
        last_name_kanji:
          type: string
        maiden_name:
          type: string
        metadata:
          description: Set of key-value pairs that you can attach to an object. This can be
            useful for storing additional information about the object in a
            structured format.
          type: object
        object:
          description: String representing the object's type. Objects of the same type
            share the same value.
          enum:
            - person
          type: string
        phone:
          type: string
        relationship:
          $ref: "#/components/schemas/person_relationship"
        requirements:
          $ref: "#/components/schemas/person_requirements"
        ssn_last_4_provided:
          type: boolean
        verification:
          $ref: "#/components/schemas/legal_entity_person_verification"
      required:
        - account
        - created
        - id
        - object
      title: Person
      type: object
      x-expandableFields:
        - address
        - address_kana
        - address_kanji
        - dob
        - relationship
        - requirements
        - verification
      x-resourceId: person
    person_relationship:
      properties:
        account_opener:
          description: Whether the person opened the account. This person provides
            information about themselves, and general information about the
            account.
          type: boolean
        director:
          description: Whether the person is a director of the account's legal entity.
            Currently only required for accounts in the EU. Directors are
            typically members of the governing board of the company, or
            responsible for ensuring the company meets its regulatory
            obligations.
          type: boolean
        executive:
          description: Whether the person has significant responsibility to control,
            manage, or direct the organization.
          type: boolean
        owner:
          description: Whether the person is an owner of the account’s legal entity.
          type: boolean
        percent_ownership:
          description: The percent owned by the person of the account's legal entity.
          type: number
        title:
          description: The person's title (e.g., CEO, Support Engineer).
          type: string
      title: PersonRelationship
      type: object
      x-expandableFields: []
    person_requirements:
      properties:
        currently_due:
          description: Fields that need to be collected to keep the person's account
            enabled. If not collected by the account's `current_deadline`, these
            fields appear in `past_due` as well, and the account is disabled.
          items:
            type: string
          type: array
        eventually_due:
          description: Fields that need to be collected assuming all volume thresholds are
            reached. As fields are needed, they are moved to `currently_due` and
            the account's `current_deadline` is set.
          items:
            type: string
          type: array
        past_due:
          description: Fields that weren't collected by the account's `current_deadline`.
            These fields need to be collected to enable payouts for the person's
            account.
          items:
            type: string
          type: array
        pending_verification:
          description: Fields that may become required depending on the results of
            verification or review. An empty array unless an asynchronous
            verification is pending. If verification fails, the fields in this
            array become required and move to `currently_due` or `past_due`.
          items:
            type: string
          type: array
      required:
        - currently_due
        - eventually_due
        - past_due
        - pending_verification
      title: PersonRequirements
      type: object
      x-expandableFields: []
    plan:
      properties:
        active:
          description: Whether the plan is currently available for new subscriptions.
          type: boolean
        aggregate_usage:
          description: Specifies a usage aggregation strategy for plans of
            `usage_type=metered`. Allowed values are `sum` for summing up all
            usage during a period, `last_during_period` for picking the last
            usage record reported within a period, `last_ever` for picking the
            last usage record ever (across period bounds) or `max` which picks
            the usage record with the maximum reported usage during a period.
            Defaults to `sum`.
          enum:
            - last_during_period
            - last_ever
            - max
            - sum
          type: string
        amount:
          description: The amount in %s to be charged on the interval specified.
          type: integer
        amount_decimal:
          description: Same as `amount`, but contains a decimal value with at most 12
            decimal places.
          type: string
        billing_scheme:
          description: Describes how to compute the price per period. Either `per_unit` or
            `tiered`. `per_unit` indicates that the fixed amount (specified in
            `amount`) will be charged per unit in `quantity` (for plans with
            `usage_type=licensed`), or per unit of total usage (for plans with
            `usage_type=metered`). `tiered` indicates that the unit pricing will
            be computed using a tiering strategy as defined using the `tiers`
            and `tiers_mode` attributes.
          enum:
            - per_unit
            - tiered
          type: string
        created:
          description: Time at which the object was created. Measured in seconds since the
            Unix epoch.
          type: integer
        currency:
          description: Three-letter [ISO currency
            code](https://www.iso.org/iso-4217-currency-codes.html), in
            lowercase. Must be a [supported
            currency](https://stripe.com/docs/currencies).
          type: string
        id:
          description: Unique identifier for the object.
          type: string
        interval:
          description: One of `day`, `week`, `month` or `year`. The frequency with which a
            subscription should be billed.
          enum:
            - day
            - month
            - week
            - year
          type: string
        interval_count:
          description: The number of intervals (specified in the `interval` property)
            between subscription billings. For example, `interval=month` and
            `interval_count=3` bills every 3 months.
          type: integer
        livemode:
          description: Has the value `true` if the object exists in live mode or the value
            `false` if the object exists in test mode.
          type: boolean
        metadata:
          description: Set of key-value pairs that you can attach to an object. This can be
            useful for storing additional information about the object in a
            structured format.
          type: object
        nickname:
          description: A brief description of the plan, hidden from customers.
          type: string
        object:
          description: String representing the object's type. Objects of the same type
            share the same value.
          enum:
            - plan
          type: string
        product:
          description: The product whose pricing this plan determines.
          type: string
          x-expansionResources:
            oneOf:
              - $ref: "#/components/schemas/product"
              - $ref: "#/components/schemas/deleted_product"
        tiers:
          description: Each element represents a pricing tier. This parameter requires
            `billing_scheme` to be set to `tiered`. See also the documentation
            for `billing_scheme`.
          items:
            $ref: "#/components/schemas/plan_tier"
          type: array
        tiers_mode:
          description: Defines if the tiering price should be `graduated` or `volume`
            based. In `volume`-based tiering, the maximum quantity within a
            period determines the per unit price, in `graduated` tiering pricing
            can successively change as the quantity grows.
          enum:
            - graduated
            - volume
          type: string
        transform_usage:
          $ref: "#/components/schemas/transform_usage"
        trial_period_days:
          description: Default number of trial days when subscribing a customer to this
            plan using
            [`trial_from_plan=true`](https://stripe.com/docs/api#create_subscription-trial_from_plan).
          type: integer
        usage_type:
          description: Configures how the quantity per period should be determined, can be
            either `metered` or `licensed`. `licensed` will automatically bill
            the `quantity` set for a plan when adding it to a subscription,
            `metered` will aggregate the total usage based on usage records.
            Defaults to `licensed`.
          enum:
            - licensed
            - metered
          type: string
      required:
        - active
        - created
        - currency
        - id
        - interval
        - interval_count
        - livemode
        - metadata
        - object
        - usage_type
      title: Plan
      type: object
      x-expandableFields:
        - product
        - tiers
        - transform_usage
      x-resourceId: plan
    plan_tier:
      properties:
        flat_amount:
          description: Price for the entire tier.
          type: integer
        flat_amount_decimal:
          description: Same as `flat_amount`, but contains a decimal value with at most 12
            decimal places.
          type: string
        unit_amount:
          description: Per unit price for units relevant to the tier.
          type: integer
        unit_amount_decimal:
          description: Same as `unit_amount`, but contains a decimal value with at most 12
            decimal places.
          type: string
        up_to:
          description: Up to and including to this quantity will be contained in the tier.
          type: integer
      title: PlanTier
      type: object
      x-expandableFields: []
    platform_tax_fee:
      properties:
        account:
          description: The Connected account that incurred this charge.
          type: string
        id:
          description: Unique identifier for the object.
          type: string
        object:
          description: String representing the object's type. Objects of the same type
            share the same value.
          enum:
            - platform_tax_fee
          type: string
        source_transaction:
          description: The payment object that caused this tax to be inflicted.
          type: string
        type:
          description: The type of tax (VAT).
          type: string
      required:
        - account
        - id
        - object
        - source_transaction
        - type
      title: PlatformTax
      type: object
      x-expandableFields: []
    product:
      properties:
        active:
          description: Whether the product is currently available for purchase.
          type: boolean
        attributes:
          description: A list of up to 5 attributes that each SKU can provide values for
            (e.g., `["color", "size"]`). Only applicable to products of
            `type=good`.
          items:
            type: string
          type: array
        caption:
          description: A short one-line description of the product, meant to be displayable
            to the customer. Only applicable to products of `type=good`.
          type: string
        created:
          description: Time at which the object was created. Measured in seconds since the
            Unix epoch.
          type: integer
        deactivate_on:
          description: An array of connect application identifiers that cannot purchase
            this product. Only applicable to products of `type=good`.
          items:
            type: string
          type: array
        description:
          description: The product's description, meant to be displayable to the customer.
            Only applicable to products of `type=good`.
          type: string
        id:
          description: Unique identifier for the object.
          type: string
        images:
          description: A list of up to 8 URLs of images for this product, meant to be
            displayable to the customer. Only applicable to products of
            `type=good`.
          items:
            type: string
          type: array
        livemode:
          description: Has the value `true` if the object exists in live mode or the value
            `false` if the object exists in test mode.
          type: boolean
        metadata:
          description: Set of key-value pairs that you can attach to an object. This can be
            useful for storing additional information about the object in a
            structured format.
          type: object
        name:
          description: The product's name, meant to be displayable to the customer.
            Applicable to both `service` and `good` types.
          type: string
        object:
          description: String representing the object's type. Objects of the same type
            share the same value.
          enum:
            - product
          type: string
        package_dimensions:
          $ref: "#/components/schemas/package_dimensions"
        shippable:
          description: Whether this product is a shipped good. Only applicable to products
            of `type=good`.
          type: boolean
        statement_descriptor:
          description: Extra information about a product which will appear on your
            customer's credit card statement. In the case that multiple products
            are billed at once, the first statement descriptor will be used.
            Only available on products of type=`service`.
          type: string
        type:
          description: The type of the product. The product is either of type `good`, which
            is eligible for use with Orders and SKUs, or `service`, which is
            eligible for use with Subscriptions and Plans.
          enum:
            - good
            - service
          type: string
        unit_label:
          description: A label that represents units of this product, such as seat(s), in
            Stripe and on customers’ receipts and invoices. Only available on
            products of type=`service`.
          type: string
        updated:
          type: integer
        url:
          description: A URL of a publicly-accessible webpage for this product. Only
            applicable to products of `type=good`.
          type: string
      required:
        - created
        - id
        - images
        - livemode
        - metadata
        - name
        - object
        - type
        - updated
      title: Product
      type: object
      x-expandableFields:
        - package_dimensions
      x-resourceId: product
    radar.early_fraud_warning:
      properties:
        actionable:
          description: An EFW is actionable if it has not received a dispute and has not
            been fully refunded. You may wish to proactively refund a charge
            that receives an EFW, in order to avoid receiving a dispute later.
          type: boolean
        charge:
          description: ID of the charge this early fraud warning is for, optionally
            expanded.
          type: string
          x-expansionResources:
            oneOf:
              - $ref: "#/components/schemas/charge"
        created:
          description: Time at which the object was created. Measured in seconds since the
            Unix epoch.
          type: integer
        fraud_type:
          description: The type of fraud labelled by the issuer. One of
            `card_never_received`, `fraudulent_card_application`,
            `made_with_counterfeit_card`, `made_with_lost_card`,
            `made_with_stolen_card`, `misc`, `unauthorized_use_of_card`.
          type: string
        id:
          description: Unique identifier for the object.
          type: string
        livemode:
          description: Has the value `true` if the object exists in live mode or the value
            `false` if the object exists in test mode.
          type: boolean
        object:
          description: String representing the object's type. Objects of the same type
            share the same value.
          enum:
            - radar.early_fraud_warning
          type: string
      required:
        - actionable
        - charge
        - created
        - fraud_type
        - id
        - livemode
        - object
      title: RadarEarlyFraudWarning
      type: object
      x-expandableFields:
        - charge
      x-resourceId: radar.early_fraud_warning
    radar.value_list:
      properties:
        alias:
          description: The name of the value list for use in rules.
          type: string
        created:
          description: Time at which the object was created. Measured in seconds since the
            Unix epoch.
          type: integer
        created_by:
          description: The name or email address of the user who created this value list.
          type: string
        id:
          description: Unique identifier for the object.
          type: string
        item_type:
          description: The type of items in the value list. One of `card_fingerprint`,
            `card_bin`, `email`, `ip_address`, `country`, `string`, or
            `case_sensitive_string`.
          enum:
            - card_bin
            - card_fingerprint
            - case_sensitive_string
            - country
            - email
            - ip_address
            - string
          type: string
        list_items:
          description: List of items contained within this value list.
          properties:
            data:
              items:
                $ref: "#/components/schemas/radar.value_list_item"
              type: array
            has_more:
              description: True if this list has another page of items after this one that
                can be fetched.
              type: boolean
            object:
              description: String representing the object's type. Objects of the same type
                share the same value. Always has the value `list`.
              enum:
                - list
              type: string
            url:
              description: The URL where this list can be accessed.
              type: string
          required:
            - data
            - has_more
            - object
            - url
          title: RadarListListItemList
          type: object
          x-expandableFields:
            - data
        livemode:
          description: Has the value `true` if the object exists in live mode or the value
            `false` if the object exists in test mode.
          type: boolean
        metadata:
          description: Set of key-value pairs that you can attach to an object. This can be
            useful for storing additional information about the object in a
            structured format.
          type: object
        name:
          description: The name of the value list.
          type: string
        object:
          description: String representing the object's type. Objects of the same type
            share the same value.
          enum:
            - radar.value_list
          type: string
      required:
        - alias
        - created
        - created_by
        - id
        - item_type
        - list_items
        - livemode
        - metadata
        - name
        - object
      title: RadarListList
      type: object
      x-expandableFields:
        - list_items
      x-resourceId: radar.value_list
    radar.value_list_item:
      properties:
        created:
          description: Time at which the object was created. Measured in seconds since the
            Unix epoch.
          type: integer
        created_by:
          description: The name or email address of the user who added this item to the
            value list.
          type: string
        id:
          description: Unique identifier for the object.
          type: string
        livemode:
          description: Has the value `true` if the object exists in live mode or the value
            `false` if the object exists in test mode.
          type: boolean
        object:
          description: String representing the object's type. Objects of the same type
            share the same value.
          enum:
            - radar.value_list_item
          type: string
        value:
          description: The value of the item.
          type: string
        value_list:
          description: The identifier of the value list this item belongs to.
          type: string
      required:
        - created
        - created_by
        - id
        - livemode
        - object
        - value
        - value_list
      title: RadarListListItem
      type: object
      x-expandableFields: []
      x-resourceId: radar.value_list_item
    radar_review_resource_location:
      properties:
        city:
          description: The city where the payment originated.
          type: string
        country:
          description: Two-letter ISO code representing the country where the payment
            originated.
          type: string
        latitude:
          description: The geographic latitude where the payment originated.
          type: number
        longitude:
          description: The geographic longitude where the payment originated.
          type: number
        region:
          description: The state/county/province/region where the payment originated.
          type: string
      title: RadarReviewResourceLocation
      type: object
      x-expandableFields: []
    radar_review_resource_session:
      properties:
        browser:
          description: The browser used in this browser session (e.g., `Chrome`).
          type: string
        device:
          description: Information about the device used for the browser session (e.g.,
            `Samsung SM-G930T`).
          type: string
        platform:
          description: The platform for the browser session (e.g., `Macintosh`).
          type: string
        version:
          description: The version for the browser session (e.g., `61.0.3163.100`).
          type: string
      title: RadarReviewResourceSession
      type: object
      x-expandableFields: []
    recipient:
      properties:
        active_account:
          $ref: "#/components/schemas/bank_account"
        cards:
          properties:
            data:
              items:
                $ref: "#/components/schemas/card"
              type: array
            has_more:
              description: True if this list has another page of items after this one that
                can be fetched.
              type: boolean
            object:
              description: String representing the object's type. Objects of the same type
                share the same value. Always has the value `list`.
              enum:
                - list
              type: string
            url:
              description: The URL where this list can be accessed.
              type: string
          required:
            - data
            - has_more
            - object
            - url
          title: CardList
          type: object
          x-expandableFields:
            - data
        created:
          description: Time at which the object was created. Measured in seconds since the
            Unix epoch.
          type: integer
        default_card:
          description: The default card to use for creating transfers to this recipient.
          type: string
          x-expansionResources:
            oneOf:
              - $ref: "#/components/schemas/card"
        description:
          description: An arbitrary string attached to the object. Often useful for
            displaying to users.
          type: string
        email:
          type: string
        id:
          description: Unique identifier for the object.
          type: string
        livemode:
          description: Has the value `true` if the object exists in live mode or the value
            `false` if the object exists in test mode.
          type: boolean
        metadata:
          description: Set of key-value pairs that you can attach to an object. This can be
            useful for storing additional information about the object in a
            structured format.
          type: object
        migrated_to:
          description: "The ID of the [Custom
            account](https://stripe.com/docs/connect/custom-accounts) this
            recipient was migrated to. If set, the recipient can no longer be
            updated, nor can transfers be made to it: use the Custom account
            instead."
          type: string
          x-expansionResources:
            oneOf:
              - $ref: "#/components/schemas/account"
        name:
          description: Full, legal name of the recipient.
          type: string
        object:
          description: String representing the object's type. Objects of the same type
            share the same value.
          enum:
            - recipient
          type: string
        rolled_back_from:
          type: string
          x-expansionResources:
            oneOf:
              - $ref: "#/components/schemas/account"
        type:
          description: Type of the recipient, one of `individual` or `corporation`.
          type: string
      required:
        - created
        - id
        - livemode
        - metadata
        - object
        - type
      title: TransferRecipient
      type: object
      x-expandableFields:
        - active_account
        - cards
        - default_card
        - migrated_to
        - rolled_back_from
      x-resourceId: recipient
    refund:
      properties:
        amount:
          description: Amount, in %s.
          type: integer
        balance_transaction:
          description: Balance transaction that describes the impact on your account
            balance.
          type: string
          x-expansionResources:
            oneOf:
              - $ref: "#/components/schemas/balance_transaction"
        charge:
          description: ID of the charge that was refunded.
          type: string
          x-expansionResources:
            oneOf:
              - $ref: "#/components/schemas/charge"
        created:
          description: Time at which the object was created. Measured in seconds since the
            Unix epoch.
          type: integer
        currency:
          description: Three-letter [ISO currency
            code](https://www.iso.org/iso-4217-currency-codes.html), in
            lowercase. Must be a [supported
            currency](https://stripe.com/docs/currencies).
          type: string
        description:
          description: An arbitrary string attached to the object. Often useful for
            displaying to users. (Available on non-card refunds only)
          type: string
        failure_balance_transaction:
          description: If the refund failed, this balance transaction describes the
            adjustment made on your account balance that reverses the initial
            balance transaction.
          type: string
          x-expansionResources:
            oneOf:
              - $ref: "#/components/schemas/balance_transaction"
        failure_reason:
          description: If the refund failed, the reason for refund failure if known.
            Possible values are `lost_or_stolen_card`,
            `expired_or_canceled_card`, or `unknown`.
          type: string
        id:
          description: Unique identifier for the object.
          type: string
        metadata:
          description: Set of key-value pairs that you can attach to an object. This can be
            useful for storing additional information about the object in a
            structured format.
          type: object
        object:
          description: String representing the object's type. Objects of the same type
            share the same value.
          enum:
            - refund
          type: string
        reason:
          description: Reason for the refund. If set, possible values are `duplicate`,
            `fraudulent`, and `requested_by_customer`.
          type: string
        receipt_number:
          description: This is the transaction number that appears on email receipts sent
            for this refund.
          type: string
        source_transfer_reversal:
          description: The transfer reversal that is associated with the refund. Only
            present if the charge came from another Stripe account. See the
            Connect documentation for details.
          type: string
          x-expansionResources:
            oneOf:
              - $ref: "#/components/schemas/transfer_reversal"
        status:
          description: Status of the refund. For credit card refunds, this can be
            `pending`, `succeeded`, or `failed`. For other types of refunds, it
            can be `pending`, `succeeded`, `failed`, or `canceled`. Refer to our
            [refunds](https://stripe.com/docs/refunds#failed-refunds)
            documentation for more details.
          type: string
        transfer_reversal:
          description: If the accompanying transfer was reversed, the transfer reversal
            object. Only applicable if the charge was created using the
            destination parameter.
          type: string
          x-expansionResources:
            oneOf:
              - $ref: "#/components/schemas/transfer_reversal"
      required:
        - amount
        - created
        - currency
        - id
        - metadata
        - object
      title: Refund
      type: object
      x-expandableFields:
        - balance_transaction
        - charge
        - failure_balance_transaction
        - source_transfer_reversal
        - transfer_reversal
      x-resourceId: refund
    reporting.report_run:
      properties:
        created:
          description: Time at which the object was created. Measured in seconds since the
            Unix epoch.
          type: integer
        error:
          description: >-
            If something should go wrong during the run, a message about the
            failure (populated when
             `status=failed`).
          type: string
        id:
          description: Unique identifier for the object.
          type: string
        livemode:
          description: "Always `true`: reports can only be run on live-mode data."
          type: boolean
        object:
          description: String representing the object's type. Objects of the same type
            share the same value.
          enum:
            - reporting.report_run
          type: string
        parameters:
          $ref: "#/components/schemas/financial_reporting_finance_report_run_run_pa\
            rameters"
        report_type:
          description: The ID of the [report
            type](https://stripe.com/docs/reporting/statements/api#report-types)
            to run, such as `"balance.summary.1"`.
          type: string
        result:
          $ref: "#/components/schemas/file"
        status:
          description: >-
            Status of this report run. This will be `pending` when the run is
            initially created.
             When the run finishes, this will be set to `succeeded` and the `result` field will be populated.
             Rarely, we may encounter an error, at which point this will be set to `failed` and the `error` field will be populated.
          type: string
        succeeded_at:
          description: |-
            Timestamp at which this run successfully finished (populated when
             `status=succeeded`). Measured in seconds since the Unix epoch.
          type: integer
      required:
        - created
        - id
        - livemode
        - object
        - parameters
        - report_type
        - status
      title: reporting_report_run
      type: object
      x-expandableFields:
        - parameters
        - result
      x-resourceId: reporting.report_run
    reporting.report_type:
      properties:
        data_available_end:
          description: Most recent time for which this Report Type is available. Measured
            in seconds since the Unix epoch.
          type: integer
        data_available_start:
          description: Earliest time for which this Report Type is available. Measured in
            seconds since the Unix epoch.
          type: integer
        default_columns:
          description: List of column names that are included by default when this Report
            Type gets run. (If the Report Type doesn't support the `columns`
            parameter, this will be null.)
          items:
            type: string
          type: array
        id:
          description: The [ID of the Report
            Type](https://stripe.com/docs/reporting/statements/api#available-report-types),
            such as `balance.summary.1`.
          type: string
        name:
          description: Human-readable name of the Report Type
          type: string
        object:
          description: String representing the object's type. Objects of the same type
            share the same value.
          enum:
            - reporting.report_type
          type: string
        updated:
          description: When this Report Type was latest updated. Measured in seconds since
            the Unix epoch.
          type: integer
        version:
          description: Version of the Report Type. Different versions report with the same
            ID will have the same purpose, but may take different run parameters
            or have different result schemas.
          type: integer
      required:
        - data_available_end
        - data_available_start
        - id
        - name
        - object
        - updated
        - version
      title: reporting_report_type
      type: object
      x-expandableFields: []
      x-resourceId: reporting.report_type
    reserve_transaction:
      properties:
        amount:
          type: integer
        currency:
          description: Three-letter [ISO currency
            code](https://www.iso.org/iso-4217-currency-codes.html), in
            lowercase. Must be a [supported
            currency](https://stripe.com/docs/currencies).
          type: string
        description:
          description: An arbitrary string attached to the object. Often useful for
            displaying to users.
          type: string
        id:
          description: Unique identifier for the object.
          type: string
        object:
          description: String representing the object's type. Objects of the same type
            share the same value.
          enum:
            - reserve_transaction
          type: string
      required:
        - amount
        - currency
        - id
        - object
      title: ReserveTransaction
      type: object
      x-expandableFields: []
    review:
      properties:
        billing_zip:
          description: The ZIP or postal code of the card used, if applicable.
          type: string
        charge:
          description: The charge associated with this review.
          type: string
          x-expansionResources:
            oneOf:
              - $ref: "#/components/schemas/charge"
        closed_reason:
          description: The reason the review was closed, or null if it has not yet been
            closed. One of `approved`, `refunded`, `refunded_as_fraud`, or
            `disputed`.
          enum:
            - approved
            - disputed
            - refunded
            - refunded_as_fraud
          type: string
        created:
          description: Time at which the object was created. Measured in seconds since the
            Unix epoch.
          type: integer
        id:
          description: Unique identifier for the object.
          type: string
        ip_address:
          description: The IP address where the payment originated.
          type: string
        ip_address_location:
          $ref: "#/components/schemas/radar_review_resource_location"
        livemode:
          description: Has the value `true` if the object exists in live mode or the value
            `false` if the object exists in test mode.
          type: boolean
        object:
          description: String representing the object's type. Objects of the same type
            share the same value.
          enum:
            - review
          type: string
        open:
          description: If `true`, the review needs action.
          type: boolean
        opened_reason:
          description: The reason the review was opened. One of `rule` or `manual`.
          enum:
            - manual
            - rule
          type: string
        payment_intent:
          description: The PaymentIntent ID associated with this review, if one exists.
          type: string
          x-expansionResources:
            oneOf:
              - $ref: "#/components/schemas/payment_intent"
        reason:
          description: The reason the review is currently open or closed. One of `rule`,
            `manual`, `approved`, `refunded`, `refunded_as_fraud`, or
            `disputed`.
          type: string
        session:
          $ref: "#/components/schemas/radar_review_resource_session"
      required:
        - created
        - id
        - livemode
        - object
        - open
        - opened_reason
        - reason
      title: RadarReview
      type: object
      x-expandableFields:
        - charge
        - ip_address_location
        - payment_intent
        - session
      x-resourceId: review
    rule:
      properties:
        action:
          description: The action taken on the payment.
          type: string
        id:
          description: Unique identifier for the object.
          type: string
        predicate:
          description: The predicate to evaluate the payment against.
          type: string
      required:
        - action
        - id
        - predicate
      title: RadarRule
      type: object
      x-expandableFields: []
    scheduled_query_run:
      properties:
        created:
          description: Time at which the object was created. Measured in seconds since the
            Unix epoch.
          type: integer
        data_load_time:
          description: When the query was run, Sigma contained a snapshot of your Stripe
            data at this time.
          type: integer
        error:
          $ref: "#/components/schemas/sigma_scheduled_query_run_error"
        file:
          $ref: "#/components/schemas/file"
        id:
          description: Unique identifier for the object.
          type: string
        livemode:
          description: Has the value `true` if the object exists in live mode or the value
            `false` if the object exists in test mode.
          type: boolean
        object:
          description: String representing the object's type. Objects of the same type
            share the same value.
          enum:
            - scheduled_query_run
          type: string
        result_available_until:
          description: Time at which the result expires and is no longer available for
            download.
          type: integer
        sql:
          description: SQL for the query.
          type: string
        status:
          description: The query's execution status, which will be `completed` for
            successful runs, and `canceled`, `failed`, or `timed_out` otherwise.
          type: string
        title:
          description: Title of the query.
          type: string
      required:
        - created
        - data_load_time
        - id
        - livemode
        - object
        - result_available_until
        - sql
        - status
        - title
      title: ScheduledQueryRun
      type: object
      x-expandableFields:
        - error
        - file
      x-resourceId: scheduled_query_run
    setup_intent:
      properties:
        application:
          description: ID of the Connect application that created the SetupIntent.
          type: string
          x-expansionResources:
            oneOf:
              - $ref: "#/components/schemas/application"
        cancellation_reason:
          description: Reason for cancellation of this SetupIntent, one of `abandoned`,
            `requested_by_customer`, or `duplicate`.
          enum:
            - abandoned
            - duplicate
            - requested_by_customer
          type: string
        client_secret:
          description: >-
            The client secret of this SetupIntent. Used for client-side
            retrieval using a publishable key.


            The client secret can be used to complete payment setup from your frontend. It should not be stored, logged, embedded in URLs, or exposed to anyone other than the customer. Make sure that you have TLS enabled on any page that includes the client secret.
          type: string
        created:
          description: Time at which the object was created. Measured in seconds since the
            Unix epoch.
          type: integer
        customer:
          description: >-
            ID of the Customer this SetupIntent belongs to, if one exists.


            If present, payment methods used with this SetupIntent can only be attached to this Customer, and payment methods attached to other Customers cannot be used with this SetupIntent.
          type: string
          x-expansionResources:
            oneOf:
              - $ref: "#/components/schemas/customer"
              - $ref: "#/components/schemas/deleted_customer"
        description:
          description: An arbitrary string attached to the object. Often useful for
            displaying to users.
          type: string
        id:
          description: Unique identifier for the object.
          type: string
        last_setup_error:
          $ref: "#/components/schemas/api_errors"
        livemode:
          description: Has the value `true` if the object exists in live mode or the value
            `false` if the object exists in test mode.
          type: boolean
        metadata:
          description: Set of key-value pairs that you can attach to an object. This can be
            useful for storing additional information about the object in a
            structured format.
          type: object
        next_action:
          $ref: "#/components/schemas/setup_intent_next_action"
        object:
          description: String representing the object's type. Objects of the same type
            share the same value.
          enum:
            - setup_intent
          type: string
        on_behalf_of:
          description: The account (if any) for which the setup is intended.
          type: string
          x-expansionResources:
            oneOf:
              - $ref: "#/components/schemas/account"
        payment_method:
          description: ID of the payment method used with this SetupIntent.
          type: string
          x-expansionResources:
            oneOf:
              - $ref: "#/components/schemas/payment_method"
        payment_method_options:
          $ref: "#/components/schemas/setup_intent_payment_method_options"
        payment_method_types:
          description: The list of payment method types (e.g. card) that this SetupIntent
            is allowed to set up.
          items:
            type: string
          type: array
        status:
          description: "[Status](https://stripe.com/docs/payments/intents#intent-statuses)
            of this SetupIntent, one of `requires_payment_method`,
            `requires_confirmation`, `requires_action`, `processing`,
            `canceled`, or `succeeded`."
          enum:
            - canceled
            - processing
            - requires_action
            - requires_confirmation
            - requires_payment_method
            - succeeded
          type: string
        usage:
          description: >-
            Indicates how the payment method is intended to be used in the
            future.


            Use `on_session` if you intend to only reuse the payment method when the customer is in your checkout flow. Use `off_session` if your customer may or may not be in your checkout flow. If not provided, this value defaults to `off_session`.
          type: string
      required:
        - created
        - id
        - livemode
        - object
        - payment_method_types
        - status
        - usage
      title: SetupIntent
      type: object
      x-expandableFields:
        - application
        - customer
        - last_setup_error
        - next_action
        - on_behalf_of
        - payment_method
        - payment_method_options
      x-resourceId: setup_intent
    setup_intent_next_action:
      properties:
        redirect_to_url:
          $ref: "#/components/schemas/setup_intent_next_action_redirect_to_url"
        type:
          description: Type of the next action to perform, one of `redirect_to_url` or
            `use_stripe_sdk`.
          type: string
        use_stripe_sdk:
          description: When confirming a SetupIntent with Stripe.js, Stripe.js depends on
            the contents of this dictionary to invoke authentication flows. The
            shape of the contents is subject to change and is only intended to
            be used by Stripe.js.
          type: object
      required:
        - type
      title: SetupIntentNextAction
      type: object
      x-expandableFields:
        - redirect_to_url
    setup_intent_next_action_redirect_to_url:
      properties:
        return_url:
          description: If the customer does not exit their browser while authenticating,
            they will be redirected to this specified URL after completion.
          type: string
        url:
          description: The URL you must redirect your customer to in order to authenticate.
          type: string
      title: SetupIntentNextActionRedirectToUrl
      type: object
      x-expandableFields: []
    setup_intent_payment_method_options:
      properties:
        card:
          $ref: "#/components/schemas/setup_intent_payment_method_options_card"
      title: SetupIntentPaymentMethodOptions
      type: object
      x-expandableFields:
        - card
    setup_intent_payment_method_options_card:
      properties:
        request_three_d_secure:
          description: "We strongly recommend that you rely on our SCA Engine to
            automatically prompt your customers for authentication based on risk
            level and [other
            requirements](https://stripe.com/docs/strong-customer-authenticatio\
            n). However, if you wish to request 3D Secure based on logic from
            your own fraud engine, provide this option. Permitted values
            include: `automatic` or `any`. If not provided, defaults to
            `automatic`. Read our guide on [manually requesting 3D
            Secure](https://stripe.com/docs/payments/3d-secure#manual-three-ds)
            for more information on how this configuration interacts with Radar
            and our SCA Engine."
          enum:
            - any
            - automatic
            - challenge_only
          type: string
      title: setup_intent_payment_method_options_card
      type: object
      x-expandableFields: []
    shipping:
      properties:
        address:
          $ref: "#/components/schemas/address"
        carrier:
          description: The delivery service that shipped a physical product, such as Fedex,
            UPS, USPS, etc.
          type: string
        name:
          description: Recipient name.
          type: string
        phone:
          description: Recipient phone (including extension).
          type: string
        tracking_number:
          description: The tracking number for a physical product, obtained from the
            delivery service. If multiple tracking numbers were generated for
            this purchase, please separate them with commas.
          type: string
      title: Shipping
      type: object
      x-expandableFields:
        - address
    shipping_method:
      properties:
        amount:
          description: A positive integer in the smallest currency unit (that is, 100 cents
            for $1.00, or 1 for ¥1, Japanese Yen being a zero-decimal currency)
            representing the total amount for the line item.
          type: integer
        currency:
          description: Three-letter [ISO currency
            code](https://www.iso.org/iso-4217-currency-codes.html), in
            lowercase. Must be a [supported
            currency](https://stripe.com/docs/currencies).
          type: string
        delivery_estimate:
          $ref: "#/components/schemas/delivery_estimate"
        description:
          description: An arbitrary string attached to the object. Often useful for
            displaying to users.
          type: string
        id:
          description: Unique identifier for the object.
          type: string
      required:
        - amount
        - currency
        - description
        - id
      title: ShippingMethod
      type: object
      x-expandableFields:
        - delivery_estimate
    sigma_scheduled_query_run_error:
      properties:
        message:
          description: Information about the run failure.
          type: string
      required:
        - message
      title: SigmaScheduledQueryRunError
      type: object
      x-expandableFields: []
    sku:
      properties:
        active:
          description: Whether the SKU is available for purchase.
          type: boolean
        attributes:
          description: "A dictionary of attributes and values for the attributes defined by
            the product. If, for example, a product's attributes are `[\"size\",
            \"gender\"]`, a valid SKU has the following dictionary of
            attributes: `{\"size\": \"Medium\", \"gender\": \"Unisex\"}`."
          type: object
        created:
          description: Time at which the object was created. Measured in seconds since the
            Unix epoch.
          type: integer
        currency:
          description: Three-letter [ISO currency
            code](https://www.iso.org/iso-4217-currency-codes.html), in
            lowercase. Must be a [supported
            currency](https://stripe.com/docs/currencies).
          type: string
        id:
          description: Unique identifier for the object.
          type: string
        image:
          description: The URL of an image for this SKU, meant to be displayable to the
            customer.
          type: string
        inventory:
          $ref: "#/components/schemas/inventory"
        livemode:
          description: Has the value `true` if the object exists in live mode or the value
            `false` if the object exists in test mode.
          type: boolean
        metadata:
          description: Set of key-value pairs that you can attach to an object. This can be
            useful for storing additional information about the object in a
            structured format.
          type: object
        object:
          description: String representing the object's type. Objects of the same type
            share the same value.
          enum:
            - sku
          type: string
        package_dimensions:
          $ref: "#/components/schemas/package_dimensions"
        price:
          description: The cost of the item as a positive integer in the smallest currency
            unit (that is, 100 cents to charge $1.00, or 100 to charge ¥100,
            Japanese Yen being a zero-decimal currency).
          type: integer
        product:
          description: The ID of the product this SKU is associated with. The product must
            be currently active.
          type: string
          x-expansionResources:
            oneOf:
              - $ref: "#/components/schemas/product"
        updated:
          type: integer
      required:
        - active
        - attributes
        - created
        - currency
        - id
        - inventory
        - livemode
        - metadata
        - object
        - price
        - product
        - updated
      title: SKU
      type: object
      x-expandableFields:
        - inventory
        - package_dimensions
        - product
      x-resourceId: sku
    source:
      properties:
        ach_credit_transfer:
          $ref: "#/components/schemas/source_type_ach_credit_transfer"
        ach_debit:
          $ref: "#/components/schemas/source_type_ach_debit"
        alipay:
          $ref: "#/components/schemas/source_type_alipay"
        amount:
          description: A positive integer in the smallest currency unit (that is, 100 cents
            for $1.00, or 1 for ¥1, Japanese Yen being a zero-decimal currency)
            representing the total amount associated with the source. This is
            the amount for which the source will be chargeable once ready.
            Required for `single_use` sources.
          type: integer
        bancontact:
          $ref: "#/components/schemas/source_type_bancontact"
        card:
          $ref: "#/components/schemas/source_type_card"
        card_present:
          $ref: "#/components/schemas/source_type_card_present"
        client_secret:
          description: The client secret of the source. Used for client-side retrieval
            using a publishable key.
          type: string
        code_verification:
          $ref: "#/components/schemas/source_code_verification_flow"
        created:
          description: Time at which the object was created. Measured in seconds since the
            Unix epoch.
          type: integer
        currency:
          description: Three-letter [ISO code for the
            currency](https://stripe.com/docs/currencies) associated with the
            source. This is the currency for which the source will be chargeable
            once ready. Required for `single_use` sources.
          type: string
        customer:
          description: The ID of the customer to which this source is attached. This will
            not be present when the source has not been attached to a customer.
          type: string
        eps:
          $ref: "#/components/schemas/source_type_eps"
        flow:
          description: The authentication `flow` of the source. `flow` is one of
            `redirect`, `receiver`, `code_verification`, `none`.
          type: string
        giropay:
          $ref: "#/components/schemas/source_type_giropay"
        id:
          description: Unique identifier for the object.
          type: string
        ideal:
          $ref: "#/components/schemas/source_type_ideal"
        klarna:
          $ref: "#/components/schemas/source_type_klarna"
        livemode:
          description: Has the value `true` if the object exists in live mode or the value
            `false` if the object exists in test mode.
          type: boolean
        metadata:
          description: Set of key-value pairs that you can attach to an object. This can be
            useful for storing additional information about the object in a
            structured format.
          type: object
        multibanco:
          $ref: "#/components/schemas/source_type_multibanco"
        object:
          description: String representing the object's type. Objects of the same type
            share the same value.
          enum:
            - source
          type: string
        owner:
          $ref: "#/components/schemas/source_owner"
        p24:
          $ref: "#/components/schemas/source_type_p24"
        receiver:
          $ref: "#/components/schemas/source_receiver_flow"
        redirect:
          $ref: "#/components/schemas/source_redirect_flow"
        sepa_debit:
          $ref: "#/components/schemas/source_type_sepa_debit"
        sofort:
          $ref: "#/components/schemas/source_type_sofort"
        source_order:
          $ref: "#/components/schemas/source_order"
        statement_descriptor:
          description: Extra information about a source. This will appear on your
            customer's statement every time you charge the source.
          type: string
        status:
          description: The status of the source, one of `canceled`, `chargeable`,
            `consumed`, `failed`, or `pending`. Only `chargeable` sources can be
            used to create a charge.
          type: string
        three_d_secure:
          $ref: "#/components/schemas/source_type_three_d_secure"
        type:
          description: The `type` of the source. The `type` is a payment method, one of
            `ach_credit_transfer`, `ach_debit`, `alipay`, `bancontact`, `card`,
            `card_present`, `eps`, `giropay`, `ideal`, `multibanco`, `klarna`,
            `p24`, `sepa_debit`, `sofort`, `three_d_secure`, or `wechat`. An
            additional hash is included on the source with a name matching this
            value. It contains additional information specific to the [payment
            method](https://stripe.com/docs/sources) used.
          enum:
            - ach_credit_transfer
            - ach_debit
            - alipay
            - bancontact
            - card
            - card_present
            - eps
            - giropay
            - ideal
            - klarna
            - multibanco
            - p24
            - sepa_debit
            - sofort
            - three_d_secure
            - wechat
          type: string
        usage:
          description: Either `reusable` or `single_use`. Whether this source should be
            reusable or not. Some source types may or may not be reusable by
            construction, while others may leave the option at creation. If an
            incompatible value is passed, an error will be returned.
          type: string
        wechat:
          $ref: "#/components/schemas/source_type_wechat"
      required:
        - client_secret
        - created
        - flow
        - id
        - livemode
        - object
        - status
        - type
      title: Source
      type: object
      x-expandableFields:
        - code_verification
        - owner
        - receiver
        - redirect
        - source_order
      x-resourceId: source
    source_code_verification_flow:
      properties:
        attempts_remaining:
          description: The number of attempts remaining to authenticate the source object
            with a verification code.
          type: integer
        status:
          description: The status of the code verification, either `pending` (awaiting
            verification, `attempts_remaining` should be greater than 0),
            `succeeded` (successful verification) or `failed` (failed
            verification, cannot be verified anymore as `attempts_remaining`
            should be 0).
          type: string
      required:
        - attempts_remaining
        - status
      title: SourceCodeVerificationFlow
      type: object
      x-expandableFields: []
    source_mandate_notification:
      properties:
        amount:
          description: A positive integer in the smallest currency unit (that is, 100 cents
            for $1.00, or 1 for ¥1, Japanese Yen being a zero-decimal currency)
            representing the amount associated with the mandate notification.
            The amount is expressed in the currency of the underlying source.
            Required if the notification type is `debit_initiated`.
          type: integer
        bacs_debit:
          $ref: "#/components/schemas/source_mandate_notification_bacs_debit_data"
        created:
          description: Time at which the object was created. Measured in seconds since the
            Unix epoch.
          type: integer
        id:
          description: Unique identifier for the object.
          type: string
        livemode:
          description: Has the value `true` if the object exists in live mode or the value
            `false` if the object exists in test mode.
          type: boolean
        object:
          description: String representing the object's type. Objects of the same type
            share the same value.
          enum:
            - source_mandate_notification
          type: string
        reason:
          description: The reason of the mandate notification. Valid reasons are
            `mandate_confirmed` or `debit_initiated`.
          type: string
        sepa_debit:
          $ref: "#/components/schemas/source_mandate_notification_sepa_debit_data"
        source:
          $ref: "#/components/schemas/source"
        status:
          description: The status of the mandate notification. Valid statuses are `pending`
            or `submitted`.
          type: string
        type:
          description: The type of source this mandate notification is attached to. Should
            be the source type identifier code for the payment method, such as
            `three_d_secure`.
          type: string
      required:
        - created
        - id
        - livemode
        - object
        - reason
        - source
        - status
        - type
      title: SourceMandateNotification
      type: object
      x-expandableFields:
        - bacs_debit
        - sepa_debit
        - source
      x-resourceId: source_mandate_notification
    source_mandate_notification_bacs_debit_data:
      properties:
        last4:
          description: Last 4 digits of the account number associated with the debit.
          type: string
      title: SourceMandateNotificationBacsDebitData
      type: object
      x-expandableFields: []
    source_mandate_notification_sepa_debit_data:
      properties:
        creditor_identifier:
          description: SEPA creditor ID.
          type: string
        last4:
          description: Last 4 digits of the account number associated with the debit.
          type: string
        mandate_reference:
          description: Mandate reference associated with the debit.
          type: string
      title: SourceMandateNotificationSepaDebitData
      type: object
      x-expandableFields: []
    source_order:
      properties:
        amount:
          description: A positive integer in the smallest currency unit (that is, 100 cents
            for $1.00, or 1 for ¥1, Japanese Yen being a zero-decimal currency)
            representing the total amount for the order.
          type: integer
        currency:
          description: Three-letter [ISO currency
            code](https://www.iso.org/iso-4217-currency-codes.html), in
            lowercase. Must be a [supported
            currency](https://stripe.com/docs/currencies).
          type: string
        email:
          description: The email address of the customer placing the order.
          type: string
        items:
          description: List of items constituting the order.
          items:
            $ref: "#/components/schemas/source_order_item"
          type: array
        shipping:
          $ref: "#/components/schemas/shipping"
      required:
        - amount
        - currency
      title: SourceOrder
      type: object
      x-expandableFields:
        - items
        - shipping
    source_order_item:
      properties:
        amount:
          description: The amount (price) for this order item.
          type: integer
        currency:
          description: This currency of this order item. Required when `amount` is present.
          type: string
        description:
          description: Human-readable description for this order item.
          type: string
        quantity:
          description: The quantity of this order item. When type is `sku`, this is the
            number of instances of the SKU to be ordered.
          type: integer
        type:
          description: The type of this order item. Must be `sku`, `tax`, or `shipping`.
          type: string
      title: SourceOrderItem
      type: object
      x-expandableFields: []
    source_owner:
      properties:
        address:
          $ref: "#/components/schemas/address"
        email:
          description: Owner's email address.
          type: string
        name:
          description: Owner's full name.
          type: string
        phone:
          description: Owner's phone number (including extension).
          type: string
        verified_address:
          $ref: "#/components/schemas/address"
        verified_email:
          description: Verified owner's email address. Verified values are verified or
            provided by the payment method directly (and if supported) at the
            time of authorization or settlement. They cannot be set or mutated.
          type: string
        verified_name:
          description: Verified owner's full name. Verified values are verified or provided
            by the payment method directly (and if supported) at the time of
            authorization or settlement. They cannot be set or mutated.
          type: string
        verified_phone:
          description: Verified owner's phone number (including extension). Verified values
            are verified or provided by the payment method directly (and if
            supported) at the time of authorization or settlement. They cannot
            be set or mutated.
          type: string
      title: SourceOwner
      type: object
      x-expandableFields:
        - address
        - verified_address
    source_receiver_flow:
      properties:
        address:
          description: The address of the receiver source. This is the value that should be
            communicated to the customer to send their funds to.
          type: string
        amount_charged:
          description: The total amount that was charged by you. The amount charged is
            expressed in the source's currency.
          type: integer
        amount_received:
          description: The total amount received by the receiver source. `amount_received =
            amount_returned + amount_charged` is true at all time. The amount
            received is expressed in the source's currency.
          type: integer
        amount_returned:
          description: The total amount that was returned to the customer. The amount
            returned is expressed in the source's currency.
          type: integer
        refund_attributes_method:
          description: Type of refund attribute method, one of `email`, `manual`, or `none`.
          type: string
        refund_attributes_status:
          description: Type of refund attribute status, one of `missing`, `requested`, or
            `available`.
          type: string
      required:
        - amount_charged
        - amount_received
        - amount_returned
        - refund_attributes_method
        - refund_attributes_status
      title: SourceReceiverFlow
      type: object
      x-expandableFields: []
    source_redirect_flow:
      properties:
        failure_reason:
          description: The failure reason for the redirect, either `user_abort` (the
            customer aborted or dropped out of the redirect flow), `declined`
            (the authentication failed or the transaction was declined), or
            `processing_error` (the redirect failed due to a technical error).
            Present only if the redirect status is `failed`.
          type: string
        return_url:
          description: The URL you provide to redirect the customer to after they
            authenticated their payment.
          type: string
        status:
          description: The status of the redirect, either `pending` (ready to be used by
            your customer to authenticate the transaction), `succeeded`
            (succesful authentication, cannot be reused) or `not_required`
            (redirect should not be used) or `failed` (failed authentication,
            cannot be reused).
          type: string
        url:
          description: The URL provided to you to redirect a customer to as part of a
            `redirect` authentication flow.
          type: string
      required:
        - return_url
        - status
        - url
      title: SourceRedirectFlow
      type: object
      x-expandableFields: []
    source_transaction:
      properties:
        ach_credit_transfer:
          $ref: "#/components/schemas/source_transaction_ach_credit_transfer_data"
        amount:
          description: A positive integer in the smallest currency unit (that is, 100 cents
            for $1.00, or 1 for ¥1, Japanese Yen being a zero-decimal currency)
            representing the amount your customer has pushed to the receiver.
          type: integer
        chf_credit_transfer:
          $ref: "#/components/schemas/source_transaction_chf_credit_transfer_data"
        created:
          description: Time at which the object was created. Measured in seconds since the
            Unix epoch.
          type: integer
        currency:
          description: Three-letter [ISO currency
            code](https://www.iso.org/iso-4217-currency-codes.html), in
            lowercase. Must be a [supported
            currency](https://stripe.com/docs/currencies).
          type: string
        gbp_credit_transfer:
          $ref: "#/components/schemas/source_transaction_gbp_credit_transfer_data"
        id:
          description: Unique identifier for the object.
          type: string
        livemode:
          description: Has the value `true` if the object exists in live mode or the value
            `false` if the object exists in test mode.
          type: boolean
        object:
          description: String representing the object's type. Objects of the same type
            share the same value.
          enum:
            - source_transaction
          type: string
        paper_check:
          $ref: "#/components/schemas/source_transaction_paper_check_data"
        sepa_credit_transfer:
          $ref: "#/components/schemas/source_transaction_sepa_credit_transfer_data"
        source:
          description: The ID of the source this transaction is attached to.
          type: string
        status:
          description: The status of the transaction, one of `succeeded`, `pending`, or
            `failed`.
          type: string
        type:
          description: The type of source this transaction is attached to.
          enum:
            - ach_credit_transfer
            - ach_debit
            - alipay
            - bancontact
            - card
            - card_present
            - eps
            - giropay
            - ideal
            - klarna
            - multibanco
            - p24
            - sepa_debit
            - sofort
            - three_d_secure
            - wechat
          type: string
      required:
        - amount
        - created
        - currency
        - id
        - livemode
        - object
        - source
        - status
        - type
      title: SourceTransaction
      type: object
      x-expandableFields:
        - ach_credit_transfer
        - chf_credit_transfer
        - gbp_credit_transfer
        - paper_check
        - sepa_credit_transfer
      x-resourceId: source_transaction
    source_transaction_ach_credit_transfer_data:
      properties:
        customer_data:
          description: Customer data associated with the transfer.
          type: string
        fingerprint:
          description: Bank account fingerprint associated with the transfer.
          type: string
        last4:
          description: Last 4 digits of the account number associated with the transfer.
          type: string
        routing_number:
          description: Routing number associated with the transfer.
          type: string
      title: SourceTransactionAchCreditTransferData
      type: object
      x-expandableFields: []
    source_transaction_chf_credit_transfer_data:
      properties:
        reference:
          description: Reference associated with the transfer.
          type: string
        sender_address_country:
          description: Sender's country address.
          type: string
        sender_address_line1:
          description: Sender's line 1 address.
          type: string
        sender_iban:
          description: Sender's bank account IBAN.
          type: string
        sender_name:
          description: Sender's name.
          type: string
      title: SourceTransactionChfCreditTransferData
      type: object
      x-expandableFields: []
    source_transaction_gbp_credit_transfer_data:
      properties:
        fingerprint:
          description: Bank account fingerprint associated with the transfer.
          type: string
        last4:
          description: Last 4 digits of account number associated with the transfer.
          type: string
        reference:
          description: Sender entered arbitrary information about the transfer.
          type: string
        sender_name:
          description: Sender name associated with the transfer.
          type: string
        sort_code:
          description: Sort code associated with the transfer.
          type: string
      title: SourceTransactionGbpCreditTransferData
      type: object
      x-expandableFields: []
    source_transaction_paper_check_data:
      properties:
        available_at:
          description: String unix time for the available date.
          type: string
        invoices:
          description: Invoice ID associated with the paper check.
          type: string
      title: SourceTransactionPaperCheckData
      type: object
      x-expandableFields: []
    source_transaction_sepa_credit_transfer_data:
      properties:
        reference:
          description: Reference associated with the transfer.
          type: string
        sender_iban:
          description: Sender's bank account IBAN.
          type: string
        sender_name:
          description: Sender's name.
          type: string
      title: SourceTransactionSepaCreditTransferData
      type: object
      x-expandableFields: []
    source_type_ach_credit_transfer:
      properties:
        account_number:
          type: string
        bank_name:
          type: string
        fingerprint:
          type: string
        refund_account_holder_name:
          type: string
        refund_account_holder_type:
          type: string
        refund_routing_number:
          type: string
        routing_number:
          type: string
        swift_code:
          type: string
      type: object
    source_type_ach_debit:
      properties:
        bank_name:
          type: string
        country:
          type: string
        fingerprint:
          type: string
        last4:
          type: string
        routing_number:
          type: string
        type:
          type: string
      type: object
    source_type_alipay:
      properties:
        data_string:
          type: string
        native_url:
          type: string
        statement_descriptor:
          type: string
      type: object
    source_type_bancontact:
      properties:
        bank_code:
          type: string
        bank_name:
          type: string
        bic:
          type: string
        iban_last4:
          type: string
        preferred_language:
          type: string
        statement_descriptor:
          type: string
      type: object
    source_type_card:
      properties:
        address_line1_check:
          type: string
        address_zip_check:
          type: string
        brand:
          type: string
        country:
          type: string
        cvc_check:
          type: string
        dynamic_last4:
          type: string
        exp_month:
          type: integer
        exp_year:
          type: integer
        fingerprint:
          type: string
        funding:
          type: string
        last4:
          type: string
        name:
          type: string
        three_d_secure:
          type: string
        tokenization_method:
          type: string
      type: object
    source_type_card_present:
      properties:
        application_cryptogram:
          type: string
        application_preferred_name:
          type: string
        authorization_code:
          type: string
        authorization_response_code:
          type: string
        brand:
          type: string
        country:
          type: string
        cvm_type:
          type: string
        data_type:
          type: string
        dedicated_file_name:
          type: string
        emv_auth_data:
          type: string
        evidence_customer_signature:
          type: string
        evidence_transaction_certificate:
          type: string
        exp_month:
          type: integer
        exp_year:
          type: integer
        fingerprint:
          type: string
        funding:
          type: string
        last4:
          type: string
        pos_device_id:
          type: string
        pos_entry_mode:
          type: string
        read_method:
          type: string
        reader:
          type: string
        terminal_verification_results:
          type: string
        transaction_status_information:
          type: string
      type: object
    source_type_eps:
      properties:
        reference:
          type: string
        statement_descriptor:
          type: string
      type: object
    source_type_giropay:
      properties:
        bank_code:
          type: string
        bank_name:
          type: string
        bic:
          type: string
        statement_descriptor:
          type: string
      type: object
    source_type_ideal:
      properties:
        bank:
          type: string
        bic:
          type: string
        iban_last4:
          type: string
        statement_descriptor:
          type: string
      type: object
    source_type_klarna:
      properties:
        background_image_url:
          type: string
        client_token:
          type: string
        first_name:
          type: string
        last_name:
          type: string
        locale:
          type: string
        logo_url:
          type: string
        page_title:
          type: string
        pay_later_asset_urls_descriptive:
          type: string
        pay_later_asset_urls_standard:
          type: string
        pay_later_name:
          type: string
        pay_later_redirect_url:
          type: string
        pay_now_asset_urls_descriptive:
          type: string
        pay_now_asset_urls_standard:
          type: string
        pay_now_name:
          type: string
        pay_now_redirect_url:
          type: string
        pay_over_time_asset_urls_descriptive:
          type: string
        pay_over_time_asset_urls_standard:
          type: string
        pay_over_time_name:
          type: string
        pay_over_time_redirect_url:
          type: string
        payment_method_categories:
          type: string
        purchase_country:
          type: string
        purchase_type:
          type: string
        redirect_url:
          type: string
        shipping_first_name:
          type: string
        shipping_last_name:
          type: string
      type: object
    source_type_multibanco:
      properties:
        entity:
          type: string
        reference:
          type: string
        refund_account_holder_address_city:
          type: string
        refund_account_holder_address_country:
          type: string
        refund_account_holder_address_line1:
          type: string
        refund_account_holder_address_line2:
          type: string
        refund_account_holder_address_postal_code:
          type: string
        refund_account_holder_address_state:
          type: string
        refund_account_holder_name:
          type: string
        refund_iban:
          type: string
      type: object
    source_type_p24:
      properties:
        reference:
          type: string
      type: object
    source_type_sepa_debit:
      properties:
        bank_code:
          type: string
        branch_code:
          type: string
        country:
          type: string
        fingerprint:
          type: string
        last4:
          type: string
        mandate_reference:
          type: string
        mandate_url:
          type: string
      type: object
    source_type_sofort:
      properties:
        bank_code:
          type: string
        bank_name:
          type: string
        bic:
          type: string
        country:
          type: string
        iban_last4:
          type: string
        preferred_language:
          type: string
        statement_descriptor:
          type: string
      type: object
    source_type_three_d_secure:
      properties:
        address_line1_check:
          type: string
        address_zip_check:
          type: string
        authenticated:
          type: boolean
        brand:
          type: string
        card:
          type: string
        country:
          type: string
        customer:
          type: string
        cvc_check:
          type: string
        dynamic_last4:
          type: string
        exp_month:
          type: integer
        exp_year:
          type: integer
        fingerprint:
          type: string
        funding:
          type: string
        last4:
          type: string
        name:
          type: string
        three_d_secure:
          type: string
        tokenization_method:
          type: string
      type: object
    source_type_wechat:
      properties:
        prepay_id:
          type: string
        qr_code_url:
          type: string
        statement_descriptor:
          type: string
      type: object
    status_transitions:
      properties:
        canceled:
          type: integer
        fulfiled:
          type: integer
        paid:
          type: integer
        returned:
          type: integer
      title: StatusTransitions
      type: object
      x-expandableFields: []
    subscription:
      properties:
        application_fee_percent:
          description: A non-negative decimal between 0 and 100, with at most two decimal
            places. This represents the percentage of the subscription invoice
            subtotal that will be transferred to the application owner's Stripe
            account.
          type: number
        billing:
          description: This field has been renamed to `collection_method` and will be
            removed in a future API version.
          enum:
            - charge_automatically
            - send_invoice
          type: string
        billing_cycle_anchor:
          description: Determines the date of the first full invoice, and, for plans with
            `month` or `year` intervals, the day of the month for subsequent
            invoices.
          type: integer
        billing_thresholds:
          $ref: "#/components/schemas/subscription_billing_thresholds"
        cancel_at:
          description: A date in the future at which the subscription will automatically
            get canceled
          type: integer
        cancel_at_period_end:
          description: If the subscription has been canceled with the `at_period_end` flag
            set to `true`, `cancel_at_period_end` on the subscription will be
            true. You can use this attribute to determine whether a subscription
            that has a status of active is scheduled to be canceled at the end
            of the current period.
          type: boolean
        canceled_at:
          description: If the subscription has been canceled, the date of that
            cancellation. If the subscription was canceled with
            `cancel_at_period_end`, `canceled_at` will still reflect the date of
            the initial cancellation request, not the end of the subscription
            period when the subscription is automatically moved to a canceled
            state.
          type: integer
        collection_method:
          description: Either `charge_automatically`, or `send_invoice`. When charging
            automatically, Stripe will attempt to pay this subscription at the
            end of the cycle using the default source attached to the customer.
            When sending an invoice, Stripe will email your customer an invoice
            with payment instructions.
          enum:
            - charge_automatically
            - send_invoice
          type: string
        created:
          description: Time at which the object was created. Measured in seconds since the
            Unix epoch.
          type: integer
        current_period_end:
          description: End of the current period that the subscription has been invoiced
            for. At the end of this period, a new invoice will be created.
          type: integer
        current_period_start:
          description: Start of the current period that the subscription has been invoiced
            for.
          type: integer
        customer:
          description: ID of the customer who owns the subscription.
          type: string
          x-expansionResources:
            oneOf:
              - $ref: "#/components/schemas/customer"
              - $ref: "#/components/schemas/deleted_customer"
        days_until_due:
          description: Number of days a customer has to pay invoices generated by this
            subscription. This value will be `null` for subscriptions where
            `collection_method=charge_automatically`.
          type: integer
        default_payment_method:
          description: ID of the default payment method for the subscription. It must
            belong to the customer associated with the subscription. If not set,
            invoices will use the default payment method in the customer's
            invoice settings.
          type: string
          x-expansionResources:
            oneOf:
              - $ref: "#/components/schemas/payment_method"
        default_source:
          description: ID of the default payment source for the subscription. It must
            belong to the customer associated with the subscription and be in a
            chargeable state. If not set, defaults to the customer's default
            source.
          type: string
          x-expansionResources:
            oneOf:
              - $ref: "#/components/schemas/alipay_account"
              - $ref: "#/components/schemas/bank_account"
              - $ref: "#/components/schemas/bitcoin_receiver"
              - $ref: "#/components/schemas/card"
              - $ref: "#/components/schemas/source"
        default_tax_rates:
          description: The tax rates that will apply to any subscription item that does not
            have `tax_rates` set. Invoices created will have their
            `default_tax_rates` populated from the subscription.
          items:
            $ref: "#/components/schemas/tax_rate"
          type: array
        discount:
          $ref: "#/components/schemas/discount"
        ended_at:
          description: If the subscription has ended, the date the subscription ended.
          type: integer
        id:
          description: Unique identifier for the object.
          type: string
        items:
          description: List of subscription items, each with an attached plan.
          properties:
            data:
              items:
                $ref: "#/components/schemas/subscription_item"
              type: array
            has_more:
              description: True if this list has another page of items after this one that
                can be fetched.
              type: boolean
            object:
              description: String representing the object's type. Objects of the same type
                share the same value. Always has the value `list`.
              enum:
                - list
              type: string
            url:
              description: The URL where this list can be accessed.
              type: string
          required:
            - data
            - has_more
            - object
            - url
          title: SubscriptionItemList
          type: object
          x-expandableFields:
            - data
        latest_invoice:
          description: The most recent invoice this subscription has generated.
          type: string
          x-expansionResources:
            oneOf:
              - $ref: "#/components/schemas/invoice"
        livemode:
          description: Has the value `true` if the object exists in live mode or the value
            `false` if the object exists in test mode.
          type: boolean
        metadata:
          description: Set of key-value pairs that you can attach to an object. This can be
            useful for storing additional information about the object in a
            structured format.
          type: object
        object:
          description: String representing the object's type. Objects of the same type
            share the same value.
          enum:
            - subscription
          type: string
        pending_setup_intent:
          description: You can use this
            [SetupIntent](https://stripe.com/docs/api/setup_intents) to collect
            user authentication when creating a subscription without immediate
            payment or updating a subscription's payment method, allowing you to
            optimize for off-session payments. Learn more in the [SCA Migration
            Guide](https://stripe.com/docs/billing/migration/strong-customer-authentication#scenario-2).
          type: string
          x-expansionResources:
            oneOf:
              - $ref: "#/components/schemas/setup_intent"
        plan:
          $ref: "#/components/schemas/plan"
        quantity:
          description: The quantity of the plan to which the customer is subscribed. For
            example, if your plan is $10/user/month, and your customer has 5
            users, you could pass 5 as the quantity to have the customer charged
            $50 (5 x $10) monthly. Only set if the subscription contains a
            single plan.
          type: integer
        schedule:
          description: The schedule attached to the subscription
          type: string
          x-expansionResources:
            oneOf:
              - $ref: "#/components/schemas/subscription_schedule"
        start:
          description: Date of the last substantial change to this subscription. For
            example, a change to the items array, or a change of status, will
            reset this timestamp.
          type: integer
        start_date:
          description: Date when the subscription was first created. The date might differ
            from the `created` date due to backdating.
          type: integer
        status:
          description: >-
            Possible values are `incomplete`, `incomplete_expired`, `trialing`,
            `active`, `past_due`, `canceled`, or `unpaid`. 


            For `collection_method=charge_automatically` a subscription moves into `incomplete` if the initial payment attempt fails. A subscription in this state can only have metadata and default_source updated. Once the first invoice is paid, the subscription moves into an `active` state. If the first invoice is not paid within 23 hours, the subscription transitions to `incomplete_expired`. This is a terminal state, the open invoice will be voided and no further invoices will be generated. 


            A subscription that is currently in a trial period is `trialing` and moves to `active` when the trial period is over. 


            If subscription `collection_method=charge_automatically` it becomes `past_due` when payment to renew it fails and `canceled` or `unpaid` (depending on your subscriptions settings) when Stripe has exhausted all payment retry attempts. 


            If subscription `collection_method=send_invoice` it becomes `past_due` when its invoice is not paid by the due date, and `canceled` or `unpaid` if it is still not paid by an additional deadline after that. Note that when a subscription has a status of `unpaid`, no subsequent invoices will be attempted (invoices will be created, but then immediately automatically closed). After receiving updated payment information from a customer, you may choose to reopen and pay their closed invoices.
          enum:
            - active
            - canceled
            - incomplete
            - incomplete_expired
            - past_due
            - trialing
            - unpaid
          type: string
        tax_percent:
          description: If provided, each invoice created by this subscription will apply
            the tax rate, increasing the amount billed to the customer.
          type: number
        trial_end:
          description: If the subscription has a trial, the end of that trial.
          type: integer
        trial_start:
          description: If the subscription has a trial, the beginning of that trial.
          type: integer
      required:
        - billing_cycle_anchor
        - cancel_at_period_end
        - created
        - current_period_end
        - current_period_start
        - customer
        - id
        - items
        - livemode
        - metadata
        - object
        - start
        - start_date
        - status
      title: Subscription
      type: object
      x-expandableFields:
        - billing_thresholds
        - customer
        - default_payment_method
        - default_source
        - default_tax_rates
        - discount
        - items
        - latest_invoice
        - pending_setup_intent
        - plan
        - schedule
      x-resourceId: subscription
    subscription_billing_thresholds:
      properties:
        amount_gte:
          description: Monetary threshold that triggers the subscription to create an
            invoice
          type: integer
        reset_billing_cycle_anchor:
          description: Indicates if the `billing_cycle_anchor` should be reset when a
            threshold is reached. If true, `billing_cycle_anchor` will be
            updated to the date/time the threshold was last reached; otherwise,
            the value will remain unchanged. This value may not be `true` if the
            subscription contains items with plans that have
            `aggregate_usage=last_ever`.
          type: boolean
      title: SubscriptionBillingThresholds
      type: object
      x-expandableFields: []
    subscription_item:
      properties:
        billing_thresholds:
          $ref: "#/components/schemas/subscription_item_billing_thresholds"
        created:
          description: Time at which the object was created. Measured in seconds since the
            Unix epoch.
          type: integer
        id:
          description: Unique identifier for the object.
          type: string
        metadata:
          description: Set of key-value pairs that you can attach to an object. This can be
            useful for storing additional information about the object in a
            structured format.
          type: object
        object:
          description: String representing the object's type. Objects of the same type
            share the same value.
          enum:
            - subscription_item
          type: string
        plan:
          $ref: "#/components/schemas/plan"
        quantity:
          description: The [quantity](https://stripe.com/docs/subscriptions/quantities) of
            the plan to which the customer should be subscribed.
          type: integer
        subscription:
          description: The `subscription` this `subscription_item` belongs to.
          type: string
        tax_rates:
          description: The tax rates which apply to this `subscription_item`. When set, the
            `default_tax_rates` on the subscription do not apply to this
            `subscription_item`.
          items:
            $ref: "#/components/schemas/tax_rate"
          type: array
      required:
        - created
        - id
        - metadata
        - object
        - plan
        - subscription
      title: SubscriptionItem
      type: object
      x-expandableFields:
        - billing_thresholds
        - plan
        - tax_rates
      x-resourceId: subscription_item
    subscription_item_billing_thresholds:
      properties:
        usage_gte:
          description: Usage threshold that triggers the subscription to create an invoice
          type: integer
      title: SubscriptionItemBillingThresholds
      type: object
      x-expandableFields: []
    subscription_schedule:
      properties:
        billing:
          description: This field has been renamed to `collection_method` and will be
            removed in a future API version.
          enum:
            - charge_automatically
            - send_invoice
          type: string
        billing_thresholds:
          $ref: "#/components/schemas/subscription_billing_thresholds"
        canceled_at:
          description: Time at which the subscription schedule was canceled. Measured in
            seconds since the Unix epoch.
          type: integer
        collection_method:
          description: Either `charge_automatically`, or `send_invoice`. When charging
            automatically, Stripe will attempt to pay the underlying
            subscription at the end of each billing cycle using the default
            source attached to the customer. When sending an invoice, Stripe
            will email your customer an invoice with payment instructions.
          enum:
            - charge_automatically
            - send_invoice
          type: string
        completed_at:
          description: Time at which the subscription schedule was completed. Measured in
            seconds since the Unix epoch.
          type: integer
        created:
          description: Time at which the object was created. Measured in seconds since the
            Unix epoch.
          type: integer
        current_phase:
          $ref: "#/components/schemas/subscription_schedule_current_phase"
        customer:
          description: ID of the customer who owns the subscription schedule.
          type: string
          x-expansionResources:
            oneOf:
              - $ref: "#/components/schemas/customer"
              - $ref: "#/components/schemas/deleted_customer"
        default_payment_method:
          description: ID of the default payment method for the subscription schedule. It
            must belong to the customer associated with the subscription
            schedule. If not set, invoices will use the default payment method
            in the customer's invoice settings.
          type: string
          x-expansionResources:
            oneOf:
              - $ref: "#/components/schemas/payment_method"
        end_behavior:
          description: Behavior of the subscription schedule and underlying subscription
            when it ends.
          enum:
            - cancel
            - release
          type: string
        id:
          description: Unique identifier for the object.
          type: string
        invoice_settings:
          $ref: "#/components/schemas/invoice_setting_subscription_schedule_setting"
        livemode:
          description: Has the value `true` if the object exists in live mode or the value
            `false` if the object exists in test mode.
          type: boolean
        metadata:
          description: Set of key-value pairs that you can attach to an object. This can be
            useful for storing additional information about the object in a
            structured format.
          type: object
        object:
          description: String representing the object's type. Objects of the same type
            share the same value.
          enum:
            - subscription_schedule
          type: string
        phases:
          description: Configuration for the subscription schedule's phases.
          items:
            $ref: "#/components/schemas/subscription_schedule_phase_configuration"
          type: array
        released_at:
          description: Time at which the subscription schedule was released. Measured in
            seconds since the Unix epoch.
          type: integer
        released_subscription:
          description: ID of the subscription once managed by the subscription schedule (if
            it is released).
          type: string
        renewal_behavior:
          description: Behavior of the subscription schedule and underlying subscription
            when it ends.
          enum:
            - cancel
            - none
            - release
            - renew
          type: string
        renewal_interval:
          $ref: "#/components/schemas/subscription_schedule_renewal_interval"
        status:
          description: Possible values are `not_started`, `active`, `completed`,
            `released`, and `canceled`.
          enum:
            - active
            - canceled
            - completed
            - not_started
            - released
          type: string
        subscription:
          description: ID of the subscription managed by the subscription schedule.
          type: string
          x-expansionResources:
            oneOf:
              - $ref: "#/components/schemas/subscription"
      required:
        - created
        - customer
        - id
        - livemode
        - object
        - phases
        - status
      title: SubscriptionSchedule
      type: object
      x-expandableFields:
        - billing_thresholds
        - current_phase
        - customer
        - default_payment_method
        - invoice_settings
        - phases
        - renewal_interval
        - subscription
      x-resourceId: subscription_schedule
    subscription_schedule_configuration_item:
      properties:
        billing_thresholds:
          $ref: "#/components/schemas/subscription_item_billing_thresholds"
        plan:
          description: ID of the plan to which the customer should be subscribed.
          type: string
          x-expansionResources:
            oneOf:
              - $ref: "#/components/schemas/plan"
              - $ref: "#/components/schemas/deleted_plan"
        quantity:
          description: Quantity of the plan to which the customer should be subscribed.
          type: integer
        tax_rates:
          description: The tax rates which apply to this `phase_item`. When set, the
            `default_tax_rates` on the phase do not apply to this `phase_item`.
          items:
            $ref: "#/components/schemas/tax_rate"
          type: array
      required:
        - plan
      title: SubscriptionScheduleConfigurationItem
      type: object
      x-expandableFields:
        - billing_thresholds
        - plan
        - tax_rates
    subscription_schedule_current_phase:
      properties:
        end_date:
          type: integer
        start_date:
          type: integer
      required:
        - end_date
        - start_date
      title: SubscriptionScheduleCurrentPhase
      type: object
      x-expandableFields: []
    subscription_schedule_phase_configuration:
      properties:
        application_fee_percent:
          description: A non-negative decimal between 0 and 100, with at most two decimal
            places. This represents the percentage of the subscription invoice
            subtotal that will be transferred to the application owner's Stripe
            account during this phase of the schedule.
          type: number
        billing_thresholds:
          $ref: "#/components/schemas/subscription_billing_thresholds"
        collection_method:
          description: Either `charge_automatically`, or `send_invoice`. When charging
            automatically, Stripe will attempt to pay the underlying
            subscription at the end of each billing cycle using the default
            source attached to the customer. When sending an invoice, Stripe
            will email your customer an invoice with payment instructions.
          enum:
            - charge_automatically
            - send_invoice
          type: string
        coupon:
          description: ID of the coupon to use during this phase of the subscription
            schedule.
          type: string
          x-expansionResources:
            oneOf:
              - $ref: "#/components/schemas/coupon"
        default_payment_method:
          description: ID of the default payment method for the subscription schedule. It
            must belong to the customer associated with the subscription
            schedule. If not set, invoices will use the default payment method
            in the customer's invoice settings.
          type: string
          x-expansionResources:
            oneOf:
              - $ref: "#/components/schemas/payment_method"
        default_tax_rates:
          items:
            $ref: "#/components/schemas/tax_rate"
          type: array
        end_date:
          description: The end of this phase of the subscription schedule.
          type: integer
        invoice_settings:
          $ref: "#/components/schemas/invoice_setting_subscription_schedule_setting"
        plans:
          description: Plans to subscribe during this phase of the subscription schedule.
          items:
            $ref: "#/components/schemas/subscription_schedule_configuration_item"
          type: array
        start_date:
          description: The start of this phase of the subscription schedule.
          type: integer
        tax_percent:
          description: If provided, each invoice created during this phase of the
            subscription schedule will apply the tax rate, increasing the amount
            billed to the customer.
          type: number
        trial_end:
          description: When the trial ends within the phase.
          type: integer
      required:
        - end_date
        - plans
        - start_date
      title: SubscriptionSchedulePhaseConfiguration
      type: object
      x-expandableFields:
        - billing_thresholds
        - coupon
        - default_payment_method
        - default_tax_rates
        - invoice_settings
        - plans
    subscription_schedule_renewal_interval:
      properties:
        interval:
          description: Interval at which to renew the subscription schedule for when it
            ends.
          enum:
            - day
            - month
            - week
            - year
          type: string
        length:
          description: Number of intervals to renew the subscription schedule for when it
            ends.
          type: integer
      required:
        - interval
        - length
      title: SubscriptionScheduleRenewalInterval
      type: object
      x-expandableFields: []
    tax_id:
      properties:
        country:
          description: Two-letter ISO code representing the country of the tax ID.
          type: string
        created:
          description: Time at which the object was created. Measured in seconds since the
            Unix epoch.
          type: integer
        customer:
          description: ID of the customer.
          type: string
          x-expansionResources:
            oneOf:
              - $ref: "#/components/schemas/customer"
        id:
          description: Unique identifier for the object.
          type: string
        livemode:
          description: Has the value `true` if the object exists in live mode or the value
            `false` if the object exists in test mode.
          type: boolean
        object:
          description: String representing the object's type. Objects of the same type
            share the same value.
          enum:
            - tax_id
          type: string
        type:
          description: Type of the tax ID, one of `au_abn`, `eu_vat`, `in_gst`, `no_vat`,
            `nz_gst`, or `unknown`
          enum:
            - au_abn
            - eu_vat
            - in_gst
            - no_vat
            - nz_gst
            - unknown
          type: string
        value:
          description: Value of the tax ID.
          type: string
        verification:
          $ref: "#/components/schemas/tax_id_verification"
      required:
        - created
        - customer
        - id
        - livemode
        - object
        - type
        - value
        - verification
      title: tax_id
      type: object
      x-expandableFields:
        - customer
        - verification
      x-resourceId: tax_id
    tax_id_verification:
      properties:
        status:
          description: Verification status, one of `pending`, `unavailable`, `unverified`,
            or `verified`.
          enum:
            - pending
            - unavailable
            - unverified
            - verified
          type: string
        verified_address:
          description: Verified address.
          type: string
        verified_name:
          description: Verified name.
          type: string
      required:
        - status
      title: tax_id_verification
      type: object
      x-expandableFields: []
    tax_info:
      properties:
        tax_id:
          description: The customer's tax ID number.
          type: string
        type:
          description: The type of ID number.
          type: string
      required:
        - type
      title: TaxInfo
      type: object
      x-expandableFields: []
    tax_info_verification:
      properties:
        status:
          description: The state of verification for this customer. Possible values are
            `unverified`, `pending`, or `verified`.
          type: string
        verified_name:
          description: The official name associated with the tax ID returned from the
            external provider.
          type: string
      title: TaxInfoVerification
      type: object
      x-expandableFields: []
    tax_rate:
      properties:
        active:
          description: Defaults to `true`. When set to `false`, this tax rate cannot be
            applied to objects in the API, but will still be applied to
            subscriptions and invoices that already have it set.
          type: boolean
        created:
          description: Time at which the object was created. Measured in seconds since the
            Unix epoch.
          type: integer
        description:
          description: An arbitrary string attached to the tax rate for your internal use
            only. It will not be visible to your customers.
          type: string
        display_name:
          description: The display name of the tax rates as it will appear to your customer
            on their receipt email, PDF, and the hosted invoice page.
          type: string
        id:
          description: Unique identifier for the object.
          type: string
        inclusive:
          description: This specifies if the tax rate is inclusive or exclusive.
          type: boolean
        jurisdiction:
          description: The jurisdiction for the tax rate.
          type: string
        livemode:
          description: Has the value `true` if the object exists in live mode or the value
            `false` if the object exists in test mode.
          type: boolean
        metadata:
          description: Set of key-value pairs that you can attach to an object. This can be
            useful for storing additional information about the object in a
            structured format.
          type: object
        object:
          description: String representing the object's type. Objects of the same type
            share the same value.
          enum:
            - tax_rate
          type: string
        percentage:
          description: This represents the tax rate percent out of 100.
          type: number
      required:
        - active
        - created
        - display_name
        - id
        - inclusive
        - livemode
        - metadata
        - object
        - percentage
      title: TaxRate
      type: object
      x-expandableFields: []
      x-resourceId: tax_rate
    terminal.connection_token:
      properties:
        location:
          description: The id of the location that this connection token is scoped to.
          type: string
        object:
          description: String representing the object's type. Objects of the same type
            share the same value.
          enum:
            - terminal.connection_token
          type: string
        secret:
          description: Your application should pass this token to the Stripe Terminal SDK.
          type: string
      required:
        - object
        - secret
      title: TerminalConnectionToken
      type: object
      x-expandableFields: []
      x-resourceId: terminal.connection_token
    terminal.location:
      properties:
        address:
          $ref: "#/components/schemas/address"
        display_name:
          description: The display name of the location.
          type: string
        id:
          description: Unique identifier for the object.
          type: string
        object:
          description: String representing the object's type. Objects of the same type
            share the same value.
          enum:
            - terminal.location
          type: string
      required:
        - address
        - display_name
        - id
        - object
      title: TerminalLocationLocation
      type: object
      x-expandableFields:
        - address
      x-resourceId: terminal.location
    terminal.reader:
      properties:
        device_sw_version:
          description: The current software version of the reader.
          type: string
        device_type:
          description: Type of reader, e.g., `verifone_P400` or `bbpos_chipper2x`.
          type: string
        id:
          description: Unique identifier for the object.
          type: string
        ip_address:
          description: The local IP address of the reader.
          type: string
        label:
          description: Custom label given to the reader for easier identification.
          type: string
        location:
          description: The location identifier of the reader.
          type: string
        object:
          description: String representing the object's type. Objects of the same type
            share the same value.
          enum:
            - terminal.reader
          type: string
        serial_number:
          description: Serial number of the reader.
          type: string
        status:
          description: The networking status of the reader.
          type: string
      required:
        - device_type
        - id
        - label
        - object
        - serial_number
      title: TerminalReaderReader
      type: object
      x-expandableFields: []
      x-resourceId: terminal.reader
    three_d_secure:
      properties:
        amount:
          type: integer
        authenticated:
          description: True if the cardholder went through the authentication flow and
            their bank indicated that authentication succeeded.
          type: boolean
        card:
          $ref: "#/components/schemas/card"
        created:
          description: Time at which the object was created. Measured in seconds since the
            Unix epoch.
          type: integer
        currency:
          description: Three-letter [ISO currency
            code](https://www.iso.org/iso-4217-currency-codes.html), in
            lowercase. Must be a [supported
            currency](https://stripe.com/docs/currencies).
          type: string
        id:
          description: Unique identifier for the object.
          type: string
        livemode:
          description: Has the value `true` if the object exists in live mode or the value
            `false` if the object exists in test mode.
          type: boolean
        object:
          description: String representing the object's type. Objects of the same type
            share the same value.
          enum:
            - three_d_secure
          type: string
        redirect_url:
          description: If present, this is the URL that you should send the cardholder to
            for authentication. If you are going to use Stripe.js to display the
            authentication page in an iframe, you should use the value
            "_callback".
          type: string
        status:
          description: Possible values are `redirect_pending`, `succeeded`, or `failed`.
            When the cardholder can be authenticated, the object starts with
            status `redirect_pending`. When liability will be shifted to the
            cardholder's bank (either because the cardholder was successfully
            authenticated, or because the bank has not implemented 3D Secure,
            the object wlil be in status `succeeded`. `failed` indicates that
            authentication was attempted unsuccessfully.
          type: string
      required:
        - amount
        - authenticated
        - card
        - created
        - currency
        - id
        - livemode
        - object
        - status
      title: ThreeDSecure
      type: object
      x-expandableFields:
        - card
      x-resourceId: three_d_secure
    three_d_secure_details:
      properties:
        authenticated:
          description: Whether or not authentication was performed. 3D Secure will succeed
            without authentication when the card is not enrolled.
          type: boolean
        succeeded:
          description: Whether or not 3D Secure succeeded.
          type: boolean
        version:
          description: The version of 3D Secure that was used for this payment.
          type: string
      required:
        - authenticated
        - succeeded
        - version
      title: three_d_secure_details
      type: object
      x-expandableFields: []
    three_d_secure_usage:
      properties:
        supported:
          description: Whether 3D Secure is supported on this card.
          type: boolean
      required:
        - supported
      title: three_d_secure_usage
      type: object
      x-expandableFields: []
    token:
      properties:
        bank_account:
          $ref: "#/components/schemas/bank_account"
        card:
          $ref: "#/components/schemas/card"
        client_ip:
          description: IP address of the client that generated the token.
          type: string
        created:
          description: Time at which the object was created. Measured in seconds since the
            Unix epoch.
          type: integer
        id:
          description: Unique identifier for the object.
          type: string
        livemode:
          description: Has the value `true` if the object exists in live mode or the value
            `false` if the object exists in test mode.
          type: boolean
        object:
          description: String representing the object's type. Objects of the same type
            share the same value.
          enum:
            - token
          type: string
        type:
          description: "Type of the token: `account`, `bank_account`, `card`, or `pii`."
          type: string
        used:
          description: Whether this token has already been used (tokens can be used only
            once).
          type: boolean
      required:
        - created
        - id
        - livemode
        - object
        - type
        - used
      title: Token
      type: object
      x-expandableFields:
        - bank_account
        - card
      x-resourceId: token
    topup:
      properties:
        amount:
          description: Amount transferred.
          type: integer
        balance_transaction:
          description: ID of the balance transaction that describes the impact of this
            top-up on your account balance. May not be specified depending on
            status of top-up.
          type: string
          x-expansionResources:
            oneOf:
              - $ref: "#/components/schemas/balance_transaction"
        created:
          description: Time at which the object was created. Measured in seconds since the
            Unix epoch.
          type: integer
        currency:
          description: Three-letter [ISO currency
            code](https://www.iso.org/iso-4217-currency-codes.html), in
            lowercase. Must be a [supported
            currency](https://stripe.com/docs/currencies).
          type: string
        description:
          description: An arbitrary string attached to the object. Often useful for
            displaying to users.
          type: string
        expected_availability_date:
          description: Date the funds are expected to arrive in your Stripe account for
            payouts. This factors in delays like weekends or bank holidays. May
            not be specified depending on status of top-up.
          type: integer
        failure_code:
          description: Error code explaining reason for top-up failure if available (see
            [the errors section](https://stripe.com/docs/api#errors) for a list
            of codes).
          type: string
        failure_message:
          description: Message to user further explaining reason for top-up failure if
            available.
          type: string
        id:
          description: Unique identifier for the object.
          type: string
        livemode:
          description: Has the value `true` if the object exists in live mode or the value
            `false` if the object exists in test mode.
          type: boolean
        metadata:
          description: Set of key-value pairs that you can attach to an object. This can be
            useful for storing additional information about the object in a
            structured format.
          type: object
        object:
          description: String representing the object's type. Objects of the same type
            share the same value.
          enum:
            - topup
          type: string
        source:
          $ref: "#/components/schemas/source"
        statement_descriptor:
          description: Extra information about a top-up. This will appear on your source's
            bank statement. It must contain at least one letter.
          type: string
        status:
          description: The status of the top-up is either `canceled`, `failed`, `pending`,
            `reversed`, or `succeeded`.
          enum:
            - canceled
            - failed
            - pending
            - reversed
            - succeeded
          type: string
        transfer_group:
          description: A string that identifies this top-up as part of a group.
          type: string
      required:
        - amount
        - created
        - currency
        - id
        - livemode
        - metadata
        - object
        - source
        - status
      title: Topup
      type: object
      x-expandableFields:
        - balance_transaction
        - source
      x-resourceId: topup
    transfer:
      properties:
        amount:
          description: Amount in %s to be transferred.
          type: integer
        amount_reversed:
          description: Amount in %s reversed (can be less than the amount attribute on the
            transfer if a partial reversal was issued).
          type: integer
        balance_transaction:
          description: Balance transaction that describes the impact of this transfer on
            your account balance.
          type: string
          x-expansionResources:
            oneOf:
              - $ref: "#/components/schemas/balance_transaction"
        created:
          description: Time that this record of the transfer was first created.
          type: integer
        currency:
          description: Three-letter [ISO currency
            code](https://www.iso.org/iso-4217-currency-codes.html), in
            lowercase. Must be a [supported
            currency](https://stripe.com/docs/currencies).
          type: string
        description:
          description: An arbitrary string attached to the object. Often useful for
            displaying to users.
          type: string
        destination:
          description: ID of the Stripe account the transfer was sent to.
          type: string
          x-expansionResources:
            oneOf:
              - $ref: "#/components/schemas/account"
        destination_payment:
          description: If the destination is a Stripe account, this will be the ID of the
            payment that the destination account received for the transfer.
          type: string
          x-expansionResources:
            oneOf:
              - $ref: "#/components/schemas/charge"
        id:
          description: Unique identifier for the object.
          type: string
        livemode:
          description: Has the value `true` if the object exists in live mode or the value
            `false` if the object exists in test mode.
          type: boolean
        metadata:
          description: A set of key-value pairs that you can attach to a transfer object.
            It can be useful for storing additional information about the
            transfer in a structured format.
          type: object
        object:
          description: String representing the object's type. Objects of the same type
            share the same value.
          enum:
            - transfer
          type: string
        reversals:
          description: A list of reversals that have been applied to the transfer.
          properties:
            data:
              items:
                $ref: "#/components/schemas/transfer_reversal"
              type: array
            has_more:
              description: True if this list has another page of items after this one that
                can be fetched.
              type: boolean
            object:
              description: String representing the object's type. Objects of the same type
                share the same value. Always has the value `list`.
              enum:
                - list
              type: string
            url:
              description: The URL where this list can be accessed.
              type: string
          required:
            - data
            - has_more
            - object
            - url
          title: TransferReversalList
          type: object
          x-expandableFields:
            - data
        reversed:
          description: Whether the transfer has been fully reversed. If the transfer is
            only partially reversed, this attribute will still be false.
          type: boolean
        source_transaction:
          description: ID of the charge or payment that was used to fund the transfer. If
            null, the transfer was funded from the available balance.
          type: string
          x-expansionResources:
            oneOf:
              - $ref: "#/components/schemas/charge"
        source_type:
          description: The source balance this transfer came from. One of `card` or
            `bank_account`.
          type: string
        transfer_group:
          description: A string that identifies this transaction as part of a group. See
            the [Connect
            documentation](https://stripe.com/docs/connect/charges-transfers#grouping-transactions)
            for details.
          type: string
      required:
        - amount
        - amount_reversed
        - created
        - currency
        - id
        - livemode
        - metadata
        - object
        - reversals
        - reversed
      title: Transfer
      type: object
      x-expandableFields:
        - balance_transaction
        - destination
        - destination_payment
        - reversals
        - source_transaction
      x-resourceId: transfer
    transfer_data:
      properties:
        amount:
          description: A positive integer representing how much to charge in the [smallest
            currency unit](https://stripe.com/docs/currencies#zero-decimal)
            (e.g., 100 cents to charge $1.00 or 100 to charge ¥100, a
            zero-decimal currency). The minimum amount is $0.50 US or
            [equivalent in charge
            currency](https://stripe.com/docs/currencies#minimum-and-maximum-charge-amounts).
            The amount value supports up to eight digits (e.g., a value of
            99999999 for a USD charge of $999,999.99).
          type: integer
        destination:
          description: >-
            The account (if any) the payment will be attributed to for tax

            reporting, and where funds from the payment will be transferred to upon

            payment success.
          type: string
          x-expansionResources:
            oneOf:
              - $ref: "#/components/schemas/account"
      required:
        - destination
      title: transfer_data
      type: object
      x-expandableFields:
        - destination
    transfer_reversal:
      properties:
        amount:
          description: Amount, in %s.
          type: integer
        balance_transaction:
          description: Balance transaction that describes the impact on your account
            balance.
          type: string
          x-expansionResources:
            oneOf:
              - $ref: "#/components/schemas/balance_transaction"
        created:
          description: Time at which the object was created. Measured in seconds since the
            Unix epoch.
          type: integer
        currency:
          description: Three-letter [ISO currency
            code](https://www.iso.org/iso-4217-currency-codes.html), in
            lowercase. Must be a [supported
            currency](https://stripe.com/docs/currencies).
          type: string
        destination_payment_refund:
          description: Linked payment refund for the transfer reversal.
          type: string
          x-expansionResources:
            oneOf:
              - $ref: "#/components/schemas/refund"
        id:
          description: Unique identifier for the object.
          type: string
        metadata:
          description: Set of key-value pairs that you can attach to an object. This can be
            useful for storing additional information about the object in a
            structured format.
          type: object
        object:
          description: String representing the object's type. Objects of the same type
            share the same value.
          enum:
            - transfer_reversal
          type: string
        source_refund:
          description: ID of the refund responsible for the transfer reversal.
          type: string
          x-expansionResources:
            oneOf:
              - $ref: "#/components/schemas/refund"
        transfer:
          description: ID of the transfer that was reversed.
          type: string
          x-expansionResources:
            oneOf:
              - $ref: "#/components/schemas/transfer"
      required:
        - amount
        - created
        - currency
        - id
        - metadata
        - object
        - transfer
      title: TransferReversal
      type: object
      x-expandableFields:
        - balance_transaction
        - destination_payment_refund
        - source_refund
        - transfer
      x-resourceId: transfer_reversal
    transfer_schedule:
      properties:
        delay_days:
          description: The number of days charges for the account will be held before being
            paid out.
          type: integer
        interval:
          description: How frequently funds will be paid out. One of `manual` (payouts only
            created via API call), `daily`, `weekly`, or `monthly`.
          type: string
        monthly_anchor:
          description: The day of the month funds will be paid out. Only shown if
            `interval` is monthly. Payouts scheduled between the 29th and 31st
            of the month are sent on the last day of shorter months.
          type: integer
        weekly_anchor:
          description: The day of the week funds will be paid out, of the style 'monday',
            'tuesday', etc. Only shown if `interval` is weekly.
          type: string
      required:
        - delay_days
        - interval
      title: TransferSchedule
      type: object
      x-expandableFields: []
    transform_usage:
      properties:
        divide_by:
          description: Divide usage by this number.
          type: integer
        round:
          description: After division, either round the result `up` or `down`.
          enum:
            - down
            - up
          type: string
      required:
        - divide_by
        - round
      title: TransformUsage
      type: object
      x-expandableFields: []
    usage_record:
      properties:
        id:
          description: Unique identifier for the object.
          type: string
        livemode:
          description: Has the value `true` if the object exists in live mode or the value
            `false` if the object exists in test mode.
          type: boolean
        object:
          description: String representing the object's type. Objects of the same type
            share the same value.
          enum:
            - usage_record
          type: string
        quantity:
          description: The usage quantity for the specified date.
          type: integer
        subscription_item:
          description: The ID of the subscription item this usage record contains data for.
          type: string
        timestamp:
          description: The timestamp when this usage occurred.
          type: integer
      required:
        - id
        - livemode
        - object
        - quantity
        - subscription_item
        - timestamp
      title: UsageRecord
      type: object
      x-expandableFields: []
      x-resourceId: usage_record
    usage_record_summary:
      properties:
        id:
          description: Unique identifier for the object.
          type: string
        invoice:
          description: The invoice in which this usage period has been billed for.
          type: string
        livemode:
          description: Has the value `true` if the object exists in live mode or the value
            `false` if the object exists in test mode.
          type: boolean
        object:
          description: String representing the object's type. Objects of the same type
            share the same value.
          enum:
            - usage_record_summary
          type: string
        period:
          $ref: "#/components/schemas/period"
        subscription_item:
          description: The ID of the subscription item this summary is describing.
          type: string
        total_usage:
          description: The total usage within this usage period.
          type: integer
      required:
        - id
        - livemode
        - object
        - period
        - subscription_item
        - total_usage
      title: UsageRecordSummary
      type: object
      x-expandableFields:
        - period
      x-resourceId: usage_record_summary
    webhook_endpoint:
      properties:
        api_version:
          description: The API version events are rendered as for this webhook endpoint.
          type: string
        application:
          description: The ID of the associated Connect application.
          type: string
        created:
          description: Time at which the object was created. Measured in seconds since the
            Unix epoch.
          type: integer
        enabled_events:
          description: The list of events to enable for this endpoint. You may specify
            `['*']` to enable all events.
          items:
            type: string
          type: array
        id:
          description: Unique identifier for the object.
          type: string
        livemode:
          description: Has the value `true` if the object exists in live mode or the value
            `false` if the object exists in test mode.
          type: boolean
        object:
          description: String representing the object's type. Objects of the same type
            share the same value.
          enum:
            - webhook_endpoint
          type: string
        secret:
          description: The endpoint's secret, used to generate [webhook
            signatures](https://stripe.com/docs/webhooks/signatures). Only
            returned at creation.
          type: string
        status:
          description: The status of the webhook. It can be `enabled` or `disabled`.
          type: string
        url:
          description: The URL of the webhook endpoint.
          type: string
      required:
        - created
        - enabled_events
        - id
        - livemode
        - object
        - status
        - url
      title: NotificationWebhookEndpoint
      type: object
      x-expandableFields: []
      x-resourceId: webhook_endpoint
