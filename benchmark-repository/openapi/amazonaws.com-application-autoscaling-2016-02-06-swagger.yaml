openapi: 3.0.0
info:
  version: 2016-02-06
  x-release: v4
  title: Application Auto Scaling
  description: '<p>With Application Auto Scaling, you can configure automatic scaling for
    the following resources:</p> <ul> <li> <p>Amazon ECS services</p> </li> <li>
    <p>Amazon EC2 Spot Fleet requests</p> </li> <li> <p>Amazon EMR clusters</p>
    </li> <li> <p>Amazon AppStream 2.0 fleets</p> </li> <li> <p>Amazon DynamoDB
    tables and global secondary indexes throughput capacity</p> </li> <li>
    <p>Amazon Aurora Replicas</p> </li> <li> <p>Amazon SageMaker endpoint
    variants</p> </li> <li> <p>Custom resources provided by your own
    applications or services</p> </li> </ul> <p> <b>API Summary</b> </p> <p>The
    Application Auto Scaling service API includes three key sets of actions:
    </p> <ul> <li> <p>Register and manage scalable targets - Register AWS or
    custom resources as scalable targets (a resource that Application Auto
    Scaling can scale), set minimum and maximum capacity limits, and retrieve
    information on existing scalable targets.</p> </li> <li> <p>Configure and
    manage automatic scaling - Define scaling policies to dynamically scale your
    resources in response to CloudWatch alarms, schedule one-time or recurring
    scaling actions, and retrieve your recent scaling activity history.</p>
    </li> <li> <p>Suspend and resume scaling - Temporarily suspend and later
    resume automatic scaling by calling the <a>RegisterScalableTarget</a> action
    for any Application Auto Scaling scalable target. You can suspend and
    resume, individually or in combination, scale-out activities triggered by a
    scaling policy, scale-in activities triggered by a scaling policy, and
    scheduled scaling. </p> </li> </ul> <p>To learn more about Application Auto
    Scaling, including information about granting IAM users required permissions
    for Application Auto Scaling actions, see the <a
    href="https://docs.aws.amazon.com/autoscaling/application/userguide/what-is-application-auto-scaling.html">Application
    Auto Scaling User Guide</a>.</p>'
  x-logo:
    url: https://twitter.com/awscloud/profile_image?size=original
    backgroundColor: "#FFFFFF"
  termsOfService: https://aws.amazon.com/service-terms/
  contact:
    name: Mike Ralphson
    email: mike.ralphson@gmail.com
    url: https://github.com/mermade/aws2openapi
    x-twitter: PermittedSoc
  license:
    name: Apache 2.0 License
    url: http://www.apache.org/licenses/
  x-providerName: amazonaws.com
  x-serviceName: application-autoscaling
  x-origin:
    - contentType: application/json
      url: https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/application-autoscaling-2016-02-06.normal.json
      converter:
        url: https://github.com/mermade/aws2openapi
        version: 1.0.0
      x-apisguru-direct: true
  x-apiClientRegistration:
    url: https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct
  x-apisguru-categories:
    - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: https://docs.aws.amazon.com/autoscaling/
x-hasEquivalentPaths: true
security:
  - hmac: []
paths:
  /#X-Amz-Target=AnyScaleFrontendService.DeleteScalingPolicy:
    post:
      operationId: DeleteScalingPolicy
      description: <p>Deletes the specified scaling policy for an Application Auto Scaling
        scalable target.</p> <p>Deleting a step scaling policy deletes the
        underlying alarm action, but does not delete the CloudWatch alarm
        associated with the scaling policy, even if it no longer has an
        associated action.</p> <p>For more information, see <a
        href="https://docs.aws.amazon.com/autoscaling/application/userguide/application-auto-scaling-step-scaling-policies.html#delete-step-scaling-policy">Delete
        a Step Scaling Policy</a> and <a
        href="https://docs.aws.amazon.com/autoscaling/application/userguide/application-auto-scaling-target-tracking.html#delete-target-tracking-policy">Delete
        a Target Tracking Scaling Policy</a> in the <i>Application Auto Scaling
        User Guide</i>.</p> <p>To create a scaling policy or update an existing
        one, see <a>PutScalingPolicy</a>.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteScalingPolicyResponse"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: ObjectNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ObjectNotFoundException"
        "482":
          description: ConcurrentUpdateException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConcurrentUpdateException"
        "483":
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServiceException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AnyScaleFrontendService.DeleteScalingPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeleteScalingPolicyRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AnyScaleFrontendService.DeleteScheduledAction:
    post:
      operationId: DeleteScheduledAction
      description: <p>Deletes the specified scheduled action for an Application Auto
        Scaling scalable target.</p> <p>For more information, see <a
        href="https://docs.aws.amazon.com/autoscaling/application/userguide/application-auto-scaling-scheduled-scaling.html#delete-scheduled-action">Delete
        a Scheduled Action</a> in the <i>Application Auto Scaling User
        Guide</i>.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteScheduledActionResponse"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: ObjectNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ObjectNotFoundException"
        "482":
          description: ConcurrentUpdateException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConcurrentUpdateException"
        "483":
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServiceException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AnyScaleFrontendService.DeleteScheduledAction
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeleteScheduledActionRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AnyScaleFrontendService.DeregisterScalableTarget:
    post:
      operationId: DeregisterScalableTarget
      description: <p>Deregisters an Application Auto Scaling scalable target.</p>
        <p>Deregistering a scalable target deletes the scaling policies that are
        associated with it.</p> <p>To create a scalable target or update an
        existing one, see <a>RegisterScalableTarget</a>. </p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeregisterScalableTargetResponse"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: ObjectNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ObjectNotFoundException"
        "482":
          description: ConcurrentUpdateException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConcurrentUpdateException"
        "483":
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServiceException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AnyScaleFrontendService.DeregisterScalableTarget
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeregisterScalableTargetRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AnyScaleFrontendService.DescribeScalableTargets:
    post:
      operationId: DescribeScalableTargets
      description: <p>Gets information about the scalable targets in the specified
        namespace.</p> <p>You can filter the results using
        <code>ResourceIds</code> and <code>ScalableDimension</code>.</p> <p>To
        create a scalable target or update an existing one, see
        <a>RegisterScalableTarget</a>. If you are no longer using a scalable
        target, you can deregister it using <a>DeregisterScalableTarget</a>.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeScalableTargetsResponse"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: InvalidNextTokenException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidNextTokenException"
        "482":
          description: ConcurrentUpdateException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConcurrentUpdateException"
        "483":
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServiceException"
      parameters:
        - name: MaxResults
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: NextToken
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AnyScaleFrontendService.DescribeScalableTargets
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DescribeScalableTargetsRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AnyScaleFrontendService.DescribeScalingActivities:
    post:
      operationId: DescribeScalingActivities
      description: <p>Provides descriptive information about the scaling activities in the
        specified namespace from the previous six weeks.</p> <p>You can filter
        the results using <code>ResourceId</code> and
        <code>ScalableDimension</code>.</p> <p>Scaling activities are triggered
        by CloudWatch alarms that are associated with scaling policies. To view
        the scaling policies for a service namespace, see
        <a>DescribeScalingPolicies</a>. To create a scaling policy or update an
        existing one, see <a>PutScalingPolicy</a>.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeScalingActivitiesResponse"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: InvalidNextTokenException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidNextTokenException"
        "482":
          description: ConcurrentUpdateException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConcurrentUpdateException"
        "483":
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServiceException"
      parameters:
        - name: MaxResults
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: NextToken
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AnyScaleFrontendService.DescribeScalingActivities
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DescribeScalingActivitiesRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AnyScaleFrontendService.DescribeScalingPolicies:
    post:
      operationId: DescribeScalingPolicies
      description: <p>Describes the Application Auto Scaling scaling policies for the
        specified service namespace.</p> <p>You can filter the results using
        <code>ResourceId</code>, <code>ScalableDimension</code>, and
        <code>PolicyNames</code>.</p> <p>To create a scaling policy or update an
        existing one, see <a>PutScalingPolicy</a>. If you are no longer using a
        scaling policy, you can delete it using <a>DeleteScalingPolicy</a>.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeScalingPoliciesResponse"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: FailedResourceAccessException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResourceAccessException"
        "482":
          description: InvalidNextTokenException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidNextTokenException"
        "483":
          description: ConcurrentUpdateException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConcurrentUpdateException"
        "484":
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServiceException"
      parameters:
        - name: MaxResults
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: NextToken
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AnyScaleFrontendService.DescribeScalingPolicies
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DescribeScalingPoliciesRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AnyScaleFrontendService.DescribeScheduledActions:
    post:
      operationId: DescribeScheduledActions
      description: <p>Describes the Application Auto Scaling scheduled actions for the
        specified service namespace.</p> <p>You can filter the results using the
        <code>ResourceId</code>, <code>ScalableDimension</code>, and
        <code>ScheduledActionNames</code> parameters.</p> <p>To create a
        scheduled action or update an existing one, see
        <a>PutScheduledAction</a>. If you are no longer using a scheduled
        action, you can delete it using <a>DeleteScheduledAction</a>.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeScheduledActionsResponse"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: InvalidNextTokenException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidNextTokenException"
        "482":
          description: ConcurrentUpdateException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConcurrentUpdateException"
        "483":
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServiceException"
      parameters:
        - name: MaxResults
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: NextToken
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AnyScaleFrontendService.DescribeScheduledActions
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DescribeScheduledActionsRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AnyScaleFrontendService.PutScalingPolicy:
    post:
      operationId: PutScalingPolicy
      description: <p>Creates or updates a policy for an Application Auto Scaling scalable
        target.</p> <p>Each scalable target is identified by a service
        namespace, resource ID, and scalable dimension. A scaling policy applies
        to the scalable target identified by those three attributes. You cannot
        create a scaling policy until you have registered the resource as a
        scalable target using <a>RegisterScalableTarget</a>.</p> <p>To update a
        policy, specify its policy name and the parameters that you want to
        change. Any parameters that you don't specify are not changed by this
        update request.</p> <p>You can view the scaling policies for a service
        namespace using <a>DescribeScalingPolicies</a>. If you are no longer
        using a scaling policy, you can delete it using
        <a>DeleteScalingPolicy</a>.</p> <p>Multiple scaling policies can be in
        force at the same time for the same scalable target. You can have one or
        more target tracking scaling policies, one or more step scaling
        policies, or both. However, there is a chance that multiple policies
        could conflict, instructing the scalable target to scale out or in at
        the same time. Application Auto Scaling gives precedence to the policy
        that provides the largest capacity for both scale out and scale in. For
        example, if one policy increases capacity by 3, another policy increases
        capacity by 200 percent, and the current capacity is 10, Application
        Auto Scaling uses the policy with the highest calculated capacity (200%
        of 10 = 20) and scales out to 30. </p> <p>Learn more about how to work
        with scaling policies in the <a
        href="https://docs.aws.amazon.com/autoscaling/application/userguide/what-is-application-auto-scaling.html">Application
        Auto Scaling User Guide</a>.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PutScalingPolicyResponse"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
        "482":
          description: ObjectNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ObjectNotFoundException"
        "483":
          description: ConcurrentUpdateException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConcurrentUpdateException"
        "484":
          description: FailedResourceAccessException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResourceAccessException"
        "485":
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServiceException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AnyScaleFrontendService.PutScalingPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PutScalingPolicyRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AnyScaleFrontendService.PutScheduledAction:
    post:
      operationId: PutScheduledAction
      description: <p>Creates or updates a scheduled action for an Application Auto Scaling
        scalable target.</p> <p>Each scalable target is identified by a service
        namespace, resource ID, and scalable dimension. A scheduled action
        applies to the scalable target identified by those three attributes. You
        cannot create a scheduled action until you have registered the resource
        as a scalable target using <a>RegisterScalableTarget</a>. </p> <p>To
        update an action, specify its name and the parameters that you want to
        change. If you don't specify start and end times, the old values are
        deleted. Any other parameters that you don't specify are not changed by
        this update request.</p> <p>You can view the scheduled actions using
        <a>DescribeScheduledActions</a>. If you are no longer using a scheduled
        action, you can delete it using <a>DeleteScheduledAction</a>.</p>
        <p>Learn more about how to work with scheduled actions in the <a
        href="https://docs.aws.amazon.com/autoscaling/application/userguide/what-is-application-auto-scaling.html">Application
        Auto Scaling User Guide</a>.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PutScheduledActionResponse"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
        "482":
          description: ObjectNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ObjectNotFoundException"
        "483":
          description: ConcurrentUpdateException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConcurrentUpdateException"
        "484":
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServiceException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AnyScaleFrontendService.PutScheduledAction
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PutScheduledActionRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AnyScaleFrontendService.RegisterScalableTarget:
    post:
      operationId: RegisterScalableTarget
      description: "<p>Registers or updates a scalable target. A scalable target is a
        resource that Application Auto Scaling can scale out and scale in.
        Scalable targets are uniquely identified by the combination of resource
        ID, scalable dimension, and namespace. </p> <p>When you register a new
        scalable target, you must specify values for minimum and maximum
        capacity. Application Auto Scaling will not scale capacity to values
        that are outside of this range. </p> <p>To update a scalable target,
        specify the parameter that you want to change as well as the following
        parameters that identify the scalable target: resource ID, scalable
        dimension, and namespace. Any parameters that you don't specify are not
        changed by this update request. </p> <p>After you register a scalable
        target, you do not need to register it again to use other Application
        Auto Scaling operations. To see which resources have been registered,
        use <a>DescribeScalableTargets</a>. You can also view the scaling
        policies for a service namespace by using
        <a>DescribeScalableTargets</a>. </p> <p>If you no longer need a scalable
        target, you can deregister it by using
        <a>DeregisterScalableTarget</a>.</p>"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RegisterScalableTargetResponse"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
        "482":
          description: ConcurrentUpdateException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConcurrentUpdateException"
        "483":
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServiceException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AnyScaleFrontendService.RegisterScalableTarget
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RegisterScalableTargetRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
servers:
  - url: http://autoscaling.{region}.amazonaws.com
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-south-1
          - sa-east-1
        default: us-east-1
    description: The Application Auto Scaling multi-region endpoint
  - url: https://autoscaling.{region}.amazonaws.com
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-south-1
          - sa-east-1
        default: us-east-1
    description: The Application Auto Scaling multi-region endpoint
  - url: http://autoscaling.amazonaws.com
    variables: {}
    description: The general Application Auto Scaling endpoint for US East (N. Virginia)
  - url: https://autoscaling.amazonaws.com
    variables: {}
    description: The general Application Auto Scaling endpoint for US East (N. Virginia)
  - url: http://autoscaling.{region}.amazonaws.com.cn
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The Application Auto Scaling endpoint for China (Beijing) and China
      (Ningxia)
  - url: https://autoscaling.{region}.amazonaws.com.cn
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The Application Auto Scaling endpoint for China (Beijing) and China
      (Ningxia)
components:
  parameters:
    X-Amz-Content-Sha256:
      name: X-Amz-Content-Sha256
      in: header
      required: false
      schema:
        type: string
    X-Amz-Date:
      name: X-Amz-Date
      in: header
      required: false
      schema:
        type: string
    X-Amz-Algorithm:
      name: X-Amz-Algorithm
      in: header
      required: false
      schema:
        type: string
    X-Amz-Credential:
      name: X-Amz-Credential
      in: header
      required: false
      schema:
        type: string
    X-Amz-Security-Token:
      name: X-Amz-Security-Token
      in: header
      required: false
      schema:
        type: string
    X-Amz-Signature:
      name: X-Amz-Signature
      in: header
      required: false
      schema:
        type: string
    X-Amz-SignedHeaders:
      name: X-Amz-SignedHeaders
      in: header
      required: false
      schema:
        type: string
  securitySchemes:
    hmac:
      type: apiKey
      name: Authorization
      in: header
      description: Amazon Signature authorization v4
      x-amazon-apigateway-authtype: awsSigv4
  schemas:
    DeleteScalingPolicyResponse:
      type: object
      example: {}
      properties: {}
    DeleteScalingPolicyRequest:
      type: object
      required:
        - PolicyName
        - ServiceNamespace
        - ResourceId
        - ScalableDimension
      properties:
        PolicyName:
          $ref: "#/components/schemas/ResourceIdMaxLen1600"
        ServiceNamespace:
          $ref: "#/components/schemas/ServiceNamespace"
        ResourceId:
          $ref: "#/components/schemas/ResourceIdMaxLen1600"
        ScalableDimension:
          $ref: "#/components/schemas/ScalableDimension"
    ValidationException: {}
    ObjectNotFoundException: {}
    ConcurrentUpdateException: {}
    InternalServiceException: {}
    DeleteScheduledActionResponse:
      type: object
      properties: {}
    DeleteScheduledActionRequest:
      type: object
      required:
        - ServiceNamespace
        - ScheduledActionName
        - ResourceId
        - ScalableDimension
      properties:
        ServiceNamespace:
          $ref: "#/components/schemas/ServiceNamespace"
        ScheduledActionName:
          $ref: "#/components/schemas/ResourceIdMaxLen1600"
        ResourceId:
          $ref: "#/components/schemas/ResourceIdMaxLen1600"
        ScalableDimension:
          $ref: "#/components/schemas/ScalableDimension"
    DeregisterScalableTargetResponse:
      type: object
      example: {}
      properties: {}
    DeregisterScalableTargetRequest:
      type: object
      required:
        - ServiceNamespace
        - ResourceId
        - ScalableDimension
      properties:
        ServiceNamespace:
          $ref: "#/components/schemas/ServiceNamespace"
        ResourceId:
          $ref: "#/components/schemas/ResourceIdMaxLen1600"
        ScalableDimension:
          $ref: "#/components/schemas/ScalableDimension"
    DescribeScalableTargetsResponse:
      type: object
      example:
        ScalableTargets:
          - CreationTime: 2016-05-06T11:21:46.199Z
            MaxCapacity: 10
            MinCapacity: 1
            ResourceId: service/default/web-app
            RoleARN: arn:aws:iam::012345678910:role/aws-service-role/ecs.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_ECSService
            ScalableDimension: ecs:service:DesiredCount
            ServiceNamespace: ecs
            SuspendedState:
              DynamicScalingInSuspended: false
              DynamicScalingOutSuspended: false
              ScheduledScalingSuspended: false
      properties:
        ScalableTargets:
          $ref: "#/components/schemas/ScalableTargets"
        NextToken:
          $ref: "#/components/schemas/XmlString"
    DescribeScalableTargetsRequest:
      type: object
      required:
        - ServiceNamespace
      properties:
        ServiceNamespace:
          $ref: "#/components/schemas/ServiceNamespace"
        ResourceIds:
          $ref: "#/components/schemas/ResourceIdsMaxLen1600"
        ScalableDimension:
          $ref: "#/components/schemas/ScalableDimension"
        MaxResults:
          $ref: "#/components/schemas/MaxResults"
        NextToken:
          $ref: "#/components/schemas/XmlString"
    InvalidNextTokenException: {}
    DescribeScalingActivitiesResponse:
      type: object
      example:
        ScalingActivities:
          - ActivityId: e6c5f7d1-dbbb-4a3f-89b2-51f33e766399
            Cause: monitor alarm web-app-cpu-lt-25 in state ALARM triggered policy
              web-app-cpu-lt-25
            Description: Setting desired count to 1.
            EndTime: 2016-05-06T16:04:32.111Z
            ResourceId: service/default/web-app
            ScalableDimension: ecs:service:DesiredCount
            ServiceNamespace: ecs
            StartTime: 2016-05-06T16:03:58.171Z
            StatusCode: Successful
            StatusMessage: Successfully set desired count to 1. Change successfully fulfilled
              by ecs.
      properties:
        ScalingActivities:
          $ref: "#/components/schemas/ScalingActivities"
        NextToken:
          $ref: "#/components/schemas/XmlString"
    DescribeScalingActivitiesRequest:
      type: object
      required:
        - ServiceNamespace
      properties:
        ServiceNamespace:
          $ref: "#/components/schemas/ServiceNamespace"
        ResourceId:
          $ref: "#/components/schemas/ResourceIdMaxLen1600"
        ScalableDimension:
          $ref: "#/components/schemas/ScalableDimension"
        MaxResults:
          $ref: "#/components/schemas/MaxResults"
        NextToken:
          $ref: "#/components/schemas/XmlString"
    DescribeScalingPoliciesResponse:
      type: object
      example:
        NextToken: ""
        ScalingPolicies:
          - Alarms:
              - AlarmARN: arn:aws:cloudwatch:us-west-2:012345678910:alarm:web-app-cpu-gt-75
                AlarmName: web-app-cpu-gt-75
            CreationTime: 2016-05-06T12:11:39.230Z
            PolicyARN: arn:aws:autoscaling:us-west-2:012345678910:scalingPolicy:6d8972f3-efc8-437c-92d1-6270f29a66e7:resource/ecs/service/default/web-app:policyName/web-app-cpu-gt-75
            PolicyName: web-app-cpu-gt-75
            PolicyType: StepScaling
            ResourceId: service/default/web-app
            ScalableDimension: ecs:service:DesiredCount
            ServiceNamespace: ecs
            StepScalingPolicyConfiguration:
              AdjustmentType: PercentChangeInCapacity
              Cooldown: 60
              StepAdjustments:
                - MetricIntervalLowerBound: 0
                  ScalingAdjustment: 200
      properties:
        ScalingPolicies:
          $ref: "#/components/schemas/ScalingPolicies"
        NextToken:
          $ref: "#/components/schemas/XmlString"
    DescribeScalingPoliciesRequest:
      type: object
      required:
        - ServiceNamespace
      properties:
        PolicyNames:
          $ref: "#/components/schemas/ResourceIdsMaxLen1600"
        ServiceNamespace:
          $ref: "#/components/schemas/ServiceNamespace"
        ResourceId:
          $ref: "#/components/schemas/ResourceIdMaxLen1600"
        ScalableDimension:
          $ref: "#/components/schemas/ScalableDimension"
        MaxResults:
          $ref: "#/components/schemas/MaxResults"
        NextToken:
          $ref: "#/components/schemas/XmlString"
    FailedResourceAccessException: {}
    DescribeScheduledActionsResponse:
      type: object
      properties:
        ScheduledActions:
          $ref: "#/components/schemas/ScheduledActions"
        NextToken:
          $ref: "#/components/schemas/XmlString"
    DescribeScheduledActionsRequest:
      type: object
      required:
        - ServiceNamespace
      properties:
        ScheduledActionNames:
          $ref: "#/components/schemas/ResourceIdsMaxLen1600"
        ServiceNamespace:
          $ref: "#/components/schemas/ServiceNamespace"
        ResourceId:
          $ref: "#/components/schemas/ResourceIdMaxLen1600"
        ScalableDimension:
          $ref: "#/components/schemas/ScalableDimension"
        MaxResults:
          $ref: "#/components/schemas/MaxResults"
        NextToken:
          $ref: "#/components/schemas/XmlString"
    PutScalingPolicyResponse:
      type: object
      required:
        - PolicyARN
      example:
        PolicyARN: arn:aws:autoscaling:us-east-1:012345678910:scalingPolicy:89406401-0cb7-4130-b770-d97cca0e446b:resource/ec2/spot-fleet-request/sfr-45e69d8a-be48-4539-bbf3-3464e99c50c3:policyName/fleet-cpu-gt-75
      properties:
        PolicyARN:
          $ref: "#/components/schemas/ResourceIdMaxLen1600"
        Alarms:
          $ref: "#/components/schemas/Alarms"
    PutScalingPolicyRequest:
      type: object
      required:
        - PolicyName
        - ServiceNamespace
        - ResourceId
        - ScalableDimension
      properties:
        PolicyName:
          $ref: "#/components/schemas/PolicyName"
        ServiceNamespace:
          $ref: "#/components/schemas/ServiceNamespace"
        ResourceId:
          $ref: "#/components/schemas/ResourceIdMaxLen1600"
        ScalableDimension:
          $ref: "#/components/schemas/ScalableDimension"
        PolicyType:
          $ref: "#/components/schemas/PolicyType"
        StepScalingPolicyConfiguration:
          $ref: "#/components/schemas/StepScalingPolicyConfiguration"
        TargetTrackingScalingPolicyConfiguration:
          $ref: "#/components/schemas/TargetTrackingScalingPolicyConfiguration"
    LimitExceededException: {}
    PutScheduledActionResponse:
      type: object
      properties: {}
    PutScheduledActionRequest:
      type: object
      required:
        - ServiceNamespace
        - ScheduledActionName
        - ResourceId
        - ScalableDimension
      properties:
        ServiceNamespace:
          $ref: "#/components/schemas/ServiceNamespace"
        Schedule:
          $ref: "#/components/schemas/ResourceIdMaxLen1600"
        ScheduledActionName:
          $ref: "#/components/schemas/ScheduledActionName"
        ResourceId:
          $ref: "#/components/schemas/ResourceIdMaxLen1600"
        ScalableDimension:
          $ref: "#/components/schemas/ScalableDimension"
        StartTime:
          $ref: "#/components/schemas/TimestampType"
        EndTime:
          $ref: "#/components/schemas/TimestampType"
        ScalableTargetAction:
          $ref: "#/components/schemas/ScalableTargetAction"
    RegisterScalableTargetResponse:
      type: object
      example: {}
      properties: {}
    RegisterScalableTargetRequest:
      type: object
      required:
        - ServiceNamespace
        - ResourceId
        - ScalableDimension
      properties:
        ServiceNamespace:
          $ref: "#/components/schemas/ServiceNamespace"
        ResourceId:
          $ref: "#/components/schemas/ResourceIdMaxLen1600"
        ScalableDimension:
          $ref: "#/components/schemas/ScalableDimension"
        MinCapacity:
          $ref: "#/components/schemas/ResourceCapacity"
        MaxCapacity:
          $ref: "#/components/schemas/ResourceCapacity"
        RoleARN:
          $ref: "#/components/schemas/ResourceIdMaxLen1600"
        SuspendedState:
          $ref: "#/components/schemas/SuspendedState"
    AdjustmentType:
      type: string
      enum:
        - ChangeInCapacity
        - PercentChangeInCapacity
        - ExactCapacity
    ResourceId:
      type: string
      x-pattern: "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*"
    Alarm:
      type: object
      required:
        - AlarmName
        - AlarmARN
      properties:
        AlarmName:
          $ref: "#/components/schemas/ResourceId"
        AlarmARN:
          $ref: "#/components/schemas/ResourceId"
      description: Represents a CloudWatch alarm associated with a scaling policy.
    Alarms:
      type: array
      items:
        $ref: "#/components/schemas/Alarm"
    Cooldown:
      type: integer
    MetricName:
      type: string
    MetricNamespace:
      type: string
    MetricDimensions:
      type: array
      items:
        $ref: "#/components/schemas/MetricDimension"
    MetricStatistic:
      type: string
      enum:
        - Average
        - Minimum
        - Maximum
        - SampleCount
        - Sum
    MetricUnit:
      type: string
    CustomizedMetricSpecification:
      type: object
      required:
        - MetricName
        - Namespace
        - Statistic
      properties:
        MetricName:
          $ref: "#/components/schemas/MetricName"
        Namespace:
          $ref: "#/components/schemas/MetricNamespace"
        Dimensions:
          $ref: "#/components/schemas/MetricDimensions"
        Statistic:
          $ref: "#/components/schemas/MetricStatistic"
        Unit:
          $ref: "#/components/schemas/MetricUnit"
      description: <p>Represents a CloudWatch metric of your choosing for a target tracking
        scaling policy to use with Application Auto Scaling.</p> <p>To create
        your customized metric specification:</p> <ul> <li> <p>Add values for
        each required parameter from CloudWatch. You can use an existing metric,
        or a new metric that you create. To use your own metric, you must first
        publish the metric to CloudWatch. For more information, see <a
        href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/publishingMetrics.html">Publish
        Custom Metrics</a> in the <i>Amazon CloudWatch User Guide</i>.</p> </li>
        <li> <p>Choose a metric that changes proportionally with capacity. The
        value of the metric should increase or decrease in inverse proportion to
        the number of capacity units. That is, the value of the metric should
        decrease when capacity increases. </p> </li> </ul> <p>For more
        information about CloudWatch, see <a
        href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/cloudwatch_concepts.html">Amazon
        CloudWatch Concepts</a>. </p>
    ResourceIdMaxLen1600:
      type: string
      minLength: 1
      maxLength: 1600
      x-pattern: "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*"
    ServiceNamespace:
      type: string
      enum:
        - ecs
        - elasticmapreduce
        - ec2
        - appstream
        - dynamodb
        - rds
        - sagemaker
        - custom-resource
    ScalableDimension:
      type: string
      enum:
        - ecs:service:DesiredCount
        - ec2:spot-fleet-request:TargetCapacity
        - elasticmapreduce:instancegroup:InstanceCount
        - appstream:fleet:DesiredCapacity
        - dynamodb:table:ReadCapacityUnits
        - dynamodb:table:WriteCapacityUnits
        - dynamodb:index:ReadCapacityUnits
        - dynamodb:index:WriteCapacityUnits
        - rds:cluster:ReadReplicaCount
        - sagemaker:variant:DesiredInstanceCount
        - custom-resource:ResourceType:Property
    ResourceIdsMaxLen1600:
      type: array
      items:
        $ref: "#/components/schemas/ResourceIdMaxLen1600"
    MaxResults:
      type: integer
    XmlString:
      type: string
      x-pattern: "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*"
    ScalableTargets:
      type: array
      items:
        $ref: "#/components/schemas/ScalableTarget"
    ScalingActivities:
      type: array
      items:
        $ref: "#/components/schemas/ScalingActivity"
    ScalingPolicies:
      type: array
      items:
        $ref: "#/components/schemas/ScalingPolicy"
    ScheduledActions:
      type: array
      items:
        $ref: "#/components/schemas/ScheduledAction"
    DisableScaleIn:
      type: boolean
    MetricAggregationType:
      type: string
      enum:
        - Average
        - Minimum
        - Maximum
    MetricDimensionName:
      type: string
    MetricDimensionValue:
      type: string
    MetricDimension:
      type: object
      required:
        - Name
        - Value
      properties:
        Name:
          $ref: "#/components/schemas/MetricDimensionName"
        Value:
          $ref: "#/components/schemas/MetricDimensionValue"
      description: Describes the dimension names and values associated with a metric.
    MetricScale:
      type: number
      format: double
    MetricType:
      type: string
      enum:
        - DynamoDBReadCapacityUtilization
        - DynamoDBWriteCapacityUtilization
        - ALBRequestCountPerTarget
        - RDSReaderAverageCPUUtilization
        - RDSReaderAverageDatabaseConnections
        - EC2SpotFleetRequestAverageCPUUtilization
        - EC2SpotFleetRequestAverageNetworkIn
        - EC2SpotFleetRequestAverageNetworkOut
        - SageMakerVariantInvocationsPerInstance
        - ECSServiceAverageCPUUtilization
        - ECSServiceAverageMemoryUtilization
    MinAdjustmentMagnitude:
      type: integer
    PolicyName:
      type: string
      pattern: \p{Print}+
      minLength: 1
      maxLength: 256
    PolicyType:
      type: string
      enum:
        - StepScaling
        - TargetTrackingScaling
    ResourceLabel:
      type: string
      minLength: 1
      maxLength: 1023
    PredefinedMetricSpecification:
      type: object
      required:
        - PredefinedMetricType
      properties:
        PredefinedMetricType:
          $ref: "#/components/schemas/MetricType"
        ResourceLabel:
          $ref: "#/components/schemas/ResourceLabel"
      description: Represents a predefined metric for a target tracking scaling policy to
        use with Application Auto Scaling.
    StepScalingPolicyConfiguration:
      type: object
      properties:
        AdjustmentType:
          $ref: "#/components/schemas/AdjustmentType"
        StepAdjustments:
          $ref: "#/components/schemas/StepAdjustments"
        MinAdjustmentMagnitude:
          $ref: "#/components/schemas/MinAdjustmentMagnitude"
        Cooldown:
          $ref: "#/components/schemas/Cooldown"
        MetricAggregationType:
          $ref: "#/components/schemas/MetricAggregationType"
      description: Represents a step scaling policy configuration to use with Application
        Auto Scaling.
    TargetTrackingScalingPolicyConfiguration:
      type: object
      required:
        - TargetValue
      properties:
        TargetValue:
          $ref: "#/components/schemas/MetricScale"
        PredefinedMetricSpecification:
          $ref: "#/components/schemas/PredefinedMetricSpecification"
        CustomizedMetricSpecification:
          $ref: "#/components/schemas/CustomizedMetricSpecification"
        ScaleOutCooldown:
          $ref: "#/components/schemas/Cooldown"
        ScaleInCooldown:
          $ref: "#/components/schemas/Cooldown"
        DisableScaleIn:
          $ref: "#/components/schemas/DisableScaleIn"
      description: Represents a target tracking scaling policy configuration to use with
        Application Auto Scaling.
    ScheduledActionName:
      type: string
      pattern: (?!((^[ ]+.*)|(.*([\u0000-\u001f]|[\u007f-\u009f]|[:/|])+.*)|(.*[
        ]+$))).+
      minLength: 1
      maxLength: 256
    TimestampType:
      type: string
      format: date-time
    ScalableTargetAction:
      type: object
      properties:
        MinCapacity:
          $ref: "#/components/schemas/ResourceCapacity"
        MaxCapacity:
          $ref: "#/components/schemas/ResourceCapacity"
      description: Represents the minimum and maximum capacity for a scheduled action.
    ResourceCapacity:
      type: integer
    SuspendedState:
      type: object
      properties:
        DynamicScalingInSuspended:
          $ref: "#/components/schemas/ScalingSuspended"
        DynamicScalingOutSuspended:
          $ref: "#/components/schemas/ScalingSuspended"
        ScheduledScalingSuspended:
          $ref: "#/components/schemas/ScalingSuspended"
      description: "Specifies whether the scaling activities for a scalable target are in a
        suspended state. "
    ScalableTarget:
      type: object
      required:
        - ServiceNamespace
        - ResourceId
        - ScalableDimension
        - MinCapacity
        - MaxCapacity
        - RoleARN
        - CreationTime
      properties:
        ServiceNamespace:
          $ref: "#/components/schemas/ServiceNamespace"
        ResourceId:
          $ref: "#/components/schemas/ResourceIdMaxLen1600"
        ScalableDimension:
          $ref: "#/components/schemas/ScalableDimension"
        MinCapacity:
          $ref: "#/components/schemas/ResourceCapacity"
        MaxCapacity:
          $ref: "#/components/schemas/ResourceCapacity"
        RoleARN:
          $ref: "#/components/schemas/ResourceIdMaxLen1600"
        CreationTime:
          $ref: "#/components/schemas/TimestampType"
        SuspendedState:
          $ref: "#/components/schemas/SuspendedState"
      description: Represents a scalable target.
    ScalingActivity:
      type: object
      required:
        - ActivityId
        - ServiceNamespace
        - ResourceId
        - ScalableDimension
        - Description
        - Cause
        - StartTime
        - StatusCode
      properties:
        ActivityId:
          $ref: "#/components/schemas/ResourceId"
        ServiceNamespace:
          $ref: "#/components/schemas/ServiceNamespace"
        ResourceId:
          $ref: "#/components/schemas/ResourceIdMaxLen1600"
        ScalableDimension:
          $ref: "#/components/schemas/ScalableDimension"
        Description:
          $ref: "#/components/schemas/XmlString"
        Cause:
          $ref: "#/components/schemas/XmlString"
        StartTime:
          $ref: "#/components/schemas/TimestampType"
        EndTime:
          $ref: "#/components/schemas/TimestampType"
        StatusCode:
          $ref: "#/components/schemas/ScalingActivityStatusCode"
        StatusMessage:
          $ref: "#/components/schemas/XmlString"
        Details:
          $ref: "#/components/schemas/XmlString"
      description: Represents a scaling activity.
    ScalingActivityStatusCode:
      type: string
      enum:
        - Pending
        - InProgress
        - Successful
        - Overridden
        - Unfulfilled
        - Failed
    ScalingAdjustment:
      type: integer
    ScalingPolicy:
      type: object
      required:
        - PolicyARN
        - PolicyName
        - ServiceNamespace
        - ResourceId
        - ScalableDimension
        - PolicyType
        - CreationTime
      properties:
        PolicyARN:
          $ref: "#/components/schemas/ResourceIdMaxLen1600"
        PolicyName:
          $ref: "#/components/schemas/PolicyName"
        ServiceNamespace:
          $ref: "#/components/schemas/ServiceNamespace"
        ResourceId:
          $ref: "#/components/schemas/ResourceIdMaxLen1600"
        ScalableDimension:
          $ref: "#/components/schemas/ScalableDimension"
        PolicyType:
          $ref: "#/components/schemas/PolicyType"
        StepScalingPolicyConfiguration:
          $ref: "#/components/schemas/StepScalingPolicyConfiguration"
        TargetTrackingScalingPolicyConfiguration:
          $ref: "#/components/schemas/TargetTrackingScalingPolicyConfiguration"
        Alarms:
          $ref: "#/components/schemas/Alarms"
        CreationTime:
          $ref: "#/components/schemas/TimestampType"
      description: Represents a scaling policy to use with Application Auto Scaling.
    ScalingSuspended:
      type: boolean
    ScheduledAction:
      type: object
      required:
        - ScheduledActionName
        - ScheduledActionARN
        - ServiceNamespace
        - Schedule
        - ResourceId
        - CreationTime
      properties:
        ScheduledActionName:
          $ref: "#/components/schemas/ScheduledActionName"
        ScheduledActionARN:
          $ref: "#/components/schemas/ResourceIdMaxLen1600"
        ServiceNamespace:
          $ref: "#/components/schemas/ServiceNamespace"
        Schedule:
          $ref: "#/components/schemas/ResourceIdMaxLen1600"
        ResourceId:
          $ref: "#/components/schemas/ResourceIdMaxLen1600"
        ScalableDimension:
          $ref: "#/components/schemas/ScalableDimension"
        StartTime:
          $ref: "#/components/schemas/TimestampType"
        EndTime:
          $ref: "#/components/schemas/TimestampType"
        ScalableTargetAction:
          $ref: "#/components/schemas/ScalableTargetAction"
        CreationTime:
          $ref: "#/components/schemas/TimestampType"
      description: Represents a scheduled action.
    StepAdjustment:
      type: object
      required:
        - ScalingAdjustment
      properties:
        MetricIntervalLowerBound:
          $ref: "#/components/schemas/MetricScale"
        MetricIntervalUpperBound:
          $ref: "#/components/schemas/MetricScale"
        ScalingAdjustment:
          $ref: "#/components/schemas/ScalingAdjustment"
      description: <p>Represents a step adjustment for a
        <a>StepScalingPolicyConfiguration</a>. Describes an adjustment based on
        the difference between the value of the aggregated CloudWatch metric and
        the breach threshold that you've defined for the alarm. </p> <p>For the
        following examples, suppose that you have an alarm with a breach
        threshold of 50:</p> <ul> <li> <p>To trigger the adjustment when the
        metric is greater than or equal to 50 and less than 60, specify a lower
        bound of 0 and an upper bound of 10.</p> </li> <li> <p>To trigger the
        adjustment when the metric is greater than 40 and less than or equal to
        50, specify a lower bound of -10 and an upper bound of 0.</p> </li>
        </ul> <p>There are a few rules for the step adjustments for your step
        policy:</p> <ul> <li> <p>The ranges of your step adjustments can't
        overlap or have a gap.</p> </li> <li> <p>At most one step adjustment can
        have a null lower bound. If one step adjustment has a negative lower
        bound, then there must be a step adjustment with a null lower bound.</p>
        </li> <li> <p>At most one step adjustment can have a null upper bound.
        If one step adjustment has a positive upper bound, then there must be a
        step adjustment with a null upper bound.</p> </li> <li> <p>The upper and
        lower bound can't be null in the same step adjustment.</p> </li> </ul>
    StepAdjustments:
      type: array
      items:
        $ref: "#/components/schemas/StepAdjustment"
