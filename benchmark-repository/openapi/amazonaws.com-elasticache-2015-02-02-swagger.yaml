openapi: 3.0.0
info:
  version: 2015-02-02
  x-release: v4
  title: Amazon ElastiCache
  description: <fullname>Amazon ElastiCache</fullname> <p>Amazon ElastiCache is a web
    service that makes it easier to set up, operate, and scale a distributed
    cache in the cloud.</p> <p>With ElastiCache, customers get all of the
    benefits of a high-performance, in-memory cache with less of the
    administrative burden involved in launching and managing a distributed
    cache. The service makes setup, scaling, and cluster failure handling much
    simpler than in a self-managed cache deployment.</p> <p>In addition, through
    integration with Amazon CloudWatch, customers get enhanced visibility into
    the key performance statistics associated with their cache and can receive
    alarms if a part of their cache runs hot.</p>
  x-logo:
    url: https://twitter.com/awscloud/profile_image?size=original
    backgroundColor: "#FFFFFF"
  termsOfService: https://aws.amazon.com/service-terms/
  contact:
    name: Mike Ralphson
    email: mike.ralphson@gmail.com
    url: https://github.com/mermade/aws2openapi
    x-twitter: PermittedSoc
  license:
    name: Apache 2.0 License
    url: http://www.apache.org/licenses/
  x-providerName: amazonaws.com
  x-serviceName: elasticache
  x-origin:
    - contentType: application/json
      url: https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/elasticache-2015-02-02.normal.json
      converter:
        url: https://github.com/mermade/aws2openapi
        version: 1.0.0
      x-apisguru-direct: true
  x-apiClientRegistration:
    url: https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct
  x-apisguru-categories:
    - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: https://docs.aws.amazon.com/elasticache/
x-hasEquivalentPaths: true
security:
  - hmac: []
paths:
  /#Action=AddTagsToResource:
    get:
      x-aws-operation-name: AddTagsToResource
      operationId: GET AddTagsToResource
      description: <p>Adds up to 50 cost allocation tags to the named resource. A cost
        allocation tag is a key-value pair where the key and value are
        case-sensitive. You can use cost allocation tags to categorize and track
        your AWS costs.</p> <p> When you apply tags to your ElastiCache
        resources, AWS generates a cost allocation report as a comma-separated
        value (CSV) file with your usage and costs aggregated by your tags. You
        can apply tags that represent business categories (such as cost centers,
        application names, or owners) to organize your costs across multiple
        services. For more information, see <a
        href="https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/Tagging.html">Using
        Cost Allocation Tags in Amazon ElastiCache</a> in the <i>ElastiCache
        User Guide</i>.</p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/TagListMessage"
        "480":
          description: CacheClusterNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/CacheClusterNotFoundFault"
        "481":
          description: SnapshotNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/SnapshotNotFoundFault"
        "482":
          description: TagQuotaPerResourceExceeded
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/TagQuotaPerResourceExceeded"
        "483":
          description: InvalidARNFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidARNFault"
      parameters:
        - name: ResourceName
          in: query
          required: true
          description: <p>The Amazon Resource Name (ARN) of the resource to which the tags
            are to be added, for example
            <code>arn:aws:elasticache:us-west-2:0123456789:cluster:myCluster</code>
            or
            <code>arn:aws:elasticache:us-west-2:0123456789:snapshot:mySnapshot</code>.
            ElastiCache resources are <i>cluster</i> and <i>snapshot</i>.</p>
            <p>For more information about ARNs, see <a
            href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon
            Resource Names (ARNs) and AWS Service Namespaces</a>.</p>
          schema:
            type: string
        - name: Tags
          in: query
          required: true
          description: A list of cost allocation tags to be added to this resource. A tag
            is a key-value pair. A tag key must be accompanied by a tag value.
          schema:
            type: array
            items:
              type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - AddTagsToResource
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2015-02-02
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: AddTagsToResource
      operationId: POST AddTagsToResource
      description: <p>Adds up to 50 cost allocation tags to the named resource. A cost
        allocation tag is a key-value pair where the key and value are
        case-sensitive. You can use cost allocation tags to categorize and track
        your AWS costs.</p> <p> When you apply tags to your ElastiCache
        resources, AWS generates a cost allocation report as a comma-separated
        value (CSV) file with your usage and costs aggregated by your tags. You
        can apply tags that represent business categories (such as cost centers,
        application names, or owners) to organize your costs across multiple
        services. For more information, see <a
        href="https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/Tagging.html">Using
        Cost Allocation Tags in Amazon ElastiCache</a> in the <i>ElastiCache
        User Guide</i>.</p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/TagListMessage"
        "480":
          description: CacheClusterNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/CacheClusterNotFoundFault"
        "481":
          description: SnapshotNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/SnapshotNotFoundFault"
        "482":
          description: TagQuotaPerResourceExceeded
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/TagQuotaPerResourceExceeded"
        "483":
          description: InvalidARNFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidARNFault"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - AddTagsToResource
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2015-02-02
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                ResourceName:
                  description: <p>The Amazon Resource Name (ARN) of the resource to which
                    the tags are to be added, for example
                    <code>arn:aws:elasticache:us-west-2:0123456789:cluster:myCluster</code>
                    or
                    <code>arn:aws:elasticache:us-west-2:0123456789:snapshot:mySnapshot</code>.
                    ElastiCache resources are <i>cluster</i> and
                    <i>snapshot</i>.</p> <p>For more information about ARNs, see
                    <a
                    href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon
                    Resource Names (ARNs) and AWS Service Namespaces</a>.</p>
                  type: string
                Tags:
                  description: A list of cost allocation tags to be added to this resource.
                    A tag is a key-value pair. A tag key must be accompanied by
                    a tag value.
                  type: array
                  items:
                    type: string
              required:
                - ResourceName
                - Tags
  /#Action=AuthorizeCacheSecurityGroupIngress:
    get:
      x-aws-operation-name: AuthorizeCacheSecurityGroupIngress
      operationId: GET AuthorizeCacheSecurityGroupIngress
      description: <p>Allows network ingress to a cache security group. Applications using
        ElastiCache must be running on Amazon EC2, and Amazon EC2 security
        groups are used as the authorization mechanism.</p> <note> <p>You cannot
        authorize ingress from an Amazon EC2 security group in one region to an
        ElastiCache cluster in another region.</p> </note>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/AuthorizeCacheSecurityGroupIngressResult"
        "480":
          description: CacheSecurityGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/CacheSecurityGroupNotFoundFault"
        "481":
          description: InvalidCacheSecurityGroupStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidCacheSecurityGroupStateFault"
        "482":
          description: AuthorizationAlreadyExistsFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/AuthorizationAlreadyExistsFault"
        "483":
          description: InvalidParameterValueException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidParameterValueException"
        "484":
          description: InvalidParameterCombinationException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidParameterCombinationException"
      parameters:
        - name: CacheSecurityGroupName
          in: query
          required: true
          description: The cache security group that allows network ingress.
          schema:
            type: string
        - name: EC2SecurityGroupName
          in: query
          required: true
          description: The Amazon EC2 security group to be authorized for ingress to the
            cache security group.
          schema:
            type: string
        - name: EC2SecurityGroupOwnerId
          in: query
          required: true
          description: The AWS account number of the Amazon EC2 security group owner. Note
            that this is not the same thing as an AWS access key ID - you must
            provide a valid AWS account number for this parameter.
          schema:
            type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - AuthorizeCacheSecurityGroupIngress
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2015-02-02
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: AuthorizeCacheSecurityGroupIngress
      operationId: POST AuthorizeCacheSecurityGroupIngress
      description: <p>Allows network ingress to a cache security group. Applications using
        ElastiCache must be running on Amazon EC2, and Amazon EC2 security
        groups are used as the authorization mechanism.</p> <note> <p>You cannot
        authorize ingress from an Amazon EC2 security group in one region to an
        ElastiCache cluster in another region.</p> </note>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/AuthorizeCacheSecurityGroupIngressResult"
        "480":
          description: CacheSecurityGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/CacheSecurityGroupNotFoundFault"
        "481":
          description: InvalidCacheSecurityGroupStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidCacheSecurityGroupStateFault"
        "482":
          description: AuthorizationAlreadyExistsFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/AuthorizationAlreadyExistsFault"
        "483":
          description: InvalidParameterValueException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidParameterValueException"
        "484":
          description: InvalidParameterCombinationException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidParameterCombinationException"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - AuthorizeCacheSecurityGroupIngress
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2015-02-02
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                CacheSecurityGroupName:
                  description: The cache security group that allows network ingress.
                  type: string
                EC2SecurityGroupName:
                  description: The Amazon EC2 security group to be authorized for ingress
                    to the cache security group.
                  type: string
                EC2SecurityGroupOwnerId:
                  description: The AWS account number of the Amazon EC2 security group
                    owner. Note that this is not the same thing as an AWS access
                    key ID - you must provide a valid AWS account number for
                    this parameter.
                  type: string
              required:
                - CacheSecurityGroupName
                - EC2SecurityGroupName
                - EC2SecurityGroupOwnerId
  /#Action=BatchApplyUpdateAction:
    get:
      x-aws-operation-name: BatchApplyUpdateAction
      operationId: GET BatchApplyUpdateAction
      description: Apply the service update. For more information on service updates and
        applying them, see <a
        href="https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/applying-updates.html">Applying
        Service Updates</a>.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/UpdateActionResultsMessage"
        "480":
          description: ServiceUpdateNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ServiceUpdateNotFoundFault"
        "481":
          description: InvalidParameterValueException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidParameterValueException"
      parameters:
        - name: ReplicationGroupIds
          in: query
          required: true
          description: The replication group IDs
          schema:
            type: array
            items:
              type: string
        - name: ServiceUpdateName
          in: query
          required: true
          description: The unique ID of the service update
          schema:
            type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - BatchApplyUpdateAction
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2015-02-02
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: BatchApplyUpdateAction
      operationId: POST BatchApplyUpdateAction
      description: Apply the service update. For more information on service updates and
        applying them, see <a
        href="https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/applying-updates.html">Applying
        Service Updates</a>.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/UpdateActionResultsMessage"
        "480":
          description: ServiceUpdateNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ServiceUpdateNotFoundFault"
        "481":
          description: InvalidParameterValueException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidParameterValueException"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - BatchApplyUpdateAction
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2015-02-02
      requestBody:
        $ref: "#/components/requestBodies/POST_BatchApplyUpdateAction"
  /#Action=BatchStopUpdateAction:
    get:
      x-aws-operation-name: BatchStopUpdateAction
      operationId: GET BatchStopUpdateAction
      description: Stop the service update. For more information on service updates and
        stopping them, see <a
        href="https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/stopping-self-service-updates.html">Stopping
        Service Updates</a>.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/UpdateActionResultsMessage"
        "480":
          description: ServiceUpdateNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ServiceUpdateNotFoundFault"
        "481":
          description: InvalidParameterValueException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidParameterValueException"
      parameters:
        - name: ReplicationGroupIds
          in: query
          required: true
          description: The replication group IDs
          schema:
            type: array
            items:
              type: string
        - name: ServiceUpdateName
          in: query
          required: true
          description: The unique ID of the service update
          schema:
            type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - BatchStopUpdateAction
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2015-02-02
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: BatchStopUpdateAction
      operationId: POST BatchStopUpdateAction
      description: Stop the service update. For more information on service updates and
        stopping them, see <a
        href="https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/stopping-self-service-updates.html">Stopping
        Service Updates</a>.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/UpdateActionResultsMessage"
        "480":
          description: ServiceUpdateNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ServiceUpdateNotFoundFault"
        "481":
          description: InvalidParameterValueException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidParameterValueException"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - BatchStopUpdateAction
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2015-02-02
      requestBody:
        $ref: "#/components/requestBodies/POST_BatchApplyUpdateAction"
  /#Action=CopySnapshot:
    get:
      x-aws-operation-name: CopySnapshot
      operationId: GET CopySnapshot
      description: '<p>Makes a copy of an existing snapshot.</p> <note> <p>This operation
        is valid for Redis only.</p> </note> <important> <p>Users or groups that
        have permissions to use the <code>CopySnapshot</code> operation can
        create their own Amazon S3 buckets and copy snapshots to it. To control
        access to your snapshots, use an IAM policy to control who has the
        ability to use the <code>CopySnapshot</code> operation. For more
        information about using IAM to control the use of ElastiCache
        operations, see <a
        href="https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/backups-exporting.html">Exporting
        Snapshots</a> and <a
        href="https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/IAM.html">Authentication
        &amp; Access Control</a>.</p> </important> <p>You could receive the
        following error messages.</p> <p class="title"> <b>Error Messages</b>
        </p> <ul> <li> <p> <b>Error Message:</b> The S3 bucket %s is outside of
        the region.</p> <p> <b>Solution:</b> Create an Amazon S3 bucket in the
        same region as your snapshot. For more information, see <a
        href="https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/backups-exporting.html#backups-exporting-create-s3-bucket">Step
        1: Create an Amazon S3 Bucket</a> in the ElastiCache User Guide.</p>
        </li> <li> <p> <b>Error Message:</b> The S3 bucket %s does not
        exist.</p> <p> <b>Solution:</b> Create an Amazon S3 bucket in the same
        region as your snapshot. For more information, see <a
        href="https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/backups-exporting.html#backups-exporting-create-s3-bucket">Step
        1: Create an Amazon S3 Bucket</a> in the ElastiCache User Guide.</p>
        </li> <li> <p> <b>Error Message:</b> The S3 bucket %s is not owned by
        the authenticated user.</p> <p> <b>Solution:</b> Create an Amazon S3
        bucket in the same region as your snapshot. For more information, see <a
        href="https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/backups-exporting.html#backups-exporting-create-s3-bucket">Step
        1: Create an Amazon S3 Bucket</a> in the ElastiCache User Guide.</p>
        </li> <li> <p> <b>Error Message:</b> The authenticated user does not
        have sufficient permissions to perform the desired activity.</p> <p>
        <b>Solution:</b> Contact your system administrator to get the needed
        permissions.</p> </li> <li> <p> <b>Error Message:</b> The S3 bucket %s
        already contains an object with key %s.</p> <p> <b>Solution:</b> Give
        the <code>TargetSnapshotName</code> a new and unique value. If exporting
        a snapshot, you could alternatively create a new Amazon S3 bucket and
        use this same value for <code>TargetSnapshotName</code>.</p> </li> <li>
        <p> <b>Error Message: </b> ElastiCache has not been granted READ
        permissions %s on the S3 Bucket.</p> <p> <b>Solution:</b> Add List and
        Read permissions on the bucket. For more information, see <a
        href="https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/backups-exporting.html#backups-exporting-grant-access">Step
        2: Grant ElastiCache Access to Your Amazon S3 Bucket</a> in the
        ElastiCache User Guide.</p> </li> <li> <p> <b>Error Message: </b>
        ElastiCache has not been granted WRITE permissions %s on the S3
        Bucket.</p> <p> <b>Solution:</b> Add Upload/Delete permissions on the
        bucket. For more information, see <a
        href="https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/backups-exporting.html#backups-exporting-grant-access">Step
        2: Grant ElastiCache Access to Your Amazon S3 Bucket</a> in the
        ElastiCache User Guide.</p> </li> <li> <p> <b>Error Message: </b>
        ElastiCache has not been granted READ_ACP permissions %s on the S3
        Bucket.</p> <p> <b>Solution:</b> Add View Permissions on the bucket. For
        more information, see <a
        href="https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/backups-exporting.html#backups-exporting-grant-access">Step
        2: Grant ElastiCache Access to Your Amazon S3 Bucket</a> in the
        ElastiCache User Guide.</p> </li> </ul>'
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/CopySnapshotResult"
        "480":
          description: SnapshotAlreadyExistsFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/SnapshotAlreadyExistsFault"
        "481":
          description: SnapshotNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/SnapshotNotFoundFault"
        "482":
          description: SnapshotQuotaExceededFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/SnapshotQuotaExceededFault"
        "483":
          description: InvalidSnapshotStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidSnapshotStateFault"
        "484":
          description: InvalidParameterValueException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidParameterValueException"
        "485":
          description: InvalidParameterCombinationException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidParameterCombinationException"
      parameters:
        - name: SourceSnapshotName
          in: query
          required: true
          description: The name of an existing snapshot from which to make a copy.
          schema:
            type: string
        - name: TargetSnapshotName
          in: query
          required: true
          description: A name for the snapshot copy. ElastiCache does not permit
            overwriting a snapshot, therefore this name must be unique within
            its context - ElastiCache or an Amazon S3 bucket if exporting.
          schema:
            type: string
        - name: TargetBucket
          in: query
          required: false
          description: '<p>The Amazon S3 bucket to which the snapshot is exported. This
            parameter is used only when exporting a snapshot for external
            access.</p> <p>When using this parameter to export a snapshot, be
            sure Amazon ElastiCache has the needed permissions to this S3
            bucket. For more information, see <a
            href="https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/backups-exporting.html#backups-exporting-grant-access">Step
            2: Grant ElastiCache Access to Your Amazon S3 Bucket</a> in the
            <i>Amazon ElastiCache User Guide</i>.</p> <p>For more information,
            see <a
            href="https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/Snapshots.Exporting.html">Exporting
            a Snapshot</a> in the <i>Amazon ElastiCache User Guide</i>.</p>'
          schema:
            type: string
        - name: KmsKeyId
          in: query
          required: false
          description: The ID of the KMS key used to encrypt the target snapshot.
          schema:
            type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - CopySnapshot
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2015-02-02
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: CopySnapshot
      operationId: POST CopySnapshot
      description: '<p>Makes a copy of an existing snapshot.</p> <note> <p>This operation
        is valid for Redis only.</p> </note> <important> <p>Users or groups that
        have permissions to use the <code>CopySnapshot</code> operation can
        create their own Amazon S3 buckets and copy snapshots to it. To control
        access to your snapshots, use an IAM policy to control who has the
        ability to use the <code>CopySnapshot</code> operation. For more
        information about using IAM to control the use of ElastiCache
        operations, see <a
        href="https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/backups-exporting.html">Exporting
        Snapshots</a> and <a
        href="https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/IAM.html">Authentication
        &amp; Access Control</a>.</p> </important> <p>You could receive the
        following error messages.</p> <p class="title"> <b>Error Messages</b>
        </p> <ul> <li> <p> <b>Error Message:</b> The S3 bucket %s is outside of
        the region.</p> <p> <b>Solution:</b> Create an Amazon S3 bucket in the
        same region as your snapshot. For more information, see <a
        href="https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/backups-exporting.html#backups-exporting-create-s3-bucket">Step
        1: Create an Amazon S3 Bucket</a> in the ElastiCache User Guide.</p>
        </li> <li> <p> <b>Error Message:</b> The S3 bucket %s does not
        exist.</p> <p> <b>Solution:</b> Create an Amazon S3 bucket in the same
        region as your snapshot. For more information, see <a
        href="https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/backups-exporting.html#backups-exporting-create-s3-bucket">Step
        1: Create an Amazon S3 Bucket</a> in the ElastiCache User Guide.</p>
        </li> <li> <p> <b>Error Message:</b> The S3 bucket %s is not owned by
        the authenticated user.</p> <p> <b>Solution:</b> Create an Amazon S3
        bucket in the same region as your snapshot. For more information, see <a
        href="https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/backups-exporting.html#backups-exporting-create-s3-bucket">Step
        1: Create an Amazon S3 Bucket</a> in the ElastiCache User Guide.</p>
        </li> <li> <p> <b>Error Message:</b> The authenticated user does not
        have sufficient permissions to perform the desired activity.</p> <p>
        <b>Solution:</b> Contact your system administrator to get the needed
        permissions.</p> </li> <li> <p> <b>Error Message:</b> The S3 bucket %s
        already contains an object with key %s.</p> <p> <b>Solution:</b> Give
        the <code>TargetSnapshotName</code> a new and unique value. If exporting
        a snapshot, you could alternatively create a new Amazon S3 bucket and
        use this same value for <code>TargetSnapshotName</code>.</p> </li> <li>
        <p> <b>Error Message: </b> ElastiCache has not been granted READ
        permissions %s on the S3 Bucket.</p> <p> <b>Solution:</b> Add List and
        Read permissions on the bucket. For more information, see <a
        href="https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/backups-exporting.html#backups-exporting-grant-access">Step
        2: Grant ElastiCache Access to Your Amazon S3 Bucket</a> in the
        ElastiCache User Guide.</p> </li> <li> <p> <b>Error Message: </b>
        ElastiCache has not been granted WRITE permissions %s on the S3
        Bucket.</p> <p> <b>Solution:</b> Add Upload/Delete permissions on the
        bucket. For more information, see <a
        href="https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/backups-exporting.html#backups-exporting-grant-access">Step
        2: Grant ElastiCache Access to Your Amazon S3 Bucket</a> in the
        ElastiCache User Guide.</p> </li> <li> <p> <b>Error Message: </b>
        ElastiCache has not been granted READ_ACP permissions %s on the S3
        Bucket.</p> <p> <b>Solution:</b> Add View Permissions on the bucket. For
        more information, see <a
        href="https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/backups-exporting.html#backups-exporting-grant-access">Step
        2: Grant ElastiCache Access to Your Amazon S3 Bucket</a> in the
        ElastiCache User Guide.</p> </li> </ul>'
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/CopySnapshotResult"
        "480":
          description: SnapshotAlreadyExistsFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/SnapshotAlreadyExistsFault"
        "481":
          description: SnapshotNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/SnapshotNotFoundFault"
        "482":
          description: SnapshotQuotaExceededFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/SnapshotQuotaExceededFault"
        "483":
          description: InvalidSnapshotStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidSnapshotStateFault"
        "484":
          description: InvalidParameterValueException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidParameterValueException"
        "485":
          description: InvalidParameterCombinationException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidParameterCombinationException"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - CopySnapshot
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2015-02-02
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                SourceSnapshotName:
                  description: The name of an existing snapshot from which to make a copy.
                  type: string
                TargetSnapshotName:
                  description: A name for the snapshot copy. ElastiCache does not permit
                    overwriting a snapshot, therefore this name must be unique
                    within its context - ElastiCache or an Amazon S3 bucket if
                    exporting.
                  type: string
                TargetBucket:
                  description: '<p>The Amazon S3 bucket to which the snapshot is exported.
                    This parameter is used only when exporting a snapshot for
                    external access.</p> <p>When using this parameter to export
                    a snapshot, be sure Amazon ElastiCache has the needed
                    permissions to this S3 bucket. For more information, see <a
                    href="https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/backups-exporting.html#backups-exporting-grant-access">Step
                    2: Grant ElastiCache Access to Your Amazon S3 Bucket</a> in
                    the <i>Amazon ElastiCache User Guide</i>.</p> <p>For more
                    information, see <a
                    href="https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/Snapshots.Exporting.html">Exporting
                    a Snapshot</a> in the <i>Amazon ElastiCache User
                    Guide</i>.</p>'
                  type: string
                KmsKeyId:
                  description: The ID of the KMS key used to encrypt the target snapshot.
                  type: string
              required:
                - SourceSnapshotName
                - TargetSnapshotName
  /#Action=CreateCacheCluster:
    get:
      x-aws-operation-name: CreateCacheCluster
      operationId: GET CreateCacheCluster
      description: <p>Creates a cluster. All nodes in the cluster run the same
        protocol-compliant cache engine software, either Memcached or Redis.</p>
        <p>This operation is not supported for Redis (cluster mode enabled)
        clusters.</p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/CreateCacheClusterResult"
        "480":
          description: ReplicationGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ReplicationGroupNotFoundFault"
        "481":
          description: InvalidReplicationGroupStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidReplicationGroupStateFault"
        "482":
          description: CacheClusterAlreadyExistsFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/CacheClusterAlreadyExistsFault"
        "483":
          description: InsufficientCacheClusterCapacityFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InsufficientCacheClusterCapacityFault"
        "484":
          description: CacheSecurityGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/CacheSecurityGroupNotFoundFault"
        "485":
          description: CacheSubnetGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/CacheSubnetGroupNotFoundFault"
        "486":
          description: ClusterQuotaForCustomerExceededFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ClusterQuotaForCustomerExceededFault"
        "487":
          description: NodeQuotaForClusterExceededFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/NodeQuotaForClusterExceededFault"
        "488":
          description: NodeQuotaForCustomerExceededFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/NodeQuotaForCustomerExceededFault"
        "489":
          description: CacheParameterGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/CacheParameterGroupNotFoundFault"
        "490":
          description: InvalidVPCNetworkStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidVPCNetworkStateFault"
        "491":
          description: TagQuotaPerResourceExceeded
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/TagQuotaPerResourceExceeded"
        "492":
          description: InvalidParameterValueException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidParameterValueException"
        "493":
          description: InvalidParameterCombinationException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidParameterCombinationException"
      parameters:
        - name: CacheClusterId
          in: query
          required: true
          description: <p>The node group (shard) identifier. This parameter is stored as a
            lowercase string.</p> <p> <b>Constraints:</b> </p> <ul> <li> <p>A
            name must contain from 1 to 50 alphanumeric characters or
            hyphens.</p> </li> <li> <p>The first character must be a letter.</p>
            </li> <li> <p>A name cannot end with a hyphen or contain two
            consecutive hyphens.</p> </li> </ul>
          schema:
            type: string
        - name: ReplicationGroupId
          in: query
          required: false
          description: <p>The ID of the replication group to which this cluster should
            belong. If this parameter is specified, the cluster is added to the
            specified replication group as a read replica; otherwise, the
            cluster is a standalone primary that is not part of any replication
            group.</p> <p>If the specified replication group is Multi-AZ enabled
            and the Availability Zone is not specified, the cluster is created
            in Availability Zones that provide the best spread of read replicas
            across Availability Zones.</p> <note> <p>This parameter is only
            valid if the <code>Engine</code> parameter is
            <code>redis</code>.</p> </note>
          schema:
            type: string
        - name: AZMode
          in: query
          required: false
          description: <p>Specifies whether the nodes in this Memcached cluster are created
            in a single Availability Zone or created across multiple
            Availability Zones in the cluster's region.</p> <p>This parameter is
            only supported for Memcached clusters.</p> <p>If the
            <code>AZMode</code> and <code>PreferredAvailabilityZones</code> are
            not specified, ElastiCache assumes <code>single-az</code> mode.</p>
          schema:
            type: string
            enum:
              - single-az
              - cross-az
        - name: PreferredAvailabilityZone
          in: query
          required: false
          description: "<p>The EC2 Availability Zone in which the cluster is created.</p>
            <p>All nodes belonging to this Memcached cluster are placed in the
            preferred Availability Zone. If you want to create your nodes across
            multiple Availability Zones, use
            <code>PreferredAvailabilityZones</code>.</p> <p>Default: System
            chosen Availability Zone.</p>"
          schema:
            type: string
        - name: PreferredAvailabilityZones
          in: query
          required: false
          description: "<p>A list of the Availability Zones in which cache nodes are
            created. The order of the zones in the list is not important.</p>
            <p>This option is only supported on Memcached.</p> <note> <p>If you
            are creating your cluster in an Amazon VPC (recommended) you can
            only locate nodes in Availability Zones that are associated with the
            subnets in the selected subnet group.</p> <p>The number of
            Availability Zones listed must equal the value of
            <code>NumCacheNodes</code>.</p> </note> <p>If you want all the nodes
            in the same Availability Zone, use
            <code>PreferredAvailabilityZone</code> instead, or repeat the
            Availability Zone multiple times in the list.</p> <p>Default: System
            chosen Availability Zones.</p>"
          schema:
            type: array
            items:
              type: string
        - name: NumCacheNodes
          in: query
          required: false
          description: <p>The initial number of cache nodes that the cluster has.</p>
            <p>For clusters running Redis, this value must be 1. For clusters
            running Memcached, this value must be between 1 and 20.</p> <p>If
            you need more than 20 nodes for your Memcached cluster, please fill
            out the ElastiCache Limit Increase Request form at <a
            href="http://aws.amazon.com/contact-us/elasticache-node-limit-request/">http://aws.amazon.com/contact-us/elasticache-node-limit-request/</a>.</p>
          schema:
            type: integer
        - name: CacheNodeType
          in: query
          required: false
          description: "<p>The compute and memory capacity of the nodes in the node group
            (shard).</p> <p>The following node types are supported by
            ElastiCache. Generally speaking, the current generation types
            provide more memory and computational power at lower cost when
            compared to their equivalent previous generation counterparts.</p>
            <ul> <li> <p>General purpose:</p> <ul> <li> <p>Current generation:
            </p> <p> <b>M5 node types:</b> <code>cache.m5.large</code>,
            <code>cache.m5.xlarge</code>, <code>cache.m5.2xlarge</code>,
            <code>cache.m5.4xlarge</code>, <code>cache.m5.12xlarge</code>,
            <code>cache.m5.24xlarge</code> </p> <p> <b>M4 node types:</b>
            <code>cache.m4.large</code>, <code>cache.m4.xlarge</code>,
            <code>cache.m4.2xlarge</code>, <code>cache.m4.4xlarge</code>,
            <code>cache.m4.10xlarge</code> </p> <p> <b>T2 node types:</b>
            <code>cache.t2.micro</code>, <code>cache.t2.small</code>,
            <code>cache.t2.medium</code> </p> </li> <li> <p>Previous generation:
            (not recommended)</p> <p> <b>T1 node types:</b>
            <code>cache.t1.micro</code> </p> <p> <b>M1 node types:</b>
            <code>cache.m1.small</code>, <code>cache.m1.medium</code>,
            <code>cache.m1.large</code>, <code>cache.m1.xlarge</code> </p> <p>
            <b>M3 node types:</b> <code>cache.m3.medium</code>,
            <code>cache.m3.large</code>, <code>cache.m3.xlarge</code>,
            <code>cache.m3.2xlarge</code> </p> </li> </ul> </li> <li> <p>Compute
            optimized:</p> <ul> <li> <p>Previous generation: (not
            recommended)</p> <p> <b>C1 node types:</b>
            <code>cache.c1.xlarge</code> </p> </li> </ul> </li> <li> <p>Memory
            optimized:</p> <ul> <li> <p>Current generation: </p> <p> <b>R5 node
            types:</b> <code>cache.r5.large</code>,
            <code>cache.r5.xlarge</code>, <code>cache.r5.2xlarge</code>,
            <code>cache.r5.4xlarge</code>, <code>cache.r5.12xlarge</code>,
            <code>cache.r5.24xlarge</code> </p> <p> <b>R4 node types:</b>
            <code>cache.r4.large</code>, <code>cache.r4.xlarge</code>,
            <code>cache.r4.2xlarge</code>, <code>cache.r4.4xlarge</code>,
            <code>cache.r4.8xlarge</code>, <code>cache.r4.16xlarge</code> </p>
            </li> <li> <p>Previous generation: (not recommended)</p> <p> <b>M2
            node types:</b> <code>cache.m2.xlarge</code>,
            <code>cache.m2.2xlarge</code>, <code>cache.m2.4xlarge</code> </p>
            <p> <b>R3 node types:</b> <code>cache.r3.large</code>,
            <code>cache.r3.xlarge</code>, <code>cache.r3.2xlarge</code>,
            <code>cache.r3.4xlarge</code>, <code>cache.r3.8xlarge</code> </p>
            </li> </ul> </li> </ul> <p> <b>Additional node type info</b> </p>
            <ul> <li> <p>All current generation instance types are created in
            Amazon VPC by default.</p> </li> <li> <p>Redis append-only files
            (AOF) are not supported for T1 or T2 instances.</p> </li> <li>
            <p>Redis Multi-AZ with automatic failover is not supported on T1
            instances.</p> </li> <li> <p>Redis configuration variables
            <code>appendonly</code> and <code>appendfsync</code> are not
            supported on Redis version 2.8.22 and later.</p> </li> </ul>"
          schema:
            type: string
        - name: Engine
          in: query
          required: false
          description: "<p>The name of the cache engine to be used for this cluster.</p>
            <p>Valid values for this parameter are: <code>memcached</code> |
            <code>redis</code> </p>"
          schema:
            type: string
        - name: EngineVersion
          in: query
          required: false
          description: <p>The version number of the cache engine to be used for this
            cluster. To view the supported cache engine versions, use the
            DescribeCacheEngineVersions operation.</p> <p> <b>Important:</b> You
            can upgrade to a newer engine version (see <a
            href="https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/SelectEngine.html#VersionManagement">Selecting
            a Cache Engine and Version</a>), but you cannot downgrade to an
            earlier engine version. If you want to use an earlier engine
            version, you must delete the existing cluster or replication group
            and create it anew with the earlier engine version. </p>
          schema:
            type: string
        - name: CacheParameterGroupName
          in: query
          required: false
          description: The name of the parameter group to associate with this cluster. If
            this argument is omitted, the default parameter group for the
            specified engine is used. You cannot use any parameter group which
            has <code>cluster-enabled='yes'</code> when creating a cluster.
          schema:
            type: string
        - name: CacheSubnetGroupName
          in: query
          required: false
          description: <p>The name of the subnet group to be used for the cluster.</p>
            <p>Use this parameter only when you are creating a cluster in an
            Amazon Virtual Private Cloud (Amazon VPC).</p> <important> <p>If
            you're going to launch your cluster in an Amazon VPC, you need to
            create a subnet group before you start creating a cluster. For more
            information, see <a
            href="https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/SubnetGroups.html">Subnets
            and Subnet Groups</a>.</p> </important>
          schema:
            type: string
        - name: CacheSecurityGroupNames
          in: query
          required: false
          description: <p>A list of security group names to associate with this
            cluster.</p> <p>Use this parameter only when you are creating a
            cluster outside of an Amazon Virtual Private Cloud (Amazon VPC).</p>
          schema:
            type: array
            items:
              type: string
        - name: SecurityGroupIds
          in: query
          required: false
          description: <p>One or more VPC security groups associated with the cluster.</p>
            <p>Use this parameter only when you are creating a cluster in an
            Amazon Virtual Private Cloud (Amazon VPC).</p>
          schema:
            type: array
            items:
              type: string
        - name: Tags
          in: query
          required: false
          description: A list of cost allocation tags to be added to this resource.
          schema:
            type: array
            items:
              type: string
        - name: SnapshotArns
          in: query
          required: false
          description: "<p>A single-element string list containing an Amazon Resource Name
            (ARN) that uniquely identifies a Redis RDB snapshot file stored in
            Amazon S3. The snapshot file is used to populate the node group
            (shard). The Amazon S3 object name in the ARN cannot contain any
            commas.</p> <note> <p>This parameter is only valid if the
            <code>Engine</code> parameter is <code>redis</code>.</p> </note>
            <p>Example of an Amazon S3 ARN:
            <code>arn:aws:s3:::my_bucket/snapshot1.rdb</code> </p>"
          schema:
            type: array
            items:
              type: string
        - name: SnapshotName
          in: query
          required: false
          description: <p>The name of a Redis snapshot from which to restore data into the
            new node group (shard). The snapshot status changes to
            <code>restoring</code> while the new node group (shard) is being
            created.</p> <note> <p>This parameter is only valid if the
            <code>Engine</code> parameter is <code>redis</code>.</p> </note>
          schema:
            type: string
        - name: PreferredMaintenanceWindow
          in: query
          required: false
          description: "<p>Specifies the weekly time range during which maintenance on the
            cluster is performed. It is specified as a range in the format
            ddd:hh24:mi-ddd:hh24:mi (24H Clock UTC). The minimum maintenance
            window is a 60 minute period. Valid values for <code>ddd</code>
            are:</p> <p>Specifies the weekly time range during which maintenance
            on the cluster is performed. It is specified as a range in the
            format ddd:hh24:mi-ddd:hh24:mi (24H Clock UTC). The minimum
            maintenance window is a 60 minute period.</p> <p>Valid values for
            <code>ddd</code> are:</p> <ul> <li> <p> <code>sun</code> </p> </li>
            <li> <p> <code>mon</code> </p> </li> <li> <p> <code>tue</code> </p>
            </li> <li> <p> <code>wed</code> </p> </li> <li> <p> <code>thu</code>
            </p> </li> <li> <p> <code>fri</code> </p> </li> <li> <p>
            <code>sat</code> </p> </li> </ul> <p>Example:
            <code>sun:23:00-mon:01:30</code> </p>"
          schema:
            type: string
        - name: Port
          in: query
          required: false
          description: The port number on which each of the cache nodes accepts connections.
          schema:
            type: integer
        - name: NotificationTopicArn
          in: query
          required: false
          description: <p>The Amazon Resource Name (ARN) of the Amazon Simple Notification
            Service (SNS) topic to which notifications are sent.</p> <note>
            <p>The Amazon SNS topic owner must be the same as the cluster
            owner.</p> </note>
          schema:
            type: string
        - name: AutoMinorVersionUpgrade
          in: query
          required: false
          description: This parameter is currently disabled.
          schema:
            type: boolean
        - name: SnapshotRetentionLimit
          in: query
          required: false
          description: "<p>The number of days for which ElastiCache retains automatic
            snapshots before deleting them. For example, if you set
            <code>SnapshotRetentionLimit</code> to 5, a snapshot taken today is
            retained for 5 days before being deleted.</p> <note> <p>This
            parameter is only valid if the <code>Engine</code> parameter is
            <code>redis</code>.</p> </note> <p>Default: 0 (i.e., automatic
            backups are disabled for this cache cluster).</p>"
          schema:
            type: integer
        - name: SnapshotWindow
          in: query
          required: false
          description: "<p>The daily time range (in UTC) during which ElastiCache begins
            taking a daily snapshot of your node group (shard).</p> <p>Example:
            <code>05:00-09:00</code> </p> <p>If you do not specify this
            parameter, ElastiCache automatically chooses an appropriate time
            range.</p> <note> <p>This parameter is only valid if the
            <code>Engine</code> parameter is <code>redis</code>.</p> </note>"
          schema:
            type: string
        - name: AuthToken
          in: query
          required: false
          description: "<p> <b>Reserved parameter.</b> The password used to access a
            password protected server.</p> <p>Password constraints:</p> <ul>
            <li> <p>Must be only printable ASCII characters.</p> </li> <li>
            <p>Must be at least 16 characters and no more than 128 characters in
            length.</p> </li> <li> <p>Cannot contain any of the following
            characters: '/', '\"', or '@'. </p> </li> </ul> <p>For more
            information, see <a href=\"http://redis.io/commands/AUTH\">AUTH
            password</a> at http://redis.io/commands/AUTH.</p>"
          schema:
            type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - CreateCacheCluster
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2015-02-02
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: CreateCacheCluster
      operationId: POST CreateCacheCluster
      description: <p>Creates a cluster. All nodes in the cluster run the same
        protocol-compliant cache engine software, either Memcached or Redis.</p>
        <p>This operation is not supported for Redis (cluster mode enabled)
        clusters.</p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/CreateCacheClusterResult"
        "480":
          description: ReplicationGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ReplicationGroupNotFoundFault"
        "481":
          description: InvalidReplicationGroupStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidReplicationGroupStateFault"
        "482":
          description: CacheClusterAlreadyExistsFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/CacheClusterAlreadyExistsFault"
        "483":
          description: InsufficientCacheClusterCapacityFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InsufficientCacheClusterCapacityFault"
        "484":
          description: CacheSecurityGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/CacheSecurityGroupNotFoundFault"
        "485":
          description: CacheSubnetGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/CacheSubnetGroupNotFoundFault"
        "486":
          description: ClusterQuotaForCustomerExceededFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ClusterQuotaForCustomerExceededFault"
        "487":
          description: NodeQuotaForClusterExceededFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/NodeQuotaForClusterExceededFault"
        "488":
          description: NodeQuotaForCustomerExceededFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/NodeQuotaForCustomerExceededFault"
        "489":
          description: CacheParameterGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/CacheParameterGroupNotFoundFault"
        "490":
          description: InvalidVPCNetworkStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidVPCNetworkStateFault"
        "491":
          description: TagQuotaPerResourceExceeded
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/TagQuotaPerResourceExceeded"
        "492":
          description: InvalidParameterValueException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidParameterValueException"
        "493":
          description: InvalidParameterCombinationException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidParameterCombinationException"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - CreateCacheCluster
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2015-02-02
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                CacheClusterId:
                  description: <p>The node group (shard) identifier. This parameter is
                    stored as a lowercase string.</p> <p> <b>Constraints:</b>
                    </p> <ul> <li> <p>A name must contain from 1 to 50
                    alphanumeric characters or hyphens.</p> </li> <li> <p>The
                    first character must be a letter.</p> </li> <li> <p>A name
                    cannot end with a hyphen or contain two consecutive
                    hyphens.</p> </li> </ul>
                  type: string
                ReplicationGroupId:
                  description: <p>The ID of the replication group to which this cluster
                    should belong. If this parameter is specified, the cluster
                    is added to the specified replication group as a read
                    replica; otherwise, the cluster is a standalone primary that
                    is not part of any replication group.</p> <p>If the
                    specified replication group is Multi-AZ enabled and the
                    Availability Zone is not specified, the cluster is created
                    in Availability Zones that provide the best spread of read
                    replicas across Availability Zones.</p> <note> <p>This
                    parameter is only valid if the <code>Engine</code> parameter
                    is <code>redis</code>.</p> </note>
                  type: string
                AZMode:
                  description: <p>Specifies whether the nodes in this Memcached cluster are
                    created in a single Availability Zone or created across
                    multiple Availability Zones in the cluster's region.</p>
                    <p>This parameter is only supported for Memcached
                    clusters.</p> <p>If the <code>AZMode</code> and
                    <code>PreferredAvailabilityZones</code> are not specified,
                    ElastiCache assumes <code>single-az</code> mode.</p>
                  type: string
                  enum:
                    - single-az
                    - cross-az
                PreferredAvailabilityZone:
                  description: "<p>The EC2 Availability Zone in which the cluster is
                    created.</p> <p>All nodes belonging to this Memcached
                    cluster are placed in the preferred Availability Zone. If
                    you want to create your nodes across multiple Availability
                    Zones, use <code>PreferredAvailabilityZones</code>.</p>
                    <p>Default: System chosen Availability Zone.</p>"
                  type: string
                PreferredAvailabilityZones:
                  description: "<p>A list of the Availability Zones in which cache nodes
                    are created. The order of the zones in the list is not
                    important.</p> <p>This option is only supported on
                    Memcached.</p> <note> <p>If you are creating your cluster in
                    an Amazon VPC (recommended) you can only locate nodes in
                    Availability Zones that are associated with the subnets in
                    the selected subnet group.</p> <p>The number of Availability
                    Zones listed must equal the value of
                    <code>NumCacheNodes</code>.</p> </note> <p>If you want all
                    the nodes in the same Availability Zone, use
                    <code>PreferredAvailabilityZone</code> instead, or repeat
                    the Availability Zone multiple times in the list.</p>
                    <p>Default: System chosen Availability Zones.</p>"
                  type: array
                  items:
                    type: string
                NumCacheNodes:
                  description: <p>The initial number of cache nodes that the cluster
                    has.</p> <p>For clusters running Redis, this value must be
                    1. For clusters running Memcached, this value must be
                    between 1 and 20.</p> <p>If you need more than 20 nodes for
                    your Memcached cluster, please fill out the ElastiCache
                    Limit Increase Request form at <a
                    href="http://aws.amazon.com/contact-us/elasticache-node-limit-request/">http://aws.amazon.com/contact-us/elasticache-node-limit-request/</a>.</p>
                  type: integer
                CacheNodeType:
                  description: "<p>The compute and memory capacity of the nodes in the node
                    group (shard).</p> <p>The following node types are supported
                    by ElastiCache. Generally speaking, the current generation
                    types provide more memory and computational power at lower
                    cost when compared to their equivalent previous generation
                    counterparts.</p> <ul> <li> <p>General purpose:</p> <ul>
                    <li> <p>Current generation: </p> <p> <b>M5 node types:</b>
                    <code>cache.m5.large</code>, <code>cache.m5.xlarge</code>,
                    <code>cache.m5.2xlarge</code>,
                    <code>cache.m5.4xlarge</code>,
                    <code>cache.m5.12xlarge</code>,
                    <code>cache.m5.24xlarge</code> </p> <p> <b>M4 node
                    types:</b> <code>cache.m4.large</code>,
                    <code>cache.m4.xlarge</code>, <code>cache.m4.2xlarge</code>,
                    <code>cache.m4.4xlarge</code>,
                    <code>cache.m4.10xlarge</code> </p> <p> <b>T2 node
                    types:</b> <code>cache.t2.micro</code>,
                    <code>cache.t2.small</code>, <code>cache.t2.medium</code>
                    </p> </li> <li> <p>Previous generation: (not
                    recommended)</p> <p> <b>T1 node types:</b>
                    <code>cache.t1.micro</code> </p> <p> <b>M1 node types:</b>
                    <code>cache.m1.small</code>, <code>cache.m1.medium</code>,
                    <code>cache.m1.large</code>, <code>cache.m1.xlarge</code>
                    </p> <p> <b>M3 node types:</b> <code>cache.m3.medium</code>,
                    <code>cache.m3.large</code>, <code>cache.m3.xlarge</code>,
                    <code>cache.m3.2xlarge</code> </p> </li> </ul> </li> <li>
                    <p>Compute optimized:</p> <ul> <li> <p>Previous generation:
                    (not recommended)</p> <p> <b>C1 node types:</b>
                    <code>cache.c1.xlarge</code> </p> </li> </ul> </li> <li>
                    <p>Memory optimized:</p> <ul> <li> <p>Current generation:
                    </p> <p> <b>R5 node types:</b> <code>cache.r5.large</code>,
                    <code>cache.r5.xlarge</code>, <code>cache.r5.2xlarge</code>,
                    <code>cache.r5.4xlarge</code>,
                    <code>cache.r5.12xlarge</code>,
                    <code>cache.r5.24xlarge</code> </p> <p> <b>R4 node
                    types:</b> <code>cache.r4.large</code>,
                    <code>cache.r4.xlarge</code>, <code>cache.r4.2xlarge</code>,
                    <code>cache.r4.4xlarge</code>,
                    <code>cache.r4.8xlarge</code>,
                    <code>cache.r4.16xlarge</code> </p> </li> <li> <p>Previous
                    generation: (not recommended)</p> <p> <b>M2 node types:</b>
                    <code>cache.m2.xlarge</code>, <code>cache.m2.2xlarge</code>,
                    <code>cache.m2.4xlarge</code> </p> <p> <b>R3 node types:</b>
                    <code>cache.r3.large</code>, <code>cache.r3.xlarge</code>,
                    <code>cache.r3.2xlarge</code>,
                    <code>cache.r3.4xlarge</code>, <code>cache.r3.8xlarge</code>
                    </p> </li> </ul> </li> </ul> <p> <b>Additional node type
                    info</b> </p> <ul> <li> <p>All current generation instance
                    types are created in Amazon VPC by default.</p> </li> <li>
                    <p>Redis append-only files (AOF) are not supported for T1 or
                    T2 instances.</p> </li> <li> <p>Redis Multi-AZ with
                    automatic failover is not supported on T1 instances.</p>
                    </li> <li> <p>Redis configuration variables
                    <code>appendonly</code> and <code>appendfsync</code> are not
                    supported on Redis version 2.8.22 and later.</p> </li>
                    </ul>"
                  type: string
                Engine:
                  description: "<p>The name of the cache engine to be used for this
                    cluster.</p> <p>Valid values for this parameter are:
                    <code>memcached</code> | <code>redis</code> </p>"
                  type: string
                EngineVersion:
                  description: <p>The version number of the cache engine to be used for
                    this cluster. To view the supported cache engine versions,
                    use the DescribeCacheEngineVersions operation.</p> <p>
                    <b>Important:</b> You can upgrade to a newer engine version
                    (see <a
                    href="https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/SelectEngine.html#VersionManagement">Selecting
                    a Cache Engine and Version</a>), but you cannot downgrade to
                    an earlier engine version. If you want to use an earlier
                    engine version, you must delete the existing cluster or
                    replication group and create it anew with the earlier engine
                    version. </p>
                  type: string
                CacheParameterGroupName:
                  description: The name of the parameter group to associate with this
                    cluster. If this argument is omitted, the default parameter
                    group for the specified engine is used. You cannot use any
                    parameter group which has <code>cluster-enabled='yes'</code>
                    when creating a cluster.
                  type: string
                CacheSubnetGroupName:
                  description: <p>The name of the subnet group to be used for the
                    cluster.</p> <p>Use this parameter only when you are
                    creating a cluster in an Amazon Virtual Private Cloud
                    (Amazon VPC).</p> <important> <p>If you're going to launch
                    your cluster in an Amazon VPC, you need to create a subnet
                    group before you start creating a cluster. For more
                    information, see <a
                    href="https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/SubnetGroups.html">Subnets
                    and Subnet Groups</a>.</p> </important>
                  type: string
                CacheSecurityGroupNames:
                  description: <p>A list of security group names to associate with this
                    cluster.</p> <p>Use this parameter only when you are
                    creating a cluster outside of an Amazon Virtual Private
                    Cloud (Amazon VPC).</p>
                  type: array
                  items:
                    type: string
                SecurityGroupIds:
                  description: <p>One or more VPC security groups associated with the
                    cluster.</p> <p>Use this parameter only when you are
                    creating a cluster in an Amazon Virtual Private Cloud
                    (Amazon VPC).</p>
                  type: array
                  items:
                    type: string
                Tags:
                  description: A list of cost allocation tags to be added to this resource.
                  type: array
                  items:
                    type: string
                SnapshotArns:
                  description: "<p>A single-element string list containing an Amazon
                    Resource Name (ARN) that uniquely identifies a Redis RDB
                    snapshot file stored in Amazon S3. The snapshot file is used
                    to populate the node group (shard). The Amazon S3 object
                    name in the ARN cannot contain any commas.</p> <note>
                    <p>This parameter is only valid if the <code>Engine</code>
                    parameter is <code>redis</code>.</p> </note> <p>Example of
                    an Amazon S3 ARN:
                    <code>arn:aws:s3:::my_bucket/snapshot1.rdb</code> </p>"
                  type: array
                  items:
                    type: string
                SnapshotName:
                  description: <p>The name of a Redis snapshot from which to restore data
                    into the new node group (shard). The snapshot status changes
                    to <code>restoring</code> while the new node group (shard)
                    is being created.</p> <note> <p>This parameter is only valid
                    if the <code>Engine</code> parameter is
                    <code>redis</code>.</p> </note>
                  type: string
                PreferredMaintenanceWindow:
                  description: "<p>Specifies the weekly time range during which maintenance
                    on the cluster is performed. It is specified as a range in
                    the format ddd:hh24:mi-ddd:hh24:mi (24H Clock UTC). The
                    minimum maintenance window is a 60 minute period. Valid
                    values for <code>ddd</code> are:</p> <p>Specifies the weekly
                    time range during which maintenance on the cluster is
                    performed. It is specified as a range in the format
                    ddd:hh24:mi-ddd:hh24:mi (24H Clock UTC). The minimum
                    maintenance window is a 60 minute period.</p> <p>Valid
                    values for <code>ddd</code> are:</p> <ul> <li> <p>
                    <code>sun</code> </p> </li> <li> <p> <code>mon</code> </p>
                    </li> <li> <p> <code>tue</code> </p> </li> <li> <p>
                    <code>wed</code> </p> </li> <li> <p> <code>thu</code> </p>
                    </li> <li> <p> <code>fri</code> </p> </li> <li> <p>
                    <code>sat</code> </p> </li> </ul> <p>Example:
                    <code>sun:23:00-mon:01:30</code> </p>"
                  type: string
                Port:
                  description: The port number on which each of the cache nodes accepts
                    connections.
                  type: integer
                NotificationTopicArn:
                  description: <p>The Amazon Resource Name (ARN) of the Amazon Simple
                    Notification Service (SNS) topic to which notifications are
                    sent.</p> <note> <p>The Amazon SNS topic owner must be the
                    same as the cluster owner.</p> </note>
                  type: string
                AutoMinorVersionUpgrade:
                  description: This parameter is currently disabled.
                  type: boolean
                SnapshotRetentionLimit:
                  description: "<p>The number of days for which ElastiCache retains
                    automatic snapshots before deleting them. For example, if
                    you set <code>SnapshotRetentionLimit</code> to 5, a snapshot
                    taken today is retained for 5 days before being deleted.</p>
                    <note> <p>This parameter is only valid if the
                    <code>Engine</code> parameter is <code>redis</code>.</p>
                    </note> <p>Default: 0 (i.e., automatic backups are disabled
                    for this cache cluster).</p>"
                  type: integer
                SnapshotWindow:
                  description: "<p>The daily time range (in UTC) during which ElastiCache
                    begins taking a daily snapshot of your node group
                    (shard).</p> <p>Example: <code>05:00-09:00</code> </p> <p>If
                    you do not specify this parameter, ElastiCache automatically
                    chooses an appropriate time range.</p> <note> <p>This
                    parameter is only valid if the <code>Engine</code> parameter
                    is <code>redis</code>.</p> </note>"
                  type: string
                AuthToken:
                  description: "<p> <b>Reserved parameter.</b> The password used to access
                    a password protected server.</p> <p>Password
                    constraints:</p> <ul> <li> <p>Must be only printable ASCII
                    characters.</p> </li> <li> <p>Must be at least 16 characters
                    and no more than 128 characters in length.</p> </li> <li>
                    <p>Cannot contain any of the following characters: '/',
                    '\"', or '@'. </p> </li> </ul> <p>For more information, see
                    <a href=\"http://redis.io/commands/AUTH\">AUTH password</a>
                    at http://redis.io/commands/AUTH.</p>"
                  type: string
              required:
                - CacheClusterId
  /#Action=CreateCacheParameterGroup:
    get:
      x-aws-operation-name: CreateCacheParameterGroup
      operationId: GET CreateCacheParameterGroup
      description: <p>Creates a new Amazon ElastiCache cache parameter group. An
        ElastiCache cache parameter group is a collection of parameters and
        their values that are applied to all of the nodes in any cluster or
        replication group using the CacheParameterGroup.</p> <p>A newly created
        CacheParameterGroup is an exact duplicate of the default parameter group
        for the CacheParameterGroupFamily. To customize the newly created
        CacheParameterGroup you can change the values of specific parameters.
        For more information, see:</p> <ul> <li> <p> <a
        href="https://docs.aws.amazon.com/AmazonElastiCache/latest/APIReference/API_ModifyCacheParameterGroup.html">ModifyCacheParameterGroup</a>
        in the ElastiCache API Reference.</p> </li> <li> <p> <a
        href="https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/ParameterGroups.html">Parameters
        and Parameter Groups</a> in the ElastiCache User Guide.</p> </li> </ul>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/CreateCacheParameterGroupResult"
        "480":
          description: CacheParameterGroupQuotaExceededFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/CacheParameterGroupQuotaExceededFault"
        "481":
          description: CacheParameterGroupAlreadyExistsFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/CacheParameterGroupAlreadyExistsFault"
        "482":
          description: InvalidCacheParameterGroupStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidCacheParameterGroupStateFault"
        "483":
          description: InvalidParameterValueException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidParameterValueException"
        "484":
          description: InvalidParameterCombinationException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidParameterCombinationException"
      parameters:
        - name: CacheParameterGroupName
          in: query
          required: true
          description: A user-specified name for the cache parameter group.
          schema:
            type: string
        - name: CacheParameterGroupFamily
          in: query
          required: true
          description: "<p>The name of the cache parameter group family that the cache
            parameter group can be used with.</p> <p>Valid values are:
            <code>memcached1.4</code> | <code>memcached1.5</code> |
            <code>redis2.6</code> | <code>redis2.8</code> |
            <code>redis3.2</code> | <code>redis4.0</code> |
            <code>redis5.0</code> | </p>"
          schema:
            type: string
        - name: Description
          in: query
          required: true
          description: A user-specified description for the cache parameter group.
          schema:
            type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - CreateCacheParameterGroup
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2015-02-02
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: CreateCacheParameterGroup
      operationId: POST CreateCacheParameterGroup
      description: <p>Creates a new Amazon ElastiCache cache parameter group. An
        ElastiCache cache parameter group is a collection of parameters and
        their values that are applied to all of the nodes in any cluster or
        replication group using the CacheParameterGroup.</p> <p>A newly created
        CacheParameterGroup is an exact duplicate of the default parameter group
        for the CacheParameterGroupFamily. To customize the newly created
        CacheParameterGroup you can change the values of specific parameters.
        For more information, see:</p> <ul> <li> <p> <a
        href="https://docs.aws.amazon.com/AmazonElastiCache/latest/APIReference/API_ModifyCacheParameterGroup.html">ModifyCacheParameterGroup</a>
        in the ElastiCache API Reference.</p> </li> <li> <p> <a
        href="https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/ParameterGroups.html">Parameters
        and Parameter Groups</a> in the ElastiCache User Guide.</p> </li> </ul>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/CreateCacheParameterGroupResult"
        "480":
          description: CacheParameterGroupQuotaExceededFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/CacheParameterGroupQuotaExceededFault"
        "481":
          description: CacheParameterGroupAlreadyExistsFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/CacheParameterGroupAlreadyExistsFault"
        "482":
          description: InvalidCacheParameterGroupStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidCacheParameterGroupStateFault"
        "483":
          description: InvalidParameterValueException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidParameterValueException"
        "484":
          description: InvalidParameterCombinationException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidParameterCombinationException"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - CreateCacheParameterGroup
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2015-02-02
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                CacheParameterGroupName:
                  description: A user-specified name for the cache parameter group.
                  type: string
                CacheParameterGroupFamily:
                  description: "<p>The name of the cache parameter group family that the
                    cache parameter group can be used with.</p> <p>Valid values
                    are: <code>memcached1.4</code> | <code>memcached1.5</code> |
                    <code>redis2.6</code> | <code>redis2.8</code> |
                    <code>redis3.2</code> | <code>redis4.0</code> |
                    <code>redis5.0</code> | </p>"
                  type: string
                Description:
                  description: A user-specified description for the cache parameter group.
                  type: string
              required:
                - CacheParameterGroupName
                - CacheParameterGroupFamily
                - Description
  /#Action=CreateCacheSecurityGroup:
    get:
      x-aws-operation-name: CreateCacheSecurityGroup
      operationId: GET CreateCacheSecurityGroup
      description: <p>Creates a new cache security group. Use a cache security group to
        control access to one or more clusters.</p> <p>Cache security groups are
        only used when you are creating a cluster outside of an Amazon Virtual
        Private Cloud (Amazon VPC). If you are creating a cluster inside of a
        VPC, use a cache subnet group instead. For more information, see <a
        href="https://docs.aws.amazon.com/AmazonElastiCache/latest/APIReference/API_CreateCacheSubnetGroup.html">CreateCacheSubnetGroup</a>.</p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/CreateCacheSecurityGroupResult"
        "480":
          description: CacheSecurityGroupAlreadyExistsFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/CacheSecurityGroupAlreadyExistsFault"
        "481":
          description: CacheSecurityGroupQuotaExceededFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/CacheSecurityGroupQuotaExceededFault"
        "482":
          description: InvalidParameterValueException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidParameterValueException"
        "483":
          description: InvalidParameterCombinationException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidParameterCombinationException"
      parameters:
        - name: CacheSecurityGroupName
          in: query
          required: true
          description: '<p>A name for the cache security group. This value is stored as a
            lowercase string.</p> <p>Constraints: Must contain no more than 255
            alphanumeric characters. Cannot be the word "Default".</p>
            <p>Example: <code>mysecuritygroup</code> </p>'
          schema:
            type: string
        - name: Description
          in: query
          required: true
          description: A description for the cache security group.
          schema:
            type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - CreateCacheSecurityGroup
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2015-02-02
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: CreateCacheSecurityGroup
      operationId: POST CreateCacheSecurityGroup
      description: <p>Creates a new cache security group. Use a cache security group to
        control access to one or more clusters.</p> <p>Cache security groups are
        only used when you are creating a cluster outside of an Amazon Virtual
        Private Cloud (Amazon VPC). If you are creating a cluster inside of a
        VPC, use a cache subnet group instead. For more information, see <a
        href="https://docs.aws.amazon.com/AmazonElastiCache/latest/APIReference/API_CreateCacheSubnetGroup.html">CreateCacheSubnetGroup</a>.</p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/CreateCacheSecurityGroupResult"
        "480":
          description: CacheSecurityGroupAlreadyExistsFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/CacheSecurityGroupAlreadyExistsFault"
        "481":
          description: CacheSecurityGroupQuotaExceededFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/CacheSecurityGroupQuotaExceededFault"
        "482":
          description: InvalidParameterValueException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidParameterValueException"
        "483":
          description: InvalidParameterCombinationException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidParameterCombinationException"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - CreateCacheSecurityGroup
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2015-02-02
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                CacheSecurityGroupName:
                  description: '<p>A name for the cache security group. This value is
                    stored as a lowercase string.</p> <p>Constraints: Must
                    contain no more than 255 alphanumeric characters. Cannot be
                    the word "Default".</p> <p>Example:
                    <code>mysecuritygroup</code> </p>'
                  type: string
                Description:
                  description: A description for the cache security group.
                  type: string
              required:
                - CacheSecurityGroupName
                - Description
  /#Action=CreateCacheSubnetGroup:
    get:
      x-aws-operation-name: CreateCacheSubnetGroup
      operationId: GET CreateCacheSubnetGroup
      description: <p>Creates a new cache subnet group.</p> <p>Use this parameter only when
        you are creating a cluster in an Amazon Virtual Private Cloud (Amazon
        VPC).</p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/CreateCacheSubnetGroupResult"
        "480":
          description: CacheSubnetGroupAlreadyExistsFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/CacheSubnetGroupAlreadyExistsFault"
        "481":
          description: CacheSubnetGroupQuotaExceededFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/CacheSubnetGroupQuotaExceededFault"
        "482":
          description: CacheSubnetQuotaExceededFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/CacheSubnetQuotaExceededFault"
        "483":
          description: InvalidSubnet
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidSubnet"
      parameters:
        - name: CacheSubnetGroupName
          in: query
          required: true
          description: "<p>A name for the cache subnet group. This value is stored as a
            lowercase string.</p> <p>Constraints: Must contain no more than 255
            alphanumeric characters or hyphens.</p> <p>Example:
            <code>mysubnetgroup</code> </p>"
          schema:
            type: string
        - name: CacheSubnetGroupDescription
          in: query
          required: true
          description: A description for the cache subnet group.
          schema:
            type: string
        - name: SubnetIds
          in: query
          required: true
          description: A list of VPC subnet IDs for the cache subnet group.
          schema:
            type: array
            items:
              type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - CreateCacheSubnetGroup
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2015-02-02
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: CreateCacheSubnetGroup
      operationId: POST CreateCacheSubnetGroup
      description: <p>Creates a new cache subnet group.</p> <p>Use this parameter only when
        you are creating a cluster in an Amazon Virtual Private Cloud (Amazon
        VPC).</p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/CreateCacheSubnetGroupResult"
        "480":
          description: CacheSubnetGroupAlreadyExistsFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/CacheSubnetGroupAlreadyExistsFault"
        "481":
          description: CacheSubnetGroupQuotaExceededFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/CacheSubnetGroupQuotaExceededFault"
        "482":
          description: CacheSubnetQuotaExceededFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/CacheSubnetQuotaExceededFault"
        "483":
          description: InvalidSubnet
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidSubnet"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - CreateCacheSubnetGroup
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2015-02-02
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                CacheSubnetGroupName:
                  description: "<p>A name for the cache subnet group. This value is stored
                    as a lowercase string.</p> <p>Constraints: Must contain no
                    more than 255 alphanumeric characters or hyphens.</p>
                    <p>Example: <code>mysubnetgroup</code> </p>"
                  type: string
                CacheSubnetGroupDescription:
                  description: A description for the cache subnet group.
                  type: string
                SubnetIds:
                  description: A list of VPC subnet IDs for the cache subnet group.
                  type: array
                  items:
                    type: string
              required:
                - CacheSubnetGroupName
                - CacheSubnetGroupDescription
                - SubnetIds
  /#Action=CreateReplicationGroup:
    get:
      x-aws-operation-name: CreateReplicationGroup
      operationId: GET CreateReplicationGroup
      description: "<p>Creates a Redis (cluster mode disabled) or a Redis (cluster mode
        enabled) replication group.</p> <p>A Redis (cluster mode disabled)
        replication group is a collection of clusters, where one of the clusters
        is a read/write primary and the others are read-only replicas. Writes to
        the primary are asynchronously propagated to the replicas.</p> <p>A
        Redis (cluster mode enabled) replication group is a collection of 1 to
        90 node groups (shards). Each node group (shard) has one read/write
        primary node and up to 5 read-only replica nodes. Writes to the primary
        are asynchronously propagated to the replicas. Redis (cluster mode
        enabled) replication groups partition the data across node groups
        (shards).</p> <p>When a Redis (cluster mode disabled) replication group
        has been successfully created, you can add one or more read replicas to
        it, up to a total of 5 read replicas. You cannot alter a Redis (cluster
        mode enabled) replication group after it has been created. However, if
        you need to increase or decrease the number of node groups (console:
        shards), you can avail yourself of ElastiCache for Redis' enhanced
        backup and restore. For more information, see <a
        href=\"https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/back\
        ups-restoring.html\">Restoring From a Backup with Cluster Resizing</a>
        in the <i>ElastiCache User Guide</i>.</p> <note> <p>This operation is
        valid for Redis only.</p> </note>"
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/CreateReplicationGroupResult"
        "480":
          description: CacheClusterNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/CacheClusterNotFoundFault"
        "481":
          description: InvalidCacheClusterStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidCacheClusterStateFault"
        "482":
          description: ReplicationGroupAlreadyExistsFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ReplicationGroupAlreadyExistsFault"
        "483":
          description: InsufficientCacheClusterCapacityFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InsufficientCacheClusterCapacityFault"
        "484":
          description: CacheSecurityGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/CacheSecurityGroupNotFoundFault"
        "485":
          description: CacheSubnetGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/CacheSubnetGroupNotFoundFault"
        "486":
          description: ClusterQuotaForCustomerExceededFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ClusterQuotaForCustomerExceededFault"
        "487":
          description: NodeQuotaForClusterExceededFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/NodeQuotaForClusterExceededFault"
        "488":
          description: NodeQuotaForCustomerExceededFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/NodeQuotaForCustomerExceededFault"
        "489":
          description: CacheParameterGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/CacheParameterGroupNotFoundFault"
        "490":
          description: InvalidVPCNetworkStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidVPCNetworkStateFault"
        "491":
          description: TagQuotaPerResourceExceeded
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/TagQuotaPerResourceExceeded"
        "492":
          description: NodeGroupsPerReplicationGroupQuotaExceededFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/NodeGroupsPerReplicationGroupQuotaExcee\
                  dedFault"
        "493":
          description: InvalidParameterValueException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidParameterValueException"
        "494":
          description: InvalidParameterCombinationException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidParameterCombinationException"
      parameters:
        - name: ReplicationGroupId
          in: query
          required: true
          description: <p>The replication group identifier. This parameter is stored as a
            lowercase string.</p> <p>Constraints:</p> <ul> <li> <p>A name must
            contain from 1 to 40 alphanumeric characters or hyphens.</p> </li>
            <li> <p>The first character must be a letter.</p> </li> <li> <p>A
            name cannot end with a hyphen or contain two consecutive
            hyphens.</p> </li> </ul>
          schema:
            type: string
        - name: ReplicationGroupDescription
          in: query
          required: true
          description: A user-created description for the replication group.
          schema:
            type: string
        - name: PrimaryClusterId
          in: query
          required: false
          description: <p>The identifier of the cluster that serves as the primary for this
            replication group. This cluster must already exist and have a status
            of <code>available</code>.</p> <p>This parameter is not required if
            <code>NumCacheClusters</code>, <code>NumNodeGroups</code>, or
            <code>ReplicasPerNodeGroup</code> is specified.</p>
          schema:
            type: string
        - name: AutomaticFailoverEnabled
          in: query
          required: false
          description: "<p>Specifies whether a read-only replica is automatically promoted
            to read/write primary if the existing primary fails.</p> <p>If
            <code>true</code>, Multi-AZ is enabled for this replication group.
            If <code>false</code>, Multi-AZ is disabled for this replication
            group.</p> <p> <code>AutomaticFailoverEnabled</code> must be enabled
            for Redis (cluster mode enabled) replication groups.</p> <p>Default:
            false</p> <p>Amazon ElastiCache for Redis does not support Multi-AZ
            with automatic failover on:</p> <ul> <li> <p>Redis versions earlier
            than 2.8.6.</p> </li> <li> <p>Redis (cluster mode disabled): T1 node
            types.</p> </li> <li> <p>Redis (cluster mode enabled): T1 node
            types.</p> </li> </ul>"
          schema:
            type: boolean
        - name: NumCacheClusters
          in: query
          required: false
          description: <p>The number of clusters this replication group initially has.</p>
            <p>This parameter is not used if there is more than one node group
            (shard). You should use <code>ReplicasPerNodeGroup</code>
            instead.</p> <p>If <code>AutomaticFailoverEnabled</code> is
            <code>true</code>, the value of this parameter must be at least 2.
            If <code>AutomaticFailoverEnabled</code> is <code>false</code> you
            can omit this parameter (it will default to 1), or you can
            explicitly set it to a value between 2 and 6.</p> <p>The maximum
            permitted value for <code>NumCacheClusters</code> is 6 (1 primary
            plus 5 replicas).</p>
          schema:
            type: integer
        - name: PreferredCacheClusterAZs
          in: query
          required: false
          description: "<p>A list of EC2 Availability Zones in which the replication
            group's clusters are created. The order of the Availability Zones in
            the list is the order in which clusters are allocated. The primary
            cluster is created in the first AZ in the list.</p> <p>This
            parameter is not used if there is more than one node group (shard).
            You should use <code>NodeGroupConfiguration</code> instead.</p>
            <note> <p>If you are creating your replication group in an Amazon
            VPC (recommended), you can only locate clusters in Availability
            Zones associated with the subnets in the selected subnet group.</p>
            <p>The number of Availability Zones listed must equal the value of
            <code>NumCacheClusters</code>.</p> </note> <p>Default: system chosen
            Availability Zones.</p>"
          schema:
            type: array
            items:
              type: string
        - name: NumNodeGroups
          in: query
          required: false
          description: "<p>An optional parameter that specifies the number of node groups
            (shards) for this Redis (cluster mode enabled) replication group.
            For Redis (cluster mode disabled) either omit this parameter or set
            it to 1.</p> <p>Default: 1</p>"
          schema:
            type: integer
        - name: ReplicasPerNodeGroup
          in: query
          required: false
          description: An optional parameter that specifies the number of replica nodes in
            each node group (shard). Valid values are 0 to 5.
          schema:
            type: integer
        - name: NodeGroupConfiguration
          in: query
          required: false
          description: "<p>A list of node group (shard) configuration options. Each node
            group (shard) configuration has the following members:
            <code>PrimaryAvailabilityZone</code>,
            <code>ReplicaAvailabilityZones</code>, <code>ReplicaCount</code>,
            and <code>Slots</code>.</p> <p>If you're creating a Redis (cluster
            mode disabled) or a Redis (cluster mode enabled) replication group,
            you can use this parameter to individually configure each node group
            (shard), or you can omit this parameter. However, when seeding a
            Redis (cluster mode enabled) cluster from a S3 rdb file, you must
            configure each node group (shard) using this parameter because you
            must specify the slots for each node group.</p>"
          schema:
            type: array
            items:
              type: string
        - name: CacheNodeType
          in: query
          required: false
          description: "<p>The compute and memory capacity of the nodes in the node group
            (shard).</p> <p>The following node types are supported by
            ElastiCache. Generally speaking, the current generation types
            provide more memory and computational power at lower cost when
            compared to their equivalent previous generation counterparts.</p>
            <ul> <li> <p>General purpose:</p> <ul> <li> <p>Current generation:
            </p> <p> <b>M5 node types:</b> <code>cache.m5.large</code>,
            <code>cache.m5.xlarge</code>, <code>cache.m5.2xlarge</code>,
            <code>cache.m5.4xlarge</code>, <code>cache.m5.12xlarge</code>,
            <code>cache.m5.24xlarge</code> </p> <p> <b>M4 node types:</b>
            <code>cache.m4.large</code>, <code>cache.m4.xlarge</code>,
            <code>cache.m4.2xlarge</code>, <code>cache.m4.4xlarge</code>,
            <code>cache.m4.10xlarge</code> </p> <p> <b>T2 node types:</b>
            <code>cache.t2.micro</code>, <code>cache.t2.small</code>,
            <code>cache.t2.medium</code> </p> </li> <li> <p>Previous generation:
            (not recommended)</p> <p> <b>T1 node types:</b>
            <code>cache.t1.micro</code> </p> <p> <b>M1 node types:</b>
            <code>cache.m1.small</code>, <code>cache.m1.medium</code>,
            <code>cache.m1.large</code>, <code>cache.m1.xlarge</code> </p> <p>
            <b>M3 node types:</b> <code>cache.m3.medium</code>,
            <code>cache.m3.large</code>, <code>cache.m3.xlarge</code>,
            <code>cache.m3.2xlarge</code> </p> </li> </ul> </li> <li> <p>Compute
            optimized:</p> <ul> <li> <p>Previous generation: (not
            recommended)</p> <p> <b>C1 node types:</b>
            <code>cache.c1.xlarge</code> </p> </li> </ul> </li> <li> <p>Memory
            optimized:</p> <ul> <li> <p>Current generation: </p> <p> <b>R5 node
            types:</b> <code>cache.r5.large</code>,
            <code>cache.r5.xlarge</code>, <code>cache.r5.2xlarge</code>,
            <code>cache.r5.4xlarge</code>, <code>cache.r5.12xlarge</code>,
            <code>cache.r5.24xlarge</code> </p> <p> <b>R4 node types:</b>
            <code>cache.r4.large</code>, <code>cache.r4.xlarge</code>,
            <code>cache.r4.2xlarge</code>, <code>cache.r4.4xlarge</code>,
            <code>cache.r4.8xlarge</code>, <code>cache.r4.16xlarge</code> </p>
            </li> <li> <p>Previous generation: (not recommended)</p> <p> <b>M2
            node types:</b> <code>cache.m2.xlarge</code>,
            <code>cache.m2.2xlarge</code>, <code>cache.m2.4xlarge</code> </p>
            <p> <b>R3 node types:</b> <code>cache.r3.large</code>,
            <code>cache.r3.xlarge</code>, <code>cache.r3.2xlarge</code>,
            <code>cache.r3.4xlarge</code>, <code>cache.r3.8xlarge</code> </p>
            </li> </ul> </li> </ul> <p> <b>Additional node type info</b> </p>
            <ul> <li> <p>All current generation instance types are created in
            Amazon VPC by default.</p> </li> <li> <p>Redis append-only files
            (AOF) are not supported for T1 or T2 instances.</p> </li> <li>
            <p>Redis Multi-AZ with automatic failover is not supported on T1
            instances.</p> </li> <li> <p>Redis configuration variables
            <code>appendonly</code> and <code>appendfsync</code> are not
            supported on Redis version 2.8.22 and later.</p> </li> </ul>"
          schema:
            type: string
        - name: Engine
          in: query
          required: false
          description: The name of the cache engine to be used for the clusters in this
            replication group.
          schema:
            type: string
        - name: EngineVersion
          in: query
          required: false
          description: <p>The version number of the cache engine to be used for the
            clusters in this replication group. To view the supported cache
            engine versions, use the <code>DescribeCacheEngineVersions</code>
            operation.</p> <p> <b>Important:</b> You can upgrade to a newer
            engine version (see <a
            href="https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/SelectEngine.html#VersionManagement">Selecting
            a Cache Engine and Version</a>) in the <i>ElastiCache User
            Guide</i>, but you cannot downgrade to an earlier engine version. If
            you want to use an earlier engine version, you must delete the
            existing cluster or replication group and create it anew with the
            earlier engine version. </p>
          schema:
            type: string
        - name: CacheParameterGroupName
          in: query
          required: false
          description: <p>The name of the parameter group to associate with this
            replication group. If this argument is omitted, the default cache
            parameter group for the specified engine is used.</p> <note> <p>If
            you are restoring to an engine version that is different than the
            original, you must specify the default version of that version. For
            example, <code>CacheParameterGroupName=default.redis4.0</code>.</p>
            </note> <p>If you are running Redis version 3.2.4 or later, only one
            node group (shard), and want to use a default parameter group, we
            recommend that you specify the parameter group by name. </p> <ul>
            <li> <p>To create a Redis (cluster mode disabled) replication group,
            use <code>CacheParameterGroupName=default.redis3.2</code>.</p> </li>
            <li> <p>To create a Redis (cluster mode enabled) replication group,
            use
            <code>CacheParameterGroupName=default.redis3.2.cluster.on</code>.</p>
            </li> </ul>
          schema:
            type: string
        - name: CacheSubnetGroupName
          in: query
          required: false
          description: <p>The name of the cache subnet group to be used for the replication
            group.</p> <important> <p>If you're going to launch your cluster in
            an Amazon VPC, you need to create a subnet group before you start
            creating a cluster. For more information, see <a
            href="https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/SubnetGroups.html">Subnets
            and Subnet Groups</a>.</p> </important>
          schema:
            type: string
        - name: CacheSecurityGroupNames
          in: query
          required: false
          description: A list of cache security group names to associate with this
            replication group.
          schema:
            type: array
            items:
              type: string
        - name: SecurityGroupIds
          in: query
          required: false
          description: <p>One or more Amazon VPC security groups associated with this
            replication group.</p> <p>Use this parameter only when you are
            creating a replication group in an Amazon Virtual Private Cloud
            (Amazon VPC).</p>
          schema:
            type: array
            items:
              type: string
        - name: Tags
          in: query
          required: false
          description: "A list of cost allocation tags to be added to this resource. Tags
            are comma-separated key,value pairs (e.g. Key=<code>myKey</code>,
            Value=<code>myKeyValue</code>. You can include multiple tags as
            shown following: Key=<code>myKey</code>,
            Value=<code>myKeyValue</code> Key=<code>mySecondKey</code>,
            Value=<code>mySecondKeyValue</code>."
          schema:
            type: array
            items:
              type: string
        - name: SnapshotArns
          in: query
          required: false
          description: "<p>A list of Amazon Resource Names (ARN) that uniquely identify the
            Redis RDB snapshot files stored in Amazon S3. The snapshot files are
            used to populate the new replication group. The Amazon S3 object
            name in the ARN cannot contain any commas. The new replication group
            will have the number of node groups (console: shards) specified by
            the parameter <i>NumNodeGroups</i> or the number of node groups
            configured by <i>NodeGroupConfiguration</i> regardless of the number
            of ARNs specified here.</p> <p>Example of an Amazon S3 ARN:
            <code>arn:aws:s3:::my_bucket/snapshot1.rdb</code> </p>"
          schema:
            type: array
            items:
              type: string
        - name: SnapshotName
          in: query
          required: false
          description: The name of a snapshot from which to restore data into the new
            replication group. The snapshot status changes to
            <code>restoring</code> while the new replication group is being
            created.
          schema:
            type: string
        - name: PreferredMaintenanceWindow
          in: query
          required: false
          description: "<p>Specifies the weekly time range during which maintenance on the
            cluster is performed. It is specified as a range in the format
            ddd:hh24:mi-ddd:hh24:mi (24H Clock UTC). The minimum maintenance
            window is a 60 minute period. Valid values for <code>ddd</code>
            are:</p> <p>Specifies the weekly time range during which maintenance
            on the cluster is performed. It is specified as a range in the
            format ddd:hh24:mi-ddd:hh24:mi (24H Clock UTC). The minimum
            maintenance window is a 60 minute period.</p> <p>Valid values for
            <code>ddd</code> are:</p> <ul> <li> <p> <code>sun</code> </p> </li>
            <li> <p> <code>mon</code> </p> </li> <li> <p> <code>tue</code> </p>
            </li> <li> <p> <code>wed</code> </p> </li> <li> <p> <code>thu</code>
            </p> </li> <li> <p> <code>fri</code> </p> </li> <li> <p>
            <code>sat</code> </p> </li> </ul> <p>Example:
            <code>sun:23:00-mon:01:30</code> </p>"
          schema:
            type: string
        - name: Port
          in: query
          required: false
          description: The port number on which each member of the replication group
            accepts connections.
          schema:
            type: integer
        - name: NotificationTopicArn
          in: query
          required: false
          description: <p>The Amazon Resource Name (ARN) of the Amazon Simple Notification
            Service (SNS) topic to which notifications are sent.</p> <note>
            <p>The Amazon SNS topic owner must be the same as the cluster
            owner.</p> </note>
          schema:
            type: string
        - name: AutoMinorVersionUpgrade
          in: query
          required: false
          description: This parameter is currently disabled.
          schema:
            type: boolean
        - name: SnapshotRetentionLimit
          in: query
          required: false
          description: "<p>The number of days for which ElastiCache retains automatic
            snapshots before deleting them. For example, if you set
            <code>SnapshotRetentionLimit</code> to 5, a snapshot that was taken
            today is retained for 5 days before being deleted.</p> <p>Default: 0
            (i.e., automatic backups are disabled for this cluster).</p>"
          schema:
            type: integer
        - name: SnapshotWindow
          in: query
          required: false
          description: "<p>The daily time range (in UTC) during which ElastiCache begins
            taking a daily snapshot of your node group (shard).</p> <p>Example:
            <code>05:00-09:00</code> </p> <p>If you do not specify this
            parameter, ElastiCache automatically chooses an appropriate time
            range.</p>"
          schema:
            type: string
        - name: AuthToken
          in: query
          required: false
          description: "<p> <b>Reserved parameter.</b> The password used to access a
            password protected server.</p> <p> <code>AuthToken</code> can be
            specified only on replication groups where
            <code>TransitEncryptionEnabled</code> is <code>true</code>.</p>
            <important> <p>For HIPAA compliance, you must specify
            <code>TransitEncryptionEnabled</code> as <code>true</code>, an
            <code>AuthToken</code>, and a <code>CacheSubnetGroup</code>.</p>
            </important> <p>Password constraints:</p> <ul> <li> <p>Must be only
            printable ASCII characters.</p> </li> <li> <p>Must be at least 16
            characters and no more than 128 characters in length.</p> </li> <li>
            <p>Cannot contain any of the following characters: '/', '\"', or
            '@'. </p> </li> </ul> <p>For more information, see <a
            href=\"http://redis.io/commands/AUTH\">AUTH password</a> at
            http://redis.io/commands/AUTH.</p>"
          schema:
            type: string
        - name: TransitEncryptionEnabled
          in: query
          required: false
          description: "<p>A flag that enables in-transit encryption when set to
            <code>true</code>.</p> <p>You cannot modify the value of
            <code>TransitEncryptionEnabled</code> after the cluster is created.
            To enable in-transit encryption on a cluster you must set
            <code>TransitEncryptionEnabled</code> to <code>true</code> when you
            create a cluster.</p> <p>This parameter is valid only if the
            <code>Engine</code> parameter is <code>redis</code>, the
            <code>EngineVersion</code> parameter is <code>3.2.6</code>,
            <code>4.x</code> or later, and the cluster is being created in an
            Amazon VPC.</p> <p>If you enable in-transit encryption, you must
            also specify a value for <code>CacheSubnetGroup</code>.</p> <p>
            <b>Required:</b> Only available when creating a replication group in
            an Amazon VPC using redis version <code>3.2.6</code>,
            <code>4.x</code> or later.</p> <p>Default: <code>false</code> </p>
            <important> <p>For HIPAA compliance, you must specify
            <code>TransitEncryptionEnabled</code> as <code>true</code>, an
            <code>AuthToken</code>, and a <code>CacheSubnetGroup</code>.</p>
            </important>"
          schema:
            type: boolean
        - name: AtRestEncryptionEnabled
          in: query
          required: false
          description: "<p>A flag that enables encryption at rest when set to
            <code>true</code>.</p> <p>You cannot modify the value of
            <code>AtRestEncryptionEnabled</code> after the replication group is
            created. To enable encryption at rest on a replication group you
            must set <code>AtRestEncryptionEnabled</code> to <code>true</code>
            when you create the replication group. </p> <p> <b>Required:</b>
            Only available when creating a replication group in an Amazon VPC
            using redis version <code>3.2.6</code>, <code>4.x</code> or
            later.</p> <p>Default: <code>false</code> </p>"
          schema:
            type: boolean
        - name: KmsKeyId
          in: query
          required: false
          description: The ID of the KMS key used to encrypt the disk on the cluster.
          schema:
            type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - CreateReplicationGroup
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2015-02-02
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: CreateReplicationGroup
      operationId: POST CreateReplicationGroup
      description: "<p>Creates a Redis (cluster mode disabled) or a Redis (cluster mode
        enabled) replication group.</p> <p>A Redis (cluster mode disabled)
        replication group is a collection of clusters, where one of the clusters
        is a read/write primary and the others are read-only replicas. Writes to
        the primary are asynchronously propagated to the replicas.</p> <p>A
        Redis (cluster mode enabled) replication group is a collection of 1 to
        90 node groups (shards). Each node group (shard) has one read/write
        primary node and up to 5 read-only replica nodes. Writes to the primary
        are asynchronously propagated to the replicas. Redis (cluster mode
        enabled) replication groups partition the data across node groups
        (shards).</p> <p>When a Redis (cluster mode disabled) replication group
        has been successfully created, you can add one or more read replicas to
        it, up to a total of 5 read replicas. You cannot alter a Redis (cluster
        mode enabled) replication group after it has been created. However, if
        you need to increase or decrease the number of node groups (console:
        shards), you can avail yourself of ElastiCache for Redis' enhanced
        backup and restore. For more information, see <a
        href=\"https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/back\
        ups-restoring.html\">Restoring From a Backup with Cluster Resizing</a>
        in the <i>ElastiCache User Guide</i>.</p> <note> <p>This operation is
        valid for Redis only.</p> </note>"
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/CreateReplicationGroupResult"
        "480":
          description: CacheClusterNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/CacheClusterNotFoundFault"
        "481":
          description: InvalidCacheClusterStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidCacheClusterStateFault"
        "482":
          description: ReplicationGroupAlreadyExistsFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ReplicationGroupAlreadyExistsFault"
        "483":
          description: InsufficientCacheClusterCapacityFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InsufficientCacheClusterCapacityFault"
        "484":
          description: CacheSecurityGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/CacheSecurityGroupNotFoundFault"
        "485":
          description: CacheSubnetGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/CacheSubnetGroupNotFoundFault"
        "486":
          description: ClusterQuotaForCustomerExceededFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ClusterQuotaForCustomerExceededFault"
        "487":
          description: NodeQuotaForClusterExceededFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/NodeQuotaForClusterExceededFault"
        "488":
          description: NodeQuotaForCustomerExceededFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/NodeQuotaForCustomerExceededFault"
        "489":
          description: CacheParameterGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/CacheParameterGroupNotFoundFault"
        "490":
          description: InvalidVPCNetworkStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidVPCNetworkStateFault"
        "491":
          description: TagQuotaPerResourceExceeded
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/TagQuotaPerResourceExceeded"
        "492":
          description: NodeGroupsPerReplicationGroupQuotaExceededFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/NodeGroupsPerReplicationGroupQuotaExcee\
                  dedFault"
        "493":
          description: InvalidParameterValueException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidParameterValueException"
        "494":
          description: InvalidParameterCombinationException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidParameterCombinationException"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - CreateReplicationGroup
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2015-02-02
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                ReplicationGroupId:
                  description: <p>The replication group identifier. This parameter is
                    stored as a lowercase string.</p> <p>Constraints:</p> <ul>
                    <li> <p>A name must contain from 1 to 40 alphanumeric
                    characters or hyphens.</p> </li> <li> <p>The first character
                    must be a letter.</p> </li> <li> <p>A name cannot end with a
                    hyphen or contain two consecutive hyphens.</p> </li> </ul>
                  type: string
                ReplicationGroupDescription:
                  description: A user-created description for the replication group.
                  type: string
                PrimaryClusterId:
                  description: <p>The identifier of the cluster that serves as the primary
                    for this replication group. This cluster must already exist
                    and have a status of <code>available</code>.</p> <p>This
                    parameter is not required if <code>NumCacheClusters</code>,
                    <code>NumNodeGroups</code>, or
                    <code>ReplicasPerNodeGroup</code> is specified.</p>
                  type: string
                AutomaticFailoverEnabled:
                  description: "<p>Specifies whether a read-only replica is automatically
                    promoted to read/write primary if the existing primary
                    fails.</p> <p>If <code>true</code>, Multi-AZ is enabled for
                    this replication group. If <code>false</code>, Multi-AZ is
                    disabled for this replication group.</p> <p>
                    <code>AutomaticFailoverEnabled</code> must be enabled for
                    Redis (cluster mode enabled) replication groups.</p>
                    <p>Default: false</p> <p>Amazon ElastiCache for Redis does
                    not support Multi-AZ with automatic failover on:</p> <ul>
                    <li> <p>Redis versions earlier than 2.8.6.</p> </li> <li>
                    <p>Redis (cluster mode disabled): T1 node types.</p> </li>
                    <li> <p>Redis (cluster mode enabled): T1 node types.</p>
                    </li> </ul>"
                  type: boolean
                NumCacheClusters:
                  description: <p>The number of clusters this replication group initially
                    has.</p> <p>This parameter is not used if there is more than
                    one node group (shard). You should use
                    <code>ReplicasPerNodeGroup</code> instead.</p> <p>If
                    <code>AutomaticFailoverEnabled</code> is <code>true</code>,
                    the value of this parameter must be at least 2. If
                    <code>AutomaticFailoverEnabled</code> is <code>false</code>
                    you can omit this parameter (it will default to 1), or you
                    can explicitly set it to a value between 2 and 6.</p> <p>The
                    maximum permitted value for <code>NumCacheClusters</code> is
                    6 (1 primary plus 5 replicas).</p>
                  type: integer
                PreferredCacheClusterAZs:
                  description: "<p>A list of EC2 Availability Zones in which the
                    replication group's clusters are created. The order of the
                    Availability Zones in the list is the order in which
                    clusters are allocated. The primary cluster is created in
                    the first AZ in the list.</p> <p>This parameter is not used
                    if there is more than one node group (shard). You should use
                    <code>NodeGroupConfiguration</code> instead.</p> <note>
                    <p>If you are creating your replication group in an Amazon
                    VPC (recommended), you can only locate clusters in
                    Availability Zones associated with the subnets in the
                    selected subnet group.</p> <p>The number of Availability
                    Zones listed must equal the value of
                    <code>NumCacheClusters</code>.</p> </note> <p>Default:
                    system chosen Availability Zones.</p>"
                  type: array
                  items:
                    type: string
                NumNodeGroups:
                  description: "<p>An optional parameter that specifies the number of node
                    groups (shards) for this Redis (cluster mode enabled)
                    replication group. For Redis (cluster mode disabled) either
                    omit this parameter or set it to 1.</p> <p>Default: 1</p>"
                  type: integer
                ReplicasPerNodeGroup:
                  description: An optional parameter that specifies the number of replica
                    nodes in each node group (shard). Valid values are 0 to 5.
                  type: integer
                NodeGroupConfiguration:
                  description: "<p>A list of node group (shard) configuration options. Each
                    node group (shard) configuration has the following members:
                    <code>PrimaryAvailabilityZone</code>,
                    <code>ReplicaAvailabilityZones</code>,
                    <code>ReplicaCount</code>, and <code>Slots</code>.</p> <p>If
                    you're creating a Redis (cluster mode disabled) or a Redis
                    (cluster mode enabled) replication group, you can use this
                    parameter to individually configure each node group (shard),
                    or you can omit this parameter. However, when seeding a
                    Redis (cluster mode enabled) cluster from a S3 rdb file, you
                    must configure each node group (shard) using this parameter
                    because you must specify the slots for each node group.</p>"
                  type: array
                  items:
                    type: string
                CacheNodeType:
                  description: "<p>The compute and memory capacity of the nodes in the node
                    group (shard).</p> <p>The following node types are supported
                    by ElastiCache. Generally speaking, the current generation
                    types provide more memory and computational power at lower
                    cost when compared to their equivalent previous generation
                    counterparts.</p> <ul> <li> <p>General purpose:</p> <ul>
                    <li> <p>Current generation: </p> <p> <b>M5 node types:</b>
                    <code>cache.m5.large</code>, <code>cache.m5.xlarge</code>,
                    <code>cache.m5.2xlarge</code>,
                    <code>cache.m5.4xlarge</code>,
                    <code>cache.m5.12xlarge</code>,
                    <code>cache.m5.24xlarge</code> </p> <p> <b>M4 node
                    types:</b> <code>cache.m4.large</code>,
                    <code>cache.m4.xlarge</code>, <code>cache.m4.2xlarge</code>,
                    <code>cache.m4.4xlarge</code>,
                    <code>cache.m4.10xlarge</code> </p> <p> <b>T2 node
                    types:</b> <code>cache.t2.micro</code>,
                    <code>cache.t2.small</code>, <code>cache.t2.medium</code>
                    </p> </li> <li> <p>Previous generation: (not
                    recommended)</p> <p> <b>T1 node types:</b>
                    <code>cache.t1.micro</code> </p> <p> <b>M1 node types:</b>
                    <code>cache.m1.small</code>, <code>cache.m1.medium</code>,
                    <code>cache.m1.large</code>, <code>cache.m1.xlarge</code>
                    </p> <p> <b>M3 node types:</b> <code>cache.m3.medium</code>,
                    <code>cache.m3.large</code>, <code>cache.m3.xlarge</code>,
                    <code>cache.m3.2xlarge</code> </p> </li> </ul> </li> <li>
                    <p>Compute optimized:</p> <ul> <li> <p>Previous generation:
                    (not recommended)</p> <p> <b>C1 node types:</b>
                    <code>cache.c1.xlarge</code> </p> </li> </ul> </li> <li>
                    <p>Memory optimized:</p> <ul> <li> <p>Current generation:
                    </p> <p> <b>R5 node types:</b> <code>cache.r5.large</code>,
                    <code>cache.r5.xlarge</code>, <code>cache.r5.2xlarge</code>,
                    <code>cache.r5.4xlarge</code>,
                    <code>cache.r5.12xlarge</code>,
                    <code>cache.r5.24xlarge</code> </p> <p> <b>R4 node
                    types:</b> <code>cache.r4.large</code>,
                    <code>cache.r4.xlarge</code>, <code>cache.r4.2xlarge</code>,
                    <code>cache.r4.4xlarge</code>,
                    <code>cache.r4.8xlarge</code>,
                    <code>cache.r4.16xlarge</code> </p> </li> <li> <p>Previous
                    generation: (not recommended)</p> <p> <b>M2 node types:</b>
                    <code>cache.m2.xlarge</code>, <code>cache.m2.2xlarge</code>,
                    <code>cache.m2.4xlarge</code> </p> <p> <b>R3 node types:</b>
                    <code>cache.r3.large</code>, <code>cache.r3.xlarge</code>,
                    <code>cache.r3.2xlarge</code>,
                    <code>cache.r3.4xlarge</code>, <code>cache.r3.8xlarge</code>
                    </p> </li> </ul> </li> </ul> <p> <b>Additional node type
                    info</b> </p> <ul> <li> <p>All current generation instance
                    types are created in Amazon VPC by default.</p> </li> <li>
                    <p>Redis append-only files (AOF) are not supported for T1 or
                    T2 instances.</p> </li> <li> <p>Redis Multi-AZ with
                    automatic failover is not supported on T1 instances.</p>
                    </li> <li> <p>Redis configuration variables
                    <code>appendonly</code> and <code>appendfsync</code> are not
                    supported on Redis version 2.8.22 and later.</p> </li>
                    </ul>"
                  type: string
                Engine:
                  description: The name of the cache engine to be used for the clusters in
                    this replication group.
                  type: string
                EngineVersion:
                  description: <p>The version number of the cache engine to be used for the
                    clusters in this replication group. To view the supported
                    cache engine versions, use the
                    <code>DescribeCacheEngineVersions</code> operation.</p> <p>
                    <b>Important:</b> You can upgrade to a newer engine version
                    (see <a
                    href="https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/SelectEngine.html#VersionManagement">Selecting
                    a Cache Engine and Version</a>) in the <i>ElastiCache User
                    Guide</i>, but you cannot downgrade to an earlier engine
                    version. If you want to use an earlier engine version, you
                    must delete the existing cluster or replication group and
                    create it anew with the earlier engine version. </p>
                  type: string
                CacheParameterGroupName:
                  description: <p>The name of the parameter group to associate with this
                    replication group. If this argument is omitted, the default
                    cache parameter group for the specified engine is used.</p>
                    <note> <p>If you are restoring to an engine version that is
                    different than the original, you must specify the default
                    version of that version. For example,
                    <code>CacheParameterGroupName=default.redis4.0</code>.</p>
                    </note> <p>If you are running Redis version 3.2.4 or later,
                    only one node group (shard), and want to use a default
                    parameter group, we recommend that you specify the parameter
                    group by name. </p> <ul> <li> <p>To create a Redis (cluster
                    mode disabled) replication group, use
                    <code>CacheParameterGroupName=default.redis3.2</code>.</p>
                    </li> <li> <p>To create a Redis (cluster mode enabled)
                    replication group, use
                    <code>CacheParameterGroupName=default.redis3.2.cluster.on</code>.</p>
                    </li> </ul>
                  type: string
                CacheSubnetGroupName:
                  description: <p>The name of the cache subnet group to be used for the
                    replication group.</p> <important> <p>If you're going to
                    launch your cluster in an Amazon VPC, you need to create a
                    subnet group before you start creating a cluster. For more
                    information, see <a
                    href="https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/SubnetGroups.html">Subnets
                    and Subnet Groups</a>.</p> </important>
                  type: string
                CacheSecurityGroupNames:
                  description: A list of cache security group names to associate with this
                    replication group.
                  type: array
                  items:
                    type: string
                SecurityGroupIds:
                  description: <p>One or more Amazon VPC security groups associated with
                    this replication group.</p> <p>Use this parameter only when
                    you are creating a replication group in an Amazon Virtual
                    Private Cloud (Amazon VPC).</p>
                  type: array
                  items:
                    type: string
                Tags:
                  description: "A list of cost allocation tags to be added to this
                    resource. Tags are comma-separated key,value pairs (e.g.
                    Key=<code>myKey</code>, Value=<code>myKeyValue</code>. You
                    can include multiple tags as shown following:
                    Key=<code>myKey</code>, Value=<code>myKeyValue</code>
                    Key=<code>mySecondKey</code>,
                    Value=<code>mySecondKeyValue</code>."
                  type: array
                  items:
                    type: string
                SnapshotArns:
                  description: "<p>A list of Amazon Resource Names (ARN) that uniquely
                    identify the Redis RDB snapshot files stored in Amazon S3.
                    The snapshot files are used to populate the new replication
                    group. The Amazon S3 object name in the ARN cannot contain
                    any commas. The new replication group will have the number
                    of node groups (console: shards) specified by the parameter
                    <i>NumNodeGroups</i> or the number of node groups configured
                    by <i>NodeGroupConfiguration</i> regardless of the number of
                    ARNs specified here.</p> <p>Example of an Amazon S3 ARN:
                    <code>arn:aws:s3:::my_bucket/snapshot1.rdb</code> </p>"
                  type: array
                  items:
                    type: string
                SnapshotName:
                  description: The name of a snapshot from which to restore data into the
                    new replication group. The snapshot status changes to
                    <code>restoring</code> while the new replication group is
                    being created.
                  type: string
                PreferredMaintenanceWindow:
                  description: "<p>Specifies the weekly time range during which maintenance
                    on the cluster is performed. It is specified as a range in
                    the format ddd:hh24:mi-ddd:hh24:mi (24H Clock UTC). The
                    minimum maintenance window is a 60 minute period. Valid
                    values for <code>ddd</code> are:</p> <p>Specifies the weekly
                    time range during which maintenance on the cluster is
                    performed. It is specified as a range in the format
                    ddd:hh24:mi-ddd:hh24:mi (24H Clock UTC). The minimum
                    maintenance window is a 60 minute period.</p> <p>Valid
                    values for <code>ddd</code> are:</p> <ul> <li> <p>
                    <code>sun</code> </p> </li> <li> <p> <code>mon</code> </p>
                    </li> <li> <p> <code>tue</code> </p> </li> <li> <p>
                    <code>wed</code> </p> </li> <li> <p> <code>thu</code> </p>
                    </li> <li> <p> <code>fri</code> </p> </li> <li> <p>
                    <code>sat</code> </p> </li> </ul> <p>Example:
                    <code>sun:23:00-mon:01:30</code> </p>"
                  type: string
                Port:
                  description: The port number on which each member of the replication
                    group accepts connections.
                  type: integer
                NotificationTopicArn:
                  description: <p>The Amazon Resource Name (ARN) of the Amazon Simple
                    Notification Service (SNS) topic to which notifications are
                    sent.</p> <note> <p>The Amazon SNS topic owner must be the
                    same as the cluster owner.</p> </note>
                  type: string
                AutoMinorVersionUpgrade:
                  description: This parameter is currently disabled.
                  type: boolean
                SnapshotRetentionLimit:
                  description: "<p>The number of days for which ElastiCache retains
                    automatic snapshots before deleting them. For example, if
                    you set <code>SnapshotRetentionLimit</code> to 5, a snapshot
                    that was taken today is retained for 5 days before being
                    deleted.</p> <p>Default: 0 (i.e., automatic backups are
                    disabled for this cluster).</p>"
                  type: integer
                SnapshotWindow:
                  description: "<p>The daily time range (in UTC) during which ElastiCache
                    begins taking a daily snapshot of your node group
                    (shard).</p> <p>Example: <code>05:00-09:00</code> </p> <p>If
                    you do not specify this parameter, ElastiCache automatically
                    chooses an appropriate time range.</p>"
                  type: string
                AuthToken:
                  description: "<p> <b>Reserved parameter.</b> The password used to access
                    a password protected server.</p> <p> <code>AuthToken</code>
                    can be specified only on replication groups where
                    <code>TransitEncryptionEnabled</code> is
                    <code>true</code>.</p> <important> <p>For HIPAA compliance,
                    you must specify <code>TransitEncryptionEnabled</code> as
                    <code>true</code>, an <code>AuthToken</code>, and a
                    <code>CacheSubnetGroup</code>.</p> </important> <p>Password
                    constraints:</p> <ul> <li> <p>Must be only printable ASCII
                    characters.</p> </li> <li> <p>Must be at least 16 characters
                    and no more than 128 characters in length.</p> </li> <li>
                    <p>Cannot contain any of the following characters: '/',
                    '\"', or '@'. </p> </li> </ul> <p>For more information, see
                    <a href=\"http://redis.io/commands/AUTH\">AUTH password</a>
                    at http://redis.io/commands/AUTH.</p>"
                  type: string
                TransitEncryptionEnabled:
                  description: "<p>A flag that enables in-transit encryption when set to
                    <code>true</code>.</p> <p>You cannot modify the value of
                    <code>TransitEncryptionEnabled</code> after the cluster is
                    created. To enable in-transit encryption on a cluster you
                    must set <code>TransitEncryptionEnabled</code> to
                    <code>true</code> when you create a cluster.</p> <p>This
                    parameter is valid only if the <code>Engine</code> parameter
                    is <code>redis</code>, the <code>EngineVersion</code>
                    parameter is <code>3.2.6</code>, <code>4.x</code> or later,
                    and the cluster is being created in an Amazon VPC.</p> <p>If
                    you enable in-transit encryption, you must also specify a
                    value for <code>CacheSubnetGroup</code>.</p> <p>
                    <b>Required:</b> Only available when creating a replication
                    group in an Amazon VPC using redis version
                    <code>3.2.6</code>, <code>4.x</code> or later.</p>
                    <p>Default: <code>false</code> </p> <important> <p>For HIPAA
                    compliance, you must specify
                    <code>TransitEncryptionEnabled</code> as <code>true</code>,
                    an <code>AuthToken</code>, and a
                    <code>CacheSubnetGroup</code>.</p> </important>"
                  type: boolean
                AtRestEncryptionEnabled:
                  description: "<p>A flag that enables encryption at rest when set to
                    <code>true</code>.</p> <p>You cannot modify the value of
                    <code>AtRestEncryptionEnabled</code> after the replication
                    group is created. To enable encryption at rest on a
                    replication group you must set
                    <code>AtRestEncryptionEnabled</code> to <code>true</code>
                    when you create the replication group. </p> <p>
                    <b>Required:</b> Only available when creating a replication
                    group in an Amazon VPC using redis version
                    <code>3.2.6</code>, <code>4.x</code> or later.</p>
                    <p>Default: <code>false</code> </p>"
                  type: boolean
                KmsKeyId:
                  description: The ID of the KMS key used to encrypt the disk on the
                    cluster.
                  type: string
              required:
                - ReplicationGroupId
                - ReplicationGroupDescription
  /#Action=CreateSnapshot:
    get:
      x-aws-operation-name: CreateSnapshot
      operationId: GET CreateSnapshot
      description: <p>Creates a copy of an entire cluster or replication group at a
        specific moment in time.</p> <note> <p>This operation is valid for Redis
        only.</p> </note>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/CreateSnapshotResult"
        "480":
          description: SnapshotAlreadyExistsFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/SnapshotAlreadyExistsFault"
        "481":
          description: CacheClusterNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/CacheClusterNotFoundFault"
        "482":
          description: ReplicationGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ReplicationGroupNotFoundFault"
        "483":
          description: InvalidCacheClusterStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidCacheClusterStateFault"
        "484":
          description: InvalidReplicationGroupStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidReplicationGroupStateFault"
        "485":
          description: SnapshotQuotaExceededFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/SnapshotQuotaExceededFault"
        "486":
          description: SnapshotFeatureNotSupportedFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/SnapshotFeatureNotSupportedFault"
        "487":
          description: InvalidParameterCombinationException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidParameterCombinationException"
        "488":
          description: InvalidParameterValueException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidParameterValueException"
      parameters:
        - name: ReplicationGroupId
          in: query
          required: false
          description: The identifier of an existing replication group. The snapshot is
            created from this replication group.
          schema:
            type: string
        - name: CacheClusterId
          in: query
          required: false
          description: The identifier of an existing cluster. The snapshot is created from
            this cluster.
          schema:
            type: string
        - name: SnapshotName
          in: query
          required: true
          description: A name for the snapshot being created.
          schema:
            type: string
        - name: KmsKeyId
          in: query
          required: false
          description: The ID of the KMS key used to encrypt the snapshot.
          schema:
            type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - CreateSnapshot
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2015-02-02
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: CreateSnapshot
      operationId: POST CreateSnapshot
      description: <p>Creates a copy of an entire cluster or replication group at a
        specific moment in time.</p> <note> <p>This operation is valid for Redis
        only.</p> </note>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/CreateSnapshotResult"
        "480":
          description: SnapshotAlreadyExistsFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/SnapshotAlreadyExistsFault"
        "481":
          description: CacheClusterNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/CacheClusterNotFoundFault"
        "482":
          description: ReplicationGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ReplicationGroupNotFoundFault"
        "483":
          description: InvalidCacheClusterStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidCacheClusterStateFault"
        "484":
          description: InvalidReplicationGroupStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidReplicationGroupStateFault"
        "485":
          description: SnapshotQuotaExceededFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/SnapshotQuotaExceededFault"
        "486":
          description: SnapshotFeatureNotSupportedFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/SnapshotFeatureNotSupportedFault"
        "487":
          description: InvalidParameterCombinationException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidParameterCombinationException"
        "488":
          description: InvalidParameterValueException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidParameterValueException"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - CreateSnapshot
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2015-02-02
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                ReplicationGroupId:
                  description: The identifier of an existing replication group. The
                    snapshot is created from this replication group.
                  type: string
                CacheClusterId:
                  description: The identifier of an existing cluster. The snapshot is
                    created from this cluster.
                  type: string
                SnapshotName:
                  description: A name for the snapshot being created.
                  type: string
                KmsKeyId:
                  description: The ID of the KMS key used to encrypt the snapshot.
                  type: string
              required:
                - SnapshotName
  /#Action=DecreaseReplicaCount:
    get:
      x-aws-operation-name: DecreaseReplicaCount
      operationId: GET DecreaseReplicaCount
      description: Dynamically decreases the number of replics in a Redis (cluster mode
        disabled) replication group or the number of replica nodes in one or
        more node groups (shards) of a Redis (cluster mode enabled) replication
        group. This operation is performed with no cluster down time.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DecreaseReplicaCountResult"
        "480":
          description: ReplicationGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ReplicationGroupNotFoundFault"
        "481":
          description: InvalidReplicationGroupStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidReplicationGroupStateFault"
        "482":
          description: InvalidCacheClusterStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidCacheClusterStateFault"
        "483":
          description: InvalidVPCNetworkStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidVPCNetworkStateFault"
        "484":
          description: InsufficientCacheClusterCapacityFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InsufficientCacheClusterCapacityFault"
        "485":
          description: ClusterQuotaForCustomerExceededFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ClusterQuotaForCustomerExceededFault"
        "486":
          description: NodeGroupsPerReplicationGroupQuotaExceededFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/NodeGroupsPerReplicationGroupQuotaExcee\
                  dedFault"
        "487":
          description: NodeQuotaForCustomerExceededFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/NodeQuotaForCustomerExceededFault"
        "488":
          description: ServiceLinkedRoleNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ServiceLinkedRoleNotFoundFault"
        "489":
          description: NoOperationFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/NoOperationFault"
        "490":
          description: InvalidParameterValueException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidParameterValueException"
        "491":
          description: InvalidParameterCombinationException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidParameterCombinationException"
      parameters:
        - name: ReplicationGroupId
          in: query
          required: true
          description: The id of the replication group from which you want to remove
            replica nodes.
          schema:
            type: string
        - name: NewReplicaCount
          in: query
          required: false
          description: "<p>The number of read replica nodes you want at the completion of
            this operation. For Redis (cluster mode disabled) replication
            groups, this is the number of replica nodes in the replication
            group. For Redis (cluster mode enabled) replication groups, this is
            the number of replica nodes in each of the replication group's node
            groups.</p> <p>The minimum number of replicas in a shard or
            replication group is:</p> <ul> <li> <p>Redis (cluster mode
            disabled)</p> <ul> <li> <p>If Multi-AZ with Automatic Failover is
            enabled: 1</p> </li> <li> <p>If Multi-AZ with Automatic Failover is
            not enabled: 0</p> </li> </ul> </li> <li> <p>Redis (cluster mode
            enabled): 0 (though you will not be able to failover to a replica if
            your primary node fails)</p> </li> </ul>"
          schema:
            type: integer
        - name: ReplicaConfiguration
          in: query
          required: false
          description: "A list of <code>ConfigureShard</code> objects that can be used to
            configure each shard in a Redis (cluster mode enabled) replication
            group. The <code>ConfigureShard</code> has three members:
            <code>NewReplicaCount</code>, <code>NodeGroupId</code>, and
            <code>PreferredAvailabilityZones</code>."
          schema:
            type: array
            items:
              type: string
        - name: ReplicasToRemove
          in: query
          required: false
          description: A list of the node ids to remove from the replication group or node
            group (shard).
          schema:
            type: array
            items:
              type: string
        - name: ApplyImmediately
          in: query
          required: true
          description: If <code>True</code>, the number of replica nodes is decreased
            immediately. <code>ApplyImmediately=False</code> is not currently
            supported.
          schema:
            type: boolean
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DecreaseReplicaCount
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2015-02-02
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: DecreaseReplicaCount
      operationId: POST DecreaseReplicaCount
      description: Dynamically decreases the number of replics in a Redis (cluster mode
        disabled) replication group or the number of replica nodes in one or
        more node groups (shards) of a Redis (cluster mode enabled) replication
        group. This operation is performed with no cluster down time.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DecreaseReplicaCountResult"
        "480":
          description: ReplicationGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ReplicationGroupNotFoundFault"
        "481":
          description: InvalidReplicationGroupStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidReplicationGroupStateFault"
        "482":
          description: InvalidCacheClusterStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidCacheClusterStateFault"
        "483":
          description: InvalidVPCNetworkStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidVPCNetworkStateFault"
        "484":
          description: InsufficientCacheClusterCapacityFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InsufficientCacheClusterCapacityFault"
        "485":
          description: ClusterQuotaForCustomerExceededFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ClusterQuotaForCustomerExceededFault"
        "486":
          description: NodeGroupsPerReplicationGroupQuotaExceededFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/NodeGroupsPerReplicationGroupQuotaExcee\
                  dedFault"
        "487":
          description: NodeQuotaForCustomerExceededFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/NodeQuotaForCustomerExceededFault"
        "488":
          description: ServiceLinkedRoleNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ServiceLinkedRoleNotFoundFault"
        "489":
          description: NoOperationFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/NoOperationFault"
        "490":
          description: InvalidParameterValueException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidParameterValueException"
        "491":
          description: InvalidParameterCombinationException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidParameterCombinationException"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DecreaseReplicaCount
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2015-02-02
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                ReplicationGroupId:
                  description: The id of the replication group from which you want to
                    remove replica nodes.
                  type: string
                NewReplicaCount:
                  description: "<p>The number of read replica nodes you want at the
                    completion of this operation. For Redis (cluster mode
                    disabled) replication groups, this is the number of replica
                    nodes in the replication group. For Redis (cluster mode
                    enabled) replication groups, this is the number of replica
                    nodes in each of the replication group's node groups.</p>
                    <p>The minimum number of replicas in a shard or replication
                    group is:</p> <ul> <li> <p>Redis (cluster mode disabled)</p>
                    <ul> <li> <p>If Multi-AZ with Automatic Failover is enabled:
                    1</p> </li> <li> <p>If Multi-AZ with Automatic Failover is
                    not enabled: 0</p> </li> </ul> </li> <li> <p>Redis (cluster
                    mode enabled): 0 (though you will not be able to failover to
                    a replica if your primary node fails)</p> </li> </ul>"
                  type: integer
                ReplicaConfiguration:
                  description: "A list of <code>ConfigureShard</code> objects that can be
                    used to configure each shard in a Redis (cluster mode
                    enabled) replication group. The <code>ConfigureShard</code>
                    has three members: <code>NewReplicaCount</code>,
                    <code>NodeGroupId</code>, and
                    <code>PreferredAvailabilityZones</code>."
                  type: array
                  items:
                    type: string
                ReplicasToRemove:
                  description: A list of the node ids to remove from the replication group
                    or node group (shard).
                  type: array
                  items:
                    type: string
                ApplyImmediately:
                  description: If <code>True</code>, the number of replica nodes is
                    decreased immediately. <code>ApplyImmediately=False</code>
                    is not currently supported.
                  type: boolean
              required:
                - ReplicationGroupId
                - ApplyImmediately
  /#Action=DeleteCacheCluster:
    get:
      x-aws-operation-name: DeleteCacheCluster
      operationId: GET DeleteCacheCluster
      description: <p>Deletes a previously provisioned cluster.
        <code>DeleteCacheCluster</code> deletes all associated cache nodes, node
        endpoints and the cluster itself. When you receive a successful response
        from this operation, Amazon ElastiCache immediately begins deleting the
        cluster; you cannot cancel or revert this operation.</p> <p>This
        operation is not valid for:</p> <ul> <li> <p>Redis (cluster mode
        enabled) clusters</p> </li> <li> <p>A cluster that is the last read
        replica of a replication group</p> </li> <li> <p>A node group (shard)
        that has Multi-AZ mode enabled</p> </li> <li> <p>A cluster from a Redis
        (cluster mode enabled) replication group</p> </li> <li> <p>A cluster
        that is not in the <code>available</code> state</p> </li> </ul>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DeleteCacheClusterResult"
        "480":
          description: CacheClusterNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/CacheClusterNotFoundFault"
        "481":
          description: InvalidCacheClusterStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidCacheClusterStateFault"
        "482":
          description: SnapshotAlreadyExistsFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/SnapshotAlreadyExistsFault"
        "483":
          description: SnapshotFeatureNotSupportedFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/SnapshotFeatureNotSupportedFault"
        "484":
          description: SnapshotQuotaExceededFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/SnapshotQuotaExceededFault"
        "485":
          description: InvalidParameterValueException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidParameterValueException"
        "486":
          description: InvalidParameterCombinationException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidParameterCombinationException"
      parameters:
        - name: CacheClusterId
          in: query
          required: true
          description: The cluster identifier for the cluster to be deleted. This parameter
            is not case sensitive.
          schema:
            type: string
        - name: FinalSnapshotIdentifier
          in: query
          required: false
          description: The user-supplied name of a final cluster snapshot. This is the
            unique name that identifies the snapshot. ElastiCache creates the
            snapshot, and then deletes the cluster immediately afterward.
          schema:
            type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DeleteCacheCluster
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2015-02-02
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: DeleteCacheCluster
      operationId: POST DeleteCacheCluster
      description: <p>Deletes a previously provisioned cluster.
        <code>DeleteCacheCluster</code> deletes all associated cache nodes, node
        endpoints and the cluster itself. When you receive a successful response
        from this operation, Amazon ElastiCache immediately begins deleting the
        cluster; you cannot cancel or revert this operation.</p> <p>This
        operation is not valid for:</p> <ul> <li> <p>Redis (cluster mode
        enabled) clusters</p> </li> <li> <p>A cluster that is the last read
        replica of a replication group</p> </li> <li> <p>A node group (shard)
        that has Multi-AZ mode enabled</p> </li> <li> <p>A cluster from a Redis
        (cluster mode enabled) replication group</p> </li> <li> <p>A cluster
        that is not in the <code>available</code> state</p> </li> </ul>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DeleteCacheClusterResult"
        "480":
          description: CacheClusterNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/CacheClusterNotFoundFault"
        "481":
          description: InvalidCacheClusterStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidCacheClusterStateFault"
        "482":
          description: SnapshotAlreadyExistsFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/SnapshotAlreadyExistsFault"
        "483":
          description: SnapshotFeatureNotSupportedFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/SnapshotFeatureNotSupportedFault"
        "484":
          description: SnapshotQuotaExceededFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/SnapshotQuotaExceededFault"
        "485":
          description: InvalidParameterValueException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidParameterValueException"
        "486":
          description: InvalidParameterCombinationException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidParameterCombinationException"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DeleteCacheCluster
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2015-02-02
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                CacheClusterId:
                  description: The cluster identifier for the cluster to be deleted. This
                    parameter is not case sensitive.
                  type: string
                FinalSnapshotIdentifier:
                  description: The user-supplied name of a final cluster snapshot. This is
                    the unique name that identifies the snapshot. ElastiCache
                    creates the snapshot, and then deletes the cluster
                    immediately afterward.
                  type: string
              required:
                - CacheClusterId
  /#Action=DeleteCacheParameterGroup:
    get:
      x-aws-operation-name: DeleteCacheParameterGroup
      operationId: GET DeleteCacheParameterGroup
      description: Deletes the specified cache parameter group. You cannot delete a cache
        parameter group if it is associated with any cache clusters.
      responses:
        "200":
          description: Success
        "480":
          description: InvalidCacheParameterGroupStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidCacheParameterGroupStateFault"
        "481":
          description: CacheParameterGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/CacheParameterGroupNotFoundFault"
        "482":
          description: InvalidParameterValueException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidParameterValueException"
        "483":
          description: InvalidParameterCombinationException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidParameterCombinationException"
      parameters:
        - name: CacheParameterGroupName
          in: query
          required: true
          description: <p>The name of the cache parameter group to delete.</p> <note>
            <p>The specified cache security group must not be associated with
            any clusters.</p> </note>
          schema:
            type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DeleteCacheParameterGroup
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2015-02-02
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: DeleteCacheParameterGroup
      operationId: POST DeleteCacheParameterGroup
      description: Deletes the specified cache parameter group. You cannot delete a cache
        parameter group if it is associated with any cache clusters.
      responses:
        "200":
          description: Success
        "480":
          description: InvalidCacheParameterGroupStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidCacheParameterGroupStateFault"
        "481":
          description: CacheParameterGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/CacheParameterGroupNotFoundFault"
        "482":
          description: InvalidParameterValueException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidParameterValueException"
        "483":
          description: InvalidParameterCombinationException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidParameterCombinationException"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DeleteCacheParameterGroup
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2015-02-02
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                CacheParameterGroupName:
                  description: <p>The name of the cache parameter group to delete.</p>
                    <note> <p>The specified cache security group must not be
                    associated with any clusters.</p> </note>
                  type: string
              required:
                - CacheParameterGroupName
  /#Action=DeleteCacheSecurityGroup:
    get:
      x-aws-operation-name: DeleteCacheSecurityGroup
      operationId: GET DeleteCacheSecurityGroup
      description: <p>Deletes a cache security group.</p> <note> <p>You cannot delete a
        cache security group if it is associated with any clusters.</p> </note>
      responses:
        "200":
          description: Success
        "480":
          description: InvalidCacheSecurityGroupStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidCacheSecurityGroupStateFault"
        "481":
          description: CacheSecurityGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/CacheSecurityGroupNotFoundFault"
        "482":
          description: InvalidParameterValueException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidParameterValueException"
        "483":
          description: InvalidParameterCombinationException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidParameterCombinationException"
      parameters:
        - name: CacheSecurityGroupName
          in: query
          required: true
          description: <p>The name of the cache security group to delete.</p> <note> <p>You
            cannot delete the default security group.</p> </note>
          schema:
            type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DeleteCacheSecurityGroup
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2015-02-02
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: DeleteCacheSecurityGroup
      operationId: POST DeleteCacheSecurityGroup
      description: <p>Deletes a cache security group.</p> <note> <p>You cannot delete a
        cache security group if it is associated with any clusters.</p> </note>
      responses:
        "200":
          description: Success
        "480":
          description: InvalidCacheSecurityGroupStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidCacheSecurityGroupStateFault"
        "481":
          description: CacheSecurityGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/CacheSecurityGroupNotFoundFault"
        "482":
          description: InvalidParameterValueException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidParameterValueException"
        "483":
          description: InvalidParameterCombinationException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidParameterCombinationException"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DeleteCacheSecurityGroup
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2015-02-02
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                CacheSecurityGroupName:
                  description: <p>The name of the cache security group to delete.</p>
                    <note> <p>You cannot delete the default security group.</p>
                    </note>
                  type: string
              required:
                - CacheSecurityGroupName
  /#Action=DeleteCacheSubnetGroup:
    get:
      x-aws-operation-name: DeleteCacheSubnetGroup
      operationId: GET DeleteCacheSubnetGroup
      description: <p>Deletes a cache subnet group.</p> <note> <p>You cannot delete a cache
        subnet group if it is associated with any clusters.</p> </note>
      responses:
        "200":
          description: Success
        "480":
          description: CacheSubnetGroupInUse
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/CacheSubnetGroupInUse"
        "481":
          description: CacheSubnetGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/CacheSubnetGroupNotFoundFault"
      parameters:
        - name: CacheSubnetGroupName
          in: query
          required: true
          description: "<p>The name of the cache subnet group to delete.</p>
            <p>Constraints: Must contain no more than 255 alphanumeric
            characters or hyphens.</p>"
          schema:
            type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DeleteCacheSubnetGroup
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2015-02-02
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: DeleteCacheSubnetGroup
      operationId: POST DeleteCacheSubnetGroup
      description: <p>Deletes a cache subnet group.</p> <note> <p>You cannot delete a cache
        subnet group if it is associated with any clusters.</p> </note>
      responses:
        "200":
          description: Success
        "480":
          description: CacheSubnetGroupInUse
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/CacheSubnetGroupInUse"
        "481":
          description: CacheSubnetGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/CacheSubnetGroupNotFoundFault"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DeleteCacheSubnetGroup
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2015-02-02
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                CacheSubnetGroupName:
                  description: "<p>The name of the cache subnet group to delete.</p>
                    <p>Constraints: Must contain no more than 255 alphanumeric
                    characters or hyphens.</p>"
                  type: string
              required:
                - CacheSubnetGroupName
  /#Action=DeleteReplicationGroup:
    get:
      x-aws-operation-name: DeleteReplicationGroup
      operationId: GET DeleteReplicationGroup
      description: <p>Deletes an existing replication group. By default, this operation
        deletes the entire replication group, including the primary/primaries
        and all of the read replicas. If the replication group has only one
        primary, you can optionally delete only the read replicas, while
        retaining the primary by setting
        <code>RetainPrimaryCluster=true</code>.</p> <p>When you receive a
        successful response from this operation, Amazon ElastiCache immediately
        begins deleting the selected resources; you cannot cancel or revert this
        operation.</p> <note> <p>This operation is valid for Redis only.</p>
        </note>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DeleteReplicationGroupResult"
        "480":
          description: ReplicationGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ReplicationGroupNotFoundFault"
        "481":
          description: InvalidReplicationGroupStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidReplicationGroupStateFault"
        "482":
          description: SnapshotAlreadyExistsFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/SnapshotAlreadyExistsFault"
        "483":
          description: SnapshotFeatureNotSupportedFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/SnapshotFeatureNotSupportedFault"
        "484":
          description: SnapshotQuotaExceededFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/SnapshotQuotaExceededFault"
        "485":
          description: InvalidParameterValueException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidParameterValueException"
        "486":
          description: InvalidParameterCombinationException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidParameterCombinationException"
      parameters:
        - name: ReplicationGroupId
          in: query
          required: true
          description: The identifier for the cluster to be deleted. This parameter is not
            case sensitive.
          schema:
            type: string
        - name: RetainPrimaryCluster
          in: query
          required: false
          description: If set to <code>true</code>, all of the read replicas are deleted,
            but the primary node is retained.
          schema:
            type: boolean
        - name: FinalSnapshotIdentifier
          in: query
          required: false
          description: The name of a final node group (shard) snapshot. ElastiCache creates
            the snapshot from the primary node in the cluster, rather than one
            of the replicas; this is to ensure that it captures the freshest
            data. After the final snapshot is taken, the replication group is
            immediately deleted.
          schema:
            type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DeleteReplicationGroup
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2015-02-02
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: DeleteReplicationGroup
      operationId: POST DeleteReplicationGroup
      description: <p>Deletes an existing replication group. By default, this operation
        deletes the entire replication group, including the primary/primaries
        and all of the read replicas. If the replication group has only one
        primary, you can optionally delete only the read replicas, while
        retaining the primary by setting
        <code>RetainPrimaryCluster=true</code>.</p> <p>When you receive a
        successful response from this operation, Amazon ElastiCache immediately
        begins deleting the selected resources; you cannot cancel or revert this
        operation.</p> <note> <p>This operation is valid for Redis only.</p>
        </note>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DeleteReplicationGroupResult"
        "480":
          description: ReplicationGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ReplicationGroupNotFoundFault"
        "481":
          description: InvalidReplicationGroupStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidReplicationGroupStateFault"
        "482":
          description: SnapshotAlreadyExistsFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/SnapshotAlreadyExistsFault"
        "483":
          description: SnapshotFeatureNotSupportedFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/SnapshotFeatureNotSupportedFault"
        "484":
          description: SnapshotQuotaExceededFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/SnapshotQuotaExceededFault"
        "485":
          description: InvalidParameterValueException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidParameterValueException"
        "486":
          description: InvalidParameterCombinationException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidParameterCombinationException"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DeleteReplicationGroup
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2015-02-02
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                ReplicationGroupId:
                  description: The identifier for the cluster to be deleted. This parameter
                    is not case sensitive.
                  type: string
                RetainPrimaryCluster:
                  description: If set to <code>true</code>, all of the read replicas are
                    deleted, but the primary node is retained.
                  type: boolean
                FinalSnapshotIdentifier:
                  description: The name of a final node group (shard) snapshot. ElastiCache
                    creates the snapshot from the primary node in the cluster,
                    rather than one of the replicas; this is to ensure that it
                    captures the freshest data. After the final snapshot is
                    taken, the replication group is immediately deleted.
                  type: string
              required:
                - ReplicationGroupId
  /#Action=DeleteSnapshot:
    get:
      x-aws-operation-name: DeleteSnapshot
      operationId: GET DeleteSnapshot
      description: <p>Deletes an existing snapshot. When you receive a successful response
        from this operation, ElastiCache immediately begins deleting the
        snapshot; you cannot cancel or revert this operation.</p> <note> <p>This
        operation is valid for Redis only.</p> </note>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DeleteSnapshotResult"
        "480":
          description: SnapshotNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/SnapshotNotFoundFault"
        "481":
          description: InvalidSnapshotStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidSnapshotStateFault"
        "482":
          description: InvalidParameterValueException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidParameterValueException"
        "483":
          description: InvalidParameterCombinationException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidParameterCombinationException"
      parameters:
        - name: SnapshotName
          in: query
          required: true
          description: The name of the snapshot to be deleted.
          schema:
            type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DeleteSnapshot
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2015-02-02
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: DeleteSnapshot
      operationId: POST DeleteSnapshot
      description: <p>Deletes an existing snapshot. When you receive a successful response
        from this operation, ElastiCache immediately begins deleting the
        snapshot; you cannot cancel or revert this operation.</p> <note> <p>This
        operation is valid for Redis only.</p> </note>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DeleteSnapshotResult"
        "480":
          description: SnapshotNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/SnapshotNotFoundFault"
        "481":
          description: InvalidSnapshotStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidSnapshotStateFault"
        "482":
          description: InvalidParameterValueException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidParameterValueException"
        "483":
          description: InvalidParameterCombinationException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidParameterCombinationException"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DeleteSnapshot
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2015-02-02
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                SnapshotName:
                  description: The name of the snapshot to be deleted.
                  type: string
              required:
                - SnapshotName
  /#Action=DescribeCacheClusters:
    get:
      x-aws-operation-name: DescribeCacheClusters
      operationId: GET DescribeCacheClusters
      description: <p>Returns information about all provisioned clusters if no cluster
        identifier is specified, or about a specific cache cluster if a cluster
        identifier is supplied.</p> <p>By default, abbreviated information about
        the clusters is returned. You can use the optional
        <i>ShowCacheNodeInfo</i> flag to retrieve detailed information about the
        cache nodes associated with the clusters. These details include the DNS
        address and port for the cache node endpoint.</p> <p>If the cluster is
        in the <i>creating</i> state, only cluster-level information is
        displayed until all of the nodes are successfully provisioned.</p> <p>If
        the cluster is in the <i>deleting</i> state, only cluster-level
        information is displayed.</p> <p>If cache nodes are currently being
        added to the cluster, node endpoint information and creation time for
        the additional nodes are not displayed until they are completely
        provisioned. When the cluster state is <i>available</i>, the cluster is
        ready for use.</p> <p>If cache nodes are currently being removed from
        the cluster, no endpoint information for the removed nodes is
        displayed.</p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/CacheClusterMessage"
        "480":
          description: CacheClusterNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/CacheClusterNotFoundFault"
        "481":
          description: InvalidParameterValueException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidParameterValueException"
        "482":
          description: InvalidParameterCombinationException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidParameterCombinationException"
      parameters:
        - name: CacheClusterId
          in: query
          required: false
          description: The user-supplied cluster identifier. If this parameter is
            specified, only information about that specific cluster is returned.
            This parameter isn't case sensitive.
          schema:
            type: string
        - name: MaxRecords
          in: query
          required: false
          description: "<p>The maximum number of records to include in the response. If
            more records exist than the specified <code>MaxRecords</code> value,
            a marker is included in the response so that the remaining results
            can be retrieved.</p> <p>Default: 100</p> <p>Constraints: minimum
            20; maximum 100.</p>"
          schema:
            type: integer
        - name: Marker
          in: query
          required: false
          description: An optional marker returned from a prior request. Use this marker
            for pagination of results from this operation. If this parameter is
            specified, the response includes only records beyond the marker, up
            to the value specified by <code>MaxRecords</code>.
          schema:
            type: string
        - name: ShowCacheNodeInfo
          in: query
          required: false
          description: An optional flag that can be included in the
            <code>DescribeCacheCluster</code> request to retrieve information
            about the individual cache nodes.
          schema:
            type: boolean
        - name: ShowCacheClustersNotInReplicationGroups
          in: query
          required: false
          description: "An optional flag that can be included in the
            <code>DescribeCacheCluster</code> request to show only nodes
            (API/CLI: clusters) that are not members of a replication group. In
            practice, this mean Memcached and single node Redis clusters."
          schema:
            type: boolean
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeCacheClusters
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2015-02-02
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: DescribeCacheClusters
      operationId: POST DescribeCacheClusters
      description: <p>Returns information about all provisioned clusters if no cluster
        identifier is specified, or about a specific cache cluster if a cluster
        identifier is supplied.</p> <p>By default, abbreviated information about
        the clusters is returned. You can use the optional
        <i>ShowCacheNodeInfo</i> flag to retrieve detailed information about the
        cache nodes associated with the clusters. These details include the DNS
        address and port for the cache node endpoint.</p> <p>If the cluster is
        in the <i>creating</i> state, only cluster-level information is
        displayed until all of the nodes are successfully provisioned.</p> <p>If
        the cluster is in the <i>deleting</i> state, only cluster-level
        information is displayed.</p> <p>If cache nodes are currently being
        added to the cluster, node endpoint information and creation time for
        the additional nodes are not displayed until they are completely
        provisioned. When the cluster state is <i>available</i>, the cluster is
        ready for use.</p> <p>If cache nodes are currently being removed from
        the cluster, no endpoint information for the removed nodes is
        displayed.</p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/CacheClusterMessage"
        "480":
          description: CacheClusterNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/CacheClusterNotFoundFault"
        "481":
          description: InvalidParameterValueException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidParameterValueException"
        "482":
          description: InvalidParameterCombinationException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidParameterCombinationException"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeCacheClusters
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2015-02-02
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                CacheClusterId:
                  description: The user-supplied cluster identifier. If this parameter is
                    specified, only information about that specific cluster is
                    returned. This parameter isn't case sensitive.
                  type: string
                MaxRecords:
                  description: "<p>The maximum number of records to include in the
                    response. If more records exist than the specified
                    <code>MaxRecords</code> value, a marker is included in the
                    response so that the remaining results can be retrieved.</p>
                    <p>Default: 100</p> <p>Constraints: minimum 20; maximum
                    100.</p>"
                  type: integer
                Marker:
                  description: An optional marker returned from a prior request. Use this
                    marker for pagination of results from this operation. If
                    this parameter is specified, the response includes only
                    records beyond the marker, up to the value specified by
                    <code>MaxRecords</code>.
                  type: string
                ShowCacheNodeInfo:
                  description: An optional flag that can be included in the
                    <code>DescribeCacheCluster</code> request to retrieve
                    information about the individual cache nodes.
                  type: boolean
                ShowCacheClustersNotInReplicationGroups:
                  description: "An optional flag that can be included in the
                    <code>DescribeCacheCluster</code> request to show only nodes
                    (API/CLI: clusters) that are not members of a replication
                    group. In practice, this mean Memcached and single node
                    Redis clusters."
                  type: boolean
  /#Action=DescribeCacheEngineVersions:
    get:
      x-aws-operation-name: DescribeCacheEngineVersions
      operationId: GET DescribeCacheEngineVersions
      description: Returns a list of the available cache engines and their versions.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/CacheEngineVersionMessage"
      parameters:
        - name: Engine
          in: query
          required: false
          description: "The cache engine to return. Valid values: <code>memcached</code> |
            <code>redis</code> "
          schema:
            type: string
        - name: EngineVersion
          in: query
          required: false
          description: "<p>The cache engine version to return.</p> <p>Example:
            <code>1.4.14</code> </p>"
          schema:
            type: string
        - name: CacheParameterGroupFamily
          in: query
          required: false
          description: "<p>The name of a specific cache parameter group family to return
            details for.</p> <p>Valid values are: <code>memcached1.4</code> |
            <code>memcached1.5</code> | <code>redis2.6</code> |
            <code>redis2.8</code> | <code>redis3.2</code> |
            <code>redis4.0</code> | <code>redis5.0</code> | </p>
            <p>Constraints:</p> <ul> <li> <p>Must be 1 to 255 alphanumeric
            characters</p> </li> <li> <p>First character must be a letter</p>
            </li> <li> <p>Cannot end with a hyphen or contain two consecutive
            hyphens</p> </li> </ul>"
          schema:
            type: string
        - name: MaxRecords
          in: query
          required: false
          description: "<p>The maximum number of records to include in the response. If
            more records exist than the specified <code>MaxRecords</code> value,
            a marker is included in the response so that the remaining results
            can be retrieved.</p> <p>Default: 100</p> <p>Constraints: minimum
            20; maximum 100.</p>"
          schema:
            type: integer
        - name: Marker
          in: query
          required: false
          description: An optional marker returned from a prior request. Use this marker
            for pagination of results from this operation. If this parameter is
            specified, the response includes only records beyond the marker, up
            to the value specified by <code>MaxRecords</code>.
          schema:
            type: string
        - name: DefaultOnly
          in: query
          required: false
          description: If <code>true</code>, specifies that only the default version of the
            specified engine or engine and major version combination is to be
            returned.
          schema:
            type: boolean
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeCacheEngineVersions
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2015-02-02
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: DescribeCacheEngineVersions
      operationId: POST DescribeCacheEngineVersions
      description: Returns a list of the available cache engines and their versions.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/CacheEngineVersionMessage"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeCacheEngineVersions
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2015-02-02
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                Engine:
                  description: "The cache engine to return. Valid values:
                    <code>memcached</code> | <code>redis</code> "
                  type: string
                EngineVersion:
                  description: "<p>The cache engine version to return.</p> <p>Example:
                    <code>1.4.14</code> </p>"
                  type: string
                CacheParameterGroupFamily:
                  description: "<p>The name of a specific cache parameter group family to
                    return details for.</p> <p>Valid values are:
                    <code>memcached1.4</code> | <code>memcached1.5</code> |
                    <code>redis2.6</code> | <code>redis2.8</code> |
                    <code>redis3.2</code> | <code>redis4.0</code> |
                    <code>redis5.0</code> | </p> <p>Constraints:</p> <ul> <li>
                    <p>Must be 1 to 255 alphanumeric characters</p> </li> <li>
                    <p>First character must be a letter</p> </li> <li> <p>Cannot
                    end with a hyphen or contain two consecutive hyphens</p>
                    </li> </ul>"
                  type: string
                MaxRecords:
                  description: "<p>The maximum number of records to include in the
                    response. If more records exist than the specified
                    <code>MaxRecords</code> value, a marker is included in the
                    response so that the remaining results can be retrieved.</p>
                    <p>Default: 100</p> <p>Constraints: minimum 20; maximum
                    100.</p>"
                  type: integer
                Marker:
                  description: An optional marker returned from a prior request. Use this
                    marker for pagination of results from this operation. If
                    this parameter is specified, the response includes only
                    records beyond the marker, up to the value specified by
                    <code>MaxRecords</code>.
                  type: string
                DefaultOnly:
                  description: If <code>true</code>, specifies that only the default
                    version of the specified engine or engine and major version
                    combination is to be returned.
                  type: boolean
  /#Action=DescribeCacheParameterGroups:
    get:
      x-aws-operation-name: DescribeCacheParameterGroups
      operationId: GET DescribeCacheParameterGroups
      description: Returns a list of cache parameter group descriptions. If a cache
        parameter group name is specified, the list contains only the
        descriptions for that group.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/CacheParameterGroupsMessage"
        "480":
          description: CacheParameterGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/CacheParameterGroupNotFoundFault"
        "481":
          description: InvalidParameterValueException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidParameterValueException"
        "482":
          description: InvalidParameterCombinationException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidParameterCombinationException"
      parameters:
        - name: CacheParameterGroupName
          in: query
          required: false
          description: The name of a specific cache parameter group to return details for.
          schema:
            type: string
        - name: MaxRecords
          in: query
          required: false
          description: "<p>The maximum number of records to include in the response. If
            more records exist than the specified <code>MaxRecords</code> value,
            a marker is included in the response so that the remaining results
            can be retrieved.</p> <p>Default: 100</p> <p>Constraints: minimum
            20; maximum 100.</p>"
          schema:
            type: integer
        - name: Marker
          in: query
          required: false
          description: An optional marker returned from a prior request. Use this marker
            for pagination of results from this operation. If this parameter is
            specified, the response includes only records beyond the marker, up
            to the value specified by <code>MaxRecords</code>.
          schema:
            type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeCacheParameterGroups
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2015-02-02
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: DescribeCacheParameterGroups
      operationId: POST DescribeCacheParameterGroups
      description: Returns a list of cache parameter group descriptions. If a cache
        parameter group name is specified, the list contains only the
        descriptions for that group.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/CacheParameterGroupsMessage"
        "480":
          description: CacheParameterGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/CacheParameterGroupNotFoundFault"
        "481":
          description: InvalidParameterValueException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidParameterValueException"
        "482":
          description: InvalidParameterCombinationException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidParameterCombinationException"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeCacheParameterGroups
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2015-02-02
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                CacheParameterGroupName:
                  description: The name of a specific cache parameter group to return
                    details for.
                  type: string
                MaxRecords:
                  description: "<p>The maximum number of records to include in the
                    response. If more records exist than the specified
                    <code>MaxRecords</code> value, a marker is included in the
                    response so that the remaining results can be retrieved.</p>
                    <p>Default: 100</p> <p>Constraints: minimum 20; maximum
                    100.</p>"
                  type: integer
                Marker:
                  description: An optional marker returned from a prior request. Use this
                    marker for pagination of results from this operation. If
                    this parameter is specified, the response includes only
                    records beyond the marker, up to the value specified by
                    <code>MaxRecords</code>.
                  type: string
  /#Action=DescribeCacheParameters:
    get:
      x-aws-operation-name: DescribeCacheParameters
      operationId: GET DescribeCacheParameters
      description: Returns the detailed parameter list for a particular cache parameter
        group.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/CacheParameterGroupDetails"
        "480":
          description: CacheParameterGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/CacheParameterGroupNotFoundFault"
        "481":
          description: InvalidParameterValueException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidParameterValueException"
        "482":
          description: InvalidParameterCombinationException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidParameterCombinationException"
      parameters:
        - name: CacheParameterGroupName
          in: query
          required: true
          description: The name of a specific cache parameter group to return details for.
          schema:
            type: string
        - name: Source
          in: query
          required: false
          description: "<p>The parameter types to return.</p> <p>Valid values:
            <code>user</code> | <code>system</code> |
            <code>engine-default</code> </p>"
          schema:
            type: string
        - name: MaxRecords
          in: query
          required: false
          description: "<p>The maximum number of records to include in the response. If
            more records exist than the specified <code>MaxRecords</code> value,
            a marker is included in the response so that the remaining results
            can be retrieved.</p> <p>Default: 100</p> <p>Constraints: minimum
            20; maximum 100.</p>"
          schema:
            type: integer
        - name: Marker
          in: query
          required: false
          description: An optional marker returned from a prior request. Use this marker
            for pagination of results from this operation. If this parameter is
            specified, the response includes only records beyond the marker, up
            to the value specified by <code>MaxRecords</code>.
          schema:
            type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeCacheParameters
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2015-02-02
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: DescribeCacheParameters
      operationId: POST DescribeCacheParameters
      description: Returns the detailed parameter list for a particular cache parameter
        group.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/CacheParameterGroupDetails"
        "480":
          description: CacheParameterGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/CacheParameterGroupNotFoundFault"
        "481":
          description: InvalidParameterValueException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidParameterValueException"
        "482":
          description: InvalidParameterCombinationException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidParameterCombinationException"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeCacheParameters
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2015-02-02
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                CacheParameterGroupName:
                  description: The name of a specific cache parameter group to return
                    details for.
                  type: string
                Source:
                  description: "<p>The parameter types to return.</p> <p>Valid values:
                    <code>user</code> | <code>system</code> |
                    <code>engine-default</code> </p>"
                  type: string
                MaxRecords:
                  description: "<p>The maximum number of records to include in the
                    response. If more records exist than the specified
                    <code>MaxRecords</code> value, a marker is included in the
                    response so that the remaining results can be retrieved.</p>
                    <p>Default: 100</p> <p>Constraints: minimum 20; maximum
                    100.</p>"
                  type: integer
                Marker:
                  description: An optional marker returned from a prior request. Use this
                    marker for pagination of results from this operation. If
                    this parameter is specified, the response includes only
                    records beyond the marker, up to the value specified by
                    <code>MaxRecords</code>.
                  type: string
              required:
                - CacheParameterGroupName
  /#Action=DescribeCacheSecurityGroups:
    get:
      x-aws-operation-name: DescribeCacheSecurityGroups
      operationId: GET DescribeCacheSecurityGroups
      description: "Returns a list of cache security group descriptions. If a cache
        security group name is specified, the list contains only the description
        of that group. This applicable only when you have ElastiCache in Classic
        setup "
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/CacheSecurityGroupMessage"
        "480":
          description: CacheSecurityGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/CacheSecurityGroupNotFoundFault"
        "481":
          description: InvalidParameterValueException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidParameterValueException"
        "482":
          description: InvalidParameterCombinationException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidParameterCombinationException"
      parameters:
        - name: CacheSecurityGroupName
          in: query
          required: false
          description: The name of the cache security group to return details for.
          schema:
            type: string
        - name: MaxRecords
          in: query
          required: false
          description: "<p>The maximum number of records to include in the response. If
            more records exist than the specified <code>MaxRecords</code> value,
            a marker is included in the response so that the remaining results
            can be retrieved.</p> <p>Default: 100</p> <p>Constraints: minimum
            20; maximum 100.</p>"
          schema:
            type: integer
        - name: Marker
          in: query
          required: false
          description: An optional marker returned from a prior request. Use this marker
            for pagination of results from this operation. If this parameter is
            specified, the response includes only records beyond the marker, up
            to the value specified by <code>MaxRecords</code>.
          schema:
            type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeCacheSecurityGroups
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2015-02-02
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: DescribeCacheSecurityGroups
      operationId: POST DescribeCacheSecurityGroups
      description: "Returns a list of cache security group descriptions. If a cache
        security group name is specified, the list contains only the description
        of that group. This applicable only when you have ElastiCache in Classic
        setup "
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/CacheSecurityGroupMessage"
        "480":
          description: CacheSecurityGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/CacheSecurityGroupNotFoundFault"
        "481":
          description: InvalidParameterValueException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidParameterValueException"
        "482":
          description: InvalidParameterCombinationException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidParameterCombinationException"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeCacheSecurityGroups
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2015-02-02
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                CacheSecurityGroupName:
                  description: The name of the cache security group to return details for.
                  type: string
                MaxRecords:
                  description: "<p>The maximum number of records to include in the
                    response. If more records exist than the specified
                    <code>MaxRecords</code> value, a marker is included in the
                    response so that the remaining results can be retrieved.</p>
                    <p>Default: 100</p> <p>Constraints: minimum 20; maximum
                    100.</p>"
                  type: integer
                Marker:
                  description: An optional marker returned from a prior request. Use this
                    marker for pagination of results from this operation. If
                    this parameter is specified, the response includes only
                    records beyond the marker, up to the value specified by
                    <code>MaxRecords</code>.
                  type: string
  /#Action=DescribeCacheSubnetGroups:
    get:
      x-aws-operation-name: DescribeCacheSubnetGroups
      operationId: GET DescribeCacheSubnetGroups
      description: "Returns a list of cache subnet group descriptions. If a subnet group
        name is specified, the list contains only the description of that group.
        This is applicable only when you have ElastiCache in VPC setup. All
        ElastiCache clusters now launch in VPC by default. "
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/CacheSubnetGroupMessage"
        "480":
          description: CacheSubnetGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/CacheSubnetGroupNotFoundFault"
      parameters:
        - name: CacheSubnetGroupName
          in: query
          required: false
          description: The name of the cache subnet group to return details for.
          schema:
            type: string
        - name: MaxRecords
          in: query
          required: false
          description: "<p>The maximum number of records to include in the response. If
            more records exist than the specified <code>MaxRecords</code> value,
            a marker is included in the response so that the remaining results
            can be retrieved.</p> <p>Default: 100</p> <p>Constraints: minimum
            20; maximum 100.</p>"
          schema:
            type: integer
        - name: Marker
          in: query
          required: false
          description: An optional marker returned from a prior request. Use this marker
            for pagination of results from this operation. If this parameter is
            specified, the response includes only records beyond the marker, up
            to the value specified by <code>MaxRecords</code>.
          schema:
            type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeCacheSubnetGroups
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2015-02-02
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: DescribeCacheSubnetGroups
      operationId: POST DescribeCacheSubnetGroups
      description: "Returns a list of cache subnet group descriptions. If a subnet group
        name is specified, the list contains only the description of that group.
        This is applicable only when you have ElastiCache in VPC setup. All
        ElastiCache clusters now launch in VPC by default. "
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/CacheSubnetGroupMessage"
        "480":
          description: CacheSubnetGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/CacheSubnetGroupNotFoundFault"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeCacheSubnetGroups
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2015-02-02
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                CacheSubnetGroupName:
                  description: The name of the cache subnet group to return details for.
                  type: string
                MaxRecords:
                  description: "<p>The maximum number of records to include in the
                    response. If more records exist than the specified
                    <code>MaxRecords</code> value, a marker is included in the
                    response so that the remaining results can be retrieved.</p>
                    <p>Default: 100</p> <p>Constraints: minimum 20; maximum
                    100.</p>"
                  type: integer
                Marker:
                  description: An optional marker returned from a prior request. Use this
                    marker for pagination of results from this operation. If
                    this parameter is specified, the response includes only
                    records beyond the marker, up to the value specified by
                    <code>MaxRecords</code>.
                  type: string
  /#Action=DescribeEngineDefaultParameters:
    get:
      x-aws-operation-name: DescribeEngineDefaultParameters
      operationId: GET DescribeEngineDefaultParameters
      description: Returns the default engine and system parameter information for the
        specified cache engine.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DescribeEngineDefaultParametersResult"
        "480":
          description: InvalidParameterValueException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidParameterValueException"
        "481":
          description: InvalidParameterCombinationException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidParameterCombinationException"
      parameters:
        - name: CacheParameterGroupFamily
          in: query
          required: true
          description: "<p>The name of the cache parameter group family.</p> <p>Valid
            values are: <code>memcached1.4</code> | <code>memcached1.5</code> |
            <code>redis2.6</code> | <code>redis2.8</code> |
            <code>redis3.2</code> | <code>redis4.0</code> |
            <code>redis5.0</code> | </p>"
          schema:
            type: string
        - name: MaxRecords
          in: query
          required: false
          description: "<p>The maximum number of records to include in the response. If
            more records exist than the specified <code>MaxRecords</code> value,
            a marker is included in the response so that the remaining results
            can be retrieved.</p> <p>Default: 100</p> <p>Constraints: minimum
            20; maximum 100.</p>"
          schema:
            type: integer
        - name: Marker
          in: query
          required: false
          description: An optional marker returned from a prior request. Use this marker
            for pagination of results from this operation. If this parameter is
            specified, the response includes only records beyond the marker, up
            to the value specified by <code>MaxRecords</code>.
          schema:
            type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeEngineDefaultParameters
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2015-02-02
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: DescribeEngineDefaultParameters
      operationId: POST DescribeEngineDefaultParameters
      description: Returns the default engine and system parameter information for the
        specified cache engine.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DescribeEngineDefaultParametersResult"
        "480":
          description: InvalidParameterValueException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidParameterValueException"
        "481":
          description: InvalidParameterCombinationException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidParameterCombinationException"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeEngineDefaultParameters
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2015-02-02
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                CacheParameterGroupFamily:
                  description: "<p>The name of the cache parameter group family.</p>
                    <p>Valid values are: <code>memcached1.4</code> |
                    <code>memcached1.5</code> | <code>redis2.6</code> |
                    <code>redis2.8</code> | <code>redis3.2</code> |
                    <code>redis4.0</code> | <code>redis5.0</code> | </p>"
                  type: string
                MaxRecords:
                  description: "<p>The maximum number of records to include in the
                    response. If more records exist than the specified
                    <code>MaxRecords</code> value, a marker is included in the
                    response so that the remaining results can be retrieved.</p>
                    <p>Default: 100</p> <p>Constraints: minimum 20; maximum
                    100.</p>"
                  type: integer
                Marker:
                  description: An optional marker returned from a prior request. Use this
                    marker for pagination of results from this operation. If
                    this parameter is specified, the response includes only
                    records beyond the marker, up to the value specified by
                    <code>MaxRecords</code>.
                  type: string
              required:
                - CacheParameterGroupFamily
  /#Action=DescribeEvents:
    get:
      x-aws-operation-name: DescribeEvents
      operationId: GET DescribeEvents
      description: <p>Returns events related to clusters, cache security groups, and cache
        parameter groups. You can obtain events specific to a particular
        cluster, cache security group, or cache parameter group by providing the
        name as a parameter.</p> <p>By default, only the events occurring within
        the last hour are returned; however, you can retrieve up to 14 days'
        worth of events if necessary.</p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/EventsMessage"
        "480":
          description: InvalidParameterValueException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidParameterValueException"
        "481":
          description: InvalidParameterCombinationException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidParameterCombinationException"
      parameters:
        - name: SourceIdentifier
          in: query
          required: false
          description: The identifier of the event source for which events are returned. If
            not specified, all sources are included in the response.
          schema:
            type: string
        - name: SourceType
          in: query
          required: false
          description: The event source to retrieve events for. If no value is specified,
            all events are returned.
          schema:
            type: string
            enum:
              - cache-cluster
              - cache-parameter-group
              - cache-security-group
              - cache-subnet-group
              - replication-group
        - name: StartTime
          in: query
          required: false
          description: <p>The beginning of the time interval to retrieve events for,
            specified in ISO 8601 format.</p> <p> <b>Example:</b>
            2017-03-30T07:03:49.555Z</p>
          schema:
            type: string
            format: date-time
        - name: EndTime
          in: query
          required: false
          description: <p>The end of the time interval for which to retrieve events,
            specified in ISO 8601 format.</p> <p> <b>Example:</b>
            2017-03-30T07:03:49.555Z</p>
          schema:
            type: string
            format: date-time
        - name: Duration
          in: query
          required: false
          description: The number of minutes worth of events to retrieve.
          schema:
            type: integer
        - name: MaxRecords
          in: query
          required: false
          description: "<p>The maximum number of records to include in the response. If
            more records exist than the specified <code>MaxRecords</code> value,
            a marker is included in the response so that the remaining results
            can be retrieved.</p> <p>Default: 100</p> <p>Constraints: minimum
            20; maximum 100.</p>"
          schema:
            type: integer
        - name: Marker
          in: query
          required: false
          description: An optional marker returned from a prior request. Use this marker
            for pagination of results from this operation. If this parameter is
            specified, the response includes only records beyond the marker, up
            to the value specified by <code>MaxRecords</code>.
          schema:
            type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeEvents
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2015-02-02
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: DescribeEvents
      operationId: POST DescribeEvents
      description: <p>Returns events related to clusters, cache security groups, and cache
        parameter groups. You can obtain events specific to a particular
        cluster, cache security group, or cache parameter group by providing the
        name as a parameter.</p> <p>By default, only the events occurring within
        the last hour are returned; however, you can retrieve up to 14 days'
        worth of events if necessary.</p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/EventsMessage"
        "480":
          description: InvalidParameterValueException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidParameterValueException"
        "481":
          description: InvalidParameterCombinationException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidParameterCombinationException"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeEvents
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2015-02-02
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                SourceIdentifier:
                  description: The identifier of the event source for which events are
                    returned. If not specified, all sources are included in the
                    response.
                  type: string
                SourceType:
                  description: The event source to retrieve events for. If no value is
                    specified, all events are returned.
                  type: string
                  enum:
                    - cache-cluster
                    - cache-parameter-group
                    - cache-security-group
                    - cache-subnet-group
                    - replication-group
                StartTime:
                  description: <p>The beginning of the time interval to retrieve events
                    for, specified in ISO 8601 format.</p> <p> <b>Example:</b>
                    2017-03-30T07:03:49.555Z</p>
                  type: string
                  format: date-time
                EndTime:
                  description: <p>The end of the time interval for which to retrieve
                    events, specified in ISO 8601 format.</p> <p>
                    <b>Example:</b> 2017-03-30T07:03:49.555Z</p>
                  type: string
                  format: date-time
                Duration:
                  description: The number of minutes worth of events to retrieve.
                  type: integer
                MaxRecords:
                  description: "<p>The maximum number of records to include in the
                    response. If more records exist than the specified
                    <code>MaxRecords</code> value, a marker is included in the
                    response so that the remaining results can be retrieved.</p>
                    <p>Default: 100</p> <p>Constraints: minimum 20; maximum
                    100.</p>"
                  type: integer
                Marker:
                  description: An optional marker returned from a prior request. Use this
                    marker for pagination of results from this operation. If
                    this parameter is specified, the response includes only
                    records beyond the marker, up to the value specified by
                    <code>MaxRecords</code>.
                  type: string
  /#Action=DescribeReplicationGroups:
    get:
      x-aws-operation-name: DescribeReplicationGroups
      operationId: GET DescribeReplicationGroups
      description: <p>Returns information about a particular replication group. If no
        identifier is specified, <code>DescribeReplicationGroups</code> returns
        information about all replication groups.</p> <note> <p>This operation
        is valid for Redis only.</p> </note>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ReplicationGroupMessage"
        "480":
          description: ReplicationGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ReplicationGroupNotFoundFault"
        "481":
          description: InvalidParameterValueException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidParameterValueException"
        "482":
          description: InvalidParameterCombinationException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidParameterCombinationException"
      parameters:
        - name: ReplicationGroupId
          in: query
          required: false
          description: <p>The identifier for the replication group to be described. This
            parameter is not case sensitive.</p> <p>If you do not specify this
            parameter, information about all replication groups is returned.</p>
          schema:
            type: string
        - name: MaxRecords
          in: query
          required: false
          description: "<p>The maximum number of records to include in the response. If
            more records exist than the specified <code>MaxRecords</code> value,
            a marker is included in the response so that the remaining results
            can be retrieved.</p> <p>Default: 100</p> <p>Constraints: minimum
            20; maximum 100.</p>"
          schema:
            type: integer
        - name: Marker
          in: query
          required: false
          description: An optional marker returned from a prior request. Use this marker
            for pagination of results from this operation. If this parameter is
            specified, the response includes only records beyond the marker, up
            to the value specified by <code>MaxRecords</code>.
          schema:
            type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeReplicationGroups
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2015-02-02
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: DescribeReplicationGroups
      operationId: POST DescribeReplicationGroups
      description: <p>Returns information about a particular replication group. If no
        identifier is specified, <code>DescribeReplicationGroups</code> returns
        information about all replication groups.</p> <note> <p>This operation
        is valid for Redis only.</p> </note>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ReplicationGroupMessage"
        "480":
          description: ReplicationGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ReplicationGroupNotFoundFault"
        "481":
          description: InvalidParameterValueException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidParameterValueException"
        "482":
          description: InvalidParameterCombinationException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidParameterCombinationException"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeReplicationGroups
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2015-02-02
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                ReplicationGroupId:
                  description: <p>The identifier for the replication group to be described.
                    This parameter is not case sensitive.</p> <p>If you do not
                    specify this parameter, information about all replication
                    groups is returned.</p>
                  type: string
                MaxRecords:
                  description: "<p>The maximum number of records to include in the
                    response. If more records exist than the specified
                    <code>MaxRecords</code> value, a marker is included in the
                    response so that the remaining results can be retrieved.</p>
                    <p>Default: 100</p> <p>Constraints: minimum 20; maximum
                    100.</p>"
                  type: integer
                Marker:
                  description: An optional marker returned from a prior request. Use this
                    marker for pagination of results from this operation. If
                    this parameter is specified, the response includes only
                    records beyond the marker, up to the value specified by
                    <code>MaxRecords</code>.
                  type: string
  /#Action=DescribeReservedCacheNodes:
    get:
      x-aws-operation-name: DescribeReservedCacheNodes
      operationId: GET DescribeReservedCacheNodes
      description: Returns information about reserved cache nodes for this account, or
        about a specified reserved cache node.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ReservedCacheNodeMessage"
        "480":
          description: ReservedCacheNodeNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ReservedCacheNodeNotFoundFault"
        "481":
          description: InvalidParameterValueException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidParameterValueException"
        "482":
          description: InvalidParameterCombinationException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidParameterCombinationException"
      parameters:
        - name: ReservedCacheNodeId
          in: query
          required: false
          description: The reserved cache node identifier filter value. Use this parameter
            to show only the reservation that matches the specified reservation
            ID.
          schema:
            type: string
        - name: ReservedCacheNodesOfferingId
          in: query
          required: false
          description: The offering identifier filter value. Use this parameter to show
            only purchased reservations matching the specified offering
            identifier.
          schema:
            type: string
        - name: CacheNodeType
          in: query
          required: false
          description: "<p>The cache node type filter value. Use this parameter to show
            only those reservations matching the specified cache node type.</p>
            <p>The following node types are supported by ElastiCache. Generally
            speaking, the current generation types provide more memory and
            computational power at lower cost when compared to their equivalent
            previous generation counterparts.</p> <ul> <li> <p>General
            purpose:</p> <ul> <li> <p>Current generation: </p> <p> <b>M5 node
            types:</b> <code>cache.m5.large</code>,
            <code>cache.m5.xlarge</code>, <code>cache.m5.2xlarge</code>,
            <code>cache.m5.4xlarge</code>, <code>cache.m5.12xlarge</code>,
            <code>cache.m5.24xlarge</code> </p> <p> <b>M4 node types:</b>
            <code>cache.m4.large</code>, <code>cache.m4.xlarge</code>,
            <code>cache.m4.2xlarge</code>, <code>cache.m4.4xlarge</code>,
            <code>cache.m4.10xlarge</code> </p> <p> <b>T2 node types:</b>
            <code>cache.t2.micro</code>, <code>cache.t2.small</code>,
            <code>cache.t2.medium</code> </p> </li> <li> <p>Previous generation:
            (not recommended)</p> <p> <b>T1 node types:</b>
            <code>cache.t1.micro</code> </p> <p> <b>M1 node types:</b>
            <code>cache.m1.small</code>, <code>cache.m1.medium</code>,
            <code>cache.m1.large</code>, <code>cache.m1.xlarge</code> </p> <p>
            <b>M3 node types:</b> <code>cache.m3.medium</code>,
            <code>cache.m3.large</code>, <code>cache.m3.xlarge</code>,
            <code>cache.m3.2xlarge</code> </p> </li> </ul> </li> <li> <p>Compute
            optimized:</p> <ul> <li> <p>Previous generation: (not
            recommended)</p> <p> <b>C1 node types:</b>
            <code>cache.c1.xlarge</code> </p> </li> </ul> </li> <li> <p>Memory
            optimized:</p> <ul> <li> <p>Current generation: </p> <p> <b>R5 node
            types:</b> <code>cache.r5.large</code>,
            <code>cache.r5.xlarge</code>, <code>cache.r5.2xlarge</code>,
            <code>cache.r5.4xlarge</code>, <code>cache.r5.12xlarge</code>,
            <code>cache.r5.24xlarge</code> </p> <p> <b>R4 node types:</b>
            <code>cache.r4.large</code>, <code>cache.r4.xlarge</code>,
            <code>cache.r4.2xlarge</code>, <code>cache.r4.4xlarge</code>,
            <code>cache.r4.8xlarge</code>, <code>cache.r4.16xlarge</code> </p>
            </li> <li> <p>Previous generation: (not recommended)</p> <p> <b>M2
            node types:</b> <code>cache.m2.xlarge</code>,
            <code>cache.m2.2xlarge</code>, <code>cache.m2.4xlarge</code> </p>
            <p> <b>R3 node types:</b> <code>cache.r3.large</code>,
            <code>cache.r3.xlarge</code>, <code>cache.r3.2xlarge</code>,
            <code>cache.r3.4xlarge</code>, <code>cache.r3.8xlarge</code> </p>
            </li> </ul> </li> </ul> <p> <b>Additional node type info</b> </p>
            <ul> <li> <p>All current generation instance types are created in
            Amazon VPC by default.</p> </li> <li> <p>Redis append-only files
            (AOF) are not supported for T1 or T2 instances.</p> </li> <li>
            <p>Redis Multi-AZ with automatic failover is not supported on T1
            instances.</p> </li> <li> <p>Redis configuration variables
            <code>appendonly</code> and <code>appendfsync</code> are not
            supported on Redis version 2.8.22 and later.</p> </li> </ul>"
          schema:
            type: string
        - name: Duration
          in: query
          required: false
          description: "<p>The duration filter value, specified in years or seconds. Use
            this parameter to show only reservations for this duration.</p>
            <p>Valid Values: <code>1 | 3 | 31536000 | 94608000</code> </p>"
          schema:
            type: string
        - name: ProductDescription
          in: query
          required: false
          description: The product description filter value. Use this parameter to show
            only those reservations matching the specified product description.
          schema:
            type: string
        - name: OfferingType
          in: query
          required: false
          description: '<p>The offering type filter value. Use this parameter to show only
            the available offerings matching the specified offering type.</p>
            <p>Valid values: <code>"Light Utilization"|"Medium
            Utilization"|"Heavy Utilization"</code> </p>'
          schema:
            type: string
        - name: MaxRecords
          in: query
          required: false
          description: "<p>The maximum number of records to include in the response. If
            more records exist than the specified <code>MaxRecords</code> value,
            a marker is included in the response so that the remaining results
            can be retrieved.</p> <p>Default: 100</p> <p>Constraints: minimum
            20; maximum 100.</p>"
          schema:
            type: integer
        - name: Marker
          in: query
          required: false
          description: An optional marker returned from a prior request. Use this marker
            for pagination of results from this operation. If this parameter is
            specified, the response includes only records beyond the marker, up
            to the value specified by <code>MaxRecords</code>.
          schema:
            type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeReservedCacheNodes
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2015-02-02
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: DescribeReservedCacheNodes
      operationId: POST DescribeReservedCacheNodes
      description: Returns information about reserved cache nodes for this account, or
        about a specified reserved cache node.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ReservedCacheNodeMessage"
        "480":
          description: ReservedCacheNodeNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ReservedCacheNodeNotFoundFault"
        "481":
          description: InvalidParameterValueException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidParameterValueException"
        "482":
          description: InvalidParameterCombinationException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidParameterCombinationException"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeReservedCacheNodes
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2015-02-02
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                ReservedCacheNodeId:
                  description: The reserved cache node identifier filter value. Use this
                    parameter to show only the reservation that matches the
                    specified reservation ID.
                  type: string
                ReservedCacheNodesOfferingId:
                  description: The offering identifier filter value. Use this parameter to
                    show only purchased reservations matching the specified
                    offering identifier.
                  type: string
                CacheNodeType:
                  description: "<p>The cache node type filter value. Use this parameter to
                    show only those reservations matching the specified cache
                    node type.</p> <p>The following node types are supported by
                    ElastiCache. Generally speaking, the current generation
                    types provide more memory and computational power at lower
                    cost when compared to their equivalent previous generation
                    counterparts.</p> <ul> <li> <p>General purpose:</p> <ul>
                    <li> <p>Current generation: </p> <p> <b>M5 node types:</b>
                    <code>cache.m5.large</code>, <code>cache.m5.xlarge</code>,
                    <code>cache.m5.2xlarge</code>,
                    <code>cache.m5.4xlarge</code>,
                    <code>cache.m5.12xlarge</code>,
                    <code>cache.m5.24xlarge</code> </p> <p> <b>M4 node
                    types:</b> <code>cache.m4.large</code>,
                    <code>cache.m4.xlarge</code>, <code>cache.m4.2xlarge</code>,
                    <code>cache.m4.4xlarge</code>,
                    <code>cache.m4.10xlarge</code> </p> <p> <b>T2 node
                    types:</b> <code>cache.t2.micro</code>,
                    <code>cache.t2.small</code>, <code>cache.t2.medium</code>
                    </p> </li> <li> <p>Previous generation: (not
                    recommended)</p> <p> <b>T1 node types:</b>
                    <code>cache.t1.micro</code> </p> <p> <b>M1 node types:</b>
                    <code>cache.m1.small</code>, <code>cache.m1.medium</code>,
                    <code>cache.m1.large</code>, <code>cache.m1.xlarge</code>
                    </p> <p> <b>M3 node types:</b> <code>cache.m3.medium</code>,
                    <code>cache.m3.large</code>, <code>cache.m3.xlarge</code>,
                    <code>cache.m3.2xlarge</code> </p> </li> </ul> </li> <li>
                    <p>Compute optimized:</p> <ul> <li> <p>Previous generation:
                    (not recommended)</p> <p> <b>C1 node types:</b>
                    <code>cache.c1.xlarge</code> </p> </li> </ul> </li> <li>
                    <p>Memory optimized:</p> <ul> <li> <p>Current generation:
                    </p> <p> <b>R5 node types:</b> <code>cache.r5.large</code>,
                    <code>cache.r5.xlarge</code>, <code>cache.r5.2xlarge</code>,
                    <code>cache.r5.4xlarge</code>,
                    <code>cache.r5.12xlarge</code>,
                    <code>cache.r5.24xlarge</code> </p> <p> <b>R4 node
                    types:</b> <code>cache.r4.large</code>,
                    <code>cache.r4.xlarge</code>, <code>cache.r4.2xlarge</code>,
                    <code>cache.r4.4xlarge</code>,
                    <code>cache.r4.8xlarge</code>,
                    <code>cache.r4.16xlarge</code> </p> </li> <li> <p>Previous
                    generation: (not recommended)</p> <p> <b>M2 node types:</b>
                    <code>cache.m2.xlarge</code>, <code>cache.m2.2xlarge</code>,
                    <code>cache.m2.4xlarge</code> </p> <p> <b>R3 node types:</b>
                    <code>cache.r3.large</code>, <code>cache.r3.xlarge</code>,
                    <code>cache.r3.2xlarge</code>,
                    <code>cache.r3.4xlarge</code>, <code>cache.r3.8xlarge</code>
                    </p> </li> </ul> </li> </ul> <p> <b>Additional node type
                    info</b> </p> <ul> <li> <p>All current generation instance
                    types are created in Amazon VPC by default.</p> </li> <li>
                    <p>Redis append-only files (AOF) are not supported for T1 or
                    T2 instances.</p> </li> <li> <p>Redis Multi-AZ with
                    automatic failover is not supported on T1 instances.</p>
                    </li> <li> <p>Redis configuration variables
                    <code>appendonly</code> and <code>appendfsync</code> are not
                    supported on Redis version 2.8.22 and later.</p> </li>
                    </ul>"
                  type: string
                Duration:
                  description: "<p>The duration filter value, specified in years or
                    seconds. Use this parameter to show only reservations for
                    this duration.</p> <p>Valid Values: <code>1 | 3 | 31536000 |
                    94608000</code> </p>"
                  type: string
                ProductDescription:
                  description: The product description filter value. Use this parameter to
                    show only those reservations matching the specified product
                    description.
                  type: string
                OfferingType:
                  description: '<p>The offering type filter value. Use this parameter to
                    show only the available offerings matching the specified
                    offering type.</p> <p>Valid values: <code>"Light
                    Utilization"|"Medium Utilization"|"Heavy Utilization"</code>
                    </p>'
                  type: string
                MaxRecords:
                  description: "<p>The maximum number of records to include in the
                    response. If more records exist than the specified
                    <code>MaxRecords</code> value, a marker is included in the
                    response so that the remaining results can be retrieved.</p>
                    <p>Default: 100</p> <p>Constraints: minimum 20; maximum
                    100.</p>"
                  type: integer
                Marker:
                  description: An optional marker returned from a prior request. Use this
                    marker for pagination of results from this operation. If
                    this parameter is specified, the response includes only
                    records beyond the marker, up to the value specified by
                    <code>MaxRecords</code>.
                  type: string
  /#Action=DescribeReservedCacheNodesOfferings:
    get:
      x-aws-operation-name: DescribeReservedCacheNodesOfferings
      operationId: GET DescribeReservedCacheNodesOfferings
      description: Lists available reserved cache node offerings.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ReservedCacheNodesOfferingMessage"
        "480":
          description: ReservedCacheNodesOfferingNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ReservedCacheNodesOfferingNotFoundFault"
        "481":
          description: InvalidParameterValueException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidParameterValueException"
        "482":
          description: InvalidParameterCombinationException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidParameterCombinationException"
      parameters:
        - name: ReservedCacheNodesOfferingId
          in: query
          required: false
          description: "<p>The offering identifier filter value. Use this parameter to show
            only the available offering that matches the specified reservation
            identifier.</p> <p>Example:
            <code>438012d3-4052-4cc7-b2e3-8d3372e0e706</code> </p>"
          schema:
            type: string
        - name: CacheNodeType
          in: query
          required: false
          description: "<p>The cache node type filter value. Use this parameter to show
            only the available offerings matching the specified cache node
            type.</p> <p>The following node types are supported by ElastiCache.
            Generally speaking, the current generation types provide more memory
            and computational power at lower cost when compared to their
            equivalent previous generation counterparts.</p> <ul> <li>
            <p>General purpose:</p> <ul> <li> <p>Current generation: </p> <p>
            <b>M5 node types:</b> <code>cache.m5.large</code>,
            <code>cache.m5.xlarge</code>, <code>cache.m5.2xlarge</code>,
            <code>cache.m5.4xlarge</code>, <code>cache.m5.12xlarge</code>,
            <code>cache.m5.24xlarge</code> </p> <p> <b>M4 node types:</b>
            <code>cache.m4.large</code>, <code>cache.m4.xlarge</code>,
            <code>cache.m4.2xlarge</code>, <code>cache.m4.4xlarge</code>,
            <code>cache.m4.10xlarge</code> </p> <p> <b>T2 node types:</b>
            <code>cache.t2.micro</code>, <code>cache.t2.small</code>,
            <code>cache.t2.medium</code> </p> </li> <li> <p>Previous generation:
            (not recommended)</p> <p> <b>T1 node types:</b>
            <code>cache.t1.micro</code> </p> <p> <b>M1 node types:</b>
            <code>cache.m1.small</code>, <code>cache.m1.medium</code>,
            <code>cache.m1.large</code>, <code>cache.m1.xlarge</code> </p> <p>
            <b>M3 node types:</b> <code>cache.m3.medium</code>,
            <code>cache.m3.large</code>, <code>cache.m3.xlarge</code>,
            <code>cache.m3.2xlarge</code> </p> </li> </ul> </li> <li> <p>Compute
            optimized:</p> <ul> <li> <p>Previous generation: (not
            recommended)</p> <p> <b>C1 node types:</b>
            <code>cache.c1.xlarge</code> </p> </li> </ul> </li> <li> <p>Memory
            optimized:</p> <ul> <li> <p>Current generation: </p> <p> <b>R5 node
            types:</b> <code>cache.r5.large</code>,
            <code>cache.r5.xlarge</code>, <code>cache.r5.2xlarge</code>,
            <code>cache.r5.4xlarge</code>, <code>cache.r5.12xlarge</code>,
            <code>cache.r5.24xlarge</code> </p> <p> <b>R4 node types:</b>
            <code>cache.r4.large</code>, <code>cache.r4.xlarge</code>,
            <code>cache.r4.2xlarge</code>, <code>cache.r4.4xlarge</code>,
            <code>cache.r4.8xlarge</code>, <code>cache.r4.16xlarge</code> </p>
            </li> <li> <p>Previous generation: (not recommended)</p> <p> <b>M2
            node types:</b> <code>cache.m2.xlarge</code>,
            <code>cache.m2.2xlarge</code>, <code>cache.m2.4xlarge</code> </p>
            <p> <b>R3 node types:</b> <code>cache.r3.large</code>,
            <code>cache.r3.xlarge</code>, <code>cache.r3.2xlarge</code>,
            <code>cache.r3.4xlarge</code>, <code>cache.r3.8xlarge</code> </p>
            </li> </ul> </li> </ul> <p> <b>Additional node type info</b> </p>
            <ul> <li> <p>All current generation instance types are created in
            Amazon VPC by default.</p> </li> <li> <p>Redis append-only files
            (AOF) are not supported for T1 or T2 instances.</p> </li> <li>
            <p>Redis Multi-AZ with automatic failover is not supported on T1
            instances.</p> </li> <li> <p>Redis configuration variables
            <code>appendonly</code> and <code>appendfsync</code> are not
            supported on Redis version 2.8.22 and later.</p> </li> </ul>"
          schema:
            type: string
        - name: Duration
          in: query
          required: false
          description: "<p>Duration filter value, specified in years or seconds. Use this
            parameter to show only reservations for a given duration.</p>
            <p>Valid Values: <code>1 | 3 | 31536000 | 94608000</code> </p>"
          schema:
            type: string
        - name: ProductDescription
          in: query
          required: false
          description: The product description filter value. Use this parameter to show
            only the available offerings matching the specified product
            description.
          schema:
            type: string
        - name: OfferingType
          in: query
          required: false
          description: '<p>The offering type filter value. Use this parameter to show only
            the available offerings matching the specified offering type.</p>
            <p>Valid Values: <code>"Light Utilization"|"Medium
            Utilization"|"Heavy Utilization"</code> </p>'
          schema:
            type: string
        - name: MaxRecords
          in: query
          required: false
          description: "<p>The maximum number of records to include in the response. If
            more records exist than the specified <code>MaxRecords</code> value,
            a marker is included in the response so that the remaining results
            can be retrieved.</p> <p>Default: 100</p> <p>Constraints: minimum
            20; maximum 100.</p>"
          schema:
            type: integer
        - name: Marker
          in: query
          required: false
          description: An optional marker returned from a prior request. Use this marker
            for pagination of results from this operation. If this parameter is
            specified, the response includes only records beyond the marker, up
            to the value specified by <code>MaxRecords</code>.
          schema:
            type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeReservedCacheNodesOfferings
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2015-02-02
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: DescribeReservedCacheNodesOfferings
      operationId: POST DescribeReservedCacheNodesOfferings
      description: Lists available reserved cache node offerings.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ReservedCacheNodesOfferingMessage"
        "480":
          description: ReservedCacheNodesOfferingNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ReservedCacheNodesOfferingNotFoundFault"
        "481":
          description: InvalidParameterValueException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidParameterValueException"
        "482":
          description: InvalidParameterCombinationException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidParameterCombinationException"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeReservedCacheNodesOfferings
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2015-02-02
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                ReservedCacheNodesOfferingId:
                  description: "<p>The offering identifier filter value. Use this parameter
                    to show only the available offering that matches the
                    specified reservation identifier.</p> <p>Example:
                    <code>438012d3-4052-4cc7-b2e3-8d3372e0e706</code> </p>"
                  type: string
                CacheNodeType:
                  description: "<p>The cache node type filter value. Use this parameter to
                    show only the available offerings matching the specified
                    cache node type.</p> <p>The following node types are
                    supported by ElastiCache. Generally speaking, the current
                    generation types provide more memory and computational power
                    at lower cost when compared to their equivalent previous
                    generation counterparts.</p> <ul> <li> <p>General
                    purpose:</p> <ul> <li> <p>Current generation: </p> <p> <b>M5
                    node types:</b> <code>cache.m5.large</code>,
                    <code>cache.m5.xlarge</code>, <code>cache.m5.2xlarge</code>,
                    <code>cache.m5.4xlarge</code>,
                    <code>cache.m5.12xlarge</code>,
                    <code>cache.m5.24xlarge</code> </p> <p> <b>M4 node
                    types:</b> <code>cache.m4.large</code>,
                    <code>cache.m4.xlarge</code>, <code>cache.m4.2xlarge</code>,
                    <code>cache.m4.4xlarge</code>,
                    <code>cache.m4.10xlarge</code> </p> <p> <b>T2 node
                    types:</b> <code>cache.t2.micro</code>,
                    <code>cache.t2.small</code>, <code>cache.t2.medium</code>
                    </p> </li> <li> <p>Previous generation: (not
                    recommended)</p> <p> <b>T1 node types:</b>
                    <code>cache.t1.micro</code> </p> <p> <b>M1 node types:</b>
                    <code>cache.m1.small</code>, <code>cache.m1.medium</code>,
                    <code>cache.m1.large</code>, <code>cache.m1.xlarge</code>
                    </p> <p> <b>M3 node types:</b> <code>cache.m3.medium</code>,
                    <code>cache.m3.large</code>, <code>cache.m3.xlarge</code>,
                    <code>cache.m3.2xlarge</code> </p> </li> </ul> </li> <li>
                    <p>Compute optimized:</p> <ul> <li> <p>Previous generation:
                    (not recommended)</p> <p> <b>C1 node types:</b>
                    <code>cache.c1.xlarge</code> </p> </li> </ul> </li> <li>
                    <p>Memory optimized:</p> <ul> <li> <p>Current generation:
                    </p> <p> <b>R5 node types:</b> <code>cache.r5.large</code>,
                    <code>cache.r5.xlarge</code>, <code>cache.r5.2xlarge</code>,
                    <code>cache.r5.4xlarge</code>,
                    <code>cache.r5.12xlarge</code>,
                    <code>cache.r5.24xlarge</code> </p> <p> <b>R4 node
                    types:</b> <code>cache.r4.large</code>,
                    <code>cache.r4.xlarge</code>, <code>cache.r4.2xlarge</code>,
                    <code>cache.r4.4xlarge</code>,
                    <code>cache.r4.8xlarge</code>,
                    <code>cache.r4.16xlarge</code> </p> </li> <li> <p>Previous
                    generation: (not recommended)</p> <p> <b>M2 node types:</b>
                    <code>cache.m2.xlarge</code>, <code>cache.m2.2xlarge</code>,
                    <code>cache.m2.4xlarge</code> </p> <p> <b>R3 node types:</b>
                    <code>cache.r3.large</code>, <code>cache.r3.xlarge</code>,
                    <code>cache.r3.2xlarge</code>,
                    <code>cache.r3.4xlarge</code>, <code>cache.r3.8xlarge</code>
                    </p> </li> </ul> </li> </ul> <p> <b>Additional node type
                    info</b> </p> <ul> <li> <p>All current generation instance
                    types are created in Amazon VPC by default.</p> </li> <li>
                    <p>Redis append-only files (AOF) are not supported for T1 or
                    T2 instances.</p> </li> <li> <p>Redis Multi-AZ with
                    automatic failover is not supported on T1 instances.</p>
                    </li> <li> <p>Redis configuration variables
                    <code>appendonly</code> and <code>appendfsync</code> are not
                    supported on Redis version 2.8.22 and later.</p> </li>
                    </ul>"
                  type: string
                Duration:
                  description: "<p>Duration filter value, specified in years or seconds.
                    Use this parameter to show only reservations for a given
                    duration.</p> <p>Valid Values: <code>1 | 3 | 31536000 |
                    94608000</code> </p>"
                  type: string
                ProductDescription:
                  description: The product description filter value. Use this parameter to
                    show only the available offerings matching the specified
                    product description.
                  type: string
                OfferingType:
                  description: '<p>The offering type filter value. Use this parameter to
                    show only the available offerings matching the specified
                    offering type.</p> <p>Valid Values: <code>"Light
                    Utilization"|"Medium Utilization"|"Heavy Utilization"</code>
                    </p>'
                  type: string
                MaxRecords:
                  description: "<p>The maximum number of records to include in the
                    response. If more records exist than the specified
                    <code>MaxRecords</code> value, a marker is included in the
                    response so that the remaining results can be retrieved.</p>
                    <p>Default: 100</p> <p>Constraints: minimum 20; maximum
                    100.</p>"
                  type: integer
                Marker:
                  description: An optional marker returned from a prior request. Use this
                    marker for pagination of results from this operation. If
                    this parameter is specified, the response includes only
                    records beyond the marker, up to the value specified by
                    <code>MaxRecords</code>.
                  type: string
  /#Action=DescribeServiceUpdates:
    get:
      x-aws-operation-name: DescribeServiceUpdates
      operationId: GET DescribeServiceUpdates
      description: Returns details of the service updates
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ServiceUpdatesMessage"
        "480":
          description: ServiceUpdateNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ServiceUpdateNotFoundFault"
        "481":
          description: InvalidParameterValueException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidParameterValueException"
        "482":
          description: InvalidParameterCombinationException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidParameterCombinationException"
      parameters:
        - name: ServiceUpdateName
          in: query
          required: false
          description: The unique ID of the service update
          schema:
            type: string
        - name: ServiceUpdateStatus
          in: query
          required: false
          description: The status of the service update
          schema:
            type: array
            items:
              type: string
        - name: MaxRecords
          in: query
          required: false
          description: The maximum number of records to include in the response
          schema:
            type: integer
        - name: Marker
          in: query
          required: false
          description: An optional marker returned from a prior request. Use this marker
            for pagination of results from this operation. If this parameter is
            specified, the response includes only records beyond the marker, up
            to the value specified by <code>MaxRecords</code>.
          schema:
            type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeServiceUpdates
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2015-02-02
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: DescribeServiceUpdates
      operationId: POST DescribeServiceUpdates
      description: Returns details of the service updates
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ServiceUpdatesMessage"
        "480":
          description: ServiceUpdateNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ServiceUpdateNotFoundFault"
        "481":
          description: InvalidParameterValueException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidParameterValueException"
        "482":
          description: InvalidParameterCombinationException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidParameterCombinationException"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeServiceUpdates
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2015-02-02
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                ServiceUpdateName:
                  description: The unique ID of the service update
                  type: string
                ServiceUpdateStatus:
                  description: The status of the service update
                  type: array
                  items:
                    type: string
                MaxRecords:
                  description: The maximum number of records to include in the response
                  type: integer
                Marker:
                  description: An optional marker returned from a prior request. Use this
                    marker for pagination of results from this operation. If
                    this parameter is specified, the response includes only
                    records beyond the marker, up to the value specified by
                    <code>MaxRecords</code>.
                  type: string
  /#Action=DescribeSnapshots:
    get:
      x-aws-operation-name: DescribeSnapshots
      operationId: GET DescribeSnapshots
      description: <p>Returns information about cluster or replication group snapshots. By
        default, <code>DescribeSnapshots</code> lists all of your snapshots; it
        can optionally describe a single snapshot, or just the snapshots
        associated with a particular cache cluster.</p> <note> <p>This operation
        is valid for Redis only.</p> </note>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DescribeSnapshotsListMessage"
        "480":
          description: CacheClusterNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/CacheClusterNotFoundFault"
        "481":
          description: SnapshotNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/SnapshotNotFoundFault"
        "482":
          description: InvalidParameterValueException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidParameterValueException"
        "483":
          description: InvalidParameterCombinationException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidParameterCombinationException"
      parameters:
        - name: ReplicationGroupId
          in: query
          required: false
          description: A user-supplied replication group identifier. If this parameter is
            specified, only snapshots associated with that specific replication
            group are described.
          schema:
            type: string
        - name: CacheClusterId
          in: query
          required: false
          description: A user-supplied cluster identifier. If this parameter is specified,
            only snapshots associated with that specific cluster are described.
          schema:
            type: string
        - name: SnapshotName
          in: query
          required: false
          description: A user-supplied name of the snapshot. If this parameter is
            specified, only this snapshot are described.
          schema:
            type: string
        - name: SnapshotSource
          in: query
          required: false
          description: If set to <code>system</code>, the output shows snapshots that were
            automatically created by ElastiCache. If set to <code>user</code>
            the output shows snapshots that were manually created. If omitted,
            the output shows both automatically and manually created snapshots.
          schema:
            type: string
        - name: Marker
          in: query
          required: false
          description: An optional marker returned from a prior request. Use this marker
            for pagination of results from this operation. If this parameter is
            specified, the response includes only records beyond the marker, up
            to the value specified by <code>MaxRecords</code>.
          schema:
            type: string
        - name: MaxRecords
          in: query
          required: false
          description: "<p>The maximum number of records to include in the response. If
            more records exist than the specified <code>MaxRecords</code> value,
            a marker is included in the response so that the remaining results
            can be retrieved.</p> <p>Default: 50</p> <p>Constraints: minimum 20;
            maximum 50.</p>"
          schema:
            type: integer
        - name: ShowNodeGroupConfig
          in: query
          required: false
          description: A Boolean value which if true, the node group (shard) configuration
            is included in the snapshot description.
          schema:
            type: boolean
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeSnapshots
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2015-02-02
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: DescribeSnapshots
      operationId: POST DescribeSnapshots
      description: <p>Returns information about cluster or replication group snapshots. By
        default, <code>DescribeSnapshots</code> lists all of your snapshots; it
        can optionally describe a single snapshot, or just the snapshots
        associated with a particular cache cluster.</p> <note> <p>This operation
        is valid for Redis only.</p> </note>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DescribeSnapshotsListMessage"
        "480":
          description: CacheClusterNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/CacheClusterNotFoundFault"
        "481":
          description: SnapshotNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/SnapshotNotFoundFault"
        "482":
          description: InvalidParameterValueException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidParameterValueException"
        "483":
          description: InvalidParameterCombinationException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidParameterCombinationException"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeSnapshots
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2015-02-02
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                ReplicationGroupId:
                  description: A user-supplied replication group identifier. If this
                    parameter is specified, only snapshots associated with that
                    specific replication group are described.
                  type: string
                CacheClusterId:
                  description: A user-supplied cluster identifier. If this parameter is
                    specified, only snapshots associated with that specific
                    cluster are described.
                  type: string
                SnapshotName:
                  description: A user-supplied name of the snapshot. If this parameter is
                    specified, only this snapshot are described.
                  type: string
                SnapshotSource:
                  description: If set to <code>system</code>, the output shows snapshots
                    that were automatically created by ElastiCache. If set to
                    <code>user</code> the output shows snapshots that were
                    manually created. If omitted, the output shows both
                    automatically and manually created snapshots.
                  type: string
                Marker:
                  description: An optional marker returned from a prior request. Use this
                    marker for pagination of results from this operation. If
                    this parameter is specified, the response includes only
                    records beyond the marker, up to the value specified by
                    <code>MaxRecords</code>.
                  type: string
                MaxRecords:
                  description: "<p>The maximum number of records to include in the
                    response. If more records exist than the specified
                    <code>MaxRecords</code> value, a marker is included in the
                    response so that the remaining results can be retrieved.</p>
                    <p>Default: 50</p> <p>Constraints: minimum 20; maximum
                    50.</p>"
                  type: integer
                ShowNodeGroupConfig:
                  description: A Boolean value which if true, the node group (shard)
                    configuration is included in the snapshot description.
                  type: boolean
  /#Action=DescribeUpdateActions:
    get:
      x-aws-operation-name: DescribeUpdateActions
      operationId: GET DescribeUpdateActions
      description: "Returns details of the update actions "
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/UpdateActionsMessage"
        "480":
          description: InvalidParameterValueException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidParameterValueException"
        "481":
          description: InvalidParameterCombinationException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidParameterCombinationException"
      parameters:
        - name: ServiceUpdateName
          in: query
          required: false
          description: The unique ID of the service update
          schema:
            type: string
        - name: ReplicationGroupIds
          in: query
          required: false
          description: The replication group IDs
          schema:
            type: array
            items:
              type: string
        - name: ServiceUpdateStatus
          in: query
          required: false
          description: The status of the service update
          schema:
            type: array
            items:
              type: string
        - name: ServiceUpdateTimeRange.StartTime
          in: query
          description: >-
            Filters update actions from the service updates that are in
            available status during the time range.

            The start time of the time range filter
          schema:
            type: string
        - name: ServiceUpdateTimeRange.EndTime
          in: query
          description: >-
            Filters update actions from the service updates that are in
            available status during the time range.

            The end time of the time range filter
          schema:
            type: string
        - name: UpdateActionStatus
          in: query
          required: false
          description: The status of the update action.
          schema:
            type: array
            items:
              type: string
        - name: ShowNodeLevelUpdateStatus
          in: query
          required: false
          description: "Dictates whether to include node level update status in the
            response "
          schema:
            type: boolean
        - name: MaxRecords
          in: query
          required: false
          description: The maximum number of records to include in the response
          schema:
            type: integer
        - name: Marker
          in: query
          required: false
          description: An optional marker returned from a prior request. Use this marker
            for pagination of results from this operation. If this parameter is
            specified, the response includes only records beyond the marker, up
            to the value specified by <code>MaxRecords</code>.
          schema:
            type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeUpdateActions
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2015-02-02
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: DescribeUpdateActions
      operationId: POST DescribeUpdateActions
      description: "Returns details of the update actions "
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/UpdateActionsMessage"
        "480":
          description: InvalidParameterValueException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidParameterValueException"
        "481":
          description: InvalidParameterCombinationException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidParameterCombinationException"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeUpdateActions
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2015-02-02
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                ServiceUpdateName:
                  description: The unique ID of the service update
                  type: string
                ReplicationGroupIds:
                  description: The replication group IDs
                  type: array
                  items:
                    type: string
                ServiceUpdateStatus:
                  description: The status of the service update
                  type: array
                  items:
                    type: string
                ServiceUpdateTimeRange.StartTime:
                  description: >-
                    Filters update actions from the service updates that are in
                    available status during the time range.

                    The start time of the time range filter
                  type: string
                ServiceUpdateTimeRange.EndTime:
                  description: >-
                    Filters update actions from the service updates that are in
                    available status during the time range.

                    The end time of the time range filter
                  type: string
                UpdateActionStatus:
                  description: The status of the update action.
                  type: array
                  items:
                    type: string
                ShowNodeLevelUpdateStatus:
                  description: "Dictates whether to include node level update status in the
                    response "
                  type: boolean
                MaxRecords:
                  description: The maximum number of records to include in the response
                  type: integer
                Marker:
                  description: An optional marker returned from a prior request. Use this
                    marker for pagination of results from this operation. If
                    this parameter is specified, the response includes only
                    records beyond the marker, up to the value specified by
                    <code>MaxRecords</code>.
                  type: string
  /#Action=IncreaseReplicaCount:
    get:
      x-aws-operation-name: IncreaseReplicaCount
      operationId: GET IncreaseReplicaCount
      description: Dynamically increases the number of replics in a Redis (cluster mode
        disabled) replication group or the number of replica nodes in one or
        more node groups (shards) of a Redis (cluster mode enabled) replication
        group. This operation is performed with no cluster down time.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/IncreaseReplicaCountResult"
        "480":
          description: ReplicationGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ReplicationGroupNotFoundFault"
        "481":
          description: InvalidReplicationGroupStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidReplicationGroupStateFault"
        "482":
          description: InvalidCacheClusterStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidCacheClusterStateFault"
        "483":
          description: InvalidVPCNetworkStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidVPCNetworkStateFault"
        "484":
          description: InsufficientCacheClusterCapacityFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InsufficientCacheClusterCapacityFault"
        "485":
          description: ClusterQuotaForCustomerExceededFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ClusterQuotaForCustomerExceededFault"
        "486":
          description: NodeGroupsPerReplicationGroupQuotaExceededFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/NodeGroupsPerReplicationGroupQuotaExcee\
                  dedFault"
        "487":
          description: NodeQuotaForCustomerExceededFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/NodeQuotaForCustomerExceededFault"
        "488":
          description: NoOperationFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/NoOperationFault"
        "489":
          description: InvalidKMSKeyFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidKMSKeyFault"
        "490":
          description: InvalidParameterValueException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidParameterValueException"
        "491":
          description: InvalidParameterCombinationException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidParameterCombinationException"
      parameters:
        - name: ReplicationGroupId
          in: query
          required: true
          description: The id of the replication group to which you want to add replica
            nodes.
          schema:
            type: string
        - name: NewReplicaCount
          in: query
          required: false
          description: The number of read replica nodes you want at the completion of this
            operation. For Redis (cluster mode disabled) replication groups,
            this is the number of replica nodes in the replication group. For
            Redis (cluster mode enabled) replication groups, this is the number
            of replica nodes in each of the replication group's node groups.
          schema:
            type: integer
        - name: ReplicaConfiguration
          in: query
          required: false
          description: "A list of <code>ConfigureShard</code> objects that can be used to
            configure each shard in a Redis (cluster mode enabled) replication
            group. The <code>ConfigureShard</code> has three members:
            <code>NewReplicaCount</code>, <code>NodeGroupId</code>, and
            <code>PreferredAvailabilityZones</code>."
          schema:
            type: array
            items:
              type: string
        - name: ApplyImmediately
          in: query
          required: true
          description: If <code>True</code>, the number of replica nodes is increased
            immediately. <code>ApplyImmediately=False</code> is not currently
            supported.
          schema:
            type: boolean
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - IncreaseReplicaCount
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2015-02-02
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: IncreaseReplicaCount
      operationId: POST IncreaseReplicaCount
      description: Dynamically increases the number of replics in a Redis (cluster mode
        disabled) replication group or the number of replica nodes in one or
        more node groups (shards) of a Redis (cluster mode enabled) replication
        group. This operation is performed with no cluster down time.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/IncreaseReplicaCountResult"
        "480":
          description: ReplicationGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ReplicationGroupNotFoundFault"
        "481":
          description: InvalidReplicationGroupStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidReplicationGroupStateFault"
        "482":
          description: InvalidCacheClusterStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidCacheClusterStateFault"
        "483":
          description: InvalidVPCNetworkStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidVPCNetworkStateFault"
        "484":
          description: InsufficientCacheClusterCapacityFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InsufficientCacheClusterCapacityFault"
        "485":
          description: ClusterQuotaForCustomerExceededFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ClusterQuotaForCustomerExceededFault"
        "486":
          description: NodeGroupsPerReplicationGroupQuotaExceededFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/NodeGroupsPerReplicationGroupQuotaExcee\
                  dedFault"
        "487":
          description: NodeQuotaForCustomerExceededFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/NodeQuotaForCustomerExceededFault"
        "488":
          description: NoOperationFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/NoOperationFault"
        "489":
          description: InvalidKMSKeyFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidKMSKeyFault"
        "490":
          description: InvalidParameterValueException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidParameterValueException"
        "491":
          description: InvalidParameterCombinationException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidParameterCombinationException"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - IncreaseReplicaCount
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2015-02-02
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                ReplicationGroupId:
                  description: The id of the replication group to which you want to add
                    replica nodes.
                  type: string
                NewReplicaCount:
                  description: The number of read replica nodes you want at the completion
                    of this operation. For Redis (cluster mode disabled)
                    replication groups, this is the number of replica nodes in
                    the replication group. For Redis (cluster mode enabled)
                    replication groups, this is the number of replica nodes in
                    each of the replication group's node groups.
                  type: integer
                ReplicaConfiguration:
                  description: "A list of <code>ConfigureShard</code> objects that can be
                    used to configure each shard in a Redis (cluster mode
                    enabled) replication group. The <code>ConfigureShard</code>
                    has three members: <code>NewReplicaCount</code>,
                    <code>NodeGroupId</code>, and
                    <code>PreferredAvailabilityZones</code>."
                  type: array
                  items:
                    type: string
                ApplyImmediately:
                  description: If <code>True</code>, the number of replica nodes is
                    increased immediately. <code>ApplyImmediately=False</code>
                    is not currently supported.
                  type: boolean
              required:
                - ReplicationGroupId
                - ApplyImmediately
  /#Action=ListAllowedNodeTypeModifications:
    get:
      x-aws-operation-name: ListAllowedNodeTypeModifications
      operationId: GET ListAllowedNodeTypeModifications
      description: <p>Lists all available node types that you can scale your Redis
        cluster's or replication group's current node type.</p> <p>When you use
        the <code>ModifyCacheCluster</code> or
        <code>ModifyReplicationGroup</code> operations to scale your cluster or
        replication group, the value of the <code>CacheNodeType</code> parameter
        must be one of the node types returned by this operation.</p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/AllowedNodeTypeModificationsMessage"
        "480":
          description: CacheClusterNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/CacheClusterNotFoundFault"
        "481":
          description: ReplicationGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ReplicationGroupNotFoundFault"
        "482":
          description: InvalidParameterCombinationException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidParameterCombinationException"
        "483":
          description: InvalidParameterValueException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidParameterValueException"
      parameters:
        - name: CacheClusterId
          in: query
          required: false
          description: <p>The name of the cluster you want to scale up to a larger node
            instanced type. ElastiCache uses the cluster id to identify the
            current node type of this cluster and from that to create a list of
            node types you can scale up to.</p> <important> <p>You must provide
            a value for either the <code>CacheClusterId</code> or the
            <code>ReplicationGroupId</code>.</p> </important>
          schema:
            type: string
        - name: ReplicationGroupId
          in: query
          required: false
          description: <p>The name of the replication group want to scale up to a larger
            node type. ElastiCache uses the replication group id to identify the
            current node type being used by this replication group, and from
            that to create a list of node types you can scale up to.</p>
            <important> <p>You must provide a value for either the
            <code>CacheClusterId</code> or the
            <code>ReplicationGroupId</code>.</p> </important>
          schema:
            type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - ListAllowedNodeTypeModifications
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2015-02-02
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: ListAllowedNodeTypeModifications
      operationId: POST ListAllowedNodeTypeModifications
      description: <p>Lists all available node types that you can scale your Redis
        cluster's or replication group's current node type.</p> <p>When you use
        the <code>ModifyCacheCluster</code> or
        <code>ModifyReplicationGroup</code> operations to scale your cluster or
        replication group, the value of the <code>CacheNodeType</code> parameter
        must be one of the node types returned by this operation.</p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/AllowedNodeTypeModificationsMessage"
        "480":
          description: CacheClusterNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/CacheClusterNotFoundFault"
        "481":
          description: ReplicationGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ReplicationGroupNotFoundFault"
        "482":
          description: InvalidParameterCombinationException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidParameterCombinationException"
        "483":
          description: InvalidParameterValueException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidParameterValueException"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - ListAllowedNodeTypeModifications
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2015-02-02
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                CacheClusterId:
                  description: <p>The name of the cluster you want to scale up to a larger
                    node instanced type. ElastiCache uses the cluster id to
                    identify the current node type of this cluster and from that
                    to create a list of node types you can scale up to.</p>
                    <important> <p>You must provide a value for either the
                    <code>CacheClusterId</code> or the
                    <code>ReplicationGroupId</code>.</p> </important>
                  type: string
                ReplicationGroupId:
                  description: <p>The name of the replication group want to scale up to a
                    larger node type. ElastiCache uses the replication group id
                    to identify the current node type being used by this
                    replication group, and from that to create a list of node
                    types you can scale up to.</p> <important> <p>You must
                    provide a value for either the <code>CacheClusterId</code>
                    or the <code>ReplicationGroupId</code>.</p> </important>
                  type: string
  /#Action=ListTagsForResource:
    get:
      x-aws-operation-name: ListTagsForResource
      operationId: GET ListTagsForResource
      description: <p>Lists all cost allocation tags currently on the named resource. A
        <code>cost allocation tag</code> is a key-value pair where the key is
        case-sensitive and the value is optional. You can use cost allocation
        tags to categorize and track your AWS costs.</p> <p>If the cluster is
        not in the <i>available</i> state, <code>ListTagsForResource</code>
        returns an error.</p> <p>You can have a maximum of 50 cost allocation
        tags on an ElastiCache resource. For more information, see <a
        href="https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/Tagging.html">Monitoring
        Costs with Tags</a>.</p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/TagListMessage"
        "480":
          description: CacheClusterNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/CacheClusterNotFoundFault"
        "481":
          description: SnapshotNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/SnapshotNotFoundFault"
        "482":
          description: InvalidARNFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidARNFault"
      parameters:
        - name: ResourceName
          in: query
          required: true
          description: <p>The Amazon Resource Name (ARN) of the resource for which you want
            the list of tags, for example
            <code>arn:aws:elasticache:us-west-2:0123456789:cluster:myCluster</code>
            or
            <code>arn:aws:elasticache:us-west-2:0123456789:snapshot:mySnapshot</code>.</p>
            <p>For more information about ARNs, see <a
            href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon
            Resource Names (ARNs) and AWS Service Namespaces</a>.</p>
          schema:
            type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - ListTagsForResource
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2015-02-02
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: ListTagsForResource
      operationId: POST ListTagsForResource
      description: <p>Lists all cost allocation tags currently on the named resource. A
        <code>cost allocation tag</code> is a key-value pair where the key is
        case-sensitive and the value is optional. You can use cost allocation
        tags to categorize and track your AWS costs.</p> <p>If the cluster is
        not in the <i>available</i> state, <code>ListTagsForResource</code>
        returns an error.</p> <p>You can have a maximum of 50 cost allocation
        tags on an ElastiCache resource. For more information, see <a
        href="https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/Tagging.html">Monitoring
        Costs with Tags</a>.</p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/TagListMessage"
        "480":
          description: CacheClusterNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/CacheClusterNotFoundFault"
        "481":
          description: SnapshotNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/SnapshotNotFoundFault"
        "482":
          description: InvalidARNFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidARNFault"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - ListTagsForResource
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2015-02-02
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                ResourceName:
                  description: <p>The Amazon Resource Name (ARN) of the resource for which
                    you want the list of tags, for example
                    <code>arn:aws:elasticache:us-west-2:0123456789:cluster:myCluster</code>
                    or
                    <code>arn:aws:elasticache:us-west-2:0123456789:snapshot:mySnapshot</code>.</p>
                    <p>For more information about ARNs, see <a
                    href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon
                    Resource Names (ARNs) and AWS Service Namespaces</a>.</p>
                  type: string
              required:
                - ResourceName
  /#Action=ModifyCacheCluster:
    get:
      x-aws-operation-name: ModifyCacheCluster
      operationId: GET ModifyCacheCluster
      description: Modifies the settings for a cluster. You can use this operation to
        change one or more cluster configuration parameters by specifying the
        parameters and the new values.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ModifyCacheClusterResult"
        "480":
          description: InvalidCacheClusterStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidCacheClusterStateFault"
        "481":
          description: InvalidCacheSecurityGroupStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidCacheSecurityGroupStateFault"
        "482":
          description: InsufficientCacheClusterCapacityFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InsufficientCacheClusterCapacityFault"
        "483":
          description: CacheClusterNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/CacheClusterNotFoundFault"
        "484":
          description: NodeQuotaForClusterExceededFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/NodeQuotaForClusterExceededFault"
        "485":
          description: NodeQuotaForCustomerExceededFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/NodeQuotaForCustomerExceededFault"
        "486":
          description: CacheSecurityGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/CacheSecurityGroupNotFoundFault"
        "487":
          description: CacheParameterGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/CacheParameterGroupNotFoundFault"
        "488":
          description: InvalidVPCNetworkStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidVPCNetworkStateFault"
        "489":
          description: InvalidParameterValueException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidParameterValueException"
        "490":
          description: InvalidParameterCombinationException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidParameterCombinationException"
      parameters:
        - name: CacheClusterId
          in: query
          required: true
          description: The cluster identifier. This value is stored as a lowercase string.
          schema:
            type: string
        - name: NumCacheNodes
          in: query
          required: false
          description: <p>The number of cache nodes that the cluster should have. If the
            value for <code>NumCacheNodes</code> is greater than the sum of the
            number of current cache nodes and the number of cache nodes pending
            creation (which may be zero), more nodes are added. If the value is
            less than the number of existing cache nodes, nodes are removed. If
            the value is equal to the number of current cache nodes, any pending
            add or remove requests are canceled.</p> <p>If you are removing
            cache nodes, you must use the <code>CacheNodeIdsToRemove</code>
            parameter to provide the IDs of the specific cache nodes to
            remove.</p> <p>For clusters running Redis, this value must be 1. For
            clusters running Memcached, this value must be between 1 and 20.</p>
            <note> <p>Adding or removing Memcached cache nodes can be applied
            immediately or as a pending operation (see
            <code>ApplyImmediately</code>).</p> <p>A pending operation to modify
            the number of cache nodes in a cluster during its maintenance
            window, whether by adding or removing nodes in accordance with the
            scale out architecture, is not queued. The customer's latest request
            to add or remove nodes to the cluster overrides any previous pending
            operations to modify the number of cache nodes in the cluster. For
            example, a request to remove 2 nodes would override a previous
            pending operation to remove 3 nodes. Similarly, a request to add 2
            nodes would override a previous pending operation to remove 3 nodes
            and vice versa. As Memcached cache nodes may now be provisioned in
            different Availability Zones with flexible cache node placement, a
            request to add nodes does not automatically override a previous
            pending operation to add nodes. The customer can modify the previous
            pending operation to add more nodes or explicitly cancel the pending
            request and retry the new request. To cancel pending operations to
            modify the number of cache nodes in a cluster, use the
            <code>ModifyCacheCluster</code> request and set
            <code>NumCacheNodes</code> equal to the number of cache nodes
            currently in the cluster.</p> </note>
          schema:
            type: integer
        - name: CacheNodeIdsToRemove
          in: query
          required: false
          description: "<p>A list of cache node IDs to be removed. A node ID is a numeric
            identifier (0001, 0002, etc.). This parameter is only valid when
            <code>NumCacheNodes</code> is less than the existing number of cache
            nodes. The number of cache node IDs supplied in this parameter must
            match the difference between the existing number of cache nodes in
            the cluster or pending cache nodes, whichever is greater, and the
            value of <code>NumCacheNodes</code> in the request.</p> <p>For
            example: If you have 3 active cache nodes, 7 pending cache nodes,
            and the number of cache nodes in this
            <code>ModifyCacheCluster</code> call is 5, you must list 2 (7 - 5)
            cache node IDs to remove.</p>"
          schema:
            type: array
            items:
              type: string
        - name: AZMode
          in: query
          required: false
          description: '<p>Specifies whether the new nodes in this Memcached cluster are
            all created in a single Availability Zone or created across multiple
            Availability Zones.</p> <p>Valid values: <code>single-az</code> |
            <code>cross-az</code>.</p> <p>This option is only supported for
            Memcached clusters.</p> <note> <p>You cannot specify
            <code>single-az</code> if the Memcached cluster already has cache
            nodes in different Availability Zones. If <code>cross-az</code> is
            specified, existing Memcached nodes remain in their current
            Availability Zone.</p> <p>Only newly created nodes are located in
            different Availability Zones. For instructions on how to move
            existing Memcached nodes to different Availability Zones, see the
            <b>Availability Zone Considerations</b> section of <a
            href="https://docs.aws.amazon.com/AmazonElastiCache/latest/mem-ug/CacheNodes.SupportedTypes.html">Cache
            Node Considerations for Memcached</a>.</p> </note>'
          schema:
            type: string
            enum:
              - single-az
              - cross-az
        - name: NewAvailabilityZones
          in: query
          required: false
          description: '<p>The list of Availability Zones where the new Memcached cache
            nodes are created.</p> <p>This parameter is only valid when
            <code>NumCacheNodes</code> in the request is greater than the sum of
            the number of active cache nodes and the number of cache nodes
            pending creation (which may be zero). The number of Availability
            Zones supplied in this list must match the cache nodes being added
            in this request.</p> <p>This option is only supported on Memcached
            clusters.</p> <p>Scenarios:</p> <ul> <li> <p> <b>Scenario 1:</b> You
            have 3 active nodes and wish to add 2 nodes. Specify
            <code>NumCacheNodes=5</code> (3 + 2) and optionally specify two
            Availability Zones for the two new nodes.</p> </li> <li> <p>
            <b>Scenario 2:</b> You have 3 active nodes and 2 nodes pending
            creation (from the scenario 1 call) and want to add 1 more node.
            Specify <code>NumCacheNodes=6</code> ((3 + 2) + 1) and optionally
            specify an Availability Zone for the new node.</p> </li> <li> <p>
            <b>Scenario 3:</b> You want to cancel all pending operations.
            Specify <code>NumCacheNodes=3</code> to cancel all pending
            operations.</p> </li> </ul> <p>The Availability Zone placement of
            nodes pending creation cannot be modified. If you wish to cancel any
            nodes pending creation, add 0 nodes by setting
            <code>NumCacheNodes</code> to the number of current nodes.</p> <p>If
            <code>cross-az</code> is specified, existing Memcached nodes remain
            in their current Availability Zone. Only newly created nodes can be
            located in different Availability Zones. For guidance on how to move
            existing Memcached nodes to different Availability Zones, see the
            <b>Availability Zone Considerations</b> section of <a
            href="https://docs.aws.amazon.com/AmazonElastiCache/latest/mem-ug/CacheNodes.SupportedTypes.html">Cache
            Node Considerations for Memcached</a>.</p> <p> <b>Impact of new
            add/remove requests upon pending requests</b> </p> <ul> <li>
            <p>Scenario-1</p> <ul> <li> <p>Pending Action: Delete</p> </li> <li>
            <p>New Request: Delete</p> </li> <li> <p>Result: The new delete,
            pending or immediate, replaces the pending delete.</p> </li> </ul>
            </li> <li> <p>Scenario-2</p> <ul> <li> <p>Pending Action: Delete</p>
            </li> <li> <p>New Request: Create</p> </li> <li> <p>Result: The new
            create, pending or immediate, replaces the pending delete.</p> </li>
            </ul> </li> <li> <p>Scenario-3</p> <ul> <li> <p>Pending Action:
            Create</p> </li> <li> <p>New Request: Delete</p> </li> <li>
            <p>Result: The new delete, pending or immediate, replaces the
            pending create.</p> </li> </ul> </li> <li> <p>Scenario-4</p> <ul>
            <li> <p>Pending Action: Create</p> </li> <li> <p>New Request:
            Create</p> </li> <li> <p>Result: The new create is added to the
            pending create.</p> <important> <p> <b>Important:</b> If the new
            create request is <b>Apply Immediately - Yes</b>, all creates are
            performed immediately. If the new create request is <b>Apply
            Immediately - No</b>, all creates are pending.</p> </important>
            </li> </ul> </li> </ul>'
          schema:
            type: array
            items:
              type: string
        - name: CacheSecurityGroupNames
          in: query
          required: false
          description: '<p>A list of cache security group names to authorize on this
            cluster. This change is asynchronously applied as soon as
            possible.</p> <p>You can use this parameter only with clusters that
            are created outside of an Amazon Virtual Private Cloud (Amazon
            VPC).</p> <p>Constraints: Must contain no more than 255 alphanumeric
            characters. Must not be "Default".</p>'
          schema:
            type: array
            items:
              type: string
        - name: SecurityGroupIds
          in: query
          required: false
          description: <p>Specifies the VPC Security Groups associated with the
            cluster.</p> <p>This parameter can be used only with clusters that
            are created in an Amazon Virtual Private Cloud (Amazon VPC).</p>
          schema:
            type: array
            items:
              type: string
        - name: PreferredMaintenanceWindow
          in: query
          required: false
          description: "<p>Specifies the weekly time range during which maintenance on the
            cluster is performed. It is specified as a range in the format
            ddd:hh24:mi-ddd:hh24:mi (24H Clock UTC). The minimum maintenance
            window is a 60 minute period.</p> <p>Valid values for
            <code>ddd</code> are:</p> <ul> <li> <p> <code>sun</code> </p> </li>
            <li> <p> <code>mon</code> </p> </li> <li> <p> <code>tue</code> </p>
            </li> <li> <p> <code>wed</code> </p> </li> <li> <p> <code>thu</code>
            </p> </li> <li> <p> <code>fri</code> </p> </li> <li> <p>
            <code>sat</code> </p> </li> </ul> <p>Example:
            <code>sun:23:00-mon:01:30</code> </p>"
          schema:
            type: string
        - name: NotificationTopicArn
          in: query
          required: false
          description: <p>The Amazon Resource Name (ARN) of the Amazon SNS topic to which
            notifications are sent.</p> <note> <p>The Amazon SNS topic owner
            must be same as the cluster owner.</p> </note>
          schema:
            type: string
        - name: CacheParameterGroupName
          in: query
          required: false
          description: The name of the cache parameter group to apply to this cluster. This
            change is asynchronously applied as soon as possible for parameters
            when the <code>ApplyImmediately</code> parameter is specified as
            <code>true</code> for this request.
          schema:
            type: string
        - name: NotificationTopicStatus
          in: query
          required: false
          description: "<p>The status of the Amazon SNS notification topic. Notifications
            are sent only if the status is <code>active</code>.</p> <p>Valid
            values: <code>active</code> | <code>inactive</code> </p>"
          schema:
            type: string
        - name: ApplyImmediately
          in: query
          required: false
          description: "<p>If <code>true</code>, this parameter causes the modifications in
            this request and any pending modifications to be applied,
            asynchronously and as soon as possible, regardless of the
            <code>PreferredMaintenanceWindow</code> setting for the cluster.</p>
            <p>If <code>false</code>, changes to the cluster are applied on the
            next maintenance reboot, or the next failure reboot, whichever
            occurs first.</p> <important> <p>If you perform a
            <code>ModifyCacheCluster</code> before a pending modification is
            applied, the pending modification is replaced by the newer
            modification.</p> </important> <p>Valid values: <code>true</code> |
            <code>false</code> </p> <p>Default: <code>false</code> </p>"
          schema:
            type: boolean
        - name: EngineVersion
          in: query
          required: false
          description: <p>The upgraded version of the cache engine to be run on the cache
            nodes.</p> <p> <b>Important:</b> You can upgrade to a newer engine
            version (see <a
            href="https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/SelectEngine.html#VersionManagement">Selecting
            a Cache Engine and Version</a>), but you cannot downgrade to an
            earlier engine version. If you want to use an earlier engine
            version, you must delete the existing cluster and create it anew
            with the earlier engine version. </p>
          schema:
            type: string
        - name: AutoMinorVersionUpgrade
          in: query
          required: false
          description: This parameter is currently disabled.
          schema:
            type: boolean
        - name: SnapshotRetentionLimit
          in: query
          required: false
          description: <p>The number of days for which ElastiCache retains automatic
            cluster snapshots before deleting them. For example, if you set
            <code>SnapshotRetentionLimit</code> to 5, a snapshot that was taken
            today is retained for 5 days before being deleted.</p> <note> <p>If
            the value of <code>SnapshotRetentionLimit</code> is set to zero (0),
            backups are turned off.</p> </note>
          schema:
            type: integer
        - name: SnapshotWindow
          in: query
          required: false
          description: "The daily time range (in UTC) during which ElastiCache begins
            taking a daily snapshot of your cluster. "
          schema:
            type: string
        - name: CacheNodeType
          in: query
          required: false
          description: A valid cache node type that you want to scale this cluster up to.
          schema:
            type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - ModifyCacheCluster
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2015-02-02
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: ModifyCacheCluster
      operationId: POST ModifyCacheCluster
      description: Modifies the settings for a cluster. You can use this operation to
        change one or more cluster configuration parameters by specifying the
        parameters and the new values.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ModifyCacheClusterResult"
        "480":
          description: InvalidCacheClusterStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidCacheClusterStateFault"
        "481":
          description: InvalidCacheSecurityGroupStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidCacheSecurityGroupStateFault"
        "482":
          description: InsufficientCacheClusterCapacityFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InsufficientCacheClusterCapacityFault"
        "483":
          description: CacheClusterNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/CacheClusterNotFoundFault"
        "484":
          description: NodeQuotaForClusterExceededFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/NodeQuotaForClusterExceededFault"
        "485":
          description: NodeQuotaForCustomerExceededFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/NodeQuotaForCustomerExceededFault"
        "486":
          description: CacheSecurityGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/CacheSecurityGroupNotFoundFault"
        "487":
          description: CacheParameterGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/CacheParameterGroupNotFoundFault"
        "488":
          description: InvalidVPCNetworkStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidVPCNetworkStateFault"
        "489":
          description: InvalidParameterValueException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidParameterValueException"
        "490":
          description: InvalidParameterCombinationException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidParameterCombinationException"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - ModifyCacheCluster
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2015-02-02
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                CacheClusterId:
                  description: The cluster identifier. This value is stored as a lowercase
                    string.
                  type: string
                NumCacheNodes:
                  description: <p>The number of cache nodes that the cluster should have.
                    If the value for <code>NumCacheNodes</code> is greater than
                    the sum of the number of current cache nodes and the number
                    of cache nodes pending creation (which may be zero), more
                    nodes are added. If the value is less than the number of
                    existing cache nodes, nodes are removed. If the value is
                    equal to the number of current cache nodes, any pending add
                    or remove requests are canceled.</p> <p>If you are removing
                    cache nodes, you must use the
                    <code>CacheNodeIdsToRemove</code> parameter to provide the
                    IDs of the specific cache nodes to remove.</p> <p>For
                    clusters running Redis, this value must be 1. For clusters
                    running Memcached, this value must be between 1 and 20.</p>
                    <note> <p>Adding or removing Memcached cache nodes can be
                    applied immediately or as a pending operation (see
                    <code>ApplyImmediately</code>).</p> <p>A pending operation
                    to modify the number of cache nodes in a cluster during its
                    maintenance window, whether by adding or removing nodes in
                    accordance with the scale out architecture, is not queued.
                    The customer's latest request to add or remove nodes to the
                    cluster overrides any previous pending operations to modify
                    the number of cache nodes in the cluster. For example, a
                    request to remove 2 nodes would override a previous pending
                    operation to remove 3 nodes. Similarly, a request to add 2
                    nodes would override a previous pending operation to remove
                    3 nodes and vice versa. As Memcached cache nodes may now be
                    provisioned in different Availability Zones with flexible
                    cache node placement, a request to add nodes does not
                    automatically override a previous pending operation to add
                    nodes. The customer can modify the previous pending
                    operation to add more nodes or explicitly cancel the pending
                    request and retry the new request. To cancel pending
                    operations to modify the number of cache nodes in a cluster,
                    use the <code>ModifyCacheCluster</code> request and set
                    <code>NumCacheNodes</code> equal to the number of cache
                    nodes currently in the cluster.</p> </note>
                  type: integer
                CacheNodeIdsToRemove:
                  description: "<p>A list of cache node IDs to be removed. A node ID is a
                    numeric identifier (0001, 0002, etc.). This parameter is
                    only valid when <code>NumCacheNodes</code> is less than the
                    existing number of cache nodes. The number of cache node IDs
                    supplied in this parameter must match the difference between
                    the existing number of cache nodes in the cluster or pending
                    cache nodes, whichever is greater, and the value of
                    <code>NumCacheNodes</code> in the request.</p> <p>For
                    example: If you have 3 active cache nodes, 7 pending cache
                    nodes, and the number of cache nodes in this
                    <code>ModifyCacheCluster</code> call is 5, you must list 2
                    (7 - 5) cache node IDs to remove.</p>"
                  type: array
                  items:
                    type: string
                AZMode:
                  description: '<p>Specifies whether the new nodes in this Memcached
                    cluster are all created in a single Availability Zone or
                    created across multiple Availability Zones.</p> <p>Valid
                    values: <code>single-az</code> | <code>cross-az</code>.</p>
                    <p>This option is only supported for Memcached clusters.</p>
                    <note> <p>You cannot specify <code>single-az</code> if the
                    Memcached cluster already has cache nodes in different
                    Availability Zones. If <code>cross-az</code> is specified,
                    existing Memcached nodes remain in their current
                    Availability Zone.</p> <p>Only newly created nodes are
                    located in different Availability Zones. For instructions on
                    how to move existing Memcached nodes to different
                    Availability Zones, see the <b>Availability Zone
                    Considerations</b> section of <a
                    href="https://docs.aws.amazon.com/AmazonElastiCache/latest/mem-ug/CacheNodes.SupportedTypes.html">Cache
                    Node Considerations for Memcached</a>.</p> </note>'
                  type: string
                  enum:
                    - single-az
                    - cross-az
                NewAvailabilityZones:
                  description: '<p>The list of Availability Zones where the new Memcached
                    cache nodes are created.</p> <p>This parameter is only valid
                    when <code>NumCacheNodes</code> in the request is greater
                    than the sum of the number of active cache nodes and the
                    number of cache nodes pending creation (which may be zero).
                    The number of Availability Zones supplied in this list must
                    match the cache nodes being added in this request.</p>
                    <p>This option is only supported on Memcached clusters.</p>
                    <p>Scenarios:</p> <ul> <li> <p> <b>Scenario 1:</b> You have
                    3 active nodes and wish to add 2 nodes. Specify
                    <code>NumCacheNodes=5</code> (3 + 2) and optionally specify
                    two Availability Zones for the two new nodes.</p> </li> <li>
                    <p> <b>Scenario 2:</b> You have 3 active nodes and 2 nodes
                    pending creation (from the scenario 1 call) and want to add
                    1 more node. Specify <code>NumCacheNodes=6</code> ((3 + 2) +
                    1) and optionally specify an Availability Zone for the new
                    node.</p> </li> <li> <p> <b>Scenario 3:</b> You want to
                    cancel all pending operations. Specify
                    <code>NumCacheNodes=3</code> to cancel all pending
                    operations.</p> </li> </ul> <p>The Availability Zone
                    placement of nodes pending creation cannot be modified. If
                    you wish to cancel any nodes pending creation, add 0 nodes
                    by setting <code>NumCacheNodes</code> to the number of
                    current nodes.</p> <p>If <code>cross-az</code> is specified,
                    existing Memcached nodes remain in their current
                    Availability Zone. Only newly created nodes can be located
                    in different Availability Zones. For guidance on how to move
                    existing Memcached nodes to different Availability Zones,
                    see the <b>Availability Zone Considerations</b> section of
                    <a
                    href="https://docs.aws.amazon.com/AmazonElastiCache/latest/mem-ug/CacheNodes.SupportedTypes.html">Cache
                    Node Considerations for Memcached</a>.</p> <p> <b>Impact of
                    new add/remove requests upon pending requests</b> </p> <ul>
                    <li> <p>Scenario-1</p> <ul> <li> <p>Pending Action:
                    Delete</p> </li> <li> <p>New Request: Delete</p> </li> <li>
                    <p>Result: The new delete, pending or immediate, replaces
                    the pending delete.</p> </li> </ul> </li> <li>
                    <p>Scenario-2</p> <ul> <li> <p>Pending Action: Delete</p>
                    </li> <li> <p>New Request: Create</p> </li> <li> <p>Result:
                    The new create, pending or immediate, replaces the pending
                    delete.</p> </li> </ul> </li> <li> <p>Scenario-3</p> <ul>
                    <li> <p>Pending Action: Create</p> </li> <li> <p>New
                    Request: Delete</p> </li> <li> <p>Result: The new delete,
                    pending or immediate, replaces the pending create.</p> </li>
                    </ul> </li> <li> <p>Scenario-4</p> <ul> <li> <p>Pending
                    Action: Create</p> </li> <li> <p>New Request: Create</p>
                    </li> <li> <p>Result: The new create is added to the pending
                    create.</p> <important> <p> <b>Important:</b> If the new
                    create request is <b>Apply Immediately - Yes</b>, all
                    creates are performed immediately. If the new create request
                    is <b>Apply Immediately - No</b>, all creates are
                    pending.</p> </important> </li> </ul> </li> </ul>'
                  type: array
                  items:
                    type: string
                CacheSecurityGroupNames:
                  description: '<p>A list of cache security group names to authorize on
                    this cluster. This change is asynchronously applied as soon
                    as possible.</p> <p>You can use this parameter only with
                    clusters that are created outside of an Amazon Virtual
                    Private Cloud (Amazon VPC).</p> <p>Constraints: Must contain
                    no more than 255 alphanumeric characters. Must not be
                    "Default".</p>'
                  type: array
                  items:
                    type: string
                SecurityGroupIds:
                  description: <p>Specifies the VPC Security Groups associated with the
                    cluster.</p> <p>This parameter can be used only with
                    clusters that are created in an Amazon Virtual Private Cloud
                    (Amazon VPC).</p>
                  type: array
                  items:
                    type: string
                PreferredMaintenanceWindow:
                  description: "<p>Specifies the weekly time range during which maintenance
                    on the cluster is performed. It is specified as a range in
                    the format ddd:hh24:mi-ddd:hh24:mi (24H Clock UTC). The
                    minimum maintenance window is a 60 minute period.</p>
                    <p>Valid values for <code>ddd</code> are:</p> <ul> <li> <p>
                    <code>sun</code> </p> </li> <li> <p> <code>mon</code> </p>
                    </li> <li> <p> <code>tue</code> </p> </li> <li> <p>
                    <code>wed</code> </p> </li> <li> <p> <code>thu</code> </p>
                    </li> <li> <p> <code>fri</code> </p> </li> <li> <p>
                    <code>sat</code> </p> </li> </ul> <p>Example:
                    <code>sun:23:00-mon:01:30</code> </p>"
                  type: string
                NotificationTopicArn:
                  description: <p>The Amazon Resource Name (ARN) of the Amazon SNS topic to
                    which notifications are sent.</p> <note> <p>The Amazon SNS
                    topic owner must be same as the cluster owner.</p> </note>
                  type: string
                CacheParameterGroupName:
                  description: The name of the cache parameter group to apply to this
                    cluster. This change is asynchronously applied as soon as
                    possible for parameters when the
                    <code>ApplyImmediately</code> parameter is specified as
                    <code>true</code> for this request.
                  type: string
                NotificationTopicStatus:
                  description: "<p>The status of the Amazon SNS notification topic.
                    Notifications are sent only if the status is
                    <code>active</code>.</p> <p>Valid values:
                    <code>active</code> | <code>inactive</code> </p>"
                  type: string
                ApplyImmediately:
                  description: "<p>If <code>true</code>, this parameter causes the
                    modifications in this request and any pending modifications
                    to be applied, asynchronously and as soon as possible,
                    regardless of the <code>PreferredMaintenanceWindow</code>
                    setting for the cluster.</p> <p>If <code>false</code>,
                    changes to the cluster are applied on the next maintenance
                    reboot, or the next failure reboot, whichever occurs
                    first.</p> <important> <p>If you perform a
                    <code>ModifyCacheCluster</code> before a pending
                    modification is applied, the pending modification is
                    replaced by the newer modification.</p> </important>
                    <p>Valid values: <code>true</code> | <code>false</code> </p>
                    <p>Default: <code>false</code> </p>"
                  type: boolean
                EngineVersion:
                  description: <p>The upgraded version of the cache engine to be run on the
                    cache nodes.</p> <p> <b>Important:</b> You can upgrade to a
                    newer engine version (see <a
                    href="https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/SelectEngine.html#VersionManagement">Selecting
                    a Cache Engine and Version</a>), but you cannot downgrade to
                    an earlier engine version. If you want to use an earlier
                    engine version, you must delete the existing cluster and
                    create it anew with the earlier engine version. </p>
                  type: string
                AutoMinorVersionUpgrade:
                  description: This parameter is currently disabled.
                  type: boolean
                SnapshotRetentionLimit:
                  description: <p>The number of days for which ElastiCache retains
                    automatic cluster snapshots before deleting them. For
                    example, if you set <code>SnapshotRetentionLimit</code> to
                    5, a snapshot that was taken today is retained for 5 days
                    before being deleted.</p> <note> <p>If the value of
                    <code>SnapshotRetentionLimit</code> is set to zero (0),
                    backups are turned off.</p> </note>
                  type: integer
                SnapshotWindow:
                  description: "The daily time range (in UTC) during which ElastiCache
                    begins taking a daily snapshot of your cluster. "
                  type: string
                CacheNodeType:
                  description: A valid cache node type that you want to scale this cluster
                    up to.
                  type: string
              required:
                - CacheClusterId
  /#Action=ModifyCacheParameterGroup:
    get:
      x-aws-operation-name: ModifyCacheParameterGroup
      operationId: GET ModifyCacheParameterGroup
      description: Modifies the parameters of a cache parameter group. You can modify up to
        20 parameters in a single request by submitting a list parameter name
        and value pairs.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/CacheParameterGroupNameMessage"
        "480":
          description: CacheParameterGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/CacheParameterGroupNotFoundFault"
        "481":
          description: InvalidCacheParameterGroupStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidCacheParameterGroupStateFault"
        "482":
          description: InvalidParameterValueException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidParameterValueException"
        "483":
          description: InvalidParameterCombinationException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidParameterCombinationException"
      parameters:
        - name: CacheParameterGroupName
          in: query
          required: true
          description: The name of the cache parameter group to modify.
          schema:
            type: string
        - name: ParameterNameValues
          in: query
          required: true
          description: An array of parameter names and values for the parameter update. You
            must supply at least one parameter name and value; subsequent
            arguments are optional. A maximum of 20 parameters may be modified
            per request.
          schema:
            type: array
            items:
              type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - ModifyCacheParameterGroup
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2015-02-02
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: ModifyCacheParameterGroup
      operationId: POST ModifyCacheParameterGroup
      description: Modifies the parameters of a cache parameter group. You can modify up to
        20 parameters in a single request by submitting a list parameter name
        and value pairs.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/CacheParameterGroupNameMessage"
        "480":
          description: CacheParameterGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/CacheParameterGroupNotFoundFault"
        "481":
          description: InvalidCacheParameterGroupStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidCacheParameterGroupStateFault"
        "482":
          description: InvalidParameterValueException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidParameterValueException"
        "483":
          description: InvalidParameterCombinationException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidParameterCombinationException"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - ModifyCacheParameterGroup
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2015-02-02
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                CacheParameterGroupName:
                  description: The name of the cache parameter group to modify.
                  type: string
                ParameterNameValues:
                  description: An array of parameter names and values for the parameter
                    update. You must supply at least one parameter name and
                    value; subsequent arguments are optional. A maximum of 20
                    parameters may be modified per request.
                  type: array
                  items:
                    type: string
              required:
                - CacheParameterGroupName
                - ParameterNameValues
  /#Action=ModifyCacheSubnetGroup:
    get:
      x-aws-operation-name: ModifyCacheSubnetGroup
      operationId: GET ModifyCacheSubnetGroup
      description: Modifies an existing cache subnet group.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ModifyCacheSubnetGroupResult"
        "480":
          description: CacheSubnetGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/CacheSubnetGroupNotFoundFault"
        "481":
          description: CacheSubnetQuotaExceededFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/CacheSubnetQuotaExceededFault"
        "482":
          description: SubnetInUse
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/SubnetInUse"
        "483":
          description: InvalidSubnet
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidSubnet"
      parameters:
        - name: CacheSubnetGroupName
          in: query
          required: true
          description: "<p>The name for the cache subnet group. This value is stored as a
            lowercase string.</p> <p>Constraints: Must contain no more than 255
            alphanumeric characters or hyphens.</p> <p>Example:
            <code>mysubnetgroup</code> </p>"
          schema:
            type: string
        - name: CacheSubnetGroupDescription
          in: query
          required: false
          description: A description of the cache subnet group.
          schema:
            type: string
        - name: SubnetIds
          in: query
          required: false
          description: The EC2 subnet IDs for the cache subnet group.
          schema:
            type: array
            items:
              type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - ModifyCacheSubnetGroup
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2015-02-02
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: ModifyCacheSubnetGroup
      operationId: POST ModifyCacheSubnetGroup
      description: Modifies an existing cache subnet group.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ModifyCacheSubnetGroupResult"
        "480":
          description: CacheSubnetGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/CacheSubnetGroupNotFoundFault"
        "481":
          description: CacheSubnetQuotaExceededFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/CacheSubnetQuotaExceededFault"
        "482":
          description: SubnetInUse
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/SubnetInUse"
        "483":
          description: InvalidSubnet
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidSubnet"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - ModifyCacheSubnetGroup
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2015-02-02
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                CacheSubnetGroupName:
                  description: "<p>The name for the cache subnet group. This value is
                    stored as a lowercase string.</p> <p>Constraints: Must
                    contain no more than 255 alphanumeric characters or
                    hyphens.</p> <p>Example: <code>mysubnetgroup</code> </p>"
                  type: string
                CacheSubnetGroupDescription:
                  description: A description of the cache subnet group.
                  type: string
                SubnetIds:
                  description: The EC2 subnet IDs for the cache subnet group.
                  type: array
                  items:
                    type: string
              required:
                - CacheSubnetGroupName
  /#Action=ModifyReplicationGroup:
    get:
      x-aws-operation-name: ModifyReplicationGroup
      operationId: GET ModifyReplicationGroup
      description: <p>Modifies the settings for a replication group.</p> <p>For Redis
        (cluster mode enabled) clusters, this operation cannot be used to change
        a cluster's node type or engine version. For more information, see:</p>
        <ul> <li> <p> <a
        href="https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/scaling-redis-cluster-mode-enabled.html">Scaling
        for Amazon ElastiCache for Redis (cluster mode enabled)</a> in the
        ElastiCache User Guide</p> </li> <li> <p> <a
        href="https://docs.aws.amazon.com/AmazonElastiCache/latest/APIReference/API_ModifyReplicationGroupShardConfiguration.html">ModifyReplicationGroupShardConfiguration</a>
        in the ElastiCache API Reference</p> </li> </ul> <note> <p>This
        operation is valid for Redis only.</p> </note>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ModifyReplicationGroupResult"
        "480":
          description: ReplicationGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ReplicationGroupNotFoundFault"
        "481":
          description: InvalidReplicationGroupStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidReplicationGroupStateFault"
        "482":
          description: InvalidCacheClusterStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidCacheClusterStateFault"
        "483":
          description: InvalidCacheSecurityGroupStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidCacheSecurityGroupStateFault"
        "484":
          description: InsufficientCacheClusterCapacityFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InsufficientCacheClusterCapacityFault"
        "485":
          description: CacheClusterNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/CacheClusterNotFoundFault"
        "486":
          description: NodeQuotaForClusterExceededFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/NodeQuotaForClusterExceededFault"
        "487":
          description: NodeQuotaForCustomerExceededFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/NodeQuotaForCustomerExceededFault"
        "488":
          description: CacheSecurityGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/CacheSecurityGroupNotFoundFault"
        "489":
          description: CacheParameterGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/CacheParameterGroupNotFoundFault"
        "490":
          description: InvalidVPCNetworkStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidVPCNetworkStateFault"
        "491":
          description: InvalidKMSKeyFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidKMSKeyFault"
        "492":
          description: InvalidParameterValueException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidParameterValueException"
        "493":
          description: InvalidParameterCombinationException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidParameterCombinationException"
      parameters:
        - name: ReplicationGroupId
          in: query
          required: true
          description: The identifier of the replication group to modify.
          schema:
            type: string
        - name: ReplicationGroupDescription
          in: query
          required: false
          description: A description for the replication group. Maximum length is 255
            characters.
          schema:
            type: string
        - name: PrimaryClusterId
          in: query
          required: false
          description: For replication groups with a single primary, if this parameter is
            specified, ElastiCache promotes the specified cluster in the
            specified replication group to the primary role. The nodes of all
            other clusters in the replication group are read replicas.
          schema:
            type: string
        - name: SnapshottingClusterId
          in: query
          required: false
          description: The cluster ID that is used as the daily snapshot source for the
            replication group. This parameter cannot be set for Redis (cluster
            mode enabled) replication groups.
          schema:
            type: string
        - name: AutomaticFailoverEnabled
          in: query
          required: false
          description: "<p>Determines whether a read replica is automatically promoted to
            read/write primary if the existing primary encounters a failure.</p>
            <p>Valid values: <code>true</code> | <code>false</code> </p>
            <p>Amazon ElastiCache for Redis does not support Multi-AZ with
            automatic failover on:</p> <ul> <li> <p>Redis versions earlier than
            2.8.6.</p> </li> <li> <p>Redis (cluster mode disabled): T1 node
            types.</p> </li> <li> <p>Redis (cluster mode enabled): T1 node
            types.</p> </li> </ul>"
          schema:
            type: boolean
        - name: CacheSecurityGroupNames
          in: query
          required: false
          description: "<p>A list of cache security group names to authorize for the
            clusters in this replication group. This change is asynchronously
            applied as soon as possible.</p> <p>This parameter can be used only
            with replication group containing clusters running outside of an
            Amazon Virtual Private Cloud (Amazon VPC).</p> <p>Constraints: Must
            contain no more than 255 alphanumeric characters. Must not be
            <code>Default</code>.</p>"
          schema:
            type: array
            items:
              type: string
        - name: SecurityGroupIds
          in: query
          required: false
          description: <p>Specifies the VPC Security Groups associated with the clusters in
            the replication group.</p> <p>This parameter can be used only with
            replication group containing clusters running in an Amazon Virtual
            Private Cloud (Amazon VPC).</p>
          schema:
            type: array
            items:
              type: string
        - name: PreferredMaintenanceWindow
          in: query
          required: false
          description: "<p>Specifies the weekly time range during which maintenance on the
            cluster is performed. It is specified as a range in the format
            ddd:hh24:mi-ddd:hh24:mi (24H Clock UTC). The minimum maintenance
            window is a 60 minute period.</p> <p>Valid values for
            <code>ddd</code> are:</p> <ul> <li> <p> <code>sun</code> </p> </li>
            <li> <p> <code>mon</code> </p> </li> <li> <p> <code>tue</code> </p>
            </li> <li> <p> <code>wed</code> </p> </li> <li> <p> <code>thu</code>
            </p> </li> <li> <p> <code>fri</code> </p> </li> <li> <p>
            <code>sat</code> </p> </li> </ul> <p>Example:
            <code>sun:23:00-mon:01:30</code> </p>"
          schema:
            type: string
        - name: NotificationTopicArn
          in: query
          required: false
          description: <p>The Amazon Resource Name (ARN) of the Amazon SNS topic to which
            notifications are sent.</p> <note> <p>The Amazon SNS topic owner
            must be same as the replication group owner. </p> </note>
          schema:
            type: string
        - name: CacheParameterGroupName
          in: query
          required: false
          description: The name of the cache parameter group to apply to all of the
            clusters in this replication group. This change is asynchronously
            applied as soon as possible for parameters when the
            <code>ApplyImmediately</code> parameter is specified as
            <code>true</code> for this request.
          schema:
            type: string
        - name: NotificationTopicStatus
          in: query
          required: false
          description: "<p>The status of the Amazon SNS notification topic for the
            replication group. Notifications are sent only if the status is
            <code>active</code>.</p> <p>Valid values: <code>active</code> |
            <code>inactive</code> </p>"
          schema:
            type: string
        - name: ApplyImmediately
          in: query
          required: false
          description: "<p>If <code>true</code>, this parameter causes the modifications in
            this request and any pending modifications to be applied,
            asynchronously and as soon as possible, regardless of the
            <code>PreferredMaintenanceWindow</code> setting for the replication
            group.</p> <p>If <code>false</code>, changes to the nodes in the
            replication group are applied on the next maintenance reboot, or the
            next failure reboot, whichever occurs first.</p> <p>Valid values:
            <code>true</code> | <code>false</code> </p> <p>Default:
            <code>false</code> </p>"
          schema:
            type: boolean
        - name: EngineVersion
          in: query
          required: false
          description: <p>The upgraded version of the cache engine to be run on the
            clusters in the replication group.</p> <p> <b>Important:</b> You can
            upgrade to a newer engine version (see <a
            href="https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/SelectEngine.html#VersionManagement">Selecting
            a Cache Engine and Version</a>), but you cannot downgrade to an
            earlier engine version. If you want to use an earlier engine
            version, you must delete the existing replication group and create
            it anew with the earlier engine version. </p>
          schema:
            type: string
        - name: AutoMinorVersionUpgrade
          in: query
          required: false
          description: This parameter is currently disabled.
          schema:
            type: boolean
        - name: SnapshotRetentionLimit
          in: query
          required: false
          description: <p>The number of days for which ElastiCache retains automatic node
            group (shard) snapshots before deleting them. For example, if you
            set <code>SnapshotRetentionLimit</code> to 5, a snapshot that was
            taken today is retained for 5 days before being deleted.</p> <p>
            <b>Important</b> If the value of SnapshotRetentionLimit is set to
            zero (0), backups are turned off.</p>
          schema:
            type: integer
        - name: SnapshotWindow
          in: query
          required: false
          description: "<p>The daily time range (in UTC) during which ElastiCache begins
            taking a daily snapshot of the node group (shard) specified by
            <code>SnapshottingClusterId</code>.</p> <p>Example:
            <code>05:00-09:00</code> </p> <p>If you do not specify this
            parameter, ElastiCache automatically chooses an appropriate time
            range.</p>"
          schema:
            type: string
        - name: CacheNodeType
          in: query
          required: false
          description: A valid cache node type that you want to scale this replication
            group to.
          schema:
            type: string
        - name: NodeGroupId
          in: query
          required: false
          description: Deprecated. This parameter is not used.
          schema:
            type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - ModifyReplicationGroup
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2015-02-02
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: ModifyReplicationGroup
      operationId: POST ModifyReplicationGroup
      description: <p>Modifies the settings for a replication group.</p> <p>For Redis
        (cluster mode enabled) clusters, this operation cannot be used to change
        a cluster's node type or engine version. For more information, see:</p>
        <ul> <li> <p> <a
        href="https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/scaling-redis-cluster-mode-enabled.html">Scaling
        for Amazon ElastiCache for Redis (cluster mode enabled)</a> in the
        ElastiCache User Guide</p> </li> <li> <p> <a
        href="https://docs.aws.amazon.com/AmazonElastiCache/latest/APIReference/API_ModifyReplicationGroupShardConfiguration.html">ModifyReplicationGroupShardConfiguration</a>
        in the ElastiCache API Reference</p> </li> </ul> <note> <p>This
        operation is valid for Redis only.</p> </note>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ModifyReplicationGroupResult"
        "480":
          description: ReplicationGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ReplicationGroupNotFoundFault"
        "481":
          description: InvalidReplicationGroupStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidReplicationGroupStateFault"
        "482":
          description: InvalidCacheClusterStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidCacheClusterStateFault"
        "483":
          description: InvalidCacheSecurityGroupStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidCacheSecurityGroupStateFault"
        "484":
          description: InsufficientCacheClusterCapacityFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InsufficientCacheClusterCapacityFault"
        "485":
          description: CacheClusterNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/CacheClusterNotFoundFault"
        "486":
          description: NodeQuotaForClusterExceededFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/NodeQuotaForClusterExceededFault"
        "487":
          description: NodeQuotaForCustomerExceededFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/NodeQuotaForCustomerExceededFault"
        "488":
          description: CacheSecurityGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/CacheSecurityGroupNotFoundFault"
        "489":
          description: CacheParameterGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/CacheParameterGroupNotFoundFault"
        "490":
          description: InvalidVPCNetworkStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidVPCNetworkStateFault"
        "491":
          description: InvalidKMSKeyFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidKMSKeyFault"
        "492":
          description: InvalidParameterValueException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidParameterValueException"
        "493":
          description: InvalidParameterCombinationException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidParameterCombinationException"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - ModifyReplicationGroup
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2015-02-02
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                ReplicationGroupId:
                  description: The identifier of the replication group to modify.
                  type: string
                ReplicationGroupDescription:
                  description: A description for the replication group. Maximum length is
                    255 characters.
                  type: string
                PrimaryClusterId:
                  description: For replication groups with a single primary, if this
                    parameter is specified, ElastiCache promotes the specified
                    cluster in the specified replication group to the primary
                    role. The nodes of all other clusters in the replication
                    group are read replicas.
                  type: string
                SnapshottingClusterId:
                  description: The cluster ID that is used as the daily snapshot source for
                    the replication group. This parameter cannot be set for
                    Redis (cluster mode enabled) replication groups.
                  type: string
                AutomaticFailoverEnabled:
                  description: "<p>Determines whether a read replica is automatically
                    promoted to read/write primary if the existing primary
                    encounters a failure.</p> <p>Valid values: <code>true</code>
                    | <code>false</code> </p> <p>Amazon ElastiCache for Redis
                    does not support Multi-AZ with automatic failover on:</p>
                    <ul> <li> <p>Redis versions earlier than 2.8.6.</p> </li>
                    <li> <p>Redis (cluster mode disabled): T1 node types.</p>
                    </li> <li> <p>Redis (cluster mode enabled): T1 node
                    types.</p> </li> </ul>"
                  type: boolean
                CacheSecurityGroupNames:
                  description: "<p>A list of cache security group names to authorize for
                    the clusters in this replication group. This change is
                    asynchronously applied as soon as possible.</p> <p>This
                    parameter can be used only with replication group containing
                    clusters running outside of an Amazon Virtual Private Cloud
                    (Amazon VPC).</p> <p>Constraints: Must contain no more than
                    255 alphanumeric characters. Must not be
                    <code>Default</code>.</p>"
                  type: array
                  items:
                    type: string
                SecurityGroupIds:
                  description: <p>Specifies the VPC Security Groups associated with the
                    clusters in the replication group.</p> <p>This parameter can
                    be used only with replication group containing clusters
                    running in an Amazon Virtual Private Cloud (Amazon VPC).</p>
                  type: array
                  items:
                    type: string
                PreferredMaintenanceWindow:
                  description: "<p>Specifies the weekly time range during which maintenance
                    on the cluster is performed. It is specified as a range in
                    the format ddd:hh24:mi-ddd:hh24:mi (24H Clock UTC). The
                    minimum maintenance window is a 60 minute period.</p>
                    <p>Valid values for <code>ddd</code> are:</p> <ul> <li> <p>
                    <code>sun</code> </p> </li> <li> <p> <code>mon</code> </p>
                    </li> <li> <p> <code>tue</code> </p> </li> <li> <p>
                    <code>wed</code> </p> </li> <li> <p> <code>thu</code> </p>
                    </li> <li> <p> <code>fri</code> </p> </li> <li> <p>
                    <code>sat</code> </p> </li> </ul> <p>Example:
                    <code>sun:23:00-mon:01:30</code> </p>"
                  type: string
                NotificationTopicArn:
                  description: <p>The Amazon Resource Name (ARN) of the Amazon SNS topic to
                    which notifications are sent.</p> <note> <p>The Amazon SNS
                    topic owner must be same as the replication group owner.
                    </p> </note>
                  type: string
                CacheParameterGroupName:
                  description: The name of the cache parameter group to apply to all of the
                    clusters in this replication group. This change is
                    asynchronously applied as soon as possible for parameters
                    when the <code>ApplyImmediately</code> parameter is
                    specified as <code>true</code> for this request.
                  type: string
                NotificationTopicStatus:
                  description: "<p>The status of the Amazon SNS notification topic for the
                    replication group. Notifications are sent only if the status
                    is <code>active</code>.</p> <p>Valid values:
                    <code>active</code> | <code>inactive</code> </p>"
                  type: string
                ApplyImmediately:
                  description: "<p>If <code>true</code>, this parameter causes the
                    modifications in this request and any pending modifications
                    to be applied, asynchronously and as soon as possible,
                    regardless of the <code>PreferredMaintenanceWindow</code>
                    setting for the replication group.</p> <p>If
                    <code>false</code>, changes to the nodes in the replication
                    group are applied on the next maintenance reboot, or the
                    next failure reboot, whichever occurs first.</p> <p>Valid
                    values: <code>true</code> | <code>false</code> </p>
                    <p>Default: <code>false</code> </p>"
                  type: boolean
                EngineVersion:
                  description: <p>The upgraded version of the cache engine to be run on the
                    clusters in the replication group.</p> <p> <b>Important:</b>
                    You can upgrade to a newer engine version (see <a
                    href="https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/SelectEngine.html#VersionManagement">Selecting
                    a Cache Engine and Version</a>), but you cannot downgrade to
                    an earlier engine version. If you want to use an earlier
                    engine version, you must delete the existing replication
                    group and create it anew with the earlier engine version.
                    </p>
                  type: string
                AutoMinorVersionUpgrade:
                  description: This parameter is currently disabled.
                  type: boolean
                SnapshotRetentionLimit:
                  description: <p>The number of days for which ElastiCache retains
                    automatic node group (shard) snapshots before deleting them.
                    For example, if you set <code>SnapshotRetentionLimit</code>
                    to 5, a snapshot that was taken today is retained for 5 days
                    before being deleted.</p> <p> <b>Important</b> If the value
                    of SnapshotRetentionLimit is set to zero (0), backups are
                    turned off.</p>
                  type: integer
                SnapshotWindow:
                  description: "<p>The daily time range (in UTC) during which ElastiCache
                    begins taking a daily snapshot of the node group (shard)
                    specified by <code>SnapshottingClusterId</code>.</p>
                    <p>Example: <code>05:00-09:00</code> </p> <p>If you do not
                    specify this parameter, ElastiCache automatically chooses an
                    appropriate time range.</p>"
                  type: string
                CacheNodeType:
                  description: A valid cache node type that you want to scale this
                    replication group to.
                  type: string
                NodeGroupId:
                  description: Deprecated. This parameter is not used.
                  type: string
              required:
                - ReplicationGroupId
  /#Action=ModifyReplicationGroupShardConfiguration:
    get:
      x-aws-operation-name: ModifyReplicationGroupShardConfiguration
      operationId: GET ModifyReplicationGroupShardConfiguration
      description: Modifies a replication group's shards (node groups) by allowing you to
        add shards, remove shards, or rebalance the keyspaces among exisiting
        shards.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ModifyReplicationGroupShardConfiguratio\
                  nResult"
        "480":
          description: ReplicationGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ReplicationGroupNotFoundFault"
        "481":
          description: InvalidReplicationGroupStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidReplicationGroupStateFault"
        "482":
          description: InvalidCacheClusterStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidCacheClusterStateFault"
        "483":
          description: InvalidVPCNetworkStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidVPCNetworkStateFault"
        "484":
          description: InsufficientCacheClusterCapacityFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InsufficientCacheClusterCapacityFault"
        "485":
          description: NodeGroupsPerReplicationGroupQuotaExceededFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/NodeGroupsPerReplicationGroupQuotaExcee\
                  dedFault"
        "486":
          description: NodeQuotaForCustomerExceededFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/NodeQuotaForCustomerExceededFault"
        "487":
          description: InvalidKMSKeyFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidKMSKeyFault"
        "488":
          description: InvalidParameterValueException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidParameterValueException"
        "489":
          description: InvalidParameterCombinationException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidParameterCombinationException"
      parameters:
        - name: ReplicationGroupId
          in: query
          required: true
          description: The name of the Redis (cluster mode enabled) cluster (replication
            group) on which the shards are to be configured.
          schema:
            type: string
        - name: NodeGroupCount
          in: query
          required: true
          description: The number of node groups (shards) that results from the
            modification of the shard configuration.
          schema:
            type: integer
        - name: ApplyImmediately
          in: query
          required: true
          description: "<p>Indicates that the shard reconfiguration process begins
            immediately. At present, the only permitted value for this parameter
            is <code>true</code>.</p> <p>Value: true</p>"
          schema:
            type: boolean
        - name: ReshardingConfiguration
          in: query
          required: false
          description: <p>Specifies the preferred availability zones for each node group in
            the cluster. If the value of <code>NodeGroupCount</code> is greater
            than the current number of node groups (shards), you can use this
            parameter to specify the preferred availability zones of the
            cluster's shards. If you omit this parameter ElastiCache selects
            availability zones for you.</p> <p>You can specify this parameter
            only if the value of <code>NodeGroupCount</code> is greater than the
            current number of node groups (shards).</p>
          schema:
            type: array
            items:
              type: string
        - name: NodeGroupsToRemove
          in: query
          required: false
          description: <p>If the value of <code>NodeGroupCount</code> is less than the
            current number of node groups (shards), then either
            <code>NodeGroupsToRemove</code> or <code>NodeGroupsToRetain</code>
            is required. <code>NodeGroupsToRemove</code> is a list of
            <code>NodeGroupId</code>s to remove from the cluster.</p>
            <p>ElastiCache for Redis will attempt to remove all node groups
            listed by <code>NodeGroupsToRemove</code> from the cluster.</p>
          schema:
            type: array
            items:
              type: string
        - name: NodeGroupsToRetain
          in: query
          required: false
          description: <p>If the value of <code>NodeGroupCount</code> is less than the
            current number of node groups (shards), then either
            <code>NodeGroupsToRemove</code> or <code>NodeGroupsToRetain</code>
            is required. <code>NodeGroupsToRetain</code> is a list of
            <code>NodeGroupId</code>s to retain in the cluster.</p>
            <p>ElastiCache for Redis will attempt to remove all node groups
            except those listed by <code>NodeGroupsToRetain</code> from the
            cluster.</p>
          schema:
            type: array
            items:
              type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - ModifyReplicationGroupShardConfiguration
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2015-02-02
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: ModifyReplicationGroupShardConfiguration
      operationId: POST ModifyReplicationGroupShardConfiguration
      description: Modifies a replication group's shards (node groups) by allowing you to
        add shards, remove shards, or rebalance the keyspaces among exisiting
        shards.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ModifyReplicationGroupShardConfiguratio\
                  nResult"
        "480":
          description: ReplicationGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ReplicationGroupNotFoundFault"
        "481":
          description: InvalidReplicationGroupStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidReplicationGroupStateFault"
        "482":
          description: InvalidCacheClusterStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidCacheClusterStateFault"
        "483":
          description: InvalidVPCNetworkStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidVPCNetworkStateFault"
        "484":
          description: InsufficientCacheClusterCapacityFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InsufficientCacheClusterCapacityFault"
        "485":
          description: NodeGroupsPerReplicationGroupQuotaExceededFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/NodeGroupsPerReplicationGroupQuotaExcee\
                  dedFault"
        "486":
          description: NodeQuotaForCustomerExceededFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/NodeQuotaForCustomerExceededFault"
        "487":
          description: InvalidKMSKeyFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidKMSKeyFault"
        "488":
          description: InvalidParameterValueException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidParameterValueException"
        "489":
          description: InvalidParameterCombinationException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidParameterCombinationException"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - ModifyReplicationGroupShardConfiguration
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2015-02-02
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                ReplicationGroupId:
                  description: The name of the Redis (cluster mode enabled) cluster
                    (replication group) on which the shards are to be
                    configured.
                  type: string
                NodeGroupCount:
                  description: The number of node groups (shards) that results from the
                    modification of the shard configuration.
                  type: integer
                ApplyImmediately:
                  description: "<p>Indicates that the shard reconfiguration process begins
                    immediately. At present, the only permitted value for this
                    parameter is <code>true</code>.</p> <p>Value: true</p>"
                  type: boolean
                ReshardingConfiguration:
                  description: <p>Specifies the preferred availability zones for each node
                    group in the cluster. If the value of
                    <code>NodeGroupCount</code> is greater than the current
                    number of node groups (shards), you can use this parameter
                    to specify the preferred availability zones of the cluster's
                    shards. If you omit this parameter ElastiCache selects
                    availability zones for you.</p> <p>You can specify this
                    parameter only if the value of <code>NodeGroupCount</code>
                    is greater than the current number of node groups
                    (shards).</p>
                  type: array
                  items:
                    type: string
                NodeGroupsToRemove:
                  description: <p>If the value of <code>NodeGroupCount</code> is less than
                    the current number of node groups (shards), then either
                    <code>NodeGroupsToRemove</code> or
                    <code>NodeGroupsToRetain</code> is required.
                    <code>NodeGroupsToRemove</code> is a list of
                    <code>NodeGroupId</code>s to remove from the cluster.</p>
                    <p>ElastiCache for Redis will attempt to remove all node
                    groups listed by <code>NodeGroupsToRemove</code> from the
                    cluster.</p>
                  type: array
                  items:
                    type: string
                NodeGroupsToRetain:
                  description: <p>If the value of <code>NodeGroupCount</code> is less than
                    the current number of node groups (shards), then either
                    <code>NodeGroupsToRemove</code> or
                    <code>NodeGroupsToRetain</code> is required.
                    <code>NodeGroupsToRetain</code> is a list of
                    <code>NodeGroupId</code>s to retain in the cluster.</p>
                    <p>ElastiCache for Redis will attempt to remove all node
                    groups except those listed by
                    <code>NodeGroupsToRetain</code> from the cluster.</p>
                  type: array
                  items:
                    type: string
              required:
                - ReplicationGroupId
                - NodeGroupCount
                - ApplyImmediately
  /#Action=PurchaseReservedCacheNodesOffering:
    get:
      x-aws-operation-name: PurchaseReservedCacheNodesOffering
      operationId: GET PurchaseReservedCacheNodesOffering
      description: Allows you to purchase a reserved cache node offering.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/PurchaseReservedCacheNodesOfferingResult"
        "480":
          description: ReservedCacheNodesOfferingNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ReservedCacheNodesOfferingNotFoundFault"
        "481":
          description: ReservedCacheNodeAlreadyExistsFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ReservedCacheNodeAlreadyExistsFault"
        "482":
          description: ReservedCacheNodeQuotaExceededFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ReservedCacheNodeQuotaExceededFault"
        "483":
          description: InvalidParameterValueException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidParameterValueException"
        "484":
          description: InvalidParameterCombinationException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidParameterCombinationException"
      parameters:
        - name: ReservedCacheNodesOfferingId
          in: query
          required: true
          description: "<p>The ID of the reserved cache node offering to purchase.</p>
            <p>Example: <code>438012d3-4052-4cc7-b2e3-8d3372e0e706</code> </p>"
          schema:
            type: string
        - name: ReservedCacheNodeId
          in: query
          required: false
          description: "<p>A customer-specified identifier to track this reservation.</p>
            <note> <p>The Reserved Cache Node ID is an unique customer-specified
            identifier to track this reservation. If this parameter is not
            specified, ElastiCache automatically generates an identifier for the
            reservation.</p> </note> <p>Example: myreservationID</p>"
          schema:
            type: string
        - name: CacheNodeCount
          in: query
          required: false
          description: "<p>The number of cache node instances to reserve.</p> <p>Default:
            <code>1</code> </p>"
          schema:
            type: integer
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - PurchaseReservedCacheNodesOffering
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2015-02-02
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: PurchaseReservedCacheNodesOffering
      operationId: POST PurchaseReservedCacheNodesOffering
      description: Allows you to purchase a reserved cache node offering.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/PurchaseReservedCacheNodesOfferingResult"
        "480":
          description: ReservedCacheNodesOfferingNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ReservedCacheNodesOfferingNotFoundFault"
        "481":
          description: ReservedCacheNodeAlreadyExistsFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ReservedCacheNodeAlreadyExistsFault"
        "482":
          description: ReservedCacheNodeQuotaExceededFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ReservedCacheNodeQuotaExceededFault"
        "483":
          description: InvalidParameterValueException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidParameterValueException"
        "484":
          description: InvalidParameterCombinationException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidParameterCombinationException"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - PurchaseReservedCacheNodesOffering
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2015-02-02
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                ReservedCacheNodesOfferingId:
                  description: "<p>The ID of the reserved cache node offering to
                    purchase.</p> <p>Example:
                    <code>438012d3-4052-4cc7-b2e3-8d3372e0e706</code> </p>"
                  type: string
                ReservedCacheNodeId:
                  description: "<p>A customer-specified identifier to track this
                    reservation.</p> <note> <p>The Reserved Cache Node ID is an
                    unique customer-specified identifier to track this
                    reservation. If this parameter is not specified, ElastiCache
                    automatically generates an identifier for the
                    reservation.</p> </note> <p>Example: myreservationID</p>"
                  type: string
                CacheNodeCount:
                  description: "<p>The number of cache node instances to reserve.</p>
                    <p>Default: <code>1</code> </p>"
                  type: integer
              required:
                - ReservedCacheNodesOfferingId
  /#Action=RebootCacheCluster:
    get:
      x-aws-operation-name: RebootCacheCluster
      operationId: GET RebootCacheCluster
      description: <p>Reboots some, or all, of the cache nodes within a provisioned
        cluster. This operation applies any modified cache parameter groups to
        the cluster. The reboot operation takes place as soon as possible, and
        results in a momentary outage to the cluster. During the reboot, the
        cluster status is set to REBOOTING.</p> <p>The reboot causes the
        contents of the cache (for each cache node being rebooted) to be
        lost.</p> <p>When the reboot is complete, a cluster event is
        created.</p> <p>Rebooting a cluster is currently supported on Memcached
        and Redis (cluster mode disabled) clusters. Rebooting is not supported
        on Redis (cluster mode enabled) clusters.</p> <p>If you make changes to
        parameters that require a Redis (cluster mode enabled) cluster reboot
        for the changes to be applied, see <a
        href="http://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/Clusters.Rebooting.html">Rebooting
        a Cluster</a> for an alternate process.</p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/RebootCacheClusterResult"
        "480":
          description: InvalidCacheClusterStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidCacheClusterStateFault"
        "481":
          description: CacheClusterNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/CacheClusterNotFoundFault"
      parameters:
        - name: CacheClusterId
          in: query
          required: true
          description: The cluster identifier. This parameter is stored as a lowercase
            string.
          schema:
            type: string
        - name: CacheNodeIdsToReboot
          in: query
          required: true
          description: A list of cache node IDs to reboot. A node ID is a numeric
            identifier (0001, 0002, etc.). To reboot an entire cluster, specify
            all of the cache node IDs.
          schema:
            type: array
            items:
              type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - RebootCacheCluster
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2015-02-02
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: RebootCacheCluster
      operationId: POST RebootCacheCluster
      description: <p>Reboots some, or all, of the cache nodes within a provisioned
        cluster. This operation applies any modified cache parameter groups to
        the cluster. The reboot operation takes place as soon as possible, and
        results in a momentary outage to the cluster. During the reboot, the
        cluster status is set to REBOOTING.</p> <p>The reboot causes the
        contents of the cache (for each cache node being rebooted) to be
        lost.</p> <p>When the reboot is complete, a cluster event is
        created.</p> <p>Rebooting a cluster is currently supported on Memcached
        and Redis (cluster mode disabled) clusters. Rebooting is not supported
        on Redis (cluster mode enabled) clusters.</p> <p>If you make changes to
        parameters that require a Redis (cluster mode enabled) cluster reboot
        for the changes to be applied, see <a
        href="http://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/Clusters.Rebooting.html">Rebooting
        a Cluster</a> for an alternate process.</p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/RebootCacheClusterResult"
        "480":
          description: InvalidCacheClusterStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidCacheClusterStateFault"
        "481":
          description: CacheClusterNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/CacheClusterNotFoundFault"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - RebootCacheCluster
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2015-02-02
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                CacheClusterId:
                  description: The cluster identifier. This parameter is stored as a
                    lowercase string.
                  type: string
                CacheNodeIdsToReboot:
                  description: A list of cache node IDs to reboot. A node ID is a numeric
                    identifier (0001, 0002, etc.). To reboot an entire cluster,
                    specify all of the cache node IDs.
                  type: array
                  items:
                    type: string
              required:
                - CacheClusterId
                - CacheNodeIdsToReboot
  /#Action=RemoveTagsFromResource:
    get:
      x-aws-operation-name: RemoveTagsFromResource
      operationId: GET RemoveTagsFromResource
      description: Removes the tags identified by the <code>TagKeys</code> list from the
        named resource.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/TagListMessage"
        "480":
          description: CacheClusterNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/CacheClusterNotFoundFault"
        "481":
          description: SnapshotNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/SnapshotNotFoundFault"
        "482":
          description: InvalidARNFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidARNFault"
        "483":
          description: TagNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/TagNotFoundFault"
      parameters:
        - name: ResourceName
          in: query
          required: true
          description: <p>The Amazon Resource Name (ARN) of the resource from which you
            want the tags removed, for example
            <code>arn:aws:elasticache:us-west-2:0123456789:cluster:myCluster</code>
            or
            <code>arn:aws:elasticache:us-west-2:0123456789:snapshot:mySnapshot</code>.</p>
            <p>For more information about ARNs, see <a
            href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon
            Resource Names (ARNs) and AWS Service Namespaces</a>.</p>
          schema:
            type: string
        - name: TagKeys
          in: query
          required: true
          description: A list of <code>TagKeys</code> identifying the tags you want removed
            from the named resource.
          schema:
            type: array
            items:
              type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - RemoveTagsFromResource
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2015-02-02
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: RemoveTagsFromResource
      operationId: POST RemoveTagsFromResource
      description: Removes the tags identified by the <code>TagKeys</code> list from the
        named resource.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/TagListMessage"
        "480":
          description: CacheClusterNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/CacheClusterNotFoundFault"
        "481":
          description: SnapshotNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/SnapshotNotFoundFault"
        "482":
          description: InvalidARNFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidARNFault"
        "483":
          description: TagNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/TagNotFoundFault"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - RemoveTagsFromResource
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2015-02-02
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                ResourceName:
                  description: <p>The Amazon Resource Name (ARN) of the resource from which
                    you want the tags removed, for example
                    <code>arn:aws:elasticache:us-west-2:0123456789:cluster:myCluster</code>
                    or
                    <code>arn:aws:elasticache:us-west-2:0123456789:snapshot:mySnapshot</code>.</p>
                    <p>For more information about ARNs, see <a
                    href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon
                    Resource Names (ARNs) and AWS Service Namespaces</a>.</p>
                  type: string
                TagKeys:
                  description: A list of <code>TagKeys</code> identifying the tags you want
                    removed from the named resource.
                  type: array
                  items:
                    type: string
              required:
                - ResourceName
                - TagKeys
  /#Action=ResetCacheParameterGroup:
    get:
      x-aws-operation-name: ResetCacheParameterGroup
      operationId: GET ResetCacheParameterGroup
      description: Modifies the parameters of a cache parameter group to the engine or
        system default value. You can reset specific parameters by submitting a
        list of parameter names. To reset the entire cache parameter group,
        specify the <code>ResetAllParameters</code> and
        <code>CacheParameterGroupName</code> parameters.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/CacheParameterGroupNameMessage"
        "480":
          description: InvalidCacheParameterGroupStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidCacheParameterGroupStateFault"
        "481":
          description: CacheParameterGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/CacheParameterGroupNotFoundFault"
        "482":
          description: InvalidParameterValueException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidParameterValueException"
        "483":
          description: InvalidParameterCombinationException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidParameterCombinationException"
      parameters:
        - name: CacheParameterGroupName
          in: query
          required: true
          description: The name of the cache parameter group to reset.
          schema:
            type: string
        - name: ResetAllParameters
          in: query
          required: false
          description: "<p>If <code>true</code>, all parameters in the cache parameter
            group are reset to their default values. If <code>false</code>, only
            the parameters listed by <code>ParameterNameValues</code> are reset
            to their default values.</p> <p>Valid values: <code>true</code> |
            <code>false</code> </p>"
          schema:
            type: boolean
        - name: ParameterNameValues
          in: query
          required: false
          description: An array of parameter names to reset to their default values. If
            <code>ResetAllParameters</code> is <code>true</code>, do not use
            <code>ParameterNameValues</code>. If <code>ResetAllParameters</code>
            is <code>false</code>, you must specify the name of at least one
            parameter to reset.
          schema:
            type: array
            items:
              type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - ResetCacheParameterGroup
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2015-02-02
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: ResetCacheParameterGroup
      operationId: POST ResetCacheParameterGroup
      description: Modifies the parameters of a cache parameter group to the engine or
        system default value. You can reset specific parameters by submitting a
        list of parameter names. To reset the entire cache parameter group,
        specify the <code>ResetAllParameters</code> and
        <code>CacheParameterGroupName</code> parameters.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/CacheParameterGroupNameMessage"
        "480":
          description: InvalidCacheParameterGroupStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidCacheParameterGroupStateFault"
        "481":
          description: CacheParameterGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/CacheParameterGroupNotFoundFault"
        "482":
          description: InvalidParameterValueException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidParameterValueException"
        "483":
          description: InvalidParameterCombinationException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidParameterCombinationException"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - ResetCacheParameterGroup
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2015-02-02
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                CacheParameterGroupName:
                  description: The name of the cache parameter group to reset.
                  type: string
                ResetAllParameters:
                  description: "<p>If <code>true</code>, all parameters in the cache
                    parameter group are reset to their default values. If
                    <code>false</code>, only the parameters listed by
                    <code>ParameterNameValues</code> are reset to their default
                    values.</p> <p>Valid values: <code>true</code> |
                    <code>false</code> </p>"
                  type: boolean
                ParameterNameValues:
                  description: An array of parameter names to reset to their default
                    values. If <code>ResetAllParameters</code> is
                    <code>true</code>, do not use
                    <code>ParameterNameValues</code>. If
                    <code>ResetAllParameters</code> is <code>false</code>, you
                    must specify the name of at least one parameter to reset.
                  type: array
                  items:
                    type: string
              required:
                - CacheParameterGroupName
  /#Action=RevokeCacheSecurityGroupIngress:
    get:
      x-aws-operation-name: RevokeCacheSecurityGroupIngress
      operationId: GET RevokeCacheSecurityGroupIngress
      description: Revokes ingress from a cache security group. Use this operation to
        disallow access from an Amazon EC2 security group that had been
        previously authorized.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/RevokeCacheSecurityGroupIngressResult"
        "480":
          description: CacheSecurityGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/CacheSecurityGroupNotFoundFault"
        "481":
          description: AuthorizationNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/AuthorizationNotFoundFault"
        "482":
          description: InvalidCacheSecurityGroupStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidCacheSecurityGroupStateFault"
        "483":
          description: InvalidParameterValueException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidParameterValueException"
        "484":
          description: InvalidParameterCombinationException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidParameterCombinationException"
      parameters:
        - name: CacheSecurityGroupName
          in: query
          required: true
          description: The name of the cache security group to revoke ingress from.
          schema:
            type: string
        - name: EC2SecurityGroupName
          in: query
          required: true
          description: The name of the Amazon EC2 security group to revoke access from.
          schema:
            type: string
        - name: EC2SecurityGroupOwnerId
          in: query
          required: true
          description: The AWS account number of the Amazon EC2 security group owner. Note
            that this is not the same thing as an AWS access key ID - you must
            provide a valid AWS account number for this parameter.
          schema:
            type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - RevokeCacheSecurityGroupIngress
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2015-02-02
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: RevokeCacheSecurityGroupIngress
      operationId: POST RevokeCacheSecurityGroupIngress
      description: Revokes ingress from a cache security group. Use this operation to
        disallow access from an Amazon EC2 security group that had been
        previously authorized.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/RevokeCacheSecurityGroupIngressResult"
        "480":
          description: CacheSecurityGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/CacheSecurityGroupNotFoundFault"
        "481":
          description: AuthorizationNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/AuthorizationNotFoundFault"
        "482":
          description: InvalidCacheSecurityGroupStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidCacheSecurityGroupStateFault"
        "483":
          description: InvalidParameterValueException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidParameterValueException"
        "484":
          description: InvalidParameterCombinationException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidParameterCombinationException"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - RevokeCacheSecurityGroupIngress
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2015-02-02
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                CacheSecurityGroupName:
                  description: The name of the cache security group to revoke ingress from.
                  type: string
                EC2SecurityGroupName:
                  description: The name of the Amazon EC2 security group to revoke access
                    from.
                  type: string
                EC2SecurityGroupOwnerId:
                  description: The AWS account number of the Amazon EC2 security group
                    owner. Note that this is not the same thing as an AWS access
                    key ID - you must provide a valid AWS account number for
                    this parameter.
                  type: string
              required:
                - CacheSecurityGroupName
                - EC2SecurityGroupName
                - EC2SecurityGroupOwnerId
  /#Action=TestFailover:
    get:
      x-aws-operation-name: TestFailover
      operationId: GET TestFailover
      description: '<p>Represents the input of a <code>TestFailover</code> operation which
        test automatic failover on a specified node group (called shard in the
        console) in a replication group (called cluster in the console).</p> <p
        class="title"> <b>Note the following</b> </p> <ul> <li> <p>A customer
        can use this operation to test automatic failover on up to 5 shards
        (called node groups in the ElastiCache API and AWS CLI) in any rolling
        24-hour period.</p> </li> <li> <p>If calling this operation on shards in
        different clusters (called replication groups in the API and CLI), the
        calls can be made concurrently.</p> <p> </p> </li> <li> <p>If calling
        this operation multiple times on different shards in the same Redis
        (cluster mode enabled) replication group, the first node replacement
        must complete before a subsequent call can be made.</p> </li> <li> <p>To
        determine whether the node replacement is complete you can check Events
        using the Amazon ElastiCache console, the AWS CLI, or the ElastiCache
        API. Look for the following automatic failover related events, listed
        here in order of occurrance:</p> <ol> <li> <p>Replication group message:
        <code>Test Failover API called for node group
        &lt;node-group-id&gt;</code> </p> </li> <li> <p>Cache cluster message:
        <code>Failover from master node &lt;primary-node-id&gt; to replica node
        &lt;node-id&gt; completed</code> </p> </li> <li> <p>Replication group
        message: <code>Failover from master node &lt;primary-node-id&gt; to
        replica node &lt;node-id&gt; completed</code> </p> </li> <li> <p>Cache
        cluster message: <code>Recovering cache nodes &lt;node-id&gt;</code>
        </p> </li> <li> <p>Cache cluster message: <code>Finished recovery for
        cache nodes &lt;node-id&gt;</code> </p> </li> </ol> <p>For more
        information see:</p> <ul> <li> <p> <a
        href="https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/ECEvents.Viewing.html">Viewing
        ElastiCache Events</a> in the <i>ElastiCache User Guide</i> </p> </li>
        <li> <p> <a
        href="https://docs.aws.amazon.com/AmazonElastiCache/latest/APIReference/API_DescribeEvents.html">DescribeEvents</a>
        in the ElastiCache API Reference</p> </li> </ul> </li> </ul> <p>Also
        see, <a
        href="https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/AutoFailover.html#auto-failover-test">Testing
        Multi-AZ with Automatic Failover</a> in the <i>ElastiCache User
        Guide</i>.</p>'
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/TestFailoverResult"
        "480":
          description: APICallRateForCustomerExceededFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/APICallRateForCustomerExceededFault"
        "481":
          description: InvalidCacheClusterStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidCacheClusterStateFault"
        "482":
          description: InvalidReplicationGroupStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidReplicationGroupStateFault"
        "483":
          description: NodeGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/NodeGroupNotFoundFault"
        "484":
          description: ReplicationGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ReplicationGroupNotFoundFault"
        "485":
          description: TestFailoverNotAvailableFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/TestFailoverNotAvailableFault"
        "486":
          description: InvalidKMSKeyFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidKMSKeyFault"
        "487":
          description: InvalidParameterValueException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidParameterValueException"
        "488":
          description: InvalidParameterCombinationException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidParameterCombinationException"
      parameters:
        - name: ReplicationGroupId
          in: query
          required: true
          description: "The name of the replication group (console: cluster) whose
            automatic failover is being tested by this operation."
          schema:
            type: string
        - name: NodeGroupId
          in: query
          required: true
          description: The name of the node group (called shard in the console) in this
            replication group on which automatic failover is to be tested. You
            may test automatic failover on up to 5 node groups in any rolling
            24-hour period.
          schema:
            type: string
            minLength: 1
            maxLength: 4
            pattern: \d+
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - TestFailover
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2015-02-02
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: TestFailover
      operationId: POST TestFailover
      description: '<p>Represents the input of a <code>TestFailover</code> operation which
        test automatic failover on a specified node group (called shard in the
        console) in a replication group (called cluster in the console).</p> <p
        class="title"> <b>Note the following</b> </p> <ul> <li> <p>A customer
        can use this operation to test automatic failover on up to 5 shards
        (called node groups in the ElastiCache API and AWS CLI) in any rolling
        24-hour period.</p> </li> <li> <p>If calling this operation on shards in
        different clusters (called replication groups in the API and CLI), the
        calls can be made concurrently.</p> <p> </p> </li> <li> <p>If calling
        this operation multiple times on different shards in the same Redis
        (cluster mode enabled) replication group, the first node replacement
        must complete before a subsequent call can be made.</p> </li> <li> <p>To
        determine whether the node replacement is complete you can check Events
        using the Amazon ElastiCache console, the AWS CLI, or the ElastiCache
        API. Look for the following automatic failover related events, listed
        here in order of occurrance:</p> <ol> <li> <p>Replication group message:
        <code>Test Failover API called for node group
        &lt;node-group-id&gt;</code> </p> </li> <li> <p>Cache cluster message:
        <code>Failover from master node &lt;primary-node-id&gt; to replica node
        &lt;node-id&gt; completed</code> </p> </li> <li> <p>Replication group
        message: <code>Failover from master node &lt;primary-node-id&gt; to
        replica node &lt;node-id&gt; completed</code> </p> </li> <li> <p>Cache
        cluster message: <code>Recovering cache nodes &lt;node-id&gt;</code>
        </p> </li> <li> <p>Cache cluster message: <code>Finished recovery for
        cache nodes &lt;node-id&gt;</code> </p> </li> </ol> <p>For more
        information see:</p> <ul> <li> <p> <a
        href="https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/ECEvents.Viewing.html">Viewing
        ElastiCache Events</a> in the <i>ElastiCache User Guide</i> </p> </li>
        <li> <p> <a
        href="https://docs.aws.amazon.com/AmazonElastiCache/latest/APIReference/API_DescribeEvents.html">DescribeEvents</a>
        in the ElastiCache API Reference</p> </li> </ul> </li> </ul> <p>Also
        see, <a
        href="https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/AutoFailover.html#auto-failover-test">Testing
        Multi-AZ with Automatic Failover</a> in the <i>ElastiCache User
        Guide</i>.</p>'
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/TestFailoverResult"
        "480":
          description: APICallRateForCustomerExceededFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/APICallRateForCustomerExceededFault"
        "481":
          description: InvalidCacheClusterStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidCacheClusterStateFault"
        "482":
          description: InvalidReplicationGroupStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidReplicationGroupStateFault"
        "483":
          description: NodeGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/NodeGroupNotFoundFault"
        "484":
          description: ReplicationGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ReplicationGroupNotFoundFault"
        "485":
          description: TestFailoverNotAvailableFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/TestFailoverNotAvailableFault"
        "486":
          description: InvalidKMSKeyFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidKMSKeyFault"
        "487":
          description: InvalidParameterValueException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidParameterValueException"
        "488":
          description: InvalidParameterCombinationException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidParameterCombinationException"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - TestFailover
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2015-02-02
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                ReplicationGroupId:
                  description: "The name of the replication group (console: cluster) whose
                    automatic failover is being tested by this operation."
                  type: string
                NodeGroupId:
                  description: The name of the node group (called shard in the console) in
                    this replication group on which automatic failover is to be
                    tested. You may test automatic failover on up to 5 node
                    groups in any rolling 24-hour period.
                  type: string
                  minLength: 1
                  maxLength: 4
                  pattern: \d+
              required:
                - ReplicationGroupId
                - NodeGroupId
servers:
  - url: http://elasticache.{region}.amazonaws.com
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-south-1
          - sa-east-1
        default: us-east-1
    description: The Amazon ElastiCache multi-region endpoint
  - url: https://elasticache.{region}.amazonaws.com
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-south-1
          - sa-east-1
        default: us-east-1
    description: The Amazon ElastiCache multi-region endpoint
  - url: http://elasticache.{region}.amazonaws.com.cn
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The Amazon ElastiCache endpoint for China (Beijing) and China (Ningxia)
  - url: https://elasticache.{region}.amazonaws.com.cn
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The Amazon ElastiCache endpoint for China (Beijing) and China (Ningxia)
components:
  parameters:
    X-Amz-Content-Sha256:
      name: X-Amz-Content-Sha256
      in: header
      required: false
      schema:
        type: string
    X-Amz-Date:
      name: X-Amz-Date
      in: header
      required: false
      schema:
        type: string
    X-Amz-Algorithm:
      name: X-Amz-Algorithm
      in: header
      required: false
      schema:
        type: string
    X-Amz-Credential:
      name: X-Amz-Credential
      in: header
      required: false
      schema:
        type: string
    X-Amz-Security-Token:
      name: X-Amz-Security-Token
      in: header
      required: false
      schema:
        type: string
    X-Amz-Signature:
      name: X-Amz-Signature
      in: header
      required: false
      schema:
        type: string
    X-Amz-SignedHeaders:
      name: X-Amz-SignedHeaders
      in: header
      required: false
      schema:
        type: string
  requestBodies:
    POST_BatchApplyUpdateAction:
      content:
        application/x-www-form-urlencoded:
          schema:
            type: object
            properties:
              ReplicationGroupIds:
                description: The replication group IDs
                type: array
                items:
                  type: string
              ServiceUpdateName:
                description: The unique ID of the service update
                type: string
            required:
              - ReplicationGroupIds
              - ServiceUpdateName
  securitySchemes:
    hmac:
      type: apiKey
      name: Authorization
      in: header
      description: Amazon Signature authorization v4
      x-amazon-apigateway-authtype: awsSigv4
  schemas:
    TagListMessage:
      type: object
      properties:
        TagList:
          $ref: "#/components/schemas/TagList"
      description: Represents the output from the <code>AddTagsToResource</code>,
        <code>ListTagsForResource</code>, and
        <code>RemoveTagsFromResource</code> operations.
    Tag:
      type: object
      properties:
        Key:
          $ref: "#/components/schemas/String"
        Value:
          $ref: "#/components/schemas/String"
      description: A cost allocation Tag that can be added to an ElastiCache cluster or
        replication group. Tags are composed of a Key/Value pair. A tag with a
        null Value is permitted.
    CacheClusterNotFoundFault: {}
    SnapshotNotFoundFault: {}
    TagQuotaPerResourceExceeded: {}
    InvalidARNFault: {}
    AuthorizeCacheSecurityGroupIngressResult:
      type: object
      properties:
        CacheSecurityGroup:
          $ref: "#/components/schemas/CacheSecurityGroup"
    CacheSecurityGroupNotFoundFault: {}
    InvalidCacheSecurityGroupStateFault: {}
    AuthorizationAlreadyExistsFault: {}
    InvalidParameterValueException: {}
    InvalidParameterCombinationException: {}
    UpdateActionResultsMessage:
      type: object
      properties:
        ProcessedUpdateActions:
          $ref: "#/components/schemas/ProcessedUpdateActionList"
        UnprocessedUpdateActions:
          $ref: "#/components/schemas/UnprocessedUpdateActionList"
    String:
      type: string
    ServiceUpdateNotFoundFault: {}
    CopySnapshotResult:
      type: object
      properties:
        Snapshot:
          $ref: "#/components/schemas/Snapshot"
    SnapshotAlreadyExistsFault: {}
    SnapshotQuotaExceededFault: {}
    InvalidSnapshotStateFault: {}
    CreateCacheClusterResult:
      type: object
      properties:
        CacheCluster:
          $ref: "#/components/schemas/CacheCluster"
    ReplicationGroupNotFoundFault: {}
    InvalidReplicationGroupStateFault: {}
    CacheClusterAlreadyExistsFault: {}
    InsufficientCacheClusterCapacityFault: {}
    CacheSubnetGroupNotFoundFault: {}
    ClusterQuotaForCustomerExceededFault: {}
    NodeQuotaForClusterExceededFault: {}
    NodeQuotaForCustomerExceededFault: {}
    CacheParameterGroupNotFoundFault: {}
    InvalidVPCNetworkStateFault: {}
    CreateCacheParameterGroupResult:
      type: object
      properties:
        CacheParameterGroup:
          $ref: "#/components/schemas/CacheParameterGroup"
    CacheParameterGroupQuotaExceededFault: {}
    CacheParameterGroupAlreadyExistsFault: {}
    InvalidCacheParameterGroupStateFault: {}
    CreateCacheSecurityGroupResult:
      type: object
      properties:
        CacheSecurityGroup:
          $ref: "#/components/schemas/CacheSecurityGroup"
    CacheSecurityGroupAlreadyExistsFault: {}
    CacheSecurityGroupQuotaExceededFault: {}
    CreateCacheSubnetGroupResult:
      type: object
      properties:
        CacheSubnetGroup:
          $ref: "#/components/schemas/CacheSubnetGroup"
    CacheSubnetGroupAlreadyExistsFault: {}
    CacheSubnetGroupQuotaExceededFault: {}
    CacheSubnetQuotaExceededFault: {}
    InvalidSubnet: {}
    CreateReplicationGroupResult:
      type: object
      properties:
        ReplicationGroup:
          $ref: "#/components/schemas/ReplicationGroup"
    NodeGroupConfiguration:
      type: object
      properties:
        NodeGroupId:
          $ref: "#/components/schemas/AllowedNodeGroupId"
        Slots:
          $ref: "#/components/schemas/String"
        ReplicaCount:
          $ref: "#/components/schemas/IntegerOptional"
        PrimaryAvailabilityZone:
          $ref: "#/components/schemas/String"
        ReplicaAvailabilityZones:
          $ref: "#/components/schemas/AvailabilityZonesList"
      description: "Node group (shard) configuration options. Each node group (shard)
        configuration has the following: <code>Slots</code>,
        <code>PrimaryAvailabilityZone</code>,
        <code>ReplicaAvailabilityZones</code>, <code>ReplicaCount</code>."
    InvalidCacheClusterStateFault: {}
    ReplicationGroupAlreadyExistsFault: {}
    NodeGroupsPerReplicationGroupQuotaExceededFault: {}
    CreateSnapshotResult:
      type: object
      properties:
        Snapshot:
          $ref: "#/components/schemas/Snapshot"
    SnapshotFeatureNotSupportedFault: {}
    DecreaseReplicaCountResult:
      type: object
      properties:
        ReplicationGroup:
          $ref: "#/components/schemas/ReplicationGroup"
    ConfigureShard:
      type: object
      required:
        - NodeGroupId
        - NewReplicaCount
      properties:
        NodeGroupId:
          $ref: "#/components/schemas/AllowedNodeGroupId"
        NewReplicaCount:
          $ref: "#/components/schemas/Integer"
        PreferredAvailabilityZones:
          $ref: "#/components/schemas/PreferredAvailabilityZoneList"
      description: "Node group (shard) configuration options when adding or removing
        replicas. Each node group (shard) configuration has the following
        members: NodeGroupId, NewReplicaCount, and PreferredAvailabilityZones. "
    ServiceLinkedRoleNotFoundFault: {}
    NoOperationFault: {}
    DeleteCacheClusterResult:
      type: object
      properties:
        CacheCluster:
          $ref: "#/components/schemas/CacheCluster"
    CacheSubnetGroupInUse: {}
    DeleteReplicationGroupResult:
      type: object
      properties:
        ReplicationGroup:
          $ref: "#/components/schemas/ReplicationGroup"
    DeleteSnapshotResult:
      type: object
      properties:
        Snapshot:
          $ref: "#/components/schemas/Snapshot"
    CacheClusterMessage:
      type: object
      properties:
        Marker:
          $ref: "#/components/schemas/String"
        CacheClusters:
          $ref: "#/components/schemas/CacheClusterList"
      description: Represents the output of a <code>DescribeCacheClusters</code> operation.
    CacheEngineVersionMessage:
      type: object
      properties:
        Marker:
          $ref: "#/components/schemas/String"
        CacheEngineVersions:
          $ref: "#/components/schemas/CacheEngineVersionList"
      description: Represents the output of a <a>DescribeCacheEngineVersions</a> operation.
    CacheParameterGroupsMessage:
      type: object
      properties:
        Marker:
          $ref: "#/components/schemas/String"
        CacheParameterGroups:
          $ref: "#/components/schemas/CacheParameterGroupList"
      description: Represents the output of a <code>DescribeCacheParameterGroups</code>
        operation.
    CacheParameterGroupDetails:
      type: object
      properties:
        Marker:
          $ref: "#/components/schemas/String"
        Parameters:
          $ref: "#/components/schemas/ParametersList"
        CacheNodeTypeSpecificParameters:
          $ref: "#/components/schemas/CacheNodeTypeSpecificParametersList"
      description: Represents the output of a <code>DescribeCacheParameters</code>
        operation.
    CacheSecurityGroupMessage:
      type: object
      properties:
        Marker:
          $ref: "#/components/schemas/String"
        CacheSecurityGroups:
          $ref: "#/components/schemas/CacheSecurityGroups"
      description: Represents the output of a <code>DescribeCacheSecurityGroups</code>
        operation.
    CacheSubnetGroupMessage:
      type: object
      properties:
        Marker:
          $ref: "#/components/schemas/String"
        CacheSubnetGroups:
          $ref: "#/components/schemas/CacheSubnetGroups"
      description: Represents the output of a <code>DescribeCacheSubnetGroups</code>
        operation.
    DescribeEngineDefaultParametersResult:
      type: object
      properties:
        EngineDefaults:
          $ref: "#/components/schemas/EngineDefaults"
    EventsMessage:
      type: object
      properties:
        Marker:
          $ref: "#/components/schemas/String"
        Events:
          $ref: "#/components/schemas/EventList"
      description: Represents the output of a <code>DescribeEvents</code> operation.
    ReplicationGroupMessage:
      type: object
      properties:
        Marker:
          $ref: "#/components/schemas/String"
        ReplicationGroups:
          $ref: "#/components/schemas/ReplicationGroupList"
      description: Represents the output of a <code>DescribeReplicationGroups</code>
        operation.
    ReservedCacheNodeMessage:
      type: object
      properties:
        Marker:
          $ref: "#/components/schemas/String"
        ReservedCacheNodes:
          $ref: "#/components/schemas/ReservedCacheNodeList"
      description: Represents the output of a <code>DescribeReservedCacheNodes</code>
        operation.
    ReservedCacheNodeNotFoundFault: {}
    ReservedCacheNodesOfferingMessage:
      type: object
      properties:
        Marker:
          $ref: "#/components/schemas/String"
        ReservedCacheNodesOfferings:
          $ref: "#/components/schemas/ReservedCacheNodesOfferingList"
      description: Represents the output of a
        <code>DescribeReservedCacheNodesOfferings</code> operation.
    ReservedCacheNodesOfferingNotFoundFault: {}
    ServiceUpdatesMessage:
      type: object
      properties:
        Marker:
          $ref: "#/components/schemas/String"
        ServiceUpdates:
          $ref: "#/components/schemas/ServiceUpdateList"
    ServiceUpdateStatus:
      type: string
      enum:
        - available
        - cancelled
        - expired
    DescribeSnapshotsListMessage:
      type: object
      properties:
        Marker:
          $ref: "#/components/schemas/String"
        Snapshots:
          $ref: "#/components/schemas/SnapshotList"
      description: Represents the output of a <code>DescribeSnapshots</code> operation.
    UpdateActionsMessage:
      type: object
      properties:
        Marker:
          $ref: "#/components/schemas/String"
        UpdateActions:
          $ref: "#/components/schemas/UpdateActionList"
    TStamp:
      type: string
      format: date-time
    UpdateActionStatus:
      type: string
      enum:
        - not-applied
        - waiting-to-start
        - in-progress
        - stopping
        - stopped
        - complete
    IncreaseReplicaCountResult:
      type: object
      properties:
        ReplicationGroup:
          $ref: "#/components/schemas/ReplicationGroup"
    InvalidKMSKeyFault: {}
    AllowedNodeTypeModificationsMessage:
      type: object
      properties:
        ScaleUpModifications:
          $ref: "#/components/schemas/NodeTypeList"
        ScaleDownModifications:
          $ref: "#/components/schemas/NodeTypeList"
      description: Represents the allowed node types you can use to modify your cluster or
        replication group.
    ModifyCacheClusterResult:
      type: object
      properties:
        CacheCluster:
          $ref: "#/components/schemas/CacheCluster"
    CacheParameterGroupNameMessage:
      type: object
      properties:
        CacheParameterGroupName:
          $ref: "#/components/schemas/String"
      description: <p>Represents the output of one of the following operations:</p> <ul>
        <li> <p> <code>ModifyCacheParameterGroup</code> </p> </li> <li> <p>
        <code>ResetCacheParameterGroup</code> </p> </li> </ul>
    ParameterNameValue:
      type: object
      properties:
        ParameterName:
          $ref: "#/components/schemas/String"
        ParameterValue:
          $ref: "#/components/schemas/String"
      description: Describes a name-value pair that is used to update the value of a
        parameter.
    ModifyCacheSubnetGroupResult:
      type: object
      properties:
        CacheSubnetGroup:
          $ref: "#/components/schemas/CacheSubnetGroup"
    SubnetInUse: {}
    ModifyReplicationGroupResult:
      type: object
      properties:
        ReplicationGroup:
          $ref: "#/components/schemas/ReplicationGroup"
    ModifyReplicationGroupShardConfigurationResult:
      type: object
      properties:
        ReplicationGroup:
          $ref: "#/components/schemas/ReplicationGroup"
    ReshardingConfiguration:
      type: object
      properties:
        NodeGroupId:
          $ref: "#/components/schemas/AllowedNodeGroupId"
        PreferredAvailabilityZones:
          $ref: "#/components/schemas/AvailabilityZonesList"
      description: A list of <code>PreferredAvailabilityZones</code> objects that specifies
        the configuration of a node group in the resharded cluster.
    AllowedNodeGroupId:
      type: string
      pattern: \d+
      minLength: 1
      maxLength: 4
    PurchaseReservedCacheNodesOfferingResult:
      type: object
      properties:
        ReservedCacheNode:
          $ref: "#/components/schemas/ReservedCacheNode"
    ReservedCacheNodeAlreadyExistsFault: {}
    ReservedCacheNodeQuotaExceededFault: {}
    RebootCacheClusterResult:
      type: object
      properties:
        CacheCluster:
          $ref: "#/components/schemas/CacheCluster"
    TagNotFoundFault: {}
    RevokeCacheSecurityGroupIngressResult:
      type: object
      properties:
        CacheSecurityGroup:
          $ref: "#/components/schemas/CacheSecurityGroup"
    AuthorizationNotFoundFault: {}
    TestFailoverResult:
      type: object
      properties:
        ReplicationGroup:
          $ref: "#/components/schemas/ReplicationGroup"
    APICallRateForCustomerExceededFault: {}
    NodeGroupNotFoundFault: {}
    TestFailoverNotAvailableFault: {}
    AZMode:
      type: string
      enum:
        - single-az
        - cross-az
    TagList:
      type: array
      items:
        $ref: "#/components/schemas/Tag"
    AddTagsToResourceMessage:
      type: object
      required:
        - ResourceName
        - Tags
      properties:
        ResourceName:
          $ref: "#/components/schemas/String"
        Tags:
          $ref: "#/components/schemas/TagList"
      description: Represents the input of an AddTagsToResource operation.
    NodeTypeList:
      type: array
      items:
        $ref: "#/components/schemas/String"
    AuthorizeCacheSecurityGroupIngressMessage:
      type: object
      required:
        - CacheSecurityGroupName
        - EC2SecurityGroupName
        - EC2SecurityGroupOwnerId
      properties:
        CacheSecurityGroupName:
          $ref: "#/components/schemas/String"
        EC2SecurityGroupName:
          $ref: "#/components/schemas/String"
        EC2SecurityGroupOwnerId:
          $ref: "#/components/schemas/String"
      description: Represents the input of an AuthorizeCacheSecurityGroupIngress operation.
    CacheSecurityGroup:
      type: object
      properties:
        OwnerId:
          $ref: "#/components/schemas/String"
        CacheSecurityGroupName:
          $ref: "#/components/schemas/String"
        Description:
          $ref: "#/components/schemas/String"
        EC2SecurityGroups:
          $ref: "#/components/schemas/EC2SecurityGroupList"
      description: <p>Represents the output of one of the following operations:</p> <ul>
        <li> <p> <code>AuthorizeCacheSecurityGroupIngress</code> </p> </li> <li>
        <p> <code>CreateCacheSecurityGroup</code> </p> </li> <li> <p>
        <code>RevokeCacheSecurityGroupIngress</code> </p> </li> </ul>
    AutomaticFailoverStatus:
      type: string
      enum:
        - enabled
        - disabled
        - enabling
        - disabling
    AvailabilityZone:
      type: object
      properties:
        Name:
          $ref: "#/components/schemas/String"
      description: Describes an Availability Zone in which the cluster is launched.
    AvailabilityZonesList:
      type: array
      items:
        $ref: "#/components/schemas/String"
    ReplicationGroupIdList:
      type: array
      items:
        $ref: "#/components/schemas/String"
      maxItems: 20
    BatchApplyUpdateActionMessage:
      type: object
      required:
        - ReplicationGroupIds
        - ServiceUpdateName
      properties:
        ReplicationGroupIds:
          $ref: "#/components/schemas/ReplicationGroupIdList"
        ServiceUpdateName:
          $ref: "#/components/schemas/String"
    BatchStopUpdateActionMessage:
      type: object
      required:
        - ReplicationGroupIds
        - ServiceUpdateName
      properties:
        ReplicationGroupIds:
          $ref: "#/components/schemas/ReplicationGroupIdList"
        ServiceUpdateName:
          $ref: "#/components/schemas/String"
    Boolean:
      type: boolean
    BooleanOptional:
      type: boolean
    Endpoint:
      type: object
      properties:
        Address:
          $ref: "#/components/schemas/String"
        Port:
          $ref: "#/components/schemas/Integer"
      description: Represents the information required for client programs to connect to a
        cache node.
    IntegerOptional:
      type: integer
    PendingModifiedValues:
      type: object
      properties:
        NumCacheNodes:
          $ref: "#/components/schemas/IntegerOptional"
        CacheNodeIdsToRemove:
          $ref: "#/components/schemas/CacheNodeIdsList"
        EngineVersion:
          $ref: "#/components/schemas/String"
        CacheNodeType:
          $ref: "#/components/schemas/String"
      description: A group of settings that are applied to the cluster in the future, or
        that are currently being applied.
    NotificationConfiguration:
      type: object
      properties:
        TopicArn:
          $ref: "#/components/schemas/String"
        TopicStatus:
          $ref: "#/components/schemas/String"
      description: Describes a notification topic and its status. Notification topics are
        used for publishing ElastiCache events to subscribers using Amazon
        Simple Notification Service (SNS).
    CacheSecurityGroupMembershipList:
      type: array
      items:
        $ref: "#/components/schemas/CacheSecurityGroupMembership"
    CacheParameterGroupStatus:
      type: object
      properties:
        CacheParameterGroupName:
          $ref: "#/components/schemas/String"
        ParameterApplyStatus:
          $ref: "#/components/schemas/String"
        CacheNodeIdsToReboot:
          $ref: "#/components/schemas/CacheNodeIdsList"
      description: Status of the cache parameter group.
    CacheNodeList:
      type: array
      items:
        $ref: "#/components/schemas/CacheNode"
    SecurityGroupMembershipList:
      type: array
      items:
        $ref: "#/components/schemas/SecurityGroupMembership"
    CacheCluster:
      type: object
      properties:
        CacheClusterId:
          $ref: "#/components/schemas/String"
        ConfigurationEndpoint:
          $ref: "#/components/schemas/Endpoint"
        ClientDownloadLandingPage:
          $ref: "#/components/schemas/String"
        CacheNodeType:
          $ref: "#/components/schemas/String"
        Engine:
          $ref: "#/components/schemas/String"
        EngineVersion:
          $ref: "#/components/schemas/String"
        CacheClusterStatus:
          $ref: "#/components/schemas/String"
        NumCacheNodes:
          $ref: "#/components/schemas/IntegerOptional"
        PreferredAvailabilityZone:
          $ref: "#/components/schemas/String"
        CacheClusterCreateTime:
          $ref: "#/components/schemas/TStamp"
        PreferredMaintenanceWindow:
          $ref: "#/components/schemas/String"
        PendingModifiedValues:
          $ref: "#/components/schemas/PendingModifiedValues"
        NotificationConfiguration:
          $ref: "#/components/schemas/NotificationConfiguration"
        CacheSecurityGroups:
          $ref: "#/components/schemas/CacheSecurityGroupMembershipList"
        CacheParameterGroup:
          $ref: "#/components/schemas/CacheParameterGroupStatus"
        CacheSubnetGroupName:
          $ref: "#/components/schemas/String"
        CacheNodes:
          $ref: "#/components/schemas/CacheNodeList"
        AutoMinorVersionUpgrade:
          $ref: "#/components/schemas/Boolean"
        SecurityGroups:
          $ref: "#/components/schemas/SecurityGroupMembershipList"
        ReplicationGroupId:
          $ref: "#/components/schemas/String"
        SnapshotRetentionLimit:
          $ref: "#/components/schemas/IntegerOptional"
        SnapshotWindow:
          $ref: "#/components/schemas/String"
        AuthTokenEnabled:
          $ref: "#/components/schemas/BooleanOptional"
        TransitEncryptionEnabled:
          $ref: "#/components/schemas/BooleanOptional"
        AtRestEncryptionEnabled:
          $ref: "#/components/schemas/BooleanOptional"
      description: Contains all of the attributes of a specific cluster.
    CacheClusterList:
      type: array
      items:
        $ref: "#/components/schemas/CacheCluster"
    CacheEngineVersion:
      type: object
      properties:
        Engine:
          $ref: "#/components/schemas/String"
        EngineVersion:
          $ref: "#/components/schemas/String"
        CacheParameterGroupFamily:
          $ref: "#/components/schemas/String"
        CacheEngineDescription:
          $ref: "#/components/schemas/String"
        CacheEngineVersionDescription:
          $ref: "#/components/schemas/String"
      description: Provides all of the details about a particular cache engine version.
    CacheEngineVersionList:
      type: array
      items:
        $ref: "#/components/schemas/CacheEngineVersion"
    CacheNode:
      type: object
      properties:
        CacheNodeId:
          $ref: "#/components/schemas/String"
        CacheNodeStatus:
          $ref: "#/components/schemas/String"
        CacheNodeCreateTime:
          $ref: "#/components/schemas/TStamp"
        Endpoint:
          $ref: "#/components/schemas/Endpoint"
        ParameterGroupStatus:
          $ref: "#/components/schemas/String"
        SourceCacheNodeId:
          $ref: "#/components/schemas/String"
        CustomerAvailabilityZone:
          $ref: "#/components/schemas/String"
      description: "<p>Represents an individual cache node within a cluster. Each cache
        node runs its own instance of the cluster's protocol-compliant caching
        software - either Memcached or Redis.</p> <p>The following node types
        are supported by ElastiCache. Generally speaking, the current generation
        types provide more memory and computational power at lower cost when
        compared to their equivalent previous generation counterparts.</p> <ul>
        <li> <p>General purpose:</p> <ul> <li> <p>Current generation: </p> <p>
        <b>M5 node types:</b> <code>cache.m5.large</code>,
        <code>cache.m5.xlarge</code>, <code>cache.m5.2xlarge</code>,
        <code>cache.m5.4xlarge</code>, <code>cache.m5.12xlarge</code>,
        <code>cache.m5.24xlarge</code> </p> <p> <b>M4 node types:</b>
        <code>cache.m4.large</code>, <code>cache.m4.xlarge</code>,
        <code>cache.m4.2xlarge</code>, <code>cache.m4.4xlarge</code>,
        <code>cache.m4.10xlarge</code> </p> <p> <b>T2 node types:</b>
        <code>cache.t2.micro</code>, <code>cache.t2.small</code>,
        <code>cache.t2.medium</code> </p> </li> <li> <p>Previous generation:
        (not recommended)</p> <p> <b>T1 node types:</b>
        <code>cache.t1.micro</code> </p> <p> <b>M1 node types:</b>
        <code>cache.m1.small</code>, <code>cache.m1.medium</code>,
        <code>cache.m1.large</code>, <code>cache.m1.xlarge</code> </p> <p> <b>M3
        node types:</b> <code>cache.m3.medium</code>,
        <code>cache.m3.large</code>, <code>cache.m3.xlarge</code>,
        <code>cache.m3.2xlarge</code> </p> </li> </ul> </li> <li> <p>Compute
        optimized:</p> <ul> <li> <p>Previous generation: (not recommended)</p>
        <p> <b>C1 node types:</b> <code>cache.c1.xlarge</code> </p> </li> </ul>
        </li> <li> <p>Memory optimized:</p> <ul> <li> <p>Current generation:
        </p> <p> <b>R5 node types:</b> <code>cache.r5.large</code>,
        <code>cache.r5.xlarge</code>, <code>cache.r5.2xlarge</code>,
        <code>cache.r5.4xlarge</code>, <code>cache.r5.12xlarge</code>,
        <code>cache.r5.24xlarge</code> </p> <p> <b>R4 node types:</b>
        <code>cache.r4.large</code>, <code>cache.r4.xlarge</code>,
        <code>cache.r4.2xlarge</code>, <code>cache.r4.4xlarge</code>,
        <code>cache.r4.8xlarge</code>, <code>cache.r4.16xlarge</code> </p> </li>
        <li> <p>Previous generation: (not recommended)</p> <p> <b>M2 node
        types:</b> <code>cache.m2.xlarge</code>, <code>cache.m2.2xlarge</code>,
        <code>cache.m2.4xlarge</code> </p> <p> <b>R3 node types:</b>
        <code>cache.r3.large</code>, <code>cache.r3.xlarge</code>,
        <code>cache.r3.2xlarge</code>, <code>cache.r3.4xlarge</code>,
        <code>cache.r3.8xlarge</code> </p> </li> </ul> </li> </ul> <p>
        <b>Additional node type info</b> </p> <ul> <li> <p>All current
        generation instance types are created in Amazon VPC by default.</p>
        </li> <li> <p>Redis append-only files (AOF) are not supported for T1 or
        T2 instances.</p> </li> <li> <p>Redis Multi-AZ with automatic failover
        is not supported on T1 instances.</p> </li> <li> <p>Redis configuration
        variables <code>appendonly</code> and <code>appendfsync</code> are not
        supported on Redis version 2.8.22 and later.</p> </li> </ul>"
    CacheNodeIdsList:
      type: array
      items:
        $ref: "#/components/schemas/String"
    CacheNodeTypeSpecificValueList:
      type: array
      items:
        $ref: "#/components/schemas/CacheNodeTypeSpecificValue"
    ChangeType:
      type: string
      enum:
        - immediate
        - requires-reboot
    CacheNodeTypeSpecificParameter:
      type: object
      properties:
        ParameterName:
          $ref: "#/components/schemas/String"
        Description:
          $ref: "#/components/schemas/String"
        Source:
          $ref: "#/components/schemas/String"
        DataType:
          $ref: "#/components/schemas/String"
        AllowedValues:
          $ref: "#/components/schemas/String"
        IsModifiable:
          $ref: "#/components/schemas/Boolean"
        MinimumEngineVersion:
          $ref: "#/components/schemas/String"
        CacheNodeTypeSpecificValues:
          $ref: "#/components/schemas/CacheNodeTypeSpecificValueList"
        ChangeType:
          $ref: "#/components/schemas/ChangeType"
      description: A parameter that has a different value for each cache node type it is
        applied to. For example, in a Redis cluster, a
        <code>cache.m1.large</code> cache node type would have a larger
        <code>maxmemory</code> value than a <code>cache.m1.small</code> type.
    CacheNodeTypeSpecificParametersList:
      type: array
      items:
        $ref: "#/components/schemas/CacheNodeTypeSpecificParameter"
    CacheNodeTypeSpecificValue:
      type: object
      properties:
        CacheNodeType:
          $ref: "#/components/schemas/String"
        Value:
          $ref: "#/components/schemas/String"
      description: A value that applies only to a certain cache node type.
    CacheParameterGroup:
      type: object
      properties:
        CacheParameterGroupName:
          $ref: "#/components/schemas/String"
        CacheParameterGroupFamily:
          $ref: "#/components/schemas/String"
        Description:
          $ref: "#/components/schemas/String"
      description: Represents the output of a <code>CreateCacheParameterGroup</code>
        operation.
    ParametersList:
      type: array
      items:
        $ref: "#/components/schemas/Parameter"
    CacheParameterGroupList:
      type: array
      items:
        $ref: "#/components/schemas/CacheParameterGroup"
    EC2SecurityGroupList:
      type: array
      items:
        $ref: "#/components/schemas/EC2SecurityGroup"
    CacheSecurityGroupMembership:
      type: object
      properties:
        CacheSecurityGroupName:
          $ref: "#/components/schemas/String"
        Status:
          $ref: "#/components/schemas/String"
      description: Represents a cluster's status within a particular cache security group.
    CacheSecurityGroups:
      type: array
      items:
        $ref: "#/components/schemas/CacheSecurityGroup"
    CacheSecurityGroupNameList:
      type: array
      items:
        $ref: "#/components/schemas/String"
    SubnetList:
      type: array
      items:
        $ref: "#/components/schemas/Subnet"
    CacheSubnetGroup:
      type: object
      properties:
        CacheSubnetGroupName:
          $ref: "#/components/schemas/String"
        CacheSubnetGroupDescription:
          $ref: "#/components/schemas/String"
        VpcId:
          $ref: "#/components/schemas/String"
        Subnets:
          $ref: "#/components/schemas/SubnetList"
      description: <p>Represents the output of one of the following operations:</p> <ul>
        <li> <p> <code>CreateCacheSubnetGroup</code> </p> </li> <li> <p>
        <code>ModifyCacheSubnetGroup</code> </p> </li> </ul>
    CacheSubnetGroups:
      type: array
      items:
        $ref: "#/components/schemas/CacheSubnetGroup"
    ClusterIdList:
      type: array
      items:
        $ref: "#/components/schemas/String"
    Integer:
      type: integer
    PreferredAvailabilityZoneList:
      type: array
      items:
        $ref: "#/components/schemas/String"
    CopySnapshotMessage:
      type: object
      required:
        - SourceSnapshotName
        - TargetSnapshotName
      properties:
        SourceSnapshotName:
          $ref: "#/components/schemas/String"
        TargetSnapshotName:
          $ref: "#/components/schemas/String"
        TargetBucket:
          $ref: "#/components/schemas/String"
        KmsKeyId:
          $ref: "#/components/schemas/String"
      description: Represents the input of a <code>CopySnapshotMessage</code> operation.
    Snapshot:
      type: object
      properties:
        SnapshotName:
          $ref: "#/components/schemas/String"
        ReplicationGroupId:
          $ref: "#/components/schemas/String"
        ReplicationGroupDescription:
          $ref: "#/components/schemas/String"
        CacheClusterId:
          $ref: "#/components/schemas/String"
        SnapshotStatus:
          $ref: "#/components/schemas/String"
        SnapshotSource:
          $ref: "#/components/schemas/String"
        CacheNodeType:
          $ref: "#/components/schemas/String"
        Engine:
          $ref: "#/components/schemas/String"
        EngineVersion:
          $ref: "#/components/schemas/String"
        NumCacheNodes:
          $ref: "#/components/schemas/IntegerOptional"
        PreferredAvailabilityZone:
          $ref: "#/components/schemas/String"
        CacheClusterCreateTime:
          $ref: "#/components/schemas/TStamp"
        PreferredMaintenanceWindow:
          $ref: "#/components/schemas/String"
        TopicArn:
          $ref: "#/components/schemas/String"
        Port:
          $ref: "#/components/schemas/IntegerOptional"
        CacheParameterGroupName:
          $ref: "#/components/schemas/String"
        CacheSubnetGroupName:
          $ref: "#/components/schemas/String"
        VpcId:
          $ref: "#/components/schemas/String"
        AutoMinorVersionUpgrade:
          $ref: "#/components/schemas/Boolean"
        SnapshotRetentionLimit:
          $ref: "#/components/schemas/IntegerOptional"
        SnapshotWindow:
          $ref: "#/components/schemas/String"
        NumNodeGroups:
          $ref: "#/components/schemas/IntegerOptional"
        AutomaticFailover:
          $ref: "#/components/schemas/AutomaticFailoverStatus"
        NodeSnapshots:
          $ref: "#/components/schemas/NodeSnapshotList"
        KmsKeyId:
          $ref: "#/components/schemas/String"
      description: Represents a copy of an entire Redis cluster as of the time when the
        snapshot was taken.
    SecurityGroupIdsList:
      type: array
      items:
        $ref: "#/components/schemas/String"
    SnapshotArnsList:
      type: array
      items:
        $ref: "#/components/schemas/String"
    CreateCacheClusterMessage:
      type: object
      required:
        - CacheClusterId
      properties:
        CacheClusterId:
          $ref: "#/components/schemas/String"
        ReplicationGroupId:
          $ref: "#/components/schemas/String"
        AZMode:
          $ref: "#/components/schemas/AZMode"
        PreferredAvailabilityZone:
          $ref: "#/components/schemas/String"
        PreferredAvailabilityZones:
          $ref: "#/components/schemas/PreferredAvailabilityZoneList"
        NumCacheNodes:
          $ref: "#/components/schemas/IntegerOptional"
        CacheNodeType:
          $ref: "#/components/schemas/String"
        Engine:
          $ref: "#/components/schemas/String"
        EngineVersion:
          $ref: "#/components/schemas/String"
        CacheParameterGroupName:
          $ref: "#/components/schemas/String"
        CacheSubnetGroupName:
          $ref: "#/components/schemas/String"
        CacheSecurityGroupNames:
          $ref: "#/components/schemas/CacheSecurityGroupNameList"
        SecurityGroupIds:
          $ref: "#/components/schemas/SecurityGroupIdsList"
        Tags:
          $ref: "#/components/schemas/TagList"
        SnapshotArns:
          $ref: "#/components/schemas/SnapshotArnsList"
        SnapshotName:
          $ref: "#/components/schemas/String"
        PreferredMaintenanceWindow:
          $ref: "#/components/schemas/String"
        Port:
          $ref: "#/components/schemas/IntegerOptional"
        NotificationTopicArn:
          $ref: "#/components/schemas/String"
        AutoMinorVersionUpgrade:
          $ref: "#/components/schemas/BooleanOptional"
        SnapshotRetentionLimit:
          $ref: "#/components/schemas/IntegerOptional"
        SnapshotWindow:
          $ref: "#/components/schemas/String"
        AuthToken:
          $ref: "#/components/schemas/String"
      description: Represents the input of a CreateCacheCluster operation.
    CreateCacheParameterGroupMessage:
      type: object
      required:
        - CacheParameterGroupName
        - CacheParameterGroupFamily
        - Description
      properties:
        CacheParameterGroupName:
          $ref: "#/components/schemas/String"
        CacheParameterGroupFamily:
          $ref: "#/components/schemas/String"
        Description:
          $ref: "#/components/schemas/String"
      description: Represents the input of a <code>CreateCacheParameterGroup</code>
        operation.
    CreateCacheSecurityGroupMessage:
      type: object
      required:
        - CacheSecurityGroupName
        - Description
      properties:
        CacheSecurityGroupName:
          $ref: "#/components/schemas/String"
        Description:
          $ref: "#/components/schemas/String"
      description: Represents the input of a <code>CreateCacheSecurityGroup</code>
        operation.
    SubnetIdentifierList:
      type: array
      items:
        $ref: "#/components/schemas/String"
    CreateCacheSubnetGroupMessage:
      type: object
      required:
        - CacheSubnetGroupName
        - CacheSubnetGroupDescription
        - SubnetIds
      properties:
        CacheSubnetGroupName:
          $ref: "#/components/schemas/String"
        CacheSubnetGroupDescription:
          $ref: "#/components/schemas/String"
        SubnetIds:
          $ref: "#/components/schemas/SubnetIdentifierList"
      description: Represents the input of a <code>CreateCacheSubnetGroup</code> operation.
    NodeGroupConfigurationList:
      type: array
      items:
        $ref: "#/components/schemas/NodeGroupConfiguration"
    CreateReplicationGroupMessage:
      type: object
      required:
        - ReplicationGroupId
        - ReplicationGroupDescription
      properties:
        ReplicationGroupId:
          $ref: "#/components/schemas/String"
        ReplicationGroupDescription:
          $ref: "#/components/schemas/String"
        PrimaryClusterId:
          $ref: "#/components/schemas/String"
        AutomaticFailoverEnabled:
          $ref: "#/components/schemas/BooleanOptional"
        NumCacheClusters:
          $ref: "#/components/schemas/IntegerOptional"
        PreferredCacheClusterAZs:
          $ref: "#/components/schemas/AvailabilityZonesList"
        NumNodeGroups:
          $ref: "#/components/schemas/IntegerOptional"
        ReplicasPerNodeGroup:
          $ref: "#/components/schemas/IntegerOptional"
        NodeGroupConfiguration:
          $ref: "#/components/schemas/NodeGroupConfigurationList"
        CacheNodeType:
          $ref: "#/components/schemas/String"
        Engine:
          $ref: "#/components/schemas/String"
        EngineVersion:
          $ref: "#/components/schemas/String"
        CacheParameterGroupName:
          $ref: "#/components/schemas/String"
        CacheSubnetGroupName:
          $ref: "#/components/schemas/String"
        CacheSecurityGroupNames:
          $ref: "#/components/schemas/CacheSecurityGroupNameList"
        SecurityGroupIds:
          $ref: "#/components/schemas/SecurityGroupIdsList"
        Tags:
          $ref: "#/components/schemas/TagList"
        SnapshotArns:
          $ref: "#/components/schemas/SnapshotArnsList"
        SnapshotName:
          $ref: "#/components/schemas/String"
        PreferredMaintenanceWindow:
          $ref: "#/components/schemas/String"
        Port:
          $ref: "#/components/schemas/IntegerOptional"
        NotificationTopicArn:
          $ref: "#/components/schemas/String"
        AutoMinorVersionUpgrade:
          $ref: "#/components/schemas/BooleanOptional"
        SnapshotRetentionLimit:
          $ref: "#/components/schemas/IntegerOptional"
        SnapshotWindow:
          $ref: "#/components/schemas/String"
        AuthToken:
          $ref: "#/components/schemas/String"
        TransitEncryptionEnabled:
          $ref: "#/components/schemas/BooleanOptional"
        AtRestEncryptionEnabled:
          $ref: "#/components/schemas/BooleanOptional"
        KmsKeyId:
          $ref: "#/components/schemas/String"
      description: Represents the input of a <code>CreateReplicationGroup</code> operation.
    ReplicationGroup:
      type: object
      properties:
        ReplicationGroupId:
          $ref: "#/components/schemas/String"
        Description:
          $ref: "#/components/schemas/String"
        Status:
          $ref: "#/components/schemas/String"
        PendingModifiedValues:
          $ref: "#/components/schemas/ReplicationGroupPendingModifiedValues"
        MemberClusters:
          $ref: "#/components/schemas/ClusterIdList"
        NodeGroups:
          $ref: "#/components/schemas/NodeGroupList"
        SnapshottingClusterId:
          $ref: "#/components/schemas/String"
        AutomaticFailover:
          $ref: "#/components/schemas/AutomaticFailoverStatus"
        ConfigurationEndpoint:
          $ref: "#/components/schemas/Endpoint"
        SnapshotRetentionLimit:
          $ref: "#/components/schemas/IntegerOptional"
        SnapshotWindow:
          $ref: "#/components/schemas/String"
        ClusterEnabled:
          $ref: "#/components/schemas/BooleanOptional"
        CacheNodeType:
          $ref: "#/components/schemas/String"
        AuthTokenEnabled:
          $ref: "#/components/schemas/BooleanOptional"
        TransitEncryptionEnabled:
          $ref: "#/components/schemas/BooleanOptional"
        AtRestEncryptionEnabled:
          $ref: "#/components/schemas/BooleanOptional"
        KmsKeyId:
          $ref: "#/components/schemas/String"
      description: Contains all of the attributes of a specific Redis replication group.
    CreateSnapshotMessage:
      type: object
      required:
        - SnapshotName
      properties:
        ReplicationGroupId:
          $ref: "#/components/schemas/String"
        CacheClusterId:
          $ref: "#/components/schemas/String"
        SnapshotName:
          $ref: "#/components/schemas/String"
        KmsKeyId:
          $ref: "#/components/schemas/String"
      description: Represents the input of a <code>CreateSnapshot</code> operation.
    ReplicaConfigurationList:
      type: array
      items:
        $ref: "#/components/schemas/ConfigureShard"
    RemoveReplicasList:
      type: array
      items:
        $ref: "#/components/schemas/String"
    DecreaseReplicaCountMessage:
      type: object
      required:
        - ReplicationGroupId
        - ApplyImmediately
      properties:
        ReplicationGroupId:
          $ref: "#/components/schemas/String"
        NewReplicaCount:
          $ref: "#/components/schemas/IntegerOptional"
        ReplicaConfiguration:
          $ref: "#/components/schemas/ReplicaConfigurationList"
        ReplicasToRemove:
          $ref: "#/components/schemas/RemoveReplicasList"
        ApplyImmediately:
          $ref: "#/components/schemas/Boolean"
    DeleteCacheClusterMessage:
      type: object
      required:
        - CacheClusterId
      properties:
        CacheClusterId:
          $ref: "#/components/schemas/String"
        FinalSnapshotIdentifier:
          $ref: "#/components/schemas/String"
      description: Represents the input of a <code>DeleteCacheCluster</code> operation.
    DeleteCacheParameterGroupMessage:
      type: object
      required:
        - CacheParameterGroupName
      properties:
        CacheParameterGroupName:
          $ref: "#/components/schemas/String"
      description: Represents the input of a <code>DeleteCacheParameterGroup</code>
        operation.
    DeleteCacheSecurityGroupMessage:
      type: object
      required:
        - CacheSecurityGroupName
      properties:
        CacheSecurityGroupName:
          $ref: "#/components/schemas/String"
      description: Represents the input of a <code>DeleteCacheSecurityGroup</code>
        operation.
    DeleteCacheSubnetGroupMessage:
      type: object
      required:
        - CacheSubnetGroupName
      properties:
        CacheSubnetGroupName:
          $ref: "#/components/schemas/String"
      description: Represents the input of a <code>DeleteCacheSubnetGroup</code> operation.
    DeleteReplicationGroupMessage:
      type: object
      required:
        - ReplicationGroupId
      properties:
        ReplicationGroupId:
          $ref: "#/components/schemas/String"
        RetainPrimaryCluster:
          $ref: "#/components/schemas/BooleanOptional"
        FinalSnapshotIdentifier:
          $ref: "#/components/schemas/String"
      description: Represents the input of a <code>DeleteReplicationGroup</code> operation.
    DeleteSnapshotMessage:
      type: object
      required:
        - SnapshotName
      properties:
        SnapshotName:
          $ref: "#/components/schemas/String"
      description: Represents the input of a <code>DeleteSnapshot</code> operation.
    DescribeCacheClustersMessage:
      type: object
      properties:
        CacheClusterId:
          $ref: "#/components/schemas/String"
        MaxRecords:
          $ref: "#/components/schemas/IntegerOptional"
        Marker:
          $ref: "#/components/schemas/String"
        ShowCacheNodeInfo:
          $ref: "#/components/schemas/BooleanOptional"
        ShowCacheClustersNotInReplicationGroups:
          $ref: "#/components/schemas/BooleanOptional"
      description: Represents the input of a <code>DescribeCacheClusters</code> operation.
    DescribeCacheEngineVersionsMessage:
      type: object
      properties:
        Engine:
          $ref: "#/components/schemas/String"
        EngineVersion:
          $ref: "#/components/schemas/String"
        CacheParameterGroupFamily:
          $ref: "#/components/schemas/String"
        MaxRecords:
          $ref: "#/components/schemas/IntegerOptional"
        Marker:
          $ref: "#/components/schemas/String"
        DefaultOnly:
          $ref: "#/components/schemas/Boolean"
      description: Represents the input of a <code>DescribeCacheEngineVersions</code>
        operation.
    DescribeCacheParameterGroupsMessage:
      type: object
      properties:
        CacheParameterGroupName:
          $ref: "#/components/schemas/String"
        MaxRecords:
          $ref: "#/components/schemas/IntegerOptional"
        Marker:
          $ref: "#/components/schemas/String"
      description: Represents the input of a <code>DescribeCacheParameterGroups</code>
        operation.
    DescribeCacheParametersMessage:
      type: object
      required:
        - CacheParameterGroupName
      properties:
        CacheParameterGroupName:
          $ref: "#/components/schemas/String"
        Source:
          $ref: "#/components/schemas/String"
        MaxRecords:
          $ref: "#/components/schemas/IntegerOptional"
        Marker:
          $ref: "#/components/schemas/String"
      description: Represents the input of a <code>DescribeCacheParameters</code> operation.
    DescribeCacheSecurityGroupsMessage:
      type: object
      properties:
        CacheSecurityGroupName:
          $ref: "#/components/schemas/String"
        MaxRecords:
          $ref: "#/components/schemas/IntegerOptional"
        Marker:
          $ref: "#/components/schemas/String"
      description: Represents the input of a <code>DescribeCacheSecurityGroups</code>
        operation.
    DescribeCacheSubnetGroupsMessage:
      type: object
      properties:
        CacheSubnetGroupName:
          $ref: "#/components/schemas/String"
        MaxRecords:
          $ref: "#/components/schemas/IntegerOptional"
        Marker:
          $ref: "#/components/schemas/String"
      description: Represents the input of a <code>DescribeCacheSubnetGroups</code>
        operation.
    DescribeEngineDefaultParametersMessage:
      type: object
      required:
        - CacheParameterGroupFamily
      properties:
        CacheParameterGroupFamily:
          $ref: "#/components/schemas/String"
        MaxRecords:
          $ref: "#/components/schemas/IntegerOptional"
        Marker:
          $ref: "#/components/schemas/String"
      description: Represents the input of a <code>DescribeEngineDefaultParameters</code>
        operation.
    EngineDefaults:
      type: object
      properties:
        CacheParameterGroupFamily:
          $ref: "#/components/schemas/String"
        Marker:
          $ref: "#/components/schemas/String"
        Parameters:
          $ref: "#/components/schemas/ParametersList"
        CacheNodeTypeSpecificParameters:
          $ref: "#/components/schemas/CacheNodeTypeSpecificParametersList"
      description: Represents the output of a <code>DescribeEngineDefaultParameters</code>
        operation.
    SourceType:
      type: string
      enum:
        - cache-cluster
        - cache-parameter-group
        - cache-security-group
        - cache-subnet-group
        - replication-group
    DescribeEventsMessage:
      type: object
      properties:
        SourceIdentifier:
          $ref: "#/components/schemas/String"
        SourceType:
          $ref: "#/components/schemas/SourceType"
        StartTime:
          $ref: "#/components/schemas/TStamp"
        EndTime:
          $ref: "#/components/schemas/TStamp"
        Duration:
          $ref: "#/components/schemas/IntegerOptional"
        MaxRecords:
          $ref: "#/components/schemas/IntegerOptional"
        Marker:
          $ref: "#/components/schemas/String"
      description: Represents the input of a <code>DescribeEvents</code> operation.
    DescribeReplicationGroupsMessage:
      type: object
      properties:
        ReplicationGroupId:
          $ref: "#/components/schemas/String"
        MaxRecords:
          $ref: "#/components/schemas/IntegerOptional"
        Marker:
          $ref: "#/components/schemas/String"
      description: Represents the input of a <code>DescribeReplicationGroups</code>
        operation.
    DescribeReservedCacheNodesMessage:
      type: object
      properties:
        ReservedCacheNodeId:
          $ref: "#/components/schemas/String"
        ReservedCacheNodesOfferingId:
          $ref: "#/components/schemas/String"
        CacheNodeType:
          $ref: "#/components/schemas/String"
        Duration:
          $ref: "#/components/schemas/String"
        ProductDescription:
          $ref: "#/components/schemas/String"
        OfferingType:
          $ref: "#/components/schemas/String"
        MaxRecords:
          $ref: "#/components/schemas/IntegerOptional"
        Marker:
          $ref: "#/components/schemas/String"
      description: Represents the input of a <code>DescribeReservedCacheNodes</code>
        operation.
    DescribeReservedCacheNodesOfferingsMessage:
      type: object
      properties:
        ReservedCacheNodesOfferingId:
          $ref: "#/components/schemas/String"
        CacheNodeType:
          $ref: "#/components/schemas/String"
        Duration:
          $ref: "#/components/schemas/String"
        ProductDescription:
          $ref: "#/components/schemas/String"
        OfferingType:
          $ref: "#/components/schemas/String"
        MaxRecords:
          $ref: "#/components/schemas/IntegerOptional"
        Marker:
          $ref: "#/components/schemas/String"
      description: Represents the input of a
        <code>DescribeReservedCacheNodesOfferings</code> operation.
    ServiceUpdateStatusList:
      type: array
      items:
        $ref: "#/components/schemas/ServiceUpdateStatus"
      maxItems: 3
    DescribeServiceUpdatesMessage:
      type: object
      properties:
        ServiceUpdateName:
          $ref: "#/components/schemas/String"
        ServiceUpdateStatus:
          $ref: "#/components/schemas/ServiceUpdateStatusList"
        MaxRecords:
          $ref: "#/components/schemas/IntegerOptional"
        Marker:
          $ref: "#/components/schemas/String"
    SnapshotList:
      type: array
      items:
        $ref: "#/components/schemas/Snapshot"
    DescribeSnapshotsMessage:
      type: object
      properties:
        ReplicationGroupId:
          $ref: "#/components/schemas/String"
        CacheClusterId:
          $ref: "#/components/schemas/String"
        SnapshotName:
          $ref: "#/components/schemas/String"
        SnapshotSource:
          $ref: "#/components/schemas/String"
        Marker:
          $ref: "#/components/schemas/String"
        MaxRecords:
          $ref: "#/components/schemas/IntegerOptional"
        ShowNodeGroupConfig:
          $ref: "#/components/schemas/BooleanOptional"
      description: Represents the input of a <code>DescribeSnapshotsMessage</code>
        operation.
    TimeRangeFilter:
      type: object
      properties:
        StartTime:
          $ref: "#/components/schemas/TStamp"
        EndTime:
          $ref: "#/components/schemas/TStamp"
      description: Filters update actions from the service updates that are in available
        status during the time range.
    UpdateActionStatusList:
      type: array
      items:
        $ref: "#/components/schemas/UpdateActionStatus"
      maxItems: 6
    DescribeUpdateActionsMessage:
      type: object
      properties:
        ServiceUpdateName:
          $ref: "#/components/schemas/String"
        ReplicationGroupIds:
          $ref: "#/components/schemas/ReplicationGroupIdList"
        ServiceUpdateStatus:
          $ref: "#/components/schemas/ServiceUpdateStatusList"
        ServiceUpdateTimeRange:
          $ref: "#/components/schemas/TimeRangeFilter"
        UpdateActionStatus:
          $ref: "#/components/schemas/UpdateActionStatusList"
        ShowNodeLevelUpdateStatus:
          $ref: "#/components/schemas/BooleanOptional"
        MaxRecords:
          $ref: "#/components/schemas/IntegerOptional"
        Marker:
          $ref: "#/components/schemas/String"
    Double:
      type: number
      format: double
    EC2SecurityGroup:
      type: object
      properties:
        Status:
          $ref: "#/components/schemas/String"
        EC2SecurityGroupName:
          $ref: "#/components/schemas/String"
        EC2SecurityGroupOwnerId:
          $ref: "#/components/schemas/String"
      description: Provides ownership and status information for an Amazon EC2 security
        group.
    Event:
      type: object
      properties:
        SourceIdentifier:
          $ref: "#/components/schemas/String"
        SourceType:
          $ref: "#/components/schemas/SourceType"
        Message:
          $ref: "#/components/schemas/String"
        Date:
          $ref: "#/components/schemas/TStamp"
      description: Represents a single occurrence of something interesting within the
        system. Some examples of events are creating a cluster, adding or
        removing a cache node, or rebooting a node.
    EventList:
      type: array
      items:
        $ref: "#/components/schemas/Event"
    IncreaseReplicaCountMessage:
      type: object
      required:
        - ReplicationGroupId
        - ApplyImmediately
      properties:
        ReplicationGroupId:
          $ref: "#/components/schemas/String"
        NewReplicaCount:
          $ref: "#/components/schemas/IntegerOptional"
        ReplicaConfiguration:
          $ref: "#/components/schemas/ReplicaConfigurationList"
        ApplyImmediately:
          $ref: "#/components/schemas/Boolean"
    KeyList:
      type: array
      items:
        $ref: "#/components/schemas/String"
    ListAllowedNodeTypeModificationsMessage:
      type: object
      properties:
        CacheClusterId:
          $ref: "#/components/schemas/String"
        ReplicationGroupId:
          $ref: "#/components/schemas/String"
      description: The input parameters for the
        <code>ListAllowedNodeTypeModifications</code> operation.
    ListTagsForResourceMessage:
      type: object
      required:
        - ResourceName
      properties:
        ResourceName:
          $ref: "#/components/schemas/String"
      description: The input parameters for the <code>ListTagsForResource</code> operation.
    ModifyCacheClusterMessage:
      type: object
      required:
        - CacheClusterId
      properties:
        CacheClusterId:
          $ref: "#/components/schemas/String"
        NumCacheNodes:
          $ref: "#/components/schemas/IntegerOptional"
        CacheNodeIdsToRemove:
          $ref: "#/components/schemas/CacheNodeIdsList"
        AZMode:
          $ref: "#/components/schemas/AZMode"
        NewAvailabilityZones:
          $ref: "#/components/schemas/PreferredAvailabilityZoneList"
        CacheSecurityGroupNames:
          $ref: "#/components/schemas/CacheSecurityGroupNameList"
        SecurityGroupIds:
          $ref: "#/components/schemas/SecurityGroupIdsList"
        PreferredMaintenanceWindow:
          $ref: "#/components/schemas/String"
        NotificationTopicArn:
          $ref: "#/components/schemas/String"
        CacheParameterGroupName:
          $ref: "#/components/schemas/String"
        NotificationTopicStatus:
          $ref: "#/components/schemas/String"
        ApplyImmediately:
          $ref: "#/components/schemas/Boolean"
        EngineVersion:
          $ref: "#/components/schemas/String"
        AutoMinorVersionUpgrade:
          $ref: "#/components/schemas/BooleanOptional"
        SnapshotRetentionLimit:
          $ref: "#/components/schemas/IntegerOptional"
        SnapshotWindow:
          $ref: "#/components/schemas/String"
        CacheNodeType:
          $ref: "#/components/schemas/String"
      description: Represents the input of a <code>ModifyCacheCluster</code> operation.
    ParameterNameValueList:
      type: array
      items:
        $ref: "#/components/schemas/ParameterNameValue"
    ModifyCacheParameterGroupMessage:
      type: object
      required:
        - CacheParameterGroupName
        - ParameterNameValues
      properties:
        CacheParameterGroupName:
          $ref: "#/components/schemas/String"
        ParameterNameValues:
          $ref: "#/components/schemas/ParameterNameValueList"
      description: Represents the input of a <code>ModifyCacheParameterGroup</code>
        operation.
    ModifyCacheSubnetGroupMessage:
      type: object
      required:
        - CacheSubnetGroupName
      properties:
        CacheSubnetGroupName:
          $ref: "#/components/schemas/String"
        CacheSubnetGroupDescription:
          $ref: "#/components/schemas/String"
        SubnetIds:
          $ref: "#/components/schemas/SubnetIdentifierList"
      description: Represents the input of a <code>ModifyCacheSubnetGroup</code> operation.
    ModifyReplicationGroupMessage:
      type: object
      required:
        - ReplicationGroupId
      properties:
        ReplicationGroupId:
          $ref: "#/components/schemas/String"
        ReplicationGroupDescription:
          $ref: "#/components/schemas/String"
        PrimaryClusterId:
          $ref: "#/components/schemas/String"
        SnapshottingClusterId:
          $ref: "#/components/schemas/String"
        AutomaticFailoverEnabled:
          $ref: "#/components/schemas/BooleanOptional"
        CacheSecurityGroupNames:
          $ref: "#/components/schemas/CacheSecurityGroupNameList"
        SecurityGroupIds:
          $ref: "#/components/schemas/SecurityGroupIdsList"
        PreferredMaintenanceWindow:
          $ref: "#/components/schemas/String"
        NotificationTopicArn:
          $ref: "#/components/schemas/String"
        CacheParameterGroupName:
          $ref: "#/components/schemas/String"
        NotificationTopicStatus:
          $ref: "#/components/schemas/String"
        ApplyImmediately:
          $ref: "#/components/schemas/Boolean"
        EngineVersion:
          $ref: "#/components/schemas/String"
        AutoMinorVersionUpgrade:
          $ref: "#/components/schemas/BooleanOptional"
        SnapshotRetentionLimit:
          $ref: "#/components/schemas/IntegerOptional"
        SnapshotWindow:
          $ref: "#/components/schemas/String"
        CacheNodeType:
          $ref: "#/components/schemas/String"
        NodeGroupId:
          $ref: "#/components/schemas/String"
      description: Represents the input of a <code>ModifyReplicationGroups</code> operation.
    ReshardingConfigurationList:
      type: array
      items:
        $ref: "#/components/schemas/ReshardingConfiguration"
    NodeGroupsToRemoveList:
      type: array
      items:
        $ref: "#/components/schemas/AllowedNodeGroupId"
    NodeGroupsToRetainList:
      type: array
      items:
        $ref: "#/components/schemas/AllowedNodeGroupId"
    ModifyReplicationGroupShardConfigurationMessage:
      type: object
      required:
        - ReplicationGroupId
        - NodeGroupCount
        - ApplyImmediately
      properties:
        ReplicationGroupId:
          $ref: "#/components/schemas/String"
        NodeGroupCount:
          $ref: "#/components/schemas/Integer"
        ApplyImmediately:
          $ref: "#/components/schemas/Boolean"
        ReshardingConfiguration:
          $ref: "#/components/schemas/ReshardingConfigurationList"
        NodeGroupsToRemove:
          $ref: "#/components/schemas/NodeGroupsToRemoveList"
        NodeGroupsToRetain:
          $ref: "#/components/schemas/NodeGroupsToRetainList"
      description: Represents the input for a
        <code>ModifyReplicationGroupShardConfiguration</code> operation.
    NodeGroupMemberList:
      type: array
      items:
        $ref: "#/components/schemas/NodeGroupMember"
    NodeGroup:
      type: object
      properties:
        NodeGroupId:
          $ref: "#/components/schemas/String"
        Status:
          $ref: "#/components/schemas/String"
        PrimaryEndpoint:
          $ref: "#/components/schemas/Endpoint"
        ReaderEndpoint:
          $ref: "#/components/schemas/Endpoint"
        Slots:
          $ref: "#/components/schemas/String"
        NodeGroupMembers:
          $ref: "#/components/schemas/NodeGroupMemberList"
      description: Represents a collection of cache nodes in a replication group. One node
        in the node group is the read/write primary node. All the other nodes
        are read-only Replica nodes.
    NodeGroupList:
      type: array
      items:
        $ref: "#/components/schemas/NodeGroup"
    NodeGroupMember:
      type: object
      properties:
        CacheClusterId:
          $ref: "#/components/schemas/String"
        CacheNodeId:
          $ref: "#/components/schemas/String"
        ReadEndpoint:
          $ref: "#/components/schemas/Endpoint"
        PreferredAvailabilityZone:
          $ref: "#/components/schemas/String"
        CurrentRole:
          $ref: "#/components/schemas/String"
      description: Represents a single node within a node group (shard).
    NodeUpdateStatus:
      type: string
      enum:
        - not-applied
        - waiting-to-start
        - in-progress
        - stopping
        - stopped
        - complete
    NodeUpdateInitiatedBy:
      type: string
      enum:
        - system
        - customer
    NodeGroupMemberUpdateStatus:
      type: object
      properties:
        CacheClusterId:
          $ref: "#/components/schemas/String"
        CacheNodeId:
          $ref: "#/components/schemas/String"
        NodeUpdateStatus:
          $ref: "#/components/schemas/NodeUpdateStatus"
        NodeDeletionDate:
          $ref: "#/components/schemas/TStamp"
        NodeUpdateStartDate:
          $ref: "#/components/schemas/TStamp"
        NodeUpdateEndDate:
          $ref: "#/components/schemas/TStamp"
        NodeUpdateInitiatedBy:
          $ref: "#/components/schemas/NodeUpdateInitiatedBy"
        NodeUpdateInitiatedDate:
          $ref: "#/components/schemas/TStamp"
        NodeUpdateStatusModifiedDate:
          $ref: "#/components/schemas/TStamp"
      description: "The status of the service update on the node group member "
    NodeGroupMemberUpdateStatusList:
      type: array
      items:
        $ref: "#/components/schemas/NodeGroupMemberUpdateStatus"
    NodeGroupUpdateStatus:
      type: object
      properties:
        NodeGroupId:
          $ref: "#/components/schemas/String"
        NodeGroupMemberUpdateStatus:
          $ref: "#/components/schemas/NodeGroupMemberUpdateStatusList"
      description: "The status of the service update on the node group "
    NodeGroupUpdateStatusList:
      type: array
      items:
        $ref: "#/components/schemas/NodeGroupUpdateStatus"
    NodeSnapshot:
      type: object
      properties:
        CacheClusterId:
          $ref: "#/components/schemas/String"
        NodeGroupId:
          $ref: "#/components/schemas/String"
        CacheNodeId:
          $ref: "#/components/schemas/String"
        NodeGroupConfiguration:
          $ref: "#/components/schemas/NodeGroupConfiguration"
        CacheSize:
          $ref: "#/components/schemas/String"
        CacheNodeCreateTime:
          $ref: "#/components/schemas/TStamp"
        SnapshotCreateTime:
          $ref: "#/components/schemas/TStamp"
      description: Represents an individual cache node in a snapshot of a cluster.
    NodeSnapshotList:
      type: array
      items:
        $ref: "#/components/schemas/NodeSnapshot"
    Parameter:
      type: object
      properties:
        ParameterName:
          $ref: "#/components/schemas/String"
        ParameterValue:
          $ref: "#/components/schemas/String"
        Description:
          $ref: "#/components/schemas/String"
        Source:
          $ref: "#/components/schemas/String"
        DataType:
          $ref: "#/components/schemas/String"
        AllowedValues:
          $ref: "#/components/schemas/String"
        IsModifiable:
          $ref: "#/components/schemas/Boolean"
        MinimumEngineVersion:
          $ref: "#/components/schemas/String"
        ChangeType:
          $ref: "#/components/schemas/ChangeType"
      description: Describes an individual setting that controls some aspect of ElastiCache
        behavior.
    PendingAutomaticFailoverStatus:
      type: string
      enum:
        - enabled
        - disabled
    ProcessedUpdateAction:
      type: object
      properties:
        ReplicationGroupId:
          $ref: "#/components/schemas/String"
        ServiceUpdateName:
          $ref: "#/components/schemas/String"
        UpdateActionStatus:
          $ref: "#/components/schemas/UpdateActionStatus"
      description: Update action that has been processed for the corresponding apply/stop
        request
    ProcessedUpdateActionList:
      type: array
      items:
        $ref: "#/components/schemas/ProcessedUpdateAction"
    PurchaseReservedCacheNodesOfferingMessage:
      type: object
      required:
        - ReservedCacheNodesOfferingId
      properties:
        ReservedCacheNodesOfferingId:
          $ref: "#/components/schemas/String"
        ReservedCacheNodeId:
          $ref: "#/components/schemas/String"
        CacheNodeCount:
          $ref: "#/components/schemas/IntegerOptional"
      description: Represents the input of a
        <code>PurchaseReservedCacheNodesOffering</code> operation.
    ReservedCacheNode:
      type: object
      properties:
        ReservedCacheNodeId:
          $ref: "#/components/schemas/String"
        ReservedCacheNodesOfferingId:
          $ref: "#/components/schemas/String"
        CacheNodeType:
          $ref: "#/components/schemas/String"
        StartTime:
          $ref: "#/components/schemas/TStamp"
        Duration:
          $ref: "#/components/schemas/Integer"
        FixedPrice:
          $ref: "#/components/schemas/Double"
        UsagePrice:
          $ref: "#/components/schemas/Double"
        CacheNodeCount:
          $ref: "#/components/schemas/Integer"
        ProductDescription:
          $ref: "#/components/schemas/String"
        OfferingType:
          $ref: "#/components/schemas/String"
        State:
          $ref: "#/components/schemas/String"
        RecurringCharges:
          $ref: "#/components/schemas/RecurringChargeList"
        ReservationARN:
          $ref: "#/components/schemas/String"
      description: Represents the output of a
        <code>PurchaseReservedCacheNodesOffering</code> operation.
    RebootCacheClusterMessage:
      type: object
      required:
        - CacheClusterId
        - CacheNodeIdsToReboot
      properties:
        CacheClusterId:
          $ref: "#/components/schemas/String"
        CacheNodeIdsToReboot:
          $ref: "#/components/schemas/CacheNodeIdsList"
      description: Represents the input of a <code>RebootCacheCluster</code> operation.
    RecurringCharge:
      type: object
      properties:
        RecurringChargeAmount:
          $ref: "#/components/schemas/Double"
        RecurringChargeFrequency:
          $ref: "#/components/schemas/String"
      description: Contains the specific price and frequency of a recurring charges for a
        reserved cache node, or for a reserved cache node offering.
    RecurringChargeList:
      type: array
      items:
        $ref: "#/components/schemas/RecurringCharge"
    RemoveTagsFromResourceMessage:
      type: object
      required:
        - ResourceName
        - TagKeys
      properties:
        ResourceName:
          $ref: "#/components/schemas/String"
        TagKeys:
          $ref: "#/components/schemas/KeyList"
      description: Represents the input of a <code>RemoveTagsFromResource</code> operation.
    ReplicationGroupPendingModifiedValues:
      type: object
      properties:
        PrimaryClusterId:
          $ref: "#/components/schemas/String"
        AutomaticFailoverStatus:
          $ref: "#/components/schemas/PendingAutomaticFailoverStatus"
        Resharding:
          $ref: "#/components/schemas/ReshardingStatus"
      description: The settings to be applied to the Redis replication group, either
        immediately or during the next maintenance window.
    ReplicationGroupList:
      type: array
      items:
        $ref: "#/components/schemas/ReplicationGroup"
    ReshardingStatus:
      type: object
      properties:
        SlotMigration:
          $ref: "#/components/schemas/SlotMigration"
      description: The status of an online resharding operation.
    ReservedCacheNodeList:
      type: array
      items:
        $ref: "#/components/schemas/ReservedCacheNode"
    ReservedCacheNodesOffering:
      type: object
      properties:
        ReservedCacheNodesOfferingId:
          $ref: "#/components/schemas/String"
        CacheNodeType:
          $ref: "#/components/schemas/String"
        Duration:
          $ref: "#/components/schemas/Integer"
        FixedPrice:
          $ref: "#/components/schemas/Double"
        UsagePrice:
          $ref: "#/components/schemas/Double"
        ProductDescription:
          $ref: "#/components/schemas/String"
        OfferingType:
          $ref: "#/components/schemas/String"
        RecurringCharges:
          $ref: "#/components/schemas/RecurringChargeList"
      description: Describes all of the attributes of a reserved cache node offering.
    ReservedCacheNodesOfferingList:
      type: array
      items:
        $ref: "#/components/schemas/ReservedCacheNodesOffering"
    ResetCacheParameterGroupMessage:
      type: object
      required:
        - CacheParameterGroupName
      properties:
        CacheParameterGroupName:
          $ref: "#/components/schemas/String"
        ResetAllParameters:
          $ref: "#/components/schemas/Boolean"
        ParameterNameValues:
          $ref: "#/components/schemas/ParameterNameValueList"
      description: Represents the input of a <code>ResetCacheParameterGroup</code>
        operation.
    SlotMigration:
      type: object
      properties:
        ProgressPercentage:
          $ref: "#/components/schemas/Double"
      description: Represents the progress of an online resharding operation.
    RevokeCacheSecurityGroupIngressMessage:
      type: object
      required:
        - CacheSecurityGroupName
        - EC2SecurityGroupName
        - EC2SecurityGroupOwnerId
      properties:
        CacheSecurityGroupName:
          $ref: "#/components/schemas/String"
        EC2SecurityGroupName:
          $ref: "#/components/schemas/String"
        EC2SecurityGroupOwnerId:
          $ref: "#/components/schemas/String"
      description: Represents the input of a <code>RevokeCacheSecurityGroupIngress</code>
        operation.
    SecurityGroupMembership:
      type: object
      properties:
        SecurityGroupId:
          $ref: "#/components/schemas/String"
        Status:
          $ref: "#/components/schemas/String"
      description: Represents a single cache security group and its status.
    ServiceUpdateSeverity:
      type: string
      enum:
        - critical
        - important
        - medium
        - low
    ServiceUpdateType:
      type: string
      enum:
        - security-update
    ServiceUpdate:
      type: object
      properties:
        ServiceUpdateName:
          $ref: "#/components/schemas/String"
        ServiceUpdateReleaseDate:
          $ref: "#/components/schemas/TStamp"
        ServiceUpdateEndDate:
          $ref: "#/components/schemas/TStamp"
        ServiceUpdateSeverity:
          $ref: "#/components/schemas/ServiceUpdateSeverity"
        ServiceUpdateRecommendedApplyByDate:
          $ref: "#/components/schemas/TStamp"
        ServiceUpdateStatus:
          $ref: "#/components/schemas/ServiceUpdateStatus"
        ServiceUpdateDescription:
          $ref: "#/components/schemas/String"
        ServiceUpdateType:
          $ref: "#/components/schemas/ServiceUpdateType"
        Engine:
          $ref: "#/components/schemas/String"
        EngineVersion:
          $ref: "#/components/schemas/String"
        AutoUpdateAfterRecommendedApplyByDate:
          $ref: "#/components/schemas/BooleanOptional"
        EstimatedUpdateTime:
          $ref: "#/components/schemas/String"
      description: An update that you can apply to your Redis clusters.
    ServiceUpdateList:
      type: array
      items:
        $ref: "#/components/schemas/ServiceUpdate"
    SlaMet:
      type: string
      enum:
        - yes
        - no
        - n/a
    Subnet:
      type: object
      properties:
        SubnetIdentifier:
          $ref: "#/components/schemas/String"
        SubnetAvailabilityZone:
          $ref: "#/components/schemas/AvailabilityZone"
      description: Represents the subnet associated with a cluster. This parameter refers
        to subnets defined in Amazon Virtual Private Cloud (Amazon VPC) and used
        with ElastiCache.
    TestFailoverMessage:
      type: object
      required:
        - ReplicationGroupId
        - NodeGroupId
      properties:
        ReplicationGroupId:
          $ref: "#/components/schemas/String"
        NodeGroupId:
          $ref: "#/components/schemas/AllowedNodeGroupId"
    UnprocessedUpdateAction:
      type: object
      properties:
        ReplicationGroupId:
          $ref: "#/components/schemas/String"
        ServiceUpdateName:
          $ref: "#/components/schemas/String"
        ErrorType:
          $ref: "#/components/schemas/String"
        ErrorMessage:
          $ref: "#/components/schemas/String"
      description: Update action that has failed to be processed for the corresponding
        apply/stop request
    UnprocessedUpdateActionList:
      type: array
      items:
        $ref: "#/components/schemas/UnprocessedUpdateAction"
    UpdateAction:
      type: object
      properties:
        ReplicationGroupId:
          $ref: "#/components/schemas/String"
        ServiceUpdateName:
          $ref: "#/components/schemas/String"
        ServiceUpdateReleaseDate:
          $ref: "#/components/schemas/TStamp"
        ServiceUpdateSeverity:
          $ref: "#/components/schemas/ServiceUpdateSeverity"
        ServiceUpdateStatus:
          $ref: "#/components/schemas/ServiceUpdateStatus"
        ServiceUpdateRecommendedApplyByDate:
          $ref: "#/components/schemas/TStamp"
        ServiceUpdateType:
          $ref: "#/components/schemas/ServiceUpdateType"
        UpdateActionAvailableDate:
          $ref: "#/components/schemas/TStamp"
        UpdateActionStatus:
          $ref: "#/components/schemas/UpdateActionStatus"
        NodesUpdated:
          $ref: "#/components/schemas/String"
        UpdateActionStatusModifiedDate:
          $ref: "#/components/schemas/TStamp"
        SlaMet:
          $ref: "#/components/schemas/SlaMet"
        NodeGroupUpdateStatus:
          $ref: "#/components/schemas/NodeGroupUpdateStatusList"
        EstimatedUpdateTime:
          $ref: "#/components/schemas/String"
      description: The status of the service update for a specific replication group
    UpdateActionList:
      type: array
      items:
        $ref: "#/components/schemas/UpdateAction"
