openapi: 3.0.0
info:
  version: 2018-07-26
  x-release: v4
  title: Amazon Pinpoint Email Service
  description: <fullname>Amazon Pinpoint Email Service</fullname> <p>This document contains
    reference information for the <a
    href="https://aws.amazon.com/pinpoint">Amazon Pinpoint</a> Email API,
    version 1.0. This document is best used in conjunction with the <a
    href="https://docs.aws.amazon.com/pinpoint/latest/developerguide/welcome.html">Amazon
    Pinpoint Developer Guide</a>.</p> <p>The Amazon Pinpoint Email API is
    available in several AWS Regions and it provides an endpoint for each of
    these Regions. For a list of all the Regions and endpoints where the API is
    currently available, see <a
    href="https://docs.aws.amazon.com/general/latest/gr/rande.html#pinpoint_region">AWS
    Regions and Endpoints</a> in the <i>Amazon Web Services General
    Reference</i>.</p> <p>In each Region, AWS maintains multiple Availability
    Zones. These Availability Zones are physically isolated from each other, but
    are united by private, low-latency, high-throughput, and highly redundant
    network connections. These Availability Zones enable us to provide very high
    levels of availability and redundancy, while also minimizing latency. To
    learn more about the number of Availability Zones that are available in each
    Region, see <a
    href="http://aws.amazon.com/about-aws/global-infrastructure/">AWS Global
    Infrastructure</a>.</p>
  x-logo:
    url: https://twitter.com/awscloud/profile_image?size=original
    backgroundColor: "#FFFFFF"
  termsOfService: https://aws.amazon.com/service-terms/
  contact:
    name: Mike Ralphson
    email: mike.ralphson@gmail.com
    url: https://github.com/mermade/aws2openapi
    x-twitter: PermittedSoc
  license:
    name: Apache 2.0 License
    url: http://www.apache.org/licenses/
  x-providerName: amazonaws.com
  x-serviceName: pinpoint-email
  x-origin:
    - contentType: application/json
      url: https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/pinpoint-email-2018-07-26.normal.json
      converter:
        url: https://github.com/mermade/aws2openapi
        version: 1.0.0
      x-apisguru-direct: true
  x-apiClientRegistration:
    url: https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct
  x-apisguru-categories:
    - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: https://docs.aws.amazon.com/email/
x-hasEquivalentPaths: true
security:
  - hmac: []
paths:
  /v1/email/configuration-sets:
    post:
      operationId: CreateConfigurationSet
      description: "Create a configuration set. <i>Configuration sets</i> are groups of
        rules that you can apply to the emails you send using Amazon Pinpoint.
        You apply a configuration set to an email by including a reference to
        the configuration set in the headers of the email. When you apply a
        configuration set to an email, all of the rules in that configuration
        set are applied to the email. "
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateConfigurationSetResponse"
        "480":
          description: AlreadyExistsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AlreadyExistsException"
        "481":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "482":
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TooManyRequestsException"
        "483":
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
        "484":
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequestException"
        "485":
          description: ConcurrentModificationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConcurrentModificationException"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - ConfigurationSetName
                - TrackingOptions
              properties:
                ConfigurationSetName:
                  description: <p>The name of a configuration set.</p> <p>In Amazon
                    Pinpoint, <i>configuration sets</i> are groups of rules that
                    you can apply to the emails you send. You apply a
                    configuration set to an email by including a reference to
                    the configuration set in the headers of the email. When you
                    apply a configuration set to an email, all of the rules in
                    that configuration set are applied to the email.</p>
                  type: string
                TrackingOptions:
                  description: <p>An object that defines the tracking options for a
                    configuration set. When you use Amazon Pinpoint to send an
                    email, it contains an invisible image that's used to track
                    when recipients open your email. If your email contains
                    links, those links are changed slightly in order to track
                    when recipients click them.</p> <p>These images and links
                    include references to a domain operated by AWS. You can
                    optionally configure Amazon Pinpoint to use a domain that
                    you operate for these images and links.</p>
                  type: object
                  properties:
                    CustomRedirectDomain:
                      $ref: "#/components/schemas/CustomRedirectDomain"
                DeliveryOptions:
                  description: Used to associate a configuration set with a dedicated IP
                    pool.
                  type: object
                  properties:
                    TlsPolicy:
                      $ref: "#/components/schemas/TlsPolicy"
                    SendingPoolName:
                      $ref: "#/components/schemas/PoolName"
                ReputationOptions:
                  description: "Enable or disable collection of reputation metrics for
                    emails that you send using this configuration set in the
                    current AWS Region. "
                  type: object
                  properties:
                    ReputationMetricsEnabled:
                      $ref: "#/components/schemas/Enabled"
                    LastFreshStart:
                      $ref: "#/components/schemas/LastFreshStart"
                SendingOptions:
                  description: Used to enable or disable email sending for messages that
                    use this configuration set in the current AWS Region.
                  type: object
                  properties:
                    SendingEnabled:
                      $ref: "#/components/schemas/Enabled"
                Tags:
                  description: An array of objects that define the tags (keys and values)
                    that you want to associate with the configuration set.
                  type: array
                  items:
                    $ref: "#/components/schemas/Tag"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    get:
      operationId: ListConfigurationSets
      description: <p>List all of the configuration sets associated with your Amazon
        Pinpoint account in the current region.</p> <p>In Amazon Pinpoint,
        <i>configuration sets</i> are groups of rules that you can apply to the
        emails you send. You apply a configuration set to an email by including
        a reference to the configuration set in the headers of the email. When
        you apply a configuration set to an email, all of the rules in that
        configuration set are applied to the email.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListConfigurationSetsResponse"
        "480":
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TooManyRequestsException"
        "481":
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequestException"
      parameters:
        - name: NextToken
          in: query
          required: false
          description: A token returned from a previous call to
            <code>ListConfigurationSets</code> to indicate the position in the
            list of configuration sets.
          schema:
            type: string
        - name: PageSize
          in: query
          required: false
          description: The number of results to show in a single call to
            <code>ListConfigurationSets</code>. If the number of results is
            larger than the number you specified in this parameter, then the
            response includes a <code>NextToken</code> element, which you can
            use to obtain additional results.
          schema:
            type: integer
  "/v1/email/configuration-sets/{ConfigurationSetName}/event-destinations":
    post:
      operationId: CreateConfigurationSetEventDestination
      description: <p>Create an event destination. In Amazon Pinpoint, <i>events</i>
        include message sends, deliveries, opens, clicks, bounces, and
        complaints. <i>Event destinations</i> are places that you can send
        information about these events to. For example, you can send event data
        to Amazon SNS to receive notifications when you receive bounces or
        complaints, or you can use Amazon Kinesis Data Firehose to stream data
        to Amazon S3 for long-term storage.</p> <p>A single configuration set
        can include more than one event destination.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateConfigurationSetEventDestinationR\
                  esponse"
        "480":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "481":
          description: AlreadyExistsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AlreadyExistsException"
        "482":
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
        "483":
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TooManyRequestsException"
        "484":
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequestException"
      parameters:
        - name: ConfigurationSetName
          in: path
          required: true
          description: <p>The name of a configuration set.</p> <p>In Amazon Pinpoint,
            <i>configuration sets</i> are groups of rules that you can apply to
            the emails you send. You apply a configuration set to an email by
            including a reference to the configuration set in the headers of the
            email. When you apply a configuration set to an email, all of the
            rules in that configuration set are applied to the email.</p>
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - EventDestinationName
                - EventDestination
              properties:
                EventDestinationName:
                  description: <p>The name of an event destination.</p> <p>In Amazon
                    Pinpoint, <i>events</i> include message sends, deliveries,
                    opens, clicks, bounces, and complaints. <i>Event
                    destinations</i> are places that you can send information
                    about these events to. For example, you can send event data
                    to Amazon SNS to receive notifications when you receive
                    bounces or complaints, or you can use Amazon Kinesis Data
                    Firehose to stream data to Amazon S3 for long-term
                    storage.</p>
                  type: string
                EventDestination:
                  description: An object that defines the event destination. Specifically,
                    it defines which services receive events from emails sent
                    using the configuration set that the event destination is
                    associated with. Also defines the types of events that are
                    sent to the event destination.
                  type: object
                  properties:
                    Enabled:
                      $ref: "#/components/schemas/Enabled"
                    MatchingEventTypes:
                      $ref: "#/components/schemas/EventTypes"
                    KinesisFirehoseDestination:
                      $ref: "#/components/schemas/KinesisFirehoseDestination"
                    CloudWatchDestination:
                      $ref: "#/components/schemas/CloudWatchDestination"
                    SnsDestination:
                      $ref: "#/components/schemas/SnsDestination"
                    PinpointDestination:
                      $ref: "#/components/schemas/PinpointDestination"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    get:
      operationId: GetConfigurationSetEventDestinations
      description: <p>Retrieve a list of event destinations that are associated with a
        configuration set.</p> <p>In Amazon Pinpoint, <i>events</i> include
        message sends, deliveries, opens, clicks, bounces, and complaints.
        <i>Event destinations</i> are places that you can send information about
        these events to. For example, you can send event data to Amazon SNS to
        receive notifications when you receive bounces or complaints, or you can
        use Amazon Kinesis Data Firehose to stream data to Amazon S3 for
        long-term storage.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetConfigurationSetEventDestinationsRes\
                  ponse"
        "480":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "481":
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TooManyRequestsException"
        "482":
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequestException"
      parameters:
        - name: ConfigurationSetName
          in: path
          required: true
          description: <p>The name of a configuration set.</p> <p>In Amazon Pinpoint,
            <i>configuration sets</i> are groups of rules that you can apply to
            the emails you send. You apply a configuration set to an email by
            including a reference to the configuration set in the headers of the
            email. When you apply a configuration set to an email, all of the
            rules in that configuration set are applied to the email.</p>
          schema:
            type: string
  /v1/email/dedicated-ip-pools:
    post:
      operationId: CreateDedicatedIpPool
      description: Create a new pool of dedicated IP addresses. A pool can include one or
        more dedicated IP addresses that are associated with your Amazon
        Pinpoint account. You can associate a pool with a configuration set.
        When you send an email that uses that configuration set, Amazon Pinpoint
        sends it using only the IP addresses in the associated pool.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateDedicatedIpPoolResponse"
        "480":
          description: AlreadyExistsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AlreadyExistsException"
        "481":
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
        "482":
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TooManyRequestsException"
        "483":
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequestException"
        "484":
          description: ConcurrentModificationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConcurrentModificationException"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - PoolName
              properties:
                PoolName:
                  description: The name of a dedicated IP pool.
                  type: string
                Tags:
                  description: An object that defines the tags (keys and values) that you
                    want to associate with the pool.
                  type: array
                  items:
                    $ref: "#/components/schemas/Tag"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    get:
      operationId: ListDedicatedIpPools
      description: List all of the dedicated IP pools that exist in your Amazon Pinpoint
        account in the current AWS Region.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListDedicatedIpPoolsResponse"
        "480":
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TooManyRequestsException"
        "481":
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequestException"
      parameters:
        - name: NextToken
          in: query
          required: false
          description: A token returned from a previous call to
            <code>ListDedicatedIpPools</code> to indicate the position in the
            list of dedicated IP pools.
          schema:
            type: string
        - name: PageSize
          in: query
          required: false
          description: The number of results to show in a single call to
            <code>ListDedicatedIpPools</code>. If the number of results is
            larger than the number you specified in this parameter, then the
            response includes a <code>NextToken</code> element, which you can
            use to obtain additional results.
          schema:
            type: integer
  /v1/email/deliverability-dashboard/test:
    post:
      operationId: CreateDeliverabilityTestReport
      description: Create a new predictive inbox placement test. Predictive inbox placement
        tests can help you predict how your messages will be handled by various
        email providers around the world. When you perform a predictive inbox
        placement test, you provide a sample message that contains the content
        that you plan to send to your customers. Amazon Pinpoint then sends that
        message to special email addresses spread across several major email
        providers. After about 24 hours, the test is complete, and you can use
        the <code>GetDeliverabilityTestReport</code> operation to view the
        results of the test.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateDeliverabilityTestReportResponse"
        "480":
          description: AccountSuspendedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccountSuspendedException"
        "481":
          description: SendingPausedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SendingPausedException"
        "482":
          description: MessageRejected
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageRejected"
        "483":
          description: MailFromDomainNotVerifiedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MailFromDomainNotVerifiedException"
        "484":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "485":
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TooManyRequestsException"
        "486":
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
        "487":
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequestException"
        "488":
          description: ConcurrentModificationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConcurrentModificationException"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - FromEmailAddress
                - Content
              properties:
                ReportName:
                  description: A name that helps you identify a report generated by the
                    Deliverability dashboard.
                  type: string
                FromEmailAddress:
                  description: The email address that the predictive inbox placement test
                    email was sent from.
                  type: string
                Content:
                  description: An object that defines the entire content of the email,
                    including the message headers and the body content. You can
                    create a simple email message, in which you specify the
                    subject and the text and HTML versions of the message body.
                    You can also create raw messages, in which you specify a
                    complete MIME-formatted message. Raw messages can include
                    attachments and custom headers.
                  type: object
                  properties:
                    Simple:
                      $ref: "#/components/schemas/Message"
                    Raw:
                      $ref: "#/components/schemas/RawMessage"
                Tags:
                  description: An array of objects that define the tags (keys and values)
                    that you want to associate with the predictive inbox
                    placement test.
                  type: array
                  items:
                    $ref: "#/components/schemas/Tag"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /v1/email/identities:
    post:
      operationId: CreateEmailIdentity
      description: <p>Verifies an email identity for use with Amazon Pinpoint. In Amazon
        Pinpoint, an identity is an email address or domain that you use when
        you send email. Before you can use an identity to send email with Amazon
        Pinpoint, you first have to verify it. By verifying an address, you
        demonstrate that you're the owner of the address, and that you've given
        Amazon Pinpoint permission to send email from the address.</p> <p>When
        you verify an email address, Amazon Pinpoint sends an email to the
        address. Your email address is verified as soon as you follow the link
        in the verification email. </p> <p>When you verify a domain, this
        operation provides a set of DKIM tokens, which you can convert into
        CNAME tokens. You add these CNAME tokens to the DNS configuration for
        your domain. Your domain is verified when Amazon Pinpoint detects these
        records in the DNS configuration for your domain. It usually takes
        around 72 hours to complete the domain verification process.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateEmailIdentityResponse"
        "480":
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
        "481":
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TooManyRequestsException"
        "482":
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequestException"
        "483":
          description: ConcurrentModificationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConcurrentModificationException"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - EmailIdentity
              properties:
                EmailIdentity:
                  description: The email address or domain that you want to verify.
                  type: string
                Tags:
                  description: An array of objects that define the tags (keys and values)
                    that you want to associate with the email identity.
                  type: array
                  items:
                    $ref: "#/components/schemas/Tag"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    get:
      operationId: ListEmailIdentities
      description: Returns a list of all of the email identities that are associated with
        your Amazon Pinpoint account. An identity can be either an email address
        or a domain. This operation returns identities that are verified as well
        as those that aren't.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListEmailIdentitiesResponse"
        "480":
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TooManyRequestsException"
        "481":
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequestException"
      parameters:
        - name: NextToken
          in: query
          required: false
          description: A token returned from a previous call to
            <code>ListEmailIdentities</code> to indicate the position in the
            list of identities.
          schema:
            type: string
        - name: PageSize
          in: query
          required: false
          description: <p>The number of results to show in a single call to
            <code>ListEmailIdentities</code>. If the number of results is larger
            than the number you specified in this parameter, then the response
            includes a <code>NextToken</code> element, which you can use to
            obtain additional results.</p> <p>The value you specify has to be at
            least 0, and can be no more than 1000.</p>
          schema:
            type: integer
  "/v1/email/configuration-sets/{ConfigurationSetName}":
    delete:
      operationId: DeleteConfigurationSet
      description: <p>Delete an existing configuration set.</p> <p>In Amazon Pinpoint,
        <i>configuration sets</i> are groups of rules that you can apply to the
        emails you send. You apply a configuration set to an email by including
        a reference to the configuration set in the headers of the email. When
        you apply a configuration set to an email, all of the rules in that
        configuration set are applied to the email.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteConfigurationSetResponse"
        "480":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "481":
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TooManyRequestsException"
        "482":
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequestException"
        "483":
          description: ConcurrentModificationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConcurrentModificationException"
      parameters:
        - name: ConfigurationSetName
          in: path
          required: true
          description: <p>The name of a configuration set.</p> <p>In Amazon Pinpoint,
            <i>configuration sets</i> are groups of rules that you can apply to
            the emails you send. You apply a configuration set to an email by
            including a reference to the configuration set in the headers of the
            email. When you apply a configuration set to an email, all of the
            rules in that configuration set are applied to the email.</p>
          schema:
            type: string
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    get:
      operationId: GetConfigurationSet
      description: <p>Get information about an existing configuration set, including the
        dedicated IP pool that it's associated with, whether or not it's enabled
        for sending email, and more.</p> <p>In Amazon Pinpoint, <i>configuration
        sets</i> are groups of rules that you can apply to the emails you send.
        You apply a configuration set to an email by including a reference to
        the configuration set in the headers of the email. When you apply a
        configuration set to an email, all of the rules in that configuration
        set are applied to the email.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetConfigurationSetResponse"
        "480":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "481":
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TooManyRequestsException"
        "482":
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequestException"
      parameters:
        - name: ConfigurationSetName
          in: path
          required: true
          description: <p>The name of a configuration set.</p> <p>In Amazon Pinpoint,
            <i>configuration sets</i> are groups of rules that you can apply to
            the emails you send. You apply a configuration set to an email by
            including a reference to the configuration set in the headers of the
            email. When you apply a configuration set to an email, all of the
            rules in that configuration set are applied to the email.</p>
          schema:
            type: string
  "/v1/email/configuration-sets/{ConfigurationSetName}/event-destinations/{EventDestinationName}":
    delete:
      operationId: DeleteConfigurationSetEventDestination
      description: <p>Delete an event destination.</p> <p>In Amazon Pinpoint, <i>events</i>
        include message sends, deliveries, opens, clicks, bounces, and
        complaints. <i>Event destinations</i> are places that you can send
        information about these events to. For example, you can send event data
        to Amazon SNS to receive notifications when you receive bounces or
        complaints, or you can use Amazon Kinesis Data Firehose to stream data
        to Amazon S3 for long-term storage.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteConfigurationSetEventDestinationR\
                  esponse"
        "480":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "481":
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TooManyRequestsException"
        "482":
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequestException"
      parameters:
        - name: ConfigurationSetName
          in: path
          required: true
          description: <p>The name of a configuration set.</p> <p>In Amazon Pinpoint,
            <i>configuration sets</i> are groups of rules that you can apply to
            the emails you send. You apply a configuration set to an email by
            including a reference to the configuration set in the headers of the
            email. When you apply a configuration set to an email, all of the
            rules in that configuration set are applied to the email.</p>
          schema:
            type: string
        - name: EventDestinationName
          in: path
          required: true
          description: <p>The name of an event destination.</p> <p>In Amazon Pinpoint,
            <i>events</i> include message sends, deliveries, opens, clicks,
            bounces, and complaints. <i>Event destinations</i> are places that
            you can send information about these events to. For example, you can
            send event data to Amazon SNS to receive notifications when you
            receive bounces or complaints, or you can use Amazon Kinesis Data
            Firehose to stream data to Amazon S3 for long-term storage.</p>
          schema:
            type: string
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    put:
      operationId: UpdateConfigurationSetEventDestination
      description: <p>Update the configuration of an event destination for a configuration
        set.</p> <p>In Amazon Pinpoint, <i>events</i> include message sends,
        deliveries, opens, clicks, bounces, and complaints. <i>Event
        destinations</i> are places that you can send information about these
        events to. For example, you can send event data to Amazon SNS to receive
        notifications when you receive bounces or complaints, or you can use
        Amazon Kinesis Data Firehose to stream data to Amazon S3 for long-term
        storage.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateConfigurationSetEventDestinationR\
                  esponse"
        "480":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "481":
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TooManyRequestsException"
        "482":
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequestException"
      parameters:
        - name: ConfigurationSetName
          in: path
          required: true
          description: <p>The name of a configuration set.</p> <p>In Amazon Pinpoint,
            <i>configuration sets</i> are groups of rules that you can apply to
            the emails you send. You apply a configuration set to an email by
            including a reference to the configuration set in the headers of the
            email. When you apply a configuration set to an email, all of the
            rules in that configuration set are applied to the email.</p>
          schema:
            type: string
        - name: EventDestinationName
          in: path
          required: true
          description: <p>The name of an event destination.</p> <p>In Amazon Pinpoint,
            <i>events</i> include message sends, deliveries, opens, clicks,
            bounces, and complaints. <i>Event destinations</i> are places that
            you can send information about these events to. For example, you can
            send event data to Amazon SNS to receive notifications when you
            receive bounces or complaints, or you can use Amazon Kinesis Data
            Firehose to stream data to Amazon S3 for long-term storage.</p>
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - EventDestination
              properties:
                EventDestination:
                  description: An object that defines the event destination. Specifically,
                    it defines which services receive events from emails sent
                    using the configuration set that the event destination is
                    associated with. Also defines the types of events that are
                    sent to the event destination.
                  type: object
                  properties:
                    Enabled:
                      $ref: "#/components/schemas/Enabled"
                    MatchingEventTypes:
                      $ref: "#/components/schemas/EventTypes"
                    KinesisFirehoseDestination:
                      $ref: "#/components/schemas/KinesisFirehoseDestination"
                    CloudWatchDestination:
                      $ref: "#/components/schemas/CloudWatchDestination"
                    SnsDestination:
                      $ref: "#/components/schemas/SnsDestination"
                    PinpointDestination:
                      $ref: "#/components/schemas/PinpointDestination"
        required: true
  "/v1/email/dedicated-ip-pools/{PoolName}":
    delete:
      operationId: DeleteDedicatedIpPool
      description: Delete a dedicated IP pool.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteDedicatedIpPoolResponse"
        "480":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "481":
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TooManyRequestsException"
        "482":
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequestException"
        "483":
          description: ConcurrentModificationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConcurrentModificationException"
      parameters:
        - name: PoolName
          in: path
          required: true
          description: The name of a dedicated IP pool.
          schema:
            type: string
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  "/v1/email/identities/{EmailIdentity}":
    delete:
      operationId: DeleteEmailIdentity
      description: Deletes an email identity that you previously verified for use with
        Amazon Pinpoint. An identity can be either an email address or a domain
        name.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteEmailIdentityResponse"
        "480":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "481":
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TooManyRequestsException"
        "482":
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequestException"
        "483":
          description: ConcurrentModificationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConcurrentModificationException"
      parameters:
        - name: EmailIdentity
          in: path
          required: true
          description: The identity (that is, the email address or domain) that you want to
            delete from your Amazon Pinpoint account.
          schema:
            type: string
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    get:
      operationId: GetEmailIdentity
      description: Provides information about a specific identity associated with your
        Amazon Pinpoint account, including the identity's verification status,
        its DKIM authentication status, and its custom Mail-From settings.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetEmailIdentityResponse"
        "480":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "481":
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TooManyRequestsException"
        "482":
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequestException"
      parameters:
        - name: EmailIdentity
          in: path
          required: true
          description: The email identity that you want to retrieve details for.
          schema:
            type: string
  /v1/email/account:
    get:
      operationId: GetAccount
      description: Obtain information about the email-sending status and capabilities of
        your Amazon Pinpoint account in the current AWS Region.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetAccountResponse"
        "480":
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TooManyRequestsException"
        "481":
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequestException"
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /v1/email/deliverability-dashboard/blacklist-report#BlacklistItemNames:
    get:
      operationId: GetBlacklistReports
      description: Retrieve a list of the blacklists that your dedicated IP addresses
        appear on.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetBlacklistReportsResponse"
        "480":
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TooManyRequestsException"
        "481":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "482":
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequestException"
      parameters:
        - name: BlacklistItemNames
          in: query
          required: true
          description: A list of IP addresses that you want to retrieve blacklist
            information about. You can only specify the dedicated IP addresses
            that you use to send email using Amazon Pinpoint or Amazon SES.
          schema:
            type: array
            items:
              type: string
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  "/v1/email/dedicated-ips/{IP}":
    get:
      operationId: GetDedicatedIp
      description: Get information about a dedicated IP address, including the name of the
        dedicated IP pool that it's associated with, as well information about
        the automatic warm-up process for the address.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetDedicatedIpResponse"
        "480":
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TooManyRequestsException"
        "481":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "482":
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequestException"
      parameters:
        - name: IP
          in: path
          required: true
          description: A dedicated IP address that is associated with your Amazon Pinpoint
            account.
          schema:
            type: string
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /v1/email/dedicated-ips:
    get:
      operationId: GetDedicatedIps
      description: List the dedicated IP addresses that are associated with your Amazon
        Pinpoint account.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetDedicatedIpsResponse"
        "480":
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TooManyRequestsException"
        "481":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "482":
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequestException"
      parameters:
        - name: PoolName
          in: query
          required: false
          description: The name of a dedicated IP pool.
          schema:
            type: string
        - name: NextToken
          in: query
          required: false
          description: A token returned from a previous call to
            <code>GetDedicatedIps</code> to indicate the position of the
            dedicated IP pool in the list of IP pools.
          schema:
            type: string
        - name: PageSize
          in: query
          required: false
          description: The number of results to show in a single call to
            <code>GetDedicatedIpsRequest</code>. If the number of results is
            larger than the number you specified in this parameter, then the
            response includes a <code>NextToken</code> element, which you can
            use to obtain additional results.
          schema:
            type: integer
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /v1/email/deliverability-dashboard:
    get:
      operationId: GetDeliverabilityDashboardOptions
      description: <p>Retrieve information about the status of the Deliverability dashboard
        for your Amazon Pinpoint account. When the Deliverability dashboard is
        enabled, you gain access to reputation, deliverability, and other
        metrics for the domains that you use to send email using Amazon
        Pinpoint. You also gain the ability to perform predictive inbox
        placement tests.</p> <p>When you use the Deliverability dashboard, you
        pay a monthly subscription charge, in addition to any other fees that
        you accrue by using Amazon Pinpoint. For more information about the
        features and cost of a Deliverability dashboard subscription, see <a
        href="http://aws.amazon.com/pinpoint/pricing/">Amazon Pinpoint
        Pricing</a>.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetDeliverabilityDashboardOptionsRespon\
                  se"
        "480":
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TooManyRequestsException"
        "481":
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
        "482":
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequestException"
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    put:
      operationId: PutDeliverabilityDashboardOption
      description: <p>Enable or disable the Deliverability dashboard for your Amazon
        Pinpoint account. When you enable the Deliverability dashboard, you gain
        access to reputation, deliverability, and other metrics for the domains
        that you use to send email using Amazon Pinpoint. You also gain the
        ability to perform predictive inbox placement tests.</p> <p>When you use
        the Deliverability dashboard, you pay a monthly subscription charge, in
        addition to any other fees that you accrue by using Amazon Pinpoint. For
        more information about the features and cost of a Deliverability
        dashboard subscription, see <a
        href="http://aws.amazon.com/pinpoint/pricing/">Amazon Pinpoint
        Pricing</a>.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PutDeliverabilityDashboardOptionResponse"
        "480":
          description: AlreadyExistsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AlreadyExistsException"
        "481":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "482":
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TooManyRequestsException"
        "483":
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
        "484":
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequestException"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - DashboardEnabled
              properties:
                DashboardEnabled:
                  description: Specifies whether to enable the Deliverability dashboard for
                    your Amazon Pinpoint account. To enable the dashboard, set
                    this value to <code>true</code>.
                  type: boolean
                SubscribedDomains:
                  description: An object that contains information about the Deliverability
                    dashboard subscription for a verified domain that you use to
                    send email and currently has an active Deliverability
                    dashboard subscription. If a Deliverability dashboard
                    subscription is active for a domain, you gain access to
                    reputation, inbox placement, and other metrics for the
                    domain.
                  type: array
                  items:
                    $ref: "#/components/schemas/DomainDeliverabilityTrackingOption"
        required: true
  "/v1/email/deliverability-dashboard/test-reports/{ReportId}":
    get:
      operationId: GetDeliverabilityTestReport
      description: Retrieve the results of a predictive inbox placement test.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetDeliverabilityTestReportResponse"
        "480":
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TooManyRequestsException"
        "481":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "482":
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequestException"
      parameters:
        - name: ReportId
          in: path
          required: true
          description: A unique string that identifies a Deliverability dashboard report.
          schema:
            type: string
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  "/v1/email/deliverability-dashboard/campaigns/{CampaignId}":
    get:
      operationId: GetDomainDeliverabilityCampaign
      description: Retrieve all the deliverability data for a specific campaign. This data
        is available for a campaign only if the campaign sent email by using a
        domain that the Deliverability dashboard is enabled for
        (<code>PutDeliverabilityDashboardOption</code> operation).
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetDomainDeliverabilityCampaignResponse"
        "480":
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TooManyRequestsException"
        "481":
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequestException"
        "482":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
      parameters:
        - name: CampaignId
          in: path
          required: true
          description: The unique identifier for the campaign. Amazon Pinpoint
            automatically generates and assigns this identifier to a campaign.
            This value is not the same as the campaign identifier that Amazon
            Pinpoint assigns to campaigns that you create and manage by using
            the Amazon Pinpoint API or the Amazon Pinpoint console.
          schema:
            type: string
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  "/v1/email/deliverability-dashboard/statistics-report/{Domain}#StartDate&EndDate":
    get:
      operationId: GetDomainStatisticsReport
      description: Retrieve inbox placement and engagement rates for the domains that you
        use to send email.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetDomainStatisticsReportResponse"
        "480":
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TooManyRequestsException"
        "481":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "482":
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequestException"
      parameters:
        - name: Domain
          in: path
          required: true
          description: The domain that you want to obtain deliverability metrics for.
          schema:
            type: string
        - name: StartDate
          in: query
          required: true
          description: The first day (in Unix time) that you want to obtain domain
            deliverability metrics for.
          schema:
            type: string
            format: date-time
        - name: EndDate
          in: query
          required: true
          description: The last day (in Unix time) that you want to obtain domain
            deliverability metrics for. The <code>EndDate</code> that you
            specify has to be less than or equal to 30 days after the
            <code>StartDate</code>.
          schema:
            type: string
            format: date-time
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /v1/email/deliverability-dashboard/test-reports:
    get:
      operationId: ListDeliverabilityTestReports
      description: Show a list of the predictive inbox placement tests that you've
        performed, regardless of their statuses. For predictive inbox placement
        tests that are complete, you can use the
        <code>GetDeliverabilityTestReport</code> operation to view the results.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListDeliverabilityTestReportsResponse"
        "480":
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TooManyRequestsException"
        "481":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "482":
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequestException"
      parameters:
        - name: NextToken
          in: query
          required: false
          description: A token returned from a previous call to
            <code>ListDeliverabilityTestReports</code> to indicate the position
            in the list of predictive inbox placement tests.
          schema:
            type: string
        - name: PageSize
          in: query
          required: false
          description: <p>The number of results to show in a single call to
            <code>ListDeliverabilityTestReports</code>. If the number of results
            is larger than the number you specified in this parameter, then the
            response includes a <code>NextToken</code> element, which you can
            use to obtain additional results.</p> <p>The value you specify has
            to be at least 0, and can be no more than 1000.</p>
          schema:
            type: integer
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  "/v1/email/deliverability-dashboard/domains/{SubscribedDomain}/campaigns#StartDate&EndDate":
    get:
      operationId: ListDomainDeliverabilityCampaigns
      description: Retrieve deliverability data for all the campaigns that used a specific
        domain to send email during a specified time range. This data is
        available for a domain only if you enabled the Deliverability dashboard
        (<code>PutDeliverabilityDashboardOption</code> operation) for the
        domain.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListDomainDeliverabilityCampaignsRespon\
                  se"
        "480":
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TooManyRequestsException"
        "481":
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequestException"
        "482":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
      parameters:
        - name: StartDate
          in: query
          required: true
          description: The first day, in Unix time format, that you want to obtain
            deliverability data for.
          schema:
            type: string
            format: date-time
        - name: EndDate
          in: query
          required: true
          description: The last day, in Unix time format, that you want to obtain
            deliverability data for. This value has to be less than or equal to
            30 days after the value of the <code>StartDate</code> parameter.
          schema:
            type: string
            format: date-time
        - name: SubscribedDomain
          in: path
          required: true
          description: The domain to obtain deliverability data for.
          schema:
            type: string
        - name: NextToken
          in: query
          required: false
          description: A token that’s returned from a previous call to the
            <code>ListDomainDeliverabilityCampaigns</code> operation. This token
            indicates the position of a campaign in the list of campaigns.
          schema:
            type: string
        - name: PageSize
          in: query
          required: false
          description: The maximum number of results to include in response to a single
            call to the <code>ListDomainDeliverabilityCampaigns</code>
            operation. If the number of results is larger than the number that
            you specify in this parameter, the response includes a
            <code>NextToken</code> element, which you can use to obtain
            additional results.
          schema:
            type: integer
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /v1/email/tags#ResourceArn:
    get:
      operationId: ListTagsForResource
      description: Retrieve a list of the tags (keys and values) that are associated with a
        specified resource. A <i>tag</i> is a label that you optionally define
        and associate with a resource in Amazon Pinpoint. Each tag consists of a
        required <i>tag key</i> and an optional associated <i>tag value</i>. A
        tag key is a general label that acts as a category for more specific tag
        values. A tag value acts as a descriptor within a tag key.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListTagsForResourceResponse"
        "480":
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequestException"
        "481":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "482":
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TooManyRequestsException"
      parameters:
        - name: ResourceArn
          in: query
          required: true
          description: The Amazon Resource Name (ARN) of the resource that you want to
            retrieve tag information for.
          schema:
            type: string
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /v1/email/account/dedicated-ips/warmup:
    put:
      operationId: PutAccountDedicatedIpWarmupAttributes
      description: Enable or disable the automatic warm-up feature for dedicated IP
        addresses.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PutAccountDedicatedIpWarmupAttributesRe\
                  sponse"
        "480":
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TooManyRequestsException"
        "481":
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequestException"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                AutoWarmupEnabled:
                  description: Enables or disables the automatic warm-up feature for
                    dedicated IP addresses that are associated with your Amazon
                    Pinpoint account in the current AWS Region. Set to
                    <code>true</code> to enable the automatic warm-up feature,
                    or set to <code>false</code> to disable it.
                  type: boolean
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /v1/email/account/sending:
    put:
      operationId: PutAccountSendingAttributes
      description: Enable or disable the ability of your account to send email.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PutAccountSendingAttributesResponse"
        "480":
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TooManyRequestsException"
        "481":
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequestException"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                SendingEnabled:
                  description: <p>Enables or disables your account's ability to send email.
                    Set to <code>true</code> to enable email sending, or set to
                    <code>false</code> to disable email sending.</p> <note>
                    <p>If AWS paused your account's ability to send email, you
                    can't use this operation to resume your account's ability to
                    send email.</p> </note>
                  type: boolean
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  "/v1/email/configuration-sets/{ConfigurationSetName}/delivery-options":
    put:
      operationId: PutConfigurationSetDeliveryOptions
      description: Associate a configuration set with a dedicated IP pool. You can use
        dedicated IP pools to create groups of dedicated IP addresses for
        sending specific types of email.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PutConfigurationSetDeliveryOptionsRespo\
                  nse"
        "480":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "481":
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TooManyRequestsException"
        "482":
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequestException"
      parameters:
        - name: ConfigurationSetName
          in: path
          required: true
          description: <p>The name of a configuration set.</p> <p>In Amazon Pinpoint,
            <i>configuration sets</i> are groups of rules that you can apply to
            the emails you send. You apply a configuration set to an email by
            including a reference to the configuration set in the headers of the
            email. When you apply a configuration set to an email, all of the
            rules in that configuration set are applied to the email.</p>
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                TlsPolicy:
                  description: Specifies whether Amazon Pinpoint should require that
                    incoming email is delivered over a connection encrypted with
                    Transport Layer Security (TLS). If this parameter is set to
                    <code>Require</code>, Amazon Pinpoint rejects emails that
                    weren't received over TLS. If the parameter is set to
                    <code>Optional</code>, then Amazon Pinpoint accepts emails
                    that weren't received over TLS. The default value is
                    <code>Optional</code>.
                  type: string
                  enum:
                    - REQUIRE
                    - OPTIONAL
                SendingPoolName:
                  description: The name of the dedicated IP pool that you want to associate
                    with the configuration set.
                  type: string
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  "/v1/email/configuration-sets/{ConfigurationSetName}/reputation-options":
    put:
      operationId: PutConfigurationSetReputationOptions
      description: Enable or disable collection of reputation metrics for emails that you
        send using a particular configuration set in a specific AWS Region.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PutConfigurationSetReputationOptionsRes\
                  ponse"
        "480":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "481":
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TooManyRequestsException"
        "482":
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequestException"
      parameters:
        - name: ConfigurationSetName
          in: path
          required: true
          description: <p>The name of a configuration set.</p> <p>In Amazon Pinpoint,
            <i>configuration sets</i> are groups of rules that you can apply to
            the emails you send. You apply a configuration set to an email by
            including a reference to the configuration set in the headers of the
            email. When you apply a configuration set to an email, all of the
            rules in that configuration set are applied to the email.</p>
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                ReputationMetricsEnabled:
                  description: If <code>true</code>, tracking of reputation metrics is
                    enabled for the configuration set. If <code>false</code>,
                    tracking of reputation metrics is disabled for the
                    configuration set.
                  type: boolean
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  "/v1/email/configuration-sets/{ConfigurationSetName}/sending":
    put:
      operationId: PutConfigurationSetSendingOptions
      description: Enable or disable email sending for messages that use a particular
        configuration set in a specific AWS Region.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PutConfigurationSetSendingOptionsRespon\
                  se"
        "480":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "481":
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TooManyRequestsException"
        "482":
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequestException"
      parameters:
        - name: ConfigurationSetName
          in: path
          required: true
          description: <p>The name of a configuration set.</p> <p>In Amazon Pinpoint,
            <i>configuration sets</i> are groups of rules that you can apply to
            the emails you send. You apply a configuration set to an email by
            including a reference to the configuration set in the headers of the
            email. When you apply a configuration set to an email, all of the
            rules in that configuration set are applied to the email.</p>
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                SendingEnabled:
                  description: If <code>true</code>, email sending is enabled for the
                    configuration set. If <code>false</code>, email sending is
                    disabled for the configuration set.
                  type: boolean
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  "/v1/email/configuration-sets/{ConfigurationSetName}/tracking-options":
    put:
      operationId: PutConfigurationSetTrackingOptions
      description: Specify a custom domain to use for open and click tracking elements in
        email that you send using Amazon Pinpoint.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PutConfigurationSetTrackingOptionsRespo\
                  nse"
        "480":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "481":
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TooManyRequestsException"
        "482":
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequestException"
      parameters:
        - name: ConfigurationSetName
          in: path
          required: true
          description: <p>The name of a configuration set.</p> <p>In Amazon Pinpoint,
            <i>configuration sets</i> are groups of rules that you can apply to
            the emails you send. You apply a configuration set to an email by
            including a reference to the configuration set in the headers of the
            email. When you apply a configuration set to an email, all of the
            rules in that configuration set are applied to the email.</p>
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                CustomRedirectDomain:
                  description: The domain that you want to use for tracking open and click
                    events.
                  type: string
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  "/v1/email/dedicated-ips/{IP}/pool":
    put:
      operationId: PutDedicatedIpInPool
      description: <p>Move a dedicated IP address to an existing dedicated IP pool.</p>
        <note> <p>The dedicated IP address that you specify must already exist,
        and must be associated with your Amazon Pinpoint account. </p> <p>The
        dedicated IP pool you specify must already exist. You can create a new
        pool by using the <code>CreateDedicatedIpPool</code> operation.</p>
        </note>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PutDedicatedIpInPoolResponse"
        "480":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "481":
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TooManyRequestsException"
        "482":
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequestException"
      parameters:
        - name: IP
          in: path
          required: true
          description: A dedicated IP address that is associated with your Amazon Pinpoint
            account.
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - DestinationPoolName
              properties:
                DestinationPoolName:
                  description: The name of a dedicated IP pool.
                  type: string
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  "/v1/email/dedicated-ips/{IP}/warmup":
    put:
      operationId: PutDedicatedIpWarmupAttributes
      description: <p/>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PutDedicatedIpWarmupAttributesResponse"
        "480":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "481":
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TooManyRequestsException"
        "482":
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequestException"
      parameters:
        - name: IP
          in: path
          required: true
          description: A dedicated IP address that is associated with your Amazon Pinpoint
            account.
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - WarmupPercentage
              properties:
                WarmupPercentage:
                  description: The warm-up percentage that you want to associate with the
                    dedicated IP address.
                  type: integer
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  "/v1/email/identities/{EmailIdentity}/dkim":
    put:
      operationId: PutEmailIdentityDkimAttributes
      description: Used to enable or disable DKIM authentication for an email identity.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PutEmailIdentityDkimAttributesResponse"
        "480":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "481":
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TooManyRequestsException"
        "482":
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequestException"
      parameters:
        - name: EmailIdentity
          in: path
          required: true
          description: The email identity that you want to change the DKIM settings for.
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                SigningEnabled:
                  description: <p>Sets the DKIM signing configuration for the identity.</p>
                    <p>When you set this value <code>true</code>, then the
                    messages that Amazon Pinpoint sends from the identity are
                    DKIM-signed. When you set this value to <code>false</code>,
                    then the messages that Amazon Pinpoint sends from the
                    identity aren't DKIM-signed.</p>
                  type: boolean
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  "/v1/email/identities/{EmailIdentity}/feedback":
    put:
      operationId: PutEmailIdentityFeedbackAttributes
      description: <p>Used to enable or disable feedback forwarding for an identity. This
        setting determines what happens when an identity is used to send an
        email that results in a bounce or complaint event.</p> <p>When you
        enable feedback forwarding, Amazon Pinpoint sends you email
        notifications when bounce or complaint events occur. Amazon Pinpoint
        sends this notification to the address that you specified in the
        Return-Path header of the original email.</p> <p>When you disable
        feedback forwarding, Amazon Pinpoint sends notifications through other
        mechanisms, such as by notifying an Amazon SNS topic. You're required to
        have a method of tracking bounces and complaints. If you haven't set up
        another mechanism for receiving bounce or complaint notifications,
        Amazon Pinpoint sends an email notification when these events occur
        (even if this setting is disabled).</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PutEmailIdentityFeedbackAttributesRespo\
                  nse"
        "480":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "481":
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TooManyRequestsException"
        "482":
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequestException"
      parameters:
        - name: EmailIdentity
          in: path
          required: true
          description: The email identity that you want to configure bounce and complaint
            feedback forwarding for.
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                EmailForwardingEnabled:
                  description: <p>Sets the feedback forwarding configuration for the
                    identity.</p> <p>If the value is <code>true</code>, Amazon
                    Pinpoint sends you email notifications when bounce or
                    complaint events occur. Amazon Pinpoint sends this
                    notification to the address that you specified in the
                    Return-Path header of the original email.</p> <p>When you
                    set this value to <code>false</code>, Amazon Pinpoint sends
                    notifications through other mechanisms, such as by notifying
                    an Amazon SNS topic or another event destination. You're
                    required to have a method of tracking bounces and
                    complaints. If you haven't set up another mechanism for
                    receiving bounce or complaint notifications, Amazon Pinpoint
                    sends an email notification when these events occur (even if
                    this setting is disabled).</p>
                  type: boolean
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  "/v1/email/identities/{EmailIdentity}/mail-from":
    put:
      operationId: PutEmailIdentityMailFromAttributes
      description: Used to enable or disable the custom Mail-From domain configuration for
        an email identity.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PutEmailIdentityMailFromAttributesRespo\
                  nse"
        "480":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "481":
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TooManyRequestsException"
        "482":
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequestException"
      parameters:
        - name: EmailIdentity
          in: path
          required: true
          description: The verified email identity that you want to set up the custom MAIL
            FROM domain for.
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                MailFromDomain:
                  description: The domain that you want to use as a MAIL FROM domain.
                  type: string
                BehaviorOnMxFailure:
                  description: <p>The action that you want Amazon Pinpoint to take if it
                    can't read the required MX record for a custom MAIL FROM
                    domain. When you set this value to
                    <code>UseDefaultValue</code>, Amazon Pinpoint uses
                    <i>amazonses.com</i> as the MAIL FROM domain. When you set
                    this value to <code>RejectMessage</code>, Amazon Pinpoint
                    returns a <code>MailFromDomainNotVerified</code> error, and
                    doesn't attempt to deliver the email.</p> <p>These behaviors
                    are taken when the custom MAIL FROM domain configuration is
                    in the <code>Pending</code>, <code>Failed</code>, and
                    <code>TemporaryFailure</code> states.</p>
                  type: string
                  enum:
                    - USE_DEFAULT_VALUE
                    - REJECT_MESSAGE
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /v1/email/outbound-emails:
    post:
      operationId: SendEmail
      description: <p>Sends an email message. You can use the Amazon Pinpoint Email API to
        send two types of messages:</p> <ul> <li> <p> <b>Simple</b> – A standard
        email message. When you create this type of message, you specify the
        sender, the recipient, and the message body, and Amazon Pinpoint
        assembles the message for you.</p> </li> <li> <p> <b>Raw</b> – A raw,
        MIME-formatted email message. When you send this type of email, you have
        to specify all of the message headers, as well as the message body. You
        can use this message type to send messages that contain attachments. The
        message that you specify has to be a valid MIME message.</p> </li> </ul>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SendEmailResponse"
        "480":
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TooManyRequestsException"
        "481":
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
        "482":
          description: AccountSuspendedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccountSuspendedException"
        "483":
          description: SendingPausedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SendingPausedException"
        "484":
          description: MessageRejected
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageRejected"
        "485":
          description: MailFromDomainNotVerifiedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MailFromDomainNotVerifiedException"
        "486":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "487":
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequestException"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - Destination
                - Content
              properties:
                FromEmailAddress:
                  description: 'The email address that you want to use as the "From"
                    address for the email. The address that you specify has to
                    be verified. '
                  type: string
                Destination:
                  description: An object that describes the recipients for an email.
                  type: object
                  properties:
                    ToAddresses:
                      $ref: "#/components/schemas/EmailAddressList"
                    CcAddresses:
                      $ref: "#/components/schemas/EmailAddressList"
                    BccAddresses:
                      $ref: "#/components/schemas/EmailAddressList"
                ReplyToAddresses:
                  description: The "Reply-to" email addresses for the message. When the
                    recipient replies to the message, each Reply-to address
                    receives the reply.
                  type: array
                  items:
                    $ref: "#/components/schemas/EmailAddress"
                FeedbackForwardingEmailAddress:
                  description: The address that Amazon Pinpoint should send bounce and
                    complaint notifications to.
                  type: string
                Content:
                  description: An object that defines the entire content of the email,
                    including the message headers and the body content. You can
                    create a simple email message, in which you specify the
                    subject and the text and HTML versions of the message body.
                    You can also create raw messages, in which you specify a
                    complete MIME-formatted message. Raw messages can include
                    attachments and custom headers.
                  type: object
                  properties:
                    Simple:
                      $ref: "#/components/schemas/Message"
                    Raw:
                      $ref: "#/components/schemas/RawMessage"
                EmailTags:
                  description: A list of message tags.
                  type: array
                  items:
                    $ref: "#/components/schemas/MessageTag"
                ConfigurationSetName:
                  description: <p>The name of a configuration set.</p> <p>In Amazon
                    Pinpoint, <i>configuration sets</i> are groups of rules that
                    you can apply to the emails you send. You apply a
                    configuration set to an email by including a reference to
                    the configuration set in the headers of the email. When you
                    apply a configuration set to an email, all of the rules in
                    that configuration set are applied to the email.</p>
                  type: string
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /v1/email/tags:
    post:
      operationId: TagResource
      description: <p>Add one or more tags (keys and values) to a specified resource. A
        <i>tag</i> is a label that you optionally define and associate with a
        resource in Amazon Pinpoint. Tags can help you categorize and manage
        resources in different ways, such as by purpose, owner, environment, or
        other criteria. A resource can have as many as 50 tags.</p> <p>Each tag
        consists of a required <i>tag key</i> and an associated <i>tag
        value</i>, both of which you define. A tag key is a general label that
        acts as a category for more specific tag values. A tag value acts as a
        descriptor within a tag key.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TagResourceResponse"
        "480":
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequestException"
        "481":
          description: ConcurrentModificationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConcurrentModificationException"
        "482":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "483":
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TooManyRequestsException"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - ResourceArn
                - Tags
              properties:
                ResourceArn:
                  description: The Amazon Resource Name (ARN) of the resource that you want
                    to add one or more tags to.
                  type: string
                Tags:
                  description: A list of the tags that you want to add to the resource. A
                    tag consists of a required tag key (<code>Key</code>) and an
                    associated tag value (<code>Value</code>). The maximum
                    length of a tag key is 128 characters. The maximum length of
                    a tag value is 256 characters.
                  type: array
                  items:
                    $ref: "#/components/schemas/Tag"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /v1/email/tags#ResourceArn&TagKeys:
    delete:
      operationId: UntagResource
      description: Remove one or more tags (keys and values) from a specified resource.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UntagResourceResponse"
        "480":
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequestException"
        "481":
          description: ConcurrentModificationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConcurrentModificationException"
        "482":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "483":
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TooManyRequestsException"
      parameters:
        - name: ResourceArn
          in: query
          required: true
          description: The Amazon Resource Name (ARN) of the resource that you want to
            remove one or more tags from.
          schema:
            type: string
        - name: TagKeys
          in: query
          required: true
          description: "<p>The tags (tag keys) that you want to remove from the resource.
            When you specify a tag key, the action removes both that key and its
            associated tag value.</p> <p>To remove more than one tag from the
            resource, append the <code>TagKeys</code> parameter and argument for
            each additional tag to remove, separated by an ampersand. For
            example:
            <code>/v1/email/tags?ResourceArn=ResourceArn&amp;TagKeys=Key1&amp;T\
            agKeys=Key2</code> </p>"
          schema:
            type: array
            items:
              type: string
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
servers:
  - url: http://email.{region}.amazonaws.com
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-south-1
          - sa-east-1
        default: us-east-1
    description: The Pinpoint Email multi-region endpoint
  - url: https://email.{region}.amazonaws.com
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-south-1
          - sa-east-1
        default: us-east-1
    description: The Pinpoint Email multi-region endpoint
  - url: http://email.{region}.amazonaws.com.cn
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The Pinpoint Email endpoint for China (Beijing) and China (Ningxia)
  - url: https://email.{region}.amazonaws.com.cn
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The Pinpoint Email endpoint for China (Beijing) and China (Ningxia)
components:
  parameters:
    X-Amz-Content-Sha256:
      name: X-Amz-Content-Sha256
      in: header
      required: false
      schema:
        type: string
    X-Amz-Date:
      name: X-Amz-Date
      in: header
      required: false
      schema:
        type: string
    X-Amz-Algorithm:
      name: X-Amz-Algorithm
      in: header
      required: false
      schema:
        type: string
    X-Amz-Credential:
      name: X-Amz-Credential
      in: header
      required: false
      schema:
        type: string
    X-Amz-Security-Token:
      name: X-Amz-Security-Token
      in: header
      required: false
      schema:
        type: string
    X-Amz-Signature:
      name: X-Amz-Signature
      in: header
      required: false
      schema:
        type: string
    X-Amz-SignedHeaders:
      name: X-Amz-SignedHeaders
      in: header
      required: false
      schema:
        type: string
  securitySchemes:
    hmac:
      type: apiKey
      name: Authorization
      in: header
      description: Amazon Signature authorization v4
      x-amazon-apigateway-authtype: awsSigv4
  schemas:
    CreateConfigurationSetResponse:
      type: object
      properties: {}
      description: An HTTP 200 response if the request succeeds, or an error message if the
        request fails.
    CustomRedirectDomain:
      type: string
      description: The domain that you want to use for tracking open and click events.
    TlsPolicy:
      type: string
      enum:
        - REQUIRE
        - OPTIONAL
      description: Specifies whether Amazon Pinpoint should require that incoming email is
        delivered over a connection encrypted with Transport Layer Security
        (TLS). If this parameter is set to <code>Require</code>, Amazon Pinpoint
        rejects emails that weren't received over TLS. If the parameter is set
        to <code>Optional</code>, then Amazon Pinpoint accepts emails that
        weren't received over TLS. The default value is <code>Optional</code>.
    PoolName:
      type: string
      description: The name of a dedicated IP pool.
    Enabled:
      type: boolean
    LastFreshStart:
      type: string
      description: The date and time (in Unix time) when the reputation metrics were last
        given a fresh start. When your account is given a fresh start, your
        reputation metrics are calculated starting from the date of the fresh
        start.
      format: date-time
    Tag:
      type: object
      required:
        - Key
        - Value
      properties:
        Key:
          $ref: "#/components/schemas/TagKey"
        Value:
          $ref: "#/components/schemas/TagValue"
      description: "<p>An object that defines the tags that are associated with a resource.
        A <i>tag</i> is a label that you optionally define and associate with a
        resource in Amazon Pinpoint. Tags can help you categorize and manage
        resources in different ways, such as by purpose, owner, environment, or
        other criteria. A resource can have as many as 50 tags.</p> <p>Each tag
        consists of a required <i>tag key</i> and an associated <i>tag
        value</i>, both of which you define. A tag key is a general label that
        acts as a category for a more specific tag value. A tag value acts as a
        descriptor within a tag key. A tag key can contain as many as 128
        characters. A tag value can contain as many as 256 characters. The
        characters can be Unicode letters, digits, white space, or one of the
        following symbols: _ . : / = + -. The following additional restrictions
        apply to tags:</p> <ul> <li> <p>Tag keys and values are case
        sensitive.</p> </li> <li> <p>For each associated resource, each tag key
        must be unique and it can have only one value.</p> </li> <li>
        <p>The <code>aws:</code> prefix is reserved for use by AWS; you can’t
        use it in any tag keys or values that you define. In addition, you can't
        edit or remove tag keys or values that use this prefix. Tags that use
        this prefix don’t count against the limit of 50 tags per resource.</p>
        </li> <li> <p>You can associate tags with public or shared resources,
        but the tags are available only for your AWS account, not any other
        accounts that share the resource. In addition, the tags are available
        only for resources that are located in the specified AWS Region for your
        AWS account.</p> </li> </ul>"
    AlreadyExistsException: {}
    NotFoundException: {}
    TooManyRequestsException: {}
    LimitExceededException: {}
    BadRequestException: {}
    ConcurrentModificationException: {}
    CreateConfigurationSetEventDestinationResponse:
      type: object
      properties: {}
      description: An HTTP 200 response if the request succeeds, or an error message if the
        request fails.
    EventTypes:
      type: array
      items:
        $ref: "#/components/schemas/EventType"
    KinesisFirehoseDestination:
      type: object
      required:
        - IamRoleArn
        - DeliveryStreamArn
      properties:
        IamRoleArn:
          $ref: "#/components/schemas/AmazonResourceName"
        DeliveryStreamArn:
          $ref: "#/components/schemas/AmazonResourceName"
      description: An object that defines an Amazon Kinesis Data Firehose destination for
        email events. You can use Amazon Kinesis Data Firehose to stream data to
        other services, such as Amazon S3 and Amazon Redshift.
    CloudWatchDestination:
      type: object
      required:
        - DimensionConfigurations
      properties:
        DimensionConfigurations:
          $ref: "#/components/schemas/CloudWatchDimensionConfigurations"
      description: An object that defines an Amazon CloudWatch destination for email
        events. You can use Amazon CloudWatch to monitor and gain insights on
        your email sending metrics.
    SnsDestination:
      type: object
      required:
        - TopicArn
      properties:
        TopicArn:
          $ref: "#/components/schemas/AmazonResourceName"
      description: An object that defines an Amazon SNS destination for email events. You
        can use Amazon SNS to send notification when certain email events occur.
    PinpointDestination:
      type: object
      properties:
        ApplicationArn:
          $ref: "#/components/schemas/AmazonResourceName"
      description: An object that defines a Amazon Pinpoint destination for email events.
        You can use Amazon Pinpoint events to create attributes in Amazon
        Pinpoint projects. You can use these attributes to create segments for
        your campaigns.
    CreateDedicatedIpPoolResponse:
      type: object
      properties: {}
      description: An HTTP 200 response if the request succeeds, or an error message if the
        request fails.
    CreateDeliverabilityTestReportResponse:
      type: object
      required:
        - ReportId
        - DeliverabilityTestStatus
      properties:
        ReportId:
          $ref: "#/components/schemas/ReportId"
        DeliverabilityTestStatus:
          $ref: "#/components/schemas/DeliverabilityTestStatus"
      description: Information about the predictive inbox placement test that you created.
    Message:
      type: object
      required:
        - Subject
        - Body
      properties:
        Subject:
          $ref: "#/components/schemas/Content"
        Body:
          $ref: "#/components/schemas/Body"
      description: Represents the email message that you're sending. The
        <code>Message</code> object consists of a subject line and a message
        body.
    RawMessage:
      type: object
      required:
        - Data
      properties:
        Data:
          $ref: "#/components/schemas/RawMessageData"
      description: The raw email message.
    AccountSuspendedException: {}
    SendingPausedException: {}
    MessageRejected: {}
    MailFromDomainNotVerifiedException: {}
    CreateEmailIdentityResponse:
      type: object
      properties:
        IdentityType:
          $ref: "#/components/schemas/IdentityType"
        VerifiedForSendingStatus:
          $ref: "#/components/schemas/Enabled"
        DkimAttributes:
          $ref: "#/components/schemas/DkimAttributes"
      description: <p>If the email identity is a domain, this object contains tokens that
        you can use to create a set of CNAME records. To sucessfully verify your
        domain, you have to add these records to the DNS configuration for your
        domain.</p> <p>If the email identity is an email address, this object is
        empty. </p>
    DeleteConfigurationSetResponse:
      type: object
      properties: {}
      description: An HTTP 200 response if the request succeeds, or an error message if the
        request fails.
    DeleteConfigurationSetEventDestinationResponse:
      type: object
      properties: {}
      description: An HTTP 200 response if the request succeeds, or an error message if the
        request fails.
    DeleteDedicatedIpPoolResponse:
      type: object
      properties: {}
      description: An HTTP 200 response if the request succeeds, or an error message if the
        request fails.
    DeleteEmailIdentityResponse:
      type: object
      properties: {}
      description: An HTTP 200 response if the request succeeds, or an error message if the
        request fails.
    GetAccountResponse:
      type: object
      properties:
        SendQuota:
          $ref: "#/components/schemas/SendQuota"
        SendingEnabled:
          $ref: "#/components/schemas/Enabled"
        DedicatedIpAutoWarmupEnabled:
          $ref: "#/components/schemas/Enabled"
        EnforcementStatus:
          $ref: "#/components/schemas/GeneralEnforcementStatus"
        ProductionAccessEnabled:
          $ref: "#/components/schemas/Enabled"
      description: A list of details about the email-sending capabilities of your Amazon
        Pinpoint account in the current AWS Region.
    GetBlacklistReportsResponse:
      type: object
      required:
        - BlacklistReport
      properties:
        BlacklistReport:
          $ref: "#/components/schemas/BlacklistReport"
      description: An object that contains information about blacklist events.
    BlacklistItemName:
      type: string
      description: An IP address that you want to obtain blacklist information for.
    GetConfigurationSetResponse:
      type: object
      properties:
        ConfigurationSetName:
          $ref: "#/components/schemas/ConfigurationSetName"
        TrackingOptions:
          $ref: "#/components/schemas/TrackingOptions"
        DeliveryOptions:
          $ref: "#/components/schemas/DeliveryOptions"
        ReputationOptions:
          $ref: "#/components/schemas/ReputationOptions"
        SendingOptions:
          $ref: "#/components/schemas/SendingOptions"
        Tags:
          $ref: "#/components/schemas/TagList"
      description: Information about a configuration set.
    GetConfigurationSetEventDestinationsResponse:
      type: object
      properties:
        EventDestinations:
          $ref: "#/components/schemas/EventDestinations"
      description: Information about an event destination for a configuration set.
    GetDedicatedIpResponse:
      type: object
      properties:
        DedicatedIp:
          $ref: "#/components/schemas/DedicatedIp"
      description: Information about a dedicated IP address.
    GetDedicatedIpsResponse:
      type: object
      properties:
        DedicatedIps:
          $ref: "#/components/schemas/DedicatedIpList"
        NextToken:
          $ref: "#/components/schemas/NextToken"
      description: Information about the dedicated IP addresses that are associated with
        your Amazon Pinpoint account.
    GetDeliverabilityDashboardOptionsResponse:
      type: object
      required:
        - DashboardEnabled
      properties:
        DashboardEnabled:
          $ref: "#/components/schemas/Enabled"
        SubscriptionExpiryDate:
          $ref: "#/components/schemas/Timestamp"
        AccountStatus:
          $ref: "#/components/schemas/DeliverabilityDashboardAccountStatus"
        ActiveSubscribedDomains:
          $ref: "#/components/schemas/DomainDeliverabilityTrackingOptions"
        PendingExpirationSubscribedDomains:
          $ref: "#/components/schemas/DomainDeliverabilityTrackingOptions"
      description: An object that shows the status of the Deliverability dashboard for your
        Amazon Pinpoint account.
    GetDeliverabilityTestReportResponse:
      type: object
      required:
        - DeliverabilityTestReport
        - OverallPlacement
        - IspPlacements
      properties:
        DeliverabilityTestReport:
          $ref: "#/components/schemas/DeliverabilityTestReport"
        OverallPlacement:
          $ref: "#/components/schemas/PlacementStatistics"
        IspPlacements:
          $ref: "#/components/schemas/IspPlacements"
        Message:
          $ref: "#/components/schemas/MessageContent"
        Tags:
          $ref: "#/components/schemas/TagList"
      description: The results of the predictive inbox placement test.
    GetDomainDeliverabilityCampaignResponse:
      type: object
      required:
        - DomainDeliverabilityCampaign
      properties:
        DomainDeliverabilityCampaign:
          $ref: "#/components/schemas/DomainDeliverabilityCampaign"
      description: An object that contains all the deliverability data for a specific
        campaign. This data is available for a campaign only if the campaign
        sent email by using a domain that the Deliverability dashboard is
        enabled for (<code>PutDeliverabilityDashboardOption</code> operation).
    GetDomainStatisticsReportResponse:
      type: object
      required:
        - OverallVolume
        - DailyVolumes
      properties:
        OverallVolume:
          $ref: "#/components/schemas/OverallVolume"
        DailyVolumes:
          $ref: "#/components/schemas/DailyVolumes"
      description: An object that includes statistics that are related to the domain that
        you specified.
    GetEmailIdentityResponse:
      type: object
      properties:
        IdentityType:
          $ref: "#/components/schemas/IdentityType"
        FeedbackForwardingStatus:
          $ref: "#/components/schemas/Enabled"
        VerifiedForSendingStatus:
          $ref: "#/components/schemas/Enabled"
        DkimAttributes:
          $ref: "#/components/schemas/DkimAttributes"
        MailFromAttributes:
          $ref: "#/components/schemas/MailFromAttributes"
        Tags:
          $ref: "#/components/schemas/TagList"
      description: Details about an email identity.
    ListConfigurationSetsResponse:
      type: object
      properties:
        ConfigurationSets:
          $ref: "#/components/schemas/ConfigurationSetNameList"
        NextToken:
          $ref: "#/components/schemas/NextToken"
      description: A list of configuration sets in your Amazon Pinpoint account in the
        current AWS Region.
    ListDedicatedIpPoolsResponse:
      type: object
      properties:
        DedicatedIpPools:
          $ref: "#/components/schemas/ListOfDedicatedIpPools"
        NextToken:
          $ref: "#/components/schemas/NextToken"
      description: A list of dedicated IP pools.
    ListDeliverabilityTestReportsResponse:
      type: object
      required:
        - DeliverabilityTestReports
      properties:
        DeliverabilityTestReports:
          $ref: "#/components/schemas/DeliverabilityTestReports"
        NextToken:
          $ref: "#/components/schemas/NextToken"
      description: A list of the predictive inbox placement test reports that are available
        for your account, regardless of whether or not those tests are complete.
    ListDomainDeliverabilityCampaignsResponse:
      type: object
      required:
        - DomainDeliverabilityCampaigns
      properties:
        DomainDeliverabilityCampaigns:
          $ref: "#/components/schemas/DomainDeliverabilityCampaignList"
        NextToken:
          $ref: "#/components/schemas/NextToken"
      description: An array of objects that provide deliverability data for all the
        campaigns that used a specific domain to send email during a specified
        time range. This data is available for a domain only if you enabled the
        Deliverability dashboard (<code>PutDeliverabilityDashboardOption</code>
        operation) for the domain.
    ListEmailIdentitiesResponse:
      type: object
      properties:
        EmailIdentities:
          $ref: "#/components/schemas/IdentityInfoList"
        NextToken:
          $ref: "#/components/schemas/NextToken"
      description: A list of all of the identities that you've attempted to verify for use
        with Amazon Pinpoint, regardless of whether or not those identities were
        successfully verified.
    ListTagsForResourceResponse:
      type: object
      required:
        - Tags
      properties:
        Tags:
          $ref: "#/components/schemas/TagList"
    PutAccountDedicatedIpWarmupAttributesResponse:
      type: object
      properties: {}
      description: An HTTP 200 response if the request succeeds, or an error message if the
        request fails.
    PutAccountSendingAttributesResponse:
      type: object
      properties: {}
      description: An HTTP 200 response if the request succeeds, or an error message if the
        request fails.
    PutConfigurationSetDeliveryOptionsResponse:
      type: object
      properties: {}
      description: An HTTP 200 response if the request succeeds, or an error message if the
        request fails.
    PutConfigurationSetReputationOptionsResponse:
      type: object
      properties: {}
      description: An HTTP 200 response if the request succeeds, or an error message if the
        request fails.
    PutConfigurationSetSendingOptionsResponse:
      type: object
      properties: {}
      description: An HTTP 200 response if the request succeeds, or an error message if the
        request fails.
    PutConfigurationSetTrackingOptionsResponse:
      type: object
      properties: {}
      description: An HTTP 200 response if the request succeeds, or an error message if the
        request fails.
    PutDedicatedIpInPoolResponse:
      type: object
      properties: {}
      description: An HTTP 200 response if the request succeeds, or an error message if the
        request fails.
    PutDedicatedIpWarmupAttributesResponse:
      type: object
      properties: {}
      description: An HTTP 200 response if the request succeeds, or an error message if the
        request fails.
    PutDeliverabilityDashboardOptionResponse:
      type: object
      properties: {}
      description: A response that indicates whether the Deliverability dashboard is
        enabled for your Amazon Pinpoint account.
    DomainDeliverabilityTrackingOption:
      type: object
      properties:
        Domain:
          $ref: "#/components/schemas/Domain"
        SubscriptionStartDate:
          $ref: "#/components/schemas/Timestamp"
        InboxPlacementTrackingOption:
          $ref: "#/components/schemas/InboxPlacementTrackingOption"
      description: An object that contains information about the Deliverability dashboard
        subscription for a verified domain that you use to send email and
        currently has an active Deliverability dashboard subscription. If a
        Deliverability dashboard subscription is active for a domain, you gain
        access to reputation, inbox placement, and other metrics for the domain.
    PutEmailIdentityDkimAttributesResponse:
      type: object
      properties: {}
      description: An HTTP 200 response if the request succeeds, or an error message if the
        request fails.
    PutEmailIdentityFeedbackAttributesResponse:
      type: object
      properties: {}
      description: An HTTP 200 response if the request succeeds, or an error message if the
        request fails.
    PutEmailIdentityMailFromAttributesResponse:
      type: object
      properties: {}
      description: An HTTP 200 response if the request succeeds, or an error message if the
        request fails.
    SendEmailResponse:
      type: object
      properties:
        MessageId:
          $ref: "#/components/schemas/OutboundMessageId"
      description: A unique message ID that you receive when Amazon Pinpoint accepts an
        email for sending.
    EmailAddressList:
      type: array
      items:
        $ref: "#/components/schemas/EmailAddress"
    EmailAddress:
      type: string
    MessageTag:
      type: object
      required:
        - Name
        - Value
      properties:
        Name:
          $ref: "#/components/schemas/MessageTagName"
        Value:
          $ref: "#/components/schemas/MessageTagValue"
      description: "Contains the name and value of a tag that you apply to an email. You
        can use message tags when you publish email sending events. "
    TagResourceResponse:
      type: object
      properties: {}
    UntagResourceResponse:
      type: object
      properties: {}
    TagKey:
      type: string
    UpdateConfigurationSetEventDestinationResponse:
      type: object
      properties: {}
      description: An HTTP 200 response if the request succeeds, or an error message if the
        request fails.
    AmazonResourceName:
      type: string
    BehaviorOnMxFailure:
      type: string
      enum:
        - USE_DEFAULT_VALUE
        - REJECT_MESSAGE
      description: <p>The action that you want Amazon Pinpoint to take if it can't read the
        required MX record for a custom MAIL FROM domain. When you set this
        value to <code>UseDefaultValue</code>, Amazon Pinpoint uses
        <i>amazonses.com</i> as the MAIL FROM domain. When you set this value to
        <code>RejectMessage</code>, Amazon Pinpoint returns a
        <code>MailFromDomainNotVerified</code> error, and doesn't attempt to
        deliver the email.</p> <p>These behaviors are taken when the custom MAIL
        FROM domain configuration is in the <code>Pending</code>,
        <code>Failed</code>, and <code>TemporaryFailure</code> states.</p>
    BlacklistEntry:
      type: object
      properties:
        RblName:
          $ref: "#/components/schemas/RblName"
        ListingTime:
          $ref: "#/components/schemas/Timestamp"
        Description:
          $ref: "#/components/schemas/BlacklistingDescription"
      description: An object that contains information about a blacklisting event that
        impacts one of the dedicated IP addresses that is associated with your
        account.
    BlacklistEntries:
      type: array
      items:
        $ref: "#/components/schemas/BlacklistEntry"
    RblName:
      type: string
      description: The name of a blacklist that an IP address was found on.
    Timestamp:
      type: string
      format: date-time
    BlacklistingDescription:
      type: string
      description: A description of the blacklisting event.
    BlacklistItemNames:
      type: array
      items:
        $ref: "#/components/schemas/BlacklistItemName"
    BlacklistReport:
      type: object
      additionalProperties:
        $ref: "#/components/schemas/BlacklistEntries"
    Content:
      type: object
      required:
        - Data
      properties:
        Data:
          $ref: "#/components/schemas/MessageData"
        Charset:
          $ref: "#/components/schemas/Charset"
      description: An object that represents the content of the email, and optionally a
        character set specification.
    Body:
      type: object
      properties:
        Text:
          $ref: "#/components/schemas/Content"
        Html:
          $ref: "#/components/schemas/Content"
      description: Represents the body of the email message.
    CampaignId:
      type: string
    Charset:
      type: string
    CloudWatchDimensionConfigurations:
      type: array
      items:
        $ref: "#/components/schemas/CloudWatchDimensionConfiguration"
    DimensionName:
      type: string
      description: <p>The name of an Amazon CloudWatch dimension associated with an email
        sending metric. The name has to meet the following criteria:</p> <ul>
        <li> <p>It can only contain ASCII letters (a-z, A-Z), numbers (0-9),
        underscores (_), or dashes (-).</p> </li> <li> <p>It can contain no more
        than 256 characters.</p> </li> </ul>
    DimensionValueSource:
      type: string
      enum:
        - MESSAGE_TAG
        - EMAIL_HEADER
        - LINK_TAG
      description: The location where Amazon Pinpoint finds the value of a dimension to
        publish to Amazon CloudWatch. If you want Amazon Pinpoint to use the
        message tags that you specify using an X-SES-MESSAGE-TAGS header or a
        parameter to the SendEmail/SendRawEmail API, choose
        <code>messageTag</code>. If you want Amazon Pinpoint to use your own
        email headers, choose <code>emailHeader</code>. If you want Amazon
        Pinpoint to use link tags, choose <code>linkTags</code>.
    DefaultDimensionValue:
      type: string
      description: <p>The default value of the dimension that is published to Amazon
        CloudWatch if you don't provide the value of the dimension when you send
        an email. This value has to meet the following criteria:</p> <ul> <li>
        <p>It can only contain ASCII letters (a-z, A-Z), numbers (0-9),
        underscores (_), or dashes (-).</p> </li> <li> <p>It can contain no more
        than 256 characters.</p> </li> </ul>
    CloudWatchDimensionConfiguration:
      type: object
      required:
        - DimensionName
        - DimensionValueSource
        - DefaultDimensionValue
      properties:
        DimensionName:
          $ref: "#/components/schemas/DimensionName"
        DimensionValueSource:
          $ref: "#/components/schemas/DimensionValueSource"
        DefaultDimensionValue:
          $ref: "#/components/schemas/DefaultDimensionValue"
      description: An object that defines the dimension configuration to use when you send
        Amazon Pinpoint email events to Amazon CloudWatch.
    ConfigurationSetName:
      type: string
      description: <p>The name of a configuration set.</p> <p>In Amazon Pinpoint,
        <i>configuration sets</i> are groups of rules that you can apply to the
        emails you send. You apply a configuration set to an email by including
        a reference to the configuration set in the headers of the email. When
        you apply a configuration set to an email, all of the rules in that
        configuration set are applied to the email.</p>
    ConfigurationSetNameList:
      type: array
      items:
        $ref: "#/components/schemas/ConfigurationSetName"
    MessageData:
      type: string
    EventDestinationName:
      type: string
      description: <p>The name of an event destination.</p> <p>In Amazon Pinpoint,
        <i>events</i> include message sends, deliveries, opens, clicks, bounces,
        and complaints. <i>Event destinations</i> are places that you can send
        information about these events to. For example, you can send event data
        to Amazon SNS to receive notifications when you receive bounces or
        complaints, or you can use Amazon Kinesis Data Firehose to stream data
        to Amazon S3 for long-term storage.</p>
    EventDestinationDefinition:
      type: object
      properties:
        Enabled:
          $ref: "#/components/schemas/Enabled"
        MatchingEventTypes:
          $ref: "#/components/schemas/EventTypes"
        KinesisFirehoseDestination:
          $ref: "#/components/schemas/KinesisFirehoseDestination"
        CloudWatchDestination:
          $ref: "#/components/schemas/CloudWatchDestination"
        SnsDestination:
          $ref: "#/components/schemas/SnsDestination"
        PinpointDestination:
          $ref: "#/components/schemas/PinpointDestination"
      description: An object that defines the event destination. Specifically, it defines
        which services receive events from emails sent using the configuration
        set that the event destination is associated with. Also defines the
        types of events that are sent to the event destination.
    CreateConfigurationSetEventDestinationRequest:
      type: object
      required:
        - EventDestinationName
        - EventDestination
      properties:
        EventDestinationName:
          $ref: "#/components/schemas/EventDestinationName"
        EventDestination:
          $ref: "#/components/schemas/EventDestinationDefinition"
      description: A request to add an event destination to a configuration set.
    TrackingOptions:
      type: object
      required:
        - CustomRedirectDomain
      properties:
        CustomRedirectDomain:
          $ref: "#/components/schemas/CustomRedirectDomain"
      description: <p>An object that defines the tracking options for a configuration set.
        When you use Amazon Pinpoint to send an email, it contains an invisible
        image that's used to track when recipients open your email. If your
        email contains links, those links are changed slightly in order to track
        when recipients click them.</p> <p>These images and links include
        references to a domain operated by AWS. You can optionally configure
        Amazon Pinpoint to use a domain that you operate for these images and
        links.</p>
    DeliveryOptions:
      type: object
      properties:
        TlsPolicy:
          $ref: "#/components/schemas/TlsPolicy"
        SendingPoolName:
          $ref: "#/components/schemas/PoolName"
      description: Used to associate a configuration set with a dedicated IP pool.
    ReputationOptions:
      type: object
      properties:
        ReputationMetricsEnabled:
          $ref: "#/components/schemas/Enabled"
        LastFreshStart:
          $ref: "#/components/schemas/LastFreshStart"
      description: "Enable or disable collection of reputation metrics for emails that you
        send using this configuration set in the current AWS Region. "
    SendingOptions:
      type: object
      properties:
        SendingEnabled:
          $ref: "#/components/schemas/Enabled"
      description: Used to enable or disable email sending for messages that use this
        configuration set in the current AWS Region.
    TagList:
      type: array
      items:
        $ref: "#/components/schemas/Tag"
    CreateConfigurationSetRequest:
      type: object
      required:
        - ConfigurationSetName
      properties:
        ConfigurationSetName:
          $ref: "#/components/schemas/ConfigurationSetName"
        TrackingOptions:
          $ref: "#/components/schemas/TrackingOptions"
        DeliveryOptions:
          $ref: "#/components/schemas/DeliveryOptions"
        ReputationOptions:
          $ref: "#/components/schemas/ReputationOptions"
        SendingOptions:
          $ref: "#/components/schemas/SendingOptions"
        Tags:
          $ref: "#/components/schemas/TagList"
      description: A request to create a configuration set.
    CreateDedicatedIpPoolRequest:
      type: object
      required:
        - PoolName
      properties:
        PoolName:
          $ref: "#/components/schemas/PoolName"
        Tags:
          $ref: "#/components/schemas/TagList"
      description: A request to create a new dedicated IP pool.
    ReportName:
      type: string
      description: A name that helps you identify a report generated by the Deliverability
        dashboard.
    EmailContent:
      type: object
      properties:
        Simple:
          $ref: "#/components/schemas/Message"
        Raw:
          $ref: "#/components/schemas/RawMessage"
      description: An object that defines the entire content of the email, including the
        message headers and the body content. You can create a simple email
        message, in which you specify the subject and the text and HTML versions
        of the message body. You can also create raw messages, in which you
        specify a complete MIME-formatted message. Raw messages can include
        attachments and custom headers.
    CreateDeliverabilityTestReportRequest:
      type: object
      required:
        - FromEmailAddress
        - Content
      properties:
        ReportName:
          $ref: "#/components/schemas/ReportName"
        FromEmailAddress:
          $ref: "#/components/schemas/EmailAddress"
        Content:
          $ref: "#/components/schemas/EmailContent"
        Tags:
          $ref: "#/components/schemas/TagList"
      description: A request to perform a predictive inbox placement test. Predictive inbox
        placement tests can help you predict how your messages will be handled
        by various email providers around the world. When you perform a
        predictive inbox placement test, you provide a sample message that
        contains the content that you plan to send to your customers. Amazon
        Pinpoint then sends that message to special email addresses spread
        across several major email providers. After about 24 hours, the test is
        complete, and you can use the <code>GetDeliverabilityTestReport</code>
        operation to view the results of the test.
    ReportId:
      type: string
      description: A unique string that identifies a Deliverability dashboard report.
    DeliverabilityTestStatus:
      type: string
      enum:
        - IN_PROGRESS
        - COMPLETED
      description: The status of a predictive inbox placement test. If the status is
        <code>IN_PROGRESS</code>, then the predictive inbox placement test is
        currently running. Predictive inbox placement tests are usually complete
        within 24 hours of creating the test. If the status is
        <code>COMPLETE</code>, then the test is finished, and you can use the
        <code>GetDeliverabilityTestReport</code> operation to view the results
        of the test.
    Identity:
      type: string
    CreateEmailIdentityRequest:
      type: object
      required:
        - EmailIdentity
      properties:
        EmailIdentity:
          $ref: "#/components/schemas/Identity"
        Tags:
          $ref: "#/components/schemas/TagList"
      description: A request to begin the verification process for an email identity (an
        email address or domain).
    IdentityType:
      type: string
      enum:
        - EMAIL_ADDRESS
        - DOMAIN
        - MANAGED_DOMAIN
      description: <p>The email identity type. The identity type can be one of the
        following:</p> <ul> <li> <p> <code>EMAIL_ADDRESS</code> – The identity
        is an email address.</p> </li> <li> <p> <code>DOMAIN</code> – The
        identity is a domain.</p> </li> </ul>
    DkimAttributes:
      type: object
      properties:
        SigningEnabled:
          $ref: "#/components/schemas/Enabled"
        Status:
          $ref: "#/components/schemas/DkimStatus"
        Tokens:
          $ref: "#/components/schemas/DnsTokenList"
      description: An object that contains information about the DKIM configuration for an
        email identity.
    VolumeStatistics:
      type: object
      properties:
        InboxRawCount:
          $ref: "#/components/schemas/Volume"
        SpamRawCount:
          $ref: "#/components/schemas/Volume"
        ProjectedInbox:
          $ref: "#/components/schemas/Volume"
        ProjectedSpam:
          $ref: "#/components/schemas/Volume"
      description: An object that contains information about the amount of email that was
        delivered to recipients.
    DomainIspPlacements:
      type: array
      items:
        $ref: "#/components/schemas/DomainIspPlacement"
    DailyVolume:
      type: object
      properties:
        StartDate:
          $ref: "#/components/schemas/Timestamp"
        VolumeStatistics:
          $ref: "#/components/schemas/VolumeStatistics"
        DomainIspPlacements:
          $ref: "#/components/schemas/DomainIspPlacements"
      description: An object that contains information about the volume of email sent on
        each day of the analysis period.
    DailyVolumes:
      type: array
      items:
        $ref: "#/components/schemas/DailyVolume"
    Ip:
      type: string
      description: A dedicated IP address that is associated with your Amazon Pinpoint
        account.
    WarmupStatus:
      type: string
      enum:
        - IN_PROGRESS
        - DONE
      description: The warmup status of a dedicated IP.
    Percentage100Wrapper:
      type: integer
    DedicatedIp:
      type: object
      required:
        - Ip
        - WarmupStatus
        - WarmupPercentage
      properties:
        Ip:
          $ref: "#/components/schemas/Ip"
        WarmupStatus:
          $ref: "#/components/schemas/WarmupStatus"
        WarmupPercentage:
          $ref: "#/components/schemas/Percentage100Wrapper"
        PoolName:
          $ref: "#/components/schemas/PoolName"
      description: <p>Contains information about a dedicated IP address that is associated
        with your Amazon Pinpoint account.</p> <p/>
    DedicatedIpList:
      type: array
      description: A list of dedicated IP addresses that are associated with your Amazon
        Pinpoint account.
      items:
        $ref: "#/components/schemas/DedicatedIp"
    DeleteConfigurationSetEventDestinationRequest:
      type: object
      properties: {}
      description: A request to delete an event destination from a configuration set.
    DeleteConfigurationSetRequest:
      type: object
      properties: {}
      description: A request to delete a configuration set.
    DeleteDedicatedIpPoolRequest:
      type: object
      properties: {}
      description: A request to delete a dedicated IP pool.
    DeleteEmailIdentityRequest:
      type: object
      properties: {}
      description: A request to delete an existing email identity. When you delete an
        identity, you lose the ability to use Amazon Pinpoint to send email from
        that identity. You can restore your ability to send email by completing
        the verification process for the identity again.
    DeliverabilityDashboardAccountStatus:
      type: string
      enum:
        - ACTIVE
        - PENDING_EXPIRATION
        - DISABLED
      description: The current status of your Deliverability dashboard subscription. If
        this value is <code>PENDING_EXPIRATION</code>, your subscription is
        scheduled to expire at the end of the current calendar month.
    DeliverabilityTestSubject:
      type: string
      description: The subject line for an email that you submitted in a predictive inbox
        placement test.
    DeliverabilityTestReport:
      type: object
      properties:
        ReportId:
          $ref: "#/components/schemas/ReportId"
        ReportName:
          $ref: "#/components/schemas/ReportName"
        Subject:
          $ref: "#/components/schemas/DeliverabilityTestSubject"
        FromEmailAddress:
          $ref: "#/components/schemas/EmailAddress"
        CreateDate:
          $ref: "#/components/schemas/Timestamp"
        DeliverabilityTestStatus:
          $ref: "#/components/schemas/DeliverabilityTestStatus"
      description: An object that contains metadata related to a predictive inbox placement
        test.
    DeliverabilityTestReports:
      type: array
      items:
        $ref: "#/components/schemas/DeliverabilityTestReport"
    Destination:
      type: object
      properties:
        ToAddresses:
          $ref: "#/components/schemas/EmailAddressList"
        CcAddresses:
          $ref: "#/components/schemas/EmailAddressList"
        BccAddresses:
          $ref: "#/components/schemas/EmailAddressList"
      description: An object that describes the recipients for an email.
    DkimStatus:
      type: string
      enum:
        - PENDING
        - SUCCESS
        - FAILED
        - TEMPORARY_FAILURE
        - NOT_STARTED
      description: <p>The DKIM authentication status of the identity. The status can be one
        of the following:</p> <ul> <li> <p> <code>PENDING</code> – The DKIM
        verification process was initiated, and Amazon Pinpoint is still waiting
        for the required CNAME records to appear in the DNS configuration for
        the domain.</p> </li> <li> <p> <code>SUCCESS</code> – The DKIM
        authentication process completed successfully.</p> </li> <li> <p>
        <code>FAILED</code> – The DKIM authentication process failed. This can
        happen when Amazon Pinpoint fails to find the required CNAME records in
        the DNS configuration of the domain.</p> </li> <li> <p>
        <code>TEMPORARY_FAILURE</code> – A temporary issue is preventing Amazon
        Pinpoint from determining the DKIM authentication status of the
        domain.</p> </li> <li> <p> <code>NOT_STARTED</code> – The DKIM
        verification process hasn't been initiated for the domain.</p> </li>
        </ul>
    DnsTokenList:
      type: array
      items:
        $ref: "#/components/schemas/DnsToken"
    DnsToken:
      type: string
    Domain:
      type: string
    ImageUrl:
      type: string
    Subject:
      type: string
    IpList:
      type: array
      items:
        $ref: "#/components/schemas/Ip"
    Volume:
      type: integer
      description: An object that contains information about inbox placement volume.
    Percentage:
      type: number
      description: An object that contains information about inbox placement percentages.
      format: double
    Esps:
      type: array
      items:
        $ref: "#/components/schemas/Esp"
    DomainDeliverabilityCampaign:
      type: object
      properties:
        CampaignId:
          $ref: "#/components/schemas/CampaignId"
        ImageUrl:
          $ref: "#/components/schemas/ImageUrl"
        Subject:
          $ref: "#/components/schemas/Subject"
        FromAddress:
          $ref: "#/components/schemas/Identity"
        SendingIps:
          $ref: "#/components/schemas/IpList"
        FirstSeenDateTime:
          $ref: "#/components/schemas/Timestamp"
        LastSeenDateTime:
          $ref: "#/components/schemas/Timestamp"
        InboxCount:
          $ref: "#/components/schemas/Volume"
        SpamCount:
          $ref: "#/components/schemas/Volume"
        ReadRate:
          $ref: "#/components/schemas/Percentage"
        DeleteRate:
          $ref: "#/components/schemas/Percentage"
        ReadDeleteRate:
          $ref: "#/components/schemas/Percentage"
        ProjectedVolume:
          $ref: "#/components/schemas/Volume"
        Esps:
          $ref: "#/components/schemas/Esps"
      description: An object that contains the deliverability data for a specific campaign.
        This data is available for a campaign only if the campaign sent email by
        using a domain that the Deliverability dashboard is enabled for
        (<code>PutDeliverabilityDashboardOption</code> operation).
    DomainDeliverabilityCampaignList:
      type: array
      description: <p/>
      items:
        $ref: "#/components/schemas/DomainDeliverabilityCampaign"
    InboxPlacementTrackingOption:
      type: object
      properties:
        Global:
          $ref: "#/components/schemas/Enabled"
        TrackedIsps:
          $ref: "#/components/schemas/IspNameList"
      description: An object that contains information about the inbox placement data
        settings for a verified domain that’s associated with your AWS account.
        This data is available only if you enabled the Deliverability dashboard
        for the domain (<code>PutDeliverabilityDashboardOption</code>
        operation).
    DomainDeliverabilityTrackingOptions:
      type: array
      description: An object that contains information about the Deliverability dashboard
        subscription for a verified domain that you use to send email and
        currently has an active Deliverability dashboard subscription. If a
        Deliverability dashboard subscription is active for a domain, you gain
        access to reputation, inbox placement, and other metrics for the domain.
      items:
        $ref: "#/components/schemas/DomainDeliverabilityTrackingOption"
    IspName:
      type: string
      description: The name of an email provider.
    DomainIspPlacement:
      type: object
      properties:
        IspName:
          $ref: "#/components/schemas/IspName"
        InboxRawCount:
          $ref: "#/components/schemas/Volume"
        SpamRawCount:
          $ref: "#/components/schemas/Volume"
        InboxPercentage:
          $ref: "#/components/schemas/Percentage"
        SpamPercentage:
          $ref: "#/components/schemas/Percentage"
      description: An object that contains inbox placement data for email sent from one of
        your email domains to a specific email provider.
    Esp:
      type: string
    EventDestination:
      type: object
      required:
        - Name
        - MatchingEventTypes
      properties:
        Name:
          $ref: "#/components/schemas/EventDestinationName"
        Enabled:
          $ref: "#/components/schemas/Enabled"
        MatchingEventTypes:
          $ref: "#/components/schemas/EventTypes"
        KinesisFirehoseDestination:
          $ref: "#/components/schemas/KinesisFirehoseDestination"
        CloudWatchDestination:
          $ref: "#/components/schemas/CloudWatchDestination"
        SnsDestination:
          $ref: "#/components/schemas/SnsDestination"
        PinpointDestination:
          $ref: "#/components/schemas/PinpointDestination"
      description: In Amazon Pinpoint, <i>events</i> include message sends, deliveries,
        opens, clicks, bounces, and complaints. <i>Event destinations</i> are
        places that you can send information about these events to. For example,
        you can send event data to Amazon SNS to receive notifications when you
        receive bounces or complaints, or you can use Amazon Kinesis Data
        Firehose to stream data to Amazon S3 for long-term storage.
    EventDestinations:
      type: array
      items:
        $ref: "#/components/schemas/EventDestination"
    EventType:
      type: string
      enum:
        - SEND
        - REJECT
        - BOUNCE
        - COMPLAINT
        - DELIVERY
        - OPEN
        - CLICK
        - RENDERING_FAILURE
      description: An email sending event type. For example, email sends, opens, and
        bounces are all email events.
    GeneralEnforcementStatus:
      type: string
    GetAccountRequest:
      type: object
      properties: {}
      description: A request to obtain information about the email-sending capabilities of
        your Amazon Pinpoint account.
    SendQuota:
      type: object
      properties:
        Max24HourSend:
          $ref: "#/components/schemas/Max24HourSend"
        MaxSendRate:
          $ref: "#/components/schemas/MaxSendRate"
        SentLast24Hours:
          $ref: "#/components/schemas/SentLast24Hours"
      description: An object that contains information about the per-day and per-second
        sending limits for your Amazon Pinpoint account in the current AWS
        Region.
    GetBlacklistReportsRequest:
      type: object
      properties: {}
      description: A request to retrieve a list of the blacklists that your dedicated IP
        addresses appear on.
    GetConfigurationSetEventDestinationsRequest:
      type: object
      properties: {}
      description: A request to obtain information about the event destinations for a
        configuration set.
    GetConfigurationSetRequest:
      type: object
      properties: {}
      description: A request to obtain information about a configuration set.
    GetDedicatedIpRequest:
      type: object
      properties: {}
      description: A request to obtain more information about a dedicated IP address.
    NextToken:
      type: string
    MaxItems:
      type: integer
    GetDedicatedIpsRequest:
      type: object
      properties: {}
      description: A request to obtain more information about dedicated IP pools.
    GetDeliverabilityDashboardOptionsRequest:
      type: object
      properties: {}
      description: <p>Retrieve information about the status of the Deliverability dashboard
        for your Amazon Pinpoint account. When the Deliverability dashboard is
        enabled, you gain access to reputation, deliverability, and other
        metrics for the domains that you use to send email using Amazon
        Pinpoint. You also gain the ability to perform predictive inbox
        placement tests.</p> <p>When you use the Deliverability dashboard, you
        pay a monthly subscription charge, in addition to any other fees that
        you accrue by using Amazon Pinpoint. For more information about the
        features and cost of a Deliverability dashboard subscription, see <a
        href="http://aws.amazon.com/pinpoint/pricing/">Amazon Pinpoint
        Pricing</a>.</p>
    GetDeliverabilityTestReportRequest:
      type: object
      properties: {}
      description: A request to retrieve the results of a predictive inbox placement test.
    PlacementStatistics:
      type: object
      properties:
        InboxPercentage:
          $ref: "#/components/schemas/Percentage"
        SpamPercentage:
          $ref: "#/components/schemas/Percentage"
        MissingPercentage:
          $ref: "#/components/schemas/Percentage"
        SpfPercentage:
          $ref: "#/components/schemas/Percentage"
        DkimPercentage:
          $ref: "#/components/schemas/Percentage"
      description: An object that contains inbox placement data for an email provider.
    IspPlacements:
      type: array
      items:
        $ref: "#/components/schemas/IspPlacement"
    MessageContent:
      type: string
      description: The body of an email message.
    GetDomainDeliverabilityCampaignRequest:
      type: object
      properties: {}
      description: Retrieve all the deliverability data for a specific campaign. This data
        is available for a campaign only if the campaign sent email by using a
        domain that the Deliverability dashboard is enabled for
        (<code>PutDeliverabilityDashboardOption</code> operation).
    GetDomainStatisticsReportRequest:
      type: object
      properties: {}
      description: A request to obtain deliverability metrics for a domain.
    OverallVolume:
      type: object
      properties:
        VolumeStatistics:
          $ref: "#/components/schemas/VolumeStatistics"
        ReadRatePercent:
          $ref: "#/components/schemas/Percentage"
        DomainIspPlacements:
          $ref: "#/components/schemas/DomainIspPlacements"
      description: An object that contains information about email that was sent from the
        selected domain.
    GetEmailIdentityRequest:
      type: object
      properties: {}
      description: A request to return details about an email identity.
    MailFromAttributes:
      type: object
      required:
        - MailFromDomain
        - MailFromDomainStatus
        - BehaviorOnMxFailure
      properties:
        MailFromDomain:
          $ref: "#/components/schemas/MailFromDomainName"
        MailFromDomainStatus:
          $ref: "#/components/schemas/MailFromDomainStatus"
        BehaviorOnMxFailure:
          $ref: "#/components/schemas/BehaviorOnMxFailure"
      description: A list of attributes that are associated with a MAIL FROM domain.
    IdentityInfo:
      type: object
      properties:
        IdentityType:
          $ref: "#/components/schemas/IdentityType"
        IdentityName:
          $ref: "#/components/schemas/Identity"
        SendingEnabled:
          $ref: "#/components/schemas/Enabled"
      description: Information about an email identity.
    IdentityInfoList:
      type: array
      items:
        $ref: "#/components/schemas/IdentityInfo"
    IspNameList:
      type: array
      items:
        $ref: "#/components/schemas/IspName"
    IspPlacement:
      type: object
      properties:
        IspName:
          $ref: "#/components/schemas/IspName"
        PlacementStatistics:
          $ref: "#/components/schemas/PlacementStatistics"
      description: An object that describes how email sent during the predictive inbox
        placement test was handled by a certain email provider.
    ListConfigurationSetsRequest:
      type: object
      properties: {}
      description: A request to obtain a list of configuration sets for your Amazon
        Pinpoint account in the current AWS Region.
    ListDedicatedIpPoolsRequest:
      type: object
      properties: {}
      description: A request to obtain a list of dedicated IP pools.
    ListOfDedicatedIpPools:
      type: array
      description: A list of dedicated IP pools that are associated with your Amazon
        Pinpoint account.
      items:
        $ref: "#/components/schemas/PoolName"
    ListDeliverabilityTestReportsRequest:
      type: object
      properties: {}
      description: A request to list all of the predictive inbox placement tests that
        you've performed.
    ListDomainDeliverabilityCampaignsRequest:
      type: object
      properties: {}
      description: Retrieve deliverability data for all the campaigns that used a specific
        domain to send email during a specified time range. This data is
        available for a domain only if you enabled the Deliverability dashboard
        (<code>PutDeliverabilityDashboardOption</code> operation) for the
        domain.
    ListEmailIdentitiesRequest:
      type: object
      properties: {}
      description: A request to list all of the email identities associated with your
        Amazon Pinpoint account. This list includes identities that you've
        already verified, identities that are unverified, and identities that
        were verified in the past, but are no longer verified.
    ListTagsForResourceRequest:
      type: object
      properties: {}
    MailFromDomainName:
      type: string
      description: The domain that you want to use as a MAIL FROM domain.
    MailFromDomainStatus:
      type: string
      enum:
        - PENDING
        - SUCCESS
        - FAILED
        - TEMPORARY_FAILURE
      description: <p>The status of the MAIL FROM domain. This status can have the
        following values:</p> <ul> <li> <p> <code>PENDING</code> – Amazon
        Pinpoint hasn't started searching for the MX record yet.</p> </li> <li>
        <p> <code>SUCCESS</code> – Amazon Pinpoint detected the required MX
        record for the MAIL FROM domain.</p> </li> <li> <p> <code>FAILED</code>
        – Amazon Pinpoint can't find the required MX record, or the record no
        longer exists.</p> </li> <li> <p> <code>TEMPORARY_FAILURE</code> – A
        temporary issue occurred, which prevented Amazon Pinpoint from
        determining the status of the MAIL FROM domain.</p> </li> </ul>
    Max24HourSend:
      type: number
      format: double
    MaxSendRate:
      type: number
      format: double
    MessageTagName:
      type: string
      description: <p>The name of the message tag. The message tag name has to meet the
        following criteria:</p> <ul> <li> <p>It can only contain ASCII letters
        (a–z, A–Z), numbers (0–9), underscores (_), or dashes (-).</p> </li>
        <li> <p>It can contain no more than 256 characters.</p> </li> </ul>
    MessageTagValue:
      type: string
      description: <p>The value of the message tag. The message tag value has to meet the
        following criteria:</p> <ul> <li> <p>It can only contain ASCII letters
        (a–z, A–Z), numbers (0–9), underscores (_), or dashes (-).</p> </li>
        <li> <p>It can contain no more than 256 characters.</p> </li> </ul>
    MessageTagList:
      type: array
      description: A list of message tags.
      items:
        $ref: "#/components/schemas/MessageTag"
    OutboundMessageId:
      type: string
    PutAccountDedicatedIpWarmupAttributesRequest:
      type: object
      properties:
        AutoWarmupEnabled:
          $ref: "#/components/schemas/Enabled"
      description: A request to enable or disable the automatic IP address warm-up feature.
    PutAccountSendingAttributesRequest:
      type: object
      properties:
        SendingEnabled:
          $ref: "#/components/schemas/Enabled"
      description: A request to change the ability of your account to send email.
    SendingPoolName:
      type: string
      description: The name of the dedicated IP pool that you want to associate with the
        configuration set.
    PutConfigurationSetDeliveryOptionsRequest:
      type: object
      properties:
        TlsPolicy:
          $ref: "#/components/schemas/TlsPolicy"
        SendingPoolName:
          $ref: "#/components/schemas/SendingPoolName"
      description: A request to associate a configuration set with a dedicated IP pool.
    PutConfigurationSetReputationOptionsRequest:
      type: object
      properties:
        ReputationMetricsEnabled:
          $ref: "#/components/schemas/Enabled"
      description: A request to enable or disable tracking of reputation metrics for a
        configuration set.
    PutConfigurationSetSendingOptionsRequest:
      type: object
      properties:
        SendingEnabled:
          $ref: "#/components/schemas/Enabled"
      description: A request to enable or disable the ability of Amazon Pinpoint to send
        emails that use a specific configuration set.
    PutConfigurationSetTrackingOptionsRequest:
      type: object
      properties:
        CustomRedirectDomain:
          $ref: "#/components/schemas/CustomRedirectDomain"
      description: A request to add a custom domain for tracking open and click events to a
        configuration set.
    PutDedicatedIpInPoolRequest:
      type: object
      required:
        - DestinationPoolName
      properties:
        DestinationPoolName:
          $ref: "#/components/schemas/PoolName"
      description: A request to move a dedicated IP address to a dedicated IP pool.
    PutDedicatedIpWarmupAttributesRequest:
      type: object
      required:
        - WarmupPercentage
      properties:
        WarmupPercentage:
          $ref: "#/components/schemas/Percentage100Wrapper"
      description: A request to change the warm-up attributes for a dedicated IP address.
        This operation is useful when you want to resume the warm-up process for
        an existing IP address.
    PutDeliverabilityDashboardOptionRequest:
      type: object
      required:
        - DashboardEnabled
      properties:
        DashboardEnabled:
          $ref: "#/components/schemas/Enabled"
        SubscribedDomains:
          $ref: "#/components/schemas/DomainDeliverabilityTrackingOptions"
      description: <p>Enable or disable the Deliverability dashboard for your Amazon
        Pinpoint account. When you enable the Deliverability dashboard, you gain
        access to reputation, deliverability, and other metrics for the domains
        that you use to send email using Amazon Pinpoint. You also gain the
        ability to perform predictive inbox placement tests.</p> <p>When you use
        the Deliverability dashboard, you pay a monthly subscription charge, in
        addition to any other fees that you accrue by using Amazon Pinpoint. For
        more information about the features and cost of a Deliverability
        dashboard subscription, see <a
        href="http://aws.amazon.com/pinpoint/pricing/">Amazon Pinpoint
        Pricing</a>.</p>
    PutEmailIdentityDkimAttributesRequest:
      type: object
      properties:
        SigningEnabled:
          $ref: "#/components/schemas/Enabled"
      description: A request to enable or disable DKIM signing of email that you send from
        an email identity.
    PutEmailIdentityFeedbackAttributesRequest:
      type: object
      properties:
        EmailForwardingEnabled:
          $ref: "#/components/schemas/Enabled"
      description: A request to set the attributes that control how bounce and complaint
        events are processed.
    PutEmailIdentityMailFromAttributesRequest:
      type: object
      properties:
        MailFromDomain:
          $ref: "#/components/schemas/MailFromDomainName"
        BehaviorOnMxFailure:
          $ref: "#/components/schemas/BehaviorOnMxFailure"
      description: A request to configure the custom MAIL FROM domain for a verified
        identity.
    RawMessageData:
      type: string
      description: <p>The raw email message. The message has to meet the following
        criteria:</p> <ul> <li> <p>The message has to contain a header and a
        body, separated by one blank line.</p> </li> <li> <p>All of the required
        header fields must be present in the message.</p> </li> <li> <p>Each
        part of a multipart MIME message must be formatted properly.</p> </li>
        <li> <p>Attachments must be in a file format that Amazon Pinpoint
        supports. </p> </li> <li> <p>The entire message must be Base64
        encoded.</p> </li> <li> <p>If any of the MIME parts in your message
        contain content that is outside of the 7-bit ASCII character range, you
        should encode that content to ensure that recipients' email clients
        render the message properly.</p> </li> <li> <p>The length of any single
        line of text in the message can't exceed 1,000 characters. This
        restriction is defined in <a
        href="https://tools.ietf.org/html/rfc5321">RFC 5321</a>.</p> </li> </ul>
    SendEmailRequest:
      type: object
      required:
        - Destination
        - Content
      properties:
        FromEmailAddress:
          $ref: "#/components/schemas/EmailAddress"
        Destination:
          $ref: "#/components/schemas/Destination"
        ReplyToAddresses:
          $ref: "#/components/schemas/EmailAddressList"
        FeedbackForwardingEmailAddress:
          $ref: "#/components/schemas/EmailAddress"
        Content:
          $ref: "#/components/schemas/EmailContent"
        EmailTags:
          $ref: "#/components/schemas/MessageTagList"
        ConfigurationSetName:
          $ref: "#/components/schemas/ConfigurationSetName"
      description: A request to send an email message.
    SentLast24Hours:
      type: number
      format: double
    TagValue:
      type: string
    TagKeyList:
      type: array
      items:
        $ref: "#/components/schemas/TagKey"
    TagResourceRequest:
      type: object
      required:
        - ResourceArn
        - Tags
      properties:
        ResourceArn:
          $ref: "#/components/schemas/AmazonResourceName"
        Tags:
          $ref: "#/components/schemas/TagList"
    UntagResourceRequest:
      type: object
      properties: {}
    UpdateConfigurationSetEventDestinationRequest:
      type: object
      required:
        - EventDestination
      properties:
        EventDestination:
          $ref: "#/components/schemas/EventDestinationDefinition"
      description: A request to change the settings for an event destination for a
        configuration set.
