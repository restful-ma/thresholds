openapi: 3.0.0
info:
  version: 2015-12-10
  x-release: v4
  title: AWS Service Catalog
  description: <fullname>AWS Service Catalog</fullname> <p> <a
    href="https://aws.amazon.com/servicecatalog/">AWS Service Catalog</a>
    enables organizations to create and manage catalogs of IT services that are
    approved for use on AWS. To get the most out of this documentation, you
    should be familiar with the terminology discussed in <a
    href="http://docs.aws.amazon.com/servicecatalog/latest/adminguide/what-is_concepts.html">AWS
    Service Catalog Concepts</a>.</p>
  x-logo:
    url: https://twitter.com/awscloud/profile_image?size=original
    backgroundColor: "#FFFFFF"
  termsOfService: https://aws.amazon.com/service-terms/
  contact:
    name: Mike Ralphson
    email: mike.ralphson@gmail.com
    url: https://github.com/mermade/aws2openapi
    x-twitter: PermittedSoc
  license:
    name: Apache 2.0 License
    url: http://www.apache.org/licenses/
  x-providerName: amazonaws.com
  x-serviceName: servicecatalog
  x-origin:
    - contentType: application/json
      url: https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/servicecatalog-2015-12-10.normal.json
      converter:
        url: https://github.com/mermade/aws2openapi
        version: 1.0.0
      x-apisguru-direct: true
  x-apiClientRegistration:
    url: https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct
  x-apisguru-categories:
    - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: https://docs.aws.amazon.com/servicecatalog/
x-hasEquivalentPaths: true
security:
  - hmac: []
paths:
  /#X-Amz-Target=AWS242ServiceCatalogService.AcceptPortfolioShare:
    post:
      operationId: AcceptPortfolioShare
      description: Accepts an offer to share the specified portfolio.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AcceptPortfolioShareOutput"
        "480":
          description: InvalidParametersException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParametersException"
        "481":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "482":
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWS242ServiceCatalogService.AcceptPortfolioShare
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AcceptPortfolioShareInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWS242ServiceCatalogService.AssociateBudgetWithResource:
    post:
      operationId: AssociateBudgetWithResource
      description: Associates the specified budget with the specified resource.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AssociateBudgetWithResourceOutput"
        "480":
          description: InvalidParametersException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParametersException"
        "481":
          description: DuplicateResourceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DuplicateResourceException"
        "482":
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
        "483":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWS242ServiceCatalogService.AssociateBudgetWithResource
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AssociateBudgetWithResourceInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWS242ServiceCatalogService.AssociatePrincipalWithPortfolio:
    post:
      operationId: AssociatePrincipalWithPortfolio
      description: Associates the specified principal ARN with the specified portfolio.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AssociatePrincipalWithPortfolioOutput"
        "480":
          description: InvalidParametersException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParametersException"
        "481":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "482":
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWS242ServiceCatalogService.AssociatePrincipalWithPortfolio
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AssociatePrincipalWithPortfolioInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWS242ServiceCatalogService.AssociateProductWithPortfolio:
    post:
      operationId: AssociateProductWithPortfolio
      description: Associates the specified product with the specified portfolio.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AssociateProductWithPortfolioOutput"
        "480":
          description: InvalidParametersException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParametersException"
        "481":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "482":
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWS242ServiceCatalogService.AssociateProductWithPortfolio
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AssociateProductWithPortfolioInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWS242ServiceCatalogService.AssociateServiceActionWithProvisioningArtifact:
    post:
      operationId: AssociateServiceActionWithProvisioningArtifact
      description: Associates a self-service action with a provisioning artifact.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AssociateServiceActionWithProvisioningA\
                  rtifactOutput"
        "480":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "481":
          description: DuplicateResourceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DuplicateResourceException"
        "482":
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWS242ServiceCatalogService.AssociateServiceActionWithProvisioningArtifact
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AssociateServiceActionWithProvisioningArt\
                ifactInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWS242ServiceCatalogService.AssociateTagOptionWithResource:
    post:
      operationId: AssociateTagOptionWithResource
      description: Associate the specified TagOption with the specified portfolio or
        product.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AssociateTagOptionWithResourceOutput"
        "480":
          description: TagOptionNotMigratedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TagOptionNotMigratedException"
        "481":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "482":
          description: InvalidParametersException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParametersException"
        "483":
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
        "484":
          description: DuplicateResourceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DuplicateResourceException"
        "485":
          description: InvalidStateException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidStateException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWS242ServiceCatalogService.AssociateTagOptionWithResource
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AssociateTagOptionWithResourceInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWS242ServiceCatalogService.BatchAssociateServiceActionWithProvisioningArtifact:
    post:
      operationId: BatchAssociateServiceActionWithProvisioningArtifact
      description: Associates multiple self-service actions with provisioning artifacts.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BatchAssociateServiceActionWithProvisio\
                  ningArtifactOutput"
        "480":
          description: InvalidParametersException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParametersException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWS242ServiceCatalogService.BatchAssociateServiceActionWithProvisioningArtifact
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BatchAssociateServiceActionWithProvisioni\
                ngArtifactInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWS242ServiceCatalogService.BatchDisassociateServiceActionFromProvisioningArtifact:
    post:
      operationId: BatchDisassociateServiceActionFromProvisioningArtifact
      description: Disassociates a batch of self-service actions from the specified
        provisioning artifact.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BatchDisassociateServiceActionFromProvi\
                  sioningArtifactOutput"
        "480":
          description: InvalidParametersException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParametersException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWS242ServiceCatalogService.BatchDisassociateServiceActionFromProvisioningArtifact
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BatchDisassociateServiceActionFromProvisi\
                oningArtifactInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWS242ServiceCatalogService.CopyProduct:
    post:
      operationId: CopyProduct
      description: <p>Copies the specified source product to the specified target product
        or a new product.</p> <p>You can copy a product to the same account or
        another account. You can copy a product to the same region or another
        region.</p> <p>This operation is performed asynchronously. To track the
        progress of the operation, use <a>DescribeCopyProductStatus</a>.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CopyProductOutput"
        "480":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "481":
          description: InvalidParametersException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParametersException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWS242ServiceCatalogService.CopyProduct
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CopyProductInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWS242ServiceCatalogService.CreateConstraint:
    post:
      operationId: CreateConstraint
      description: Creates a constraint.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateConstraintOutput"
        "480":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "481":
          description: InvalidParametersException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParametersException"
        "482":
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
        "483":
          description: DuplicateResourceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DuplicateResourceException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWS242ServiceCatalogService.CreateConstraint
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateConstraintInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWS242ServiceCatalogService.CreatePortfolio:
    post:
      operationId: CreatePortfolio
      description: Creates a portfolio.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreatePortfolioOutput"
        "480":
          description: InvalidParametersException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParametersException"
        "481":
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
        "482":
          description: TagOptionNotMigratedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TagOptionNotMigratedException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWS242ServiceCatalogService.CreatePortfolio
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreatePortfolioInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWS242ServiceCatalogService.CreatePortfolioShare:
    post:
      operationId: CreatePortfolioShare
      description: Shares the specified portfolio with the specified account or
        organization node. Shares to an organization node can only be created by
        the master account of an Organization. AWSOrganizationsAccess must be
        enabled in order to create a portfolio share to an organization node.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreatePortfolioShareOutput"
        "480":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "481":
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
        "482":
          description: InvalidParametersException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParametersException"
        "483":
          description: OperationNotSupportedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationNotSupportedException"
        "484":
          description: InvalidStateException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidStateException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWS242ServiceCatalogService.CreatePortfolioShare
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreatePortfolioShareInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWS242ServiceCatalogService.CreateProduct:
    post:
      operationId: CreateProduct
      description: Creates a product.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateProductOutput"
        "480":
          description: InvalidParametersException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParametersException"
        "481":
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
        "482":
          description: TagOptionNotMigratedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TagOptionNotMigratedException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWS242ServiceCatalogService.CreateProduct
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateProductInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWS242ServiceCatalogService.CreateProvisionedProductPlan:
    post:
      operationId: CreateProvisionedProductPlan
      description: <p>Creates a plan. A plan includes the list of resources to be created
        (when provisioning a new product) or modified (when updating a
        provisioned product) when the plan is executed.</p> <p>You can create
        one plan per provisioned product. To create a plan for an existing
        provisioned product, the product status must be AVAILBLE or TAINTED.</p>
        <p>To view the resource changes in the change set, use
        <a>DescribeProvisionedProductPlan</a>. To create or modify the
        provisioned product, use <a>ExecuteProvisionedProductPlan</a>.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateProvisionedProductPlanOutput"
        "480":
          description: InvalidParametersException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParametersException"
        "481":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "482":
          description: InvalidStateException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidStateException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWS242ServiceCatalogService.CreateProvisionedProductPlan
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateProvisionedProductPlanInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWS242ServiceCatalogService.CreateProvisioningArtifact:
    post:
      operationId: CreateProvisioningArtifact
      description: <p>Creates a provisioning artifact (also known as a version) for the
        specified product.</p> <p>You cannot create a provisioning artifact for
        a product that was shared with you.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateProvisioningArtifactOutput"
        "480":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "481":
          description: InvalidParametersException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParametersException"
        "482":
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWS242ServiceCatalogService.CreateProvisioningArtifact
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateProvisioningArtifactInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWS242ServiceCatalogService.CreateServiceAction:
    post:
      operationId: CreateServiceAction
      description: Creates a self-service action.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateServiceActionOutput"
        "480":
          description: InvalidParametersException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParametersException"
        "481":
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWS242ServiceCatalogService.CreateServiceAction
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateServiceActionInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWS242ServiceCatalogService.CreateTagOption:
    post:
      operationId: CreateTagOption
      description: Creates a TagOption.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateTagOptionOutput"
        "480":
          description: TagOptionNotMigratedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TagOptionNotMigratedException"
        "481":
          description: DuplicateResourceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DuplicateResourceException"
        "482":
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWS242ServiceCatalogService.CreateTagOption
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateTagOptionInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWS242ServiceCatalogService.DeleteConstraint:
    post:
      operationId: DeleteConstraint
      description: Deletes the specified constraint.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteConstraintOutput"
        "480":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "481":
          description: InvalidParametersException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParametersException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWS242ServiceCatalogService.DeleteConstraint
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeleteConstraintInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWS242ServiceCatalogService.DeletePortfolio:
    post:
      operationId: DeletePortfolio
      description: <p>Deletes the specified portfolio.</p> <p>You cannot delete a portfolio
        if it was shared with you or if it has associated products, users,
        constraints, or shared accounts.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeletePortfolioOutput"
        "480":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "481":
          description: InvalidParametersException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParametersException"
        "482":
          description: ResourceInUseException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceInUseException"
        "483":
          description: TagOptionNotMigratedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TagOptionNotMigratedException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWS242ServiceCatalogService.DeletePortfolio
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeletePortfolioInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWS242ServiceCatalogService.DeletePortfolioShare:
    post:
      operationId: DeletePortfolioShare
      description: Stops sharing the specified portfolio with the specified account or
        organization node. Shares to an organization node can only be deleted by
        the master account of an Organization.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeletePortfolioShareOutput"
        "480":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "481":
          description: InvalidParametersException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParametersException"
        "482":
          description: OperationNotSupportedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationNotSupportedException"
        "483":
          description: InvalidStateException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidStateException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWS242ServiceCatalogService.DeletePortfolioShare
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeletePortfolioShareInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWS242ServiceCatalogService.DeleteProduct:
    post:
      operationId: DeleteProduct
      description: <p>Deletes the specified product.</p> <p>You cannot delete a product if
        it was shared with you or is associated with a portfolio.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteProductOutput"
        "480":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "481":
          description: ResourceInUseException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceInUseException"
        "482":
          description: InvalidParametersException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParametersException"
        "483":
          description: TagOptionNotMigratedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TagOptionNotMigratedException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWS242ServiceCatalogService.DeleteProduct
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeleteProductInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWS242ServiceCatalogService.DeleteProvisionedProductPlan:
    post:
      operationId: DeleteProvisionedProductPlan
      description: Deletes the specified plan.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteProvisionedProductPlanOutput"
        "480":
          description: InvalidParametersException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParametersException"
        "481":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWS242ServiceCatalogService.DeleteProvisionedProductPlan
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeleteProvisionedProductPlanInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWS242ServiceCatalogService.DeleteProvisioningArtifact:
    post:
      operationId: DeleteProvisioningArtifact
      description: <p>Deletes the specified provisioning artifact (also known as a version)
        for the specified product.</p> <p>You cannot delete a provisioning
        artifact associated with a product that was shared with you. You cannot
        delete the last provisioning artifact for a product, because a product
        must have at least one provisioning artifact.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteProvisioningArtifactOutput"
        "480":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "481":
          description: ResourceInUseException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceInUseException"
        "482":
          description: InvalidParametersException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParametersException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWS242ServiceCatalogService.DeleteProvisioningArtifact
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeleteProvisioningArtifactInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWS242ServiceCatalogService.DeleteServiceAction:
    post:
      operationId: DeleteServiceAction
      description: Deletes a self-service action.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteServiceActionOutput"
        "480":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "481":
          description: ResourceInUseException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceInUseException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWS242ServiceCatalogService.DeleteServiceAction
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeleteServiceActionInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWS242ServiceCatalogService.DeleteTagOption:
    post:
      operationId: DeleteTagOption
      description: <p>Deletes the specified TagOption.</p> <p>You cannot delete a TagOption
        if it is associated with a product or portfolio.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteTagOptionOutput"
        "480":
          description: TagOptionNotMigratedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TagOptionNotMigratedException"
        "481":
          description: ResourceInUseException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceInUseException"
        "482":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWS242ServiceCatalogService.DeleteTagOption
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeleteTagOptionInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWS242ServiceCatalogService.DescribeConstraint:
    post:
      operationId: DescribeConstraint
      description: Gets information about the specified constraint.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeConstraintOutput"
        "480":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWS242ServiceCatalogService.DescribeConstraint
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DescribeConstraintInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWS242ServiceCatalogService.DescribeCopyProductStatus:
    post:
      operationId: DescribeCopyProductStatus
      description: Gets the status of the specified copy product operation.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeCopyProductStatusOutput"
        "480":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWS242ServiceCatalogService.DescribeCopyProductStatus
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DescribeCopyProductStatusInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWS242ServiceCatalogService.DescribePortfolio:
    post:
      operationId: DescribePortfolio
      description: Gets information about the specified portfolio.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribePortfolioOutput"
        "480":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWS242ServiceCatalogService.DescribePortfolio
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DescribePortfolioInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWS242ServiceCatalogService.DescribePortfolioShareStatus:
    post:
      operationId: DescribePortfolioShareStatus
      description: Gets the status of the specified portfolio share operation. This API can
        only be called by the master account in the organization.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribePortfolioShareStatusOutput"
        "480":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "481":
          description: InvalidParametersException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParametersException"
        "482":
          description: OperationNotSupportedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationNotSupportedException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWS242ServiceCatalogService.DescribePortfolioShareStatus
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DescribePortfolioShareStatusInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWS242ServiceCatalogService.DescribeProduct:
    post:
      operationId: DescribeProduct
      description: Gets information about the specified product.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeProductOutput"
        "480":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "481":
          description: InvalidParametersException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParametersException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWS242ServiceCatalogService.DescribeProduct
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DescribeProductInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWS242ServiceCatalogService.DescribeProductAsAdmin:
    post:
      operationId: DescribeProductAsAdmin
      description: Gets information about the specified product. This operation is run with
        administrator access.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeProductAsAdminOutput"
        "480":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWS242ServiceCatalogService.DescribeProductAsAdmin
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DescribeProductAsAdminInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWS242ServiceCatalogService.DescribeProductView:
    post:
      operationId: DescribeProductView
      description: Gets information about the specified product.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeProductViewOutput"
        "480":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "481":
          description: InvalidParametersException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParametersException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWS242ServiceCatalogService.DescribeProductView
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DescribeProductViewInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWS242ServiceCatalogService.DescribeProvisionedProduct:
    post:
      operationId: DescribeProvisionedProduct
      description: Gets information about the specified provisioned product.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeProvisionedProductOutput"
        "480":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWS242ServiceCatalogService.DescribeProvisionedProduct
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DescribeProvisionedProductInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWS242ServiceCatalogService.DescribeProvisionedProductPlan:
    post:
      operationId: DescribeProvisionedProductPlan
      description: Gets information about the resource changes for the specified plan.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeProvisionedProductPlanOutput"
        "480":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "481":
          description: InvalidParametersException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParametersException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWS242ServiceCatalogService.DescribeProvisionedProductPlan
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DescribeProvisionedProductPlanInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWS242ServiceCatalogService.DescribeProvisioningArtifact:
    post:
      operationId: DescribeProvisioningArtifact
      description: Gets information about the specified provisioning artifact (also known
        as a version) for the specified product.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeProvisioningArtifactOutput"
        "480":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWS242ServiceCatalogService.DescribeProvisioningArtifact
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DescribeProvisioningArtifactInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWS242ServiceCatalogService.DescribeProvisioningParameters:
    post:
      operationId: DescribeProvisioningParameters
      description: '<p>Gets information about the configuration required to provision the
        specified product using the specified provisioning artifact.</p> <p>If
        the output contains a TagOption key with an empty list of values, there
        is a TagOption conflict for that key. The end user cannot take action to
        fix the conflict, and launch is not blocked. In subsequent calls to
        <a>ProvisionProduct</a>, do not include conflicted TagOption keys as
        tags, or this causes the error "Parameter validation failed: Missing
        required parameter in Tags[<i>N</i>]:<i>Value</i>". Tag the provisioned
        product with the value
        <code>sc-tagoption-conflict-portfolioId-productId</code>.</p>'
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeProvisioningParametersOutput"
        "480":
          description: InvalidParametersException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParametersException"
        "481":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWS242ServiceCatalogService.DescribeProvisioningParameters
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DescribeProvisioningParametersInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWS242ServiceCatalogService.DescribeRecord:
    post:
      operationId: DescribeRecord
      description: <p>Gets information about the specified request operation.</p> <p>Use
        this operation after calling a request operation (for example,
        <a>ProvisionProduct</a>, <a>TerminateProvisionedProduct</a>, or
        <a>UpdateProvisionedProduct</a>). </p> <note> <p>If a provisioned
        product was transferred to a new owner using
        <a>UpdateProvisionedProductProperties</a>, the new owner will be able to
        describe all past records for that product. The previous owner will no
        longer be able to describe the records, but will be able to use
        <a>ListRecordHistory</a> to see the product's history from when he was
        the owner.</p> </note>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeRecordOutput"
        "480":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWS242ServiceCatalogService.DescribeRecord
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DescribeRecordInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWS242ServiceCatalogService.DescribeServiceAction:
    post:
      operationId: DescribeServiceAction
      description: Describes a self-service action.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeServiceActionOutput"
        "480":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWS242ServiceCatalogService.DescribeServiceAction
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DescribeServiceActionInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWS242ServiceCatalogService.DescribeServiceActionExecutionParameters:
    post:
      operationId: DescribeServiceActionExecutionParameters
      description: ""
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeServiceActionExecutionParameter\
                  sOutput"
        "480":
          description: InvalidParametersException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParametersException"
        "481":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWS242ServiceCatalogService.DescribeServiceActionExecutionParameters
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DescribeServiceActionExecutionParametersI\
                nput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWS242ServiceCatalogService.DescribeTagOption:
    post:
      operationId: DescribeTagOption
      description: Gets information about the specified TagOption.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeTagOptionOutput"
        "480":
          description: TagOptionNotMigratedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TagOptionNotMigratedException"
        "481":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWS242ServiceCatalogService.DescribeTagOption
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DescribeTagOptionInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWS242ServiceCatalogService.DisableAWSOrganizationsAccess:
    post:
      operationId: DisableAWSOrganizationsAccess
      description: Disable portfolio sharing through AWS Organizations feature. This
        feature will not delete your current shares but it will prevent you from
        creating new shares throughout your organization. Current shares will
        not be in sync with your organization structure if it changes after
        calling this API. This API can only be called by the master account in
        the organization.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DisableAWSOrganizationsAccessOutput"
        "480":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "481":
          description: InvalidStateException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidStateException"
        "482":
          description: OperationNotSupportedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationNotSupportedException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWS242ServiceCatalogService.DisableAWSOrganizationsAccess
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DisableAWSOrganizationsAccessInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWS242ServiceCatalogService.DisassociateBudgetFromResource:
    post:
      operationId: DisassociateBudgetFromResource
      description: Disassociates the specified budget from the specified resource.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DisassociateBudgetFromResourceOutput"
        "480":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWS242ServiceCatalogService.DisassociateBudgetFromResource
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DisassociateBudgetFromResourceInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWS242ServiceCatalogService.DisassociatePrincipalFromPortfolio:
    post:
      operationId: DisassociatePrincipalFromPortfolio
      description: Disassociates a previously associated principal ARN from a specified
        portfolio.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DisassociatePrincipalFromPortfolioOutput"
        "480":
          description: InvalidParametersException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParametersException"
        "481":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWS242ServiceCatalogService.DisassociatePrincipalFromPortfolio
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DisassociatePrincipalFromPortfolioInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWS242ServiceCatalogService.DisassociateProductFromPortfolio:
    post:
      operationId: DisassociateProductFromPortfolio
      description: "Disassociates the specified product from the specified portfolio. "
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DisassociateProductFromPortfolioOutput"
        "480":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "481":
          description: ResourceInUseException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceInUseException"
        "482":
          description: InvalidParametersException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParametersException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWS242ServiceCatalogService.DisassociateProductFromPortfolio
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DisassociateProductFromPortfolioInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWS242ServiceCatalogService.DisassociateServiceActionFromProvisioningArtifact:
    post:
      operationId: DisassociateServiceActionFromProvisioningArtifact
      description: Disassociates the specified self-service action association from the
        specified provisioning artifact.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DisassociateServiceActionFromProvisioni\
                  ngArtifactOutput"
        "480":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWS242ServiceCatalogService.DisassociateServiceActionFromProvisioningArtifact
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DisassociateServiceActionFromProvisioning\
                ArtifactInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWS242ServiceCatalogService.DisassociateTagOptionFromResource:
    post:
      operationId: DisassociateTagOptionFromResource
      description: Disassociates the specified TagOption from the specified resource.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DisassociateTagOptionFromResourceOutput"
        "480":
          description: TagOptionNotMigratedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TagOptionNotMigratedException"
        "481":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWS242ServiceCatalogService.DisassociateTagOptionFromResource
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DisassociateTagOptionFromResourceInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWS242ServiceCatalogService.EnableAWSOrganizationsAccess:
    post:
      operationId: EnableAWSOrganizationsAccess
      description: <p>Enable portfolio sharing feature through AWS Organizations. This API
        will allow Service Catalog to receive updates on your organization in
        order to sync your shares with the current structure. This API can only
        be called by the master account in the organization.</p> <p>By calling
        this API Service Catalog will make a call to
        organizations:EnableAWSServiceAccess on your behalf so that your shares
        can be in sync with any changes in your AWS Organizations structure.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EnableAWSOrganizationsAccessOutput"
        "480":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "481":
          description: InvalidStateException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidStateException"
        "482":
          description: OperationNotSupportedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationNotSupportedException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWS242ServiceCatalogService.EnableAWSOrganizationsAccess
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EnableAWSOrganizationsAccessInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWS242ServiceCatalogService.ExecuteProvisionedProductPlan:
    post:
      operationId: ExecuteProvisionedProductPlan
      description: Provisions or modifies a product based on the resource changes for the
        specified plan.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ExecuteProvisionedProductPlanOutput"
        "480":
          description: InvalidParametersException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParametersException"
        "481":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "482":
          description: InvalidStateException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidStateException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWS242ServiceCatalogService.ExecuteProvisionedProductPlan
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ExecuteProvisionedProductPlanInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWS242ServiceCatalogService.ExecuteProvisionedProductServiceAction:
    post:
      operationId: ExecuteProvisionedProductServiceAction
      description: Executes a self-service action against a provisioned product.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ExecuteProvisionedProductServiceActionO\
                  utput"
        "480":
          description: InvalidParametersException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParametersException"
        "481":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "482":
          description: InvalidStateException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidStateException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWS242ServiceCatalogService.ExecuteProvisionedProductServiceAction
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ExecuteProvisionedProductServiceActionInp\
                ut"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWS242ServiceCatalogService.GetAWSOrganizationsAccessStatus:
    post:
      operationId: GetAWSOrganizationsAccessStatus
      description: Get the Access Status for AWS Organization portfolio share feature. This
        API can only be called by the master account in the organization.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetAWSOrganizationsAccessStatusOutput"
        "480":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "481":
          description: OperationNotSupportedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationNotSupportedException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWS242ServiceCatalogService.GetAWSOrganizationsAccessStatus
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GetAWSOrganizationsAccessStatusInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWS242ServiceCatalogService.ListAcceptedPortfolioShares:
    post:
      operationId: ListAcceptedPortfolioShares
      description: Lists all portfolios for which sharing was accepted by this account.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListAcceptedPortfolioSharesOutput"
        "480":
          description: InvalidParametersException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParametersException"
        "481":
          description: OperationNotSupportedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationNotSupportedException"
      parameters:
        - name: PageSize
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: PageToken
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWS242ServiceCatalogService.ListAcceptedPortfolioShares
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ListAcceptedPortfolioSharesInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWS242ServiceCatalogService.ListBudgetsForResource:
    post:
      operationId: ListBudgetsForResource
      description: Lists all the budgets associated to the specified resource.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListBudgetsForResourceOutput"
        "480":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "481":
          description: InvalidParametersException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParametersException"
      parameters:
        - name: PageSize
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: PageToken
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWS242ServiceCatalogService.ListBudgetsForResource
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ListBudgetsForResourceInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWS242ServiceCatalogService.ListConstraintsForPortfolio:
    post:
      operationId: ListConstraintsForPortfolio
      description: Lists the constraints for the specified portfolio and product.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListConstraintsForPortfolioOutput"
        "480":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "481":
          description: InvalidParametersException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParametersException"
      parameters:
        - name: PageSize
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: PageToken
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWS242ServiceCatalogService.ListConstraintsForPortfolio
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ListConstraintsForPortfolioInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWS242ServiceCatalogService.ListLaunchPaths:
    post:
      operationId: ListLaunchPaths
      description: Lists the paths to the specified product. A path is how the user has
        access to a specified product, and is necessary when provisioning a
        product. A path also determines the constraints put on the product.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListLaunchPathsOutput"
        "480":
          description: InvalidParametersException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParametersException"
        "481":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
      parameters:
        - name: PageSize
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: PageToken
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWS242ServiceCatalogService.ListLaunchPaths
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ListLaunchPathsInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWS242ServiceCatalogService.ListOrganizationPortfolioAccess:
    post:
      operationId: ListOrganizationPortfolioAccess
      description: Lists the organization nodes that have access to the specified
        portfolio. This API can only be called by the master account in the
        organization.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListOrganizationPortfolioAccessOutput"
        "480":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "481":
          description: InvalidParametersException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParametersException"
        "482":
          description: OperationNotSupportedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationNotSupportedException"
      parameters:
        - name: PageSize
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: PageToken
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWS242ServiceCatalogService.ListOrganizationPortfolioAccess
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ListOrganizationPortfolioAccessInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWS242ServiceCatalogService.ListPortfolioAccess:
    post:
      operationId: ListPortfolioAccess
      description: Lists the account IDs that have access to the specified portfolio.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListPortfolioAccessOutput"
        "480":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWS242ServiceCatalogService.ListPortfolioAccess
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ListPortfolioAccessInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWS242ServiceCatalogService.ListPortfolios:
    post:
      operationId: ListPortfolios
      description: Lists all portfolios in the catalog.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListPortfoliosOutput"
        "480":
          description: InvalidParametersException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParametersException"
      parameters:
        - name: PageSize
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: PageToken
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWS242ServiceCatalogService.ListPortfolios
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ListPortfoliosInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWS242ServiceCatalogService.ListPortfoliosForProduct:
    post:
      operationId: ListPortfoliosForProduct
      description: Lists all portfolios that the specified product is associated with.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListPortfoliosForProductOutput"
        "480":
          description: InvalidParametersException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParametersException"
        "481":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
      parameters:
        - name: PageSize
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: PageToken
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWS242ServiceCatalogService.ListPortfoliosForProduct
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ListPortfoliosForProductInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWS242ServiceCatalogService.ListPrincipalsForPortfolio:
    post:
      operationId: ListPrincipalsForPortfolio
      description: Lists all principal ARNs associated with the specified portfolio.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListPrincipalsForPortfolioOutput"
        "480":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "481":
          description: InvalidParametersException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParametersException"
      parameters:
        - name: PageSize
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: PageToken
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWS242ServiceCatalogService.ListPrincipalsForPortfolio
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ListPrincipalsForPortfolioInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWS242ServiceCatalogService.ListProvisionedProductPlans:
    post:
      operationId: ListProvisionedProductPlans
      description: Lists the plans for the specified provisioned product or all plans to
        which the user has access.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListProvisionedProductPlansOutput"
        "480":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "481":
          description: InvalidParametersException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParametersException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWS242ServiceCatalogService.ListProvisionedProductPlans
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ListProvisionedProductPlansInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWS242ServiceCatalogService.ListProvisioningArtifacts:
    post:
      operationId: ListProvisioningArtifacts
      description: Lists all provisioning artifacts (also known as versions) for the
        specified product.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListProvisioningArtifactsOutput"
        "480":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "481":
          description: InvalidParametersException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParametersException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWS242ServiceCatalogService.ListProvisioningArtifacts
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ListProvisioningArtifactsInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWS242ServiceCatalogService.ListProvisioningArtifactsForServiceAction:
    post:
      operationId: ListProvisioningArtifactsForServiceAction
      description: Lists all provisioning artifacts (also known as versions) for the
        specified self-service action.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListProvisioningArtifactsForServiceActi\
                  onOutput"
        "480":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "481":
          description: InvalidParametersException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParametersException"
      parameters:
        - name: PageSize
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: PageToken
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWS242ServiceCatalogService.ListProvisioningArtifactsForServiceAction
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ListProvisioningArtifactsForServiceAction\
                Input"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWS242ServiceCatalogService.ListRecordHistory:
    post:
      operationId: ListRecordHistory
      description: Lists the specified requests or all performed requests.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListRecordHistoryOutput"
        "480":
          description: InvalidParametersException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParametersException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWS242ServiceCatalogService.ListRecordHistory
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ListRecordHistoryInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWS242ServiceCatalogService.ListResourcesForTagOption:
    post:
      operationId: ListResourcesForTagOption
      description: Lists the resources associated with the specified TagOption.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListResourcesForTagOptionOutput"
        "480":
          description: TagOptionNotMigratedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TagOptionNotMigratedException"
        "481":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "482":
          description: InvalidParametersException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParametersException"
      parameters:
        - name: PageSize
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: PageToken
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWS242ServiceCatalogService.ListResourcesForTagOption
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ListResourcesForTagOptionInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWS242ServiceCatalogService.ListServiceActions:
    post:
      operationId: ListServiceActions
      description: Lists all self-service actions.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListServiceActionsOutput"
        "480":
          description: InvalidParametersException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParametersException"
      parameters:
        - name: PageSize
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: PageToken
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWS242ServiceCatalogService.ListServiceActions
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ListServiceActionsInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWS242ServiceCatalogService.ListServiceActionsForProvisioningArtifact:
    post:
      operationId: ListServiceActionsForProvisioningArtifact
      description: Returns a paginated list of self-service actions associated with the
        specified Product ID and Provisioning Artifact ID.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListServiceActionsForProvisioningArtifa\
                  ctOutput"
        "480":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "481":
          description: InvalidParametersException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParametersException"
      parameters:
        - name: PageSize
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: PageToken
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWS242ServiceCatalogService.ListServiceActionsForProvisioningArtifact
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ListServiceActionsForProvisioningArtifact\
                Input"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWS242ServiceCatalogService.ListStackInstancesForProvisionedProduct:
    post:
      operationId: ListStackInstancesForProvisionedProduct
      description: "Returns summary information about stack instances that are associated
        with the specified <code>CFN_STACKSET</code> type provisioned product.
        You can filter for stack instances that are associated with a specific
        AWS account name or region. "
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListStackInstancesForProvisionedProduct\
                  Output"
        "480":
          description: InvalidParametersException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParametersException"
        "481":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWS242ServiceCatalogService.ListStackInstancesForProvisionedProduct
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ListStackInstancesForProvisionedProductIn\
                put"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWS242ServiceCatalogService.ListTagOptions:
    post:
      operationId: ListTagOptions
      description: Lists the specified TagOptions or all TagOptions.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListTagOptionsOutput"
        "480":
          description: TagOptionNotMigratedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TagOptionNotMigratedException"
        "481":
          description: InvalidParametersException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParametersException"
      parameters:
        - name: PageSize
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: PageToken
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWS242ServiceCatalogService.ListTagOptions
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ListTagOptionsInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWS242ServiceCatalogService.ProvisionProduct:
    post:
      operationId: ProvisionProduct
      description: '<p>Provisions the specified product.</p> <p>A provisioned product is a
        resourced instance of a product. For example, provisioning a product
        based on a CloudFormation template launches a CloudFormation stack and
        its underlying resources. You can check the status of this request using
        <a>DescribeRecord</a>.</p> <p>If the request contains a tag key with an
        empty list of values, there is a tag conflict for that key. Do not
        include conflicted keys as tags, or this causes the error "Parameter
        validation failed: Missing required parameter in
        Tags[<i>N</i>]:<i>Value</i>".</p>'
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProvisionProductOutput"
        "480":
          description: InvalidParametersException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParametersException"
        "481":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "482":
          description: DuplicateResourceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DuplicateResourceException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWS242ServiceCatalogService.ProvisionProduct
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProvisionProductInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWS242ServiceCatalogService.RejectPortfolioShare:
    post:
      operationId: RejectPortfolioShare
      description: Rejects an offer to share the specified portfolio.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RejectPortfolioShareOutput"
        "480":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWS242ServiceCatalogService.RejectPortfolioShare
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RejectPortfolioShareInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWS242ServiceCatalogService.ScanProvisionedProducts:
    post:
      operationId: ScanProvisionedProducts
      description: <p>Lists the provisioned products that are available (not
        terminated).</p> <p>To use additional filtering, see
        <a>SearchProvisionedProducts</a>.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ScanProvisionedProductsOutput"
        "480":
          description: InvalidParametersException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParametersException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWS242ServiceCatalogService.ScanProvisionedProducts
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ScanProvisionedProductsInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWS242ServiceCatalogService.SearchProducts:
    post:
      operationId: SearchProducts
      description: Gets information about the products to which the caller has access.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SearchProductsOutput"
        "480":
          description: InvalidParametersException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParametersException"
      parameters:
        - name: PageSize
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: PageToken
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWS242ServiceCatalogService.SearchProducts
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SearchProductsInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWS242ServiceCatalogService.SearchProductsAsAdmin:
    post:
      operationId: SearchProductsAsAdmin
      description: Gets information about the products for the specified portfolio or all
        products.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SearchProductsAsAdminOutput"
        "480":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "481":
          description: InvalidParametersException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParametersException"
      parameters:
        - name: PageSize
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: PageToken
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWS242ServiceCatalogService.SearchProductsAsAdmin
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SearchProductsAsAdminInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWS242ServiceCatalogService.SearchProvisionedProducts:
    post:
      operationId: SearchProvisionedProducts
      description: Gets information about the provisioned products that meet the specified
        criteria.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SearchProvisionedProductsOutput"
        "480":
          description: InvalidParametersException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParametersException"
      parameters:
        - name: PageSize
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: PageToken
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWS242ServiceCatalogService.SearchProvisionedProducts
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SearchProvisionedProductsInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWS242ServiceCatalogService.TerminateProvisionedProduct:
    post:
      operationId: TerminateProvisionedProduct
      description: <p>Terminates the specified provisioned product.</p> <p>This operation
        does not delete any records associated with the provisioned product.</p>
        <p>You can check the status of this request using
        <a>DescribeRecord</a>.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TerminateProvisionedProductOutput"
        "480":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWS242ServiceCatalogService.TerminateProvisionedProduct
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TerminateProvisionedProductInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWS242ServiceCatalogService.UpdateConstraint:
    post:
      operationId: UpdateConstraint
      description: Updates the specified constraint.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateConstraintOutput"
        "480":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "481":
          description: InvalidParametersException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParametersException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWS242ServiceCatalogService.UpdateConstraint
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateConstraintInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWS242ServiceCatalogService.UpdatePortfolio:
    post:
      operationId: UpdatePortfolio
      description: <p>Updates the specified portfolio.</p> <p>You cannot update a product
        that was shared with you.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdatePortfolioOutput"
        "480":
          description: InvalidParametersException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParametersException"
        "481":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "482":
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
        "483":
          description: TagOptionNotMigratedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TagOptionNotMigratedException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWS242ServiceCatalogService.UpdatePortfolio
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdatePortfolioInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWS242ServiceCatalogService.UpdateProduct:
    post:
      operationId: UpdateProduct
      description: Updates the specified product.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateProductOutput"
        "480":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "481":
          description: InvalidParametersException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParametersException"
        "482":
          description: TagOptionNotMigratedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TagOptionNotMigratedException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWS242ServiceCatalogService.UpdateProduct
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateProductInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWS242ServiceCatalogService.UpdateProvisionedProduct:
    post:
      operationId: UpdateProvisionedProduct
      description: <p>Requests updates to the configuration of the specified provisioned
        product.</p> <p>If there are tags associated with the object, they
        cannot be updated or added. Depending on the specific updates requested,
        this operation can update with no interruption, with some interruption,
        or replace the provisioned product entirely.</p> <p>You can check the
        status of this request using <a>DescribeRecord</a>.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateProvisionedProductOutput"
        "480":
          description: InvalidParametersException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParametersException"
        "481":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWS242ServiceCatalogService.UpdateProvisionedProduct
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateProvisionedProductInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWS242ServiceCatalogService.UpdateProvisionedProductProperties:
    post:
      operationId: UpdateProvisionedProductProperties
      description: Requests updates to the properties of the specified provisioned product.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateProvisionedProductPropertiesOutput"
        "480":
          description: InvalidParametersException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParametersException"
        "481":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "482":
          description: InvalidStateException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidStateException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWS242ServiceCatalogService.UpdateProvisionedProductProperties
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateProvisionedProductPropertiesInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWS242ServiceCatalogService.UpdateProvisioningArtifact:
    post:
      operationId: UpdateProvisioningArtifact
      description: <p>Updates the specified provisioning artifact (also known as a version)
        for the specified product.</p> <p>You cannot update a provisioning
        artifact for a product that was shared with you.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateProvisioningArtifactOutput"
        "480":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "481":
          description: InvalidParametersException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParametersException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWS242ServiceCatalogService.UpdateProvisioningArtifact
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateProvisioningArtifactInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWS242ServiceCatalogService.UpdateServiceAction:
    post:
      operationId: UpdateServiceAction
      description: Updates a self-service action.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateServiceActionOutput"
        "480":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "481":
          description: InvalidParametersException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParametersException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWS242ServiceCatalogService.UpdateServiceAction
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateServiceActionInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWS242ServiceCatalogService.UpdateTagOption:
    post:
      operationId: UpdateTagOption
      description: Updates the specified TagOption.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateTagOptionOutput"
        "480":
          description: TagOptionNotMigratedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TagOptionNotMigratedException"
        "481":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "482":
          description: DuplicateResourceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DuplicateResourceException"
        "483":
          description: InvalidParametersException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParametersException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWS242ServiceCatalogService.UpdateTagOption
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateTagOptionInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
servers:
  - url: http://servicecatalog.{region}.amazonaws.com
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-south-1
          - sa-east-1
        default: us-east-1
    description: The AWS Service Catalog multi-region endpoint
  - url: https://servicecatalog.{region}.amazonaws.com
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-south-1
          - sa-east-1
        default: us-east-1
    description: The AWS Service Catalog multi-region endpoint
  - url: http://servicecatalog.{region}.amazonaws.com.cn
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The AWS Service Catalog endpoint for China (Beijing) and China (Ningxia)
  - url: https://servicecatalog.{region}.amazonaws.com.cn
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The AWS Service Catalog endpoint for China (Beijing) and China (Ningxia)
components:
  parameters:
    X-Amz-Content-Sha256:
      name: X-Amz-Content-Sha256
      in: header
      required: false
      schema:
        type: string
    X-Amz-Date:
      name: X-Amz-Date
      in: header
      required: false
      schema:
        type: string
    X-Amz-Algorithm:
      name: X-Amz-Algorithm
      in: header
      required: false
      schema:
        type: string
    X-Amz-Credential:
      name: X-Amz-Credential
      in: header
      required: false
      schema:
        type: string
    X-Amz-Security-Token:
      name: X-Amz-Security-Token
      in: header
      required: false
      schema:
        type: string
    X-Amz-Signature:
      name: X-Amz-Signature
      in: header
      required: false
      schema:
        type: string
    X-Amz-SignedHeaders:
      name: X-Amz-SignedHeaders
      in: header
      required: false
      schema:
        type: string
  securitySchemes:
    hmac:
      type: apiKey
      name: Authorization
      in: header
      description: Amazon Signature authorization v4
      x-amazon-apigateway-authtype: awsSigv4
  schemas:
    AcceptPortfolioShareOutput:
      type: object
      properties: {}
    AcceptPortfolioShareInput:
      type: object
      required:
        - PortfolioId
      properties:
        AcceptLanguage:
          $ref: "#/components/schemas/AcceptLanguage"
        PortfolioId:
          $ref: "#/components/schemas/Id"
        PortfolioShareType:
          $ref: "#/components/schemas/PortfolioShareType"
    InvalidParametersException: {}
    ResourceNotFoundException: {}
    LimitExceededException: {}
    AssociateBudgetWithResourceOutput:
      type: object
      properties: {}
    AssociateBudgetWithResourceInput:
      type: object
      required:
        - BudgetName
        - ResourceId
      properties:
        BudgetName:
          $ref: "#/components/schemas/BudgetName"
        ResourceId:
          $ref: "#/components/schemas/Id"
    DuplicateResourceException: {}
    AssociatePrincipalWithPortfolioOutput:
      type: object
      properties: {}
    AssociatePrincipalWithPortfolioInput:
      type: object
      required:
        - PortfolioId
        - PrincipalARN
        - PrincipalType
      properties:
        AcceptLanguage:
          $ref: "#/components/schemas/AcceptLanguage"
        PortfolioId:
          $ref: "#/components/schemas/Id"
        PrincipalARN:
          $ref: "#/components/schemas/PrincipalARN"
        PrincipalType:
          $ref: "#/components/schemas/PrincipalType"
    AssociateProductWithPortfolioOutput:
      type: object
      properties: {}
    AssociateProductWithPortfolioInput:
      type: object
      required:
        - ProductId
        - PortfolioId
      properties:
        AcceptLanguage:
          $ref: "#/components/schemas/AcceptLanguage"
        ProductId:
          $ref: "#/components/schemas/Id"
        PortfolioId:
          $ref: "#/components/schemas/Id"
        SourcePortfolioId:
          $ref: "#/components/schemas/Id"
    AssociateServiceActionWithProvisioningArtifactOutput:
      type: object
      properties: {}
    AssociateServiceActionWithProvisioningArtifactInput:
      type: object
      required:
        - ProductId
        - ProvisioningArtifactId
        - ServiceActionId
      properties:
        ProductId:
          $ref: "#/components/schemas/Id"
        ProvisioningArtifactId:
          $ref: "#/components/schemas/Id"
        ServiceActionId:
          $ref: "#/components/schemas/Id"
        AcceptLanguage:
          $ref: "#/components/schemas/AcceptLanguage"
    AssociateTagOptionWithResourceOutput:
      type: object
      properties: {}
    AssociateTagOptionWithResourceInput:
      type: object
      required:
        - ResourceId
        - TagOptionId
      properties:
        ResourceId:
          $ref: "#/components/schemas/ResourceId"
        TagOptionId:
          $ref: "#/components/schemas/TagOptionId"
    TagOptionNotMigratedException: {}
    InvalidStateException: {}
    BatchAssociateServiceActionWithProvisioningArtifactOutput:
      type: object
      properties:
        FailedServiceActionAssociations:
          $ref: "#/components/schemas/FailedServiceActionAssociations"
    BatchAssociateServiceActionWithProvisioningArtifactInput:
      type: object
      required:
        - ServiceActionAssociations
      properties:
        ServiceActionAssociations:
          $ref: "#/components/schemas/ServiceActionAssociations"
        AcceptLanguage:
          $ref: "#/components/schemas/AcceptLanguage"
    BatchDisassociateServiceActionFromProvisioningArtifactOutput:
      type: object
      properties:
        FailedServiceActionAssociations:
          $ref: "#/components/schemas/FailedServiceActionAssociations"
    BatchDisassociateServiceActionFromProvisioningArtifactInput:
      type: object
      required:
        - ServiceActionAssociations
      properties:
        ServiceActionAssociations:
          $ref: "#/components/schemas/ServiceActionAssociations"
        AcceptLanguage:
          $ref: "#/components/schemas/AcceptLanguage"
    CopyProductOutput:
      type: object
      properties:
        CopyProductToken:
          $ref: "#/components/schemas/Id"
    CopyProductInput:
      type: object
      required:
        - SourceProductArn
        - IdempotencyToken
      properties:
        AcceptLanguage:
          $ref: "#/components/schemas/AcceptLanguage"
        SourceProductArn:
          $ref: "#/components/schemas/ProductArn"
        TargetProductId:
          $ref: "#/components/schemas/Id"
        TargetProductName:
          $ref: "#/components/schemas/ProductViewName"
        SourceProvisioningArtifactIdentifiers:
          $ref: "#/components/schemas/SourceProvisioningArtifactProperties"
        CopyOptions:
          $ref: "#/components/schemas/CopyOptions"
        IdempotencyToken:
          $ref: "#/components/schemas/IdempotencyToken"
    CreateConstraintOutput:
      type: object
      properties:
        ConstraintDetail:
          $ref: "#/components/schemas/ConstraintDetail"
        ConstraintParameters:
          $ref: "#/components/schemas/ConstraintParameters"
        Status:
          $ref: "#/components/schemas/Status"
    CreateConstraintInput:
      type: object
      required:
        - PortfolioId
        - ProductId
        - Parameters
        - Type
        - IdempotencyToken
      properties:
        AcceptLanguage:
          $ref: "#/components/schemas/AcceptLanguage"
        PortfolioId:
          $ref: "#/components/schemas/Id"
        ProductId:
          $ref: "#/components/schemas/Id"
        Parameters:
          $ref: "#/components/schemas/ConstraintParameters"
        Type:
          $ref: "#/components/schemas/ConstraintType"
        Description:
          $ref: "#/components/schemas/ConstraintDescription"
        IdempotencyToken:
          $ref: "#/components/schemas/IdempotencyToken"
    CreatePortfolioOutput:
      type: object
      properties:
        PortfolioDetail:
          $ref: "#/components/schemas/PortfolioDetail"
        Tags:
          $ref: "#/components/schemas/Tags"
    CreatePortfolioInput:
      type: object
      required:
        - DisplayName
        - ProviderName
        - IdempotencyToken
      properties:
        AcceptLanguage:
          $ref: "#/components/schemas/AcceptLanguage"
        DisplayName:
          $ref: "#/components/schemas/PortfolioDisplayName"
        Description:
          $ref: "#/components/schemas/PortfolioDescription"
        ProviderName:
          $ref: "#/components/schemas/ProviderName"
        Tags:
          $ref: "#/components/schemas/AddTags"
        IdempotencyToken:
          $ref: "#/components/schemas/IdempotencyToken"
    CreatePortfolioShareOutput:
      type: object
      properties:
        PortfolioShareToken:
          $ref: "#/components/schemas/Id"
    CreatePortfolioShareInput:
      type: object
      required:
        - PortfolioId
      properties:
        AcceptLanguage:
          $ref: "#/components/schemas/AcceptLanguage"
        PortfolioId:
          $ref: "#/components/schemas/Id"
        AccountId:
          $ref: "#/components/schemas/AccountId"
        OrganizationNode:
          $ref: "#/components/schemas/OrganizationNode"
    OperationNotSupportedException: {}
    CreateProductOutput:
      type: object
      properties:
        ProductViewDetail:
          $ref: "#/components/schemas/ProductViewDetail"
        ProvisioningArtifactDetail:
          $ref: "#/components/schemas/ProvisioningArtifactDetail"
        Tags:
          $ref: "#/components/schemas/Tags"
    CreateProductInput:
      type: object
      required:
        - Name
        - Owner
        - ProductType
        - ProvisioningArtifactParameters
        - IdempotencyToken
      properties:
        AcceptLanguage:
          $ref: "#/components/schemas/AcceptLanguage"
        Name:
          $ref: "#/components/schemas/ProductViewName"
        Owner:
          $ref: "#/components/schemas/ProductViewOwner"
        Description:
          $ref: "#/components/schemas/ProductViewShortDescription"
        Distributor:
          $ref: "#/components/schemas/ProductViewOwner"
        SupportDescription:
          $ref: "#/components/schemas/SupportDescription"
        SupportEmail:
          $ref: "#/components/schemas/SupportEmail"
        SupportUrl:
          $ref: "#/components/schemas/SupportUrl"
        ProductType:
          $ref: "#/components/schemas/ProductType"
        Tags:
          $ref: "#/components/schemas/AddTags"
        ProvisioningArtifactParameters:
          $ref: "#/components/schemas/ProvisioningArtifactProperties"
        IdempotencyToken:
          $ref: "#/components/schemas/IdempotencyToken"
    CreateProvisionedProductPlanOutput:
      type: object
      properties:
        PlanName:
          $ref: "#/components/schemas/ProvisionedProductPlanName"
        PlanId:
          $ref: "#/components/schemas/Id"
        ProvisionProductId:
          $ref: "#/components/schemas/Id"
        ProvisionedProductName:
          $ref: "#/components/schemas/ProvisionedProductName"
        ProvisioningArtifactId:
          $ref: "#/components/schemas/Id"
    CreateProvisionedProductPlanInput:
      type: object
      required:
        - PlanName
        - PlanType
        - ProductId
        - ProvisionedProductName
        - ProvisioningArtifactId
        - IdempotencyToken
      properties:
        AcceptLanguage:
          $ref: "#/components/schemas/AcceptLanguage"
        PlanName:
          $ref: "#/components/schemas/ProvisionedProductPlanName"
        PlanType:
          $ref: "#/components/schemas/ProvisionedProductPlanType"
        NotificationArns:
          $ref: "#/components/schemas/NotificationArns"
        PathId:
          $ref: "#/components/schemas/Id"
        ProductId:
          $ref: "#/components/schemas/Id"
        ProvisionedProductName:
          $ref: "#/components/schemas/ProvisionedProductName"
        ProvisioningArtifactId:
          $ref: "#/components/schemas/Id"
        ProvisioningParameters:
          $ref: "#/components/schemas/UpdateProvisioningParameters"
        IdempotencyToken:
          $ref: "#/components/schemas/IdempotencyToken"
        Tags:
          $ref: "#/components/schemas/Tags"
    CreateProvisioningArtifactOutput:
      type: object
      properties:
        ProvisioningArtifactDetail:
          $ref: "#/components/schemas/ProvisioningArtifactDetail"
        Info:
          $ref: "#/components/schemas/ProvisioningArtifactInfo"
        Status:
          $ref: "#/components/schemas/Status"
    CreateProvisioningArtifactInput:
      type: object
      required:
        - ProductId
        - Parameters
        - IdempotencyToken
      properties:
        AcceptLanguage:
          $ref: "#/components/schemas/AcceptLanguage"
        ProductId:
          $ref: "#/components/schemas/Id"
        Parameters:
          $ref: "#/components/schemas/ProvisioningArtifactProperties"
        IdempotencyToken:
          $ref: "#/components/schemas/IdempotencyToken"
    CreateServiceActionOutput:
      type: object
      properties:
        ServiceActionDetail:
          $ref: "#/components/schemas/ServiceActionDetail"
    CreateServiceActionInput:
      type: object
      required:
        - Name
        - DefinitionType
        - Definition
        - IdempotencyToken
      properties:
        Name:
          $ref: "#/components/schemas/ServiceActionName"
        DefinitionType:
          $ref: "#/components/schemas/ServiceActionDefinitionType"
        Definition:
          $ref: "#/components/schemas/ServiceActionDefinitionMap"
        Description:
          $ref: "#/components/schemas/ServiceActionDescription"
        AcceptLanguage:
          $ref: "#/components/schemas/AcceptLanguage"
        IdempotencyToken:
          $ref: "#/components/schemas/IdempotencyToken"
    CreateTagOptionOutput:
      type: object
      properties:
        TagOptionDetail:
          $ref: "#/components/schemas/TagOptionDetail"
    CreateTagOptionInput:
      type: object
      required:
        - Key
        - Value
      properties:
        Key:
          $ref: "#/components/schemas/TagOptionKey"
        Value:
          $ref: "#/components/schemas/TagOptionValue"
    DeleteConstraintOutput:
      type: object
      properties: {}
    DeleteConstraintInput:
      type: object
      required:
        - Id
      properties:
        AcceptLanguage:
          $ref: "#/components/schemas/AcceptLanguage"
        Id:
          $ref: "#/components/schemas/Id"
    DeletePortfolioOutput:
      type: object
      properties: {}
    DeletePortfolioInput:
      type: object
      required:
        - Id
      properties:
        AcceptLanguage:
          $ref: "#/components/schemas/AcceptLanguage"
        Id:
          $ref: "#/components/schemas/Id"
    ResourceInUseException: {}
    DeletePortfolioShareOutput:
      type: object
      properties:
        PortfolioShareToken:
          $ref: "#/components/schemas/Id"
    DeletePortfolioShareInput:
      type: object
      required:
        - PortfolioId
      properties:
        AcceptLanguage:
          $ref: "#/components/schemas/AcceptLanguage"
        PortfolioId:
          $ref: "#/components/schemas/Id"
        AccountId:
          $ref: "#/components/schemas/AccountId"
        OrganizationNode:
          $ref: "#/components/schemas/OrganizationNode"
    DeleteProductOutput:
      type: object
      properties: {}
    DeleteProductInput:
      type: object
      required:
        - Id
      properties:
        AcceptLanguage:
          $ref: "#/components/schemas/AcceptLanguage"
        Id:
          $ref: "#/components/schemas/Id"
    DeleteProvisionedProductPlanOutput:
      type: object
      properties: {}
    DeleteProvisionedProductPlanInput:
      type: object
      required:
        - PlanId
      properties:
        AcceptLanguage:
          $ref: "#/components/schemas/AcceptLanguage"
        PlanId:
          $ref: "#/components/schemas/Id"
        IgnoreErrors:
          $ref: "#/components/schemas/IgnoreErrors"
    DeleteProvisioningArtifactOutput:
      type: object
      properties: {}
    DeleteProvisioningArtifactInput:
      type: object
      required:
        - ProductId
        - ProvisioningArtifactId
      properties:
        AcceptLanguage:
          $ref: "#/components/schemas/AcceptLanguage"
        ProductId:
          $ref: "#/components/schemas/Id"
        ProvisioningArtifactId:
          $ref: "#/components/schemas/Id"
    DeleteServiceActionOutput:
      type: object
      properties: {}
    DeleteServiceActionInput:
      type: object
      required:
        - Id
      properties:
        Id:
          $ref: "#/components/schemas/Id"
        AcceptLanguage:
          $ref: "#/components/schemas/AcceptLanguage"
    DeleteTagOptionOutput:
      type: object
      properties: {}
    DeleteTagOptionInput:
      type: object
      required:
        - Id
      properties:
        Id:
          $ref: "#/components/schemas/TagOptionId"
    DescribeConstraintOutput:
      type: object
      properties:
        ConstraintDetail:
          $ref: "#/components/schemas/ConstraintDetail"
        ConstraintParameters:
          $ref: "#/components/schemas/ConstraintParameters"
        Status:
          $ref: "#/components/schemas/Status"
    DescribeConstraintInput:
      type: object
      required:
        - Id
      properties:
        AcceptLanguage:
          $ref: "#/components/schemas/AcceptLanguage"
        Id:
          $ref: "#/components/schemas/Id"
    DescribeCopyProductStatusOutput:
      type: object
      properties:
        CopyProductStatus:
          $ref: "#/components/schemas/CopyProductStatus"
        TargetProductId:
          $ref: "#/components/schemas/Id"
        StatusDetail:
          $ref: "#/components/schemas/StatusDetail"
    DescribeCopyProductStatusInput:
      type: object
      required:
        - CopyProductToken
      properties:
        AcceptLanguage:
          $ref: "#/components/schemas/AcceptLanguage"
        CopyProductToken:
          $ref: "#/components/schemas/Id"
    DescribePortfolioOutput:
      type: object
      properties:
        PortfolioDetail:
          $ref: "#/components/schemas/PortfolioDetail"
        Tags:
          $ref: "#/components/schemas/Tags"
        TagOptions:
          $ref: "#/components/schemas/TagOptionDetails"
        Budgets:
          $ref: "#/components/schemas/Budgets"
    DescribePortfolioInput:
      type: object
      required:
        - Id
      properties:
        AcceptLanguage:
          $ref: "#/components/schemas/AcceptLanguage"
        Id:
          $ref: "#/components/schemas/Id"
    DescribePortfolioShareStatusOutput:
      type: object
      properties:
        PortfolioShareToken:
          $ref: "#/components/schemas/Id"
        PortfolioId:
          $ref: "#/components/schemas/Id"
        OrganizationNodeValue:
          $ref: "#/components/schemas/OrganizationNodeValue"
        Status:
          $ref: "#/components/schemas/ShareStatus"
        ShareDetails:
          $ref: "#/components/schemas/ShareDetails"
    DescribePortfolioShareStatusInput:
      type: object
      required:
        - PortfolioShareToken
      properties:
        PortfolioShareToken:
          $ref: "#/components/schemas/Id"
    DescribeProductOutput:
      type: object
      properties:
        ProductViewSummary:
          $ref: "#/components/schemas/ProductViewSummary"
        ProvisioningArtifacts:
          $ref: "#/components/schemas/ProvisioningArtifacts"
        Budgets:
          $ref: "#/components/schemas/Budgets"
    DescribeProductInput:
      type: object
      required:
        - Id
      properties:
        AcceptLanguage:
          $ref: "#/components/schemas/AcceptLanguage"
        Id:
          $ref: "#/components/schemas/Id"
    DescribeProductAsAdminOutput:
      type: object
      properties:
        ProductViewDetail:
          $ref: "#/components/schemas/ProductViewDetail"
        ProvisioningArtifactSummaries:
          $ref: "#/components/schemas/ProvisioningArtifactSummaries"
        Tags:
          $ref: "#/components/schemas/Tags"
        TagOptions:
          $ref: "#/components/schemas/TagOptionDetails"
        Budgets:
          $ref: "#/components/schemas/Budgets"
    DescribeProductAsAdminInput:
      type: object
      required:
        - Id
      properties:
        AcceptLanguage:
          $ref: "#/components/schemas/AcceptLanguage"
        Id:
          $ref: "#/components/schemas/Id"
    DescribeProductViewOutput:
      type: object
      properties:
        ProductViewSummary:
          $ref: "#/components/schemas/ProductViewSummary"
        ProvisioningArtifacts:
          $ref: "#/components/schemas/ProvisioningArtifacts"
    DescribeProductViewInput:
      type: object
      required:
        - Id
      properties:
        AcceptLanguage:
          $ref: "#/components/schemas/AcceptLanguage"
        Id:
          $ref: "#/components/schemas/Id"
    DescribeProvisionedProductOutput:
      type: object
      properties:
        ProvisionedProductDetail:
          $ref: "#/components/schemas/ProvisionedProductDetail"
        CloudWatchDashboards:
          $ref: "#/components/schemas/CloudWatchDashboards"
    DescribeProvisionedProductInput:
      type: object
      required:
        - Id
      properties:
        AcceptLanguage:
          $ref: "#/components/schemas/AcceptLanguage"
        Id:
          $ref: "#/components/schemas/Id"
    DescribeProvisionedProductPlanOutput:
      type: object
      properties:
        ProvisionedProductPlanDetails:
          $ref: "#/components/schemas/ProvisionedProductPlanDetails"
        ResourceChanges:
          $ref: "#/components/schemas/ResourceChanges"
        NextPageToken:
          $ref: "#/components/schemas/PageToken"
    DescribeProvisionedProductPlanInput:
      type: object
      required:
        - PlanId
      properties:
        AcceptLanguage:
          $ref: "#/components/schemas/AcceptLanguage"
        PlanId:
          $ref: "#/components/schemas/Id"
        PageSize:
          $ref: "#/components/schemas/PageSize"
        PageToken:
          $ref: "#/components/schemas/PageToken"
    DescribeProvisioningArtifactOutput:
      type: object
      properties:
        ProvisioningArtifactDetail:
          $ref: "#/components/schemas/ProvisioningArtifactDetail"
        Info:
          $ref: "#/components/schemas/ProvisioningArtifactInfo"
        Status:
          $ref: "#/components/schemas/Status"
    DescribeProvisioningArtifactInput:
      type: object
      required:
        - ProvisioningArtifactId
        - ProductId
      properties:
        AcceptLanguage:
          $ref: "#/components/schemas/AcceptLanguage"
        ProvisioningArtifactId:
          $ref: "#/components/schemas/Id"
        ProductId:
          $ref: "#/components/schemas/Id"
        Verbose:
          $ref: "#/components/schemas/Verbose"
    DescribeProvisioningParametersOutput:
      type: object
      properties:
        ProvisioningArtifactParameters:
          $ref: "#/components/schemas/ProvisioningArtifactParameters"
        ConstraintSummaries:
          $ref: "#/components/schemas/ConstraintSummaries"
        UsageInstructions:
          $ref: "#/components/schemas/UsageInstructions"
        TagOptions:
          $ref: "#/components/schemas/TagOptionSummaries"
        ProvisioningArtifactPreferences:
          $ref: "#/components/schemas/ProvisioningArtifactPreferences"
    DescribeProvisioningParametersInput:
      type: object
      required:
        - ProductId
        - ProvisioningArtifactId
      properties:
        AcceptLanguage:
          $ref: "#/components/schemas/AcceptLanguage"
        ProductId:
          $ref: "#/components/schemas/Id"
        ProvisioningArtifactId:
          $ref: "#/components/schemas/Id"
        PathId:
          $ref: "#/components/schemas/Id"
    DescribeRecordOutput:
      type: object
      properties:
        RecordDetail:
          $ref: "#/components/schemas/RecordDetail"
        RecordOutputs:
          $ref: "#/components/schemas/RecordOutputs"
        NextPageToken:
          $ref: "#/components/schemas/PageToken"
    DescribeRecordInput:
      type: object
      required:
        - Id
      properties:
        AcceptLanguage:
          $ref: "#/components/schemas/AcceptLanguage"
        Id:
          $ref: "#/components/schemas/Id"
        PageToken:
          $ref: "#/components/schemas/PageToken"
        PageSize:
          $ref: "#/components/schemas/PageSize"
    DescribeServiceActionOutput:
      type: object
      properties:
        ServiceActionDetail:
          $ref: "#/components/schemas/ServiceActionDetail"
    DescribeServiceActionInput:
      type: object
      required:
        - Id
      properties:
        Id:
          $ref: "#/components/schemas/Id"
        AcceptLanguage:
          $ref: "#/components/schemas/AcceptLanguage"
    DescribeServiceActionExecutionParametersOutput:
      type: object
      properties:
        ServiceActionParameters:
          $ref: "#/components/schemas/ExecutionParameters"
    DescribeServiceActionExecutionParametersInput:
      type: object
      required:
        - ProvisionedProductId
        - ServiceActionId
      properties:
        ProvisionedProductId:
          $ref: "#/components/schemas/Id"
        ServiceActionId:
          $ref: "#/components/schemas/Id"
        AcceptLanguage:
          $ref: "#/components/schemas/AcceptLanguage"
    DescribeTagOptionOutput:
      type: object
      properties:
        TagOptionDetail:
          $ref: "#/components/schemas/TagOptionDetail"
    DescribeTagOptionInput:
      type: object
      required:
        - Id
      properties:
        Id:
          $ref: "#/components/schemas/TagOptionId"
    DisableAWSOrganizationsAccessOutput:
      type: object
      properties: {}
    DisableAWSOrganizationsAccessInput:
      type: object
      properties: {}
    DisassociateBudgetFromResourceOutput:
      type: object
      properties: {}
    DisassociateBudgetFromResourceInput:
      type: object
      required:
        - BudgetName
        - ResourceId
      properties:
        BudgetName:
          $ref: "#/components/schemas/BudgetName"
        ResourceId:
          $ref: "#/components/schemas/Id"
    DisassociatePrincipalFromPortfolioOutput:
      type: object
      properties: {}
    DisassociatePrincipalFromPortfolioInput:
      type: object
      required:
        - PortfolioId
        - PrincipalARN
      properties:
        AcceptLanguage:
          $ref: "#/components/schemas/AcceptLanguage"
        PortfolioId:
          $ref: "#/components/schemas/Id"
        PrincipalARN:
          $ref: "#/components/schemas/PrincipalARN"
    DisassociateProductFromPortfolioOutput:
      type: object
      properties: {}
    DisassociateProductFromPortfolioInput:
      type: object
      required:
        - ProductId
        - PortfolioId
      properties:
        AcceptLanguage:
          $ref: "#/components/schemas/AcceptLanguage"
        ProductId:
          $ref: "#/components/schemas/Id"
        PortfolioId:
          $ref: "#/components/schemas/Id"
    DisassociateServiceActionFromProvisioningArtifactOutput:
      type: object
      properties: {}
    DisassociateServiceActionFromProvisioningArtifactInput:
      type: object
      required:
        - ProductId
        - ProvisioningArtifactId
        - ServiceActionId
      properties:
        ProductId:
          $ref: "#/components/schemas/Id"
        ProvisioningArtifactId:
          $ref: "#/components/schemas/Id"
        ServiceActionId:
          $ref: "#/components/schemas/Id"
        AcceptLanguage:
          $ref: "#/components/schemas/AcceptLanguage"
    DisassociateTagOptionFromResourceOutput:
      type: object
      properties: {}
    DisassociateTagOptionFromResourceInput:
      type: object
      required:
        - ResourceId
        - TagOptionId
      properties:
        ResourceId:
          $ref: "#/components/schemas/ResourceId"
        TagOptionId:
          $ref: "#/components/schemas/TagOptionId"
    EnableAWSOrganizationsAccessOutput:
      type: object
      properties: {}
    EnableAWSOrganizationsAccessInput:
      type: object
      properties: {}
    ExecuteProvisionedProductPlanOutput:
      type: object
      properties:
        RecordDetail:
          $ref: "#/components/schemas/RecordDetail"
    ExecuteProvisionedProductPlanInput:
      type: object
      required:
        - PlanId
        - IdempotencyToken
      properties:
        AcceptLanguage:
          $ref: "#/components/schemas/AcceptLanguage"
        PlanId:
          $ref: "#/components/schemas/Id"
        IdempotencyToken:
          $ref: "#/components/schemas/IdempotencyToken"
    ExecuteProvisionedProductServiceActionOutput:
      type: object
      properties:
        RecordDetail:
          $ref: "#/components/schemas/RecordDetail"
    ExecuteProvisionedProductServiceActionInput:
      type: object
      required:
        - ProvisionedProductId
        - ServiceActionId
        - ExecuteToken
      properties:
        ProvisionedProductId:
          $ref: "#/components/schemas/Id"
        ServiceActionId:
          $ref: "#/components/schemas/Id"
        ExecuteToken:
          $ref: "#/components/schemas/IdempotencyToken"
        AcceptLanguage:
          $ref: "#/components/schemas/AcceptLanguage"
        Parameters:
          $ref: "#/components/schemas/ExecutionParameterMap"
    GetAWSOrganizationsAccessStatusOutput:
      type: object
      properties:
        AccessStatus:
          $ref: "#/components/schemas/AccessStatus"
    GetAWSOrganizationsAccessStatusInput:
      type: object
      properties: {}
    ListAcceptedPortfolioSharesOutput:
      type: object
      properties:
        PortfolioDetails:
          $ref: "#/components/schemas/PortfolioDetails"
        NextPageToken:
          $ref: "#/components/schemas/PageToken"
    ListAcceptedPortfolioSharesInput:
      type: object
      properties:
        AcceptLanguage:
          $ref: "#/components/schemas/AcceptLanguage"
        PageToken:
          $ref: "#/components/schemas/PageToken"
        PageSize:
          $ref: "#/components/schemas/PageSize"
        PortfolioShareType:
          $ref: "#/components/schemas/PortfolioShareType"
    ListBudgetsForResourceOutput:
      type: object
      properties:
        Budgets:
          $ref: "#/components/schemas/Budgets"
        NextPageToken:
          $ref: "#/components/schemas/PageToken"
    ListBudgetsForResourceInput:
      type: object
      required:
        - ResourceId
      properties:
        AcceptLanguage:
          $ref: "#/components/schemas/AcceptLanguage"
        ResourceId:
          $ref: "#/components/schemas/Id"
        PageSize:
          $ref: "#/components/schemas/PageSize"
        PageToken:
          $ref: "#/components/schemas/PageToken"
    ListConstraintsForPortfolioOutput:
      type: object
      properties:
        ConstraintDetails:
          $ref: "#/components/schemas/ConstraintDetails"
        NextPageToken:
          $ref: "#/components/schemas/PageToken"
    ListConstraintsForPortfolioInput:
      type: object
      required:
        - PortfolioId
      properties:
        AcceptLanguage:
          $ref: "#/components/schemas/AcceptLanguage"
        PortfolioId:
          $ref: "#/components/schemas/Id"
        ProductId:
          $ref: "#/components/schemas/Id"
        PageSize:
          $ref: "#/components/schemas/PageSize"
        PageToken:
          $ref: "#/components/schemas/PageToken"
    ListLaunchPathsOutput:
      type: object
      properties:
        LaunchPathSummaries:
          $ref: "#/components/schemas/LaunchPathSummaries"
        NextPageToken:
          $ref: "#/components/schemas/PageToken"
    ListLaunchPathsInput:
      type: object
      required:
        - ProductId
      properties:
        AcceptLanguage:
          $ref: "#/components/schemas/AcceptLanguage"
        ProductId:
          $ref: "#/components/schemas/Id"
        PageSize:
          $ref: "#/components/schemas/PageSize"
        PageToken:
          $ref: "#/components/schemas/PageToken"
    ListOrganizationPortfolioAccessOutput:
      type: object
      properties:
        OrganizationNodes:
          $ref: "#/components/schemas/OrganizationNodes"
        NextPageToken:
          $ref: "#/components/schemas/PageToken"
    ListOrganizationPortfolioAccessInput:
      type: object
      required:
        - PortfolioId
        - OrganizationNodeType
      properties:
        AcceptLanguage:
          $ref: "#/components/schemas/AcceptLanguage"
        PortfolioId:
          $ref: "#/components/schemas/Id"
        OrganizationNodeType:
          $ref: "#/components/schemas/OrganizationNodeType"
        PageToken:
          $ref: "#/components/schemas/PageToken"
        PageSize:
          $ref: "#/components/schemas/PageSize"
    ListPortfolioAccessOutput:
      type: object
      properties:
        AccountIds:
          $ref: "#/components/schemas/AccountIds"
        NextPageToken:
          $ref: "#/components/schemas/PageToken"
    ListPortfolioAccessInput:
      type: object
      required:
        - PortfolioId
      properties:
        AcceptLanguage:
          $ref: "#/components/schemas/AcceptLanguage"
        PortfolioId:
          $ref: "#/components/schemas/Id"
    ListPortfoliosOutput:
      type: object
      properties:
        PortfolioDetails:
          $ref: "#/components/schemas/PortfolioDetails"
        NextPageToken:
          $ref: "#/components/schemas/PageToken"
    ListPortfoliosInput:
      type: object
      properties:
        AcceptLanguage:
          $ref: "#/components/schemas/AcceptLanguage"
        PageToken:
          $ref: "#/components/schemas/PageToken"
        PageSize:
          $ref: "#/components/schemas/PageSize"
    ListPortfoliosForProductOutput:
      type: object
      properties:
        PortfolioDetails:
          $ref: "#/components/schemas/PortfolioDetails"
        NextPageToken:
          $ref: "#/components/schemas/PageToken"
    ListPortfoliosForProductInput:
      type: object
      required:
        - ProductId
      properties:
        AcceptLanguage:
          $ref: "#/components/schemas/AcceptLanguage"
        ProductId:
          $ref: "#/components/schemas/Id"
        PageToken:
          $ref: "#/components/schemas/PageToken"
        PageSize:
          $ref: "#/components/schemas/PageSize"
    ListPrincipalsForPortfolioOutput:
      type: object
      properties:
        Principals:
          $ref: "#/components/schemas/Principals"
        NextPageToken:
          $ref: "#/components/schemas/PageToken"
    ListPrincipalsForPortfolioInput:
      type: object
      required:
        - PortfolioId
      properties:
        AcceptLanguage:
          $ref: "#/components/schemas/AcceptLanguage"
        PortfolioId:
          $ref: "#/components/schemas/Id"
        PageSize:
          $ref: "#/components/schemas/PageSize"
        PageToken:
          $ref: "#/components/schemas/PageToken"
    ListProvisionedProductPlansOutput:
      type: object
      properties:
        ProvisionedProductPlans:
          $ref: "#/components/schemas/ProvisionedProductPlans"
        NextPageToken:
          $ref: "#/components/schemas/PageToken"
    ListProvisionedProductPlansInput:
      type: object
      properties:
        AcceptLanguage:
          $ref: "#/components/schemas/AcceptLanguage"
        ProvisionProductId:
          $ref: "#/components/schemas/Id"
        PageSize:
          $ref: "#/components/schemas/PageSize"
        PageToken:
          $ref: "#/components/schemas/PageToken"
        AccessLevelFilter:
          $ref: "#/components/schemas/AccessLevelFilter"
    ListProvisioningArtifactsOutput:
      type: object
      properties:
        ProvisioningArtifactDetails:
          $ref: "#/components/schemas/ProvisioningArtifactDetails"
        NextPageToken:
          $ref: "#/components/schemas/PageToken"
    ListProvisioningArtifactsInput:
      type: object
      required:
        - ProductId
      properties:
        AcceptLanguage:
          $ref: "#/components/schemas/AcceptLanguage"
        ProductId:
          $ref: "#/components/schemas/Id"
    ListProvisioningArtifactsForServiceActionOutput:
      type: object
      properties:
        ProvisioningArtifactViews:
          $ref: "#/components/schemas/ProvisioningArtifactViews"
        NextPageToken:
          $ref: "#/components/schemas/PageToken"
    ListProvisioningArtifactsForServiceActionInput:
      type: object
      required:
        - ServiceActionId
      properties:
        ServiceActionId:
          $ref: "#/components/schemas/Id"
        PageSize:
          $ref: "#/components/schemas/PageSize"
        PageToken:
          $ref: "#/components/schemas/PageToken"
        AcceptLanguage:
          $ref: "#/components/schemas/AcceptLanguage"
    ListRecordHistoryOutput:
      type: object
      properties:
        RecordDetails:
          $ref: "#/components/schemas/RecordDetails"
        NextPageToken:
          $ref: "#/components/schemas/PageToken"
    ListRecordHistoryInput:
      type: object
      properties:
        AcceptLanguage:
          $ref: "#/components/schemas/AcceptLanguage"
        AccessLevelFilter:
          $ref: "#/components/schemas/AccessLevelFilter"
        SearchFilter:
          $ref: "#/components/schemas/ListRecordHistorySearchFilter"
        PageSize:
          $ref: "#/components/schemas/PageSize"
        PageToken:
          $ref: "#/components/schemas/PageToken"
    ListResourcesForTagOptionOutput:
      type: object
      properties:
        ResourceDetails:
          $ref: "#/components/schemas/ResourceDetails"
        PageToken:
          $ref: "#/components/schemas/PageToken"
    ListResourcesForTagOptionInput:
      type: object
      required:
        - TagOptionId
      properties:
        TagOptionId:
          $ref: "#/components/schemas/TagOptionId"
        ResourceType:
          $ref: "#/components/schemas/ResourceType"
        PageSize:
          $ref: "#/components/schemas/PageSize"
        PageToken:
          $ref: "#/components/schemas/PageToken"
    ListServiceActionsOutput:
      type: object
      properties:
        ServiceActionSummaries:
          $ref: "#/components/schemas/ServiceActionSummaries"
        NextPageToken:
          $ref: "#/components/schemas/PageToken"
    ListServiceActionsInput:
      type: object
      properties:
        AcceptLanguage:
          $ref: "#/components/schemas/AcceptLanguage"
        PageSize:
          $ref: "#/components/schemas/PageSize"
        PageToken:
          $ref: "#/components/schemas/PageToken"
    ListServiceActionsForProvisioningArtifactOutput:
      type: object
      properties:
        ServiceActionSummaries:
          $ref: "#/components/schemas/ServiceActionSummaries"
        NextPageToken:
          $ref: "#/components/schemas/PageToken"
    ListServiceActionsForProvisioningArtifactInput:
      type: object
      required:
        - ProductId
        - ProvisioningArtifactId
      properties:
        ProductId:
          $ref: "#/components/schemas/Id"
        ProvisioningArtifactId:
          $ref: "#/components/schemas/Id"
        PageSize:
          $ref: "#/components/schemas/PageSize"
        PageToken:
          $ref: "#/components/schemas/PageToken"
        AcceptLanguage:
          $ref: "#/components/schemas/AcceptLanguage"
    ListStackInstancesForProvisionedProductOutput:
      type: object
      properties:
        StackInstances:
          $ref: "#/components/schemas/StackInstances"
        NextPageToken:
          $ref: "#/components/schemas/PageToken"
    ListStackInstancesForProvisionedProductInput:
      type: object
      required:
        - ProvisionedProductId
      properties:
        AcceptLanguage:
          $ref: "#/components/schemas/AcceptLanguage"
        ProvisionedProductId:
          $ref: "#/components/schemas/Id"
        PageToken:
          $ref: "#/components/schemas/PageToken"
        PageSize:
          $ref: "#/components/schemas/PageSize"
    ListTagOptionsOutput:
      type: object
      properties:
        TagOptionDetails:
          $ref: "#/components/schemas/TagOptionDetails"
        PageToken:
          $ref: "#/components/schemas/PageToken"
    ListTagOptionsInput:
      type: object
      properties:
        Filters:
          $ref: "#/components/schemas/ListTagOptionsFilters"
        PageSize:
          $ref: "#/components/schemas/PageSize"
        PageToken:
          $ref: "#/components/schemas/PageToken"
    ProvisionProductOutput:
      type: object
      properties:
        RecordDetail:
          $ref: "#/components/schemas/RecordDetail"
    ProvisionProductInput:
      type: object
      required:
        - ProductId
        - ProvisioningArtifactId
        - ProvisionedProductName
        - ProvisionToken
      properties:
        AcceptLanguage:
          $ref: "#/components/schemas/AcceptLanguage"
        ProductId:
          $ref: "#/components/schemas/Id"
        ProvisioningArtifactId:
          $ref: "#/components/schemas/Id"
        PathId:
          $ref: "#/components/schemas/Id"
        ProvisionedProductName:
          $ref: "#/components/schemas/ProvisionedProductName"
        ProvisioningParameters:
          $ref: "#/components/schemas/ProvisioningParameters"
        ProvisioningPreferences:
          $ref: "#/components/schemas/ProvisioningPreferences"
        Tags:
          $ref: "#/components/schemas/Tags"
        NotificationArns:
          $ref: "#/components/schemas/NotificationArns"
        ProvisionToken:
          $ref: "#/components/schemas/IdempotencyToken"
    RejectPortfolioShareOutput:
      type: object
      properties: {}
    RejectPortfolioShareInput:
      type: object
      required:
        - PortfolioId
      properties:
        AcceptLanguage:
          $ref: "#/components/schemas/AcceptLanguage"
        PortfolioId:
          $ref: "#/components/schemas/Id"
        PortfolioShareType:
          $ref: "#/components/schemas/PortfolioShareType"
    ScanProvisionedProductsOutput:
      type: object
      properties:
        ProvisionedProducts:
          $ref: "#/components/schemas/ProvisionedProductDetails"
        NextPageToken:
          $ref: "#/components/schemas/PageToken"
    ScanProvisionedProductsInput:
      type: object
      properties:
        AcceptLanguage:
          $ref: "#/components/schemas/AcceptLanguage"
        AccessLevelFilter:
          $ref: "#/components/schemas/AccessLevelFilter"
        PageSize:
          $ref: "#/components/schemas/PageSize"
        PageToken:
          $ref: "#/components/schemas/PageToken"
    SearchProductsOutput:
      type: object
      properties:
        ProductViewSummaries:
          $ref: "#/components/schemas/ProductViewSummaries"
        ProductViewAggregations:
          $ref: "#/components/schemas/ProductViewAggregations"
        NextPageToken:
          $ref: "#/components/schemas/PageToken"
    SearchProductsInput:
      type: object
      properties:
        AcceptLanguage:
          $ref: "#/components/schemas/AcceptLanguage"
        Filters:
          $ref: "#/components/schemas/ProductViewFilters"
        PageSize:
          $ref: "#/components/schemas/PageSize"
        SortBy:
          $ref: "#/components/schemas/ProductViewSortBy"
        SortOrder:
          $ref: "#/components/schemas/SortOrder"
        PageToken:
          $ref: "#/components/schemas/PageToken"
    SearchProductsAsAdminOutput:
      type: object
      properties:
        ProductViewDetails:
          $ref: "#/components/schemas/ProductViewDetails"
        NextPageToken:
          $ref: "#/components/schemas/PageToken"
    SearchProductsAsAdminInput:
      type: object
      properties:
        AcceptLanguage:
          $ref: "#/components/schemas/AcceptLanguage"
        PortfolioId:
          $ref: "#/components/schemas/Id"
        Filters:
          $ref: "#/components/schemas/ProductViewFilters"
        SortBy:
          $ref: "#/components/schemas/ProductViewSortBy"
        SortOrder:
          $ref: "#/components/schemas/SortOrder"
        PageToken:
          $ref: "#/components/schemas/PageToken"
        PageSize:
          $ref: "#/components/schemas/PageSize"
        ProductSource:
          $ref: "#/components/schemas/ProductSource"
    SearchProvisionedProductsOutput:
      type: object
      properties:
        ProvisionedProducts:
          $ref: "#/components/schemas/ProvisionedProductAttributes"
        TotalResultsCount:
          $ref: "#/components/schemas/TotalResultsCount"
        NextPageToken:
          $ref: "#/components/schemas/PageToken"
    SearchProvisionedProductsInput:
      type: object
      properties:
        AcceptLanguage:
          $ref: "#/components/schemas/AcceptLanguage"
        AccessLevelFilter:
          $ref: "#/components/schemas/AccessLevelFilter"
        Filters:
          $ref: "#/components/schemas/ProvisionedProductFilters"
        SortBy:
          $ref: "#/components/schemas/SortField"
        SortOrder:
          $ref: "#/components/schemas/SortOrder"
        PageSize:
          $ref: "#/components/schemas/SearchProvisionedProductsPageSize"
        PageToken:
          $ref: "#/components/schemas/PageToken"
    TerminateProvisionedProductOutput:
      type: object
      properties:
        RecordDetail:
          $ref: "#/components/schemas/RecordDetail"
    TerminateProvisionedProductInput:
      type: object
      required:
        - TerminateToken
      properties:
        ProvisionedProductName:
          $ref: "#/components/schemas/ProvisionedProductNameOrArn"
        ProvisionedProductId:
          $ref: "#/components/schemas/Id"
        TerminateToken:
          $ref: "#/components/schemas/IdempotencyToken"
        IgnoreErrors:
          $ref: "#/components/schemas/IgnoreErrors"
        AcceptLanguage:
          $ref: "#/components/schemas/AcceptLanguage"
    UpdateConstraintOutput:
      type: object
      properties:
        ConstraintDetail:
          $ref: "#/components/schemas/ConstraintDetail"
        ConstraintParameters:
          $ref: "#/components/schemas/ConstraintParameters"
        Status:
          $ref: "#/components/schemas/Status"
    UpdateConstraintInput:
      type: object
      required:
        - Id
      properties:
        AcceptLanguage:
          $ref: "#/components/schemas/AcceptLanguage"
        Id:
          $ref: "#/components/schemas/Id"
        Description:
          $ref: "#/components/schemas/ConstraintDescription"
        Parameters:
          $ref: "#/components/schemas/ConstraintParameters"
    UpdatePortfolioOutput:
      type: object
      properties:
        PortfolioDetail:
          $ref: "#/components/schemas/PortfolioDetail"
        Tags:
          $ref: "#/components/schemas/Tags"
    UpdatePortfolioInput:
      type: object
      required:
        - Id
      properties:
        AcceptLanguage:
          $ref: "#/components/schemas/AcceptLanguage"
        Id:
          $ref: "#/components/schemas/Id"
        DisplayName:
          $ref: "#/components/schemas/PortfolioDisplayName"
        Description:
          $ref: "#/components/schemas/PortfolioDescription"
        ProviderName:
          $ref: "#/components/schemas/ProviderName"
        AddTags:
          $ref: "#/components/schemas/AddTags"
        RemoveTags:
          $ref: "#/components/schemas/TagKeys"
    UpdateProductOutput:
      type: object
      properties:
        ProductViewDetail:
          $ref: "#/components/schemas/ProductViewDetail"
        Tags:
          $ref: "#/components/schemas/Tags"
    UpdateProductInput:
      type: object
      required:
        - Id
      properties:
        AcceptLanguage:
          $ref: "#/components/schemas/AcceptLanguage"
        Id:
          $ref: "#/components/schemas/Id"
        Name:
          $ref: "#/components/schemas/ProductViewName"
        Owner:
          $ref: "#/components/schemas/ProductViewOwner"
        Description:
          $ref: "#/components/schemas/ProductViewShortDescription"
        Distributor:
          $ref: "#/components/schemas/ProductViewOwner"
        SupportDescription:
          $ref: "#/components/schemas/SupportDescription"
        SupportEmail:
          $ref: "#/components/schemas/SupportEmail"
        SupportUrl:
          $ref: "#/components/schemas/SupportUrl"
        AddTags:
          $ref: "#/components/schemas/AddTags"
        RemoveTags:
          $ref: "#/components/schemas/TagKeys"
    UpdateProvisionedProductOutput:
      type: object
      properties:
        RecordDetail:
          $ref: "#/components/schemas/RecordDetail"
    UpdateProvisionedProductInput:
      type: object
      required:
        - UpdateToken
      properties:
        AcceptLanguage:
          $ref: "#/components/schemas/AcceptLanguage"
        ProvisionedProductName:
          $ref: "#/components/schemas/ProvisionedProductNameOrArn"
        ProvisionedProductId:
          $ref: "#/components/schemas/Id"
        ProductId:
          $ref: "#/components/schemas/Id"
        ProvisioningArtifactId:
          $ref: "#/components/schemas/Id"
        PathId:
          $ref: "#/components/schemas/Id"
        ProvisioningParameters:
          $ref: "#/components/schemas/UpdateProvisioningParameters"
        ProvisioningPreferences:
          $ref: "#/components/schemas/UpdateProvisioningPreferences"
        Tags:
          $ref: "#/components/schemas/Tags"
        UpdateToken:
          $ref: "#/components/schemas/IdempotencyToken"
    UpdateProvisionedProductPropertiesOutput:
      type: object
      properties:
        ProvisionedProductId:
          $ref: "#/components/schemas/Id"
        ProvisionedProductProperties:
          $ref: "#/components/schemas/ProvisionedProductProperties"
        RecordId:
          $ref: "#/components/schemas/Id"
        Status:
          $ref: "#/components/schemas/RecordStatus"
    UpdateProvisionedProductPropertiesInput:
      type: object
      required:
        - ProvisionedProductId
        - ProvisionedProductProperties
        - IdempotencyToken
      properties:
        AcceptLanguage:
          $ref: "#/components/schemas/AcceptLanguage"
        ProvisionedProductId:
          $ref: "#/components/schemas/Id"
        ProvisionedProductProperties:
          $ref: "#/components/schemas/ProvisionedProductProperties"
        IdempotencyToken:
          $ref: "#/components/schemas/IdempotencyToken"
    UpdateProvisioningArtifactOutput:
      type: object
      properties:
        ProvisioningArtifactDetail:
          $ref: "#/components/schemas/ProvisioningArtifactDetail"
        Info:
          $ref: "#/components/schemas/ProvisioningArtifactInfo"
        Status:
          $ref: "#/components/schemas/Status"
    UpdateProvisioningArtifactInput:
      type: object
      required:
        - ProductId
        - ProvisioningArtifactId
      properties:
        AcceptLanguage:
          $ref: "#/components/schemas/AcceptLanguage"
        ProductId:
          $ref: "#/components/schemas/Id"
        ProvisioningArtifactId:
          $ref: "#/components/schemas/Id"
        Name:
          $ref: "#/components/schemas/ProvisioningArtifactName"
        Description:
          $ref: "#/components/schemas/ProvisioningArtifactDescription"
        Active:
          $ref: "#/components/schemas/ProvisioningArtifactActive"
        Guidance:
          $ref: "#/components/schemas/ProvisioningArtifactGuidance"
    UpdateServiceActionOutput:
      type: object
      properties:
        ServiceActionDetail:
          $ref: "#/components/schemas/ServiceActionDetail"
    UpdateServiceActionInput:
      type: object
      required:
        - Id
      properties:
        Id:
          $ref: "#/components/schemas/Id"
        Name:
          $ref: "#/components/schemas/ServiceActionName"
        Definition:
          $ref: "#/components/schemas/ServiceActionDefinitionMap"
        Description:
          $ref: "#/components/schemas/ServiceActionDescription"
        AcceptLanguage:
          $ref: "#/components/schemas/AcceptLanguage"
    UpdateTagOptionOutput:
      type: object
      properties:
        TagOptionDetail:
          $ref: "#/components/schemas/TagOptionDetail"
    UpdateTagOptionInput:
      type: object
      required:
        - Id
      properties:
        Id:
          $ref: "#/components/schemas/TagOptionId"
        Value:
          $ref: "#/components/schemas/TagOptionValue"
        Active:
          $ref: "#/components/schemas/TagOptionActive"
    AcceptLanguage:
      type: string
      maxLength: 100
    Id:
      type: string
      pattern: ^[a-zA-Z0-9_\-]*
      minLength: 1
      maxLength: 100
    PortfolioShareType:
      type: string
      enum:
        - IMPORTED
        - AWS_SERVICECATALOG
        - AWS_ORGANIZATIONS
    AccessLevelFilterKey:
      type: string
      enum:
        - Account
        - Role
        - User
    AccessLevelFilterValue:
      type: string
    AccessLevelFilter:
      type: object
      properties:
        Key:
          $ref: "#/components/schemas/AccessLevelFilterKey"
        Value:
          $ref: "#/components/schemas/AccessLevelFilterValue"
      description: The access level to use to filter results.
    AccessStatus:
      type: string
      enum:
        - ENABLED
        - UNDER_CHANGE
        - DISABLED
    AccountId:
      type: string
      pattern: ^[0-9]{12}$
    AccountIds:
      type: array
      items:
        $ref: "#/components/schemas/AccountId"
    Tag:
      type: object
      required:
        - Key
        - Value
      properties:
        Key:
          $ref: "#/components/schemas/TagKey"
        Value:
          $ref: "#/components/schemas/TagValue"
      description: Information about a tag. A tag is a key-value pair. Tags are propagated
        to the resources created when provisioning a product.
    AddTags:
      type: array
      items:
        $ref: "#/components/schemas/Tag"
      maxItems: 20
    AllowedValue:
      type: string
    AllowedValues:
      type: array
      items:
        $ref: "#/components/schemas/AllowedValue"
    ApproximateCount:
      type: integer
    BudgetName:
      type: string
      minLength: 1
      maxLength: 100
    PrincipalARN:
      type: string
      minLength: 1
      maxLength: 1000
    PrincipalType:
      type: string
      enum:
        - IAM
    ResourceId:
      type: string
    TagOptionId:
      type: string
      minLength: 1
      maxLength: 100
    AttributeValue:
      type: string
    ServiceActionAssociations:
      type: array
      items:
        $ref: "#/components/schemas/ServiceActionAssociation"
      minItems: 1
      maxItems: 50
    FailedServiceActionAssociations:
      type: array
      items:
        $ref: "#/components/schemas/FailedServiceActionAssociation"
      maxItems: 50
    BudgetDetail:
      type: object
      properties:
        BudgetName:
          $ref: "#/components/schemas/BudgetName"
      description: Information about a budget.
    Budgets:
      type: array
      items:
        $ref: "#/components/schemas/BudgetDetail"
    CausingEntity:
      type: string
    ChangeAction:
      type: string
      enum:
        - ADD
        - MODIFY
        - REMOVE
    CloudWatchDashboardName:
      type: string
    CloudWatchDashboard:
      type: object
      properties:
        Name:
          $ref: "#/components/schemas/CloudWatchDashboardName"
      description: Information about a CloudWatch dashboard.
    CloudWatchDashboards:
      type: array
      items:
        $ref: "#/components/schemas/CloudWatchDashboard"
    ConstraintDescription:
      type: string
      maxLength: 2000
    ConstraintType:
      type: string
      minLength: 1
      maxLength: 1024
    ConstraintDetail:
      type: object
      properties:
        ConstraintId:
          $ref: "#/components/schemas/Id"
        Type:
          $ref: "#/components/schemas/ConstraintType"
        Description:
          $ref: "#/components/schemas/ConstraintDescription"
        Owner:
          $ref: "#/components/schemas/AccountId"
      description: Information about a constraint.
    ConstraintDetails:
      type: array
      items:
        $ref: "#/components/schemas/ConstraintDetail"
    ConstraintParameters:
      type: string
    ConstraintSummary:
      type: object
      properties:
        Type:
          $ref: "#/components/schemas/ConstraintType"
        Description:
          $ref: "#/components/schemas/ConstraintDescription"
      description: Summary information about a constraint.
    ConstraintSummaries:
      type: array
      items:
        $ref: "#/components/schemas/ConstraintSummary"
    CopyOption:
      type: string
      enum:
        - CopyTags
    CopyOptions:
      type: array
      items:
        $ref: "#/components/schemas/CopyOption"
    ProductArn:
      type: string
      pattern: arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}
      minLength: 1
      maxLength: 1224
    ProductViewName:
      type: string
      maxLength: 8191
    SourceProvisioningArtifactProperties:
      type: array
      items:
        $ref: "#/components/schemas/SourceProvisioningArtifactPropertiesMap"
    IdempotencyToken:
      type: string
      pattern: "[a-zA-Z0-9][a-zA-Z0-9_-]*"
      minLength: 1
      maxLength: 128
    CopyProductStatus:
      type: string
      enum:
        - SUCCEEDED
        - IN_PROGRESS
        - FAILED
    Status:
      type: string
      enum:
        - AVAILABLE
        - CREATING
        - FAILED
    PortfolioDisplayName:
      type: string
      minLength: 1
      maxLength: 100
    PortfolioDescription:
      type: string
      maxLength: 2000
    ProviderName:
      type: string
      minLength: 1
      maxLength: 50
    PortfolioDetail:
      type: object
      properties:
        Id:
          $ref: "#/components/schemas/Id"
        ARN:
          $ref: "#/components/schemas/ResourceARN"
        DisplayName:
          $ref: "#/components/schemas/PortfolioDisplayName"
        Description:
          $ref: "#/components/schemas/PortfolioDescription"
        CreatedTime:
          $ref: "#/components/schemas/CreationTime"
        ProviderName:
          $ref: "#/components/schemas/ProviderName"
      description: Information about a portfolio.
    Tags:
      type: array
      items:
        $ref: "#/components/schemas/Tag"
      maxItems: 50
    OrganizationNode:
      type: object
      properties:
        Type:
          $ref: "#/components/schemas/OrganizationNodeType"
        Value:
          $ref: "#/components/schemas/OrganizationNodeValue"
      description: Information about the organization node.
    ProductViewOwner:
      type: string
      maxLength: 8191
    ProductViewShortDescription:
      type: string
      maxLength: 8191
    SupportDescription:
      type: string
      maxLength: 8191
    SupportEmail:
      type: string
      maxLength: 254
    SupportUrl:
      type: string
      maxLength: 2083
    ProductType:
      type: string
      enum:
        - CLOUD_FORMATION_TEMPLATE
        - MARKETPLACE
      maxLength: 8191
    ProvisioningArtifactProperties:
      type: object
      required:
        - Info
      properties:
        Name:
          $ref: "#/components/schemas/ProvisioningArtifactName"
        Description:
          $ref: "#/components/schemas/ProvisioningArtifactDescription"
        Info:
          $ref: "#/components/schemas/ProvisioningArtifactInfo"
        Type:
          $ref: "#/components/schemas/ProvisioningArtifactType"
        DisableTemplateValidation:
          $ref: "#/components/schemas/DisableTemplateValidation"
      description: Information about a provisioning artifact (also known as a version) for
        a product.
    ProductViewDetail:
      type: object
      properties:
        ProductViewSummary:
          $ref: "#/components/schemas/ProductViewSummary"
        Status:
          $ref: "#/components/schemas/Status"
        ProductARN:
          $ref: "#/components/schemas/ResourceARN"
        CreatedTime:
          $ref: "#/components/schemas/CreatedTime"
      description: Information about a product view.
    ProvisioningArtifactDetail:
      type: object
      properties:
        Id:
          $ref: "#/components/schemas/Id"
        Name:
          $ref: "#/components/schemas/ProvisioningArtifactName"
        Description:
          $ref: "#/components/schemas/ProvisioningArtifactName"
        Type:
          $ref: "#/components/schemas/ProvisioningArtifactType"
        CreatedTime:
          $ref: "#/components/schemas/CreationTime"
        Active:
          $ref: "#/components/schemas/ProvisioningArtifactActive"
        Guidance:
          $ref: "#/components/schemas/ProvisioningArtifactGuidance"
      description: Information about a provisioning artifact (also known as a version) for
        a product.
    ProvisionedProductPlanName:
      type: string
    ProvisionedProductPlanType:
      type: string
      enum:
        - CLOUDFORMATION
    NotificationArns:
      type: array
      items:
        $ref: "#/components/schemas/NotificationArn"
      maxItems: 5
    ProvisionedProductName:
      type: string
      pattern: "[a-zA-Z0-9][a-zA-Z0-9._-]*"
      minLength: 1
      maxLength: 128
    UpdateProvisioningParameters:
      type: array
      items:
        $ref: "#/components/schemas/UpdateProvisioningParameter"
    ProvisioningArtifactInfo:
      type: object
      minProperties: 1
      maxProperties: 100
      additionalProperties:
        $ref: "#/components/schemas/ProvisioningArtifactInfoValue"
    ServiceActionName:
      type: string
      pattern: ^[a-zA-Z0-9_\-.]*
      minLength: 1
      maxLength: 256
    ServiceActionDefinitionType:
      type: string
      enum:
        - SSM_AUTOMATION
    ServiceActionDefinitionMap:
      type: object
      minProperties: 1
      maxProperties: 100
      additionalProperties:
        $ref: "#/components/schemas/ServiceActionDefinitionValue"
    ServiceActionDescription:
      type: string
      maxLength: 1024
    ServiceActionDetail:
      type: object
      properties:
        ServiceActionSummary:
          $ref: "#/components/schemas/ServiceActionSummary"
        Definition:
          $ref: "#/components/schemas/ServiceActionDefinitionMap"
      description: An object containing detailed information about the self-service action.
    TagOptionKey:
      type: string
      pattern: ^([\p{L}\p{Z}\p{N}_.:/=+\-@]*)$
      minLength: 1
      maxLength: 128
    TagOptionValue:
      type: string
      pattern: ^([\p{L}\p{Z}\p{N}_.:/=+\-@]*)$
      minLength: 1
      maxLength: 256
    TagOptionDetail:
      type: object
      properties:
        Key:
          $ref: "#/components/schemas/TagOptionKey"
        Value:
          $ref: "#/components/schemas/TagOptionValue"
        Active:
          $ref: "#/components/schemas/TagOptionActive"
        Id:
          $ref: "#/components/schemas/TagOptionId"
      description: Information about a TagOption.
    CreatedTime:
      type: string
      format: date-time
    CreationTime:
      type: string
      format: date-time
    DefaultValue:
      type: string
    IgnoreErrors:
      type: boolean
    StatusDetail:
      type: string
    TagOptionDetails:
      type: array
      items:
        $ref: "#/components/schemas/TagOptionDetail"
    OrganizationNodeValue:
      type: string
      pattern: (^[0-9]{12}$)|(^arn:aws:organizations::\d{12}:organization\/o-[a-z0-9]{10,32})|(^o-[a-z0-9]{10,32}$)|(^arn:aws:organizations::\d{12}:ou\/o-[a-z0-9]{10,32}\/ou-[0-9a-z]{4,32}-[0-9a-z]{8,32}$)|(^ou-[0-9a-z]{4,32}-[a-z0-9]{8,32}$)
    ShareStatus:
      type: string
      enum:
        - NOT_STARTED
        - IN_PROGRESS
        - COMPLETED
        - COMPLETED_WITH_ERRORS
        - ERROR
    ShareDetails:
      type: object
      properties:
        SuccessfulShares:
          $ref: "#/components/schemas/SuccessfulShares"
        ShareErrors:
          $ref: "#/components/schemas/ShareErrors"
      description: Information about the portfolio share operation.
    ProvisioningArtifactSummaries:
      type: array
      items:
        $ref: "#/components/schemas/ProvisioningArtifactSummary"
    ProductViewSummary:
      type: object
      properties:
        Id:
          $ref: "#/components/schemas/Id"
        ProductId:
          $ref: "#/components/schemas/Id"
        Name:
          $ref: "#/components/schemas/ProductViewName"
        Owner:
          $ref: "#/components/schemas/ProductViewOwner"
        ShortDescription:
          $ref: "#/components/schemas/ProductViewShortDescription"
        Type:
          $ref: "#/components/schemas/ProductType"
        Distributor:
          $ref: "#/components/schemas/ProductViewDistributor"
        HasDefaultPath:
          $ref: "#/components/schemas/HasDefaultPath"
        SupportEmail:
          $ref: "#/components/schemas/SupportEmail"
        SupportDescription:
          $ref: "#/components/schemas/SupportDescription"
        SupportUrl:
          $ref: "#/components/schemas/SupportUrl"
      description: Summary information about a product view.
    ProvisioningArtifacts:
      type: array
      items:
        $ref: "#/components/schemas/ProvisioningArtifact"
    ProvisionedProductDetail:
      type: object
      properties:
        Name:
          $ref: "#/components/schemas/ProvisionedProductNameOrArn"
        Arn:
          $ref: "#/components/schemas/ProvisionedProductNameOrArn"
        Type:
          $ref: "#/components/schemas/ProvisionedProductType"
        Id:
          $ref: "#/components/schemas/ProvisionedProductId"
        Status:
          $ref: "#/components/schemas/ProvisionedProductStatus"
        StatusMessage:
          $ref: "#/components/schemas/ProvisionedProductStatusMessage"
        CreatedTime:
          $ref: "#/components/schemas/CreatedTime"
        IdempotencyToken:
          $ref: "#/components/schemas/IdempotencyToken"
        LastRecordId:
          $ref: "#/components/schemas/LastRequestId"
        ProductId:
          $ref: "#/components/schemas/Id"
        ProvisioningArtifactId:
          $ref: "#/components/schemas/Id"
      description: Information about a provisioned product.
    PageSize:
      type: integer
      minimum: 0
      maximum: 20
    PageToken:
      type: string
      pattern: "[\\u0009\\u000a\\u000d\\u0020-\\uD7FF\\uE000-\\uFFFD]*"
      maxLength: 2024
    ProvisionedProductPlanDetails:
      type: object
      properties:
        CreatedTime:
          $ref: "#/components/schemas/CreatedTime"
        PathId:
          $ref: "#/components/schemas/Id"
        ProductId:
          $ref: "#/components/schemas/Id"
        PlanName:
          $ref: "#/components/schemas/ProvisionedProductPlanName"
        PlanId:
          $ref: "#/components/schemas/Id"
        ProvisionProductId:
          $ref: "#/components/schemas/Id"
        ProvisionProductName:
          $ref: "#/components/schemas/ProvisionedProductName"
        PlanType:
          $ref: "#/components/schemas/ProvisionedProductPlanType"
        ProvisioningArtifactId:
          $ref: "#/components/schemas/Id"
        Status:
          $ref: "#/components/schemas/ProvisionedProductPlanStatus"
        UpdatedTime:
          $ref: "#/components/schemas/UpdatedTime"
        NotificationArns:
          $ref: "#/components/schemas/NotificationArns"
        ProvisioningParameters:
          $ref: "#/components/schemas/UpdateProvisioningParameters"
        Tags:
          $ref: "#/components/schemas/Tags"
        StatusMessage:
          $ref: "#/components/schemas/StatusMessage"
      description: Information about a plan.
    ResourceChanges:
      type: array
      items:
        $ref: "#/components/schemas/ResourceChange"
    Verbose:
      type: boolean
    ProvisioningArtifactParameters:
      type: array
      items:
        $ref: "#/components/schemas/ProvisioningArtifactParameter"
    UsageInstructions:
      type: array
      items:
        $ref: "#/components/schemas/UsageInstruction"
    TagOptionSummaries:
      type: array
      items:
        $ref: "#/components/schemas/TagOptionSummary"
    ProvisioningArtifactPreferences:
      type: object
      properties:
        StackSetAccounts:
          $ref: "#/components/schemas/StackSetAccounts"
        StackSetRegions:
          $ref: "#/components/schemas/StackSetRegions"
      description: <p>The user-defined preferences that will be applied during product
        provisioning, unless overridden by <code>ProvisioningPreferences</code>
        or <code>UpdateProvisioningPreferences</code>.</p> <p>For more
        information on maximum concurrent accounts and failure tolerance, see <a
        href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack
        set operation options</a> in the <i>AWS CloudFormation User
        Guide</i>.</p>
    RecordDetail:
      type: object
      properties:
        RecordId:
          $ref: "#/components/schemas/Id"
        ProvisionedProductName:
          $ref: "#/components/schemas/ProvisionedProductName"
        Status:
          $ref: "#/components/schemas/RecordStatus"
        CreatedTime:
          $ref: "#/components/schemas/CreatedTime"
        UpdatedTime:
          $ref: "#/components/schemas/UpdatedTime"
        ProvisionedProductType:
          $ref: "#/components/schemas/ProvisionedProductType"
        RecordType:
          $ref: "#/components/schemas/RecordType"
        ProvisionedProductId:
          $ref: "#/components/schemas/Id"
        ProductId:
          $ref: "#/components/schemas/Id"
        ProvisioningArtifactId:
          $ref: "#/components/schemas/Id"
        PathId:
          $ref: "#/components/schemas/Id"
        RecordErrors:
          $ref: "#/components/schemas/RecordErrors"
        RecordTags:
          $ref: "#/components/schemas/RecordTags"
      description: Information about a request operation.
    RecordOutputs:
      type: array
      items:
        $ref: "#/components/schemas/RecordOutput"
    ExecutionParameters:
      type: array
      items:
        $ref: "#/components/schemas/ExecutionParameter"
    Description:
      type: string
    DisableTemplateValidation:
      type: boolean
    Error:
      type: string
    ErrorCode:
      type: string
    ErrorDescription:
      type: string
    EvaluationType:
      type: string
      enum:
        - STATIC
        - DYNAMIC
    ExecutionParameterMap:
      type: object
      minProperties: 1
      maxProperties: 200
      additionalProperties:
        $ref: "#/components/schemas/ExecutionParameterValueList"
    ExecutionParameterKey:
      type: string
      minLength: 1
      maxLength: 50
    ExecutionParameterType:
      type: string
      minLength: 1
      maxLength: 1024
    ExecutionParameterValueList:
      type: array
      items:
        $ref: "#/components/schemas/ExecutionParameterValue"
      minItems: 0
      maxItems: 25
    ExecutionParameter:
      type: object
      properties:
        Name:
          $ref: "#/components/schemas/ExecutionParameterKey"
        Type:
          $ref: "#/components/schemas/ExecutionParameterType"
        DefaultValues:
          $ref: "#/components/schemas/ExecutionParameterValueList"
    ExecutionParameterValue:
      type: string
      minLength: 0
      maxLength: 512
    ServiceActionAssociationErrorCode:
      type: string
      enum:
        - DUPLICATE_RESOURCE
        - INTERNAL_FAILURE
        - LIMIT_EXCEEDED
        - RESOURCE_NOT_FOUND
        - THROTTLING
    ServiceActionAssociationErrorMessage:
      type: string
      minLength: 1
      maxLength: 1024
    FailedServiceActionAssociation:
      type: object
      properties:
        ServiceActionId:
          $ref: "#/components/schemas/Id"
        ProductId:
          $ref: "#/components/schemas/Id"
        ProvisioningArtifactId:
          $ref: "#/components/schemas/Id"
        ErrorCode:
          $ref: "#/components/schemas/ServiceActionAssociationErrorCode"
        ErrorMessage:
          $ref: "#/components/schemas/ServiceActionAssociationErrorMessage"
      description: An object containing information about the error, along with identifying
        information about the self-service action and its associations.
    HasDefaultPath:
      type: boolean
    InstructionType:
      type: string
    InstructionValue:
      type: string
    LastRequestId:
      type: string
    LaunchPathSummary:
      type: object
      properties:
        Id:
          $ref: "#/components/schemas/Id"
        ConstraintSummaries:
          $ref: "#/components/schemas/ConstraintSummaries"
        Tags:
          $ref: "#/components/schemas/Tags"
        Name:
          $ref: "#/components/schemas/PortfolioName"
      description: Summary information about a product path for a user.
    LaunchPathSummaries:
      type: array
      items:
        $ref: "#/components/schemas/LaunchPathSummary"
    PortfolioName:
      type: string
    PortfolioDetails:
      type: array
      items:
        $ref: "#/components/schemas/PortfolioDetail"
    OrganizationNodeType:
      type: string
      enum:
        - ORGANIZATION
        - ORGANIZATIONAL_UNIT
        - ACCOUNT
    OrganizationNodes:
      type: array
      items:
        $ref: "#/components/schemas/OrganizationNode"
    Principals:
      type: array
      items:
        $ref: "#/components/schemas/Principal"
    ProvisionedProductPlans:
      type: array
      items:
        $ref: "#/components/schemas/ProvisionedProductPlanSummary"
    ProvisioningArtifactViews:
      type: array
      items:
        $ref: "#/components/schemas/ProvisioningArtifactView"
    ProvisioningArtifactDetails:
      type: array
      items:
        $ref: "#/components/schemas/ProvisioningArtifactDetail"
    ListRecordHistorySearchFilter:
      type: object
      properties:
        Key:
          $ref: "#/components/schemas/SearchFilterKey"
        Value:
          $ref: "#/components/schemas/SearchFilterValue"
      description: The search filter to use when listing history records.
    RecordDetails:
      type: array
      items:
        $ref: "#/components/schemas/RecordDetail"
    SearchFilterKey:
      type: string
    SearchFilterValue:
      type: string
    ResourceType:
      type: string
    ResourceDetails:
      type: array
      items:
        $ref: "#/components/schemas/ResourceDetail"
    ServiceActionSummaries:
      type: array
      items:
        $ref: "#/components/schemas/ServiceActionSummary"
    StackInstances:
      type: array
      items:
        $ref: "#/components/schemas/StackInstance"
    TagOptionActive:
      type: boolean
    ListTagOptionsFilters:
      type: object
      properties:
        Key:
          $ref: "#/components/schemas/TagOptionKey"
        Value:
          $ref: "#/components/schemas/TagOptionValue"
        Active:
          $ref: "#/components/schemas/TagOptionActive"
      description: Filters to use when listing TagOptions.
    LogicalResourceId:
      type: string
    Message:
      type: string
    Namespaces:
      type: array
      items:
        $ref: "#/components/schemas/AccountId"
    NoEcho:
      type: boolean
    NotificationArn:
      type: string
      pattern: arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}
      minLength: 1
      maxLength: 1224
    OutputKey:
      type: string
    OutputValue:
      type: string
    ParameterConstraints:
      type: object
      properties:
        AllowedValues:
          $ref: "#/components/schemas/AllowedValues"
      description: The constraints that the administrator has put on the parameter.
    ParameterKey:
      type: string
      minLength: 1
      maxLength: 1000
    ParameterType:
      type: string
    ParameterValue:
      type: string
      maxLength: 4096
    PhysicalId:
      type: string
    PhysicalResourceId:
      type: string
    PlanResourceType:
      type: string
      minLength: 1
      maxLength: 256
    ResourceARN:
      type: string
      minLength: 1
      maxLength: 150
    Principal:
      type: object
      properties:
        PrincipalARN:
          $ref: "#/components/schemas/PrincipalARN"
        PrincipalType:
          $ref: "#/components/schemas/PrincipalType"
      description: Information about a principal.
    ProductSource:
      type: string
      enum:
        - ACCOUNT
    ProductViewAggregationType:
      type: string
    ProductViewAggregationValue:
      type: object
      properties:
        Value:
          $ref: "#/components/schemas/AttributeValue"
        ApproximateCount:
          $ref: "#/components/schemas/ApproximateCount"
      description: A single product view aggregation value/count pair, containing metadata
        about each product to which the calling user has access.
    ProductViewAggregationValues:
      type: array
      items:
        $ref: "#/components/schemas/ProductViewAggregationValue"
    ProductViewAggregations:
      type: object
      additionalProperties:
        $ref: "#/components/schemas/ProductViewAggregationValues"
    ProductViewDetails:
      type: array
      items:
        $ref: "#/components/schemas/ProductViewDetail"
    ProductViewDistributor:
      type: string
    ProductViewFilterBy:
      type: string
      enum:
        - FullTextSearch
        - Owner
        - ProductType
        - SourceProductId
    ProductViewFilterValue:
      type: string
    ProductViewFilterValues:
      type: array
      items:
        $ref: "#/components/schemas/ProductViewFilterValue"
    ProductViewFilters:
      type: object
      additionalProperties:
        $ref: "#/components/schemas/ProductViewFilterValues"
    ProductViewSortBy:
      type: string
      enum:
        - Title
        - VersionCount
        - CreationDate
    ProductViewSummaries:
      type: array
      items:
        $ref: "#/components/schemas/ProductViewSummary"
    PropertyKey:
      type: string
      enum:
        - OWNER
      minLength: 1
      maxLength: 128
    PropertyName:
      type: string
    PropertyValue:
      type: string
      minLength: 1
      maxLength: 1024
    ProvisioningParameters:
      type: array
      items:
        $ref: "#/components/schemas/ProvisioningParameter"
    ProvisioningPreferences:
      type: object
      properties:
        StackSetAccounts:
          $ref: "#/components/schemas/StackSetAccounts"
        StackSetRegions:
          $ref: "#/components/schemas/StackSetRegions"
        StackSetFailureToleranceCount:
          $ref: "#/components/schemas/StackSetFailureToleranceCount"
        StackSetFailureTolerancePercentage:
          $ref: "#/components/schemas/StackSetFailureTolerancePercentage"
        StackSetMaxConcurrencyCount:
          $ref: "#/components/schemas/StackSetMaxConcurrencyCount"
        StackSetMaxConcurrencyPercentage:
          $ref: "#/components/schemas/StackSetMaxConcurrencyPercentage"
      description: The user-defined preferences that will be applied when updating a
        provisioned product. Not all preferences are applicable to all
        provisioned product types.
    ProvisionedProductNameOrArn:
      type: string
      pattern: "[a-zA-Z0-9][a-zA-Z0-9._-]{0,127}|arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0\
        ,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}"
      minLength: 1
      maxLength: 1224
    ProvisionedProductType:
      type: string
    ProvisionedProductStatus:
      type: string
      enum:
        - AVAILABLE
        - UNDER_CHANGE
        - TAINTED
        - ERROR
        - PLAN_IN_PROGRESS
    ProvisionedProductStatusMessage:
      type: string
    UserArn:
      type: string
    UserArnSession:
      type: string
    ProvisionedProductAttribute:
      type: object
      properties:
        Name:
          $ref: "#/components/schemas/ProvisionedProductNameOrArn"
        Arn:
          $ref: "#/components/schemas/ProvisionedProductNameOrArn"
        Type:
          $ref: "#/components/schemas/ProvisionedProductType"
        Id:
          $ref: "#/components/schemas/Id"
        Status:
          $ref: "#/components/schemas/ProvisionedProductStatus"
        StatusMessage:
          $ref: "#/components/schemas/ProvisionedProductStatusMessage"
        CreatedTime:
          $ref: "#/components/schemas/CreatedTime"
        IdempotencyToken:
          $ref: "#/components/schemas/IdempotencyToken"
        LastRecordId:
          $ref: "#/components/schemas/Id"
        Tags:
          $ref: "#/components/schemas/Tags"
        PhysicalId:
          $ref: "#/components/schemas/PhysicalId"
        ProductId:
          $ref: "#/components/schemas/Id"
        ProvisioningArtifactId:
          $ref: "#/components/schemas/Id"
        UserArn:
          $ref: "#/components/schemas/UserArn"
        UserArnSession:
          $ref: "#/components/schemas/UserArnSession"
      description: Information about a provisioned product.
    ProvisionedProductAttributes:
      type: array
      items:
        $ref: "#/components/schemas/ProvisionedProductAttribute"
    ProvisionedProductId:
      type: string
    ProvisionedProductDetails:
      type: array
      items:
        $ref: "#/components/schemas/ProvisionedProductDetail"
    ProvisionedProductViewFilterValues:
      type: array
      items:
        $ref: "#/components/schemas/ProvisionedProductViewFilterValue"
    ProvisionedProductFilters:
      type: object
      additionalProperties:
        $ref: "#/components/schemas/ProvisionedProductViewFilterValues"
    ProvisionedProductPlanStatus:
      type: string
      enum:
        - CREATE_IN_PROGRESS
        - CREATE_SUCCESS
        - CREATE_FAILED
        - EXECUTE_IN_PROGRESS
        - EXECUTE_SUCCESS
        - EXECUTE_FAILED
    UpdatedTime:
      type: string
      format: date-time
    StatusMessage:
      type: string
      pattern: "[\\u0009\\u000a\\u000d\\u0020-\\uD7FF\\uE000-\\uFFFD]*"
    ProvisionedProductPlanSummary:
      type: object
      properties:
        PlanName:
          $ref: "#/components/schemas/ProvisionedProductPlanName"
        PlanId:
          $ref: "#/components/schemas/Id"
        ProvisionProductId:
          $ref: "#/components/schemas/Id"
        ProvisionProductName:
          $ref: "#/components/schemas/ProvisionedProductName"
        PlanType:
          $ref: "#/components/schemas/ProvisionedProductPlanType"
        ProvisioningArtifactId:
          $ref: "#/components/schemas/Id"
      description: Summary information about a plan.
    ProvisionedProductProperties:
      type: object
      minProperties: 1
      maxProperties: 100
      additionalProperties:
        $ref: "#/components/schemas/PropertyValue"
    ProvisionedProductViewFilterBy:
      type: string
      enum:
        - SearchQuery
    ProvisionedProductViewFilterValue:
      type: string
    ProvisioningArtifactName:
      type: string
    ProvisioningArtifactDescription:
      type: string
    ProvisioningArtifactCreatedTime:
      type: string
      format: date-time
    ProvisioningArtifactGuidance:
      type: string
      enum:
        - DEFAULT
        - DEPRECATED
    ProvisioningArtifact:
      type: object
      properties:
        Id:
          $ref: "#/components/schemas/Id"
        Name:
          $ref: "#/components/schemas/ProvisioningArtifactName"
        Description:
          $ref: "#/components/schemas/ProvisioningArtifactDescription"
        CreatedTime:
          $ref: "#/components/schemas/ProvisioningArtifactCreatedTime"
        Guidance:
          $ref: "#/components/schemas/ProvisioningArtifactGuidance"
      description: Information about a provisioning artifact. A provisioning artifact is
        also known as a product version.
    ProvisioningArtifactActive:
      type: boolean
    ProvisioningArtifactType:
      type: string
      enum:
        - CLOUD_FORMATION_TEMPLATE
        - MARKETPLACE_AMI
        - MARKETPLACE_CAR
    ProvisioningArtifactInfoValue:
      type: string
    ProvisioningArtifactInfoKey:
      type: string
    ProvisioningArtifactParameter:
      type: object
      properties:
        ParameterKey:
          $ref: "#/components/schemas/ParameterKey"
        DefaultValue:
          $ref: "#/components/schemas/DefaultValue"
        ParameterType:
          $ref: "#/components/schemas/ParameterType"
        IsNoEcho:
          $ref: "#/components/schemas/NoEcho"
        Description:
          $ref: "#/components/schemas/Description"
        ParameterConstraints:
          $ref: "#/components/schemas/ParameterConstraints"
      description: Information about a parameter used to provision a product.
    StackSetAccounts:
      type: array
      items:
        $ref: "#/components/schemas/AccountId"
    StackSetRegions:
      type: array
      items:
        $ref: "#/components/schemas/Region"
    ProvisioningArtifactPropertyName:
      type: string
      enum:
        - Id
    ProvisioningArtifactPropertyValue:
      type: string
    ProvisioningArtifactSummary:
      type: object
      properties:
        Id:
          $ref: "#/components/schemas/Id"
        Name:
          $ref: "#/components/schemas/ProvisioningArtifactName"
        Description:
          $ref: "#/components/schemas/ProvisioningArtifactDescription"
        CreatedTime:
          $ref: "#/components/schemas/ProvisioningArtifactCreatedTime"
        ProvisioningArtifactMetadata:
          $ref: "#/components/schemas/ProvisioningArtifactInfo"
      description: Summary information about a provisioning artifact (also known as a
        version) for a product.
    ProvisioningArtifactView:
      type: object
      properties:
        ProductViewSummary:
          $ref: "#/components/schemas/ProductViewSummary"
        ProvisioningArtifact:
          $ref: "#/components/schemas/ProvisioningArtifact"
      description: An object that contains summary information about a product view and a
        provisioning artifact.
    ProvisioningParameter:
      type: object
      properties:
        Key:
          $ref: "#/components/schemas/ParameterKey"
        Value:
          $ref: "#/components/schemas/ParameterValue"
      description: Information about a parameter used to provision a product.
    StackSetFailureToleranceCount:
      type: integer
      minimum: 0
    StackSetFailureTolerancePercentage:
      type: integer
      minimum: 0
      maximum: 100
    StackSetMaxConcurrencyCount:
      type: integer
      minimum: 1
    StackSetMaxConcurrencyPercentage:
      type: integer
      minimum: 1
      maximum: 100
    RecordStatus:
      type: string
      enum:
        - CREATED
        - IN_PROGRESS
        - IN_PROGRESS_IN_ERROR
        - SUCCEEDED
        - FAILED
    RecordType:
      type: string
    RecordErrors:
      type: array
      items:
        $ref: "#/components/schemas/RecordError"
    RecordTags:
      type: array
      items:
        $ref: "#/components/schemas/RecordTag"
      maxItems: 50
    RecordError:
      type: object
      properties:
        Code:
          $ref: "#/components/schemas/ErrorCode"
        Description:
          $ref: "#/components/schemas/ErrorDescription"
      description: The error code and description resulting from an operation.
    RecordOutput:
      type: object
      properties:
        OutputKey:
          $ref: "#/components/schemas/OutputKey"
        OutputValue:
          $ref: "#/components/schemas/OutputValue"
        Description:
          $ref: "#/components/schemas/Description"
      description: The output for the product created as the result of a request. For
        example, the output for a CloudFormation-backed product that creates an
        S3 bucket would include the S3 bucket URL.
    RecordTagKey:
      type: string
      pattern: ^([\p{L}\p{Z}\p{N}_.:/=+\-%@]*)$
      minLength: 1
      maxLength: 128
    RecordTagValue:
      type: string
      pattern: ^([\p{L}\p{Z}\p{N}_.:/=+\-%@]*)$
      minLength: 1
      maxLength: 256
    RecordTag:
      type: object
      properties:
        Key:
          $ref: "#/components/schemas/RecordTagKey"
        Value:
          $ref: "#/components/schemas/RecordTagValue"
      description: Information about a tag, which is a key-value pair.
    Region:
      type: string
    Replacement:
      type: string
      enum:
        - "TRUE"
        - "FALSE"
        - CONDITIONAL
    RequiresRecreation:
      type: string
      enum:
        - NEVER
        - CONDITIONALLY
        - ALWAYS
    ResourceAttribute:
      type: string
      enum:
        - PROPERTIES
        - METADATA
        - CREATIONPOLICY
        - UPDATEPOLICY
        - DELETIONPOLICY
        - TAGS
    Scope:
      type: array
      items:
        $ref: "#/components/schemas/ResourceAttribute"
    ResourceChangeDetails:
      type: array
      items:
        $ref: "#/components/schemas/ResourceChangeDetail"
    ResourceChange:
      type: object
      properties:
        Action:
          $ref: "#/components/schemas/ChangeAction"
        LogicalResourceId:
          $ref: "#/components/schemas/LogicalResourceId"
        PhysicalResourceId:
          $ref: "#/components/schemas/PhysicalResourceId"
        ResourceType:
          $ref: "#/components/schemas/PlanResourceType"
        Replacement:
          $ref: "#/components/schemas/Replacement"
        Scope:
          $ref: "#/components/schemas/Scope"
        Details:
          $ref: "#/components/schemas/ResourceChangeDetails"
      description: Information about a resource change that will occur when a plan is
        executed.
    ResourceTargetDefinition:
      type: object
      properties:
        Attribute:
          $ref: "#/components/schemas/ResourceAttribute"
        Name:
          $ref: "#/components/schemas/PropertyName"
        RequiresRecreation:
          $ref: "#/components/schemas/RequiresRecreation"
      description: Information about a change to a resource attribute.
    ResourceChangeDetail:
      type: object
      properties:
        Target:
          $ref: "#/components/schemas/ResourceTargetDefinition"
        Evaluation:
          $ref: "#/components/schemas/EvaluationType"
        CausingEntity:
          $ref: "#/components/schemas/CausingEntity"
      description: Information about a change to a resource attribute.
    ResourceDetailId:
      type: string
    ResourceDetailARN:
      type: string
    ResourceDetailName:
      type: string
    ResourceDetailDescription:
      type: string
    ResourceDetailCreatedTime:
      type: string
      format: date-time
    ResourceDetail:
      type: object
      properties:
        Id:
          $ref: "#/components/schemas/ResourceDetailId"
        ARN:
          $ref: "#/components/schemas/ResourceDetailARN"
        Name:
          $ref: "#/components/schemas/ResourceDetailName"
        Description:
          $ref: "#/components/schemas/ResourceDetailDescription"
        CreatedTime:
          $ref: "#/components/schemas/ResourceDetailCreatedTime"
      description: Information about a resource.
    SortOrder:
      type: string
      enum:
        - ASCENDING
        - DESCENDING
    SortField:
      type: string
    SearchProvisionedProductsPageSize:
      type: integer
      minimum: 0
      maximum: 100
    TotalResultsCount:
      type: integer
    ServiceActionAssociation:
      type: object
      required:
        - ServiceActionId
        - ProductId
        - ProvisioningArtifactId
      properties:
        ServiceActionId:
          $ref: "#/components/schemas/Id"
        ProductId:
          $ref: "#/components/schemas/Id"
        ProvisioningArtifactId:
          $ref: "#/components/schemas/Id"
      description: A self-service action association consisting of the Action ID, the
        Product ID, and the Provisioning Artifact ID.
    ServiceActionDefinitionKey:
      type: string
      enum:
        - Name
        - Version
        - AssumeRole
        - Parameters
    ServiceActionDefinitionValue:
      type: string
      minLength: 1
      maxLength: 1024
    ServiceActionSummary:
      type: object
      properties:
        Id:
          $ref: "#/components/schemas/Id"
        Name:
          $ref: "#/components/schemas/ServiceActionName"
        Description:
          $ref: "#/components/schemas/ServiceActionDescription"
        DefinitionType:
          $ref: "#/components/schemas/ServiceActionDefinitionType"
      description: Detailed information about the self-service action.
    SuccessfulShares:
      type: array
      items:
        $ref: "#/components/schemas/AccountId"
    ShareErrors:
      type: array
      items:
        $ref: "#/components/schemas/ShareError"
    ShareError:
      type: object
      properties:
        Accounts:
          $ref: "#/components/schemas/Namespaces"
        Message:
          $ref: "#/components/schemas/Message"
        Error:
          $ref: "#/components/schemas/Error"
      description: Errors that occurred during the portfolio share operation.
    SourceProvisioningArtifactPropertiesMap:
      type: object
      additionalProperties:
        $ref: "#/components/schemas/ProvisioningArtifactPropertyValue"
    StackInstanceStatus:
      type: string
      enum:
        - CURRENT
        - OUTDATED
        - INOPERABLE
    StackInstance:
      type: object
      properties:
        Account:
          $ref: "#/components/schemas/AccountId"
        Region:
          $ref: "#/components/schemas/Region"
        StackInstanceStatus:
          $ref: "#/components/schemas/StackInstanceStatus"
      description: "An AWS CloudFormation stack, in a specific account and region, that's
        part of a stack set operation. A stack instance is a reference to an
        attempted or actual stack in a given account within a given region. A
        stack instance can exist without a stack—for example, if the stack
        couldn't be created for some reason. A stack instance is associated with
        only one stack set. Each stack instance contains the ID of its
        associated stack set, as well as the ID of the actual stack and the
        stack status. "
    StackSetOperationType:
      type: string
      enum:
        - CREATE
        - UPDATE
        - DELETE
    TagKey:
      type: string
      pattern: ^([\p{L}\p{Z}\p{N}_.:/=+\-@]*)$
      minLength: 1
      maxLength: 128
    TagValue:
      type: string
      pattern: ^([\p{L}\p{Z}\p{N}_.:/=+\-@]*)$
      minLength: 1
      maxLength: 256
    TagKeys:
      type: array
      items:
        $ref: "#/components/schemas/TagKey"
    TagOptionSummary:
      type: object
      properties:
        Key:
          $ref: "#/components/schemas/TagOptionKey"
        Values:
          $ref: "#/components/schemas/TagOptionValues"
      description: Summary information about a TagOption.
    TagOptionValues:
      type: array
      items:
        $ref: "#/components/schemas/TagOptionValue"
    UpdateProvisioningPreferences:
      type: object
      properties:
        StackSetAccounts:
          $ref: "#/components/schemas/StackSetAccounts"
        StackSetRegions:
          $ref: "#/components/schemas/StackSetRegions"
        StackSetFailureToleranceCount:
          $ref: "#/components/schemas/StackSetFailureToleranceCount"
        StackSetFailureTolerancePercentage:
          $ref: "#/components/schemas/StackSetFailureTolerancePercentage"
        StackSetMaxConcurrencyCount:
          $ref: "#/components/schemas/StackSetMaxConcurrencyCount"
        StackSetMaxConcurrencyPercentage:
          $ref: "#/components/schemas/StackSetMaxConcurrencyPercentage"
        StackSetOperationType:
          $ref: "#/components/schemas/StackSetOperationType"
      description: The user-defined preferences that will be applied when updating a
        provisioned product. Not all preferences are applicable to all
        provisioned product types.
    UsePreviousValue:
      type: boolean
    UpdateProvisioningParameter:
      type: object
      properties:
        Key:
          $ref: "#/components/schemas/ParameterKey"
        Value:
          $ref: "#/components/schemas/ParameterValue"
        UsePreviousValue:
          $ref: "#/components/schemas/UsePreviousValue"
      description: The parameter key-value pair used to update a provisioned product.
    UsageInstruction:
      type: object
      properties:
        Type:
          $ref: "#/components/schemas/InstructionType"
        Value:
          $ref: "#/components/schemas/InstructionValue"
      description: Additional information provided by the administrator.
