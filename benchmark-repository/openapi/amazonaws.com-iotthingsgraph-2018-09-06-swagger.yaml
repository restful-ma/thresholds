openapi: 3.0.0
info:
  version: 2018-09-06
  x-release: v4
  title: AWS IoT Things Graph
  description: <fullname>AWS IoT Things Graph</fullname> <p>AWS IoT Things Graph provides
    an integrated set of tools that enable developers to connect devices and
    services that use different standards, such as units of measure and
    communication protocols. AWS IoT Things Graph makes it possible to build IoT
    applications with little to no code by connecting devices and services and
    defining how they interact at an abstract level.</p> <p>For more information
    about how AWS IoT Things Graph works, see the <a
    href="https://docs.aws.amazon.com/thingsgraph/latest/ug/iot-tg-whatis.html">User
    Guide</a>.</p>
  x-logo:
    url: https://twitter.com/awscloud/profile_image?size=original
    backgroundColor: "#FFFFFF"
  termsOfService: https://aws.amazon.com/service-terms/
  contact:
    name: Mike Ralphson
    email: mike.ralphson@gmail.com
    url: https://github.com/mermade/aws2openapi
    x-twitter: PermittedSoc
  license:
    name: Apache 2.0 License
    url: http://www.apache.org/licenses/
  x-providerName: amazonaws.com
  x-serviceName: iotthingsgraph
  x-origin:
    - contentType: application/json
      url: https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/iotthingsgraph-2018-09-06.normal.json
      converter:
        url: https://github.com/mermade/aws2openapi
        version: 1.0.0
      x-apisguru-direct: true
  x-apiClientRegistration:
    url: https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct
  x-apisguru-categories:
    - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: https://docs.aws.amazon.com/iotthingsgraph/
x-hasEquivalentPaths: true
security:
  - hmac: []
paths:
  /#X-Amz-Target=IotThingsGraphFrontEndService.AssociateEntityToThing:
    post:
      operationId: AssociateEntityToThing
      description: <p>Associates a device with a concrete thing that is in the user's
        registry.</p> <p>A thing can be associated with only one device at a
        time. If you associate a thing with a new device id, its previous
        association will be removed.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AssociateEntityToThingResponse"
        "480":
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRequestException"
        "481":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "482":
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalFailureException"
        "483":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - IotThingsGraphFrontEndService.AssociateEntityToThing
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AssociateEntityToThingRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=IotThingsGraphFrontEndService.CreateFlowTemplate:
    post:
      operationId: CreateFlowTemplate
      description: Creates a workflow template. Workflows can be created only in the user's
        namespace. (The public namespace contains only entities.) The workflow
        can contain only entities in the specified namespace. The workflow is
        validated against the entities in the latest version of the user's
        namespace unless another namespace version is specified in the request.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateFlowTemplateResponse"
        "480":
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRequestException"
        "481":
          description: ResourceAlreadyExistsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceAlreadyExistsException"
        "482":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "483":
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
        "484":
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalFailureException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - IotThingsGraphFrontEndService.CreateFlowTemplate
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateFlowTemplateRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=IotThingsGraphFrontEndService.CreateSystemInstance:
    post:
      operationId: CreateSystemInstance
      description: <p>Creates a system instance. </p> <p>This action validates the system
        instance, prepares the deployment-related resources. For Greengrass
        deployments, it updates the Greengrass group that is specified by the
        <code>greengrassGroupName</code> parameter. It also adds a file to the
        S3 bucket specified by the <code>s3BucketName</code> parameter. You need
        to call <code>DeploySystemInstance</code> after running this action.</p>
        <p>For Greengrass deployments, since this action modifies and adds
        resources to a Greengrass group and an S3 bucket on the caller's behalf,
        the calling identity must have write permissions to both the specified
        Greengrass group and S3 bucket. Otherwise, the call will fail with an
        authorization error.</p> <p>For cloud deployments, this action requires
        a <code>flowActionsRoleArn</code> value. This is an IAM role that has
        permissions to access AWS services, such as AWS Lambda and AWS IoT, that
        the flow uses when it executes.</p> <p>If the definition document
        doesn't specify a version of the user's namespace, the latest version
        will be used by default.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateSystemInstanceResponse"
        "480":
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRequestException"
        "481":
          description: ResourceAlreadyExistsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceAlreadyExistsException"
        "482":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "483":
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalFailureException"
        "484":
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - IotThingsGraphFrontEndService.CreateSystemInstance
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateSystemInstanceRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=IotThingsGraphFrontEndService.CreateSystemTemplate:
    post:
      operationId: CreateSystemTemplate
      description: Creates a system. The system is validated against the entities in the
        latest version of the user's namespace unless another namespace version
        is specified in the request.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateSystemTemplateResponse"
        "480":
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRequestException"
        "481":
          description: ResourceAlreadyExistsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceAlreadyExistsException"
        "482":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "483":
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalFailureException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - IotThingsGraphFrontEndService.CreateSystemTemplate
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateSystemTemplateRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=IotThingsGraphFrontEndService.DeleteFlowTemplate:
    post:
      operationId: DeleteFlowTemplate
      description: Deletes a workflow. Any new system or deployment that contains this
        workflow will fail to update or deploy. Existing deployments that
        contain the workflow will continue to run (since they use a snapshot of
        the workflow taken at the time of deployment).
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteFlowTemplateResponse"
        "480":
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRequestException"
        "481":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "482":
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalFailureException"
        "483":
          description: ResourceInUseException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceInUseException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - IotThingsGraphFrontEndService.DeleteFlowTemplate
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeleteFlowTemplateRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=IotThingsGraphFrontEndService.DeleteNamespace:
    post:
      operationId: DeleteNamespace
      description: Deletes the specified namespace. This action deletes all of the entities
        in the namespace. Delete the systems and flows that use entities in the
        namespace before performing this action.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteNamespaceResponse"
        "480":
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalFailureException"
        "481":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - IotThingsGraphFrontEndService.DeleteNamespace
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeleteNamespaceRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=IotThingsGraphFrontEndService.DeleteSystemInstance:
    post:
      operationId: DeleteSystemInstance
      description: <p>Deletes a system instance. Only system instances that have never been
        deployed, or that have been undeployed can be deleted.</p> <p>Users can
        create a new system instance that has the same ID as a deleted system
        instance.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteSystemInstanceResponse"
        "480":
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRequestException"
        "481":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "482":
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalFailureException"
        "483":
          description: ResourceInUseException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceInUseException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - IotThingsGraphFrontEndService.DeleteSystemInstance
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeleteSystemInstanceRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=IotThingsGraphFrontEndService.DeleteSystemTemplate:
    post:
      operationId: DeleteSystemTemplate
      description: Deletes a system. New deployments can't contain the system after its
        deletion. Existing deployments that contain the system will continue to
        work because they use a snapshot of the system that is taken when it is
        deployed.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteSystemTemplateResponse"
        "480":
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRequestException"
        "481":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "482":
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalFailureException"
        "483":
          description: ResourceInUseException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceInUseException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - IotThingsGraphFrontEndService.DeleteSystemTemplate
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeleteSystemTemplateRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=IotThingsGraphFrontEndService.DeploySystemInstance:
    post:
      operationId: DeploySystemInstance
      description: <p> <b>Greengrass and Cloud Deployments</b> </p> <p>Deploys the system
        instance to the target specified in <code>CreateSystemInstance</code>.
        </p> <p> <b>Greengrass Deployments</b> </p> <p>If the system or any
        workflows and entities have been updated before this action is called,
        then the deployment will create a new Amazon Simple Storage Service
        resource file and then deploy it.</p> <p>Since this action creates a
        Greengrass deployment on the caller's behalf, the calling identity must
        have write permissions to the specified Greengrass group. Otherwise, the
        call will fail with an authorization error.</p> <p>For information about
        the artifacts that get added to your Greengrass core device when you use
        this API, see <a
        href="https://docs.aws.amazon.com/thingsgraph/latest/ug/iot-tg-greengrass.html">AWS
        IoT Things Graph and AWS IoT Greengrass</a>.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeploySystemInstanceResponse"
        "480":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "481":
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRequestException"
        "482":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "483":
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalFailureException"
        "484":
          description: ResourceInUseException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceInUseException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - IotThingsGraphFrontEndService.DeploySystemInstance
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeploySystemInstanceRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=IotThingsGraphFrontEndService.DeprecateFlowTemplate:
    post:
      operationId: DeprecateFlowTemplate
      description: Deprecates the specified workflow. This action marks the workflow for
        deletion. Deprecated flows can't be deployed, but existing deployments
        will continue to run.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeprecateFlowTemplateResponse"
        "480":
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRequestException"
        "481":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "482":
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalFailureException"
        "483":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - IotThingsGraphFrontEndService.DeprecateFlowTemplate
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeprecateFlowTemplateRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=IotThingsGraphFrontEndService.DeprecateSystemTemplate:
    post:
      operationId: DeprecateSystemTemplate
      description: Deprecates the specified system.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeprecateSystemTemplateResponse"
        "480":
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRequestException"
        "481":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "482":
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalFailureException"
        "483":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - IotThingsGraphFrontEndService.DeprecateSystemTemplate
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeprecateSystemTemplateRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=IotThingsGraphFrontEndService.DescribeNamespace:
    post:
      operationId: DescribeNamespace
      description: Gets the latest version of the user's namespace and the public version
        that it is tracking.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeNamespaceResponse"
        "480":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "481":
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRequestException"
        "482":
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalFailureException"
        "483":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - IotThingsGraphFrontEndService.DescribeNamespace
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DescribeNamespaceRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=IotThingsGraphFrontEndService.DissociateEntityFromThing:
    post:
      operationId: DissociateEntityFromThing
      description: Dissociates a device entity from a concrete thing. The action takes only
        the type of the entity that you need to dissociate because only one
        entity of a particular type can be associated with a thing.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DissociateEntityFromThingResponse"
        "480":
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRequestException"
        "481":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "482":
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalFailureException"
        "483":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - IotThingsGraphFrontEndService.DissociateEntityFromThing
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DissociateEntityFromThingRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=IotThingsGraphFrontEndService.GetEntities:
    post:
      operationId: GetEntities
      description: <p>Gets definitions of the specified entities. Uses the latest version
        of the user's namespace by default. This API returns the following TDM
        entities.</p> <ul> <li> <p>Properties</p> </li> <li> <p>States</p> </li>
        <li> <p>Events</p> </li> <li> <p>Actions</p> </li> <li>
        <p>Capabilities</p> </li> <li> <p>Mappings</p> </li> <li> <p>Devices</p>
        </li> <li> <p>Device Models</p> </li> <li> <p>Services</p> </li> </ul>
        <p>This action doesn't return definitions for systems, flows, and
        deployments.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetEntitiesResponse"
        "480":
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRequestException"
        "481":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "482":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "483":
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalFailureException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - IotThingsGraphFrontEndService.GetEntities
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GetEntitiesRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=IotThingsGraphFrontEndService.GetFlowTemplate:
    post:
      operationId: GetFlowTemplate
      description: Gets the latest version of the <code>DefinitionDocument</code> and
        <code>FlowTemplateSummary</code> for the specified workflow.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetFlowTemplateResponse"
        "480":
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRequestException"
        "481":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "482":
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalFailureException"
        "483":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - IotThingsGraphFrontEndService.GetFlowTemplate
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GetFlowTemplateRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=IotThingsGraphFrontEndService.GetFlowTemplateRevisions:
    post:
      operationId: GetFlowTemplateRevisions
      description: Gets revisions of the specified workflow. Only the last 100 revisions
        are stored. If the workflow has been deprecated, this action will return
        revisions that occurred before the deprecation. This action won't work
        for workflows that have been deleted.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetFlowTemplateRevisionsResponse"
        "480":
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRequestException"
        "481":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "482":
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalFailureException"
        "483":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
      parameters:
        - name: maxResults
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: nextToken
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - IotThingsGraphFrontEndService.GetFlowTemplateRevisions
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GetFlowTemplateRevisionsRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=IotThingsGraphFrontEndService.GetNamespaceDeletionStatus:
    post:
      operationId: GetNamespaceDeletionStatus
      description: Gets the status of a namespace deletion task.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetNamespaceDeletionStatusResponse"
        "480":
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRequestException"
        "481":
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalFailureException"
        "482":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - IotThingsGraphFrontEndService.GetNamespaceDeletionStatus
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GetNamespaceDeletionStatusRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=IotThingsGraphFrontEndService.GetSystemInstance:
    post:
      operationId: GetSystemInstance
      description: Gets a system instance.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetSystemInstanceResponse"
        "480":
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRequestException"
        "481":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "482":
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalFailureException"
        "483":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - IotThingsGraphFrontEndService.GetSystemInstance
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GetSystemInstanceRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=IotThingsGraphFrontEndService.GetSystemTemplate:
    post:
      operationId: GetSystemTemplate
      description: Gets a system.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetSystemTemplateResponse"
        "480":
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRequestException"
        "481":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "482":
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalFailureException"
        "483":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - IotThingsGraphFrontEndService.GetSystemTemplate
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GetSystemTemplateRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=IotThingsGraphFrontEndService.GetSystemTemplateRevisions:
    post:
      operationId: GetSystemTemplateRevisions
      description: Gets revisions made to the specified system template. Only the previous
        100 revisions are stored. If the system has been deprecated, this action
        will return the revisions that occurred before its deprecation. This
        action won't work with systems that have been deleted.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetSystemTemplateRevisionsResponse"
        "480":
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRequestException"
        "481":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "482":
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalFailureException"
        "483":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
      parameters:
        - name: maxResults
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: nextToken
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - IotThingsGraphFrontEndService.GetSystemTemplateRevisions
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GetSystemTemplateRevisionsRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=IotThingsGraphFrontEndService.GetUploadStatus:
    post:
      operationId: GetUploadStatus
      description: Gets the status of the specified upload.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetUploadStatusResponse"
        "480":
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRequestException"
        "481":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "482":
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalFailureException"
        "483":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - IotThingsGraphFrontEndService.GetUploadStatus
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GetUploadStatusRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=IotThingsGraphFrontEndService.ListFlowExecutionMessages:
    post:
      operationId: ListFlowExecutionMessages
      description: Returns a list of objects that contain information about events in a
        flow execution.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListFlowExecutionMessagesResponse"
        "480":
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRequestException"
        "481":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "482":
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalFailureException"
        "483":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
      parameters:
        - name: maxResults
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: nextToken
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - IotThingsGraphFrontEndService.ListFlowExecutionMessages
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ListFlowExecutionMessagesRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=IotThingsGraphFrontEndService.ListTagsForResource:
    post:
      operationId: ListTagsForResource
      description: Lists all tags on an AWS IoT Things Graph resource.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListTagsForResourceResponse"
        "480":
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRequestException"
        "481":
          description: ResourceAlreadyExistsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceAlreadyExistsException"
        "482":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "483":
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalFailureException"
      parameters:
        - name: maxResults
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: nextToken
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - IotThingsGraphFrontEndService.ListTagsForResource
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ListTagsForResourceRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=IotThingsGraphFrontEndService.SearchEntities:
    post:
      operationId: SearchEntities
      description: Searches for entities of the specified type. You can search for entities
        in your namespace and the public namespace that you're tracking.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SearchEntitiesResponse"
        "480":
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRequestException"
        "481":
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalFailureException"
        "482":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
      parameters:
        - name: maxResults
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: nextToken
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - IotThingsGraphFrontEndService.SearchEntities
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SearchEntitiesRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=IotThingsGraphFrontEndService.SearchFlowExecutions:
    post:
      operationId: SearchFlowExecutions
      description: Searches for AWS IoT Things Graph workflow execution instances.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SearchFlowExecutionsResponse"
        "480":
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRequestException"
        "481":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "482":
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalFailureException"
        "483":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
      parameters:
        - name: maxResults
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: nextToken
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - IotThingsGraphFrontEndService.SearchFlowExecutions
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SearchFlowExecutionsRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=IotThingsGraphFrontEndService.SearchFlowTemplates:
    post:
      operationId: SearchFlowTemplates
      description: Searches for summary information about workflows.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SearchFlowTemplatesResponse"
        "480":
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRequestException"
        "481":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "482":
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalFailureException"
      parameters:
        - name: maxResults
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: nextToken
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - IotThingsGraphFrontEndService.SearchFlowTemplates
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SearchFlowTemplatesRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=IotThingsGraphFrontEndService.SearchSystemInstances:
    post:
      operationId: SearchSystemInstances
      description: Searches for system instances in the user's account.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SearchSystemInstancesResponse"
        "480":
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRequestException"
        "481":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "482":
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalFailureException"
      parameters:
        - name: maxResults
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: nextToken
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - IotThingsGraphFrontEndService.SearchSystemInstances
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SearchSystemInstancesRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=IotThingsGraphFrontEndService.SearchSystemTemplates:
    post:
      operationId: SearchSystemTemplates
      description: Searches for summary information about systems in the user's account.
        You can filter by the ID of a workflow to return only systems that use
        the specified workflow.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SearchSystemTemplatesResponse"
        "480":
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRequestException"
        "481":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "482":
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalFailureException"
      parameters:
        - name: maxResults
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: nextToken
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - IotThingsGraphFrontEndService.SearchSystemTemplates
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SearchSystemTemplatesRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=IotThingsGraphFrontEndService.SearchThings:
    post:
      operationId: SearchThings
      description: <p>Searches for things associated with the specified entity. You can
        search by both device and device model.</p> <p>For example, if two
        different devices, camera1 and camera2, implement the camera device
        model, the user can associate thing1 to camera1 and thing2 to camera2.
        <code>SearchThings(camera2)</code> will return only thing2, but
        <code>SearchThings(camera)</code> will return both thing1 and
        thing2.</p> <p>This action searches for exact matches and doesn't
        perform partial text matching.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SearchThingsResponse"
        "480":
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRequestException"
        "481":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "482":
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalFailureException"
        "483":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
      parameters:
        - name: maxResults
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: nextToken
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - IotThingsGraphFrontEndService.SearchThings
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SearchThingsRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=IotThingsGraphFrontEndService.TagResource:
    post:
      operationId: TagResource
      description: Creates a tag for the specified resource.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TagResourceResponse"
        "480":
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRequestException"
        "481":
          description: ResourceAlreadyExistsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceAlreadyExistsException"
        "482":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "483":
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalFailureException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - IotThingsGraphFrontEndService.TagResource
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TagResourceRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=IotThingsGraphFrontEndService.UndeploySystemInstance:
    post:
      operationId: UndeploySystemInstance
      description: Removes a system instance from its target (Cloud or Greengrass).
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UndeploySystemInstanceResponse"
        "480":
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRequestException"
        "481":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "482":
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalFailureException"
        "483":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "484":
          description: ResourceInUseException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceInUseException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - IotThingsGraphFrontEndService.UndeploySystemInstance
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UndeploySystemInstanceRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=IotThingsGraphFrontEndService.UntagResource:
    post:
      operationId: UntagResource
      description: Removes a tag from the specified resource.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UntagResourceResponse"
        "480":
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRequestException"
        "481":
          description: ResourceAlreadyExistsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceAlreadyExistsException"
        "482":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "483":
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalFailureException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - IotThingsGraphFrontEndService.UntagResource
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UntagResourceRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=IotThingsGraphFrontEndService.UpdateFlowTemplate:
    post:
      operationId: UpdateFlowTemplate
      description: "Updates the specified workflow. All deployed systems and system
        instances that use the workflow will see the changes in the flow when it
        is redeployed. If you don't want this behavior, copy the workflow
        (creating a new workflow with a different ID), and update the copy. The
        workflow can contain only entities in the specified namespace. "
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateFlowTemplateResponse"
        "480":
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRequestException"
        "481":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "482":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "483":
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalFailureException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - IotThingsGraphFrontEndService.UpdateFlowTemplate
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateFlowTemplateRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=IotThingsGraphFrontEndService.UpdateSystemTemplate:
    post:
      operationId: UpdateSystemTemplate
      description: Updates the specified system. You don't need to run this action after
        updating a workflow. Any deployment that uses the system will see the
        changes in the system when it is redeployed.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateSystemTemplateResponse"
        "480":
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRequestException"
        "481":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "482":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "483":
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalFailureException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - IotThingsGraphFrontEndService.UpdateSystemTemplate
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateSystemTemplateRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=IotThingsGraphFrontEndService.UploadEntityDefinitions:
    post:
      operationId: UploadEntityDefinitions
      description: <p>Asynchronously uploads one or more entity definitions to the user's
        namespace. The <code>document</code> parameter is required if
        <code>syncWithPublicNamespace</code> and
        <code>deleteExistingEntites</code> are false. If the
        <code>syncWithPublicNamespace</code> parameter is set to
        <code>true</code>, the user's namespace will synchronize with the latest
        version of the public namespace. If
        <code>deprecateExistingEntities</code> is set to true, all entities in
        the latest version will be deleted before the new
        <code>DefinitionDocument</code> is uploaded.</p> <p>When a user uploads
        entity definitions for the first time, the service creates a new
        namespace for the user. The new namespace tracks the public namespace.
        Currently users can have only one namespace. The namespace version
        increments whenever a user uploads entity definitions that are
        backwards-incompatible and whenever a user sets the
        <code>syncWithPublicNamespace</code> parameter or the
        <code>deprecateExistingEntities</code> parameter to
        <code>true</code>.</p> <p>The IDs for all of the entities should be in
        URN format. Each entity must be in the user's namespace. Users can't
        create entities in the public namespace, but entity definitions can
        refer to entities in the public namespace.</p> <p>Valid entities are
        <code>Device</code>, <code>DeviceModel</code>, <code>Service</code>,
        <code>Capability</code>, <code>State</code>, <code>Action</code>,
        <code>Event</code>, <code>Property</code>, <code>Mapping</code>,
        <code>Enum</code>. </p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UploadEntityDefinitionsResponse"
        "480":
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRequestException"
        "481":
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalFailureException"
        "482":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - IotThingsGraphFrontEndService.UploadEntityDefinitions
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UploadEntityDefinitionsRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
servers:
  - url: http://iotthingsgraph.{region}.amazonaws.com
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-south-1
          - sa-east-1
        default: us-east-1
    description: The AWS IoT Things Graph multi-region endpoint
  - url: https://iotthingsgraph.{region}.amazonaws.com
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-south-1
          - sa-east-1
        default: us-east-1
    description: The AWS IoT Things Graph multi-region endpoint
  - url: http://iotthingsgraph.{region}.amazonaws.com.cn
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The AWS IoT Things Graph endpoint for China (Beijing) and China (Ningxia)
  - url: https://iotthingsgraph.{region}.amazonaws.com.cn
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The AWS IoT Things Graph endpoint for China (Beijing) and China (Ningxia)
components:
  parameters:
    X-Amz-Content-Sha256:
      name: X-Amz-Content-Sha256
      in: header
      required: false
      schema:
        type: string
    X-Amz-Date:
      name: X-Amz-Date
      in: header
      required: false
      schema:
        type: string
    X-Amz-Algorithm:
      name: X-Amz-Algorithm
      in: header
      required: false
      schema:
        type: string
    X-Amz-Credential:
      name: X-Amz-Credential
      in: header
      required: false
      schema:
        type: string
    X-Amz-Security-Token:
      name: X-Amz-Security-Token
      in: header
      required: false
      schema:
        type: string
    X-Amz-Signature:
      name: X-Amz-Signature
      in: header
      required: false
      schema:
        type: string
    X-Amz-SignedHeaders:
      name: X-Amz-SignedHeaders
      in: header
      required: false
      schema:
        type: string
  securitySchemes:
    hmac:
      type: apiKey
      name: Authorization
      in: header
      description: Amazon Signature authorization v4
      x-amazon-apigateway-authtype: awsSigv4
  schemas:
    AssociateEntityToThingResponse:
      type: object
      properties: {}
    AssociateEntityToThingRequest:
      type: object
      required:
        - thingName
        - entityId
      properties:
        thingName:
          $ref: "#/components/schemas/ThingName"
        entityId:
          $ref: "#/components/schemas/Urn"
        namespaceVersion:
          $ref: "#/components/schemas/Version"
    InvalidRequestException: {}
    ResourceNotFoundException: {}
    InternalFailureException: {}
    ThrottlingException: {}
    CreateFlowTemplateResponse:
      type: object
      properties:
        summary:
          $ref: "#/components/schemas/FlowTemplateSummary"
    CreateFlowTemplateRequest:
      type: object
      required:
        - definition
      properties:
        definition:
          $ref: "#/components/schemas/DefinitionDocument"
        compatibleNamespaceVersion:
          $ref: "#/components/schemas/Version"
    ResourceAlreadyExistsException: {}
    LimitExceededException: {}
    CreateSystemInstanceResponse:
      type: object
      properties:
        summary:
          $ref: "#/components/schemas/SystemInstanceSummary"
    CreateSystemInstanceRequest:
      type: object
      required:
        - definition
        - target
      properties:
        tags:
          $ref: "#/components/schemas/TagList"
        definition:
          $ref: "#/components/schemas/DefinitionDocument"
        target:
          $ref: "#/components/schemas/DeploymentTarget"
        greengrassGroupName:
          $ref: "#/components/schemas/GroupName"
        s3BucketName:
          $ref: "#/components/schemas/S3BucketName"
        metricsConfiguration:
          $ref: "#/components/schemas/MetricsConfiguration"
        flowActionsRoleArn:
          $ref: "#/components/schemas/RoleArn"
    CreateSystemTemplateResponse:
      type: object
      properties:
        summary:
          $ref: "#/components/schemas/SystemTemplateSummary"
    CreateSystemTemplateRequest:
      type: object
      required:
        - definition
      properties:
        definition:
          $ref: "#/components/schemas/DefinitionDocument"
        compatibleNamespaceVersion:
          $ref: "#/components/schemas/Version"
    DeleteFlowTemplateResponse:
      type: object
      properties: {}
    DeleteFlowTemplateRequest:
      type: object
      required:
        - id
      properties:
        id:
          $ref: "#/components/schemas/Urn"
    ResourceInUseException: {}
    DeleteNamespaceResponse:
      type: object
      properties:
        namespaceArn:
          $ref: "#/components/schemas/Arn"
        namespaceName:
          $ref: "#/components/schemas/NamespaceName"
    DeleteNamespaceRequest:
      type: object
      properties: {}
    DeleteSystemInstanceResponse:
      type: object
      properties: {}
    DeleteSystemInstanceRequest:
      type: object
      properties:
        id:
          $ref: "#/components/schemas/Urn"
    DeleteSystemTemplateResponse:
      type: object
      properties: {}
    DeleteSystemTemplateRequest:
      type: object
      required:
        - id
      properties:
        id:
          $ref: "#/components/schemas/Urn"
    DeploySystemInstanceResponse:
      type: object
      required:
        - summary
      properties:
        summary:
          $ref: "#/components/schemas/SystemInstanceSummary"
        greengrassDeploymentId:
          $ref: "#/components/schemas/GreengrassDeploymentId"
    DeploySystemInstanceRequest:
      type: object
      properties:
        id:
          $ref: "#/components/schemas/Urn"
    DeprecateFlowTemplateResponse:
      type: object
      properties: {}
    DeprecateFlowTemplateRequest:
      type: object
      required:
        - id
      properties:
        id:
          $ref: "#/components/schemas/Urn"
    DeprecateSystemTemplateResponse:
      type: object
      properties: {}
    DeprecateSystemTemplateRequest:
      type: object
      required:
        - id
      properties:
        id:
          $ref: "#/components/schemas/Urn"
    DescribeNamespaceResponse:
      type: object
      properties:
        namespaceArn:
          $ref: "#/components/schemas/Arn"
        namespaceName:
          $ref: "#/components/schemas/NamespaceName"
        trackingNamespaceName:
          $ref: "#/components/schemas/NamespaceName"
        trackingNamespaceVersion:
          $ref: "#/components/schemas/Version"
        namespaceVersion:
          $ref: "#/components/schemas/Version"
    DescribeNamespaceRequest:
      type: object
      properties:
        namespaceName:
          $ref: "#/components/schemas/NamespaceName"
    DissociateEntityFromThingResponse:
      type: object
      properties: {}
    DissociateEntityFromThingRequest:
      type: object
      required:
        - thingName
        - entityType
      properties:
        thingName:
          $ref: "#/components/schemas/ThingName"
        entityType:
          $ref: "#/components/schemas/EntityType"
    GetEntitiesResponse:
      type: object
      properties:
        descriptions:
          $ref: "#/components/schemas/EntityDescriptions"
    GetEntitiesRequest:
      type: object
      required:
        - ids
      properties:
        ids:
          $ref: "#/components/schemas/Urns"
        namespaceVersion:
          $ref: "#/components/schemas/Version"
    GetFlowTemplateResponse:
      type: object
      properties:
        description:
          $ref: "#/components/schemas/FlowTemplateDescription"
    GetFlowTemplateRequest:
      type: object
      required:
        - id
      properties:
        id:
          $ref: "#/components/schemas/Urn"
        revisionNumber:
          $ref: "#/components/schemas/Version"
    GetFlowTemplateRevisionsResponse:
      type: object
      properties:
        summaries:
          $ref: "#/components/schemas/FlowTemplateSummaries"
        nextToken:
          $ref: "#/components/schemas/NextToken"
    GetFlowTemplateRevisionsRequest:
      type: object
      required:
        - id
      properties:
        id:
          $ref: "#/components/schemas/Urn"
        nextToken:
          $ref: "#/components/schemas/NextToken"
        maxResults:
          $ref: "#/components/schemas/MaxResults"
    GetNamespaceDeletionStatusResponse:
      type: object
      properties:
        namespaceArn:
          $ref: "#/components/schemas/Arn"
        namespaceName:
          $ref: "#/components/schemas/NamespaceName"
        status:
          $ref: "#/components/schemas/NamespaceDeletionStatus"
        errorCode:
          $ref: "#/components/schemas/NamespaceDeletionStatusErrorCodes"
        errorMessage:
          $ref: "#/components/schemas/String"
    GetNamespaceDeletionStatusRequest:
      type: object
      properties: {}
    GetSystemInstanceResponse:
      type: object
      properties:
        description:
          $ref: "#/components/schemas/SystemInstanceDescription"
    GetSystemInstanceRequest:
      type: object
      required:
        - id
      properties:
        id:
          $ref: "#/components/schemas/Urn"
    GetSystemTemplateResponse:
      type: object
      properties:
        description:
          $ref: "#/components/schemas/SystemTemplateDescription"
    GetSystemTemplateRequest:
      type: object
      required:
        - id
      properties:
        id:
          $ref: "#/components/schemas/Urn"
        revisionNumber:
          $ref: "#/components/schemas/Version"
    GetSystemTemplateRevisionsResponse:
      type: object
      properties:
        summaries:
          $ref: "#/components/schemas/SystemTemplateSummaries"
        nextToken:
          $ref: "#/components/schemas/NextToken"
    GetSystemTemplateRevisionsRequest:
      type: object
      required:
        - id
      properties:
        id:
          $ref: "#/components/schemas/Urn"
        nextToken:
          $ref: "#/components/schemas/NextToken"
        maxResults:
          $ref: "#/components/schemas/MaxResults"
    GetUploadStatusResponse:
      type: object
      required:
        - uploadId
        - uploadStatus
        - createdDate
      properties:
        uploadId:
          $ref: "#/components/schemas/UploadId"
        uploadStatus:
          $ref: "#/components/schemas/UploadStatus"
        namespaceArn:
          $ref: "#/components/schemas/Arn"
        namespaceName:
          $ref: "#/components/schemas/NamespaceName"
        namespaceVersion:
          $ref: "#/components/schemas/Version"
        failureReason:
          $ref: "#/components/schemas/StringList"
        createdDate:
          $ref: "#/components/schemas/Timestamp"
    GetUploadStatusRequest:
      type: object
      required:
        - uploadId
      properties:
        uploadId:
          $ref: "#/components/schemas/UploadId"
    ListFlowExecutionMessagesResponse:
      type: object
      properties:
        messages:
          $ref: "#/components/schemas/FlowExecutionMessages"
        nextToken:
          $ref: "#/components/schemas/NextToken"
    ListFlowExecutionMessagesRequest:
      type: object
      required:
        - flowExecutionId
      properties:
        flowExecutionId:
          $ref: "#/components/schemas/FlowExecutionId"
        nextToken:
          $ref: "#/components/schemas/NextToken"
        maxResults:
          $ref: "#/components/schemas/MaxResults"
    ListTagsForResourceResponse:
      type: object
      properties:
        tags:
          $ref: "#/components/schemas/TagList"
        nextToken:
          $ref: "#/components/schemas/NextToken"
    ListTagsForResourceRequest:
      type: object
      required:
        - resourceArn
      properties:
        maxResults:
          $ref: "#/components/schemas/MaxResults"
        resourceArn:
          $ref: "#/components/schemas/ResourceArn"
        nextToken:
          $ref: "#/components/schemas/NextToken"
    SearchEntitiesResponse:
      type: object
      properties:
        descriptions:
          $ref: "#/components/schemas/EntityDescriptions"
        nextToken:
          $ref: "#/components/schemas/NextToken"
    SearchEntitiesRequest:
      type: object
      required:
        - entityTypes
      properties:
        entityTypes:
          $ref: "#/components/schemas/EntityTypes"
        filters:
          $ref: "#/components/schemas/EntityFilters"
        nextToken:
          $ref: "#/components/schemas/NextToken"
        maxResults:
          $ref: "#/components/schemas/MaxResults"
        namespaceVersion:
          $ref: "#/components/schemas/Version"
    SearchFlowExecutionsResponse:
      type: object
      properties:
        summaries:
          $ref: "#/components/schemas/FlowExecutionSummaries"
        nextToken:
          $ref: "#/components/schemas/NextToken"
    SearchFlowExecutionsRequest:
      type: object
      required:
        - systemInstanceId
      properties:
        systemInstanceId:
          $ref: "#/components/schemas/Urn"
        flowExecutionId:
          $ref: "#/components/schemas/FlowExecutionId"
        startTime:
          $ref: "#/components/schemas/Timestamp"
        endTime:
          $ref: "#/components/schemas/Timestamp"
        nextToken:
          $ref: "#/components/schemas/NextToken"
        maxResults:
          $ref: "#/components/schemas/MaxResults"
    SearchFlowTemplatesResponse:
      type: object
      properties:
        summaries:
          $ref: "#/components/schemas/FlowTemplateSummaries"
        nextToken:
          $ref: "#/components/schemas/NextToken"
    SearchFlowTemplatesRequest:
      type: object
      properties:
        filters:
          $ref: "#/components/schemas/FlowTemplateFilters"
        nextToken:
          $ref: "#/components/schemas/NextToken"
        maxResults:
          $ref: "#/components/schemas/MaxResults"
    SearchSystemInstancesResponse:
      type: object
      properties:
        summaries:
          $ref: "#/components/schemas/SystemInstanceSummaries"
        nextToken:
          $ref: "#/components/schemas/NextToken"
    SearchSystemInstancesRequest:
      type: object
      properties:
        filters:
          $ref: "#/components/schemas/SystemInstanceFilters"
        nextToken:
          $ref: "#/components/schemas/NextToken"
        maxResults:
          $ref: "#/components/schemas/MaxResults"
    SearchSystemTemplatesResponse:
      type: object
      properties:
        summaries:
          $ref: "#/components/schemas/SystemTemplateSummaries"
        nextToken:
          $ref: "#/components/schemas/NextToken"
    SearchSystemTemplatesRequest:
      type: object
      properties:
        filters:
          $ref: "#/components/schemas/SystemTemplateFilters"
        nextToken:
          $ref: "#/components/schemas/NextToken"
        maxResults:
          $ref: "#/components/schemas/MaxResults"
    SearchThingsResponse:
      type: object
      properties:
        things:
          $ref: "#/components/schemas/Things"
        nextToken:
          $ref: "#/components/schemas/NextToken"
    SearchThingsRequest:
      type: object
      required:
        - entityId
      properties:
        entityId:
          $ref: "#/components/schemas/Urn"
        nextToken:
          $ref: "#/components/schemas/NextToken"
        maxResults:
          $ref: "#/components/schemas/MaxResults"
        namespaceVersion:
          $ref: "#/components/schemas/Version"
    TagResourceResponse:
      type: object
      properties: {}
    TagResourceRequest:
      type: object
      required:
        - resourceArn
        - tags
      properties:
        resourceArn:
          $ref: "#/components/schemas/ResourceArn"
        tags:
          $ref: "#/components/schemas/TagList"
    UndeploySystemInstanceResponse:
      type: object
      properties:
        summary:
          $ref: "#/components/schemas/SystemInstanceSummary"
    UndeploySystemInstanceRequest:
      type: object
      properties:
        id:
          $ref: "#/components/schemas/Urn"
    UntagResourceResponse:
      type: object
      properties: {}
    UntagResourceRequest:
      type: object
      required:
        - resourceArn
        - tagKeys
      properties:
        resourceArn:
          $ref: "#/components/schemas/ResourceArn"
        tagKeys:
          $ref: "#/components/schemas/TagKeyList"
    UpdateFlowTemplateResponse:
      type: object
      properties:
        summary:
          $ref: "#/components/schemas/FlowTemplateSummary"
    UpdateFlowTemplateRequest:
      type: object
      required:
        - id
        - definition
      properties:
        id:
          $ref: "#/components/schemas/Urn"
        definition:
          $ref: "#/components/schemas/DefinitionDocument"
        compatibleNamespaceVersion:
          $ref: "#/components/schemas/Version"
    UpdateSystemTemplateResponse:
      type: object
      properties:
        summary:
          $ref: "#/components/schemas/SystemTemplateSummary"
    UpdateSystemTemplateRequest:
      type: object
      required:
        - id
        - definition
      properties:
        id:
          $ref: "#/components/schemas/Urn"
        definition:
          $ref: "#/components/schemas/DefinitionDocument"
        compatibleNamespaceVersion:
          $ref: "#/components/schemas/Version"
    UploadEntityDefinitionsResponse:
      type: object
      required:
        - uploadId
      properties:
        uploadId:
          $ref: "#/components/schemas/UploadId"
    UploadEntityDefinitionsRequest:
      type: object
      properties:
        document:
          $ref: "#/components/schemas/DefinitionDocument"
        syncWithPublicNamespace:
          $ref: "#/components/schemas/SyncWithPublicNamespace"
        deprecateExistingEntities:
          $ref: "#/components/schemas/DeprecateExistingEntities"
    Arn:
      type: string
    ThingName:
      type: string
      pattern: "[a-zA-Z0-9:_-]+"
      minLength: 1
      maxLength: 128
    Urn:
      type: string
      pattern: ^urn:tdm:(([a-z]{2}-(gov-)?[a-z]{4,9}-[0-9]{1,3}/[0-9]+/)*[\p{Alnum}_]+(/[\p{Alnum}_]+)*):([\p{Alpha}]*):([\p{Alnum}_]+(/[\p{Alnum}_]+)*)$
      maxLength: 160
    Version:
      type: integer
    DefinitionDocument:
      type: object
      required:
        - language
        - text
      properties:
        language:
          $ref: "#/components/schemas/DefinitionLanguage"
        text:
          $ref: "#/components/schemas/DefinitionText"
      description: "A document that defines an entity. "
    FlowTemplateSummary:
      type: object
      properties:
        id:
          $ref: "#/components/schemas/Urn"
        arn:
          $ref: "#/components/schemas/Arn"
        revisionNumber:
          $ref: "#/components/schemas/Version"
        createdAt:
          $ref: "#/components/schemas/Timestamp"
      description: An object that contains summary information about a workflow.
    TagList:
      type: array
      items:
        $ref: "#/components/schemas/Tag"
      minItems: 0
      maxItems: 50
    DeploymentTarget:
      type: string
      enum:
        - GREENGRASS
        - CLOUD
    GroupName:
      type: string
    S3BucketName:
      type: string
    MetricsConfiguration:
      type: object
      properties:
        cloudMetricEnabled:
          $ref: "#/components/schemas/Enabled"
        metricRuleRoleArn:
          $ref: "#/components/schemas/RoleArn"
      description: An object that specifies whether cloud metrics are collected in a
        deployment and, if so, what role is used to collect metrics.
    RoleArn:
      type: string
      minLength: 20
      maxLength: 2048
    SystemInstanceSummary:
      type: object
      properties:
        id:
          $ref: "#/components/schemas/Urn"
        arn:
          $ref: "#/components/schemas/Arn"
        status:
          $ref: "#/components/schemas/SystemInstanceDeploymentStatus"
        target:
          $ref: "#/components/schemas/DeploymentTarget"
        greengrassGroupName:
          $ref: "#/components/schemas/GroupName"
        createdAt:
          $ref: "#/components/schemas/Timestamp"
        updatedAt:
          $ref: "#/components/schemas/Timestamp"
        greengrassGroupId:
          $ref: "#/components/schemas/GreengrassGroupId"
        greengrassGroupVersionId:
          $ref: "#/components/schemas/GreengrassGroupVersionId"
      description: An object that contains summary information about a system instance.
    SystemTemplateSummary:
      type: object
      properties:
        id:
          $ref: "#/components/schemas/Urn"
        arn:
          $ref: "#/components/schemas/Arn"
        revisionNumber:
          $ref: "#/components/schemas/Version"
        createdAt:
          $ref: "#/components/schemas/Timestamp"
      description: An object that contains information about a system.
    DefinitionLanguage:
      type: string
      enum:
        - GRAPHQL
    DefinitionText:
      type: string
      maxLength: 1048576
    NamespaceName:
      type: string
      maxLength: 128
    DependencyRevision:
      type: object
      properties:
        id:
          $ref: "#/components/schemas/Urn"
        revisionNumber:
          $ref: "#/components/schemas/Version"
      description: An object that contains the ID and revision number of a workflow or
        system that is part of a deployment.
    DependencyRevisions:
      type: array
      items:
        $ref: "#/components/schemas/DependencyRevision"
    GreengrassDeploymentId:
      type: string
    DeprecateExistingEntities:
      type: boolean
    EntityType:
      type: string
      enum:
        - DEVICE
        - SERVICE
        - DEVICE_MODEL
        - CAPABILITY
        - STATE
        - ACTION
        - EVENT
        - PROPERTY
        - MAPPING
        - ENUM
    Enabled:
      type: boolean
    Timestamp:
      type: string
      format: date-time
    EntityDescription:
      type: object
      properties:
        id:
          $ref: "#/components/schemas/Urn"
        arn:
          $ref: "#/components/schemas/Arn"
        type:
          $ref: "#/components/schemas/EntityType"
        createdAt:
          $ref: "#/components/schemas/Timestamp"
        definition:
          $ref: "#/components/schemas/DefinitionDocument"
      description: Describes the properties of an entity.
    EntityDescriptions:
      type: array
      items:
        $ref: "#/components/schemas/EntityDescription"
    EntityFilterName:
      type: string
      enum:
        - NAME
        - NAMESPACE
        - SEMANTIC_TYPE_PATH
        - REFERENCED_ENTITY_ID
    EntityFilterValues:
      type: array
      items:
        $ref: "#/components/schemas/EntityFilterValue"
    EntityFilter:
      type: object
      properties:
        name:
          $ref: "#/components/schemas/EntityFilterName"
        value:
          $ref: "#/components/schemas/EntityFilterValues"
      description: An object that filters an entity search. Multiple filters function as OR
        criteria in the search. For example a search that includes a
        <code>NAMESPACE</code> and a <code>REFERENCED_ENTITY_ID</code> filter
        searches for entities in the specified namespace that use the entity
        specified by the value of <code>REFERENCED_ENTITY_ID</code>.
    EntityFilterValue:
      type: string
    EntityFilters:
      type: array
      items:
        $ref: "#/components/schemas/EntityFilter"
    EntityTypes:
      type: array
      items:
        $ref: "#/components/schemas/EntityType"
    FlowExecutionEventType:
      type: string
      enum:
        - EXECUTION_STARTED
        - EXECUTION_FAILED
        - EXECUTION_ABORTED
        - EXECUTION_SUCCEEDED
        - STEP_STARTED
        - STEP_FAILED
        - STEP_SUCCEEDED
        - ACTIVITY_SCHEDULED
        - ACTIVITY_STARTED
        - ACTIVITY_FAILED
        - ACTIVITY_SUCCEEDED
        - START_FLOW_EXECUTION_TASK
        - SCHEDULE_NEXT_READY_STEPS_TASK
        - THING_ACTION_TASK
        - THING_ACTION_TASK_FAILED
        - THING_ACTION_TASK_SUCCEEDED
        - ACKNOWLEDGE_TASK_MESSAGE
    FlowExecutionId:
      type: string
    FlowExecutionMessageId:
      type: string
    FlowExecutionMessagePayload:
      type: string
    FlowExecutionMessage:
      type: object
      properties:
        messageId:
          $ref: "#/components/schemas/FlowExecutionMessageId"
        eventType:
          $ref: "#/components/schemas/FlowExecutionEventType"
        timestamp:
          $ref: "#/components/schemas/Timestamp"
        payload:
          $ref: "#/components/schemas/FlowExecutionMessagePayload"
      description: An object that contains information about a flow event.
    FlowExecutionMessages:
      type: array
      items:
        $ref: "#/components/schemas/FlowExecutionMessage"
    FlowExecutionStatus:
      type: string
      enum:
        - RUNNING
        - ABORTED
        - SUCCEEDED
        - FAILED
    FlowExecutionSummary:
      type: object
      properties:
        flowExecutionId:
          $ref: "#/components/schemas/FlowExecutionId"
        status:
          $ref: "#/components/schemas/FlowExecutionStatus"
        systemInstanceId:
          $ref: "#/components/schemas/Urn"
        flowTemplateId:
          $ref: "#/components/schemas/Urn"
        createdAt:
          $ref: "#/components/schemas/Timestamp"
        updatedAt:
          $ref: "#/components/schemas/Timestamp"
      description: An object that contains summary information about a flow execution.
    FlowExecutionSummaries:
      type: array
      items:
        $ref: "#/components/schemas/FlowExecutionSummary"
    FlowTemplateDescription:
      type: object
      properties:
        summary:
          $ref: "#/components/schemas/FlowTemplateSummary"
        definition:
          $ref: "#/components/schemas/DefinitionDocument"
        validatedNamespaceVersion:
          $ref: "#/components/schemas/Version"
      description: An object that contains a workflow's definition and summary information.
    FlowTemplateFilterName:
      type: string
      enum:
        - DEVICE_MODEL_ID
    FlowTemplateFilterValues:
      type: array
      items:
        $ref: "#/components/schemas/FlowTemplateFilterValue"
    FlowTemplateFilter:
      type: object
      required:
        - name
        - value
      properties:
        name:
          $ref: "#/components/schemas/FlowTemplateFilterName"
        value:
          $ref: "#/components/schemas/FlowTemplateFilterValues"
      description: An object that filters a workflow search.
    FlowTemplateFilterValue:
      type: string
      pattern: ^urn:tdm:(([a-z]{2}-(gov-)?[a-z]{4,9}-[0-9]{1,3}/[0-9]+/)*[\p{Alnum}_]+(/[\p{Alnum}_]+)*):([\p{Alpha}]*):([\p{Alnum}_]+(/[\p{Alnum}_]+)*)$
    FlowTemplateFilters:
      type: array
      items:
        $ref: "#/components/schemas/FlowTemplateFilter"
    FlowTemplateSummaries:
      type: array
      items:
        $ref: "#/components/schemas/FlowTemplateSummary"
    Urns:
      type: array
      items:
        $ref: "#/components/schemas/Urn"
      minItems: 0
      maxItems: 25
    NextToken:
      type: string
    MaxResults:
      type: integer
      minimum: 1
      maximum: 250
    NamespaceDeletionStatus:
      type: string
      enum:
        - IN_PROGRESS
        - SUCCEEDED
        - FAILED
    NamespaceDeletionStatusErrorCodes:
      type: string
      enum:
        - VALIDATION_FAILED
    String:
      type: string
    SystemInstanceDescription:
      type: object
      properties:
        summary:
          $ref: "#/components/schemas/SystemInstanceSummary"
        definition:
          $ref: "#/components/schemas/DefinitionDocument"
        s3BucketName:
          $ref: "#/components/schemas/S3BucketName"
        metricsConfiguration:
          $ref: "#/components/schemas/MetricsConfiguration"
        validatedNamespaceVersion:
          $ref: "#/components/schemas/Version"
        validatedDependencyRevisions:
          $ref: "#/components/schemas/DependencyRevisions"
        flowActionsRoleArn:
          $ref: "#/components/schemas/RoleArn"
      description: An object that contains a system instance definition and summary
        information.
    SystemTemplateDescription:
      type: object
      properties:
        summary:
          $ref: "#/components/schemas/SystemTemplateSummary"
        definition:
          $ref: "#/components/schemas/DefinitionDocument"
        validatedNamespaceVersion:
          $ref: "#/components/schemas/Version"
      description: An object that contains a system's definition document and summary
        information.
    SystemTemplateSummaries:
      type: array
      items:
        $ref: "#/components/schemas/SystemTemplateSummary"
    UploadId:
      type: string
      minLength: 1
      maxLength: 40
    UploadStatus:
      type: string
      enum:
        - IN_PROGRESS
        - SUCCEEDED
        - FAILED
    StringList:
      type: array
      items:
        $ref: "#/components/schemas/String"
    GreengrassGroupId:
      type: string
    GreengrassGroupVersionId:
      type: string
    ResourceArn:
      type: string
      minLength: 1
      maxLength: 2048
    SystemInstanceFilters:
      type: array
      items:
        $ref: "#/components/schemas/SystemInstanceFilter"
    SystemInstanceSummaries:
      type: array
      items:
        $ref: "#/components/schemas/SystemInstanceSummary"
    SystemTemplateFilters:
      type: array
      items:
        $ref: "#/components/schemas/SystemTemplateFilter"
    Things:
      type: array
      items:
        $ref: "#/components/schemas/Thing"
    SyncWithPublicNamespace:
      type: boolean
    SystemInstanceDeploymentStatus:
      type: string
      enum:
        - NOT_DEPLOYED
        - BOOTSTRAP
        - DEPLOY_IN_PROGRESS
        - DEPLOYED_IN_TARGET
        - UNDEPLOY_IN_PROGRESS
        - FAILED
        - PENDING_DELETE
        - DELETED_IN_TARGET
    SystemInstanceFilterName:
      type: string
      enum:
        - SYSTEM_TEMPLATE_ID
        - STATUS
        - GREENGRASS_GROUP_NAME
    SystemInstanceFilterValues:
      type: array
      items:
        $ref: "#/components/schemas/SystemInstanceFilterValue"
    SystemInstanceFilter:
      type: object
      properties:
        name:
          $ref: "#/components/schemas/SystemInstanceFilterName"
        value:
          $ref: "#/components/schemas/SystemInstanceFilterValues"
      description: An object that filters a system instance search. Multiple filters
        function as OR criteria in the search. For example a search that
        includes a GREENGRASS_GROUP_NAME and a STATUS filter searches for system
        instances in the specified Greengrass group that have the specified
        status.
    SystemInstanceFilterValue:
      type: string
    SystemTemplateFilterName:
      type: string
      enum:
        - FLOW_TEMPLATE_ID
    SystemTemplateFilterValues:
      type: array
      items:
        $ref: "#/components/schemas/SystemTemplateFilterValue"
    SystemTemplateFilter:
      type: object
      required:
        - name
        - value
      properties:
        name:
          $ref: "#/components/schemas/SystemTemplateFilterName"
        value:
          $ref: "#/components/schemas/SystemTemplateFilterValues"
      description: An object that filters a system search.
    SystemTemplateFilterValue:
      type: string
      pattern: ^urn:tdm:(([a-z]{2}-(gov-)?[a-z]{4,9}-[0-9]{1,3}/[0-9]+/)*[\p{Alnum}_]+(/[\p{Alnum}_]+)*):([\p{Alpha}]*):([\p{Alnum}_]+(/[\p{Alnum}_]+)*)$
    TagKey:
      type: string
      pattern: ^([\p{L}\p{Z}\p{N}_.:/=+\-@]*)$
      minLength: 1
      maxLength: 128
    TagValue:
      type: string
      minLength: 1
      maxLength: 256
    Tag:
      type: object
      required:
        - key
        - value
      properties:
        key:
          $ref: "#/components/schemas/TagKey"
        value:
          $ref: "#/components/schemas/TagValue"
      description: Metadata assigned to an AWS IoT Things Graph resource consisting of a
        key-value pair.
    TagKeyList:
      type: array
      items:
        $ref: "#/components/schemas/TagKey"
      minItems: 1
      maxItems: 50
    ThingArn:
      type: string
    Thing:
      type: object
      properties:
        thingArn:
          $ref: "#/components/schemas/ThingArn"
        thingName:
          $ref: "#/components/schemas/ThingName"
      description: An AWS IoT thing.
