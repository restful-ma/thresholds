openapi: 3.0.0
info:
  version: 2013-04-15
  x-release: v4
  title: AWS Support
  description: <fullname>AWS Support</fullname> <p>The AWS Support API reference is
    intended for programmers who need detailed information about the AWS Support
    operations and data types. This service enables you to manage your AWS
    Support cases programmatically. It uses HTTP methods that return results in
    JSON format.</p> <p>The AWS Support service also exposes a set of <a
    href="http://aws.amazon.com/premiumsupport/trustedadvisor/">Trusted
    Advisor</a> features. You can retrieve a list of checks and their
    descriptions, get check results, specify checks to refresh, and get the
    refresh status of checks. </p> <p>The following list describes the AWS
    Support case management operations:</p> <ul> <li> <p> <b>Service names,
    issue categories, and available severity levels. </b>The
    <a>DescribeServices</a> and <a>DescribeSeverityLevels</a> operations return
    AWS service names, service codes, service categories, and problem severity
    levels. You use these values when you call the <a>CreateCase</a> operation.
    </p> </li> <li> <p> <b>Case creation, case details, and case resolution.</b>
    The <a>CreateCase</a>, <a>DescribeCases</a>, <a>DescribeAttachment</a>, and
    <a>ResolveCase</a> operations create AWS Support cases, retrieve information
    about cases, and resolve cases.</p> </li> <li> <p> <b>Case
    communication.</b> The <a>DescribeCommunications</a>,
    <a>AddCommunicationToCase</a>, and <a>AddAttachmentsToSet</a> operations
    retrieve and add communications and attachments to AWS Support cases. </p>
    </li> </ul> <p>The following list describes the operations available from
    the AWS Support service for Trusted Advisor:</p> <ul> <li> <p>
    <a>DescribeTrustedAdvisorChecks</a> returns the list of checks that run
    against your AWS resources.</p> </li> <li> <p>Using the <code>checkId</code>
    for a specific check returned by <a>DescribeTrustedAdvisorChecks</a>, you
    can call <a>DescribeTrustedAdvisorCheckResult</a> to obtain the results for
    the check you specified.</p> </li> <li> <p>
    <a>DescribeTrustedAdvisorCheckSummaries</a> returns summarized results for
    one or more Trusted Advisor checks.</p> </li> <li> <p>
    <a>RefreshTrustedAdvisorCheck</a> requests that Trusted Advisor rerun a
    specified check. </p> </li> <li> <p>
    <a>DescribeTrustedAdvisorCheckRefreshStatuses</a> reports the refresh status
    of one or more checks. </p> </li> </ul> <p>For authentication of requests,
    AWS Support uses <a
    href="http://docs.aws.amazon.com/general/latest/gr/signature-version-4.html">Signature
    Version 4 Signing Process</a>.</p> <p>See <a
    href="http://docs.aws.amazon.com/awssupport/latest/user/Welcome.html">About
    the AWS Support API</a> in the <i>AWS Support User Guide</i> for information
    about how to use this service to create and manage your support cases, and
    how to call Trusted Advisor for results of checks on your resources. </p>
  x-logo:
    url: https://twitter.com/awscloud/profile_image?size=original
    backgroundColor: "#FFFFFF"
  termsOfService: https://aws.amazon.com/service-terms/
  contact:
    name: Mike Ralphson
    email: mike.ralphson@gmail.com
    url: https://github.com/mermade/aws2openapi
    x-twitter: PermittedSoc
  license:
    name: Apache 2.0 License
    url: http://www.apache.org/licenses/
  x-providerName: amazonaws.com
  x-serviceName: support
  x-origin:
    - contentType: application/json
      url: https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/support-2013-04-15.normal.json
      converter:
        url: https://github.com/mermade/aws2openapi
        version: 1.0.0
      x-apisguru-direct: true
  x-apiClientRegistration:
    url: https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct
  x-apisguru-categories:
    - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: https://docs.aws.amazon.com/support/
x-hasEquivalentPaths: true
security:
  - hmac: []
paths:
  /#X-Amz-Target=AWSSupport_20130415.AddAttachmentsToSet:
    post:
      operationId: AddAttachmentsToSet
      description: <p>Adds one or more attachments to an attachment set. If an
        <code>attachmentSetId</code> is not specified, a new attachment set is
        created, and the ID of the set is returned in the response. If an
        <code>attachmentSetId</code> is specified, the attachments are added to
        the specified set, if it exists.</p> <p>An attachment set is a temporary
        container for attachments that are to be added to a case or case
        communication. The set is available for one hour after it is created;
        the <code>expiryTime</code> returned in the response indicates when the
        set expires. The maximum number of attachments in a set is 3, and the
        maximum size of any attachment in the set is 5 MB.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AddAttachmentsToSetResponse"
        "480":
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
        "481":
          description: AttachmentSetIdNotFound
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AttachmentSetIdNotFound"
        "482":
          description: AttachmentSetExpired
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AttachmentSetExpired"
        "483":
          description: AttachmentSetSizeLimitExceeded
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AttachmentSetSizeLimitExceeded"
        "484":
          description: AttachmentLimitExceeded
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AttachmentLimitExceeded"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSSupport_20130415.AddAttachmentsToSet
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AddAttachmentsToSetRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSSupport_20130415.AddCommunicationToCase:
    post:
      operationId: AddCommunicationToCase
      description: <p>Adds additional customer communication to an AWS Support case. You
        use the <code>caseId</code> value to identify the case to add
        communication to. You can list a set of email addresses to copy on the
        communication using the <code>ccEmailAddresses</code> value. The
        <code>communicationBody</code> value contains the text of the
        communication.</p> <p>The response indicates the success or failure of
        the request.</p> <p>This operation implements a subset of the features
        of the AWS Support Center.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AddCommunicationToCaseResponse"
        "480":
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
        "481":
          description: CaseIdNotFound
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CaseIdNotFound"
        "482":
          description: AttachmentSetIdNotFound
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AttachmentSetIdNotFound"
        "483":
          description: AttachmentSetExpired
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AttachmentSetExpired"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSSupport_20130415.AddCommunicationToCase
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AddCommunicationToCaseRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSSupport_20130415.CreateCase:
    post:
      operationId: CreateCase
      description: '<p>Creates a new case in the AWS Support Center. This operation is
        modeled on the behavior of the AWS Support Center <a
        href="https://console.aws.amazon.com/support/home#/case/create">Create
        Case</a> page. Its parameters require you to specify the following
        information: </p> <ul> <li> <p> <b>issueType.</b> The type of issue for
        the case. You can specify either "customer-service" or "technical." If
        you do not indicate a value, the default is "technical." </p> </li> <li>
        <p> <b>serviceCode.</b> The code for an AWS service. You obtain the
        <code>serviceCode</code> by calling <a>DescribeServices</a>. </p> </li>
        <li> <p> <b>categoryCode.</b> The category for the service defined for
        the <code>serviceCode</code> value. You also obtain the category code
        for a service by calling <a>DescribeServices</a>. Each AWS service
        defines its own set of category codes. </p> </li> <li> <p>
        <b>severityCode.</b> A value that indicates the urgency of the case,
        which in turn determines the response time according to your service
        level agreement with AWS Support. You obtain the SeverityCode by calling
        <a>DescribeSeverityLevels</a>.</p> </li> <li> <p> <b>subject.</b> The
        <b>Subject</b> field on the AWS Support Center <a
        href="https://console.aws.amazon.com/support/home#/case/create">Create
        Case</a> page.</p> </li> <li> <p> <b>communicationBody.</b> The
        <b>Description</b> field on the AWS Support Center <a
        href="https://console.aws.amazon.com/support/home#/case/create">Create
        Case</a> page.</p> </li> <li> <p> <b>attachmentSetId.</b> The ID of a
        set of attachments that has been created by using
        <a>AddAttachmentsToSet</a>.</p> </li> <li> <p> <b>language.</b> The
        human language in which AWS Support handles the case. English and
        Japanese are currently supported.</p> </li> <li> <p>
        <b>ccEmailAddresses.</b> The AWS Support Center <b>CC</b> field on the
        <a
        href="https://console.aws.amazon.com/support/home#/case/create">Create
        Case</a> page. You can list email addresses to be copied on any
        correspondence about the case. The account that opens the case is
        already identified by passing the AWS Credentials in the HTTP POST
        method or in a method or function call from one of the programming
        languages supported by an <a href="http://aws.amazon.com/tools/">AWS
        SDK</a>. </p> </li> </ul> <note> <p>To add additional communication or
        attachments to an existing case, use <a>AddCommunicationToCase</a>.</p>
        </note> <p>A successful <a>CreateCase</a> request returns an AWS Support
        case number. Case numbers are used by the <a>DescribeCases</a> operation
        to retrieve existing AWS Support cases. </p>'
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateCaseResponse"
        "480":
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
        "481":
          description: CaseCreationLimitExceeded
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CaseCreationLimitExceeded"
        "482":
          description: AttachmentSetIdNotFound
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AttachmentSetIdNotFound"
        "483":
          description: AttachmentSetExpired
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AttachmentSetExpired"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSSupport_20130415.CreateCase
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateCaseRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSSupport_20130415.DescribeAttachment:
    post:
      operationId: DescribeAttachment
      description: Returns the attachment that has the specified ID. Attachment IDs are
        generated by the case management system when you add an attachment to a
        case or case communication. Attachment IDs are returned in the
        <a>AttachmentDetails</a> objects that are returned by the
        <a>DescribeCommunications</a> operation.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeAttachmentResponse"
        "480":
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
        "481":
          description: DescribeAttachmentLimitExceeded
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeAttachmentLimitExceeded"
        "482":
          description: AttachmentIdNotFound
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AttachmentIdNotFound"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSSupport_20130415.DescribeAttachment
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DescribeAttachmentRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSSupport_20130415.DescribeCases:
    post:
      operationId: DescribeCases
      description: <p>Returns a list of cases that you specify by passing one or more case
        IDs. In addition, you can filter the cases by date by setting values for
        the <code>afterTime</code> and <code>beforeTime</code> request
        parameters. You can set values for the <code>includeResolvedCases</code>
        and <code>includeCommunications</code> request parameters to control how
        much information is returned. </p> <p>Case data is available for 12
        months after creation. If a case was created more than 12 months ago, a
        request for data might cause an error.</p> <p>The response returns the
        following in JSON format:</p> <ul> <li> <p>One or more
        <a>CaseDetails</a> data types. </p> </li> <li> <p>One or more
        <code>nextToken</code> values, which specify where to paginate the
        returned records represented by the <code>CaseDetails</code>
        objects.</p> </li> </ul>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeCasesResponse"
        "480":
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
        "481":
          description: CaseIdNotFound
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CaseIdNotFound"
      parameters:
        - name: maxResults
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: nextToken
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSSupport_20130415.DescribeCases
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DescribeCasesRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSSupport_20130415.DescribeCommunications:
    post:
      operationId: DescribeCommunications
      description: <p>Returns communications (and attachments) for one or more support
        cases. You can use the <code>afterTime</code> and
        <code>beforeTime</code> parameters to filter by date. You can use the
        <code>caseId</code> parameter to restrict the results to a particular
        case.</p> <p>Case data is available for 12 months after creation. If a
        case was created more than 12 months ago, a request for data might cause
        an error.</p> <p>You can use the <code>maxResults</code> and
        <code>nextToken</code> parameters to control the pagination of the
        result set. Set <code>maxResults</code> to the number of cases you want
        displayed on each page, and use <code>nextToken</code> to specify the
        resumption of pagination.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeCommunicationsResponse"
        "480":
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
        "481":
          description: CaseIdNotFound
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CaseIdNotFound"
      parameters:
        - name: maxResults
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: nextToken
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSSupport_20130415.DescribeCommunications
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DescribeCommunicationsRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSSupport_20130415.DescribeServices:
    post:
      operationId: DescribeServices
      description: <p>Returns the current list of AWS services and a list of service
        categories that applies to each one. You then use service names and
        categories in your <a>CreateCase</a> requests. Each AWS service has its
        own set of categories.</p> <p>The service codes and category codes
        correspond to the values that are displayed in the <b>Service</b> and
        <b>Category</b> drop-down lists on the AWS Support Center <a
        href="https://console.aws.amazon.com/support/home#/case/create">Create
        Case</a> page. The values in those fields, however, do not necessarily
        match the service codes and categories returned by the
        <code>DescribeServices</code> request. Always use the service codes and
        categories obtained programmatically. This practice ensures that you
        always have the most recent set of service and category codes.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeServicesResponse"
        "480":
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSSupport_20130415.DescribeServices
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DescribeServicesRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSSupport_20130415.DescribeSeverityLevels:
    post:
      operationId: DescribeSeverityLevels
      description: "Returns the list of severity levels that you can assign to an AWS
        Support case. The severity level for a case is also a field in the
        <a>CaseDetails</a> data type included in any <a>CreateCase</a> request.
        "
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeSeverityLevelsResponse"
        "480":
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSSupport_20130415.DescribeSeverityLevels
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DescribeSeverityLevelsRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSSupport_20130415.DescribeTrustedAdvisorCheckRefreshStatuses:
    post:
      operationId: DescribeTrustedAdvisorCheckRefreshStatuses
      description: <p>Returns the refresh status of the Trusted Advisor checks that have
        the specified check IDs. Check IDs can be obtained by calling
        <a>DescribeTrustedAdvisorChecks</a>.</p> <note> <p>Some checks are
        refreshed automatically, and their refresh statuses cannot be retrieved
        by using this operation. Use of the
        <code>DescribeTrustedAdvisorCheckRefreshStatuses</code> operation for
        these checks causes an <code>InvalidParameterValue</code> error.</p>
        </note>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeTrustedAdvisorCheckRefreshStatu\
                  sesResponse"
        "480":
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSSupport_20130415.DescribeTrustedAdvisorCheckRefreshStatuses
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DescribeTrustedAdvisorCheckRefreshStatuse\
                sRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSSupport_20130415.DescribeTrustedAdvisorCheckResult:
    post:
      operationId: DescribeTrustedAdvisorCheckResult
      description: '<p>Returns the results of the Trusted Advisor check that has the
        specified check ID. Check IDs can be obtained by calling
        <a>DescribeTrustedAdvisorChecks</a>.</p> <p>The response contains a
        <a>TrustedAdvisorCheckResult</a> object, which contains these three
        objects:</p> <ul> <li> <p> <a>TrustedAdvisorCategorySpecificSummary</a>
        </p> </li> <li> <p> <a>TrustedAdvisorResourceDetail</a> </p> </li> <li>
        <p> <a>TrustedAdvisorResourcesSummary</a> </p> </li> </ul> <p>In
        addition, the response contains these fields:</p> <ul> <li> <p>
        <b>status.</b> The alert status of the check: "ok" (green), "warning"
        (yellow), "error" (red), or "not_available".</p> </li> <li> <p>
        <b>timestamp.</b> The time of the last refresh of the check.</p> </li>
        <li> <p> <b>checkId.</b> The unique identifier for the check.</p> </li>
        </ul>'
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeTrustedAdvisorCheckResultRespon\
                  se"
        "480":
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSSupport_20130415.DescribeTrustedAdvisorCheckResult
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DescribeTrustedAdvisorCheckResultRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSSupport_20130415.DescribeTrustedAdvisorCheckSummaries:
    post:
      operationId: DescribeTrustedAdvisorCheckSummaries
      description: <p>Returns the summaries of the results of the Trusted Advisor checks
        that have the specified check IDs. Check IDs can be obtained by calling
        <a>DescribeTrustedAdvisorChecks</a>.</p> <p>The response contains an
        array of <a>TrustedAdvisorCheckSummary</a> objects.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeTrustedAdvisorCheckSummariesRes\
                  ponse"
        "480":
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSSupport_20130415.DescribeTrustedAdvisorCheckSummaries
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DescribeTrustedAdvisorCheckSummariesReque\
                st"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSSupport_20130415.DescribeTrustedAdvisorChecks:
    post:
      operationId: DescribeTrustedAdvisorChecks
      description: Returns information about all available Trusted Advisor checks,
        including name, ID, category, description, and metadata. You must
        specify a language code; English ("en") and Japanese ("ja") are
        currently supported. The response contains a
        <a>TrustedAdvisorCheckDescription</a> for each check.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeTrustedAdvisorChecksResponse"
        "480":
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSSupport_20130415.DescribeTrustedAdvisorChecks
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DescribeTrustedAdvisorChecksRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSSupport_20130415.RefreshTrustedAdvisorCheck:
    post:
      operationId: RefreshTrustedAdvisorCheck
      description: '<p>Requests a refresh of the Trusted Advisor check that has the
        specified check ID. Check IDs can be obtained by calling
        <a>DescribeTrustedAdvisorChecks</a>.</p> <note> <p>Some checks are
        refreshed automatically, and they cannot be refreshed by using this
        operation. Use of the <code>RefreshTrustedAdvisorCheck</code> operation
        for these checks causes an <code>InvalidParameterValue</code> error.</p>
        </note> <p>The response contains a
        <a>TrustedAdvisorCheckRefreshStatus</a> object, which contains these
        fields:</p> <ul> <li> <p> <b>status.</b> The refresh status of the
        check: "none", "enqueued", "processing", "success", or "abandoned".</p>
        </li> <li> <p> <b>millisUntilNextRefreshable.</b> The amount of time, in
        milliseconds, until the check is eligible for refresh.</p> </li> <li>
        <p> <b>checkId.</b> The unique identifier for the check.</p> </li>
        </ul>'
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RefreshTrustedAdvisorCheckResponse"
        "480":
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSSupport_20130415.RefreshTrustedAdvisorCheck
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RefreshTrustedAdvisorCheckRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSSupport_20130415.ResolveCase:
    post:
      operationId: ResolveCase
      description: Takes a <code>caseId</code> and returns the initial state of the case
        along with the state of the case after the call to <a>ResolveCase</a>
        completed.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResolveCaseResponse"
        "480":
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
        "481":
          description: CaseIdNotFound
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CaseIdNotFound"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSSupport_20130415.ResolveCase
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ResolveCaseRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
servers:
  - url: https://support.us-east-1.amazonaws.com
    variables: {}
    description: The general AWS Support multi-region endpoint
  - url: http://support.{region}.amazonaws.com.cn
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The AWS Support endpoint for China (Beijing) and China (Ningxia)
  - url: https://support.{region}.amazonaws.com.cn
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The AWS Support endpoint for China (Beijing) and China (Ningxia)
components:
  parameters:
    X-Amz-Content-Sha256:
      name: X-Amz-Content-Sha256
      in: header
      required: false
      schema:
        type: string
    X-Amz-Date:
      name: X-Amz-Date
      in: header
      required: false
      schema:
        type: string
    X-Amz-Algorithm:
      name: X-Amz-Algorithm
      in: header
      required: false
      schema:
        type: string
    X-Amz-Credential:
      name: X-Amz-Credential
      in: header
      required: false
      schema:
        type: string
    X-Amz-Security-Token:
      name: X-Amz-Security-Token
      in: header
      required: false
      schema:
        type: string
    X-Amz-Signature:
      name: X-Amz-Signature
      in: header
      required: false
      schema:
        type: string
    X-Amz-SignedHeaders:
      name: X-Amz-SignedHeaders
      in: header
      required: false
      schema:
        type: string
  securitySchemes:
    hmac:
      type: apiKey
      name: Authorization
      in: header
      description: Amazon Signature authorization v4
      x-amazon-apigateway-authtype: awsSigv4
  schemas:
    AddAttachmentsToSetResponse:
      type: object
      properties:
        attachmentSetId:
          $ref: "#/components/schemas/AttachmentSetId"
        expiryTime:
          $ref: "#/components/schemas/ExpiryTime"
      description: The ID and expiry time of the attachment set returned by the
        <a>AddAttachmentsToSet</a> operation.
    AddAttachmentsToSetRequest:
      type: object
      required:
        - attachments
      properties:
        attachmentSetId:
          $ref: "#/components/schemas/AttachmentSetId"
        attachments:
          $ref: "#/components/schemas/Attachments"
      description: <p/>
    InternalServerError:
      type: object
      properties:
        message:
          $ref: "#/components/schemas/ErrorMessage"
      description: An internal server error occurred.
    AttachmentSetIdNotFound:
      type: object
      properties:
        message:
          $ref: "#/components/schemas/ErrorMessage"
      description: An attachment set with the specified ID could not be found.
    AttachmentSetExpired:
      type: object
      properties:
        message:
          $ref: "#/components/schemas/ErrorMessage"
      description: The expiration time of the attachment set has passed. The set expires 1
        hour after it is created.
    AttachmentSetSizeLimitExceeded:
      type: object
      properties:
        message:
          $ref: "#/components/schemas/ErrorMessage"
      description: A limit for the size of an attachment set has been exceeded. The limits
        are 3 attachments and 5 MB per attachment.
    AttachmentLimitExceeded:
      type: object
      properties:
        message:
          $ref: "#/components/schemas/ErrorMessage"
      description: The limit for the number of attachment sets created in a short period of
        time has been exceeded.
    AddCommunicationToCaseResponse:
      type: object
      properties:
        result:
          $ref: "#/components/schemas/Result"
      description: The result of the <a>AddCommunicationToCase</a> operation.
    AddCommunicationToCaseRequest:
      type: object
      required:
        - communicationBody
      properties:
        caseId:
          $ref: "#/components/schemas/CaseId"
        communicationBody:
          $ref: "#/components/schemas/CommunicationBody"
        ccEmailAddresses:
          $ref: "#/components/schemas/CcEmailAddressList"
        attachmentSetId:
          $ref: "#/components/schemas/AttachmentSetId"
      description: To be written.
    CaseIdNotFound:
      type: object
      properties:
        message:
          $ref: "#/components/schemas/ErrorMessage"
      description: The requested <code>caseId</code> could not be located.
    CreateCaseResponse:
      type: object
      properties:
        caseId:
          $ref: "#/components/schemas/CaseId"
      description: "The AWS Support case ID returned by a successful completion of the
        <a>CreateCase</a> operation. "
    CreateCaseRequest:
      type: object
      required:
        - subject
        - communicationBody
      properties:
        subject:
          $ref: "#/components/schemas/Subject"
        serviceCode:
          $ref: "#/components/schemas/ServiceCode"
        severityCode:
          $ref: "#/components/schemas/SeverityCode"
        categoryCode:
          $ref: "#/components/schemas/CategoryCode"
        communicationBody:
          $ref: "#/components/schemas/CommunicationBody"
        ccEmailAddresses:
          $ref: "#/components/schemas/CcEmailAddressList"
        language:
          $ref: "#/components/schemas/Language"
        issueType:
          $ref: "#/components/schemas/IssueType"
        attachmentSetId:
          $ref: "#/components/schemas/AttachmentSetId"
      description: <p/>
    CaseCreationLimitExceeded:
      type: object
      properties:
        message:
          $ref: "#/components/schemas/ErrorMessage"
      description: The case creation limit for the account has been exceeded.
    DescribeAttachmentResponse:
      type: object
      properties:
        attachment:
          $ref: "#/components/schemas/Attachment"
      description: The content and file name of the attachment returned by the
        <a>DescribeAttachment</a> operation.
    DescribeAttachmentRequest:
      type: object
      required:
        - attachmentId
      properties:
        attachmentId:
          $ref: "#/components/schemas/AttachmentId"
    DescribeAttachmentLimitExceeded:
      type: object
      properties:
        message:
          $ref: "#/components/schemas/ErrorMessage"
      description: The limit for the number of <a>DescribeAttachment</a> requests in a
        short period of time has been exceeded.
    AttachmentIdNotFound:
      type: object
      properties:
        message:
          $ref: "#/components/schemas/ErrorMessage"
      description: An attachment with the specified ID could not be found.
    DescribeCasesResponse:
      type: object
      properties:
        cases:
          $ref: "#/components/schemas/CaseList"
        nextToken:
          $ref: "#/components/schemas/NextToken"
      description: Returns an array of <a>CaseDetails</a> objects and a
        <code>nextToken</code> that defines a point for pagination in the result
        set.
    DescribeCasesRequest:
      type: object
      properties:
        caseIdList:
          $ref: "#/components/schemas/CaseIdList"
        displayId:
          $ref: "#/components/schemas/DisplayId"
        afterTime:
          $ref: "#/components/schemas/AfterTime"
        beforeTime:
          $ref: "#/components/schemas/BeforeTime"
        includeResolvedCases:
          $ref: "#/components/schemas/IncludeResolvedCases"
        nextToken:
          $ref: "#/components/schemas/NextToken"
        maxResults:
          $ref: "#/components/schemas/MaxResults"
        language:
          $ref: "#/components/schemas/Language"
        includeCommunications:
          $ref: "#/components/schemas/IncludeCommunications"
      description: <p/>
    DescribeCommunicationsResponse:
      type: object
      properties:
        communications:
          $ref: "#/components/schemas/CommunicationList"
        nextToken:
          $ref: "#/components/schemas/NextToken"
      description: The communications returned by the <a>DescribeCommunications</a>
        operation.
    DescribeCommunicationsRequest:
      type: object
      required:
        - caseId
      properties:
        caseId:
          $ref: "#/components/schemas/CaseId"
        beforeTime:
          $ref: "#/components/schemas/BeforeTime"
        afterTime:
          $ref: "#/components/schemas/AfterTime"
        nextToken:
          $ref: "#/components/schemas/NextToken"
        maxResults:
          $ref: "#/components/schemas/MaxResults"
      description: <p/>
    DescribeServicesResponse:
      type: object
      properties:
        services:
          $ref: "#/components/schemas/ServiceList"
      description: The list of AWS services returned by the <a>DescribeServices</a>
        operation.
    DescribeServicesRequest:
      type: object
      properties:
        serviceCodeList:
          $ref: "#/components/schemas/ServiceCodeList"
        language:
          $ref: "#/components/schemas/Language"
      description: <p/>
    DescribeSeverityLevelsResponse:
      type: object
      properties:
        severityLevels:
          $ref: "#/components/schemas/SeverityLevelsList"
      description: The list of severity levels returned by the
        <a>DescribeSeverityLevels</a> operation.
    DescribeSeverityLevelsRequest:
      type: object
      properties:
        language:
          $ref: "#/components/schemas/Language"
      description: <p/>
    DescribeTrustedAdvisorCheckRefreshStatusesResponse:
      type: object
      required:
        - statuses
      properties:
        statuses:
          $ref: "#/components/schemas/TrustedAdvisorCheckRefreshStatusList"
      description: The statuses of the Trusted Advisor checks returned by the
        <a>DescribeTrustedAdvisorCheckRefreshStatuses</a> operation.
    DescribeTrustedAdvisorCheckRefreshStatusesRequest:
      type: object
      required:
        - checkIds
      properties:
        checkIds:
          $ref: "#/components/schemas/StringList"
      description: <p/>
    DescribeTrustedAdvisorCheckResultResponse:
      type: object
      properties:
        result:
          $ref: "#/components/schemas/TrustedAdvisorCheckResult"
      description: The result of the Trusted Advisor check returned by the
        <a>DescribeTrustedAdvisorCheckResult</a> operation.
    DescribeTrustedAdvisorCheckResultRequest:
      type: object
      required:
        - checkId
      properties:
        checkId:
          $ref: "#/components/schemas/String"
        language:
          $ref: "#/components/schemas/String"
      description: <p/>
    DescribeTrustedAdvisorCheckSummariesResponse:
      type: object
      required:
        - summaries
      properties:
        summaries:
          $ref: "#/components/schemas/TrustedAdvisorCheckSummaryList"
      description: The summaries of the Trusted Advisor checks returned by the
        <a>DescribeTrustedAdvisorCheckSummaries</a> operation.
    DescribeTrustedAdvisorCheckSummariesRequest:
      type: object
      required:
        - checkIds
      properties:
        checkIds:
          $ref: "#/components/schemas/StringList"
      description: <p/>
    DescribeTrustedAdvisorChecksResponse:
      type: object
      required:
        - checks
      properties:
        checks:
          $ref: "#/components/schemas/TrustedAdvisorCheckList"
      description: Information about the Trusted Advisor checks returned by the
        <a>DescribeTrustedAdvisorChecks</a> operation.
    DescribeTrustedAdvisorChecksRequest:
      type: object
      required:
        - language
      properties:
        language:
          $ref: "#/components/schemas/String"
      description: <p/>
    RefreshTrustedAdvisorCheckResponse:
      type: object
      required:
        - status
      properties:
        status:
          $ref: "#/components/schemas/TrustedAdvisorCheckRefreshStatus"
      description: The current refresh status of a Trusted Advisor check.
    RefreshTrustedAdvisorCheckRequest:
      type: object
      required:
        - checkId
      properties:
        checkId:
          $ref: "#/components/schemas/String"
      description: <p/>
    ResolveCaseResponse:
      type: object
      properties:
        initialCaseStatus:
          $ref: "#/components/schemas/CaseStatus"
        finalCaseStatus:
          $ref: "#/components/schemas/CaseStatus"
      description: The status of the case returned by the <a>ResolveCase</a> operation.
    ResolveCaseRequest:
      type: object
      properties:
        caseId:
          $ref: "#/components/schemas/CaseId"
      description: <p/>
    AttachmentSetId:
      type: string
    Attachments:
      type: array
      items:
        $ref: "#/components/schemas/Attachment"
    ExpiryTime:
      type: string
    CaseId:
      type: string
    CommunicationBody:
      type: string
      minLength: 1
      maxLength: 8000
    CcEmailAddressList:
      type: array
      items:
        $ref: "#/components/schemas/CcEmailAddress"
      minItems: 0
      maxItems: 10
    Result:
      type: boolean
    AfterTime:
      type: string
    FileName:
      type: string
    Data:
      type: string
    Attachment:
      type: object
      properties:
        fileName:
          $ref: "#/components/schemas/FileName"
        data:
          $ref: "#/components/schemas/Data"
      description: An attachment to a case communication. The attachment consists of the
        file name and the content of the file.
    AttachmentId:
      type: string
    AttachmentDetails:
      type: object
      properties:
        attachmentId:
          $ref: "#/components/schemas/AttachmentId"
        fileName:
          $ref: "#/components/schemas/FileName"
      description: The file name and ID of an attachment to a case communication. You can
        use the ID to retrieve the attachment with the <a>DescribeAttachment</a>
        operation.
    ErrorMessage:
      type: string
    AttachmentSet:
      type: array
      items:
        $ref: "#/components/schemas/AttachmentDetails"
    BeforeTime:
      type: string
    Boolean:
      type: boolean
    DisplayId:
      type: string
    Subject:
      type: string
    Status:
      type: string
    ServiceCode:
      type: string
    CategoryCode:
      type: string
    SeverityCode:
      type: string
    SubmittedBy:
      type: string
    TimeCreated:
      type: string
    RecentCaseCommunications:
      type: object
      properties:
        communications:
          $ref: "#/components/schemas/CommunicationList"
        nextToken:
          $ref: "#/components/schemas/NextToken"
      description: The five most recent communications associated with the case.
    Language:
      type: string
    CaseDetails:
      type: object
      properties:
        caseId:
          $ref: "#/components/schemas/CaseId"
        displayId:
          $ref: "#/components/schemas/DisplayId"
        subject:
          $ref: "#/components/schemas/Subject"
        status:
          $ref: "#/components/schemas/Status"
        serviceCode:
          $ref: "#/components/schemas/ServiceCode"
        categoryCode:
          $ref: "#/components/schemas/CategoryCode"
        severityCode:
          $ref: "#/components/schemas/SeverityCode"
        submittedBy:
          $ref: "#/components/schemas/SubmittedBy"
        timeCreated:
          $ref: "#/components/schemas/TimeCreated"
        recentCommunications:
          $ref: "#/components/schemas/RecentCaseCommunications"
        ccEmailAddresses:
          $ref: "#/components/schemas/CcEmailAddressList"
        language:
          $ref: "#/components/schemas/Language"
      description: '<p>A JSON-formatted object that contains the metadata for a support
        case. It is contained the response from a <a>DescribeCases</a> request.
        <b>CaseDetails</b> contains the following fields:</p> <ul> <li> <p>
        <b>caseId.</b> The AWS Support case ID requested or returned in the
        call. The case ID is an alphanumeric string formatted as shown in this
        example: case-<i>12345678910-2013-c4c1d2bf33c5cf47</i>.</p> </li> <li>
        <p> <b>categoryCode.</b> The category of problem for the AWS Support
        case. Corresponds to the CategoryCode values returned by a call to
        <a>DescribeServices</a>.</p> </li> <li> <p> <b>displayId.</b> The
        identifier for the case on pages in the AWS Support Center.</p> </li>
        <li> <p> <b>language.</b> The ISO 639-1 code for the language in which
        AWS provides support. AWS Support currently supports English ("en") and
        Japanese ("ja"). Language parameters must be passed explicitly for
        operations that take them.</p> </li> <li> <p>
        <b>recentCommunications.</b> One or more <a>Communication</a> objects.
        Fields of these objects are <code>attachments</code>, <code>body</code>,
        <code>caseId</code>, <code>submittedBy</code>, and
        <code>timeCreated</code>.</p> </li> <li> <p> <b>nextToken.</b> A
        resumption point for pagination.</p> </li> <li> <p> <b>serviceCode.</b>
        The identifier for the AWS service that corresponds to the service code
        defined in the call to <a>DescribeServices</a>.</p> </li> <li> <p>
        <b>severityCode. </b>The severity code assigned to the case. Contains
        one of the values returned by the call to
        <a>DescribeSeverityLevels</a>.</p> </li> <li> <p> <b>status.</b> The
        status of the case in the AWS Support Center.</p> </li> <li> <p>
        <b>subject.</b> The subject line of the case.</p> </li> <li> <p>
        <b>submittedBy.</b> The email address of the account that submitted the
        case.</p> </li> <li> <p> <b>timeCreated.</b> The time the case was
        created, in ISO-8601 format.</p> </li> </ul>'
    CaseIdList:
      type: array
      items:
        $ref: "#/components/schemas/CaseId"
      minItems: 0
      maxItems: 100
    CaseList:
      type: array
      items:
        $ref: "#/components/schemas/CaseDetails"
    CaseStatus:
      type: string
    CategoryName:
      type: string
    Category:
      type: object
      properties:
        code:
          $ref: "#/components/schemas/CategoryCode"
        name:
          $ref: "#/components/schemas/CategoryName"
      description: A JSON-formatted name/value pair that represents the category name and
        category code of the problem, selected from the <a>DescribeServices</a>
        response for each AWS service.
    CategoryList:
      type: array
      items:
        $ref: "#/components/schemas/Category"
    CcEmailAddress:
      type: string
    Communication:
      type: object
      properties:
        caseId:
          $ref: "#/components/schemas/CaseId"
        body:
          $ref: "#/components/schemas/CommunicationBody"
        submittedBy:
          $ref: "#/components/schemas/SubmittedBy"
        timeCreated:
          $ref: "#/components/schemas/TimeCreated"
        attachmentSet:
          $ref: "#/components/schemas/AttachmentSet"
      description: A communication associated with an AWS Support case. The communication
        consists of the case ID, the message body, attachment information, the
        account email address, and the date and time of the communication.
    CommunicationList:
      type: array
      items:
        $ref: "#/components/schemas/Communication"
    IssueType:
      type: string
    IncludeResolvedCases:
      type: boolean
    NextToken:
      type: string
    MaxResults:
      type: integer
      minimum: 10
      maximum: 100
    IncludeCommunications:
      type: boolean
    ServiceCodeList:
      type: array
      items:
        $ref: "#/components/schemas/ServiceCode"
      minItems: 0
      maxItems: 100
    ServiceList:
      type: array
      items:
        $ref: "#/components/schemas/Service"
    SeverityLevelsList:
      type: array
      items:
        $ref: "#/components/schemas/SeverityLevel"
    StringList:
      type: array
      items:
        $ref: "#/components/schemas/String"
    TrustedAdvisorCheckRefreshStatusList:
      type: array
      items:
        $ref: "#/components/schemas/TrustedAdvisorCheckRefreshStatus"
    String:
      type: string
    TrustedAdvisorCheckResult:
      type: object
      required:
        - checkId
        - timestamp
        - status
        - resourcesSummary
        - categorySpecificSummary
        - flaggedResources
      properties:
        checkId:
          $ref: "#/components/schemas/String"
        timestamp:
          $ref: "#/components/schemas/String"
        status:
          $ref: "#/components/schemas/String"
        resourcesSummary:
          $ref: "#/components/schemas/TrustedAdvisorResourcesSummary"
        categorySpecificSummary:
          $ref: "#/components/schemas/TrustedAdvisorCategorySpecificSummary"
        flaggedResources:
          $ref: "#/components/schemas/TrustedAdvisorResourceDetailList"
      description: The results of a Trusted Advisor check returned by
        <a>DescribeTrustedAdvisorCheckResult</a>.
    TrustedAdvisorCheckSummaryList:
      type: array
      items:
        $ref: "#/components/schemas/TrustedAdvisorCheckSummary"
    TrustedAdvisorCheckList:
      type: array
      items:
        $ref: "#/components/schemas/TrustedAdvisorCheckDescription"
    Double:
      type: number
      format: double
    Long:
      type: integer
    TrustedAdvisorCheckRefreshStatus:
      type: object
      required:
        - checkId
        - status
        - millisUntilNextRefreshable
      properties:
        checkId:
          $ref: "#/components/schemas/String"
        status:
          $ref: "#/components/schemas/String"
        millisUntilNextRefreshable:
          $ref: "#/components/schemas/Long"
      description: The refresh status of a Trusted Advisor check.
    ServiceName:
      type: string
    Service:
      type: object
      properties:
        code:
          $ref: "#/components/schemas/ServiceCode"
        name:
          $ref: "#/components/schemas/ServiceName"
        categories:
          $ref: "#/components/schemas/CategoryList"
      description: "Information about an AWS service returned by the
        <a>DescribeServices</a> operation. "
    SeverityLevelCode:
      type: string
    SeverityLevelName:
      type: string
    SeverityLevel:
      type: object
      properties:
        code:
          $ref: "#/components/schemas/SeverityLevelCode"
        name:
          $ref: "#/components/schemas/SeverityLevelName"
      description: A code and name pair that represent a severity level that can be applied
        to a support case.
    TrustedAdvisorCostOptimizingSummary:
      type: object
      required:
        - estimatedMonthlySavings
        - estimatedPercentMonthlySavings
      properties:
        estimatedMonthlySavings:
          $ref: "#/components/schemas/Double"
        estimatedPercentMonthlySavings:
          $ref: "#/components/schemas/Double"
      description: The estimated cost savings that might be realized if the recommended
        actions are taken.
    TrustedAdvisorCategorySpecificSummary:
      type: object
      properties:
        costOptimizing:
          $ref: "#/components/schemas/TrustedAdvisorCostOptimizingSummary"
      description: The container for summary information that relates to the category of
        the Trusted Advisor check.
    TrustedAdvisorCheckDescription:
      type: object
      required:
        - id
        - name
        - description
        - category
        - metadata
      properties:
        id:
          $ref: "#/components/schemas/String"
        name:
          $ref: "#/components/schemas/String"
        description:
          $ref: "#/components/schemas/String"
        category:
          $ref: "#/components/schemas/String"
        metadata:
          $ref: "#/components/schemas/StringList"
      description: The description and metadata for a Trusted Advisor check.
    TrustedAdvisorResourcesSummary:
      type: object
      required:
        - resourcesProcessed
        - resourcesFlagged
        - resourcesIgnored
        - resourcesSuppressed
      properties:
        resourcesProcessed:
          $ref: "#/components/schemas/Long"
        resourcesFlagged:
          $ref: "#/components/schemas/Long"
        resourcesIgnored:
          $ref: "#/components/schemas/Long"
        resourcesSuppressed:
          $ref: "#/components/schemas/Long"
      description: "Details about AWS resources that were analyzed in a call to Trusted
        Advisor <a>DescribeTrustedAdvisorCheckSummaries</a>. "
    TrustedAdvisorResourceDetailList:
      type: array
      items:
        $ref: "#/components/schemas/TrustedAdvisorResourceDetail"
    TrustedAdvisorCheckSummary:
      type: object
      required:
        - checkId
        - timestamp
        - status
        - resourcesSummary
        - categorySpecificSummary
      properties:
        checkId:
          $ref: "#/components/schemas/String"
        timestamp:
          $ref: "#/components/schemas/String"
        status:
          $ref: "#/components/schemas/String"
        hasFlaggedResources:
          $ref: "#/components/schemas/Boolean"
        resourcesSummary:
          $ref: "#/components/schemas/TrustedAdvisorResourcesSummary"
        categorySpecificSummary:
          $ref: "#/components/schemas/TrustedAdvisorCategorySpecificSummary"
      description: A summary of a Trusted Advisor check result, including the alert status,
        last refresh, and number of resources examined.
    TrustedAdvisorResourceDetail:
      type: object
      required:
        - status
        - resourceId
        - metadata
      properties:
        status:
          $ref: "#/components/schemas/String"
        region:
          $ref: "#/components/schemas/String"
        resourceId:
          $ref: "#/components/schemas/String"
        isSuppressed:
          $ref: "#/components/schemas/Boolean"
        metadata:
          $ref: "#/components/schemas/StringList"
      description: Contains information about a resource identified by a Trusted Advisor
        check.
