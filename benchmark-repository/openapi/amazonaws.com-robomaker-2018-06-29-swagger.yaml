openapi: 3.0.0
info:
  version: 2018-06-29
  x-release: v4
  title: AWS RoboMaker
  description: This section provides documentation for the AWS RoboMaker API operations.
  x-logo:
    url: https://twitter.com/awscloud/profile_image?size=original
    backgroundColor: "#FFFFFF"
  termsOfService: https://aws.amazon.com/service-terms/
  contact:
    name: Mike Ralphson
    email: mike.ralphson@gmail.com
    url: https://github.com/mermade/aws2openapi
    x-twitter: PermittedSoc
  license:
    name: Apache 2.0 License
    url: http://www.apache.org/licenses/
  x-providerName: amazonaws.com
  x-serviceName: robomaker
  x-origin:
    - contentType: application/json
      url: https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/robomaker-2018-06-29.normal.json
      converter:
        url: https://github.com/mermade/aws2openapi
        version: 1.0.0
      x-apisguru-direct: true
  x-apiClientRegistration:
    url: https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct
  x-apisguru-categories:
    - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: https://docs.aws.amazon.com/robomaker/
x-hasEquivalentPaths: true
security:
  - hmac: []
paths:
  /batchDescribeSimulationJob:
    post:
      operationId: BatchDescribeSimulationJob
      description: Describes one or more simulation jobs.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BatchDescribeSimulationJobResponse"
        "480":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "481":
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterException"
        "482":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
        "483":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - jobs
              properties:
                jobs:
                  description: A list of Amazon Resource Names (ARNs) of simulation jobs to
                    describe.
                  type: array
                  items:
                    $ref: "#/components/schemas/Arn"
                  minItems: 1
                  maxItems: 100
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /cancelDeploymentJob:
    post:
      operationId: CancelDeploymentJob
      description: Cancels the specified deployment job.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CancelDeploymentJobResponse"
        "480":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "481":
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterException"
        "482":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
        "483":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - job
              properties:
                job:
                  description: The deployment job ARN to cancel.
                  type: string
                  pattern: arn:.*
                  minLength: 1
                  maxLength: 1224
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /cancelSimulationJob:
    post:
      operationId: CancelSimulationJob
      description: Cancels the specified simulation job.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CancelSimulationJobResponse"
        "480":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "481":
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterException"
        "482":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
        "483":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - job
              properties:
                job:
                  description: The simulation job ARN to cancel.
                  type: string
                  pattern: arn:.*
                  minLength: 1
                  maxLength: 1224
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /createDeploymentJob:
    post:
      operationId: CreateDeploymentJob
      description: <p>Deploys a specific version of a robot application to robots in a
        fleet.</p> <p>The robot application must have a numbered
        <code>applicationVersion</code> for consistency reasons. To create a new
        version, use <code>CreateRobotApplicationVersion</code> or see <a
        href="https://docs.aws.amazon.com/robomaker/latest/dg/create-robot-application-version.html">Creating
        a Robot Application Version</a>. </p> <note> <p>After 90 days,
        deployment jobs expire and will be deleted. They will no longer be
        accessible. </p> </note>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateDeploymentJobResponse"
        "480":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "481":
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterException"
        "482":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
        "483":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "484":
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
        "485":
          description: ConcurrentDeploymentException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConcurrentDeploymentException"
        "486":
          description: IdempotentParameterMismatchException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/IdempotentParameterMismatchException"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - clientRequestToken
                - fleet
                - deploymentApplicationConfigs
              properties:
                deploymentConfig:
                  description: Information about a deployment configuration.
                  type: object
                  properties:
                    concurrentDeploymentPercentage:
                      $ref: "#/components/schemas/Percentage"
                    failureThresholdPercentage:
                      $ref: "#/components/schemas/Percentage"
                    robotDeploymentTimeoutInSeconds:
                      $ref: "#/components/schemas/DeploymentTimeout"
                clientRequestToken:
                  description: Unique, case-sensitive identifier that you provide to ensure
                    the idempotency of the request.
                  type: string
                  pattern: "[a-zA-Z0-9_\\-=]*"
                  minLength: 1
                  maxLength: 64
                fleet:
                  description: The Amazon Resource Name (ARN) of the fleet to deploy.
                  type: string
                  pattern: arn:.*
                  minLength: 1
                  maxLength: 1224
                deploymentApplicationConfigs:
                  description: The deployment application configuration.
                  type: array
                  items:
                    $ref: "#/components/schemas/DeploymentApplicationConfig"
                  minItems: 1
                  maxItems: 1
                tags:
                  description: A map that contains tag keys and tag values that are
                    attached to the deployment job.
                  type: object
                  minProperties: 0
                  maxProperties: 50
                  additionalProperties:
                    $ref: "#/components/schemas/TagValue"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /createFleet:
    post:
      operationId: CreateFleet
      description: Creates a fleet, a logical group of robots running the same robot
        application.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateFleetResponse"
        "480":
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterException"
        "481":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
        "482":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "483":
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - name
              properties:
                name:
                  description: The name of the fleet.
                  type: string
                  pattern: "[a-zA-Z0-9_\\-]*"
                  minLength: 1
                  maxLength: 255
                tags:
                  description: A map that contains tag keys and tag values that are
                    attached to the fleet.
                  type: object
                  minProperties: 0
                  maxProperties: 50
                  additionalProperties:
                    $ref: "#/components/schemas/TagValue"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /createRobot:
    post:
      operationId: CreateRobot
      description: Creates a robot.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateRobotResponse"
        "480":
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterException"
        "481":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
        "482":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "483":
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
        "484":
          description: ResourceAlreadyExistsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceAlreadyExistsException"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - name
                - architecture
                - greengrassGroupId
              properties:
                name:
                  description: The name for the robot.
                  type: string
                  pattern: "[a-zA-Z0-9_\\-]*"
                  minLength: 1
                  maxLength: 255
                architecture:
                  description: The target architecture of the robot.
                  type: string
                  enum:
                    - X86_64
                    - ARM64
                    - ARMHF
                greengrassGroupId:
                  description: The Greengrass group id.
                  type: string
                  minLength: 1
                  maxLength: 1224
                tags:
                  description: A map that contains tag keys and tag values that are
                    attached to the robot.
                  type: object
                  minProperties: 0
                  maxProperties: 50
                  additionalProperties:
                    $ref: "#/components/schemas/TagValue"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /createRobotApplication:
    post:
      operationId: CreateRobotApplication
      description: "Creates a robot application. "
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateRobotApplicationResponse"
        "480":
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterException"
        "481":
          description: ResourceAlreadyExistsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceAlreadyExistsException"
        "482":
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
        "483":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "484":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
        "485":
          description: IdempotentParameterMismatchException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/IdempotentParameterMismatchException"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - name
                - sources
                - robotSoftwareSuite
              properties:
                name:
                  description: The name of the robot application.
                  type: string
                  pattern: "[a-zA-Z0-9_\\-]*"
                  minLength: 1
                  maxLength: 255
                sources:
                  description: The sources of the robot application.
                  type: array
                  items:
                    $ref: "#/components/schemas/SourceConfig"
                robotSoftwareSuite:
                  description: Information about a robot software suite.
                  type: object
                  properties:
                    name:
                      $ref: "#/components/schemas/RobotSoftwareSuiteType"
                    version:
                      $ref: "#/components/schemas/RobotSoftwareSuiteVersionType"
                tags:
                  description: A map that contains tag keys and tag values that are
                    attached to the robot application.
                  type: object
                  minProperties: 0
                  maxProperties: 50
                  additionalProperties:
                    $ref: "#/components/schemas/TagValue"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /createRobotApplicationVersion:
    post:
      operationId: CreateRobotApplicationVersion
      description: Creates a version of a robot application.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateRobotApplicationVersionResponse"
        "480":
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterException"
        "481":
          description: IdempotentParameterMismatchException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/IdempotentParameterMismatchException"
        "482":
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
        "483":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "484":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - application
              properties:
                application:
                  description: The application information for the robot application.
                  type: string
                  pattern: arn:.*
                  minLength: 1
                  maxLength: 1224
                currentRevisionId:
                  description: The current revision id for the robot application. If you
                    provide a value and it matches the latest revision ID, a new
                    version will be created.
                  type: string
                  pattern: "[a-zA-Z0-9_.\\-]*"
                  minLength: 1
                  maxLength: 40
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /createSimulationApplication:
    post:
      operationId: CreateSimulationApplication
      description: Creates a simulation application.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateSimulationApplicationResponse"
        "480":
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterException"
        "481":
          description: ResourceAlreadyExistsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceAlreadyExistsException"
        "482":
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
        "483":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "484":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
        "485":
          description: IdempotentParameterMismatchException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/IdempotentParameterMismatchException"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - name
                - sources
                - simulationSoftwareSuite
                - robotSoftwareSuite
              properties:
                name:
                  description: The name of the simulation application.
                  type: string
                  pattern: "[a-zA-Z0-9_\\-]*"
                  minLength: 1
                  maxLength: 255
                sources:
                  description: The sources of the simulation application.
                  type: array
                  items:
                    $ref: "#/components/schemas/SourceConfig"
                simulationSoftwareSuite:
                  description: Information about a simulation software suite.
                  type: object
                  properties:
                    name:
                      $ref: "#/components/schemas/SimulationSoftwareSuiteType"
                    version:
                      $ref: "#/components/schemas/SimulationSoftwareSuiteVersionType"
                robotSoftwareSuite:
                  description: Information about a robot software suite.
                  type: object
                  properties:
                    name:
                      $ref: "#/components/schemas/RobotSoftwareSuiteType"
                    version:
                      $ref: "#/components/schemas/RobotSoftwareSuiteVersionType"
                renderingEngine:
                  description: Information about a rendering engine.
                  type: object
                  properties:
                    name:
                      $ref: "#/components/schemas/RenderingEngineType"
                    version:
                      $ref: "#/components/schemas/RenderingEngineVersionType"
                tags:
                  description: A map that contains tag keys and tag values that are
                    attached to the simulation application.
                  type: object
                  minProperties: 0
                  maxProperties: 50
                  additionalProperties:
                    $ref: "#/components/schemas/TagValue"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /createSimulationApplicationVersion:
    post:
      operationId: CreateSimulationApplicationVersion
      description: Creates a simulation application with a specific revision id.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateSimulationApplicationVersionRespo\
                  nse"
        "480":
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterException"
        "481":
          description: IdempotentParameterMismatchException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/IdempotentParameterMismatchException"
        "482":
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
        "483":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "484":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - application
              properties:
                application:
                  description: The application information for the simulation application.
                  type: string
                  pattern: arn:.*
                  minLength: 1
                  maxLength: 1224
                currentRevisionId:
                  description: The current revision id for the simulation application. If
                    you provide a value and it matches the latest revision ID, a
                    new version will be created.
                  type: string
                  pattern: "[a-zA-Z0-9_.\\-]*"
                  minLength: 1
                  maxLength: 40
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /createSimulationJob:
    post:
      operationId: CreateSimulationJob
      description: <p>Creates a simulation job.</p> <note> <p>After 90 days, simulation
        jobs expire and will be deleted. They will no longer be accessible. </p>
        </note>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateSimulationJobResponse"
        "480":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "481":
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterException"
        "482":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
        "483":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "484":
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
        "485":
          description: IdempotentParameterMismatchException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/IdempotentParameterMismatchException"
        "486":
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceUnavailableException"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - loggingConfig
                - maxJobDurationInSeconds
                - iamRole
                - vpcConfig
              properties:
                clientRequestToken:
                  description: Unique, case-sensitive identifier that you provide to ensure
                    the idempotency of the request.
                  type: string
                  pattern: "[a-zA-Z0-9_\\-=]*"
                  minLength: 1
                  maxLength: 64
                outputLocation:
                  description: The output location.
                  type: object
                  properties:
                    s3Bucket:
                      $ref: "#/components/schemas/S3Bucket"
                    s3Prefix:
                      $ref: "#/components/schemas/S3Key"
                loggingConfig:
                  description: The logging configuration.
                  type: object
                  properties:
                    recordAllRosTopics:
                      $ref: "#/components/schemas/BoxedBoolean"
                maxJobDurationInSeconds:
                  description: The maximum simulation job duration in seconds (up to 14
                    days or 1,209,600 seconds. When
                    <code>maxJobDurationInSeconds</code> is reached, the
                    simulation job will status will transition to
                    <code>Completed</code>.
                  type: integer
                iamRole:
                  description: "The IAM role name that allows the simulation instance to
                    call the AWS APIs that are specified in its associated
                    policies on your behalf. This is how credentials are passed
                    in to your simulation job. "
                  type: string
                  pattern: arn:aws:iam::\w+:role/.*
                  minLength: 1
                  maxLength: 255
                failureBehavior:
                  description: <p>The failure behavior the simulation job.</p> <dl>
                    <dt>Continue</dt> <dd> <p>Restart the simulation job in the
                    same host instance.</p> </dd> <dt>Fail</dt> <dd> <p>Stop the
                    simulation job and terminate the instance.</p> </dd> </dl>
                  type: string
                  enum:
                    - Fail
                    - Continue
                robotApplications:
                  description: The robot application to use in the simulation job.
                  type: array
                  items:
                    $ref: "#/components/schemas/RobotApplicationConfig"
                  minItems: 1
                  maxItems: 1
                simulationApplications:
                  description: The simulation application to use in the simulation job.
                  type: array
                  items:
                    $ref: "#/components/schemas/SimulationApplicationConfig"
                  minItems: 1
                  maxItems: 1
                dataSources:
                  description: <p>The data sources for the simulation job.</p> <note>
                    <p>There is a limit of 100 files and a combined size of 25GB
                    for all <code>DataSourceConfig</code> objects. </p> </note>
                  type: array
                  items:
                    $ref: "#/components/schemas/DataSourceConfig"
                  minItems: 1
                  maxItems: 5
                tags:
                  description: A map that contains tag keys and tag values that are
                    attached to the simulation job.
                  type: object
                  minProperties: 0
                  maxProperties: 50
                  additionalProperties:
                    $ref: "#/components/schemas/TagValue"
                vpcConfig:
                  description: If your simulation job accesses resources in a VPC, you
                    provide this parameter identifying the list of security
                    group IDs and subnet IDs. These must belong to the same VPC.
                    You must provide at least one security group and two subnet
                    IDs.
                  type: object
                  properties:
                    subnets:
                      $ref: "#/components/schemas/Subnets"
                    securityGroups:
                      $ref: "#/components/schemas/SecurityGroups"
                    assignPublicIp:
                      $ref: "#/components/schemas/Boolean"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /deleteFleet:
    post:
      operationId: DeleteFleet
      description: Deletes a fleet.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteFleetResponse"
        "480":
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterException"
        "481":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
        "482":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
      requestBody:
        $ref: "#/components/requestBodies/DeleteFleetBody"
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /deleteRobot:
    post:
      operationId: DeleteRobot
      description: Deletes a robot.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteRobotResponse"
        "480":
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterException"
        "481":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
        "482":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - robot
              properties:
                robot:
                  description: The Amazon Resource Name (ARN) of the robot.
                  type: string
                  pattern: arn:.*
                  minLength: 1
                  maxLength: 1224
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /deleteRobotApplication:
    post:
      operationId: DeleteRobotApplication
      description: Deletes a robot application.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteRobotApplicationResponse"
        "480":
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterException"
        "481":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "482":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - application
              properties:
                application:
                  description: The Amazon Resource Name (ARN) of the the robot application.
                  type: string
                  pattern: arn:.*
                  minLength: 1
                  maxLength: 1224
                applicationVersion:
                  description: The version of the robot application to delete.
                  type: string
                  pattern: (\$LATEST)|[0-9]*
                  minLength: 1
                  maxLength: 255
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /deleteSimulationApplication:
    post:
      operationId: DeleteSimulationApplication
      description: Deletes a simulation application.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteSimulationApplicationResponse"
        "480":
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterException"
        "481":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "482":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - application
              properties:
                application:
                  description: The application information for the simulation application
                    to delete.
                  type: string
                  pattern: arn:.*
                  minLength: 1
                  maxLength: 1224
                applicationVersion:
                  description: The version of the simulation application to delete.
                  type: string
                  pattern: (\$LATEST)|[0-9]*
                  minLength: 1
                  maxLength: 255
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /deregisterRobot:
    post:
      operationId: DeregisterRobot
      description: Deregisters a robot.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeregisterRobotResponse"
        "480":
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterException"
        "481":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
        "482":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "483":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
      requestBody:
        $ref: "#/components/requestBodies/DeregisterRobotBody"
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /describeDeploymentJob:
    post:
      operationId: DescribeDeploymentJob
      description: Describes a deployment job.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeDeploymentJobResponse"
        "480":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "481":
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterException"
        "482":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
        "483":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - job
              properties:
                job:
                  description: The Amazon Resource Name (ARN) of the deployment job.
                  type: string
                  pattern: arn:.*
                  minLength: 1
                  maxLength: 1224
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /describeFleet:
    post:
      operationId: DescribeFleet
      description: Describes a fleet.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeFleetResponse"
        "480":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "481":
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterException"
        "482":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
        "483":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
      requestBody:
        $ref: "#/components/requestBodies/DeleteFleetBody"
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /describeRobot:
    post:
      operationId: DescribeRobot
      description: Describes a robot.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeRobotResponse"
        "480":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "481":
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterException"
        "482":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
        "483":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - robot
              properties:
                robot:
                  description: The Amazon Resource Name (ARN) of the robot to be described.
                  type: string
                  pattern: arn:.*
                  minLength: 1
                  maxLength: 1224
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /describeRobotApplication:
    post:
      operationId: DescribeRobotApplication
      description: Describes a robot application.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeRobotApplicationResponse"
        "480":
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterException"
        "481":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "482":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "483":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - application
              properties:
                application:
                  description: The Amazon Resource Name (ARN) of the robot application.
                  type: string
                  pattern: arn:.*
                  minLength: 1
                  maxLength: 1224
                applicationVersion:
                  description: The version of the robot application to describe.
                  type: string
                  pattern: (\$LATEST)|[0-9]*
                  minLength: 1
                  maxLength: 255
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /describeSimulationApplication:
    post:
      operationId: DescribeSimulationApplication
      description: Describes a simulation application.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeSimulationApplicationResponse"
        "480":
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterException"
        "481":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "482":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "483":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - application
              properties:
                application:
                  description: The application information for the simulation application.
                  type: string
                  pattern: arn:.*
                  minLength: 1
                  maxLength: 1224
                applicationVersion:
                  description: The version of the simulation application to describe.
                  type: string
                  pattern: (\$LATEST)|[0-9]*
                  minLength: 1
                  maxLength: 255
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /describeSimulationJob:
    post:
      operationId: DescribeSimulationJob
      description: Describes a simulation job.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeSimulationJobResponse"
        "480":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "481":
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterException"
        "482":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
        "483":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - job
              properties:
                job:
                  description: The Amazon Resource Name (ARN) of the simulation job to be
                    described.
                  type: string
                  pattern: arn:.*
                  minLength: 1
                  maxLength: 1224
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /listDeploymentJobs:
    post:
      operationId: ListDeploymentJobs
      description: <p>Returns a list of deployment jobs for a fleet. You can optionally
        provide filters to retrieve specific deployment jobs. </p> <note> <p>
        </p> </note>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListDeploymentJobsResponse"
        "480":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "481":
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterException"
        "482":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
        "483":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
      parameters:
        - name: maxResults
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: nextToken
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                filters:
                  description: <p>Optional filters to limit results.</p> <p>The filter
                    names <code>status</code> and <code>fleetName</code> are
                    supported. When filtering, you must use the complete value
                    of the filtered item. You can use up to three filters, but
                    they must be for the same named item. For example, if you
                    are looking for items with the status
                    <code>InProgress</code> or the status
                    <code>Pending</code>.</p>
                  type: array
                  items:
                    $ref: "#/components/schemas/Filter"
                  minItems: 1
                  maxItems: 1
                nextToken:
                  description: <p>The <code>nextToken</code> value returned from a previous
                    paginated <code>ListDeploymentJobs</code> request where
                    <code>maxResults</code> was used and the results exceeded
                    the value of that parameter. Pagination continues from the
                    end of the previous results that returned the
                    <code>nextToken</code> value. </p> <note> <p>This token
                    should be treated as an opaque identifier that is only used
                    to retrieve the next items in a list and not for other
                    programmatic purposes.</p> </note>
                  type: string
                  pattern: "[a-zA-Z0-9_.\\-\\/+=]*"
                  minLength: 1
                  maxLength: 2048
                maxResults:
                  description: "The maximum number of deployment job results returned by
                    <code>ListDeploymentJobs</code> in paginated output. When
                    this parameter is used, <code>ListDeploymentJobs</code> only
                    returns <code>maxResults</code> results in a single page
                    along with a <code>nextToken</code> response element. The
                    remaining results of the initial request can be seen by
                    sending another <code>ListDeploymentJobs</code> request with
                    the returned <code>nextToken</code> value. This value can be
                    between 1 and 100. If this parameter is not used, then
                    <code>ListDeploymentJobs</code> returns up to 100 results
                    and a <code>nextToken</code> value if applicable. "
                  type: integer
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /listFleets:
    post:
      operationId: ListFleets
      description: "Returns a list of fleets. You can optionally provide filters to
        retrieve specific fleets. "
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListFleetsResponse"
        "480":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "481":
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterException"
        "482":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
        "483":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
      parameters:
        - name: maxResults
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: nextToken
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                nextToken:
                  description: <p>The <code>nextToken</code> value returned from a previous
                    paginated <code>ListFleets</code> request where
                    <code>maxResults</code> was used and the results exceeded
                    the value of that parameter. Pagination continues from the
                    end of the previous results that returned the
                    <code>nextToken</code> value. </p> <note> <p>This token
                    should be treated as an opaque identifier that is only used
                    to retrieve the next items in a list and not for other
                    programmatic purposes.</p> </note>
                  type: string
                  pattern: "[a-zA-Z0-9_.\\-\\/+=]*"
                  minLength: 1
                  maxLength: 2048
                maxResults:
                  description: "The maximum number of deployment job results returned by
                    <code>ListFleets</code> in paginated output. When this
                    parameter is used, <code>ListFleets</code> only returns
                    <code>maxResults</code> results in a single page along with
                    a <code>nextToken</code> response element. The remaining
                    results of the initial request can be seen by sending
                    another <code>ListFleets</code> request with the returned
                    <code>nextToken</code> value. This value can be between 1
                    and 100. If this parameter is not used, then
                    <code>ListFleets</code> returns up to 100 results and a
                    <code>nextToken</code> value if applicable. "
                  type: integer
                filters:
                  description: <p>Optional filters to limit results.</p> <p>The filter name
                    <code>name</code> is supported. When filtering, you must use
                    the complete value of the filtered item. You can use up to
                    three filters.</p>
                  type: array
                  items:
                    $ref: "#/components/schemas/Filter"
                  minItems: 1
                  maxItems: 1
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /listRobotApplications:
    post:
      operationId: ListRobotApplications
      description: Returns a list of robot application. You can optionally provide filters
        to retrieve specific robot applications.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListRobotApplicationsResponse"
        "480":
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterException"
        "481":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "482":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      parameters:
        - name: maxResults
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: nextToken
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                versionQualifier:
                  description: The version qualifier of the robot application.
                  type: string
                  pattern: ALL
                nextToken:
                  description: <p>The <code>nextToken</code> value returned from a previous
                    paginated <code>ListRobotApplications</code> request where
                    <code>maxResults</code> was used and the results exceeded
                    the value of that parameter. Pagination continues from the
                    end of the previous results that returned the
                    <code>nextToken</code> value. </p> <note> <p>This token
                    should be treated as an opaque identifier that is only used
                    to retrieve the next items in a list and not for other
                    programmatic purposes.</p> </note>
                  type: string
                  pattern: "[a-zA-Z0-9_.\\-\\/+=]*"
                  minLength: 1
                  maxLength: 2048
                maxResults:
                  description: "The maximum number of deployment job results returned by
                    <code>ListRobotApplications</code> in paginated output. When
                    this parameter is used, <code>ListRobotApplications</code>
                    only returns <code>maxResults</code> results in a single
                    page along with a <code>nextToken</code> response element.
                    The remaining results of the initial request can be seen by
                    sending another <code>ListRobotApplications</code> request
                    with the returned <code>nextToken</code> value. This value
                    can be between 1 and 100. If this parameter is not used,
                    then <code>ListRobotApplications</code> returns up to 100
                    results and a <code>nextToken</code> value if applicable. "
                  type: integer
                filters:
                  description: <p>Optional filters to limit results.</p> <p>The filter name
                    <code>name</code> is supported. When filtering, you must use
                    the complete value of the filtered item. You can use up to
                    three filters.</p>
                  type: array
                  items:
                    $ref: "#/components/schemas/Filter"
                  minItems: 1
                  maxItems: 1
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /listRobots:
    post:
      operationId: ListRobots
      description: Returns a list of robots. You can optionally provide filters to retrieve
        specific robots.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListRobotsResponse"
        "480":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "481":
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterException"
        "482":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
        "483":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
      parameters:
        - name: maxResults
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: nextToken
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                nextToken:
                  description: <p>The <code>nextToken</code> value returned from a previous
                    paginated <code>ListRobots</code> request where
                    <code>maxResults</code> was used and the results exceeded
                    the value of that parameter. Pagination continues from the
                    end of the previous results that returned the
                    <code>nextToken</code> value. </p> <note> <p>This token
                    should be treated as an opaque identifier that is only used
                    to retrieve the next items in a list and not for other
                    programmatic purposes.</p> </note>
                  type: string
                  pattern: "[a-zA-Z0-9_.\\-\\/+=]*"
                  minLength: 1
                  maxLength: 2048
                maxResults:
                  description: "The maximum number of deployment job results returned by
                    <code>ListRobots</code> in paginated output. When this
                    parameter is used, <code>ListRobots</code> only returns
                    <code>maxResults</code> results in a single page along with
                    a <code>nextToken</code> response element. The remaining
                    results of the initial request can be seen by sending
                    another <code>ListRobots</code> request with the returned
                    <code>nextToken</code> value. This value can be between 1
                    and 100. If this parameter is not used, then
                    <code>ListRobots</code> returns up to 100 results and a
                    <code>nextToken</code> value if applicable. "
                  type: integer
                filters:
                  description: <p>Optional filters to limit results.</p> <p>The filter
                    names <code>status</code> and <code>fleetName</code> are
                    supported. When filtering, you must use the complete value
                    of the filtered item. You can use up to three filters, but
                    they must be for the same named item. For example, if you
                    are looking for items with the status
                    <code>Registered</code> or the status
                    <code>Available</code>.</p>
                  type: array
                  items:
                    $ref: "#/components/schemas/Filter"
                  minItems: 1
                  maxItems: 1
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /listSimulationApplications:
    post:
      operationId: ListSimulationApplications
      description: "Returns a list of simulation applications. You can optionally provide
        filters to retrieve specific simulation applications. "
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListSimulationApplicationsResponse"
        "480":
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterException"
        "481":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "482":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      parameters:
        - name: maxResults
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: nextToken
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                versionQualifier:
                  description: The version qualifier of the simulation application.
                  type: string
                  pattern: ALL
                nextToken:
                  description: <p>The <code>nextToken</code> value returned from a previous
                    paginated <code>ListSimulationApplications</code> request
                    where <code>maxResults</code> was used and the results
                    exceeded the value of that parameter. Pagination continues
                    from the end of the previous results that returned the
                    <code>nextToken</code> value. </p> <note> <p>This token
                    should be treated as an opaque identifier that is only used
                    to retrieve the next items in a list and not for other
                    programmatic purposes.</p> </note>
                  type: string
                  pattern: "[a-zA-Z0-9_.\\-\\/+=]*"
                  minLength: 1
                  maxLength: 2048
                maxResults:
                  description: "The maximum number of deployment job results returned by
                    <code>ListSimulationApplications</code> in paginated output.
                    When this parameter is used,
                    <code>ListSimulationApplications</code> only returns
                    <code>maxResults</code> results in a single page along with
                    a <code>nextToken</code> response element. The remaining
                    results of the initial request can be seen by sending
                    another <code>ListSimulationApplications</code> request with
                    the returned <code>nextToken</code> value. This value can be
                    between 1 and 100. If this parameter is not used, then
                    <code>ListSimulationApplications</code> returns up to 100
                    results and a <code>nextToken</code> value if applicable. "
                  type: integer
                filters:
                  description: <p>Optional list of filters to limit results.</p> <p>The
                    filter name <code>name</code> is supported. When filtering,
                    you must use the complete value of the filtered item. You
                    can use up to three filters.</p>
                  type: array
                  items:
                    $ref: "#/components/schemas/Filter"
                  minItems: 1
                  maxItems: 1
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /listSimulationJobs:
    post:
      operationId: ListSimulationJobs
      description: "Returns a list of simulation jobs. You can optionally provide filters
        to retrieve specific simulation jobs. "
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListSimulationJobsResponse"
        "480":
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterException"
        "481":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
        "482":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
      parameters:
        - name: maxResults
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: nextToken
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                nextToken:
                  description: <p>The <code>nextToken</code> value returned from a previous
                    paginated <code>ListSimulationJobs</code> request where
                    <code>maxResults</code> was used and the results exceeded
                    the value of that parameter. Pagination continues from the
                    end of the previous results that returned the
                    <code>nextToken</code> value. </p> <note> <p>This token
                    should be treated as an opaque identifier that is only used
                    to retrieve the next items in a list and not for other
                    programmatic purposes.</p> </note>
                  type: string
                  pattern: "[a-zA-Z0-9_.\\-\\/+=]*"
                  minLength: 1
                  maxLength: 2048
                maxResults:
                  description: "The maximum number of deployment job results returned by
                    <code>ListSimulationJobs</code> in paginated output. When
                    this parameter is used, <code>ListSimulationJobs</code> only
                    returns <code>maxResults</code> results in a single page
                    along with a <code>nextToken</code> response element. The
                    remaining results of the initial request can be seen by
                    sending another <code>ListSimulationJobs</code> request with
                    the returned <code>nextToken</code> value. This value can be
                    between 1 and 100. If this parameter is not used, then
                    <code>ListSimulationJobs</code> returns up to 100 results
                    and a <code>nextToken</code> value if applicable. "
                  type: integer
                filters:
                  description: <p>Optional filters to limit results.</p> <p>The filter
                    names <code>status</code> and
                    <code>simulationApplicationName</code> and
                    <code>robotApplicationName</code> are supported. When
                    filtering, you must use the complete value of the filtered
                    item. You can use up to three filters, but they must be for
                    the same named item. For example, if you are looking for
                    items with the status <code>Preparing</code> or the status
                    <code>Running</code>.</p>
                  type: array
                  items:
                    $ref: "#/components/schemas/Filter"
                  minItems: 1
                  maxItems: 1
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  "/tags/{resourceArn}":
    get:
      operationId: ListTagsForResource
      description: Lists all tags on a AWS RoboMaker resource.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListTagsForResourceResponse"
        "480":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
        "481":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "482":
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterException"
        "483":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
      parameters:
        - name: resourceArn
          in: path
          required: true
          description: The AWS RoboMaker Amazon Resource Name (ARN) with tags to be listed.
          schema:
            type: string
            minLength: 1
            maxLength: 1224
            pattern: arn:.*
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      operationId: TagResource
      description: <p>Adds or edits tags for a AWS RoboMaker resource.</p> <p>Each tag
        consists of a tag key and a tag value. Tag keys and tag values are both
        required, but tag values can be empty strings. </p> <p>For information
        about the rules that apply to tag keys and tag values, see <a
        href="https://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/allocation-tag-restrictions.html">User-Defined
        Tag Restrictions</a> in the <i>AWS Billing and Cost Management User
        Guide</i>. </p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TagResourceResponse"
        "480":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
        "481":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "482":
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterException"
        "483":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
      parameters:
        - name: resourceArn
          in: path
          required: true
          description: The Amazon Resource Name (ARN) of the AWS RoboMaker resource you are
            tagging.
          schema:
            type: string
            minLength: 1
            maxLength: 1224
            pattern: arn:.*
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - tags
              properties:
                tags:
                  description: A map that contains tag keys and tag values that are
                    attached to the resource.
                  type: object
                  minProperties: 0
                  maxProperties: 50
                  additionalProperties:
                    $ref: "#/components/schemas/TagValue"
        required: true
  /registerRobot:
    post:
      operationId: RegisterRobot
      description: Registers a robot with a fleet.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RegisterRobotResponse"
        "480":
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterException"
        "481":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
        "482":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "483":
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
        "484":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
      requestBody:
        $ref: "#/components/requestBodies/DeregisterRobotBody"
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /restartSimulationJob:
    post:
      operationId: RestartSimulationJob
      description: Restarts a running simulation job.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestartSimulationJobResponse"
        "480":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "481":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "482":
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
        "483":
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterException"
        "484":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - job
              properties:
                job:
                  description: The Amazon Resource Name (ARN) of the simulation job.
                  type: string
                  pattern: arn:.*
                  minLength: 1
                  maxLength: 1224
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /syncDeploymentJob:
    post:
      operationId: SyncDeploymentJob
      description: Syncrhonizes robots in a fleet to the latest deployment. This is helpful
        if robots were added after a deployment.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SyncDeploymentJobResponse"
        "480":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "481":
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterException"
        "482":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
        "483":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "484":
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
        "485":
          description: ConcurrentDeploymentException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConcurrentDeploymentException"
        "486":
          description: IdempotentParameterMismatchException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/IdempotentParameterMismatchException"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - clientRequestToken
                - fleet
              properties:
                clientRequestToken:
                  description: Unique, case-sensitive identifier that you provide to ensure
                    the idempotency of the request.
                  type: string
                  pattern: "[a-zA-Z0-9_\\-=]*"
                  minLength: 1
                  maxLength: 64
                fleet:
                  description: The target fleet for the synchronization.
                  type: string
                  pattern: arn:.*
                  minLength: 1
                  maxLength: 1224
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  "/tags/{resourceArn}#tagKeys":
    delete:
      operationId: UntagResource
      description: <p>Removes the specified tags from the specified AWS RoboMaker
        resource.</p> <p>To remove a tag, specify the tag key. To change the tag
        value of an existing tag key, use <a
        href="https://docs.aws.amazon.com/robomaker/latest/dg/API_TagResource.html">
        <code>TagResource</code> </a>. </p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UntagResourceResponse"
        "480":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
        "481":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "482":
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterException"
        "483":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
      parameters:
        - name: resourceArn
          in: path
          required: true
          description: The Amazon Resource Name (ARN) of the AWS RoboMaker resource you are
            removing tags.
          schema:
            type: string
            minLength: 1
            maxLength: 1224
            pattern: arn:.*
        - name: tagKeys
          in: query
          required: true
          description: A map that contains tag keys and tag values that will be unattached
            from the resource.
          schema:
            type: array
            items:
              type: string
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /updateRobotApplication:
    post:
      operationId: UpdateRobotApplication
      description: Updates a robot application.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateRobotApplicationResponse"
        "480":
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterException"
        "481":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "482":
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
        "483":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "484":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - application
                - sources
                - robotSoftwareSuite
              properties:
                application:
                  description: The application information for the robot application.
                  type: string
                  pattern: arn:.*
                  minLength: 1
                  maxLength: 1224
                sources:
                  description: The sources of the robot application.
                  type: array
                  items:
                    $ref: "#/components/schemas/SourceConfig"
                robotSoftwareSuite:
                  description: Information about a robot software suite.
                  type: object
                  properties:
                    name:
                      $ref: "#/components/schemas/RobotSoftwareSuiteType"
                    version:
                      $ref: "#/components/schemas/RobotSoftwareSuiteVersionType"
                currentRevisionId:
                  description: The revision id for the robot application.
                  type: string
                  pattern: "[a-zA-Z0-9_.\\-]*"
                  minLength: 1
                  maxLength: 40
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /updateSimulationApplication:
    post:
      operationId: UpdateSimulationApplication
      description: Updates a simulation application.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateSimulationApplicationResponse"
        "480":
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterException"
        "481":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "482":
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
        "483":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "484":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - application
                - sources
                - simulationSoftwareSuite
                - robotSoftwareSuite
              properties:
                application:
                  description: The application information for the simulation application.
                  type: string
                  pattern: arn:.*
                  minLength: 1
                  maxLength: 1224
                sources:
                  description: The sources of the simulation application.
                  type: array
                  items:
                    $ref: "#/components/schemas/SourceConfig"
                simulationSoftwareSuite:
                  description: Information about a simulation software suite.
                  type: object
                  properties:
                    name:
                      $ref: "#/components/schemas/SimulationSoftwareSuiteType"
                    version:
                      $ref: "#/components/schemas/SimulationSoftwareSuiteVersionType"
                robotSoftwareSuite:
                  description: Information about a robot software suite.
                  type: object
                  properties:
                    name:
                      $ref: "#/components/schemas/RobotSoftwareSuiteType"
                    version:
                      $ref: "#/components/schemas/RobotSoftwareSuiteVersionType"
                renderingEngine:
                  description: Information about a rendering engine.
                  type: object
                  properties:
                    name:
                      $ref: "#/components/schemas/RenderingEngineType"
                    version:
                      $ref: "#/components/schemas/RenderingEngineVersionType"
                currentRevisionId:
                  description: The revision id for the robot application.
                  type: string
                  pattern: "[a-zA-Z0-9_.\\-]*"
                  minLength: 1
                  maxLength: 40
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
servers:
  - url: http://robomaker.{region}.amazonaws.com
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-south-1
          - sa-east-1
        default: us-east-1
    description: The RoboMaker multi-region endpoint
  - url: https://robomaker.{region}.amazonaws.com
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-south-1
          - sa-east-1
        default: us-east-1
    description: The RoboMaker multi-region endpoint
  - url: http://robomaker.{region}.amazonaws.com.cn
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The RoboMaker endpoint for China (Beijing) and China (Ningxia)
  - url: https://robomaker.{region}.amazonaws.com.cn
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The RoboMaker endpoint for China (Beijing) and China (Ningxia)
components:
  parameters:
    X-Amz-Content-Sha256:
      name: X-Amz-Content-Sha256
      in: header
      required: false
      schema:
        type: string
    X-Amz-Date:
      name: X-Amz-Date
      in: header
      required: false
      schema:
        type: string
    X-Amz-Algorithm:
      name: X-Amz-Algorithm
      in: header
      required: false
      schema:
        type: string
    X-Amz-Credential:
      name: X-Amz-Credential
      in: header
      required: false
      schema:
        type: string
    X-Amz-Security-Token:
      name: X-Amz-Security-Token
      in: header
      required: false
      schema:
        type: string
    X-Amz-Signature:
      name: X-Amz-Signature
      in: header
      required: false
      schema:
        type: string
    X-Amz-SignedHeaders:
      name: X-Amz-SignedHeaders
      in: header
      required: false
      schema:
        type: string
  requestBodies:
    DeleteFleetBody:
      content:
        application/json:
          schema:
            type: object
            required:
              - fleet
            properties:
              fleet:
                description: The Amazon Resource Name (ARN) of the fleet.
                type: string
                pattern: arn:.*
                minLength: 1
                maxLength: 1224
      required: true
    DeregisterRobotBody:
      content:
        application/json:
          schema:
            type: object
            required:
              - fleet
              - robot
            properties:
              fleet:
                description: The Amazon Resource Name (ARN) of the fleet.
                type: string
                pattern: arn:.*
                minLength: 1
                maxLength: 1224
              robot:
                description: The Amazon Resource Name (ARN) of the robot.
                type: string
                pattern: arn:.*
                minLength: 1
                maxLength: 1224
      required: true
  securitySchemes:
    hmac:
      type: apiKey
      name: Authorization
      in: header
      description: Amazon Signature authorization v4
      x-amazon-apigateway-authtype: awsSigv4
  schemas:
    BatchDescribeSimulationJobResponse:
      type: object
      properties:
        jobs:
          $ref: "#/components/schemas/SimulationJobs"
        unprocessedJobs:
          $ref: "#/components/schemas/Arns"
    Arn:
      type: string
      pattern: arn:.*
      minLength: 1
      maxLength: 1224
    ResourceNotFoundException: {}
    InvalidParameterException: {}
    InternalServerException: {}
    ThrottlingException: {}
    CancelDeploymentJobResponse:
      type: object
      properties: {}
    CancelSimulationJobResponse:
      type: object
      properties: {}
    CreateDeploymentJobResponse:
      type: object
      properties:
        arn:
          $ref: "#/components/schemas/Arn"
        fleet:
          $ref: "#/components/schemas/Arn"
        status:
          $ref: "#/components/schemas/DeploymentStatus"
        deploymentApplicationConfigs:
          $ref: "#/components/schemas/DeploymentApplicationConfigs"
        failureReason:
          $ref: "#/components/schemas/GenericString"
        failureCode:
          $ref: "#/components/schemas/DeploymentJobErrorCode"
        createdAt:
          $ref: "#/components/schemas/CreatedAt"
        deploymentConfig:
          $ref: "#/components/schemas/DeploymentConfig"
        tags:
          $ref: "#/components/schemas/TagMap"
    Percentage:
      type: integer
      minimum: 1
      maximum: 100
    DeploymentTimeout:
      type: integer
    DeploymentApplicationConfig:
      type: object
      required:
        - application
        - applicationVersion
        - launchConfig
      properties:
        application:
          $ref: "#/components/schemas/Arn"
        applicationVersion:
          $ref: "#/components/schemas/DeploymentVersion"
        launchConfig:
          $ref: "#/components/schemas/DeploymentLaunchConfig"
      description: Information about a deployment application configuration.
    TagValue:
      type: string
      pattern: "[a-zA-Z0-9 _.\\-\\/+=:]*"
      minLength: 0
      maxLength: 256
    LimitExceededException: {}
    ConcurrentDeploymentException: {}
    IdempotentParameterMismatchException: {}
    CreateFleetResponse:
      type: object
      properties:
        arn:
          $ref: "#/components/schemas/Arn"
        name:
          $ref: "#/components/schemas/Name"
        createdAt:
          $ref: "#/components/schemas/CreatedAt"
        tags:
          $ref: "#/components/schemas/TagMap"
    CreateRobotResponse:
      type: object
      properties:
        arn:
          $ref: "#/components/schemas/Arn"
        name:
          $ref: "#/components/schemas/Name"
        createdAt:
          $ref: "#/components/schemas/CreatedAt"
        greengrassGroupId:
          $ref: "#/components/schemas/Id"
        architecture:
          $ref: "#/components/schemas/Architecture"
        tags:
          $ref: "#/components/schemas/TagMap"
    ResourceAlreadyExistsException: {}
    CreateRobotApplicationResponse:
      type: object
      properties:
        arn:
          $ref: "#/components/schemas/Arn"
        name:
          $ref: "#/components/schemas/Name"
        version:
          $ref: "#/components/schemas/Version"
        sources:
          $ref: "#/components/schemas/Sources"
        robotSoftwareSuite:
          $ref: "#/components/schemas/RobotSoftwareSuite"
        lastUpdatedAt:
          $ref: "#/components/schemas/LastUpdatedAt"
        revisionId:
          $ref: "#/components/schemas/RevisionId"
        tags:
          $ref: "#/components/schemas/TagMap"
    SourceConfig:
      type: object
      properties:
        s3Bucket:
          $ref: "#/components/schemas/S3Bucket"
        s3Key:
          $ref: "#/components/schemas/S3Key"
        architecture:
          $ref: "#/components/schemas/Architecture"
      description: Information about a source configuration.
    RobotSoftwareSuiteType:
      type: string
      enum:
        - ROS
    RobotSoftwareSuiteVersionType:
      type: string
      enum:
        - Kinetic
        - Melodic
    CreateRobotApplicationVersionResponse:
      type: object
      properties:
        arn:
          $ref: "#/components/schemas/Arn"
        name:
          $ref: "#/components/schemas/Name"
        version:
          $ref: "#/components/schemas/Version"
        sources:
          $ref: "#/components/schemas/Sources"
        robotSoftwareSuite:
          $ref: "#/components/schemas/RobotSoftwareSuite"
        lastUpdatedAt:
          $ref: "#/components/schemas/LastUpdatedAt"
        revisionId:
          $ref: "#/components/schemas/RevisionId"
    CreateSimulationApplicationResponse:
      type: object
      properties:
        arn:
          $ref: "#/components/schemas/Arn"
        name:
          $ref: "#/components/schemas/Name"
        version:
          $ref: "#/components/schemas/Version"
        sources:
          $ref: "#/components/schemas/Sources"
        simulationSoftwareSuite:
          $ref: "#/components/schemas/SimulationSoftwareSuite"
        robotSoftwareSuite:
          $ref: "#/components/schemas/RobotSoftwareSuite"
        renderingEngine:
          $ref: "#/components/schemas/RenderingEngine"
        lastUpdatedAt:
          $ref: "#/components/schemas/LastUpdatedAt"
        revisionId:
          $ref: "#/components/schemas/RevisionId"
        tags:
          $ref: "#/components/schemas/TagMap"
    SimulationSoftwareSuiteType:
      type: string
      enum:
        - Gazebo
        - RosbagPlay
    SimulationSoftwareSuiteVersionType:
      type: string
      pattern: 7|9|Kinetic|Melodic
    RenderingEngineType:
      type: string
      enum:
        - OGRE
    RenderingEngineVersionType:
      type: string
      pattern: 1.x
    CreateSimulationApplicationVersionResponse:
      type: object
      properties:
        arn:
          $ref: "#/components/schemas/Arn"
        name:
          $ref: "#/components/schemas/Name"
        version:
          $ref: "#/components/schemas/Version"
        sources:
          $ref: "#/components/schemas/Sources"
        simulationSoftwareSuite:
          $ref: "#/components/schemas/SimulationSoftwareSuite"
        robotSoftwareSuite:
          $ref: "#/components/schemas/RobotSoftwareSuite"
        renderingEngine:
          $ref: "#/components/schemas/RenderingEngine"
        lastUpdatedAt:
          $ref: "#/components/schemas/LastUpdatedAt"
        revisionId:
          $ref: "#/components/schemas/RevisionId"
    CreateSimulationJobResponse:
      type: object
      properties:
        arn:
          $ref: "#/components/schemas/Arn"
        status:
          $ref: "#/components/schemas/SimulationJobStatus"
        lastStartedAt:
          $ref: "#/components/schemas/LastStartedAt"
        lastUpdatedAt:
          $ref: "#/components/schemas/LastUpdatedAt"
        failureBehavior:
          $ref: "#/components/schemas/FailureBehavior"
        failureCode:
          $ref: "#/components/schemas/SimulationJobErrorCode"
        clientRequestToken:
          $ref: "#/components/schemas/ClientRequestToken"
        outputLocation:
          $ref: "#/components/schemas/OutputLocation"
        loggingConfig:
          $ref: "#/components/schemas/LoggingConfig"
        maxJobDurationInSeconds:
          $ref: "#/components/schemas/JobDuration"
        simulationTimeMillis:
          $ref: "#/components/schemas/SimulationTimeMillis"
        iamRole:
          $ref: "#/components/schemas/IamRole"
        robotApplications:
          $ref: "#/components/schemas/RobotApplicationConfigs"
        simulationApplications:
          $ref: "#/components/schemas/SimulationApplicationConfigs"
        dataSources:
          $ref: "#/components/schemas/DataSources"
        tags:
          $ref: "#/components/schemas/TagMap"
        vpcConfig:
          $ref: "#/components/schemas/VPCConfigResponse"
    S3Bucket:
      type: string
      pattern: "[a-z0-9][a-z0-9.\\-]*[a-z0-9]"
      minLength: 3
      maxLength: 63
    S3Key:
      type: string
      pattern: .*
      minLength: 1
      maxLength: 1024
    BoxedBoolean:
      type: boolean
    RobotApplicationConfig:
      type: object
      required:
        - application
        - launchConfig
      properties:
        application:
          $ref: "#/components/schemas/Arn"
        applicationVersion:
          $ref: "#/components/schemas/Version"
        launchConfig:
          $ref: "#/components/schemas/LaunchConfig"
      description: Application configuration information for a robot.
    SimulationApplicationConfig:
      type: object
      required:
        - application
        - launchConfig
      properties:
        application:
          $ref: "#/components/schemas/Arn"
        applicationVersion:
          $ref: "#/components/schemas/Version"
        launchConfig:
          $ref: "#/components/schemas/LaunchConfig"
      description: Information about a simulation application configuration.
    DataSourceConfig:
      type: object
      required:
        - name
        - s3Bucket
        - s3Keys
      properties:
        name:
          $ref: "#/components/schemas/Name"
        s3Bucket:
          $ref: "#/components/schemas/S3Bucket"
        s3Keys:
          $ref: "#/components/schemas/S3Keys"
      description: Information about a data source.
    Subnets:
      type: array
      items:
        $ref: "#/components/schemas/NonEmptyString"
      minItems: 1
      maxItems: 16
    SecurityGroups:
      type: array
      items:
        $ref: "#/components/schemas/NonEmptyString"
      minItems: 1
      maxItems: 5
    Boolean:
      type: boolean
    ServiceUnavailableException: {}
    DeleteFleetResponse:
      type: object
      properties: {}
    DeleteRobotResponse:
      type: object
      properties: {}
    DeleteRobotApplicationResponse:
      type: object
      properties: {}
    DeleteSimulationApplicationResponse:
      type: object
      properties: {}
    DeregisterRobotResponse:
      type: object
      properties:
        fleet:
          $ref: "#/components/schemas/Arn"
        robot:
          $ref: "#/components/schemas/Arn"
    DescribeDeploymentJobResponse:
      type: object
      properties:
        arn:
          $ref: "#/components/schemas/Arn"
        fleet:
          $ref: "#/components/schemas/Arn"
        status:
          $ref: "#/components/schemas/DeploymentStatus"
        deploymentConfig:
          $ref: "#/components/schemas/DeploymentConfig"
        deploymentApplicationConfigs:
          $ref: "#/components/schemas/DeploymentApplicationConfigs"
        failureReason:
          $ref: "#/components/schemas/GenericString"
        failureCode:
          $ref: "#/components/schemas/DeploymentJobErrorCode"
        createdAt:
          $ref: "#/components/schemas/CreatedAt"
        robotDeploymentSummary:
          $ref: "#/components/schemas/RobotDeploymentSummary"
        tags:
          $ref: "#/components/schemas/TagMap"
    DescribeFleetResponse:
      type: object
      properties:
        name:
          $ref: "#/components/schemas/Name"
        arn:
          $ref: "#/components/schemas/Arn"
        robots:
          $ref: "#/components/schemas/Robots"
        createdAt:
          $ref: "#/components/schemas/CreatedAt"
        lastDeploymentStatus:
          $ref: "#/components/schemas/DeploymentStatus"
        lastDeploymentJob:
          $ref: "#/components/schemas/Arn"
        lastDeploymentTime:
          $ref: "#/components/schemas/CreatedAt"
        tags:
          $ref: "#/components/schemas/TagMap"
    DescribeRobotResponse:
      type: object
      properties:
        arn:
          $ref: "#/components/schemas/Arn"
        name:
          $ref: "#/components/schemas/Name"
        fleetArn:
          $ref: "#/components/schemas/Arn"
        status:
          $ref: "#/components/schemas/RobotStatus"
        greengrassGroupId:
          $ref: "#/components/schemas/Id"
        createdAt:
          $ref: "#/components/schemas/CreatedAt"
        architecture:
          $ref: "#/components/schemas/Architecture"
        lastDeploymentJob:
          $ref: "#/components/schemas/Arn"
        lastDeploymentTime:
          $ref: "#/components/schemas/CreatedAt"
        tags:
          $ref: "#/components/schemas/TagMap"
    DescribeRobotApplicationResponse:
      type: object
      properties:
        arn:
          $ref: "#/components/schemas/Arn"
        name:
          $ref: "#/components/schemas/Name"
        version:
          $ref: "#/components/schemas/Version"
        sources:
          $ref: "#/components/schemas/Sources"
        robotSoftwareSuite:
          $ref: "#/components/schemas/RobotSoftwareSuite"
        revisionId:
          $ref: "#/components/schemas/RevisionId"
        lastUpdatedAt:
          $ref: "#/components/schemas/LastUpdatedAt"
        tags:
          $ref: "#/components/schemas/TagMap"
    DescribeSimulationApplicationResponse:
      type: object
      properties:
        arn:
          $ref: "#/components/schemas/Arn"
        name:
          $ref: "#/components/schemas/Name"
        version:
          $ref: "#/components/schemas/Version"
        sources:
          $ref: "#/components/schemas/Sources"
        simulationSoftwareSuite:
          $ref: "#/components/schemas/SimulationSoftwareSuite"
        robotSoftwareSuite:
          $ref: "#/components/schemas/RobotSoftwareSuite"
        renderingEngine:
          $ref: "#/components/schemas/RenderingEngine"
        revisionId:
          $ref: "#/components/schemas/RevisionId"
        lastUpdatedAt:
          $ref: "#/components/schemas/LastUpdatedAt"
        tags:
          $ref: "#/components/schemas/TagMap"
    DescribeSimulationJobResponse:
      type: object
      properties:
        arn:
          $ref: "#/components/schemas/Arn"
        name:
          $ref: "#/components/schemas/Name"
        status:
          $ref: "#/components/schemas/SimulationJobStatus"
        lastStartedAt:
          $ref: "#/components/schemas/LastStartedAt"
        lastUpdatedAt:
          $ref: "#/components/schemas/LastUpdatedAt"
        failureBehavior:
          $ref: "#/components/schemas/FailureBehavior"
        failureCode:
          $ref: "#/components/schemas/SimulationJobErrorCode"
        failureReason:
          $ref: "#/components/schemas/GenericString"
        clientRequestToken:
          $ref: "#/components/schemas/ClientRequestToken"
        outputLocation:
          $ref: "#/components/schemas/OutputLocation"
        loggingConfig:
          $ref: "#/components/schemas/LoggingConfig"
        maxJobDurationInSeconds:
          $ref: "#/components/schemas/JobDuration"
        simulationTimeMillis:
          $ref: "#/components/schemas/SimulationTimeMillis"
        iamRole:
          $ref: "#/components/schemas/IamRole"
        robotApplications:
          $ref: "#/components/schemas/RobotApplicationConfigs"
        simulationApplications:
          $ref: "#/components/schemas/SimulationApplicationConfigs"
        dataSources:
          $ref: "#/components/schemas/DataSources"
        tags:
          $ref: "#/components/schemas/TagMap"
        vpcConfig:
          $ref: "#/components/schemas/VPCConfigResponse"
        networkInterface:
          $ref: "#/components/schemas/NetworkInterface"
    ListDeploymentJobsResponse:
      type: object
      properties:
        deploymentJobs:
          $ref: "#/components/schemas/DeploymentJobs"
        nextToken:
          $ref: "#/components/schemas/PaginationToken"
    Filter:
      type: object
      properties:
        name:
          $ref: "#/components/schemas/Name"
        values:
          $ref: "#/components/schemas/FilterValues"
      description: Information about a filter.
    ListFleetsResponse:
      type: object
      properties:
        fleetDetails:
          $ref: "#/components/schemas/Fleets"
        nextToken:
          $ref: "#/components/schemas/PaginationToken"
    ListRobotApplicationsResponse:
      type: object
      properties:
        robotApplicationSummaries:
          $ref: "#/components/schemas/RobotApplicationSummaries"
        nextToken:
          $ref: "#/components/schemas/PaginationToken"
    ListRobotsResponse:
      type: object
      properties:
        robots:
          $ref: "#/components/schemas/Robots"
        nextToken:
          $ref: "#/components/schemas/PaginationToken"
    ListSimulationApplicationsResponse:
      type: object
      properties:
        simulationApplicationSummaries:
          $ref: "#/components/schemas/SimulationApplicationSummaries"
        nextToken:
          $ref: "#/components/schemas/PaginationToken"
    ListSimulationJobsResponse:
      type: object
      required:
        - simulationJobSummaries
      properties:
        simulationJobSummaries:
          $ref: "#/components/schemas/SimulationJobSummaries"
        nextToken:
          $ref: "#/components/schemas/PaginationToken"
    ListTagsForResourceResponse:
      type: object
      properties:
        tags:
          $ref: "#/components/schemas/TagMap"
    RegisterRobotResponse:
      type: object
      properties:
        fleet:
          $ref: "#/components/schemas/Arn"
        robot:
          $ref: "#/components/schemas/Arn"
    RestartSimulationJobResponse:
      type: object
      properties: {}
    SyncDeploymentJobResponse:
      type: object
      properties:
        arn:
          $ref: "#/components/schemas/Arn"
        fleet:
          $ref: "#/components/schemas/Arn"
        status:
          $ref: "#/components/schemas/DeploymentStatus"
        deploymentConfig:
          $ref: "#/components/schemas/DeploymentConfig"
        deploymentApplicationConfigs:
          $ref: "#/components/schemas/DeploymentApplicationConfigs"
        failureReason:
          $ref: "#/components/schemas/GenericString"
        failureCode:
          $ref: "#/components/schemas/DeploymentJobErrorCode"
        createdAt:
          $ref: "#/components/schemas/CreatedAt"
    TagResourceResponse:
      type: object
      properties: {}
    UntagResourceResponse:
      type: object
      properties: {}
    TagKey:
      type: string
      pattern: "[a-zA-Z0-9 _.\\-\\/+=:]*"
      minLength: 1
      maxLength: 128
    UpdateRobotApplicationResponse:
      type: object
      properties:
        arn:
          $ref: "#/components/schemas/Arn"
        name:
          $ref: "#/components/schemas/Name"
        version:
          $ref: "#/components/schemas/Version"
        sources:
          $ref: "#/components/schemas/Sources"
        robotSoftwareSuite:
          $ref: "#/components/schemas/RobotSoftwareSuite"
        lastUpdatedAt:
          $ref: "#/components/schemas/LastUpdatedAt"
        revisionId:
          $ref: "#/components/schemas/RevisionId"
    UpdateSimulationApplicationResponse:
      type: object
      properties:
        arn:
          $ref: "#/components/schemas/Arn"
        name:
          $ref: "#/components/schemas/Name"
        version:
          $ref: "#/components/schemas/Version"
        sources:
          $ref: "#/components/schemas/Sources"
        simulationSoftwareSuite:
          $ref: "#/components/schemas/SimulationSoftwareSuite"
        robotSoftwareSuite:
          $ref: "#/components/schemas/RobotSoftwareSuite"
        renderingEngine:
          $ref: "#/components/schemas/RenderingEngine"
        lastUpdatedAt:
          $ref: "#/components/schemas/LastUpdatedAt"
        revisionId:
          $ref: "#/components/schemas/RevisionId"
    Architecture:
      type: string
      enum:
        - X86_64
        - ARM64
        - ARMHF
    Arns:
      type: array
      items:
        $ref: "#/components/schemas/Arn"
      minItems: 1
      maxItems: 100
    BatchDescribeSimulationJobRequest:
      type: object
      required:
        - jobs
      properties:
        jobs:
          $ref: "#/components/schemas/Arns"
    SimulationJobs:
      type: array
      items:
        $ref: "#/components/schemas/SimulationJob"
    CancelDeploymentJobRequest:
      type: object
      required:
        - job
      properties:
        job:
          $ref: "#/components/schemas/Arn"
    CancelSimulationJobRequest:
      type: object
      required:
        - job
      properties:
        job:
          $ref: "#/components/schemas/Arn"
    ClientRequestToken:
      type: string
      pattern: "[a-zA-Z0-9_\\-=]*"
      minLength: 1
      maxLength: 64
    Command:
      type: string
      pattern: "[a-zA-Z0-9_.\\-]*"
      minLength: 1
      maxLength: 1024
    DeploymentConfig:
      type: object
      properties:
        concurrentDeploymentPercentage:
          $ref: "#/components/schemas/Percentage"
        failureThresholdPercentage:
          $ref: "#/components/schemas/Percentage"
        robotDeploymentTimeoutInSeconds:
          $ref: "#/components/schemas/DeploymentTimeout"
      description: Information about a deployment configuration.
    DeploymentApplicationConfigs:
      type: array
      items:
        $ref: "#/components/schemas/DeploymentApplicationConfig"
      minItems: 1
      maxItems: 1
    TagMap:
      type: object
      minProperties: 0
      maxProperties: 50
      additionalProperties:
        $ref: "#/components/schemas/TagValue"
    CreateDeploymentJobRequest:
      type: object
      required:
        - clientRequestToken
        - fleet
        - deploymentApplicationConfigs
      properties:
        deploymentConfig:
          $ref: "#/components/schemas/DeploymentConfig"
        clientRequestToken:
          $ref: "#/components/schemas/ClientRequestToken"
        fleet:
          $ref: "#/components/schemas/Arn"
        deploymentApplicationConfigs:
          $ref: "#/components/schemas/DeploymentApplicationConfigs"
        tags:
          $ref: "#/components/schemas/TagMap"
    DeploymentStatus:
      type: string
      enum:
        - Pending
        - Preparing
        - InProgress
        - Failed
        - Succeeded
        - Canceled
    GenericString:
      type: string
    DeploymentJobErrorCode:
      type: string
      enum:
        - ResourceNotFound
        - EnvironmentSetupError
        - EtagMismatch
        - FailureThresholdBreached
        - RobotDeploymentAborted
        - RobotDeploymentNoResponse
        - RobotAgentConnectionTimeout
        - GreengrassDeploymentFailed
        - MissingRobotArchitecture
        - MissingRobotApplicationArchitecture
        - MissingRobotDeploymentResource
        - GreengrassGroupVersionDoesNotExist
        - ExtractingBundleFailure
        - PreLaunchFileFailure
        - PostLaunchFileFailure
        - BadPermissionError
        - InternalServerError
    CreatedAt:
      type: string
      format: date-time
    Name:
      type: string
      pattern: "[a-zA-Z0-9_\\-]*"
      minLength: 1
      maxLength: 255
    CreateFleetRequest:
      type: object
      required:
        - name
      properties:
        name:
          $ref: "#/components/schemas/Name"
        tags:
          $ref: "#/components/schemas/TagMap"
    SourceConfigs:
      type: array
      items:
        $ref: "#/components/schemas/SourceConfig"
    RobotSoftwareSuite:
      type: object
      properties:
        name:
          $ref: "#/components/schemas/RobotSoftwareSuiteType"
        version:
          $ref: "#/components/schemas/RobotSoftwareSuiteVersionType"
      description: Information about a robot software suite.
    CreateRobotApplicationRequest:
      type: object
      required:
        - name
        - sources
        - robotSoftwareSuite
      properties:
        name:
          $ref: "#/components/schemas/Name"
        sources:
          $ref: "#/components/schemas/SourceConfigs"
        robotSoftwareSuite:
          $ref: "#/components/schemas/RobotSoftwareSuite"
        tags:
          $ref: "#/components/schemas/TagMap"
    Version:
      type: string
      pattern: (\$LATEST)|[0-9]*
      minLength: 1
      maxLength: 255
    Sources:
      type: array
      items:
        $ref: "#/components/schemas/Source"
    LastUpdatedAt:
      type: string
      format: date-time
    RevisionId:
      type: string
      pattern: "[a-zA-Z0-9_.\\-]*"
      minLength: 1
      maxLength: 40
    CreateRobotApplicationVersionRequest:
      type: object
      required:
        - application
      properties:
        application:
          $ref: "#/components/schemas/Arn"
        currentRevisionId:
          $ref: "#/components/schemas/RevisionId"
    Id:
      type: string
      minLength: 1
      maxLength: 1224
    CreateRobotRequest:
      type: object
      required:
        - name
        - architecture
        - greengrassGroupId
      properties:
        name:
          $ref: "#/components/schemas/Name"
        architecture:
          $ref: "#/components/schemas/Architecture"
        greengrassGroupId:
          $ref: "#/components/schemas/Id"
        tags:
          $ref: "#/components/schemas/TagMap"
    SimulationSoftwareSuite:
      type: object
      properties:
        name:
          $ref: "#/components/schemas/SimulationSoftwareSuiteType"
        version:
          $ref: "#/components/schemas/SimulationSoftwareSuiteVersionType"
      description: Information about a simulation software suite.
    RenderingEngine:
      type: object
      properties:
        name:
          $ref: "#/components/schemas/RenderingEngineType"
        version:
          $ref: "#/components/schemas/RenderingEngineVersionType"
      description: Information about a rendering engine.
    CreateSimulationApplicationRequest:
      type: object
      required:
        - name
        - sources
        - simulationSoftwareSuite
        - robotSoftwareSuite
      properties:
        name:
          $ref: "#/components/schemas/Name"
        sources:
          $ref: "#/components/schemas/SourceConfigs"
        simulationSoftwareSuite:
          $ref: "#/components/schemas/SimulationSoftwareSuite"
        robotSoftwareSuite:
          $ref: "#/components/schemas/RobotSoftwareSuite"
        renderingEngine:
          $ref: "#/components/schemas/RenderingEngine"
        tags:
          $ref: "#/components/schemas/TagMap"
    CreateSimulationApplicationVersionRequest:
      type: object
      required:
        - application
      properties:
        application:
          $ref: "#/components/schemas/Arn"
        currentRevisionId:
          $ref: "#/components/schemas/RevisionId"
    OutputLocation:
      type: object
      properties:
        s3Bucket:
          $ref: "#/components/schemas/S3Bucket"
        s3Prefix:
          $ref: "#/components/schemas/S3Key"
      description: The output location.
    LoggingConfig:
      type: object
      required:
        - recordAllRosTopics
      properties:
        recordAllRosTopics:
          $ref: "#/components/schemas/BoxedBoolean"
      description: The logging configuration.
    JobDuration:
      type: integer
    IamRole:
      type: string
      pattern: arn:aws:iam::\w+:role/.*
      minLength: 1
      maxLength: 255
    FailureBehavior:
      type: string
      enum:
        - Fail
        - Continue
    RobotApplicationConfigs:
      type: array
      items:
        $ref: "#/components/schemas/RobotApplicationConfig"
      minItems: 1
      maxItems: 1
    SimulationApplicationConfigs:
      type: array
      items:
        $ref: "#/components/schemas/SimulationApplicationConfig"
      minItems: 1
      maxItems: 1
    DataSourceConfigs:
      type: array
      items:
        $ref: "#/components/schemas/DataSourceConfig"
      minItems: 1
      maxItems: 5
    VPCConfig:
      type: object
      required:
        - subnets
      properties:
        subnets:
          $ref: "#/components/schemas/Subnets"
        securityGroups:
          $ref: "#/components/schemas/SecurityGroups"
        assignPublicIp:
          $ref: "#/components/schemas/Boolean"
      description: If your simulation job accesses resources in a VPC, you provide this
        parameter identifying the list of security group IDs and subnet IDs.
        These must belong to the same VPC. You must provide at least one
        security group and two subnet IDs.
    CreateSimulationJobRequest:
      type: object
      required:
        - maxJobDurationInSeconds
        - iamRole
      properties:
        clientRequestToken:
          $ref: "#/components/schemas/ClientRequestToken"
        outputLocation:
          $ref: "#/components/schemas/OutputLocation"
        loggingConfig:
          $ref: "#/components/schemas/LoggingConfig"
        maxJobDurationInSeconds:
          $ref: "#/components/schemas/JobDuration"
        iamRole:
          $ref: "#/components/schemas/IamRole"
        failureBehavior:
          $ref: "#/components/schemas/FailureBehavior"
        robotApplications:
          $ref: "#/components/schemas/RobotApplicationConfigs"
        simulationApplications:
          $ref: "#/components/schemas/SimulationApplicationConfigs"
        dataSources:
          $ref: "#/components/schemas/DataSourceConfigs"
        tags:
          $ref: "#/components/schemas/TagMap"
        vpcConfig:
          $ref: "#/components/schemas/VPCConfig"
    SimulationJobStatus:
      type: string
      enum:
        - Pending
        - Preparing
        - Running
        - Restarting
        - Completed
        - Failed
        - RunningFailed
        - Terminating
        - Terminated
        - Canceled
    LastStartedAt:
      type: string
      format: date-time
    SimulationJobErrorCode:
      type: string
      enum:
        - InternalServiceError
        - RobotApplicationCrash
        - SimulationApplicationCrash
        - BadPermissionsRobotApplication
        - BadPermissionsSimulationApplication
        - BadPermissionsS3Object
        - BadPermissionsS3Output
        - BadPermissionsCloudwatchLogs
        - SubnetIpLimitExceeded
        - ENILimitExceeded
        - BadPermissionsUserCredentials
        - InvalidBundleRobotApplication
        - InvalidBundleSimulationApplication
        - InvalidS3Resource
        - MismatchedEtag
        - RobotApplicationVersionMismatchedEtag
        - SimulationApplicationVersionMismatchedEtag
        - ResourceNotFound
        - InvalidInput
        - WrongRegionS3Bucket
        - WrongRegionS3Output
        - WrongRegionRobotApplication
        - WrongRegionSimulationApplication
    SimulationTimeMillis:
      type: integer
    DataSources:
      type: array
      items:
        $ref: "#/components/schemas/DataSource"
    VPCConfigResponse:
      type: object
      properties:
        subnets:
          $ref: "#/components/schemas/Subnets"
        securityGroups:
          $ref: "#/components/schemas/SecurityGroups"
        vpcId:
          $ref: "#/components/schemas/GenericString"
        assignPublicIp:
          $ref: "#/components/schemas/Boolean"
      description: VPC configuration associated with your simulation job.
    S3KeyOutputs:
      type: array
      items:
        $ref: "#/components/schemas/S3KeyOutput"
    DataSource:
      type: object
      properties:
        name:
          $ref: "#/components/schemas/Name"
        s3Bucket:
          $ref: "#/components/schemas/S3Bucket"
        s3Keys:
          $ref: "#/components/schemas/S3KeyOutputs"
      description: Information about a data source.
    S3Keys:
      type: array
      items:
        $ref: "#/components/schemas/S3Key"
      minItems: 1
      maxItems: 100
    DataSourceNames:
      type: array
      items:
        $ref: "#/components/schemas/Name"
    DeleteFleetRequest:
      type: object
      required:
        - fleet
      properties:
        fleet:
          $ref: "#/components/schemas/Arn"
    DeleteRobotApplicationRequest:
      type: object
      required:
        - application
      properties:
        application:
          $ref: "#/components/schemas/Arn"
        applicationVersion:
          $ref: "#/components/schemas/Version"
    DeleteRobotRequest:
      type: object
      required:
        - robot
      properties:
        robot:
          $ref: "#/components/schemas/Arn"
    DeleteSimulationApplicationRequest:
      type: object
      required:
        - application
      properties:
        application:
          $ref: "#/components/schemas/Arn"
        applicationVersion:
          $ref: "#/components/schemas/Version"
    DeploymentVersion:
      type: string
      pattern: "[0-9]*"
      minLength: 1
      maxLength: 255
    DeploymentLaunchConfig:
      type: object
      required:
        - packageName
        - launchFile
      properties:
        packageName:
          $ref: "#/components/schemas/Command"
        preLaunchFile:
          $ref: "#/components/schemas/Path"
        launchFile:
          $ref: "#/components/schemas/Command"
        postLaunchFile:
          $ref: "#/components/schemas/Path"
        environmentVariables:
          $ref: "#/components/schemas/EnvironmentVariableMap"
      description: Configuration information for a deployment launch.
    DeploymentJob:
      type: object
      properties:
        arn:
          $ref: "#/components/schemas/Arn"
        fleet:
          $ref: "#/components/schemas/Arn"
        status:
          $ref: "#/components/schemas/DeploymentStatus"
        deploymentApplicationConfigs:
          $ref: "#/components/schemas/DeploymentApplicationConfigs"
        deploymentConfig:
          $ref: "#/components/schemas/DeploymentConfig"
        failureReason:
          $ref: "#/components/schemas/GenericString"
        failureCode:
          $ref: "#/components/schemas/DeploymentJobErrorCode"
        createdAt:
          $ref: "#/components/schemas/CreatedAt"
      description: Information about a deployment job.
    DeploymentJobs:
      type: array
      items:
        $ref: "#/components/schemas/DeploymentJob"
      minItems: 0
      maxItems: 200
    Path:
      type: string
      minLength: 1
      maxLength: 1024
    EnvironmentVariableMap:
      type: object
      minProperties: 0
      maxProperties: 16
      additionalProperties:
        $ref: "#/components/schemas/EnvironmentVariableValue"
    DeregisterRobotRequest:
      type: object
      required:
        - fleet
        - robot
      properties:
        fleet:
          $ref: "#/components/schemas/Arn"
        robot:
          $ref: "#/components/schemas/Arn"
    DescribeDeploymentJobRequest:
      type: object
      required:
        - job
      properties:
        job:
          $ref: "#/components/schemas/Arn"
    RobotDeploymentSummary:
      type: array
      items:
        $ref: "#/components/schemas/RobotDeployment"
    DescribeFleetRequest:
      type: object
      required:
        - fleet
      properties:
        fleet:
          $ref: "#/components/schemas/Arn"
    Robots:
      type: array
      items:
        $ref: "#/components/schemas/Robot"
      minItems: 0
      maxItems: 1000
    DescribeRobotApplicationRequest:
      type: object
      required:
        - application
      properties:
        application:
          $ref: "#/components/schemas/Arn"
        applicationVersion:
          $ref: "#/components/schemas/Version"
    DescribeRobotRequest:
      type: object
      required:
        - robot
      properties:
        robot:
          $ref: "#/components/schemas/Arn"
    RobotStatus:
      type: string
      enum:
        - Available
        - Registered
        - PendingNewDeployment
        - Deploying
        - Failed
        - InSync
        - NoResponse
    DescribeSimulationApplicationRequest:
      type: object
      required:
        - application
      properties:
        application:
          $ref: "#/components/schemas/Arn"
        applicationVersion:
          $ref: "#/components/schemas/Version"
    DescribeSimulationJobRequest:
      type: object
      required:
        - job
      properties:
        job:
          $ref: "#/components/schemas/Arn"
    NetworkInterface:
      type: object
      properties:
        networkInterfaceId:
          $ref: "#/components/schemas/GenericString"
        privateIpAddress:
          $ref: "#/components/schemas/GenericString"
        publicIpAddress:
          $ref: "#/components/schemas/GenericString"
      description: Describes a network interface.
    EnvironmentVariableKey:
      type: string
      pattern: "[A-Z_][A-Z0-9_]*"
      minLength: 1
      maxLength: 1024
    EnvironmentVariableValue:
      type: string
      minLength: 1
      maxLength: 1024
    FilterValues:
      type: array
      items:
        $ref: "#/components/schemas/Name"
      minItems: 1
      maxItems: 1
    Filters:
      type: array
      items:
        $ref: "#/components/schemas/Filter"
      minItems: 1
      maxItems: 1
    Fleet:
      type: object
      properties:
        name:
          $ref: "#/components/schemas/Name"
        arn:
          $ref: "#/components/schemas/Arn"
        createdAt:
          $ref: "#/components/schemas/CreatedAt"
        lastDeploymentStatus:
          $ref: "#/components/schemas/DeploymentStatus"
        lastDeploymentJob:
          $ref: "#/components/schemas/Arn"
        lastDeploymentTime:
          $ref: "#/components/schemas/CreatedAt"
      description: Information about a fleet.
    Fleets:
      type: array
      items:
        $ref: "#/components/schemas/Fleet"
      minItems: 0
      maxItems: 200
    GenericInteger:
      type: integer
    PortForwardingConfig:
      type: object
      properties:
        portMappings:
          $ref: "#/components/schemas/PortMappingList"
      description: Configuration information for port forwarding.
    LaunchConfig:
      type: object
      required:
        - packageName
        - launchFile
      properties:
        packageName:
          $ref: "#/components/schemas/Command"
        launchFile:
          $ref: "#/components/schemas/Command"
        environmentVariables:
          $ref: "#/components/schemas/EnvironmentVariableMap"
        portForwardingConfig:
          $ref: "#/components/schemas/PortForwardingConfig"
      description: Information about a launch configuration.
    PaginationToken:
      type: string
      pattern: "[a-zA-Z0-9_.\\-\\/+=]*"
      minLength: 1
      maxLength: 2048
    MaxResults:
      type: integer
    ListDeploymentJobsRequest:
      type: object
      properties:
        filters:
          $ref: "#/components/schemas/Filters"
        nextToken:
          $ref: "#/components/schemas/PaginationToken"
        maxResults:
          $ref: "#/components/schemas/MaxResults"
    ListFleetsRequest:
      type: object
      properties:
        nextToken:
          $ref: "#/components/schemas/PaginationToken"
        maxResults:
          $ref: "#/components/schemas/MaxResults"
        filters:
          $ref: "#/components/schemas/Filters"
    VersionQualifier:
      type: string
      pattern: ALL
    ListRobotApplicationsRequest:
      type: object
      properties:
        versionQualifier:
          $ref: "#/components/schemas/VersionQualifier"
        nextToken:
          $ref: "#/components/schemas/PaginationToken"
        maxResults:
          $ref: "#/components/schemas/MaxResults"
        filters:
          $ref: "#/components/schemas/Filters"
    RobotApplicationSummaries:
      type: array
      items:
        $ref: "#/components/schemas/RobotApplicationSummary"
      minItems: 0
      maxItems: 100
    ListRobotsRequest:
      type: object
      properties:
        nextToken:
          $ref: "#/components/schemas/PaginationToken"
        maxResults:
          $ref: "#/components/schemas/MaxResults"
        filters:
          $ref: "#/components/schemas/Filters"
    ListSimulationApplicationsRequest:
      type: object
      properties:
        versionQualifier:
          $ref: "#/components/schemas/VersionQualifier"
        nextToken:
          $ref: "#/components/schemas/PaginationToken"
        maxResults:
          $ref: "#/components/schemas/MaxResults"
        filters:
          $ref: "#/components/schemas/Filters"
    SimulationApplicationSummaries:
      type: array
      items:
        $ref: "#/components/schemas/SimulationApplicationSummary"
      minItems: 0
      maxItems: 100
    ListSimulationJobsRequest:
      type: object
      properties:
        nextToken:
          $ref: "#/components/schemas/PaginationToken"
        maxResults:
          $ref: "#/components/schemas/MaxResults"
        filters:
          $ref: "#/components/schemas/Filters"
    SimulationJobSummaries:
      type: array
      items:
        $ref: "#/components/schemas/SimulationJobSummary"
      minItems: 0
      maxItems: 100
    ListTagsForResourceRequest:
      type: object
      properties: {}
    NonEmptyString:
      type: string
      minLength: 1
    NonSystemPort:
      type: integer
      minimum: 1024
      maximum: 65535
    PercentDone:
      type: number
      format: float
      minimum: 0
      maximum: 100
    Port:
      type: integer
      minimum: 1
      maximum: 65535
    PortMappingList:
      type: array
      items:
        $ref: "#/components/schemas/PortMapping"
      minItems: 0
      maxItems: 10
    PortMapping:
      type: object
      required:
        - jobPort
        - applicationPort
      properties:
        jobPort:
          $ref: "#/components/schemas/Port"
        applicationPort:
          $ref: "#/components/schemas/NonSystemPort"
        enableOnPublicIp:
          $ref: "#/components/schemas/Boolean"
      description: An object representing a port mapping.
    RobotDeploymentStep:
      type: string
      enum:
        - Validating
        - DownloadingExtracting
        - ExecutingPreLaunch
        - Launching
        - ExecutingPostLaunch
        - Finished
    ProgressDetail:
      type: object
      properties:
        currentProgress:
          $ref: "#/components/schemas/RobotDeploymentStep"
        percentDone:
          $ref: "#/components/schemas/PercentDone"
        estimatedTimeRemainingSeconds:
          $ref: "#/components/schemas/GenericInteger"
        targetResource:
          $ref: "#/components/schemas/GenericString"
      description: Information about the progress of a deployment job.
    RegisterRobotRequest:
      type: object
      required:
        - fleet
        - robot
      properties:
        fleet:
          $ref: "#/components/schemas/Arn"
        robot:
          $ref: "#/components/schemas/Arn"
    RestartSimulationJobRequest:
      type: object
      required:
        - job
      properties:
        job:
          $ref: "#/components/schemas/Arn"
    Robot:
      type: object
      properties:
        arn:
          $ref: "#/components/schemas/Arn"
        name:
          $ref: "#/components/schemas/Name"
        fleetArn:
          $ref: "#/components/schemas/Arn"
        status:
          $ref: "#/components/schemas/RobotStatus"
        greenGrassGroupId:
          $ref: "#/components/schemas/Id"
        createdAt:
          $ref: "#/components/schemas/CreatedAt"
        architecture:
          $ref: "#/components/schemas/Architecture"
        lastDeploymentJob:
          $ref: "#/components/schemas/Arn"
        lastDeploymentTime:
          $ref: "#/components/schemas/CreatedAt"
      description: Information about a robot.
    RobotApplicationNames:
      type: array
      items:
        $ref: "#/components/schemas/Name"
    RobotApplicationSummary:
      type: object
      properties:
        name:
          $ref: "#/components/schemas/Name"
        arn:
          $ref: "#/components/schemas/Arn"
        version:
          $ref: "#/components/schemas/Version"
        lastUpdatedAt:
          $ref: "#/components/schemas/LastUpdatedAt"
        robotSoftwareSuite:
          $ref: "#/components/schemas/RobotSoftwareSuite"
      description: Summary information for a robot application.
    RobotDeployment:
      type: object
      properties:
        arn:
          $ref: "#/components/schemas/Arn"
        deploymentStartTime:
          $ref: "#/components/schemas/CreatedAt"
        deploymentFinishTime:
          $ref: "#/components/schemas/CreatedAt"
        status:
          $ref: "#/components/schemas/RobotStatus"
        progressDetail:
          $ref: "#/components/schemas/ProgressDetail"
        failureReason:
          $ref: "#/components/schemas/GenericString"
        failureCode:
          $ref: "#/components/schemas/DeploymentJobErrorCode"
      description: Information about a robot deployment.
    S3Etag:
      type: string
    S3KeyOutput:
      type: object
      properties:
        s3Key:
          $ref: "#/components/schemas/S3Key"
        etag:
          $ref: "#/components/schemas/S3Etag"
      description: Information about S3 keys.
    SimulationApplicationNames:
      type: array
      items:
        $ref: "#/components/schemas/Name"
    SimulationApplicationSummary:
      type: object
      properties:
        name:
          $ref: "#/components/schemas/Name"
        arn:
          $ref: "#/components/schemas/Arn"
        version:
          $ref: "#/components/schemas/Version"
        lastUpdatedAt:
          $ref: "#/components/schemas/LastUpdatedAt"
        robotSoftwareSuite:
          $ref: "#/components/schemas/RobotSoftwareSuite"
        simulationSoftwareSuite:
          $ref: "#/components/schemas/SimulationSoftwareSuite"
      description: Summary information for a simulation application.
    SimulationJob:
      type: object
      properties:
        arn:
          $ref: "#/components/schemas/Arn"
        name:
          $ref: "#/components/schemas/Name"
        status:
          $ref: "#/components/schemas/SimulationJobStatus"
        lastStartedAt:
          $ref: "#/components/schemas/LastStartedAt"
        lastUpdatedAt:
          $ref: "#/components/schemas/LastUpdatedAt"
        failureBehavior:
          $ref: "#/components/schemas/FailureBehavior"
        failureCode:
          $ref: "#/components/schemas/SimulationJobErrorCode"
        failureReason:
          $ref: "#/components/schemas/GenericString"
        clientRequestToken:
          $ref: "#/components/schemas/ClientRequestToken"
        outputLocation:
          $ref: "#/components/schemas/OutputLocation"
        loggingConfig:
          $ref: "#/components/schemas/LoggingConfig"
        maxJobDurationInSeconds:
          $ref: "#/components/schemas/JobDuration"
        simulationTimeMillis:
          $ref: "#/components/schemas/SimulationTimeMillis"
        iamRole:
          $ref: "#/components/schemas/IamRole"
        robotApplications:
          $ref: "#/components/schemas/RobotApplicationConfigs"
        simulationApplications:
          $ref: "#/components/schemas/SimulationApplicationConfigs"
        dataSources:
          $ref: "#/components/schemas/DataSources"
        tags:
          $ref: "#/components/schemas/TagMap"
        vpcConfig:
          $ref: "#/components/schemas/VPCConfigResponse"
        networkInterface:
          $ref: "#/components/schemas/NetworkInterface"
      description: Information about a simulation job.
    SimulationJobSummary:
      type: object
      properties:
        arn:
          $ref: "#/components/schemas/Arn"
        lastUpdatedAt:
          $ref: "#/components/schemas/LastUpdatedAt"
        name:
          $ref: "#/components/schemas/Name"
        status:
          $ref: "#/components/schemas/SimulationJobStatus"
        simulationApplicationNames:
          $ref: "#/components/schemas/SimulationApplicationNames"
        robotApplicationNames:
          $ref: "#/components/schemas/RobotApplicationNames"
        dataSourceNames:
          $ref: "#/components/schemas/DataSourceNames"
      description: Summary information for a simulation job.
    Source:
      type: object
      properties:
        s3Bucket:
          $ref: "#/components/schemas/S3Bucket"
        s3Key:
          $ref: "#/components/schemas/S3Key"
        etag:
          $ref: "#/components/schemas/S3Etag"
        architecture:
          $ref: "#/components/schemas/Architecture"
      description: Information about a source.
    SyncDeploymentJobRequest:
      type: object
      required:
        - clientRequestToken
        - fleet
      properties:
        clientRequestToken:
          $ref: "#/components/schemas/ClientRequestToken"
        fleet:
          $ref: "#/components/schemas/Arn"
    TagKeyList:
      type: array
      items:
        $ref: "#/components/schemas/TagKey"
    TagResourceRequest:
      type: object
      required:
        - tags
      properties:
        tags:
          $ref: "#/components/schemas/TagMap"
    UntagResourceRequest:
      type: object
      properties: {}
    UpdateRobotApplicationRequest:
      type: object
      required:
        - application
        - sources
        - robotSoftwareSuite
      properties:
        application:
          $ref: "#/components/schemas/Arn"
        sources:
          $ref: "#/components/schemas/SourceConfigs"
        robotSoftwareSuite:
          $ref: "#/components/schemas/RobotSoftwareSuite"
        currentRevisionId:
          $ref: "#/components/schemas/RevisionId"
    UpdateSimulationApplicationRequest:
      type: object
      required:
        - application
        - sources
        - simulationSoftwareSuite
        - robotSoftwareSuite
      properties:
        application:
          $ref: "#/components/schemas/Arn"
        sources:
          $ref: "#/components/schemas/SourceConfigs"
        simulationSoftwareSuite:
          $ref: "#/components/schemas/SimulationSoftwareSuite"
        robotSoftwareSuite:
          $ref: "#/components/schemas/RobotSoftwareSuite"
        renderingEngine:
          $ref: "#/components/schemas/RenderingEngine"
        currentRevisionId:
          $ref: "#/components/schemas/RevisionId"
