openapi: 3.0.0
info:
  version: 2017-07-01
  x-release: v4
  title: Amazon Translate
  description: Provides translation between one source language and another of the same set
    of languages.
  x-logo:
    url: https://twitter.com/awscloud/profile_image?size=original
    backgroundColor: "#FFFFFF"
  termsOfService: https://aws.amazon.com/service-terms/
  contact:
    name: Mike Ralphson
    email: mike.ralphson@gmail.com
    url: https://github.com/mermade/aws2openapi
    x-twitter: PermittedSoc
  license:
    name: Apache 2.0 License
    url: http://www.apache.org/licenses/
  x-providerName: amazonaws.com
  x-serviceName: translate
  x-origin:
    - contentType: application/json
      url: https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/translate-2017-07-01.normal.json
      converter:
        url: https://github.com/mermade/aws2openapi
        version: 1.0.0
      x-apisguru-direct: true
  x-apiClientRegistration:
    url: https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct
  x-apisguru-categories:
    - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: https://docs.aws.amazon.com/translate/
x-hasEquivalentPaths: true
security:
  - hmac: []
paths:
  /#X-Amz-Target=AWSShineFrontendService_20170701.DeleteTerminology:
    post:
      operationId: DeleteTerminology
      description: A synchronous action that deletes a custom terminology.
      responses:
        "200":
          description: Success
        "480":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "481":
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TooManyRequestsException"
        "482":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSShineFrontendService_20170701.DeleteTerminology
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeleteTerminologyRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSShineFrontendService_20170701.GetTerminology:
    post:
      operationId: GetTerminology
      description: Retrieves a custom terminology.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetTerminologyResponse"
        "480":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "481":
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterValueException"
        "482":
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TooManyRequestsException"
        "483":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSShineFrontendService_20170701.GetTerminology
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GetTerminologyRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSShineFrontendService_20170701.ImportTerminology:
    post:
      operationId: ImportTerminology
      description: <p>Creates or updates a custom terminology, depending on whether or not
        one already exists for the given terminology name. Importing a
        terminology with the same name as an existing one will merge the
        terminologies based on the chosen merge strategy. Currently, the only
        supported merge strategy is OVERWRITE, and so the imported terminology
        will overwrite an existing terminology of the same name.</p> <p>If you
        import a terminology that overwrites an existing one, the new
        terminology take up to 10 minutes to fully propagate and be available
        for use in a translation due to cache policies with the DataPlane
        service that performs the translations.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ImportTerminologyResponse"
        "480":
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterValueException"
        "481":
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
        "482":
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TooManyRequestsException"
        "483":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSShineFrontendService_20170701.ImportTerminology
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ImportTerminologyRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSShineFrontendService_20170701.ListTerminologies:
    post:
      operationId: ListTerminologies
      description: Provides a list of custom terminologies associated with your account.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListTerminologiesResponse"
        "480":
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterValueException"
        "481":
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TooManyRequestsException"
        "482":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSShineFrontendService_20170701.ListTerminologies
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ListTerminologiesRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSShineFrontendService_20170701.TranslateText:
    post:
      operationId: TranslateText
      description: <p>Translates input text from the source language to the target
        language. It is not necessary to use English (en) as either the source
        or the target language but not all language combinations are supported
        by Amazon Translate. For more information, see <a
        href="http://docs.aws.amazon.com/translate/latest/dg/pairs.html">Supported
        Language Pairs</a>.</p> <ul> <li> <p>Arabic (ar)</p> </li> <li>
        <p>Chinese (Simplified) (zh)</p> </li> <li> <p>Chinese (Traditional)
        (zh-TW)</p> </li> <li> <p>Czech (cs)</p> </li> <li> <p>Danish (da)</p>
        </li> <li> <p>Dutch (nl)</p> </li> <li> <p>English (en)</p> </li> <li>
        <p>Finnish (fi)</p> </li> <li> <p>French (fr)</p> </li> <li> <p>German
        (de)</p> </li> <li> <p>Hebrew (he)</p> </li> <li> <p>Indonesian (id)</p>
        </li> <li> <p>Italian (it)</p> </li> <li> <p>Japanese (ja)</p> </li>
        <li> <p>Korean (ko)</p> </li> <li> <p>Polish (pl)</p> </li> <li>
        <p>Portuguese (pt)</p> </li> <li> <p>Russian (ru)</p> </li> <li>
        <p>Spanish (es)</p> </li> <li> <p>Swedish (sv)</p> </li> <li> <p>Turkish
        (tr)</p> </li> </ul> <p>To have Amazon Translate determine the source
        language of your text, you can specify <code>auto</code> in the
        <code>SourceLanguageCode</code> field. If you specify <code>auto</code>,
        Amazon Translate will call Amazon Comprehend to determine the source
        language.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TranslateTextResponse"
        "480":
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRequestException"
        "481":
          description: TextSizeLimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TextSizeLimitExceededException"
        "482":
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TooManyRequestsException"
        "483":
          description: UnsupportedLanguagePairException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnsupportedLanguagePairException"
        "484":
          description: DetectedLanguageLowConfidenceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DetectedLanguageLowConfidenceException"
        "485":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "486":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
        "487":
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceUnavailableException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSShineFrontendService_20170701.TranslateText
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TranslateTextRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
servers:
  - url: http://translate.{region}.amazonaws.com
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-south-1
          - sa-east-1
        default: us-east-1
    description: The Amazon Translate multi-region endpoint
  - url: https://translate.{region}.amazonaws.com
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-south-1
          - sa-east-1
        default: us-east-1
    description: The Amazon Translate multi-region endpoint
  - url: http://translate.{region}.amazonaws.com.cn
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The Amazon Translate endpoint for China (Beijing) and China (Ningxia)
  - url: https://translate.{region}.amazonaws.com.cn
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The Amazon Translate endpoint for China (Beijing) and China (Ningxia)
components:
  parameters:
    X-Amz-Content-Sha256:
      name: X-Amz-Content-Sha256
      in: header
      required: false
      schema:
        type: string
    X-Amz-Date:
      name: X-Amz-Date
      in: header
      required: false
      schema:
        type: string
    X-Amz-Algorithm:
      name: X-Amz-Algorithm
      in: header
      required: false
      schema:
        type: string
    X-Amz-Credential:
      name: X-Amz-Credential
      in: header
      required: false
      schema:
        type: string
    X-Amz-Security-Token:
      name: X-Amz-Security-Token
      in: header
      required: false
      schema:
        type: string
    X-Amz-Signature:
      name: X-Amz-Signature
      in: header
      required: false
      schema:
        type: string
    X-Amz-SignedHeaders:
      name: X-Amz-SignedHeaders
      in: header
      required: false
      schema:
        type: string
  securitySchemes:
    hmac:
      type: apiKey
      name: Authorization
      in: header
      description: Amazon Signature authorization v4
      x-amazon-apigateway-authtype: awsSigv4
  schemas:
    DeleteTerminologyRequest:
      type: object
      required:
        - Name
      properties:
        Name:
          $ref: "#/components/schemas/ResourceName"
    ResourceNotFoundException: {}
    TooManyRequestsException: {}
    InternalServerException: {}
    GetTerminologyResponse:
      type: object
      properties:
        TerminologyProperties:
          $ref: "#/components/schemas/TerminologyProperties"
        TerminologyDataLocation:
          $ref: "#/components/schemas/TerminologyDataLocation"
    GetTerminologyRequest:
      type: object
      required:
        - Name
        - TerminologyDataFormat
      properties:
        Name:
          $ref: "#/components/schemas/ResourceName"
        TerminologyDataFormat:
          $ref: "#/components/schemas/TerminologyDataFormat"
    InvalidParameterValueException: {}
    ImportTerminologyResponse:
      type: object
      properties:
        TerminologyProperties:
          $ref: "#/components/schemas/TerminologyProperties"
    ImportTerminologyRequest:
      type: object
      required:
        - Name
        - MergeStrategy
        - TerminologyData
      properties:
        Name:
          $ref: "#/components/schemas/ResourceName"
        MergeStrategy:
          $ref: "#/components/schemas/MergeStrategy"
        Description:
          $ref: "#/components/schemas/Description"
        TerminologyData:
          $ref: "#/components/schemas/TerminologyData"
        EncryptionKey:
          $ref: "#/components/schemas/EncryptionKey"
    LimitExceededException: {}
    ListTerminologiesResponse:
      type: object
      properties:
        TerminologyPropertiesList:
          $ref: "#/components/schemas/TerminologyPropertiesList"
        NextToken:
          $ref: "#/components/schemas/NextToken"
    ListTerminologiesRequest:
      type: object
      properties:
        NextToken:
          $ref: "#/components/schemas/NextToken"
        MaxResults:
          $ref: "#/components/schemas/MaxResultsInteger"
    TranslateTextResponse:
      type: object
      required:
        - TranslatedText
        - SourceLanguageCode
        - TargetLanguageCode
      properties:
        TranslatedText:
          $ref: "#/components/schemas/String"
        SourceLanguageCode:
          $ref: "#/components/schemas/LanguageCodeString"
        TargetLanguageCode:
          $ref: "#/components/schemas/LanguageCodeString"
        AppliedTerminologies:
          $ref: "#/components/schemas/AppliedTerminologyList"
    TranslateTextRequest:
      type: object
      required:
        - Text
        - SourceLanguageCode
        - TargetLanguageCode
      properties:
        Text:
          $ref: "#/components/schemas/BoundedLengthString"
        TerminologyNames:
          $ref: "#/components/schemas/ResourceNameList"
        SourceLanguageCode:
          $ref: "#/components/schemas/LanguageCodeString"
        TargetLanguageCode:
          $ref: "#/components/schemas/LanguageCodeString"
    InvalidRequestException: {}
    TextSizeLimitExceededException: {}
    UnsupportedLanguagePairException: {}
    DetectedLanguageLowConfidenceException: {}
    ServiceUnavailableException: {}
    ResourceName:
      type: string
      pattern: ^([A-Za-z0-9-]_?)+$
      minLength: 1
      maxLength: 256
    TermList:
      type: array
      items:
        $ref: "#/components/schemas/Term"
    AppliedTerminology:
      type: object
      properties:
        Name:
          $ref: "#/components/schemas/ResourceName"
        Terms:
          $ref: "#/components/schemas/TermList"
      description: The custom terminology applied to the input text by Amazon Translate for
        the translated text response. This is optional in the response and will
        only be present if you specified terminology input in the request.
        Currently, only one terminology can be applied per TranslateText
        request.
    AppliedTerminologyList:
      type: array
      items:
        $ref: "#/components/schemas/AppliedTerminology"
    BoundedLengthString:
      type: string
      pattern: "[\\P{M}\\p{M}]{1,5000}"
      minLength: 1
      maxLength: 5000
    Description:
      type: string
      pattern: "[\\P{M}\\p{M}]{0,256}"
      maxLength: 256
    EncryptionKeyType:
      type: string
      enum:
        - KMS
    EncryptionKeyID:
      type: string
      pattern: (arn:aws((-us-gov)|(-cn))?:kms:)?([a-z]{2}-[a-z]+-\d:)?(\d{12}:)?(((key/)?[a-zA-Z0-9-_]+)|(alias/[a-zA-Z0-9:/_-]+))
      minLength: 1
      maxLength: 400
    EncryptionKey:
      type: object
      required:
        - Type
        - Id
      properties:
        Type:
          $ref: "#/components/schemas/EncryptionKeyType"
        Id:
          $ref: "#/components/schemas/EncryptionKeyID"
      description: The encryption key used to encrypt the custom terminologies used by
        Amazon Translate.
    TerminologyDataFormat:
      type: string
      enum:
        - CSV
        - TMX
    TerminologyProperties:
      type: object
      properties:
        Name:
          $ref: "#/components/schemas/ResourceName"
        Description:
          $ref: "#/components/schemas/Description"
        Arn:
          $ref: "#/components/schemas/TerminologyArn"
        SourceLanguageCode:
          $ref: "#/components/schemas/LanguageCodeString"
        TargetLanguageCodes:
          $ref: "#/components/schemas/LanguageCodeStringList"
        EncryptionKey:
          $ref: "#/components/schemas/EncryptionKey"
        SizeBytes:
          $ref: "#/components/schemas/Integer"
        TermCount:
          $ref: "#/components/schemas/Integer"
        CreatedAt:
          $ref: "#/components/schemas/Timestamp"
        LastUpdatedAt:
          $ref: "#/components/schemas/Timestamp"
      description: The properties of the custom terminology.
    TerminologyDataLocation:
      type: object
      required:
        - RepositoryType
        - Location
      properties:
        RepositoryType:
          $ref: "#/components/schemas/String"
        Location:
          $ref: "#/components/schemas/String"
      description: The location of the custom terminology data.
    MergeStrategy:
      type: string
      enum:
        - OVERWRITE
    TerminologyData:
      type: object
      required:
        - File
        - Format
      properties:
        File:
          $ref: "#/components/schemas/TerminologyFile"
        Format:
          $ref: "#/components/schemas/TerminologyDataFormat"
      description: The data associated with the custom terminology.
    Integer:
      type: integer
    LanguageCodeString:
      type: string
      minLength: 2
      maxLength: 5
    LanguageCodeStringList:
      type: array
      items:
        $ref: "#/components/schemas/LanguageCodeString"
    NextToken:
      type: string
      pattern: \p{ASCII}{0,8192}
      maxLength: 8192
    MaxResultsInteger:
      type: integer
      minimum: 1
      maximum: 500
    TerminologyPropertiesList:
      type: array
      items:
        $ref: "#/components/schemas/TerminologyProperties"
    ResourceNameList:
      type: array
      items:
        $ref: "#/components/schemas/ResourceName"
    String:
      type: string
      pattern: "[\\P{M}\\p{M}]{0,10000}"
      maxLength: 10000
    Term:
      type: object
      properties:
        SourceText:
          $ref: "#/components/schemas/String"
        TargetText:
          $ref: "#/components/schemas/String"
      description: The term being translated by the custom terminology.
    TerminologyArn:
      type: string
      pattern: ^arn:aws((-us-gov)|(-cn))?:translate:[a-zA-Z0-9-]+:[0-9]{12}:terminology/.+?/.+?$
    TerminologyFile:
      type: string
      maxLength: 10485760
      format: password
    Timestamp:
      type: string
      format: date-time
