openapi: 3.0.0
info:
  description: The Microsoft Azure Network management API provides a RESTful set of web
    services that interact with Microsoft Azure Networks service to manage your
    network resources. The API has entities that capture the relationship
    between an end user and the Microsoft Azure Networks service.
  title: NetworkManagementClient
  version: 2019-06-01
  x-apisguru-categories:
    - cloud
  x-logo:
    url: https://assets.onestore.ms/cdnfiles/onestorerolling-1606-01000/shell/v3/images/logo/microsoft.png
  x-origin:
    - format: swagger
      url: https://raw.githubusercontent.com/Azure/azure-rest-api-specs/master/specification/network/resource-manager/Microsoft.Network/stable/2019-06-01/expressRoutePort.json
      version: "2.0"
  x-preferred: true
  x-providerName: azure.com
  x-serviceName: network-expressRoutePort
  x-tags:
    - Azure
    - Microsoft
security:
  - azure_auth:
      - user_impersonation
paths:
  "/subscriptions/{subscriptionId}/providers/Microsoft.Network/ExpressRoutePorts":
    get:
      description: List all the ExpressRoutePort resources in the specified subscription.
      operationId: ExpressRoutePorts_List
      parameters:
        - description: The subscription credentials which uniquely identify the Microsoft
            Azure subscription. The subscription ID forms part of the URI for
            every service call.
          in: path
          name: subscriptionId
          required: true
          schema:
            type: string
          examples:
            ExpressRoutePortList:
              value: subid
        - description: Client API version.
          in: query
          name: api-version
          required: true
          schema:
            type: string
          examples:
            ExpressRoutePortList:
              value: 2019-06-01
      responses:
        "200":
          description: Request successful. The operation returns a list of ExpressRoutePort
            resources. If there are no ExpressRoutePort resources then an empty
            list is returned.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ExpressRoutePortListResult"
              examples:
                ExpressRoutePortList:
                  $ref: "#/components/examples/ExpressRoutePortList"
      tags:
        - ExpressRoutePorts
      x-ms-pageable:
        nextLinkName: nextLink
  "/subscriptions/{subscriptionId}/providers/Microsoft.Network/ExpressRoutePortsLocations":
    get:
      description: Retrieves all ExpressRoutePort peering locations. Does not return
        available bandwidths for each location. Available bandwidths can only be
        obtained when retrieving a specific peering location.
      operationId: ExpressRoutePortsLocations_List
      parameters:
        - description: The subscription credentials which uniquely identify the Microsoft
            Azure subscription. The subscription ID forms part of the URI for
            every service call.
          in: path
          name: subscriptionId
          required: true
          schema:
            type: string
          examples:
            ExpressRoutePortsLocationList:
              value: subid
        - description: Client API version.
          in: query
          name: api-version
          required: true
          schema:
            type: string
          examples:
            ExpressRoutePortsLocationList:
              value: 2019-06-01
      responses:
        "200":
          description: Request successful. The operation returns the list of all
            ExpressRoutePort peering locations.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ExpressRoutePortsLocationListResult"
              examples:
                ExpressRoutePortsLocationList:
                  $ref: "#/components/examples/ExpressRoutePortsLocationList"
      tags:
        - ExpressRoutePortsLocations
      x-ms-pageable:
        nextLinkName: nextLink
  "/subscriptions/{subscriptionId}/providers/Microsoft.Network/ExpressRoutePortsLocations/{locationName}":
    get:
      description: Retrieves a single ExpressRoutePort peering location, including the list
        of available bandwidths available at said peering location.
      operationId: ExpressRoutePortsLocations_Get
      parameters:
        - description: The subscription credentials which uniquely identify the Microsoft
            Azure subscription. The subscription ID forms part of the URI for
            every service call.
          in: path
          name: subscriptionId
          required: true
          schema:
            type: string
          examples:
            ExpressRoutePortsLocationGet:
              value: subid
        - description: Client API version.
          in: query
          name: api-version
          required: true
          schema:
            type: string
          examples:
            ExpressRoutePortsLocationGet:
              value: 2019-06-01
        - description: Name of the requested ExpressRoutePort peering location.
          in: path
          name: locationName
          required: true
          schema:
            type: string
          examples:
            ExpressRoutePortsLocationGet:
              value: locationName
      responses:
        "200":
          description: Request successful. The operation returns the requested
            ExpressRoutePort peering location.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ExpressRoutePortsLocation"
              examples:
                ExpressRoutePortsLocationGet:
                  $ref: "#/components/examples/ExpressRoutePortsLocationGet"
      tags:
        - ExpressRoutePortsLocations
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/ExpressRoutePorts":
    get:
      description: List all the ExpressRoutePort resources in the specified resource group.
      operationId: ExpressRoutePorts_ListByResourceGroup
      parameters:
        - description: The subscription credentials which uniquely identify the Microsoft
            Azure subscription. The subscription ID forms part of the URI for
            every service call.
          in: path
          name: subscriptionId
          required: true
          schema:
            type: string
          examples:
            ExpressRoutePortListByResourceGroup:
              value: subid
        - description: Client API version.
          in: query
          name: api-version
          required: true
          schema:
            type: string
          examples:
            ExpressRoutePortListByResourceGroup:
              value: 2019-06-01
        - description: The name of the resource group.
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
          examples:
            ExpressRoutePortListByResourceGroup:
              value: rg1
      responses:
        "200":
          description: Request successful. The operation returns a list of ExpressRoutePort
            resources. If there are no ExpressRoutePort resources then an empty
            list is returned.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ExpressRoutePortListResult"
              examples:
                ExpressRoutePortListByResourceGroup:
                  $ref: "#/components/examples/ExpressRoutePortListByResourceGroup"
      tags:
        - ExpressRoutePorts
      x-ms-pageable:
        nextLinkName: nextLink
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/ExpressRoutePorts/{expressRoutePortName}":
    delete:
      description: Deletes the specified ExpressRoutePort resource.
      operationId: ExpressRoutePorts_Delete
      parameters:
        - description: The subscription credentials which uniquely identify the Microsoft
            Azure subscription. The subscription ID forms part of the URI for
            every service call.
          in: path
          name: subscriptionId
          required: true
          schema:
            type: string
          examples:
            ExpressRoutePortDelete:
              value: subid
        - description: Client API version.
          in: query
          name: api-version
          required: true
          schema:
            type: string
          examples:
            ExpressRoutePortDelete:
              value: 2019-06-01
        - description: The name of the resource group.
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
          examples:
            ExpressRoutePortDelete:
              value: rg1
        - description: The name of the ExpressRoutePort resource.
          in: path
          name: expressRoutePortName
          required: true
          schema:
            type: string
          examples:
            ExpressRoutePortDelete:
              value: portName
      responses:
        "200":
          description: Delete successful.
        "202":
          description: Accepted and the operation will complete asynchronously.
        "204":
          description: Request successful. Resource does not exist.
      tags:
        - ExpressRoutePorts
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
    get:
      description: Retrieves the requested ExpressRoutePort resource.
      operationId: ExpressRoutePorts_Get
      parameters:
        - description: The subscription credentials which uniquely identify the Microsoft
            Azure subscription. The subscription ID forms part of the URI for
            every service call.
          in: path
          name: subscriptionId
          required: true
          schema:
            type: string
          examples:
            ExpressRoutePortGet:
              value: subid
        - description: Client API version.
          in: query
          name: api-version
          required: true
          schema:
            type: string
          examples:
            ExpressRoutePortGet:
              value: 2019-06-01
        - description: The name of the resource group.
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
          examples:
            ExpressRoutePortGet:
              value: rg1
        - description: The name of ExpressRoutePort.
          in: path
          name: expressRoutePortName
          required: true
          schema:
            type: string
          examples:
            ExpressRoutePortGet:
              value: portName
      responses:
        "200":
          description: Request successful. The operation returns the requested
            ExpressRoutePort resource.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ExpressRoutePort"
              examples:
                ExpressRoutePortGet:
                  $ref: "#/components/examples/ExpressRoutePortGet"
      tags:
        - ExpressRoutePorts
    patch:
      description: Update ExpressRoutePort tags.
      operationId: ExpressRoutePorts_UpdateTags
      parameters:
        - description: The subscription credentials which uniquely identify the Microsoft
            Azure subscription. The subscription ID forms part of the URI for
            every service call.
          in: path
          name: subscriptionId
          required: true
          schema:
            type: string
          examples:
            ExpressRoutePortUpdateTags:
              value: subid
        - description: Client API version.
          in: query
          name: api-version
          required: true
          schema:
            type: string
          examples:
            ExpressRoutePortUpdateTags:
              value: 2019-06-01
        - description: The name of the resource group.
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
          examples:
            ExpressRoutePortUpdateTags:
              value: rg1
        - description: The name of the ExpressRoutePort resource.
          in: path
          name: expressRoutePortName
          required: true
          schema:
            type: string
          examples:
            ExpressRoutePortUpdateTags:
              value: portName
      requestBody:
        content:
          application/json:
            schema:
              description: Tags object for patch operations.
              properties:
                tags:
                  additionalProperties:
                    type: string
                  description: Resource tags.
                  type: object
        description: Parameters supplied to update ExpressRoutePort resource tags.
        required: true
      responses:
        "200":
          description: Update successful. The operation returns the resulting
            ExpressRoutePort resource.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ExpressRoutePort"
              examples:
                ExpressRoutePortUpdateTags:
                  $ref: "#/components/examples/ExpressRoutePortUpdateTags"
      tags:
        - ExpressRoutePorts
      x-ms-long-running-operation: true
    put:
      description: Creates or updates the specified ExpressRoutePort resource.
      operationId: ExpressRoutePorts_CreateOrUpdate
      parameters:
        - description: The subscription credentials which uniquely identify the Microsoft
            Azure subscription. The subscription ID forms part of the URI for
            every service call.
          in: path
          name: subscriptionId
          required: true
          schema:
            type: string
          examples:
            ExpressRoutePortCreate:
              value: subid
            ExpressRoutePortUpdateLink:
              value: subid
        - description: Client API version.
          in: query
          name: api-version
          required: true
          schema:
            type: string
          examples:
            ExpressRoutePortCreate:
              value: 2019-06-01
            ExpressRoutePortUpdateLink:
              value: 2019-06-01
        - description: The name of the resource group.
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
          examples:
            ExpressRoutePortCreate:
              value: rg1
            ExpressRoutePortUpdateLink:
              value: rg1
        - description: The name of the ExpressRoutePort resource.
          in: path
          name: expressRoutePortName
          required: true
          schema:
            type: string
          examples:
            ExpressRoutePortCreate:
              value: portName
            ExpressRoutePortUpdateLink:
              value: portName
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ExpressRoutePort"
        description: Parameters supplied to the create ExpressRoutePort operation.
        required: true
      responses:
        "200":
          description: Update successful. The operation returns the resulting
            ExpressRoutePort resource.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ExpressRoutePort"
              examples:
                ExpressRoutePortCreate:
                  $ref: "#/components/examples/ExpressRoutePortCreate"
                ExpressRoutePortUpdateLink:
                  $ref: "#/components/examples/ExpressRoutePortUpdateLink"
        "201":
          description: Create successful. The operation returns the resulting
            ExpressRoutePort resource.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ExpressRoutePort"
              examples:
                ExpressRoutePortCreate:
                  $ref: "#/components/examples/ExpressRoutePortCreate"
                ExpressRoutePortUpdateLink:
                  $ref: "#/components/examples/ExpressRoutePortUpdateLink"
      tags:
        - ExpressRoutePorts
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/ExpressRoutePorts/{expressRoutePortName}/links":
    get:
      description: Retrieve the ExpressRouteLink sub-resources of the specified
        ExpressRoutePort resource.
      operationId: ExpressRouteLinks_List
      parameters:
        - description: The subscription credentials which uniquely identify the Microsoft
            Azure subscription. The subscription ID forms part of the URI for
            every service call.
          in: path
          name: subscriptionId
          required: true
          schema:
            type: string
          examples:
            ExpressRouteLinkGet:
              value: subid
        - description: Client API version.
          in: query
          name: api-version
          required: true
          schema:
            type: string
          examples:
            ExpressRouteLinkGet:
              value: 2019-06-01
        - description: The name of the resource group.
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
          examples:
            ExpressRouteLinkGet:
              value: rg1
        - description: The name of the ExpressRoutePort resource.
          in: path
          name: expressRoutePortName
          required: true
          schema:
            type: string
          examples:
            ExpressRouteLinkGet:
              value: portName
      responses:
        "200":
          description: Request successful. The operation returns a list of ExpressRouteLink
            resources. If there are no ExpressRouteLink resources then an empty
            list is returned.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ExpressRouteLinkListResult"
              examples:
                ExpressRouteLinkGet:
                  $ref: "#/components/examples/ExpressRouteLinkGet"
      tags:
        - ExpressRouteLinks
      x-ms-pageable:
        nextLinkName: nextLink
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/ExpressRoutePorts/{expressRoutePortName}/links/{linkName}":
    get:
      description: Retrieves the specified ExpressRouteLink resource.
      operationId: ExpressRouteLinks_Get
      parameters:
        - description: The subscription credentials which uniquely identify the Microsoft
            Azure subscription. The subscription ID forms part of the URI for
            every service call.
          in: path
          name: subscriptionId
          required: true
          schema:
            type: string
          examples:
            ExpressRouteLinkGet:
              value: subid
        - description: Client API version.
          in: query
          name: api-version
          required: true
          schema:
            type: string
          examples:
            ExpressRouteLinkGet:
              value: 2019-06-01
        - description: The name of the resource group.
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
          examples:
            ExpressRouteLinkGet:
              value: rg1
        - description: The name of the ExpressRoutePort resource.
          in: path
          name: expressRoutePortName
          required: true
          schema:
            type: string
          examples:
            ExpressRouteLinkGet:
              value: portName
        - description: The name of the ExpressRouteLink resource.
          in: path
          name: linkName
          required: true
          schema:
            type: string
          examples:
            ExpressRouteLinkGet:
              value: linkName
      responses:
        "200":
          description: Request successful. The operation returns the requested
            ExpressRouteLink resource.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ExpressRouteLink"
              examples:
                ExpressRouteLinkGet:
                  $ref: "#/components/examples/ExpressRouteLinkGet"
      tags:
        - ExpressRouteLinks
servers:
  - url: https://management.azure.com
components:
  examples:
    ExpressRoutePortList:
      value:
        value:
          - id: /subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/expressRoutePorts/portName
            location: westus
            name: portName
            properties:
              allocationDate: Friday, July 1, 2018
              bandwidthInGbps: 100
              circuits: []
              encapsulation: QinQ
              etherType: "0x8100"
              links:
                - id: /subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/expressRoutePorts/portName/links/link1
                  name: link1
                  properties:
                    adminState: Disabled
                    connectorType: LC
                    interfaceName: Ethernet 0/0
                    patchPanelId: patchPanelId1
                    provisioningState: Succeeded
                    rackId: rackId1
                    routerName: router1
                - id: /subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/expressRoutePorts/portName/links/link2
                  name: link2
                  properties:
                    adminState: Disabled
                    connectorType: LC
                    interfaceName: Ethernet 0/0
                    patchPanelId: patchPanelId2
                    provisioningState: Succeeded
                    rackId: rackId2
                    routerName: router2
              mtu: "1500"
              peeringLocation: peeringLocationName
              provisionedBandwidthInGbps: 0
              provisioningState: Succeeded
            type: Microsoft.Network/expressRoutePorts
    ExpressRoutePortsLocationList:
      value:
        value:
          - id: /subscriptions/subid/providers/Microsoft.Network/expressRoutePortsLocations/locationName
            location: westus
            name: locationName
            properties:
              address: 123 Main Street, City, State, Zip
              availableBandwidths: []
              contact: email@address.com
              provisioningState: Succeeded
            type: Microsoft.Network/expressRoutePortsLocations
    ExpressRoutePortsLocationGet:
      value:
        id: /subscriptions/subid/providers/Microsoft.Network/expressRoutePortsLocations/locationName
        location: westus
        name: locationName
        properties:
          address: 123 Main Street, City, State, Zip
          availableBandwidths:
            - offerName: 100 Gbps
              valueInGbps: 100
          contact: email@address.com
          provisioningState: Succeeded
        type: Microsoft.Network/expressRoutePortsLocations
    ExpressRoutePortListByResourceGroup:
      value:
        value:
          - id: /subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/expressRoutePorts/portName
            location: westus
            name: portName
            properties:
              allocationDate: Friday, July 1, 2018
              bandwidthInGbps: 100
              circuits: []
              encapsulation: QinQ
              etherType: "0x8100"
              links:
                - id: /subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/expressRoutePorts/portName/links/link1
                  name: link1
                  properties:
                    adminState: Disabled
                    connectorType: LC
                    interfaceName: Ethernet 0/0
                    patchPanelId: patchPanelId1
                    provisioningState: Succeeded
                    rackId: rackId1
                    routerName: router1
                - id: /subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/expressRoutePorts/portName/links/link2
                  name: link2
                  properties:
                    adminState: Disabled
                    connectorType: LC
                    interfaceName: Ethernet 0/0
                    patchPanelId: patchPanelId2
                    provisioningState: Succeeded
                    rackId: rackId2
                    routerName: router2
              mtu: "1500"
              peeringLocation: peeringLocationName
              provisionedBandwidthInGbps: 0
              provisioningState: Succeeded
            type: Microsoft.Network/expressRoutePorts
    ExpressRoutePortGet:
      value:
        id: /subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/expressRoutePorts/portName
        location: westus
        name: portName
        properties:
          allocationDate: Friday, July 1, 2018
          bandwidthInGbps: 100
          circuits: []
          encapsulation: QinQ
          etherType: "0x8100"
          links:
            - id: /subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/expressRoutePorts/portName/links/link1
              name: link1
              properties:
                adminState: Disabled
                connectorType: LC
                interfaceName: Ethernet 0/0
                patchPanelId: patchPanelId1
                provisioningState: Succeeded
                rackId: rackId1
                routerName: router1
            - id: /subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/expressRoutePorts/portName/links/link2
              name: link2
              properties:
                adminState: Disabled
                connectorType: LC
                interfaceName: Ethernet 0/0
                patchPanelId: patchPanelId2
                provisioningState: Succeeded
                rackId: rackId2
                routerName: router2
          mtu: "1500"
          peeringLocation: peeringLocationName
          provisionedBandwidthInGbps: 0
          provisioningState: Succeeded
        type: Microsoft.Network/expressRoutePorts
    ExpressRoutePortUpdateTags:
      value:
        id: /subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/expressRoutePorts/portName
        location: westus
        name: portName
        properties:
          allocationDate: Friday, July 1, 2018
          bandwidthInGbps: 100
          circuits: []
          encapsulation: QinQ
          etherType: "0x8100"
          links:
            - id: /subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/expressRoutePorts/portName/links/link1
              name: link1
              properties:
                adminState: Disabled
                connectorType: LC
                interfaceName: Ethernet 0/0
                patchPanelId: patchPanelId1
                provisioningState: Succeeded
                rackId: rackId1
                routerName: router1
            - id: /subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/expressRoutePorts/portName/links/link2
              name: link2
              properties:
                adminState: Disabled
                connectorType: LC
                interfaceName: Ethernet 0/0
                patchPanelId: patchPanelId2
                provisioningState: Succeeded
                rackId: rackId2
                routerName: router2
          mtu: "1500"
          peeringLocation: peeringLocationName
          provisionedBandwidthInGbps: 0
          provisioningState: Succeeded
        type: Microsoft.Network/expressRoutePorts
    ExpressRoutePortCreate:
      value:
        id: /subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/expressRoutePorts/portName
        location: westus
        name: portName
        properties:
          allocationDate: Friday, July 1, 2018
          bandwidthInGbps: 100
          circuits: []
          encapsulation: QinQ
          etherType: "0x8100"
          links:
            - id: /subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/expressRoutePorts/portName/links/link1
              name: link1
              properties:
                adminState: Disabled
                connectorType: LC
                interfaceName: Ethernet 0/0
                patchPanelId: patchPanelId1
                provisioningState: Succeeded
                rackId: rackId1
                routerName: router1
            - id: /subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/expressRoutePorts/portName/links/link2
              name: link2
              properties:
                adminState: Disabled
                connectorType: LC
                interfaceName: Ethernet 0/0
                patchPanelId: patchPanelId2
                provisioningState: Succeeded
                rackId: rackId2
                routerName: router2
          mtu: "1500"
          peeringLocation: peeringLocationName
          provisionedBandwidthInGbps: 0
          provisioningState: Succeeded
        type: Microsoft.Network/expressRoutePorts
    ExpressRoutePortUpdateLink:
      value:
        id: /subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/expressRoutePorts/portName
        location: westus
        name: portName
        properties:
          allocationDate: Friday, July 1, 2018
          bandwidthInGbps: 100
          circuits: []
          encapsulation: QinQ
          etherType: "0x8100"
          links:
            - id: /subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/expressRoutePorts/portName/links/link1
              name: link1
              properties:
                adminState: Enabled
                connectorType: LC
                interfaceName: Ethernet 0/0
                patchPanelId: patchPanelId1
                provisioningState: Succeeded
                rackId: rackId1
                routerName: router1
            - id: /subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/expressRoutePorts/portName/links/link2
              name: link2
              properties:
                adminState: Disabled
                connectorType: LC
                interfaceName: Ethernet 0/0
                patchPanelId: patchPanelId2
                provisioningState: Succeeded
                rackId: rackId2
                routerName: router2
          mtu: "1500"
          peeringLocation: peeringLocationName
          provisionedBandwidthInGbps: 0
          provisioningState: Succeeded
        type: Microsoft.Network/expressRoutePorts
    ExpressRouteLinkGet:
      value:
        id: /subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/expressRoutePorts/portName/links/linkName
        name: linkName
        properties:
          adminState: Disabled
          connectorType: LC
          interfaceName: Ethernet 0/0
          patchPanelId: patchPanelId1
          provisioningState: Succeeded
          rackId: rackId1
          routerName: router1
  securitySchemes:
    azure_auth:
      description: Azure Active Directory OAuth2 Flow.
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
          scopes:
            user_impersonation: impersonate your user account
  schemas:
    ExpressRouteLink:
      allOf:
        - description: Reference to another subresource.
          properties:
            id:
              description: Resource ID.
              type: string
          x-ms-azure-resource: true
      description: ExpressRouteLink child resource definition.
      properties:
        etag:
          description: A unique read-only string that changes whenever the resource is
            updated.
          readOnly: true
          type: string
        name:
          description: Name of child port resource that is unique among child port
            resources of the parent.
          type: string
        properties:
          $ref: "#/components/schemas/ExpressRouteLinkPropertiesFormat"
      title: ExpressRouteLink
    ExpressRouteLinkListResult:
      description: Response for ListExpressRouteLinks API service call.
      properties:
        nextLink:
          description: The URL to get the next set of results.
          type: string
        value:
          description: The list of ExpressRouteLink sub-resources.
          items:
            $ref: "#/components/schemas/ExpressRouteLink"
          type: array
      title: ExpressRouteLink List Result
    ExpressRouteLinkPropertiesFormat:
      description: Properties specific to ExpressRouteLink resources.
      properties:
        adminState:
          description: Administrative state of the physical port.
          enum:
            - Enabled
            - Disabled
          type: string
          x-ms-enum:
            modelAsString: true
            name: ExpressRouteLinkAdminState
        connectorType:
          description: Physical fiber port type.
          enum:
            - LC
            - SC
          readOnly: true
          type: string
          x-ms-enum:
            modelAsString: true
            name: ExpressRouteLinkConnectorType
        interfaceName:
          description: Name of Azure router interface.
          readOnly: true
          type: string
        patchPanelId:
          description: Mapping between physical port to patch panel port.
          readOnly: true
          type: string
        provisioningState:
          description: "The provisioning state of the ExpressRouteLink resource. Possible
            values are: 'Succeeded', 'Updating', 'Deleting', and 'Failed'."
          readOnly: true
          type: string
        rackId:
          description: Mapping of physical patch panel to rack.
          readOnly: true
          type: string
        routerName:
          description: Name of Azure router associated with physical port.
          readOnly: true
          type: string
      title: ExpressRouteLink Resource Properties
    ExpressRoutePort:
      allOf:
        - description: Common resource representation.
          properties:
            id:
              description: Resource ID.
              type: string
            location:
              description: Resource location.
              type: string
            name:
              description: Resource name.
              readOnly: true
              type: string
            tags:
              additionalProperties:
                type: string
              description: Resource tags.
              type: object
            type:
              description: Resource type.
              readOnly: true
              type: string
          x-ms-azure-resource: true
      description: ExpressRoutePort resource definition.
      properties:
        etag:
          description: A unique read-only string that changes whenever the resource is
            updated.
          readOnly: true
          type: string
        properties:
          $ref: "#/components/schemas/ExpressRoutePortPropertiesFormat"
      title: ExpressRoute Port
    ExpressRoutePortListResult:
      description: Response for ListExpressRoutePorts API service call.
      properties:
        nextLink:
          description: The URL to get the next set of results.
          type: string
        value:
          description: A list of ExpressRoutePort resources.
          items:
            $ref: "#/components/schemas/ExpressRoutePort"
          type: array
      title: ExpressRoute Port List Result
    ExpressRoutePortPropertiesFormat:
      description: Properties specific to ExpressRoutePort resources.
      properties:
        allocationDate:
          description: Date of the physical port allocation to be used in Letter of
            Authorization.
          readOnly: true
          type: string
        bandwidthInGbps:
          description: Bandwidth of procured ports in Gbps.
          type: integer
        circuits:
          description: Reference the ExpressRoute circuit(s) that are provisioned on this
            ExpressRoutePort resource.
          items:
            description: Reference to another subresource.
            properties:
              id:
                description: Resource ID.
                type: string
            x-ms-azure-resource: true
          readOnly: true
          type: array
        encapsulation:
          description: Encapsulation method on physical ports.
          enum:
            - Dot1Q
            - QinQ
          type: string
          x-ms-enum:
            modelAsString: true
            name: ExpressRoutePortsEncapsulation
        etherType:
          description: Ether type of the physical port.
          readOnly: true
          type: string
        links:
          description: The set of physical links of the ExpressRoutePort resource.
          items:
            $ref: "#/components/schemas/ExpressRouteLink"
          readOnly: false
          title: ExpressRouteLink Sub-Resources
          type: array
        mtu:
          description: Maximum transmission unit of the physical port pair(s).
          readOnly: true
          type: string
        peeringLocation:
          description: The name of the peering location that the ExpressRoutePort is mapped
            to physically.
          type: string
        provisionedBandwidthInGbps:
          description: Aggregate Gbps of associated circuit bandwidths.
          readOnly: true
          type: number
        provisioningState:
          description: "The provisioning state of the ExpressRoutePort resource. Possible
            values are: 'Succeeded', 'Updating', 'Deleting', and 'Failed'."
          readOnly: true
          type: string
        resourceGuid:
          description: The resource GUID property of the ExpressRoutePort resource.
          type: string
      title: ExpressRoutePort Properties
    ExpressRoutePortsLocation:
      allOf:
        - description: Common resource representation.
          properties:
            id:
              description: Resource ID.
              type: string
            location:
              description: Resource location.
              type: string
            name:
              description: Resource name.
              readOnly: true
              type: string
            tags:
              additionalProperties:
                type: string
              description: Resource tags.
              type: object
            type:
              description: Resource type.
              readOnly: true
              type: string
          x-ms-azure-resource: true
      description: Definition of the ExpressRoutePorts peering location resource.
      properties:
        properties:
          $ref: "#/components/schemas/ExpressRoutePortsLocationPropertiesFormat"
      title: ExpressRoutePorts Peering Location
    ExpressRoutePortsLocationBandwidths:
      description: Real-time inventory of available ExpressRoute port bandwidths.
      properties:
        offerName:
          description: Bandwidth descriptive name.
          readOnly: true
          type: string
        valueInGbps:
          description: Bandwidth value in Gbps.
          readOnly: true
          type: integer
      title: ExpressRoutePorts Location Bandwidths
    ExpressRoutePortsLocationListResult:
      description: Response for ListExpressRoutePortsLocations API service call.
      properties:
        nextLink:
          description: The URL to get the next set of results.
          type: string
        value:
          description: The list of all ExpressRoutePort peering locations.
          items:
            $ref: "#/components/schemas/ExpressRoutePortsLocation"
          type: array
      title: ExpressRoutePorts Location List Result
    ExpressRoutePortsLocationPropertiesFormat:
      description: Properties specific to ExpressRoutePorts peering location resources.
      properties:
        address:
          description: Address of peering location.
          readOnly: true
          type: string
        availableBandwidths:
          description: The inventory of available ExpressRoutePort bandwidths.
          items:
            $ref: "#/components/schemas/ExpressRoutePortsLocationBandwidths"
          type: array
        contact:
          description: Contact details of peering locations.
          readOnly: true
          type: string
        provisioningState:
          description: "The provisioning state of the ExpressRoutePortLocation resource.
            Possible values are: 'Succeeded', 'Updating', 'Deleting', and
            'Failed'."
          readOnly: true
          type: string
      title: ExpressRoutePorts Location Properties
