openapi: 3.0.0
info:
  title: ContainerInstanceManagementClient
  version: 2017-08-01-preview
  x-apisguru-categories:
    - cloud
  x-logo:
    url: https://assets.onestore.ms/cdnfiles/onestorerolling-1606-01000/shell/v3/images/logo/microsoft.png
  x-origin:
    - format: swagger
      url: https://raw.githubusercontent.com/Azure/azure-rest-api-specs/master/specification/containerinstance/resource-manager/Microsoft.ContainerInstance/preview/2017-08-01-preview/containerInstance.json
      version: "2.0"
  x-preferred: false
  x-providerName: azure.com
  x-serviceName: containerinstance-containerInstance
  x-tags:
    - Azure
    - Microsoft
security:
  - azure_auth:
      - user_impersonation
paths:
  "/subscriptions/{subscriptionId}/providers/Microsoft.ContainerInstance/containerGroups":
    get:
      description: Get a list of container groups in the specified subscription. This
        operation returns properties of each container group including
        containers, image registry credentials, restart policy, IP address type,
        OS type, state, and volumes.
      operationId: ContainerGroups_List
      parameters:
        - $ref: "#/components/parameters/SubscriptionIdParameter"
        - $ref: "#/components/parameters/ApiVersionParameter"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ContainerGroupListResult"
              examples:
                ContainerGroupsList:
                  $ref: "#/components/examples/ContainerGroupsList"
      summary: Get a list of container groups in the specified subscription.
      x-ms-pageable:
        nextLinkName: nextLink
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerInstance/containerGroups":
    get:
      description: Get a list of container groups in a specified subscription and resource
        group. This operation returns properties of each container group
        including containers, image registry credentials, restart policy, IP
        address type, OS type, state, and volumes.
      operationId: ContainerGroups_ListByResourceGroup
      parameters:
        - $ref: "#/components/parameters/SubscriptionIdParameter"
        - $ref: "#/components/parameters/ApiVersionParameter"
        - description: The name of the resource group that contains the container group.
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
          examples:
            ContainerGroupsListByResourceGroup:
              value: demo
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ContainerGroupListResult"
              examples:
                ContainerGroupsListByResourceGroup:
                  $ref: "#/components/examples/ContainerGroupsListByResourceGroup"
      summary: Get a list of container groups in the specified subscription and
        resource group.
      x-ms-pageable:
        nextLinkName: nextLink
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerInstance/containerGroups/{containerGroupName}":
    delete:
      description: Delete the specified container group in the specified subscription and
        resource group. The operation does not delete other resources provided
        by the user, such as volumes.
      operationId: ContainerGroups_Delete
      parameters:
        - $ref: "#/components/parameters/SubscriptionIdParameter"
        - $ref: "#/components/parameters/ApiVersionParameter"
        - description: The name of the resource group that contains the container group.
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
          examples:
            ContainerGroupsDelete:
              value: demo
        - description: The name of the container group to be deleted.
          in: path
          name: containerGroupName
          required: true
          schema:
            type: string
          examples:
            ContainerGroupsDelete:
              value: demo1
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ContainerGroup"
        "204":
          description: No Content - the specified container group was not found.
      summary: Delete the specified container group.
    get:
      description: Gets the properties of the specified container group in the specified
        subscription and resource group. The operation returns the properties of
        each container group including containers, image registry credentials,
        restart policy, IP address type, OS type, state, and volumes.
      operationId: ContainerGroups_Get
      parameters:
        - $ref: "#/components/parameters/SubscriptionIdParameter"
        - $ref: "#/components/parameters/ApiVersionParameter"
        - description: The name of the resource group that contains the container group.
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
          examples:
            ContainerGroupsGet:
              value: demo
        - description: The name of the container group.
          in: path
          name: containerGroupName
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ContainerGroup"
              examples:
                ContainerGroupsGet:
                  $ref: "#/components/examples/ContainerGroupsGet"
      summary: Get the properties of the specified container group.
    put:
      description: Create or update container groups with specified configurations.
      operationId: ContainerGroups_CreateOrUpdate
      parameters:
        - $ref: "#/components/parameters/SubscriptionIdParameter"
        - $ref: "#/components/parameters/ApiVersionParameter"
        - description: The name of the resource group to contain the container group to be
            created or updated.
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
          examples:
            ContainerGroupsCreateOrUpdate:
              value: demo
        - description: The name of the container group to be created or updated.
          in: path
          name: containerGroupName
          required: true
          schema:
            type: string
          examples:
            ContainerGroupsCreateOrUpdate:
              value: demo1
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ContainerGroup"
        description: The properties of the container group to be created or updated.
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ContainerGroup"
              examples:
                ContainerGroupsCreateOrUpdate:
                  $ref: "#/components/examples/ContainerGroupsCreateOrUpdate"
        "201":
          description: Created - the container group is created.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ContainerGroup"
              examples:
                ContainerGroupsCreateOrUpdate:
                  $ref: "#/components/examples/ContainerGroupsCreateOrUpdate"
      summary: Create or update container groups.
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerInstance/containerGroups/{containerGroupName}/containers/{containerName}/logs":
    get:
      description: Get the logs for a specified container instance in a specified resource
        group and container group.
      operationId: ContainerLogs_List
      parameters:
        - $ref: "#/components/parameters/SubscriptionIdParameter"
        - $ref: "#/components/parameters/ApiVersionParameter"
        - description: The name of the resource group that contains the container instance.
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
          examples:
            ContainerLogsList:
              value: demo
        - description: The name of the container instance.
          in: path
          name: containerName
          required: true
          schema:
            type: string
          examples:
            ContainerLogsList:
              value: container1
        - description: The name of the container group the container instance belongs to.
          in: path
          name: containerGroupName
          required: true
          schema:
            type: string
          examples:
            ContainerLogsList:
              value: demo1
        - description: The number of lines to show from the tail of the container instance
            log. If not provided, all available logs are shown up to 4mb.
          in: query
          name: tail
          schema:
            type: integer
          examples:
            ContainerLogsList:
              value: 10
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Logs"
              examples:
                ContainerLogsList:
                  $ref: "#/components/examples/ContainerLogsList"
      summary: Get the logs for a specified container instance.
servers:
  - url: https://management.azure.com
components:
  examples:
    ContainerGroupsList:
      value:
        value:
          - id: /subscriptions/subid/resourceGroups/demo/providers/Microsoft.ContainerInstance/containerGroups/demo1
            location: WestUs
            name: demo1
            properties:
              containers:
                - name: demo1
                  properties:
                    environmentVariables: []
                    image: nginx
                    ports:
                      - port: 80
                    resources:
                      requests:
                        cpu: 1
                        memoryInGb: 1.5
                    volumeMounts:
                      - mountPath: /mnt/volume1
                        name: volume1
                        readOnly: false
              imageRegistryCredentials:
                - server: azcloudconsoleregistry.azurecr.io
                  username: azcloudconsoleregistry
              ipAddress:
                ip: 10.0.0.1
                ports:
                  - port: 80
                    protocol: TCP
              osType: Linux
              provisioningState: Succeeded
              volumes:
                - azureFile:
                    shareName: share1
                    storageAccountName: stroage1
                  name: volume1
            resourceGroup: demo
            type: Microsoft.ContainerInstance/containerGroups
    ContainerGroupsListByResourceGroup:
      value:
        value:
          - id: /subscriptions/subid/resourceGroups/demo/providers/Microsoft.ContainerInstance/containerGroups/demo1
            location: WestUs
            name: demo1
            properties:
              containers:
                - name: demo1
                  properties:
                    environmentVariables: []
                    image: nginx
                    ports:
                      - port: 80
                    resources:
                      requests:
                        cpu: 1
                        memoryInGb: 1.5
                    volumeMounts:
                      - mountPath: /mnt/volume1
                        name: volume1
                        readOnly: false
              imageRegistryCredentials:
                - server: azcloudconsoleregistry.azurecr.io
                  username: azcloudconsoleregistry
              ipAddress:
                ip: 10.0.0.1
                ports:
                  - port: 80
                    protocol: TCP
              osType: Linux
              provisioningState: Succeeded
              volumes:
                - azureFile:
                    shareName: share1
                    storageAccountName: stroage1
                  name: volume1
            resourceGroup: demo
            type: Microsoft.ContainerInstance/containerGroups
    ContainerGroupsGet:
      value:
        id: /subscriptions/subid/resourceGroups/demo/providers/Microsoft.ContainerInstance/containerGroups/demo1
        location: WestUs
        name: demo1
        properties:
          containers:
            - name: demo1
              properties:
                environmentVariables: []
                image: nginx
                ports:
                  - port: 80
                resources:
                  requests:
                    cpu: 1
                    memoryInGb: 1.5
                volumeMounts:
                  - mountPath: /mnt/volume1
                    name: volume1
                    readOnly: false
          imageRegistryCredentials:
            - server: azcloudconsoleregistry.azurecr.io
              username: azcloudconsoleregistry
          ipAddress:
            ip: 10.0.0.1
            ports:
              - port: 80
                protocol: TCP
          osType: Linux
          provisioningState: Succeeded
          volumes:
            - azureFile:
                shareName: share1
                storageAccountName: stroage1
              name: volume1
        resourceGroup: demo
        type: Microsoft.ContainerInstance/containerGroups
    ContainerGroupsCreateOrUpdate:
      value:
        id: /subscriptions/subid/resourceGroups/demo/providers/Microsoft.ContainerInstance/containerGroups/demo1
        location: WestUs
        name: demo1
        properties:
          containers:
            - name: demo1
              properties:
                environmentVariables: []
                image: nginx
                ports:
                  - port: 80
                resources:
                  requests:
                    cpu: 1
                    memoryInGb: 1.5
          ipAddress:
            ip: 10.0.0.1
            ports:
              - port: 80
                protocol: TCP
          osType: Linux
          provisioningState: Succeeded
        resourceGroup: demo
        type: Microsoft.ContainerInstance/containerGroups
    ContainerLogsList:
      value:
        content: log content
  parameters:
    ApiVersionParameter:
      description: Client API version
      in: query
      name: api-version
      required: true
      schema:
        type: string
      examples:
        ContainerGroupsList:
          value: 2017-08-01-preview
        ContainerGroupsListByResourceGroup:
          value: 2017-08-01-preview
        ContainerGroupsDelete:
          value: 2017-08-01-preview
        ContainerGroupsGet:
          value: 2017-08-01-preview
        ContainerGroupsCreateOrUpdate:
          value: 2017-08-01-preview
        ContainerLogsList:
          value: 2017-08-01-preview
    SubscriptionIdParameter:
      description: Subscription credentials which uniquely identify Microsoft Azure
        subscription. The subscription ID forms part of the URI for every
        service call.
      in: path
      name: subscriptionId
      required: true
      schema:
        type: string
      examples:
        ContainerGroupsList:
          value: subid
        ContainerGroupsListByResourceGroup:
          value: subid
        ContainerGroupsDelete:
          value: subid
        ContainerGroupsGet:
          value: subid
        ContainerGroupsCreateOrUpdate:
          value: subid
        ContainerLogsList:
          value: subid
  securitySchemes:
    azure_auth:
      description: Azure Active Directory OAuth2 Flow
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
          scopes:
            user_impersonation: Impersonate your user account
  schemas:
    AzureFileVolume:
      description: The properties of the Azure File volume. Azure File shares are mounted
        as volumes.
      properties:
        readOnly:
          description: The flag indicating whether the Azure File shared mounted as a
            volume is read-only.
          type: boolean
        shareName:
          description: The name of the Azure File share to be mounted as a volume.
          type: string
        storageAccountKey:
          description: The storage account access key used to access the Azure File share.
          type: string
        storageAccountName:
          description: The name of the storage account that contains the Azure File share.
          type: string
      required:
        - shareName
        - storageAccountName
      type: object
    Container:
      description: A container instance.
      properties:
        name:
          description: The user-provided name of the container instance.
          type: string
        properties:
          $ref: "#/components/schemas/ContainerProperties"
      required:
        - properties
        - name
      type: object
    ContainerEvent:
      description: A container instance event.
      properties:
        count:
          description: The count of the event.
          type: integer
        firstTimestamp:
          description: The date-time of the earliest logged event.
          format: date-time
          type: string
        lastTimestamp:
          description: The date-time of the latest logged event.
          format: date-time
          type: string
        message:
          description: The event message.
          type: string
        type:
          description: The event type.
          type: string
      type: object
    ContainerGroup:
      allOf:
        - $ref: "#/components/schemas/Resource"
        - properties:
            properties:
              properties:
                containers:
                  description: The containers within the container group.
                  items:
                    $ref: "#/components/schemas/Container"
                  type: array
                imageRegistryCredentials:
                  description: The image registry credentials by which the container group
                    is created from.
                  items:
                    $ref: "#/components/schemas/ImageRegistryCredential"
                  type: array
                ipAddress:
                  $ref: "#/components/schemas/IpAddress"
                osType:
                  description: The operating system type required by the containers in the
                    container group.
                  enum:
                    - Windows
                    - Linux
                  type: string
                  x-ms-enum:
                    modelAsString: true
                    name: OperatingSystemTypes
                provisioningState:
                  description: The provisioning state of the container group. This only
                    appears in the response.
                  readOnly: true
                  type: string
                restartPolicy:
                  description: Restart policy for all containers within the container
                    group. Currently the only available option is `always`.
                  enum:
                    - always
                  type: string
                  x-ms-enum:
                    modelAsString: true
                    name: ContainerRestartPolicy
                state:
                  description: The current state of the container group. This is only valid
                    for the response.
                  readOnly: true
                  type: string
                volumes:
                  description: The list of volumes that can be mounted by containers in
                    this container group.
                  items:
                    $ref: "#/components/schemas/Volume"
                  type: array
              required:
                - containers
                - osType
              type: object
              x-ms-client-flatten: true
          required:
            - properties
          type: object
      description: A container group.
    ContainerGroupListResult:
      description: The container group list response that contains the container group
        properties.
      properties:
        nextLink:
          description: The URI to fetch the next page of container groups.
          type: string
        value:
          description: The list of container groups.
          items:
            $ref: "#/components/schemas/ContainerGroup"
          type: array
      type: object
    ContainerPort:
      description: The port exposed on the container instance.
      properties:
        port:
          description: The port number exposed within the container group.
          format: int32
          type: integer
      required:
        - port
      type: object
    ContainerProperties:
      description: The container instance properties.
      properties:
        command:
          description: The commands to execute within the container instance in exec form.
          items:
            type: string
          type: array
        environmentVariables:
          description: The environment variables to set in the container instance.
          items:
            $ref: "#/components/schemas/EnvironmentVariable"
          type: array
        image:
          description: The name of the image used to create the container instance.
          type: string
        instanceView:
          description: The instance view of the container instance. Only valid in response.
          properties:
            currentState:
              $ref: "#/components/schemas/ContainerState"
            events:
              description: The events of the container instance.
              items:
                $ref: "#/components/schemas/ContainerEvent"
              type: array
            previousState:
              $ref: "#/components/schemas/ContainerState"
            restartCount:
              description: The number of times that the container instance has been
                restarted.
              type: integer
          readOnly: true
          type: object
        ports:
          description: The exposed ports on the container instance.
          items:
            $ref: "#/components/schemas/ContainerPort"
          type: array
        resources:
          $ref: "#/components/schemas/ResourceRequirements"
        volumeMounts:
          description: The volume mounts available to the container instance.
          items:
            $ref: "#/components/schemas/VolumeMount"
          type: array
      required:
        - image
        - resources
      type: object
    ContainerState:
      description: The container instance state.
      properties:
        detailStatus:
          description: The human-readable status of the container instance state.
          type: string
        exitCode:
          description: The container instance exit codes correspond to those from the
            `docker run` command.
          type: integer
        finishTime:
          description: The date-time when the container instance state finished.
          format: date-time
          type: string
        startTime:
          description: The date-time when the container instance state started.
          format: date-time
          type: string
        state:
          description: The state of the container instance.
          type: string
      type: object
    EnvironmentVariable:
      description: The environment variable to set within the container instance.
      properties:
        name:
          description: The name of the environment variable.
          type: string
        value:
          description: The value of the environment variable.
          type: string
      required:
        - name
        - value
      type: object
    ImageRegistryCredential:
      description: Image registry credential.
      properties:
        password:
          description: The password for the private registry.
          type: string
        server:
          description: The Docker image registry server without a protocol such as "http"
            and "https".
          type: string
        username:
          description: The username for the private registry.
          type: string
      required:
        - server
        - username
      type: object
    IpAddress:
      description: IP address for the container group.
      properties:
        ip:
          description: The IP exposed to the public internet.
          type: string
        ports:
          description: The list of ports exposed on the container group.
          items:
            $ref: "#/components/schemas/Port"
          type: array
        type:
          description: Specifies if the IP is exposed to the public internet.
          enum:
            - Public
          type: string
          x-ms-enum:
            modelAsString: true
            name: ContainerGroupIpAddressType
      required:
        - ports
        - type
      type: object
    Logs:
      description: The logs.
      properties:
        content:
          description: The content of the log.
          type: string
      type: object
    Port:
      description: The port exposed on the container group.
      properties:
        port:
          description: The port number.
          format: int32
          type: integer
        protocol:
          description: The protocol associated with the port.
          enum:
            - TCP
            - UDP
          type: string
          x-ms-enum:
            modelAsString: true
            name: ContainerGroupNetworkProtocol
      required:
        - port
      type: object
    Resource:
      description: The Resource model definition.
      properties:
        id:
          description: The resource id.
          readOnly: true
          type: string
        location:
          description: The resource location.
          type: string
        name:
          description: The resource name.
          readOnly: true
          type: string
        tags:
          additionalProperties:
            type: string
          description: The resource tags.
          type: object
        type:
          description: The resource type.
          readOnly: true
          type: string
      required:
        - location
      type: object
      x-ms-azure-resource: true
    ResourceLimits:
      description: The resource limits.
      properties:
        cpu:
          description: The CPU limit of this container instance.
          format: double
          type: number
        memoryInGB:
          description: The memory limit in GB of this container instance.
          format: double
          type: number
      type: object
    ResourceRequests:
      description: The resource requests.
      properties:
        cpu:
          description: The CPU request of this container instance.
          format: double
          type: number
        memoryInGB:
          description: The memory request in GB of this container instance.
          format: double
          type: number
      required:
        - memoryInGB
        - cpu
      type: object
    ResourceRequirements:
      description: The resource requirements.
      properties:
        limits:
          $ref: "#/components/schemas/ResourceLimits"
        requests:
          $ref: "#/components/schemas/ResourceRequests"
      required:
        - requests
      type: object
    Volume:
      description: The properties of the volume.
      properties:
        azureFile:
          $ref: "#/components/schemas/AzureFileVolume"
        name:
          description: The name of the volume.
          type: string
      required:
        - name
        - azureFile
      type: object
    VolumeMount:
      description: The properties of the volume mount.
      properties:
        mountPath:
          description: The path within the container where the volume should be mounted.
            Must not contain colon (:).
          type: string
        name:
          description: The name of the volume mount.
          type: string
        readOnly:
          description: The flag indicating whether the volume mount is read-only.
          type: boolean
      required:
        - name
        - mountPath
      type: object
