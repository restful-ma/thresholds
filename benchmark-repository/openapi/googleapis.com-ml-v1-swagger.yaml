openapi: 3.0.0
info:
  contact:
    name: Google
    url: https://google.com
  description: An API to enable creating and using machine learning models.
  title: Google Cloud Machine Learning Engine
  version: v1
  x-apiClientRegistration:
    url: https://console.developers.google.com
  x-apisguru-categories:
    - machine_learning
  x-logo:
    url: https://www.google.com/images/branding/googlelogo/2x/googlelogo_color_272x92dp.png
  x-origin:
    - converter:
        url: https://github.com/lucybot/api-spec-converter
        version: 2.6.0
      format: google
      url: https://ml.googleapis.com/$discovery/rest?version=v1
      version: v1
  x-preferred: true
  x-providerName: googleapis.com
  x-serviceName: ml
externalDocs:
  url: https://cloud.google.com/ml/
tags:
  - name: projects
paths:
  "/v1/{name}":
    delete:
      description: |-
        Deletes a model version.

        Each model can have multiple versions deployed and in use at any given
        time. Use this method to remove a single version.

        Note: You cannot delete the version that is set as the default version
        of the model unless it is the only remaining version.
      operationId: ml.projects.models.versions.delete
      parameters:
        - description: >-
            Required. The name of the version. You can get the names of all the

            versions of a model by calling

            [projects.models.versions.list](/ml-engine/reference/rest/v1/projects.models.versions/list).
          in: path
          name: name
          required: true
          x-reservedExpansion: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/GoogleLongrunning__Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    get:
      description: Describes a job.
      operationId: ml.projects.jobs.get
      parameters:
        - description: Required. The name of the job to get the description of.
          in: path
          name: name
          required: true
          x-reservedExpansion: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/GoogleCloudMlV1__Job"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/bearer_token"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/pp"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/upload_protocol"
    patch:
      description: |-
        Updates a specific job resource.

        Currently the only supported fields to update are `labels`.
      operationId: ml.projects.jobs.patch
      parameters:
        - description: Required. The job name.
          in: path
          name: name
          required: true
          x-reservedExpansion: true
          schema:
            type: string
        - description: >-
            Required. Specifies the path, relative to `Job`, of the field to
            update.

            To adopt etag mechanism, include `etag` field in the mask, and include the

            `etag` value in your job resource.


            For example, to change the labels of a job, the `update_mask` parameter

            would be specified as `labels`, `etag`, and the

            `PATCH` request body would specify the new value, as follows:
                {
                  "labels": {
                     "owner": "Google",
                     "color": "Blue"
                  }
                  "etag": "33a64df551425fcc55e4d42a148795d9f25f89d4"
                }
            If `etag` matches the one on the server, the labels of the job will be

            replaced with the given ones, and the server end `etag` will be

            recalculated.


            Currently the only supported update masks are `labels` and `etag`.
          in: query
          name: updateMask
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/GoogleCloudMlV1__Job"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/GoogleCloudMlV1__Job"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  "/v1/{name}/operations":
    get:
      description: |-
        Lists operations that match the specified filter in the request. If the
        server doesn't support this method, it returns `UNIMPLEMENTED`.

        NOTE: the `name` binding allows API services to override the binding
        to use different resource name schemes, such as `users/*/operations`. To
        override the binding, API services can add a binding such as
        `"/v1/{name=users/*}/operations"` to their service configuration.
        For backwards compatibility, the default name includes the operations
        collection id, however overriding users must ensure the name binding
        is the parent resource, without the operations collection id.
      operationId: ml.projects.operations.list
      parameters:
        - description: The standard list filter.
          in: query
          name: filter
          schema:
            type: string
        - description: The name of the operation's parent resource.
          in: path
          name: name
          required: true
          x-reservedExpansion: true
          schema:
            type: string
        - description: The standard list page size.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: The standard list page token.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/GoogleLongrunning__ListOperationsRespon\
                  se"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/bearer_token"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/pp"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/upload_protocol"
  "/v1/{name}:cancel":
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/bearer_token"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/pp"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/upload_protocol"
    post:
      description: Cancels a running job.
      operationId: ml.projects.jobs.cancel
      parameters:
        - description: Required. The name of the job to cancel.
          in: path
          name: name
          required: true
          x-reservedExpansion: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GoogleCloudMlV1__CancelJobRequest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/GoogleProtobuf__Empty"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  "/v1/{name}:getConfig":
    get:
      description: >-
        Get the service account information associated with your project. You
        need

        this information in order to grant the service account persmissions for

        the Google Cloud Storage location where you put your model training code

        for training the model with Google Cloud Machine Learning.
      operationId: ml.projects.getConfig
      parameters:
        - description: Required. The project name.
          in: path
          name: name
          required: true
          x-reservedExpansion: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/GoogleCloudMlV1__GetConfigResponse"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/bearer_token"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/pp"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/upload_protocol"
  "/v1/{name}:predict":
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/bearer_token"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/pp"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/upload_protocol"
    post:
      description: >-
        Performs prediction on the data in the request.

        Cloud ML Engine implements a custom `predict` verb on top of an HTTP POST

        method. For details of the format, see the **guide to the

        [predict request format](/ml-engine/docs/v1/predict-request)**.
      operationId: ml.projects.predict
      parameters:
        - description: >-
            Required. The resource name of a model or a version.


            Authorization: requires the `predict` permission on the specified resource.
          in: path
          name: name
          required: true
          x-reservedExpansion: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GoogleCloudMlV1__PredictRequest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/GoogleApi__HttpBody"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  "/v1/{name}:setDefault":
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/bearer_token"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/pp"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/upload_protocol"
    post:
      description: >-
        Designates a version to be the default for the model.


        The default version is used for prediction requests made against the model

        that don't specify a version.


        The first version to be created for a model is automatically set as the

        default. You must make any subsequent changes to the default version

        setting manually using this method.
      operationId: ml.projects.models.versions.setDefault
      parameters:
        - description: >-
            Required. The name of the version to make the default for the model.
            You

            can get the names of all the versions of a model by calling

            [projects.models.versions.list](/ml-engine/reference/rest/v1/projects.models.versions/list).
          in: path
          name: name
          required: true
          x-reservedExpansion: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GoogleCloudMlV1__SetDefaultVersionRequest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/GoogleCloudMlV1__Version"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  "/v1/{parent}/jobs":
    get:
      description: Lists the jobs in the project.
      operationId: ml.projects.jobs.list
      parameters:
        - description: Optional. Specifies the subset of jobs to retrieve.
          in: query
          name: filter
          schema:
            type: string
        - description: >-
            Optional. The number of jobs to retrieve per "page" of results. If
            there

            are more remaining results than this number, the response message will

            contain a valid value in the `next_page_token` field.


            The default value is 20, and the maximum page size is 100.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: >-
            Optional. A page token to request the next page of results.


            You get the token from the `next_page_token` field of the response from

            the previous call.
          in: query
          name: pageToken
          schema:
            type: string
        - description: Required. The name of the project for which to list jobs.
          in: path
          name: parent
          required: true
          x-reservedExpansion: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/GoogleCloudMlV1__ListJobsResponse"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/bearer_token"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/pp"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/upload_protocol"
    post:
      description: Creates a training or a batch prediction job.
      operationId: ml.projects.jobs.create
      parameters:
        - description: Required. The project name.
          in: path
          name: parent
          required: true
          x-reservedExpansion: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/GoogleCloudMlV1__Job"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/GoogleCloudMlV1__Job"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  "/v1/{parent}/locations":
    get:
      description: List all locations that provides at least one type of CMLE capability.
      operationId: ml.projects.locations.list
      parameters:
        - description: >-
            Optional. The number of locations to retrieve per "page" of results.
            If there

            are more remaining results than this number, the response message will

            contain a valid value in the `next_page_token` field.


            The default value is 20, and the maximum page size is 100.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: >-
            Optional. A page token to request the next page of results.


            You get the token from the `next_page_token` field of the response from

            the previous call.
          in: query
          name: pageToken
          schema:
            type: string
        - description: >-
            Required. The name of the project for which available locations are
            to be

            listed (since some locations might be whitelisted for specific projects).
          in: path
          name: parent
          required: true
          x-reservedExpansion: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/GoogleCloudMlV1__ListLocationsResponse"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/bearer_token"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/pp"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/upload_protocol"
  "/v1/{parent}/models":
    get:
      description: >-
        Lists the models in a project.


        Each project can contain multiple models, and each model can have multiple

        versions.
      operationId: ml.projects.models.list
      parameters:
        - description: Optional. Specifies the subset of models to retrieve.
          in: query
          name: filter
          schema:
            type: string
        - description: >-
            Optional. The number of models to retrieve per "page" of results. If
            there

            are more remaining results than this number, the response message will

            contain a valid value in the `next_page_token` field.


            The default value is 20, and the maximum page size is 100.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: >-
            Optional. A page token to request the next page of results.


            You get the token from the `next_page_token` field of the response from

            the previous call.
          in: query
          name: pageToken
          schema:
            type: string
        - description: Required. The name of the project whose models are to be listed.
          in: path
          name: parent
          required: true
          x-reservedExpansion: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/GoogleCloudMlV1__ListModelsResponse"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/bearer_token"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/pp"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/upload_protocol"
    post:
      description: >-
        Creates a model which will later contain one or more versions.


        You must add at least one version before you can request predictions from

        the model. Add versions by calling

        [projects.models.versions.create](/ml-engine/reference/rest/v1/projects.models.versions/create).
      operationId: ml.projects.models.create
      parameters:
        - description: Required. The project name.
          in: path
          name: parent
          required: true
          x-reservedExpansion: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GoogleCloudMlV1__Model"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/GoogleCloudMlV1__Model"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  "/v1/{parent}/versions":
    get:
      description: >-
        Gets basic information about all the versions of a model.


        If you expect that a model has a lot of versions, or if you need to handle

        only a limited number of results at a time, you can request that the list

        be retrieved in batches (called pages):
      operationId: ml.projects.models.versions.list
      parameters:
        - description: Optional. Specifies the subset of versions to retrieve.
          in: query
          name: filter
          schema:
            type: string
        - description: >-
            Optional. The number of versions to retrieve per "page" of results.
            If

            there are more remaining results than this number, the response message

            will contain a valid value in the `next_page_token` field.


            The default value is 20, and the maximum page size is 100.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: >-
            Optional. A page token to request the next page of results.


            You get the token from the `next_page_token` field of the response from

            the previous call.
          in: query
          name: pageToken
          schema:
            type: string
        - description: Required. The name of the model for which to list the version.
          in: path
          name: parent
          required: true
          x-reservedExpansion: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/GoogleCloudMlV1__ListVersionsResponse"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/bearer_token"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/pp"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/upload_protocol"
    post:
      description: >-
        Creates a new version of a model from a trained TensorFlow model.


        If the version created in the cloud by this call is the first deployed

        version of the specified model, it will be made the default version of the

        model. When you add a version to a model that already has one or more

        versions, the default version does not automatically change. If you want a

        new version to be the default, you must call

        [projects.models.versions.setDefault](/ml-engine/reference/rest/v1/projects.models.versions/setDefault).
      operationId: ml.projects.models.versions.create
      parameters:
        - description: Required. The name of the model.
          in: path
          name: parent
          required: true
          x-reservedExpansion: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GoogleCloudMlV1__Version"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/GoogleLongrunning__Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  "/v1/{resource}:getIamPolicy":
    get:
      description: >-
        Gets the access control policy for a resource.

        Returns an empty policy if the resource exists and does not have a policy

        set.
      operationId: ml.projects.jobs.getIamPolicy
      parameters:
        - description: >-
            REQUIRED: The resource for which the policy is being requested.

            See the operation documentation for the appropriate value for this field.
          in: path
          name: resource
          required: true
          x-reservedExpansion: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/GoogleIamV1__Policy"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/bearer_token"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/pp"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/upload_protocol"
  "/v1/{resource}:setIamPolicy":
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/bearer_token"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/pp"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/upload_protocol"
    post:
      description: |-
        Sets the access control policy on the specified resource. Replaces any
        existing policy.
      operationId: ml.projects.jobs.setIamPolicy
      parameters:
        - description: >-
            REQUIRED: The resource for which the policy is being specified.

            See the operation documentation for the appropriate value for this field.
          in: path
          name: resource
          required: true
          x-reservedExpansion: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GoogleIamV1__SetIamPolicyRequest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/GoogleIamV1__Policy"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  "/v1/{resource}:testIamPermissions":
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/bearer_token"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/pp"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/upload_protocol"
    post:
      description: >-
        Returns permissions that a caller has on the specified resource.

        If the resource does not exist, this will return an empty set of

        permissions, not a NOT_FOUND error.


        Note: This operation is designed to be used for building permission-aware

        UIs and command-line tools, not for authorization checking. This operation

        may "fail open" without warning.
      operationId: ml.projects.jobs.testIamPermissions
      parameters:
        - description: >-
            REQUIRED: The resource for which the policy detail is being
            requested.

            See the operation documentation for the appropriate value for this field.
          in: path
          name: resource
          required: true
          x-reservedExpansion: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GoogleIamV1__TestIamPermissionsRequest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/GoogleIamV1__TestIamPermissionsResponse"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
servers:
  - url: https://ml.googleapis.com/
components:
  parameters:
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
          - media
          - proto
        default: json
    bearer_token:
      description: OAuth bearer token.
      in: query
      name: bearer_token
      schema:
        type: string
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    key:
      description: API key. Your API key identifies your project and provides you with API
        access, quota, and reports. Required unless you provide an OAuth 2.0
        token.
      in: query
      name: key
      schema:
        type: string
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    pp:
      description: Pretty-print response.
      in: query
      name: pp
      schema:
        type: boolean
        default: true
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
        default: true
    quotaUser:
      description: Available to use for quota purposes for server-side applications. Can be
        any arbitrary string assigned to a user, but should not exceed 40
        characters.
      in: query
      name: quotaUser
      schema:
        type: string
    uploadType:
      description: Legacy upload protocol for media (e.g. "media", "multipart").
      in: query
      name: uploadType
      schema:
        type: string
    upload_protocol:
      description: Upload protocol for media (e.g. "raw", "multipart").
      in: query
      name: upload_protocol
      schema:
        type: string
    _.xgafv:
      description: V1 error format.
      in: query
      name: $.xgafv
      schema:
        type: string
        enum:
          - "1"
          - "2"
  requestBodies:
    GoogleCloudMlV1__Job:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/GoogleCloudMlV1__Job"
  securitySchemes:
    Oauth2:
      description: Oauth 2.0 authentication
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes:
            https://www.googleapis.com/auth/cloud-platform: View and manage your data across Google Cloud Platform services
  schemas:
    GoogleApi__HttpBody:
      description: >-
        Message that represents an arbitrary HTTP body. It should only be used
        for

        payload formats that can't be represented as JSON, such as raw binary or

        an HTML page.



        This message can be used both in streaming and non-streaming API methods in

        the request as well as the response.


        It can be used as a top-level request field, which is convenient if one

        wants to extract parameters from either the URL or HTTP template into the

        request fields and also want access to the raw HTTP body.


        Example:

            message GetResourceRequest {
              // A unique request id.
              string request_id = 1;

              // The raw HTTP body is bound to this field.
              google.api.HttpBody http_body = 2;
            }

            service ResourceService {
              rpc GetResource(GetResourceRequest) returns (google.api.HttpBody);
              rpc UpdateResource(google.api.HttpBody) returns (google.protobuf.Empty);
            }

        Example with streaming methods:

            service CaldavService {
              rpc GetCalendar(stream google.api.HttpBody)
                returns (stream google.api.HttpBody);
              rpc UpdateCalendar(stream google.api.HttpBody)
                returns (stream google.api.HttpBody);
            }

        Use of this type only changes how the request and response bodies are

        handled, all other features will continue to work unchanged.
      properties:
        contentType:
          description: The HTTP Content-Type string representing the content type of the
            body.
          type: string
        data:
          description: HTTP body binary data.
          format: byte
          type: string
        extensions:
          description: >-
            Application specific response metadata. Must be set in the first
            response

            for streaming APIs.
          items:
            additionalProperties:
              description: Properties of the object. Contains field @type with type URL.
            type: object
          type: array
      type: object
    GoogleCloudMlV1_HyperparameterOutput_HyperparameterMetric:
      description: An observed value of a metric.
      properties:
        objectiveValue:
          description: The objective value at this training step.
          format: double
          type: number
        trainingStep:
          description: The global training step for this metric.
          format: int64
          type: string
      type: object
    GoogleCloudMlV1__AutoScaling:
      description: Options for automatically scaling a model.
      properties:
        minNodes:
          description: >-
            Optional. The minimum number of nodes to allocate for this model.
            These

            nodes are always up, starting from the time the model is deployed, so the

            cost of operating this model will be at least

            `rate` * `min_nodes` * number of hours since last billing cycle,

            where `rate` is the cost per node-hour as documented in

            [pricing](https://cloud.google.com/ml-engine/pricing#prediction_pricing),

            even if no predictions are performed. There is additional cost for each

            prediction performed.


            Unlike manual scaling, if the load gets too heavy for the nodes

            that are up, the service will automatically add nodes to handle the

            increased load as well as scale back as traffic drops, always maintaining

            at least `min_nodes`. You will be charged for the time in which additional

            nodes are used.


            If not specified, `min_nodes` defaults to 0, in which case, when traffic

            to a model stops (and after a cool-down period), nodes will be shut down

            and no charges will be incurred until traffic to the model resumes.
          format: int32
          type: integer
      type: object
    GoogleCloudMlV1__CancelJobRequest:
      description: Request message for the CancelJob method.
      properties: {}
      type: object
    GoogleCloudMlV1__Capability:
      properties:
        availableAccelerators:
          description: Available accelerators for the capability.
          items:
            enum:
              - ACCELERATOR_TYPE_UNSPECIFIED
              - NVIDIA_TESLA_K80
              - NVIDIA_TESLA_P100
            type: string
          type: array
        type:
          enum:
            - TYPE_UNSPECIFIED
            - TRAINING
            - BATCH_PREDICTION
            - ONLINE_PREDICTION
          type: string
      type: object
    GoogleCloudMlV1__GetConfigResponse:
      description: Returns service account information associated with a project.
      properties:
        serviceAccount:
          description: The service account Cloud ML uses to access resources in the project.
          type: string
        serviceAccountProject:
          description: The project number for `service_account`.
          format: int64
          type: string
      type: object
    GoogleCloudMlV1__HyperparameterOutput:
      description: |-
        Represents the result of a single hyperparameter tuning trial from a
        training job. The TrainingOutput object that is returned on successful
        completion of a training job with hyperparameter tuning includes a list
        of HyperparameterOutput objects, one for each successful trial.
      properties:
        allMetrics:
          description: >-
            All recorded object metrics for this trial. This field is not
            currently

            populated.
          items:
            $ref: "#/components/schemas/GoogleCloudMlV1_HyperparameterOutput_Hyperp\
              arameterMetric"
          type: array
        finalMetric:
          $ref: "#/components/schemas/GoogleCloudMlV1_HyperparameterOutput_Hyperpar\
            ameterMetric"
        hyperparameters:
          additionalProperties:
            type: string
          description: The hyperparameters given to this trial.
          type: object
        trialId:
          description: The trial id for these results.
          type: string
      type: object
    GoogleCloudMlV1__HyperparameterSpec:
      description: Represents a set of hyperparameters to optimize.
      properties:
        goal:
          description: |-
            Required. The type of goal to use for tuning. Available types are
            `MAXIMIZE` and `MINIMIZE`.

            Defaults to `MAXIMIZE`.
          enum:
            - GOAL_TYPE_UNSPECIFIED
            - MAXIMIZE
            - MINIMIZE
          type: string
        hyperparameterMetricTag:
          description: >-
            Optional. The Tensorflow summary tag name to use for optimizing
            trials. For

            current versions of Tensorflow, this tag name should exactly match what is

            shown in Tensorboard, including all scopes.  For versions of Tensorflow

            prior to 0.12, this should be only the tag passed to tf.Summary.

            By default, "training/hptuning/metric" will be used.
          type: string
        maxParallelTrials:
          description: >-
            Optional. The number of training trials to run concurrently.

            You can reduce the time it takes to perform hyperparameter tuning by adding

            trials in parallel. However, each trail only benefits from the information

            gained in completed trials. That means that a trial does not get access to

            the results of trials running at the same time, which could reduce the

            quality of the overall optimization.


            Each trial will use the same scale tier and machine types.


            Defaults to one.
          format: int32
          type: integer
        maxTrials:
          description: |-
            Optional. How many training trials should be attempted to optimize
            the specified hyperparameters.

            Defaults to one.
          format: int32
          type: integer
        params:
          description: Required. The set of parameters to tune.
          items:
            $ref: "#/components/schemas/GoogleCloudMlV1__ParameterSpec"
          type: array
      type: object
    GoogleCloudMlV1__Job:
      description: Represents a training or prediction job.
      properties:
        createTime:
          description: Output only. When the job was created.
          format: google-datetime
          type: string
        endTime:
          description: Output only. When the job processing was completed.
          format: google-datetime
          type: string
        errorMessage:
          description: Output only. The details of a failure or a cancellation.
          type: string
        etag:
          description: >-
            `etag` is used for optimistic concurrency control as a way to help

            prevent simultaneous updates of a job from overwriting each other.

            It is strongly suggested that systems make use of the `etag` in the

            read-modify-write cycle to perform job updates in order to avoid race

            conditions: An `etag` is returned in the response to `GetJob`, and

            systems are expected to put that etag in the request to `UpdateJob` to

            ensure that their change will be applied to the same version of the job.
          format: byte
          type: string
        jobId:
          description: Required. The user-specified id of the job.
          type: string
        labels:
          additionalProperties:
            type: string
          description: >-
            Optional. One or more labels that you can add, to organize your
            jobs.

            Each label is a key-value pair, where both the key and the value are

            arbitrary strings that you supply.

            For more information, see the documentation on

            <a href="/ml-engine/docs/how-tos/resource-labels">using labels</a>.
          type: object
        predictionInput:
          $ref: "#/components/schemas/GoogleCloudMlV1__PredictionInput"
        predictionOutput:
          $ref: "#/components/schemas/GoogleCloudMlV1__PredictionOutput"
        startTime:
          description: Output only. When the job processing was started.
          format: google-datetime
          type: string
        state:
          description: Output only. The detailed state of a job.
          enum:
            - STATE_UNSPECIFIED
            - QUEUED
            - PREPARING
            - RUNNING
            - SUCCEEDED
            - FAILED
            - CANCELLING
            - CANCELLED
          type: string
        trainingInput:
          $ref: "#/components/schemas/GoogleCloudMlV1__TrainingInput"
        trainingOutput:
          $ref: "#/components/schemas/GoogleCloudMlV1__TrainingOutput"
      type: object
    GoogleCloudMlV1__ListJobsResponse:
      description: Response message for the ListJobs method.
      properties:
        jobs:
          description: The list of jobs.
          items:
            $ref: "#/components/schemas/GoogleCloudMlV1__Job"
          type: array
        nextPageToken:
          description: >-
            Optional. Pass this token as the `page_token` field of the request
            for a

            subsequent call.
          type: string
      type: object
    GoogleCloudMlV1__ListLocationsResponse:
      properties:
        locations:
          description: Locations where at least one type of CMLE capability is available.
          items:
            $ref: "#/components/schemas/GoogleCloudMlV1__Location"
          type: array
        nextPageToken:
          description: >-
            Optional. Pass this token as the `page_token` field of the request
            for a

            subsequent call.
          type: string
      type: object
    GoogleCloudMlV1__ListModelsResponse:
      description: Response message for the ListModels method.
      properties:
        models:
          description: The list of models.
          items:
            $ref: "#/components/schemas/GoogleCloudMlV1__Model"
          type: array
        nextPageToken:
          description: >-
            Optional. Pass this token as the `page_token` field of the request
            for a

            subsequent call.
          type: string
      type: object
    GoogleCloudMlV1__ListVersionsResponse:
      description: Response message for the ListVersions method.
      properties:
        nextPageToken:
          description: >-
            Optional. Pass this token as the `page_token` field of the request
            for a

            subsequent call.
          type: string
        versions:
          description: The list of versions.
          items:
            $ref: "#/components/schemas/GoogleCloudMlV1__Version"
          type: array
      type: object
    GoogleCloudMlV1__Location:
      properties:
        capabilities:
          description: Capabilities available in the location.
          items:
            $ref: "#/components/schemas/GoogleCloudMlV1__Capability"
          type: array
        name:
          type: string
      type: object
    GoogleCloudMlV1__ManualScaling:
      description: Options for manually scaling a model.
      properties:
        nodes:
          description: >-
            The number of nodes to allocate for this model. These nodes are
            always up,

            starting from the time the model is deployed, so the cost of operating

            this model will be proportional to `nodes` * number of hours since

            last billing cycle plus the cost for each prediction performed.
          format: int32
          type: integer
      type: object
    GoogleCloudMlV1__Model:
      description: |-
        Represents a machine learning solution.

        A model can have multiple versions, each of which is a deployed, trained
        model ready to receive prediction requests. The model itself is just a
        container.
      properties:
        defaultVersion:
          $ref: "#/components/schemas/GoogleCloudMlV1__Version"
        description:
          description: Optional. The description specified for the model when it was
            created.
          type: string
        etag:
          description: >-
            `etag` is used for optimistic concurrency control as a way to help

            prevent simultaneous updates of a model from overwriting each other.

            It is strongly suggested that systems make use of the `etag` in the

            read-modify-write cycle to perform model updates in order to avoid race

            conditions: An `etag` is returned in the response to `GetModel`, and

            systems are expected to put that etag in the request to `UpdateModel` to

            ensure that their change will be applied to the model as intended.
          format: byte
          type: string
        labels:
          additionalProperties:
            type: string
          description: >-
            Optional. One or more labels that you can add, to organize your
            models.

            Each label is a key-value pair, where both the key and the value are

            arbitrary strings that you supply.

            For more information, see the documentation on

            <a href="/ml-engine/docs/how-tos/resource-labels">using labels</a>.
          type: object
        name:
          description: |-
            Required. The name specified for the model when it was created.

            The model name must be unique within the project it is created in.
          type: string
        onlinePredictionLogging:
          description: >-
            Optional. If true, enables StackDriver Logging for online
            prediction.

            Default is false.
          type: boolean
        regions:
          description: >-
            Optional. The list of regions where the model is going to be
            deployed.

            Currently only one region per model is supported.

            Defaults to 'us-central1' if nothing is set.

            Note:

            *   No matter where a model is deployed, it can always be accessed by
                users from anywhere, both for online and batch prediction.
            *   The region for a batch prediction job is set by the region field when
                submitting the batch prediction job and does not take its value from
                this field.
          items:
            type: string
          type: array
      type: object
    GoogleCloudMlV1__OperationMetadata:
      description: Represents the metadata of the long-running operation.
      properties:
        createTime:
          description: The time the operation was submitted.
          format: google-datetime
          type: string
        endTime:
          description: The time operation processing completed.
          format: google-datetime
          type: string
        isCancellationRequested:
          description: Indicates whether a request to cancel this operation has been made.
          type: boolean
        labels:
          additionalProperties:
            type: string
          description: |-
            The user labels, inherited from the model or the model version being
            operated on.
          type: object
        modelName:
          description: Contains the name of the model associated with the operation.
          type: string
        operationType:
          description: The operation type.
          enum:
            - OPERATION_TYPE_UNSPECIFIED
            - CREATE_VERSION
            - DELETE_VERSION
            - DELETE_MODEL
            - UPDATE_MODEL
            - UPDATE_VERSION
            - UPDATE_CONFIG
          type: string
        projectNumber:
          description: Contains the project number associated with the operation.
          format: int64
          type: string
        startTime:
          description: The time operation processing started.
          format: google-datetime
          type: string
        version:
          $ref: "#/components/schemas/GoogleCloudMlV1__Version"
      type: object
    GoogleCloudMlV1__ParameterSpec:
      description: Represents a single hyperparameter to optimize.
      properties:
        categoricalValues:
          description: Required if type is `CATEGORICAL`. The list of possible categories.
          items:
            type: string
          type: array
        discreteValues:
          description: >-
            Required if type is `DISCRETE`.

            A list of feasible points.

            The list should be in strictly increasing order. For instance, this

            parameter might have possible settings of 1.5, 2.5, and 4.0. This list

            should not contain more than 1,000 values.
          items:
            format: double
            type: number
          type: array
        maxValue:
          description: >-
            Required if typeis `DOUBLE` or `INTEGER`. This field

            should be unset if type is `CATEGORICAL`. This value should be integers if

            type is `INTEGER`.
          format: double
          type: number
        minValue:
          description: >-
            Required if type is `DOUBLE` or `INTEGER`. This field

            should be unset if type is `CATEGORICAL`. This value should be integers if

            type is INTEGER.
          format: double
          type: number
        parameterName:
          description: >-
            Required. The parameter name must be unique amongst all
            ParameterConfigs in

            a HyperparameterSpec message. E.g., "learning_rate".
          type: string
        scaleType:
          description: |-
            Optional. How the parameter should be scaled to the hypercube.
            Leave unset for categorical parameters.
            Some kind of scaling is strongly recommended for real or integral
            parameters (e.g., `UNIT_LINEAR_SCALE`).
          enum:
            - NONE
            - UNIT_LINEAR_SCALE
            - UNIT_LOG_SCALE
            - UNIT_REVERSE_LOG_SCALE
          type: string
        type:
          description: Required. The type of the parameter.
          enum:
            - PARAMETER_TYPE_UNSPECIFIED
            - DOUBLE
            - INTEGER
            - CATEGORICAL
            - DISCRETE
          type: string
      type: object
    GoogleCloudMlV1__PredictRequest:
      description: Request for predictions to be issued against a trained model.
      properties:
        httpBody:
          $ref: "#/components/schemas/GoogleApi__HttpBody"
      type: object
    GoogleCloudMlV1__PredictionInput:
      description: Represents input parameters for a prediction job.
      properties:
        batchSize:
          description: >-
            Optional. Number of records per batch, defaults to 64.

            The service will buffer batch_size number of records in memory before

            invoking one Tensorflow prediction call internally. So take the record

            size and memory available into consideration when setting this parameter.
          format: int64
          type: string
        dataFormat:
          description: Required. The format of the input data files.
          enum:
            - DATA_FORMAT_UNSPECIFIED
            - JSON
            - TEXT
            - TF_RECORD
            - TF_RECORD_GZIP
          type: string
        inputPaths:
          description: |-
            Required. The Google Cloud Storage location of the input data files.
            May contain wildcards.
          items:
            type: string
          type: array
        maxWorkerCount:
          description: >-
            Optional. The maximum number of workers to be used for parallel
            processing.

            Defaults to 10 if not specified.
          format: int64
          type: string
        modelName:
          description: >-
            Use this field if you want to use the default version for the
            specified

            model. The string must use the following format:


            `"projects/<var>[YOUR_PROJECT]</var>/models/<var>[YOUR_MODEL]</var>"`
          type: string
        outputPath:
          description: Required. The output Google Cloud Storage location.
          type: string
        region:
          description: Required. The Google Compute Engine region to run the prediction job
            in.
          type: string
        runtimeVersion:
          description: >-
            Optional. The Google Cloud ML runtime version to use for this batch

            prediction. If not set, Google Cloud ML will pick the runtime version used

            during the CreateVersion request for this model version, or choose the

            latest stable version when model version information is not available

            such as when the model is specified by uri.
          type: string
        signatureName:
          description: >-
            Optional. The name of the signature defined in the SavedModel to use
            for

            this job. Please refer to

            [SavedModel](https://tensorflow.github.io/serving/serving_basic.html)

            for information about how to use signatures.


            Defaults to

            [DEFAULT_SERVING_SIGNATURE_DEF_KEY](https://www.tensorflow.org/api_docs/python/tf/saved_model/signature_constants)

            , which is "serving_default".
          type: string
        uri:
          description: >-
            Use this field if you want to specify a Google Cloud Storage path
            for

            the model to use.
          type: string
        versionName:
          description: >-
            Use this field if you want to specify a version of the model to use.
            The

            string is formatted the same way as `model_version`, with the addition

            of the version information:


            `"projects/<var>[YOUR_PROJECT]</var>/models/<var>YOUR_MODEL/versions/<var>[YOUR_VERSION]</var>"`
          type: string
      type: object
    GoogleCloudMlV1__PredictionOutput:
      description: Represents results of a prediction job.
      properties:
        errorCount:
          description: The number of data instances which resulted in errors.
          format: int64
          type: string
        nodeHours:
          description: Node hours used by the batch prediction job.
          format: double
          type: number
        outputPath:
          description: The output Google Cloud Storage location provided at the job
            creation time.
          type: string
        predictionCount:
          description: The number of generated predictions.
          format: int64
          type: string
      type: object
    GoogleCloudMlV1__SetDefaultVersionRequest:
      description: Request message for the SetDefaultVersion request.
      properties: {}
      type: object
    GoogleCloudMlV1__TrainingInput:
      description: Represents input parameters for a training job.
      properties:
        args:
          description: Optional. Command line arguments to pass to the program.
          items:
            type: string
          type: array
        hyperparameters:
          $ref: "#/components/schemas/GoogleCloudMlV1__HyperparameterSpec"
        jobDir:
          description: >-
            Optional. A Google Cloud Storage path in which to store training
            outputs

            and other data needed for training. This path is passed to your TensorFlow

            program as the 'job_dir' command-line argument. The benefit of specifying

            this field is that Cloud ML validates the path for use in training.
          type: string
        masterType:
          description: >-
            Optional. Specifies the type of virtual machine to use for your
            training

            job's master worker.


            The following types are supported:


            <dl>
              <dt>standard</dt>
              <dd>
              A basic machine configuration suitable for training simple models with
              small to moderate datasets.
              </dd>
              <dt>large_model</dt>
              <dd>
              A machine with a lot of memory, specially suited for parameter servers
              when your model is large (having many hidden layers or layers with very
              large numbers of nodes).
              </dd>
              <dt>complex_model_s</dt>
              <dd>
              A machine suitable for the master and workers of the cluster when your
              model requires more computation than the standard machine can handle
              satisfactorily.
              </dd>
              <dt>complex_model_m</dt>
              <dd>
              A machine with roughly twice the number of cores and roughly double the
              memory of <code suppresswarning="true">complex_model_s</code>.
              </dd>
              <dt>complex_model_l</dt>
              <dd>
              A machine with roughly twice the number of cores and roughly double the
              memory of <code suppresswarning="true">complex_model_m</code>.
              </dd>
              <dt>standard_gpu</dt>
              <dd>
              A machine equivalent to <code suppresswarning="true">standard</code> that
              also includes a single NVIDIA Tesla K80 GPU. See more about
              <a href="/ml-engine/docs/how-tos/using-gpus">
              using GPUs for training your model</a>.
              </dd>
              <dt>complex_model_m_gpu</dt>
              <dd>
              A machine equivalent to
              <code suppresswarning="true">complex_model_m</code> that also includes
              four NVIDIA Tesla K80 GPUs.
              </dd>
              <dt>complex_model_l_gpu</dt>
              <dd>
              A machine equivalent to
              <code suppresswarning="true">complex_model_l</code> that also includes
              eight NVIDIA Tesla K80 GPUs.
              </dd>
              <dt>standard_p100</dt>
              <dd>
              A machine equivalent to <code suppresswarning="true">standard</code> that
              also includes a single NVIDIA Tesla P100 GPU. The availability of these
              GPUs is in the Alpha launch stage.
              </dd>
              <dt>complex_model_m_p100</dt>
              <dd>
              A machine equivalent to
              <code suppresswarning="true">complex_model_m</code> that also includes
              four NVIDIA Tesla P100 GPUs. The availability of these GPUs is in
              the Alpha launch stage.
              </dd>
            </dl>


            You must set this value when `scaleTier` is set to `CUSTOM`.
          type: string
        packageUris:
          description: |-
            Required. The Google Cloud Storage location of the packages with
            the training program and any additional dependencies.
            The maximum number of package URIs is 100.
          items:
            type: string
          type: array
        parameterServerCount:
          description: >-
            Optional. The number of parameter server replicas to use for the
            training

            job. Each replica in the cluster will be of the type specified in

            `parameter_server_type`.


            This value can only be used when `scale_tier` is set to `CUSTOM`.If you

            set this value, you must also set `parameter_server_type`.
          format: int64
          type: string
        parameterServerType:
          description: >-
            Optional. Specifies the type of virtual machine to use for your
            training

            job's parameter server.


            The supported values are the same as those described in the entry for

            `master_type`.


            This value must be present when `scaleTier` is set to `CUSTOM` and

            `parameter_server_count` is greater than zero.
          type: string
        pythonModule:
          description: Required. The Python module name to run after installing the
            packages.
          type: string
        pythonVersion:
          description: >-
            Optional. The version of Python used in training. If not set, the
            default

            version is '2.7'.
          type: string
        region:
          description: Required. The Google Compute Engine region to run the training job
            in.
          type: string
        runtimeVersion:
          description: >-
            Optional. The Google Cloud ML runtime version to use for
            training.  If not

            set, Google Cloud ML will choose the latest stable version.
          type: string
        scaleTier:
          description: >-
            Required. Specifies the machine types, the number of replicas for
            workers

            and parameter servers.
          enum:
            - BASIC
            - STANDARD_1
            - PREMIUM_1
            - BASIC_GPU
            - BASIC_TPU
            - CUSTOM
          type: string
        workerCount:
          description: >-
            Optional. The number of worker replicas to use for the training job.
            Each

            replica in the cluster will be of the type specified in `worker_type`.


            This value can only be used when `scale_tier` is set to `CUSTOM`. If you

            set this value, you must also set `worker_type`.
          format: int64
          type: string
        workerType:
          description: >-
            Optional. Specifies the type of virtual machine to use for your
            training

            job's worker nodes.


            The supported values are the same as those described in the entry for

            `masterType`.


            This value must be present when `scaleTier` is set to `CUSTOM` and

            `workerCount` is greater than zero.
          type: string
      type: object
    GoogleCloudMlV1__TrainingOutput:
      description: Represents results of a training job. Output only.
      properties:
        completedTrialCount:
          description: >-
            The number of hyperparameter tuning trials that completed
            successfully.

            Only set for hyperparameter tuning jobs.
          format: int64
          type: string
        consumedMLUnits:
          description: The amount of ML units consumed by the job.
          format: double
          type: number
        isHyperparameterTuningJob:
          description: Whether this job is a hyperparameter tuning job.
          type: boolean
        trials:
          description: |-
            Results for individual Hyperparameter trials.
            Only set for hyperparameter tuning jobs.
          items:
            $ref: "#/components/schemas/GoogleCloudMlV1__HyperparameterOutput"
          type: array
      type: object
    GoogleCloudMlV1__Version:
      description: >-
        Represents a version of the model.


        Each version is a trained model deployed in the cloud, ready to handle

        prediction requests. A model can have multiple versions. You can get

        information about all of the versions of a given model by calling

        [projects.models.versions.list](/ml-engine/reference/rest/v1/projects.models.versions/list).


        LINT.IfChange
      properties:
        autoScaling:
          $ref: "#/components/schemas/GoogleCloudMlV1__AutoScaling"
        createTime:
          description: Output only. The time the version was created.
          format: google-datetime
          type: string
        deploymentUri:
          description: >-
            Required. The Google Cloud Storage location of the trained model
            used to

            create the version. See the

            [overview of model

            deployment](/ml-engine/docs/concepts/deployment-overview) for more

            information.


            When passing Version to

            [projects.models.versions.create](/ml-engine/reference/rest/v1/projects.models.versions/create)

            the model service uses the specified location as the source of the model.

            Once deployed, the model version is hosted by the prediction service, so

            this location is useful only as a historical record.

            The total number of model files can't exceed 1000.
          type: string
        description:
          description: Optional. The description specified for the version when it was
            created.
          type: string
        errorMessage:
          description: Output only. The details of a failure or a cancellation.
          type: string
        etag:
          description: >-
            `etag` is used for optimistic concurrency control as a way to help

            prevent simultaneous updates of a model from overwriting each other.

            It is strongly suggested that systems make use of the `etag` in the

            read-modify-write cycle to perform model updates in order to avoid race

            conditions: An `etag` is returned in the response to `GetVersion`, and

            systems are expected to put that etag in the request to `UpdateVersion` to

            ensure that their change will be applied to the model as intended.
          format: byte
          type: string
        isDefault:
          description: >-
            Output only. If true, this version will be used to handle prediction

            requests that do not specify a version.


            You can change the default version by calling

            [projects.methods.versions.setDefault](/ml-engine/reference/rest/v1/projects.models.versions/setDefault).
          type: boolean
        labels:
          additionalProperties:
            type: string
          description: >-
            Optional. One or more labels that you can add, to organize your
            model

            versions. Each label is a key-value pair, where both the key and the value

            are arbitrary strings that you supply.

            For more information, see the documentation on

            <a href="/ml-engine/docs/how-tos/resource-labels">using labels</a>.
          type: object
        lastUseTime:
          description: Output only. The time the version was last used for prediction.
          format: google-datetime
          type: string
        manualScaling:
          $ref: "#/components/schemas/GoogleCloudMlV1__ManualScaling"
        name:
          description: |-
            Required.The name specified for the version when it was created.

            The version name must be unique within the model it is created in.
          type: string
        runtimeVersion:
          description: >-
            Optional. The Google Cloud ML runtime version to use for this
            deployment.

            If not set, Google Cloud ML will choose a version.
          type: string
        state:
          description: Output only. The state of a version.
          enum:
            - UNKNOWN
            - READY
            - CREATING
            - FAILED
            - DELETING
          type: string
      type: object
    GoogleIamV1__AuditConfig:
      description: >-
        Specifies the audit configuration for a service.

        The configuration determines which permission types are logged, and what

        identities, if any, are exempted from logging.

        An AuditConfig must have one or more AuditLogConfigs.


        If there are AuditConfigs for both `allServices` and a specific service,

        the union of the two AuditConfigs is used for that service: the log_types

        specified in each AuditConfig are enabled, and the exempted_members in each

        AuditConfig are exempted.


        Example Policy with multiple AuditConfigs:

            {
              "audit_configs": [
                {
                  "service": "allServices"
                  "audit_log_configs": [
                    {
                      "log_type": "DATA_READ",
                      "exempted_members": [
                        "user:foo@gmail.com"
                      ]
                    },
                    {
                      "log_type": "DATA_WRITE",
                    },
                    {
                      "log_type": "ADMIN_READ",
                    }
                  ]
                },
                {
                  "service": "fooservice.googleapis.com"
                  "audit_log_configs": [
                    {
                      "log_type": "DATA_READ",
                    },
                    {
                      "log_type": "DATA_WRITE",
                      "exempted_members": [
                        "user:bar@gmail.com"
                      ]
                    }
                  ]
                }
              ]
            }

        For fooservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ

        logging. It also exempts foo@gmail.com from DATA_READ logging, and

        bar@gmail.com from DATA_WRITE logging.
      properties:
        auditLogConfigs:
          description: |-
            The configuration for logging of each type of permission.
            Next ID: 4
          items:
            $ref: "#/components/schemas/GoogleIamV1__AuditLogConfig"
          type: array
        exemptedMembers:
          items:
            type: string
          type: array
        service:
          description: |-
            Specifies a service that will be enabled for audit logging.
            For example, `storage.googleapis.com`, `cloudsql.googleapis.com`.
            `allServices` is a special value that covers all services.
          type: string
      type: object
    GoogleIamV1__AuditLogConfig:
      description: |-
        Provides the configuration for logging a type of permissions.
        Example:

            {
              "audit_log_configs": [
                {
                  "log_type": "DATA_READ",
                  "exempted_members": [
                    "user:foo@gmail.com"
                  ]
                },
                {
                  "log_type": "DATA_WRITE",
                }
              ]
            }

        This enables 'DATA_READ' and 'DATA_WRITE' logging, while exempting
        foo@gmail.com from DATA_READ logging.
      properties:
        exemptedMembers:
          description: |-
            Specifies the identities that do not cause logging for this type of
            permission.
            Follows the same format of Binding.members.
          items:
            type: string
          type: array
        logType:
          description: The log type that this config enables.
          enum:
            - LOG_TYPE_UNSPECIFIED
            - ADMIN_READ
            - DATA_WRITE
            - DATA_READ
          type: string
      type: object
    GoogleIamV1__Binding:
      description: Associates `members` with a `role`.
      properties:
        condition:
          $ref: "#/components/schemas/GoogleType__Expr"
        members:
          description: >+
            Specifies the identities requesting access for a Cloud Platform
            resource.

            `members` can have the following values:


            * `allUsers`: A special identifier that represents anyone who is
               on the internet; with or without a Google account.

            * `allAuthenticatedUsers`: A special identifier that represents anyone
               who is authenticated with a Google account or a service account.

            * `user:{emailid}`: An email address that represents a specific Google
               account. For example, `alice@gmail.com` or `joe@example.com`.


            * `serviceAccount:{emailid}`: An email address that represents a service
               account. For example, `my-other-app@appspot.gserviceaccount.com`.

            * `group:{emailid}`: An email address that represents a Google group.
               For example, `admins@example.com`.


            * `domain:{domain}`: A Google Apps domain name that represents all the
               users of that domain. For example, `google.com` or `example.com`.

          items:
            type: string
          type: array
        role:
          description: |-
            Role that is assigned to `members`.
            For example, `roles/viewer`, `roles/editor`, or `roles/owner`.
            Required
          type: string
      type: object
    GoogleIamV1__Policy:
      description: >-
        Defines an Identity and Access Management (IAM) policy. It is used to

        specify access control policies for Cloud Platform resources.



        A `Policy` consists of a list of `bindings`. A `Binding` binds a list of

        `members` to a `role`, where the members can be user accounts, Google groups,

        Google domains, and service accounts. A `role` is a named list of permissions

        defined by IAM.


        **Example**

            {
              "bindings": [
                {
                  "role": "roles/owner",
                  "members": [
                    "user:mike@example.com",
                    "group:admins@example.com",
                    "domain:google.com",
                    "serviceAccount:my-other-app@appspot.gserviceaccount.com",
                  ]
                },
                {
                  "role": "roles/viewer",
                  "members": ["user:sean@example.com"]
                }
              ]
            }

        For a description of IAM and its features, see the

        [IAM developer's guide](https://cloud.google.com/iam).
      properties:
        auditConfigs:
          description: Specifies cloud audit logging configuration for this policy.
          items:
            $ref: "#/components/schemas/GoogleIamV1__AuditConfig"
          type: array
        bindings:
          description: |-
            Associates a list of `members` to a `role`.
            `bindings` with no members will result in an error.
          items:
            $ref: "#/components/schemas/GoogleIamV1__Binding"
          type: array
        etag:
          description: >-
            `etag` is used for optimistic concurrency control as a way to help

            prevent simultaneous updates of a policy from overwriting each other.

            It is strongly suggested that systems make use of the `etag` in the

            read-modify-write cycle to perform policy updates in order to avoid race

            conditions: An `etag` is returned in the response to `getIamPolicy`, and

            systems are expected to put that etag in the request to `setIamPolicy` to

            ensure that their change will be applied to the same version of the policy.


            If no `etag` is provided in the call to `setIamPolicy`, then the existing

            policy is overwritten blindly.
          format: byte
          type: string
        iamOwned:
          type: boolean
        version:
          description: Version of the `Policy`. The default version is 0.
          format: int32
          type: integer
      type: object
    GoogleIamV1__SetIamPolicyRequest:
      description: Request message for `SetIamPolicy` method.
      properties:
        policy:
          $ref: "#/components/schemas/GoogleIamV1__Policy"
        updateMask:
          description: >-
            OPTIONAL: A FieldMask specifying which fields of the policy to
            modify. Only

            the fields in the mask will be modified. If no mask is provided, the

            following default mask is used:

            paths: "bindings, etag"

            This field is only used by Cloud IAM.
          format: google-fieldmask
          type: string
      type: object
    GoogleIamV1__TestIamPermissionsRequest:
      description: Request message for `TestIamPermissions` method.
      properties:
        permissions:
          description: >-
            The set of permissions to check for the `resource`. Permissions with

            wildcards (such as '*' or 'storage.*') are not allowed. For more

            information see

            [IAM Overview](https://cloud.google.com/iam/docs/overview#permissions).
          items:
            type: string
          type: array
      type: object
    GoogleIamV1__TestIamPermissionsResponse:
      description: Response message for `TestIamPermissions` method.
      properties:
        permissions:
          description: |-
            A subset of `TestPermissionsRequest.permissions` that the caller is
            allowed.
          items:
            type: string
          type: array
      type: object
    GoogleLongrunning__ListOperationsResponse:
      description: The response message for Operations.ListOperations.
      properties:
        nextPageToken:
          description: The standard List next-page token.
          type: string
        operations:
          description: A list of operations that matches the specified filter in the
            request.
          items:
            $ref: "#/components/schemas/GoogleLongrunning__Operation"
          type: array
      type: object
    GoogleLongrunning__Operation:
      description: >-
        This resource represents a long-running operation that is the result of
        a

        network API call.
      properties:
        done:
          description: >-
            If the value is `false`, it means the operation is still in
            progress.

            If `true`, the operation is completed, and either `error` or `response` is

            available.
          type: boolean
        error:
          $ref: "#/components/schemas/GoogleRpc__Status"
        metadata:
          additionalProperties:
            description: Properties of the object. Contains field @type with type URL.
          description: >-
            Service-specific metadata associated with the operation.  It
            typically

            contains progress information and common metadata such as create time.

            Some services might not provide such metadata.  Any method that returns a

            long-running operation should document the metadata type, if any.
          type: object
        name:
          description: >-
            The server-assigned name, which is only unique within the same
            service that

            originally returns it. If you use the default HTTP mapping, the

            `name` should have the format of `operations/some/unique/name`.
          type: string
        response:
          additionalProperties:
            description: Properties of the object. Contains field @type with type URL.
          description: >-
            The normal response of the operation in case of success.  If the
            original

            method returns no data on success, such as `Delete`, the response is

            `google.protobuf.Empty`.  If the original method is standard

            `Get`/`Create`/`Update`, the response should be the resource.  For other

            methods, the response should have the type `XxxResponse`, where `Xxx`

            is the original method name.  For example, if the original method name

            is `TakeSnapshot()`, the inferred response type is

            `TakeSnapshotResponse`.
          type: object
      type: object
    GoogleProtobuf__Empty:
      description: >-
        A generic empty message that you can re-use to avoid defining duplicated

        empty messages in your APIs. A typical example is to use it as the request

        or the response type of an API method. For instance:

            service Foo {
              rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);
            }

        The JSON representation for `Empty` is empty JSON object `{}`.
      properties: {}
      type: object
    GoogleRpc__Status:
      description: >-
        The `Status` type defines a logical error model that is suitable for
        different

        programming environments, including REST APIs and RPC APIs. It is used by

        [gRPC](https://github.com/grpc). The error model is designed to be:


        - Simple to use and understand for most users

        - Flexible enough to meet unexpected needs


        # Overview


        The `Status` message contains three pieces of data: error code, error message,

        and error details. The error code should be an enum value of

        google.rpc.Code, but it may accept additional error codes if needed.  The

        error message should be a developer-facing English message that helps

        developers *understand* and *resolve* the error. If a localized user-facing

        error message is needed, put the localized message in the error details or

        localize it in the client. The optional error details may contain arbitrary

        information about the error. There is a predefined set of error detail types

        in the package `google.rpc` that can be used for common error conditions.


        # Language mapping


        The `Status` message is the logical representation of the error model, but it

        is not necessarily the actual wire format. When the `Status` message is

        exposed in different client libraries and different wire protocols, it can be

        mapped differently. For example, it will likely be mapped to some exceptions

        in Java, but more likely mapped to some error codes in C.


        # Other uses


        The error model and the `Status` message can be used in a variety of

        environments, either with or without APIs, to provide a

        consistent developer experience across different environments.


        Example uses of this error model include:


        - Partial errors. If a service needs to return partial errors to the client,
            it may embed the `Status` in the normal response to indicate the partial
            errors.

        - Workflow errors. A typical workflow has multiple steps. Each step may
            have a `Status` message for error reporting.

        - Batch operations. If a client uses batch request and batch response, the
            `Status` message should be used directly inside batch response, one for
            each error sub-response.

        - Asynchronous operations. If an API call embeds asynchronous operation
            results in its response, the status of those operations should be
            represented directly using the `Status` message.

        - Logging. If some API errors are stored in logs, the message `Status` could
            be used directly after any stripping needed for security/privacy reasons.
      properties:
        code:
          description: The status code, which should be an enum value of google.rpc.Code.
          format: int32
          type: integer
        details:
          description: >-
            A list of messages that carry the error details.  There is a common
            set of

            message types for APIs to use.
          items:
            additionalProperties:
              description: Properties of the object. Contains field @type with type URL.
            type: object
          type: array
        message:
          description: |-
            A developer-facing error message, which should be in English. Any
            user-facing error message should be localized and sent in the
            google.rpc.Status.details field, or localized by the client.
          type: string
      type: object
    GoogleType__Expr:
      description: |-
        Represents an expression text. Example:

            title: "User account presence"
            description: "Determines whether the request has a user account"
            expression: "size(request.user) > 0"
      properties:
        description:
          description: >-
            An optional description of the expression. This is a longer text
            which

            describes the expression, e.g. when hovered over it in a UI.
          type: string
        expression:
          description: |-
            Textual representation of an expression in
            Common Expression Language syntax.

            The application context of the containing message determines which
            well-known feature set of CEL is supported.
          type: string
        location:
          description: >-
            An optional string indicating the location of the expression for
            error

            reporting, e.g. a file name and a position in the file.
          type: string
        title:
          description: |-
            An optional title for the expression, i.e. a short string describing
            its purpose. This can be used e.g. in UIs which allow to enter the
            expression.
          type: string
      type: object
