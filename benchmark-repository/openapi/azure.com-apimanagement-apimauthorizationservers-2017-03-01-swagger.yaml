openapi: 3.0.0
info:
  description: Use these REST APIs for managing OAuth2 servers configuration in your Azure
    API Management deployment. OAuth 2.0 can be used to authorize developer
    accounts for Azure API Management. For more information refer to [How to
    OAuth2](https://docs.microsoft.com/en-us/azure/api-management/api-management-howto-oauth2).
  title: ApiManagementClient
  version: 2017-03-01
  x-apisguru-categories:
    - cloud
  x-logo:
    url: https://assets.onestore.ms/cdnfiles/onestorerolling-1606-01000/shell/v3/images/logo/microsoft.png
  x-origin:
    - format: swagger
      url: https://raw.githubusercontent.com/Azure/azure-rest-api-specs/master/specification/apimanagement/control-plane/Microsoft.ApiManagement/preview/2017-03-01/apimauthorizationservers.json
      version: "2.0"
  x-preferred: false
  x-providerName: azure.com
  x-serviceName: apimanagement-apimauthorizationservers
  x-tags:
    - Azure
    - Microsoft
security:
  - apim_key: []
paths:
  /authorizationServers:
    get:
      description: Lists a collection of authorization servers defined within a service
        instance.
      operationId: AuthorizationServer_List
      parameters:
        - description: >-
            | Field | Supported operators    | Supported
            functions                         |

            |-------|------------------------|---------------------------------------------|

            | id    | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |

            | name  | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |
          in: query
          name: $filter
          required: false
          schema:
            type: string
        - description: Number of records to return.
          in: query
          name: $top
          required: false
          x-ms-parameter-location: method
          schema:
            type: integer
            format: int32
            minimum: 1
        - description: Number of records to skip.
          in: query
          name: $skip
          required: false
          x-ms-parameter-location: method
          schema:
            type: integer
            format: int32
            minimum: 0
        - description: Version of the API to be used with the client request.
          in: query
          name: api-version
          required: true
          schema:
            type: string
          examples:
            ApiManagementListAuthorizationServers:
              value: 2017-03-01
      responses:
        "200":
          description: A Collection of the Authorization Server entities for the specified
            API Management service instance.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthorizationServerCollection"
              examples:
                ApiManagementListAuthorizationServers:
                  $ref: "#/components/examples/ApiManagementListAuthorizationServers"
      tags:
        - AuthorizationServers
      x-ms-odata: "#/components/schemas/AuthorizationServerContract"
      x-ms-pageable:
        nextLinkName: nextLink
  "/authorizationServers/{authsid}":
    delete:
      description: Deletes specific authorization server instance.
      operationId: AuthorizationServer_Delete
      parameters:
        - $ref: "#/components/parameters/AuthenticationServerIdParameter"
        - description: The entity state (Etag) version of the authentication server to
            delete. A value of "*" can be used for If-Match to unconditionally
            apply the operation.
          in: header
          name: If-Match
          required: true
          schema:
            type: string
          examples:
            ApiManagementDeleteAuthorizationServers:
              value: '"AAAAAAAAI0Q="'
        - description: Version of the API to be used with the client request.
          in: query
          name: api-version
          required: true
          schema:
            type: string
          examples:
            ApiManagementDeleteAuthorizationServers:
              value: 2017-03-01
      responses:
        "204":
          description: The authorization server settings were successfully deleted.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                description: Error Body contract.
                properties:
                  code:
                    description: Service-defined error code. This code serves as a
                      sub-status for the HTTP error code specified in the
                      response.
                    type: string
                  details:
                    description: The list of invalid fields send in request, in case of
                      validation error.
                    items:
                      description: Error Field contract.
                      properties:
                        code:
                          description: Property level error code.
                          type: string
                        message:
                          description: Human-readable representation of property-level
                            error.
                          type: string
                        target:
                          description: Property name.
                          type: string
                    type: array
                  message:
                    description: Human-readable representation of the error.
                    type: string
      tags:
        - AuthorizationServers
    get:
      description: Gets the details of the authorization server specified by its identifier.
      operationId: AuthorizationServer_Get
      parameters:
        - $ref: "#/components/parameters/AuthenticationServerIdParameter"
        - description: Version of the API to be used with the client request.
          in: query
          name: api-version
          required: true
          schema:
            type: string
          examples:
            ApiManagementGetAuthorizationServers:
              value: 2017-03-01
      responses:
        "200":
          description: Gets the details of the specified authorization server.
          headers:
            ETag:
              description: Current entity state version. Should be treated as opaque and
                used to make conditional HTTP requests.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthorizationServerContract"
              examples:
                ApiManagementGetAuthorizationServers:
                  $ref: "#/components/examples/ApiManagementGetAuthorizationServers"
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                description: Error Body contract.
                properties:
                  code:
                    description: Service-defined error code. This code serves as a
                      sub-status for the HTTP error code specified in the
                      response.
                    type: string
                  details:
                    description: The list of invalid fields send in request, in case of
                      validation error.
                    items:
                      description: Error Field contract.
                      properties:
                        code:
                          description: Property level error code.
                          type: string
                        message:
                          description: Human-readable representation of property-level
                            error.
                          type: string
                        target:
                          description: Property name.
                          type: string
                    type: array
                  message:
                    description: Human-readable representation of the error.
                    type: string
      tags:
        - AuthorizationServers
    patch:
      description: Updates the details of the authorization server specified by its
        identifier.
      operationId: AuthorizationServer_Update
      parameters:
        - $ref: "#/components/parameters/AuthenticationServerIdParameter"
        - description: The entity state (Etag) version of the authorization server to
            update. A value of "*" can be used for If-Match to unconditionally
            apply the operation.
          in: header
          name: If-Match
          required: true
          schema:
            type: string
          examples:
            ApiManagementPatchAuthorizationServers:
              value: '"AAAAAAAAIn4="'
        - description: Version of the API to be used with the client request.
          in: query
          name: api-version
          required: true
          schema:
            type: string
          examples:
            ApiManagementPatchAuthorizationServers:
              value: 2017-03-01
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AuthorizationServerUpdateContract"
        description: OAuth2 Server settings Update parameters.
        required: true
      responses:
        "204":
          description: The authorization server settings were successfully updated.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                description: Error Body contract.
                properties:
                  code:
                    description: Service-defined error code. This code serves as a
                      sub-status for the HTTP error code specified in the
                      response.
                    type: string
                  details:
                    description: The list of invalid fields send in request, in case of
                      validation error.
                    items:
                      description: Error Field contract.
                      properties:
                        code:
                          description: Property level error code.
                          type: string
                        message:
                          description: Human-readable representation of property-level
                            error.
                          type: string
                        target:
                          description: Property name.
                          type: string
                    type: array
                  message:
                    description: Human-readable representation of the error.
                    type: string
      tags:
        - AuthorizationServers
    put:
      description: Creates new authorization server or updates an existing authorization
        server.
      operationId: AuthorizationServer_CreateOrUpdate
      parameters:
        - $ref: "#/components/parameters/AuthenticationServerIdParameter"
        - description: Version of the API to be used with the client request.
          in: query
          name: api-version
          required: true
          schema:
            type: string
          examples:
            ApiManagementPutAuthorizationServers:
              value: 2017-03-01
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AuthorizationServerContract"
        description: Create or update parameters.
        required: true
      responses:
        "200":
          description: Authorization server is already registered.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthorizationServerContract"
              examples:
                ApiManagementPutAuthorizationServers:
                  $ref: "#/components/examples/ApiManagementPutAuthorizationServers"
        "201":
          description: Authorization server was successfully registered.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthorizationServerContract"
              examples:
                ApiManagementPutAuthorizationServers:
                  $ref: "#/components/examples/ApiManagementPutAuthorizationServers"
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                description: Error Body contract.
                properties:
                  code:
                    description: Service-defined error code. This code serves as a
                      sub-status for the HTTP error code specified in the
                      response.
                    type: string
                  details:
                    description: The list of invalid fields send in request, in case of
                      validation error.
                    items:
                      description: Error Field contract.
                      properties:
                        code:
                          description: Property level error code.
                          type: string
                        message:
                          description: Human-readable representation of property-level
                            error.
                          type: string
                        target:
                          description: Property name.
                          type: string
                    type: array
                  message:
                    description: Human-readable representation of the error.
                    type: string
      tags:
        - AuthorizationServers
servers:
  - url: https://azure.local
  - url: "{apimBaseUrl}"
    variables:
      apimBaseUrl:
        description: The management endpoint of the API Management service, for example
          https://myapimservice.management.azure-api.net.
        x-ms-skip-url-encoding: true
        default: ""
components:
  examples:
    ApiManagementListAuthorizationServers:
      value:
        count: 2
        value:
          - authorizationEndpoint: https://www.contoso.com/oauth2/auth
            authorizationMethods:
              - GET
            bearerTokenSendingMethods:
              - authorizationHeader
            clientAuthenticationMethod:
              - Basic
            clientId: "1"
            clientRegistrationEndpoint: https://www.contoso.com/apps
            clientSecret: "2"
            defaultScope: read write
            description: test server
            grantTypes:
              - authorizationCode
            id: /authorizationServers/5a58bb95a40f7ef2e05be74b
            name: 2d0057b0-bf3a-4c54-9de7-0e5e39789c1b
            resourceOwnerPassword: pwd
            resourceOwnerUsername: un
            supportState: true
            tokenEndpoint: https://www.contoso.com/oauth2/token
          - authorizationEndpoint: https://www.contoso.com/oauth2/auth
            authorizationMethods:
              - GET
            bearerTokenSendingMethods:
              - authorizationHeader
            clientAuthenticationMethod:
              - Basic
            clientId: "1"
            clientRegistrationEndpoint: https://www.contoso.com/apps
            clientSecret: "2"
            defaultScope: read write
            description: test server
            grantTypes:
              - authorizationCode
            id: /authorizationServers/5a58bb37a40f7ef2e05bd7f3
            name: f3e4a805-3d6e-48e1-839d-05da510d84a5
            resourceOwnerPassword: pwd
            resourceOwnerUsername: un
            supportState: true
            tokenEndpoint: https://www.contoso.com/oauth2/token
    ApiManagementGetAuthorizationServers:
      value:
        authorizationEndpoint: https://www.contoso.com/oauth2/auth
        authorizationMethods:
          - GET
        bearerTokenSendingMethods:
          - authorizationHeader
        clientId: "1"
        clientRegistrationEndpoint: https://www.contoso.com/apps
        clientSecret: "2"
        defaultScope: read write
        description: test server
        grantTypes:
          - authorizationCode
          - implicit
          - resourceOwnerPassword
        id: /authorizationServers/5a58bd24a40f7e104892a241
        name: 660e8b6e-baa4-443e-ae8d-208b25ee560b
        resourceOwnerPassword: pwd
        resourceOwnerUsername: un
        supportState: true
        tokenEndpoint: https://www.contoso.com/oauth2/token
    ApiManagementPutAuthorizationServers:
      value:
        authorizationEndpoint: https://www.contoso.com/oauth2/auth
        authorizationMethods:
          - GET
        bearerTokenSendingMethods:
          - authorizationHeader
        clientAuthenticationMethod:
          - Basic
        clientId: "1"
        clientRegistrationEndpoint: https://www.contoso.com/apps
        clientSecret: "2"
        defaultScope: read write
        description: test server
        grantTypes:
          - authorizationCode
        id: /authorizationServers/5a58bb1ca40f7ef2e05bd557
        name: 68d89b6f-a724-4035-bc3c-a7ab17d849d8
        resourceOwnerPassword: pwd
        resourceOwnerUsername: un
        supportState: true
        tokenEndpoint: https://www.contoso.com/oauth2/token
  parameters:
    AuthenticationServerIdParameter:
      description: Identifier of the authorization server.
      in: path
      name: authsid
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
        maxLength: 256
        pattern: ^[^*#&+:<>?]+$
      examples:
        ApiManagementDeleteAuthorizationServers:
          value: 5a58bebda40f7e104892b414
        ApiManagementGetAuthorizationServers:
          value: 5a58bd24a40f7e104892a241
        ApiManagementPatchAuthorizationServers:
          value: 5a58be75a40f7e104892b205
        ApiManagementPutAuthorizationServers:
          value: 5a58bb1ca40f7ef2e05bd557
  securitySchemes:
    apim_key:
      in: header
      name: Authorization
      type: apiKey
  schemas:
    AuthorizationServerCollection:
      description: Paged OAuth2 Authorization Servers list representation.
      properties:
        count:
          description: Total record count number across all pages.
          format: int64
          type: integer
        nextLink:
          description: Next page link if any.
          type: string
        value:
          description: Page values.
          items:
            $ref: "#/components/schemas/AuthorizationServerContract"
          type: array
    AuthorizationServerContract:
      allOf:
        - $ref: "#/components/schemas/AuthorizationServerContractProperties"
      description: External OAuth authorization server settings.
      properties:
        id:
          description: Identifier of the Authorization Server entity.
          type: string
    AuthorizationServerContractBaseProperties:
      description: External OAuth authorization server Update settings contract.
      properties:
        authorizationMethods:
          description: HTTP verbs supported by the authorization endpoint. GET must be
            always present. POST is optional.
          items:
            enum:
              - HEAD
              - OPTIONS
              - TRACE
              - GET
              - POST
              - PUT
              - PATCH
              - DELETE
            type: string
            x-ms-enum:
              modelAsString: false
              name: AuthorizationMethod
          type: array
        bearerTokenSendingMethods:
          description: "Specifies the mechanism by which access token is passed to the API.
            "
          externalDocs:
            url: http://tools.ietf.org/html/rfc6749#section-4
          items:
            enum:
              - authorizationHeader
              - query
            type: string
            x-ms-enum:
              modelAsString: true
              name: BearerTokenSendingMethod
          type: array
        clientAuthenticationMethod:
          description: Method of authentication supported by the token endpoint of this
            authorization server. Possible values are Basic and/or Body. When
            Body is specified, client credentials and other parameters are
            passed within the request body in the
            application/x-www-form-urlencoded format.
          items:
            enum:
              - Basic
              - Body
            type: string
            x-ms-enum:
              modelAsString: true
              name: ClientAuthenticationMethod
              values:
                - description: Basic Client Authentication method.
                  value: Basic
                - description: Body based Authentication method.
                  value: Body
          type: array
        clientSecret:
          description: Client or app secret registered with this authorization server.
          type: string
        defaultScope:
          description: Access token scope that is going to be requested by default. Can be
            overridden at the API level. Should be provided in the form of a
            string containing space-delimited values.
          externalDocs:
            url: http://tools.ietf.org/html/rfc6749#section-3.3
          type: string
        description:
          description: Description of the authorization server. Can contain HTML formatting
            tags.
          type: string
        resourceOwnerPassword:
          description: Can be optionally specified when resource owner password grant type
            is supported by this authorization server. Default resource owner
            password.
          type: string
        resourceOwnerUsername:
          description: Can be optionally specified when resource owner password grant type
            is supported by this authorization server. Default resource owner
            username.
          type: string
        supportState:
          description: If true, authorization server will include state parameter from the
            authorization request to its response. Client may use state
            parameter to raise protocol security.
          externalDocs:
            url: http://tools.ietf.org/html/rfc6749#section-3.1
          type: boolean
        tokenBodyParameters:
          description: 'Additional parameters required by the token endpoint of this
            authorization server represented as an array of JSON objects with
            name and value string properties, i.e. {"name" : "name value",
            "value": "a value"}.'
          items:
            $ref: "#/components/schemas/TokenBodyParameterContract"
          type: array
        tokenEndpoint:
          description: OAuth token endpoint. Contains absolute URI to entity being
            referenced.
          externalDocs:
            url: http://tools.ietf.org/html/rfc6749#section-3.1
          type: string
    AuthorizationServerContractProperties:
      allOf:
        - $ref: "#/components/schemas/AuthorizationServerContractBaseProperties"
      description: External OAuth authorization server settings Properties.
      properties:
        authorizationEndpoint:
          description: OAuth authorization endpoint. See
            http://tools.ietf.org/html/rfc6749#section-3.2.
          type: string
        clientId:
          description: Client or app id registered with this authorization server.
          type: string
        clientRegistrationEndpoint:
          description: Optional reference to a page where client or app registration for
            this authorization server is performed. Contains absolute URL to
            entity being referenced.
          type: string
        grantTypes:
          description: Form of an authorization grant, which the client uses to request the
            access token.
          externalDocs:
            url: http://tools.ietf.org/html/rfc6749#section-4
          items:
            enum:
              - authorizationCode
              - implicit
              - resourceOwnerPassword
              - clientCredentials
            type: string
            x-ms-enum:
              modelAsString: true
              name: GrantType
              values:
                - description: Authorization Code Grant flow as described
                    https://tools.ietf.org/html/rfc6749#section-4.1.
                  value: authorizationCode
                - description: Implicit Code Grant flow as described
                    https://tools.ietf.org/html/rfc6749#section-4.2.
                  value: implicit
                - description: Resource Owner Password Grant flow as described
                    https://tools.ietf.org/html/rfc6749#section-4.3.
                  value: resourceOwnerPassword
                - description: Client Credentials Grant flow as described
                    https://tools.ietf.org/html/rfc6749#section-4.4.
                  value: clientCredentials
          type: array
        name:
          description: User-friendly authorization server name.
          maxLength: 50
          minLength: 1
          type: string
      required:
        - name
        - clientRegistrationEndpoint
        - authorizationEndpoint
        - clientId
        - grantTypes
    AuthorizationServerUpdateContract:
      allOf:
        - $ref: "#/components/schemas/AuthorizationServerContractBaseProperties"
      description: External OAuth authorization server Update settings contract.
      properties:
        authorizationEndpoint:
          description: OAuth authorization endpoint. See
            http://tools.ietf.org/html/rfc6749#section-3.2.
          type: string
        clientId:
          description: Client or app id registered with this authorization server.
          type: string
        clientRegistrationEndpoint:
          description: Optional reference to a page where client or app registration for
            this authorization server is performed. Contains absolute URL to
            entity being referenced.
          type: string
        grantTypes:
          description: Form of an authorization grant, which the client uses to request the
            access token.
          externalDocs:
            url: http://tools.ietf.org/html/rfc6749#section-4
          items:
            enum:
              - authorizationCode
              - implicit
              - resourceOwnerPassword
              - clientCredentials
            type: string
            x-ms-enum:
              modelAsString: true
              name: GrantType
              values:
                - description: Authorization Code Grant flow as described
                    https://tools.ietf.org/html/rfc6749#section-4.1.
                  value: authorizationCode
                - description: Implicit Code Grant flow as described
                    https://tools.ietf.org/html/rfc6749#section-4.2.
                  value: implicit
                - description: Resource Owner Password Grant flow as described
                    https://tools.ietf.org/html/rfc6749#section-4.3.
                  value: resourceOwnerPassword
                - description: Client Credentials Grant flow as described
                    https://tools.ietf.org/html/rfc6749#section-4.4.
                  value: clientCredentials
          type: array
        name:
          description: User-friendly authorization server name.
          maxLength: 50
          minLength: 1
          type: string
    TokenBodyParameterContract:
      description: OAuth acquire token request body parameter (www-url-form-encoded).
      properties:
        name:
          description: body parameter name.
          type: string
        value:
          description: body parameter value.
          type: string
      required:
        - name
        - value
