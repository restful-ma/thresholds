openapi: 3.0.0
info:
  version: 2018-03-01
  x-release: v4
  title: Amazon FSx
  description: Amazon FSx is a fully managed service that makes it easy for storage and
    application administrators to launch and use shared file storage.
  x-logo:
    url: https://twitter.com/awscloud/profile_image?size=original
    backgroundColor: "#FFFFFF"
  termsOfService: https://aws.amazon.com/service-terms/
  contact:
    name: Mike Ralphson
    email: mike.ralphson@gmail.com
    url: https://github.com/mermade/aws2openapi
    x-twitter: PermittedSoc
  license:
    name: Apache 2.0 License
    url: http://www.apache.org/licenses/
  x-providerName: amazonaws.com
  x-serviceName: fsx
  x-origin:
    - contentType: application/json
      url: https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/fsx-2018-03-01.normal.json
      converter:
        url: https://github.com/mermade/aws2openapi
        version: 1.0.0
      x-apisguru-direct: true
  x-apiClientRegistration:
    url: https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct
  x-apisguru-categories:
    - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: https://docs.aws.amazon.com/fsx/
x-hasEquivalentPaths: true
security:
  - hmac: []
paths:
  /#X-Amz-Target=AWSSimbaAPIService_v20180301.CreateBackup:
    post:
      operationId: CreateBackup
      description: "<p>Creates a backup of an existing Amazon FSx for Windows File Server
        file system. Creating regular backups for your file system is a best
        practice that complements the replication that Amazon FSx for Windows
        File Server performs for your file system. It also enables you to
        restore from user modification of data.</p> <p>If a backup with the
        specified client request token exists, and the parameters match, this
        operation returns the description of the existing backup. If a backup
        specified client request token exists, and the parameters don't match,
        this operation returns <code>IncompatibleParameterError</code>. If a
        backup with the specified client request token doesn't exist,
        <code>CreateBackup</code> does the following: </p> <ul> <li> <p>Creates
        a new Amazon FSx backup with an assigned ID, and an initial lifecycle
        state of <code>CREATING</code>.</p> </li> <li> <p>Returns the
        description of the backup.</p> </li> </ul> <p>By using the idempotent
        operation, you can retry a <code>CreateBackup</code> operation without
        the risk of creating an extra backup. This approach can be useful when
        an initial call fails in a way that makes it unclear whether a backup
        was created. If you use the same client request token and the initial
        call created a backup, the operation returns a successful result because
        all the parameters are the same.</p> <p>The
        <code>CreateFileSystem</code> operation returns while the backup's
        lifecycle state is still <code>CREATING</code>. You can check the file
        system creation status by calling the <a>DescribeBackups</a> operation,
        which returns the backup state along with other information.</p> <note>
        <p/> </note>"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateBackupResponse"
        "480":
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequest"
        "481":
          description: UnsupportedOperation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnsupportedOperation"
        "482":
          description: FileSystemNotFound
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FileSystemNotFound"
        "483":
          description: BackupInProgress
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackupInProgress"
        "484":
          description: IncompatibleParameterError
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/IncompatibleParameterError"
        "485":
          description: ServiceLimitExceeded
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceLimitExceeded"
        "486":
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSSimbaAPIService_v20180301.CreateBackup
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateBackupRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSSimbaAPIService_v20180301.CreateFileSystem:
    post:
      operationId: CreateFileSystem
      description: "<p>Creates a new, empty Amazon FSx file system.</p> <p>If a file system
        with the specified client request token exists and the parameters match,
        <code>CreateFileSystem</code> returns the description of the existing
        file system. If a file system specified client request token exists and
        the parameters don't match, this call returns
        <code>IncompatibleParameterError</code>. If a file system with the
        specified client request token doesn't exist,
        <code>CreateFileSystem</code> does the following: </p> <ul> <li>
        <p>Creates a new, empty Amazon FSx file system with an assigned ID, and
        an initial lifecycle state of <code>CREATING</code>.</p> </li> <li>
        <p>Returns the description of the file system.</p> </li> </ul> <p>This
        operation requires a client request token in the request that Amazon FSx
        uses to ensure idempotent creation. This means that calling the
        operation multiple times with the same client request token has no
        effect. By using the idempotent operation, you can retry a
        <code>CreateFileSystem</code> operation without the risk of creating an
        extra file system. This approach can be useful when an initial call
        fails in a way that makes it unclear whether a file system was created.
        Examples are if a transport level timeout occurred, or your connection
        was reset. If you use the same client request token and the initial call
        created a file system, the client receives success as long as the
        parameters are the same.</p> <note> <p>The <code>CreateFileSystem</code>
        call returns while the file system's lifecycle state is still
        <code>CREATING</code>. You can check the file-system creation status by
        calling the <a>DescribeFileSystems</a> operation, which returns the file
        system state along with other information.</p> </note>"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateFileSystemResponse"
        "480":
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequest"
        "481":
          description: ActiveDirectoryError
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ActiveDirectoryError"
        "482":
          description: IncompatibleParameterError
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/IncompatibleParameterError"
        "483":
          description: InvalidImportPath
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidImportPath"
        "484":
          description: InvalidExportPath
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidExportPath"
        "485":
          description: InvalidNetworkSettings
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidNetworkSettings"
        "486":
          description: ServiceLimitExceeded
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceLimitExceeded"
        "487":
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
        "488":
          description: MissingFileSystemConfiguration
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MissingFileSystemConfiguration"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSSimbaAPIService_v20180301.CreateFileSystem
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateFileSystemRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSSimbaAPIService_v20180301.CreateFileSystemFromBackup:
    post:
      operationId: CreateFileSystemFromBackup
      description: <p>Creates a new Amazon FSx file system from an existing Amazon FSx for
        Windows File Server backup.</p> <p>If a file system with the specified
        client request token exists and the parameters match, this operation
        returns the description of the file system. If a client request token
        specified by the file system exists and the parameters don't match, this
        call returns <code>IncompatibleParameterError</code>. If a file system
        with the specified client request token doesn't exist, this operation
        does the following:</p> <ul> <li> <p>Creates a new Amazon FSx file
        system from backup with an assigned ID, and an initial lifecycle state
        of <code>CREATING</code>.</p> </li> <li> <p>Returns the description of
        the file system.</p> </li> </ul> <p>Parameters like Active Directory,
        default share name, automatic backup, and backup settings default to the
        parameters of the file system that was backed up, unless overridden. You
        can explicitly supply other settings.</p> <p>By using the idempotent
        operation, you can retry a <code>CreateFileSystemFromBackup</code> call
        without the risk of creating an extra file system. This approach can be
        useful when an initial call fails in a way that makes it unclear whether
        a file system was created. Examples are if a transport level timeout
        occurred, or your connection was reset. If you use the same client
        request token and the initial call created a file system, the client
        receives success as long as the parameters are the same.</p> <note>
        <p>The <code>CreateFileSystemFromBackup</code> call returns while the
        file system's lifecycle state is still <code>CREATING</code>. You can
        check the file-system creation status by calling the
        <a>DescribeFileSystems</a> operation, which returns the file system
        state along with other information.</p> </note>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateFileSystemFromBackupResponse"
        "480":
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequest"
        "481":
          description: ActiveDirectoryError
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ActiveDirectoryError"
        "482":
          description: IncompatibleParameterError
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/IncompatibleParameterError"
        "483":
          description: InvalidNetworkSettings
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidNetworkSettings"
        "484":
          description: ServiceLimitExceeded
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceLimitExceeded"
        "485":
          description: BackupNotFound
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackupNotFound"
        "486":
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
        "487":
          description: MissingFileSystemConfiguration
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MissingFileSystemConfiguration"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSSimbaAPIService_v20180301.CreateFileSystemFromBackup
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateFileSystemFromBackupRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSSimbaAPIService_v20180301.DeleteBackup:
    post:
      operationId: DeleteBackup
      description: <p>Deletes an Amazon FSx for Windows File Server backup, deleting its
        contents. After deletion, the backup no longer exists, and its data is
        gone.</p> <p>The <code>DeleteBackup</code> call returns instantly. The
        backup will not show up in later <code>DescribeBackups</code> calls.</p>
        <important> <p>The data in a deleted backup is also deleted and can't be
        recovered by any means.</p> </important>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteBackupResponse"
        "480":
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequest"
        "481":
          description: BackupInProgress
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackupInProgress"
        "482":
          description: BackupNotFound
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackupNotFound"
        "483":
          description: BackupRestoring
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackupRestoring"
        "484":
          description: IncompatibleParameterError
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/IncompatibleParameterError"
        "485":
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSSimbaAPIService_v20180301.DeleteBackup
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeleteBackupRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSSimbaAPIService_v20180301.DeleteFileSystem:
    post:
      operationId: DeleteFileSystem
      description: <p>Deletes a file system, deleting its contents. After deletion, the
        file system no longer exists, and its data is gone. Any existing
        automatic backups will also be deleted.</p> <p>By default, when you
        delete an Amazon FSx for Windows File Server file system, a final backup
        is created upon deletion. This final backup is not subject to the file
        system's retention policy, and must be manually deleted.</p> <p>The
        <code>DeleteFileSystem</code> action returns while the file system has
        the <code>DELETING</code> status. You can check the file system deletion
        status by calling the <a>DescribeFileSystems</a> action, which returns a
        list of file systems in your account. If you pass the file system ID for
        a deleted file system, the <a>DescribeFileSystems</a> returns a
        <code>FileSystemNotFound</code> error.</p> <important> <p>The data in a
        deleted file system is also deleted and can't be recovered by any
        means.</p> </important>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteFileSystemResponse"
        "480":
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequest"
        "481":
          description: IncompatibleParameterError
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/IncompatibleParameterError"
        "482":
          description: FileSystemNotFound
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FileSystemNotFound"
        "483":
          description: ServiceLimitExceeded
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceLimitExceeded"
        "484":
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSSimbaAPIService_v20180301.DeleteFileSystem
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeleteFileSystemRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSSimbaAPIService_v20180301.DescribeBackups:
    post:
      operationId: DescribeBackups
      description: <p>Returns the description of specific Amazon FSx for Windows File
        Server backups, if a <code>BackupIds</code> value is provided for that
        backup. Otherwise, it returns all backups owned by your AWS account in
        the AWS Region of the endpoint that you're calling.</p> <p>When
        retrieving all backups, you can optionally specify the
        <code>MaxResults</code> parameter to limit the number of backups in a
        response. If more backups remain, Amazon FSx returns a
        <code>NextToken</code> value in the response. In this case, send a later
        request with the <code>NextToken</code> request parameter set to the
        value of <code>NextToken</code> from the last response.</p> <p>This
        action is used in an iterative process to retrieve a list of your
        backups. <code>DescribeBackups</code> is called first without a
        <code>NextToken</code>value. Then the action continues to be called with
        the <code>NextToken</code> parameter set to the value of the last
        <code>NextToken</code> value until a response has no
        <code>NextToken</code>.</p> <p>When using this action, keep the
        following in mind:</p> <ul> <li> <p>The implementation might return
        fewer than <code>MaxResults</code> file system descriptions while still
        including a <code>NextToken</code> value.</p> </li> <li> <p>The order of
        backups returned in the response of one <code>DescribeBackups</code>
        call and the order of backups returned across the responses of a
        multi-call iteration is unspecified.</p> </li> </ul>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeBackupsResponse"
        "480":
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequest"
        "481":
          description: FileSystemNotFound
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FileSystemNotFound"
        "482":
          description: BackupNotFound
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackupNotFound"
        "483":
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
      parameters:
        - name: MaxResults
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: NextToken
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSSimbaAPIService_v20180301.DescribeBackups
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DescribeBackupsRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSSimbaAPIService_v20180301.DescribeFileSystems:
    post:
      operationId: DescribeFileSystems
      description: <p>Returns the description of specific Amazon FSx file systems, if a
        <code>FileSystemIds</code> value is provided for that file system.
        Otherwise, it returns descriptions of all file systems owned by your AWS
        account in the AWS Region of the endpoint that you're calling.</p>
        <p>When retrieving all file system descriptions, you can optionally
        specify the <code>MaxResults</code> parameter to limit the number of
        descriptions in a response. If more file system descriptions remain,
        Amazon FSx returns a <code>NextToken</code> value in the response. In
        this case, send a later request with the <code>NextToken</code> request
        parameter set to the value of <code>NextToken</code> from the last
        response.</p> <p>This action is used in an iterative process to retrieve
        a list of your file system descriptions.
        <code>DescribeFileSystems</code> is called first without a
        <code>NextToken</code>value. Then the action continues to be called with
        the <code>NextToken</code> parameter set to the value of the last
        <code>NextToken</code> value until a response has no
        <code>NextToken</code>.</p> <p>When using this action, keep the
        following in mind:</p> <ul> <li> <p>The implementation might return
        fewer than <code>MaxResults</code> file system descriptions while still
        including a <code>NextToken</code> value.</p> </li> <li> <p>The order of
        file systems returned in the response of one
        <code>DescribeFileSystems</code> call and the order of file systems
        returned across the responses of a multicall iteration is
        unspecified.</p> </li> </ul>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeFileSystemsResponse"
        "480":
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequest"
        "481":
          description: FileSystemNotFound
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FileSystemNotFound"
        "482":
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
      parameters:
        - name: MaxResults
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: NextToken
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSSimbaAPIService_v20180301.DescribeFileSystems
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DescribeFileSystemsRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSSimbaAPIService_v20180301.ListTagsForResource:
    post:
      operationId: ListTagsForResource
      description: <p>Lists tags for an Amazon FSx file systems and backups in the case of
        Amazon FSx for Windows File Server.</p> <p>When retrieving all tags, you
        can optionally specify the <code>MaxResults</code> parameter to limit
        the number of tags in a response. If more tags remain, Amazon FSx
        returns a <code>NextToken</code> value in the response. In this case,
        send a later request with the <code>NextToken</code> request parameter
        set to the value of <code>NextToken</code> from the last response.</p>
        <p>This action is used in an iterative process to retrieve a list of
        your tags. <code>ListTagsForResource</code> is called first without a
        <code>NextToken</code>value. Then the action continues to be called with
        the <code>NextToken</code> parameter set to the value of the last
        <code>NextToken</code> value until a response has no
        <code>NextToken</code>.</p> <p>When using this action, keep the
        following in mind:</p> <ul> <li> <p>The implementation might return
        fewer than <code>MaxResults</code> file system descriptions while still
        including a <code>NextToken</code> value.</p> </li> <li> <p>The order of
        tags returned in the response of one <code>ListTagsForResource</code>
        call and the order of tags returned across the responses of a multi-call
        iteration is unspecified.</p> </li> </ul>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListTagsForResourceResponse"
        "480":
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequest"
        "481":
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
        "482":
          description: ResourceNotFound
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFound"
        "483":
          description: NotServiceResourceError
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotServiceResourceError"
        "484":
          description: ResourceDoesNotSupportTagging
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceDoesNotSupportTagging"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSSimbaAPIService_v20180301.ListTagsForResource
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ListTagsForResourceRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSSimbaAPIService_v20180301.TagResource:
    post:
      operationId: TagResource
      description: Tags an Amazon FSx resource.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TagResourceResponse"
        "480":
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequest"
        "481":
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
        "482":
          description: ResourceNotFound
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFound"
        "483":
          description: NotServiceResourceError
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotServiceResourceError"
        "484":
          description: ResourceDoesNotSupportTagging
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceDoesNotSupportTagging"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSSimbaAPIService_v20180301.TagResource
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TagResourceRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSSimbaAPIService_v20180301.UntagResource:
    post:
      operationId: UntagResource
      description: This action removes a tag from an Amazon FSx resource.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UntagResourceResponse"
        "480":
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequest"
        "481":
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
        "482":
          description: ResourceNotFound
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFound"
        "483":
          description: NotServiceResourceError
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotServiceResourceError"
        "484":
          description: ResourceDoesNotSupportTagging
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceDoesNotSupportTagging"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSSimbaAPIService_v20180301.UntagResource
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UntagResourceRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSSimbaAPIService_v20180301.UpdateFileSystem:
    post:
      operationId: UpdateFileSystem
      description: Updates a file system configuration.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateFileSystemResponse"
        "480":
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequest"
        "481":
          description: UnsupportedOperation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnsupportedOperation"
        "482":
          description: IncompatibleParameterError
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/IncompatibleParameterError"
        "483":
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
        "484":
          description: FileSystemNotFound
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FileSystemNotFound"
        "485":
          description: MissingFileSystemConfiguration
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MissingFileSystemConfiguration"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSSimbaAPIService_v20180301.UpdateFileSystem
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateFileSystemRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
servers:
  - url: http://fsx.{region}.amazonaws.com
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-south-1
          - sa-east-1
        default: us-east-1
    description: The Amazon FSx multi-region endpoint
  - url: https://fsx.{region}.amazonaws.com
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-south-1
          - sa-east-1
        default: us-east-1
    description: The Amazon FSx multi-region endpoint
  - url: http://fsx.{region}.amazonaws.com.cn
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The Amazon FSx endpoint for China (Beijing) and China (Ningxia)
  - url: https://fsx.{region}.amazonaws.com.cn
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The Amazon FSx endpoint for China (Beijing) and China (Ningxia)
components:
  parameters:
    X-Amz-Content-Sha256:
      name: X-Amz-Content-Sha256
      in: header
      required: false
      schema:
        type: string
    X-Amz-Date:
      name: X-Amz-Date
      in: header
      required: false
      schema:
        type: string
    X-Amz-Algorithm:
      name: X-Amz-Algorithm
      in: header
      required: false
      schema:
        type: string
    X-Amz-Credential:
      name: X-Amz-Credential
      in: header
      required: false
      schema:
        type: string
    X-Amz-Security-Token:
      name: X-Amz-Security-Token
      in: header
      required: false
      schema:
        type: string
    X-Amz-Signature:
      name: X-Amz-Signature
      in: header
      required: false
      schema:
        type: string
    X-Amz-SignedHeaders:
      name: X-Amz-SignedHeaders
      in: header
      required: false
      schema:
        type: string
  securitySchemes:
    hmac:
      type: apiKey
      name: Authorization
      in: header
      description: Amazon Signature authorization v4
      x-amazon-apigateway-authtype: awsSigv4
  schemas:
    CreateBackupResponse:
      type: object
      example:
        Backup:
          BackupId: backup-03e3c82e0183b7b6b
          CreationTime: "1481841524.0"
          FileSystem:
            FileSystemId: fs-0498eed5fe91001ec
            OwnerId: 12345678912
            StorageCapacity: 300
            WindowsConfiguration:
              ActiveDirectoryId: d-1234abcd12
              AutomaticBackupRetentionDays: 30
              DailyAutomaticBackupStartTime: 05:00
              WeeklyMaintenanceStartTime: 1:05:00
          Lifecycle: CREATING
          ProgressPercent: 0
          ResourceARN: arn:aws:fsx:us-east-1:012345678912:backup/backup-03e3c82e0183b7b6b
          Tags:
            - Key: Name
              Value: MyBackup
          Type: USER_INITIATED
      properties:
        Backup:
          $ref: "#/components/schemas/Backup"
      description: The response object for the <code>CreateBackup</code> operation.
    CreateBackupRequest:
      type: object
      required:
        - FileSystemId
      properties:
        FileSystemId:
          $ref: "#/components/schemas/FileSystemId"
        ClientRequestToken:
          $ref: "#/components/schemas/ClientRequestToken"
        Tags:
          $ref: "#/components/schemas/Tags"
      description: The request object for the <code>CreateBackup</code> operation.
    BadRequest: {}
    UnsupportedOperation: {}
    FileSystemNotFound: {}
    BackupInProgress: {}
    IncompatibleParameterError: {}
    ServiceLimitExceeded: {}
    InternalServerError: {}
    CreateFileSystemResponse:
      type: object
      example:
        FileSystem:
          CreationTime: "1481841524.0"
          DNSName: fs-0498eed5fe91001ec.fsx.com
          FileSystemId: fs-0498eed5fe91001ec
          KmsKeyId: arn:aws:kms:us-east-1:012345678912:key/0ff3ea8d-130e-4133-877f-93908b6fdbd6
          Lifecycle: CREATING
          OwnerId: 12345678912
          ResourceARN: arn:aws:fsx:us-east-1:012345678912:file-system/fs-0498eed5fe91001ec
          StorageCapacity: 300
          SubnetIds:
            - subnet-1234abcd
          Tags:
            - Key: Name
              Value: MyFileSystem
          VpcId: vpc-ab1234cd
          WindowsConfiguration:
            ActiveDirectoryId: d-1234abcd12
            AutomaticBackupRetentionDays: 30
            DailyAutomaticBackupStartTime: 05:00
            ThroughputCapacity: 8
            WeeklyMaintenanceStartTime: 1:05:00
      properties:
        FileSystem:
          $ref: "#/components/schemas/FileSystem"
      description: The response object returned after the file system is created.
    CreateFileSystemRequest:
      type: object
      required:
        - FileSystemType
        - StorageCapacity
        - SubnetIds
      properties:
        ClientRequestToken:
          $ref: "#/components/schemas/ClientRequestToken"
        FileSystemType:
          $ref: "#/components/schemas/FileSystemType"
        StorageCapacity:
          $ref: "#/components/schemas/StorageCapacity"
        SubnetIds:
          $ref: "#/components/schemas/SubnetIds"
        SecurityGroupIds:
          $ref: "#/components/schemas/SecurityGroupIds"
        Tags:
          $ref: "#/components/schemas/Tags"
        KmsKeyId:
          $ref: "#/components/schemas/KmsKeyId"
        WindowsConfiguration:
          $ref: "#/components/schemas/CreateFileSystemWindowsConfiguration"
        LustreConfiguration:
          $ref: "#/components/schemas/CreateFileSystemLustreConfiguration"
      description: The request object used to create a new Amazon FSx file system.
    ActiveDirectoryError: {}
    InvalidImportPath: {}
    InvalidExportPath: {}
    InvalidNetworkSettings: {}
    MissingFileSystemConfiguration: {}
    CreateFileSystemFromBackupResponse:
      type: object
      example:
        FileSystem:
          CreationTime: "1481841524.0"
          DNSName: fs-0498eed5fe91001ec.fsx.com
          FileSystemId: fs-0498eed5fe91001ec
          KmsKeyId: arn:aws:kms:us-east-1:012345678912:key/0ff3ea8d-130e-4133-877f-93908b6fdbd6
          Lifecycle: CREATING
          OwnerId: 12345678912
          ResourceARN: arn:aws:fsx:us-east-1:012345678912:file-system/fs-0498eed5fe91001ec
          StorageCapacity: 300
          SubnetIds:
            - subnet-1234abcd
          Tags:
            - Key: Name
              Value: MyFileSystem
          VpcId: vpc-ab1234cd
          WindowsConfiguration:
            ActiveDirectoryId: d-1234abcd12
            AutomaticBackupRetentionDays: 30
            DailyAutomaticBackupStartTime: 05:00
            ThroughputCapacity: 8
            WeeklyMaintenanceStartTime: 1:05:00
      properties:
        FileSystem:
          $ref: "#/components/schemas/FileSystem"
      description: The response object for the <code>CreateFileSystemFromBackup</code>
        operation.
    CreateFileSystemFromBackupRequest:
      type: object
      required:
        - BackupId
        - SubnetIds
      properties:
        BackupId:
          $ref: "#/components/schemas/BackupId"
        ClientRequestToken:
          $ref: "#/components/schemas/ClientRequestToken"
        SubnetIds:
          $ref: "#/components/schemas/SubnetIds"
        SecurityGroupIds:
          $ref: "#/components/schemas/SecurityGroupIds"
        Tags:
          $ref: "#/components/schemas/Tags"
        WindowsConfiguration:
          $ref: "#/components/schemas/CreateFileSystemWindowsConfiguration"
      description: The request object for the <code>CreateFileSystemFromBackup</code>
        operation.
    BackupNotFound: {}
    DeleteBackupResponse:
      type: object
      example:
        BackupId: backup-03e3c82e0183b7b6b
        Lifecycle: DELETED
      properties:
        BackupId:
          $ref: "#/components/schemas/BackupId"
        Lifecycle:
          $ref: "#/components/schemas/BackupLifecycle"
      description: The response object for <code>DeleteBackup</code> operation.
    DeleteBackupRequest:
      type: object
      required:
        - BackupId
      properties:
        BackupId:
          $ref: "#/components/schemas/BackupId"
        ClientRequestToken:
          $ref: "#/components/schemas/ClientRequestToken"
      description: The request object for <code>DeleteBackup</code> operation.
    BackupRestoring: {}
    DeleteFileSystemResponse:
      type: object
      example:
        FileSystemId: fs-0498eed5fe91001ec
        Lifecycle: DELETING
      properties:
        FileSystemId:
          $ref: "#/components/schemas/FileSystemId"
        Lifecycle:
          $ref: "#/components/schemas/FileSystemLifecycle"
        WindowsResponse:
          $ref: "#/components/schemas/DeleteFileSystemWindowsResponse"
      description: The response object for the <code>DeleteFileSystem</code> operation.
    DeleteFileSystemRequest:
      type: object
      required:
        - FileSystemId
      properties:
        FileSystemId:
          $ref: "#/components/schemas/FileSystemId"
        ClientRequestToken:
          $ref: "#/components/schemas/ClientRequestToken"
        WindowsConfiguration:
          $ref: "#/components/schemas/DeleteFileSystemWindowsConfiguration"
      description: The request object for <code>DeleteFileSystem</code> operation.
    DescribeBackupsResponse:
      type: object
      example:
        Backups:
          - BackupId: backup-03e3c82e0183b7b6b
            CreationTime: "1481841524.0"
            FileSystem:
              FileSystemId: fs-0498eed5fe91001ec
              OwnerId: 12345678912
              StorageCapacity: 300
              WindowsConfiguration:
                ActiveDirectoryId: d-1234abcd12
                AutomaticBackupRetentionDays: 30
                DailyAutomaticBackupStartTime: 05:00
                WeeklyMaintenanceStartTime: 1:05:00
            Lifecycle: AVAILABLE
            ResourceARN: arn:aws:fsx:us-east-1:012345678912:backup/backup-03e3c82e0183b7b6b
            Tags:
              - Key: Name
                Value: MyBackup
            Type: USER_INITIATED
      properties:
        Backups:
          $ref: "#/components/schemas/Backups"
        NextToken:
          $ref: "#/components/schemas/NextToken"
      description: Response object for <code>DescribeBackups</code> operation.
    DescribeBackupsRequest:
      type: object
      properties:
        BackupIds:
          $ref: "#/components/schemas/BackupIds"
        Filters:
          $ref: "#/components/schemas/Filters"
        MaxResults:
          $ref: "#/components/schemas/MaxResults"
        NextToken:
          $ref: "#/components/schemas/NextToken"
      description: The request object for <code>DescribeBackups</code> operation.
    DescribeFileSystemsResponse:
      type: object
      example:
        FileSystems:
          - CreationTime: "1481841524.0"
            DNSName: fs-0498eed5fe91001ec.fsx.com
            FileSystemId: fs-0498eed5fe91001ec
            KmsKeyId: arn:aws:kms:us-east-1:012345678912:key/0ff3ea8d-130e-4133-877f-93908b6fdbd6
            Lifecycle: AVAILABLE
            NetworkInterfaceIds:
              - eni-abcd1234
            OwnerId: 12345678912
            ResourceARN: arn:aws:fsx:us-east-1:012345678912:file-system/fs-0498eed5fe91001ec
            StorageCapacity: 300
            SubnetIds:
              - subnet-1234abcd
            Tags:
              - Key: Name
                Value: MyFileSystem
            VpcId: vpc-ab1234cd
            WindowsConfiguration:
              ActiveDirectoryId: d-1234abcd12
              AutomaticBackupRetentionDays: 30
              DailyAutomaticBackupStartTime: 05:00
              ThroughputCapacity: 8
              WeeklyMaintenanceStartTime: 1:05:00
      properties:
        FileSystems:
          $ref: "#/components/schemas/FileSystems"
        NextToken:
          $ref: "#/components/schemas/NextToken"
      description: The response object for <code>DescribeFileSystems</code> operation.
    DescribeFileSystemsRequest:
      type: object
      properties:
        FileSystemIds:
          $ref: "#/components/schemas/FileSystemIds"
        MaxResults:
          $ref: "#/components/schemas/MaxResults"
        NextToken:
          $ref: "#/components/schemas/NextToken"
      description: The request object for <code>DescribeFileSystems</code> operation.
    ListTagsForResourceResponse:
      type: object
      example:
        Tags:
          - Key: Name
            Value: MyFileSystem
      properties:
        Tags:
          $ref: "#/components/schemas/Tags"
        NextToken:
          $ref: "#/components/schemas/NextToken"
      description: The response object for <code>ListTagsForResource</code> operation.
    ListTagsForResourceRequest:
      type: object
      required:
        - ResourceARN
      properties:
        ResourceARN:
          $ref: "#/components/schemas/ResourceARN"
        MaxResults:
          $ref: "#/components/schemas/MaxResults"
        NextToken:
          $ref: "#/components/schemas/NextToken"
      description: The request object for <code>ListTagsForResource</code> operation.
    ResourceNotFound: {}
    NotServiceResourceError: {}
    ResourceDoesNotSupportTagging: {}
    TagResourceResponse:
      type: object
      properties: {}
      description: The response object for the <code>TagResource</code> operation.
    TagResourceRequest:
      type: object
      required:
        - ResourceARN
        - Tags
      properties:
        ResourceARN:
          $ref: "#/components/schemas/ResourceARN"
        Tags:
          $ref: "#/components/schemas/Tags"
      description: The request object for the <code>TagResource</code> operation.
    UntagResourceResponse:
      type: object
      properties: {}
      description: The response object for <code>UntagResource</code> action.
    UntagResourceRequest:
      type: object
      required:
        - ResourceARN
        - TagKeys
      properties:
        ResourceARN:
          $ref: "#/components/schemas/ResourceARN"
        TagKeys:
          $ref: "#/components/schemas/TagKeys"
      description: The request object for <code>UntagResource</code> action.
    UpdateFileSystemResponse:
      type: object
      example:
        FileSystem:
          CreationTime: "1481841524.0"
          DNSName: fs-0498eed5fe91001ec.fsx.com
          FileSystemId: fs-0498eed5fe91001ec
          KmsKeyId: arn:aws:kms:us-east-1:012345678912:key/0ff3ea8d-130e-4133-877f-93908b6fdbd6
          Lifecycle: AVAILABLE
          OwnerId: 12345678912
          ResourceARN: arn:aws:fsx:us-east-1:012345678912:file-system/fs-0498eed5fe91001ec
          StorageCapacity: 300
          SubnetIds:
            - subnet-1234abcd
          Tags:
            - Key: Name
              Value: MyFileSystem
          VpcId: vpc-ab1234cd
          WindowsConfiguration:
            AutomaticBackupRetentionDays: 10
            DailyAutomaticBackupStartTime: 06:00
            ThroughputCapacity: 8
            WeeklyMaintenanceStartTime: 3:06:00
      properties:
        FileSystem:
          $ref: "#/components/schemas/FileSystem"
      description: The response object for the <code>UpdateFileSystem</code> operation.
    UpdateFileSystemRequest:
      type: object
      required:
        - FileSystemId
      properties:
        FileSystemId:
          $ref: "#/components/schemas/FileSystemId"
        ClientRequestToken:
          $ref: "#/components/schemas/ClientRequestToken"
        WindowsConfiguration:
          $ref: "#/components/schemas/UpdateFileSystemWindowsConfiguration"
        LustreConfiguration:
          $ref: "#/components/schemas/UpdateFileSystemLustreConfiguration"
      description: The request object for the <code>UpdateFileSystem</code> operation.
    AWSAccountId:
      type: string
      pattern: ^\d{12}$
      description: An AWS account ID. This ID is a 12-digit number that you use to
        construct Amazon Resource Names (ARNs) for resources.
      minLength: 12
      maxLength: 12
    ActiveDirectoryFullyQualifiedName:
      type: string
    DirectoryId:
      type: string
      pattern: ^d-[0-9a-f]{10}$
      minLength: 12
      maxLength: 12
    ActiveDirectoryBackupAttributes:
      type: object
      properties:
        DomainName:
          $ref: "#/components/schemas/ActiveDirectoryFullyQualifiedName"
        ActiveDirectoryId:
          $ref: "#/components/schemas/DirectoryId"
      description: The Microsoft AD attributes of the Amazon FSx for Windows File Server
        file system.
    ArchivePath:
      type: string
      minLength: 3
      maxLength: 900
    AutomaticBackupRetentionDays:
      type: integer
      description: The number of days to retain automatic backups. Setting this to 0
        disables automatic backups. You can retain automatic backups for a
        maximum of 35 days.
      minimum: 0
      maximum: 35
    BackupId:
      type: string
      pattern: ^(backup-[0-9a-f]{8,})$
      description: The ID of the backup. Specifies the backup to use if you're creating a
        file system from an existing backup.
      minLength: 12
      maxLength: 128
    BackupLifecycle:
      type: string
      enum:
        - AVAILABLE
        - CREATING
        - DELETED
        - FAILED
      description: The lifecycle status of the backup.
    BackupFailureDetails:
      type: object
      properties:
        Message:
          $ref: "#/components/schemas/ErrorMessage"
      description: If backup creation fails, this structure contains the details of that
        failure.
    BackupType:
      type: string
      enum:
        - AUTOMATIC
        - USER_INITIATED
      description: The type of the backup.
    ProgressPercent:
      type: integer
      description: The current percent of progress of an asynchronous task.
      minimum: 0
      maximum: 100
    CreationTime:
      type: string
      description: The time that the resource was created, in seconds (since
        1970-01-01T00:00:00Z), also known as Unix time.
      format: date-time
    KmsKeyId:
      type: string
      pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-4[a-fA-F0-9]{3}-[89aAbB][a-fA-F0-9]{3}-[a-fA-F0-9]{12}|arn:aws[a-z-]{0,7}:kms:[a-z]{2}-[a-z-]{4,}-\d+:\d{12}:(key|alias)\/([a-fA-F0-9]{8}-[a-fA-F0-9]{4}-4[a-fA-F0-9]{3}-[89aAbB][a-fA-F0-9]{3}-[a-fA-F0-9]{12}|[a-zA-Z0-9:\/_-]+)|alias\/[a-zA-Z0-9:\/_-]+$
      description: The ID of your AWS Key Management Service (AWS KMS) key. This ID is used
        to encrypt the data in your file system at rest. For more information,
        see <a
        href="https://docs.aws.amazon.com/kms/latest/APIReference/API_Encrypt.html">Encrypt</a>
        in the <i>AWS Key Management Service API Reference</i>.
      minLength: 1
      maxLength: 2048
    ResourceARN:
      type: string
      pattern: ^arn:aws[a-z-]{0,7}:[A-Za-z0-9][A-za-z0-9_/.-]{0,62}:[A-za-z0-9_/.-]{0,63}:[A-za-z0-9_/.-]{0,63}:[A-Za-z0-9][A-za-z0-9_/.-]{0,127}$
      description: The Amazon Resource Name (ARN) for a given resource. ARNs uniquely
        identify AWS resources. We require an ARN when you need to specify a
        resource unambiguously across all of AWS. For more information, see <a
        href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon
        Resource Names (ARNs) and AWS Service Namespaces</a> in the <i>AWS
        General Reference</i>.
      minLength: 8
      maxLength: 512
    Tags:
      type: array
      description: A list of <code>Tag</code> values, with a maximum of 50 elements.
      items:
        $ref: "#/components/schemas/Tag"
      minItems: 1
      maxItems: 50
    FileSystem:
      type: object
      properties:
        OwnerId:
          $ref: "#/components/schemas/AWSAccountId"
        CreationTime:
          $ref: "#/components/schemas/CreationTime"
        FileSystemId:
          $ref: "#/components/schemas/FileSystemId"
        FileSystemType:
          $ref: "#/components/schemas/FileSystemType"
        Lifecycle:
          $ref: "#/components/schemas/FileSystemLifecycle"
        FailureDetails:
          $ref: "#/components/schemas/FileSystemFailureDetails"
        StorageCapacity:
          $ref: "#/components/schemas/StorageCapacity"
        VpcId:
          $ref: "#/components/schemas/VpcId"
        SubnetIds:
          $ref: "#/components/schemas/SubnetIds"
        NetworkInterfaceIds:
          $ref: "#/components/schemas/NetworkInterfaceIds"
        DNSName:
          $ref: "#/components/schemas/DNSName"
        KmsKeyId:
          $ref: "#/components/schemas/KmsKeyId"
        ResourceARN:
          $ref: "#/components/schemas/ResourceARN"
        Tags:
          $ref: "#/components/schemas/Tags"
        WindowsConfiguration:
          $ref: "#/components/schemas/WindowsFileSystemConfiguration"
        LustreConfiguration:
          $ref: "#/components/schemas/LustreFileSystemConfiguration"
      description: A description of a specific Amazon FSx file system.
    Backup:
      type: object
      required:
        - BackupId
        - Lifecycle
        - Type
        - CreationTime
        - FileSystem
      properties:
        BackupId:
          $ref: "#/components/schemas/BackupId"
        Lifecycle:
          $ref: "#/components/schemas/BackupLifecycle"
        FailureDetails:
          $ref: "#/components/schemas/BackupFailureDetails"
        Type:
          $ref: "#/components/schemas/BackupType"
        ProgressPercent:
          $ref: "#/components/schemas/ProgressPercent"
        CreationTime:
          $ref: "#/components/schemas/CreationTime"
        KmsKeyId:
          $ref: "#/components/schemas/KmsKeyId"
        ResourceARN:
          $ref: "#/components/schemas/ResourceARN"
        Tags:
          $ref: "#/components/schemas/Tags"
        FileSystem:
          $ref: "#/components/schemas/FileSystem"
        DirectoryInformation:
          $ref: "#/components/schemas/ActiveDirectoryBackupAttributes"
      description: A backup of an Amazon FSx for Windows File Server file system. You can
        create a new file system from a backup to protect against data loss.
    ErrorMessage:
      type: string
      description: A detailed error message.
      minLength: 1
      maxLength: 256
    BackupIds:
      type: array
      description: A list of backup IDs.
      items:
        $ref: "#/components/schemas/BackupId"
      maxItems: 50
    Backups:
      type: array
      description: A list of backups.
      items:
        $ref: "#/components/schemas/Backup"
      maxItems: 50
    ClientRequestToken:
      type: string
      pattern: "[A-za-z0-9_.-]{0,255}$"
      description: (Optional) An idempotency token for resource creation, in a string of up
        to 64 ASCII characters. This token is automatically filled on your
        behalf when you use the AWS Command Line Interface (AWS CLI) or an AWS
        SDK.
      minLength: 1
      maxLength: 255
    FileSystemId:
      type: string
      pattern: ^(fs-[0-9a-f]{8,})$
      description: The globally unique ID of the file system, assigned by Amazon FSx.
      minLength: 11
      maxLength: 21
    SubnetIds:
      type: array
      description: A list of subnet IDs. Currently, you can specify only one subnet ID in a
        call to the <code>CreateFileSystem</code> operation.
      items:
        $ref: "#/components/schemas/SubnetId"
      maxItems: 50
    SecurityGroupIds:
      type: array
      description: A list of security group IDs.
      items:
        $ref: "#/components/schemas/SecurityGroupId"
      maxItems: 50
    CreateFileSystemWindowsConfiguration:
      type: object
      required:
        - ThroughputCapacity
      properties:
        ActiveDirectoryId:
          $ref: "#/components/schemas/DirectoryId"
        SelfManagedActiveDirectoryConfiguration:
          $ref: "#/components/schemas/SelfManagedActiveDirectoryConfiguration"
        ThroughputCapacity:
          $ref: "#/components/schemas/MegabytesPerSecond"
        WeeklyMaintenanceStartTime:
          $ref: "#/components/schemas/WeeklyTime"
        DailyAutomaticBackupStartTime:
          $ref: "#/components/schemas/DailyTime"
        AutomaticBackupRetentionDays:
          $ref: "#/components/schemas/AutomaticBackupRetentionDays"
        CopyTagsToBackups:
          $ref: "#/components/schemas/Flag"
      description: The configuration object for the Microsoft Windows file system used in
        <code>CreateFileSystem</code> and
        <code>CreateFileSystemFromBackup</code> operations.
    WeeklyTime:
      type: string
      pattern: ^[1-7]:([01]\d|2[0-3]):?([0-5]\d)$
      description: <p>A recurring weekly time, in the format <code>D:HH:MM</code>. </p> <p>
        <code>D</code> is the day of the week, for which 1 represents Monday and
        7 represents Sunday. For further details, see <a
        href="https://en.wikipedia.org/wiki/ISO_week_date">the ISO-8601 spec as
        described on Wikipedia</a>.</p> <p> <code>HH</code> is the zero-padded
        hour of the day (0-23), and <code>MM</code> is the zero-padded minute of
        the hour. </p> <p>For example, <code>1:05:00</code> specifies
        maintenance at 5 AM Monday.</p>
      minLength: 7
      maxLength: 7
    Megabytes:
      type: integer
      minimum: 1
      maximum: 512000
    CreateFileSystemLustreConfiguration:
      type: object
      properties:
        WeeklyMaintenanceStartTime:
          $ref: "#/components/schemas/WeeklyTime"
        ImportPath:
          $ref: "#/components/schemas/ArchivePath"
        ExportPath:
          $ref: "#/components/schemas/ArchivePath"
        ImportedFileChunkSize:
          $ref: "#/components/schemas/Megabytes"
      description: The Lustre configuration for the file system being created. This value
        is required if <code>FileSystemType</code> is set to
        <code>LUSTRE</code>.
    FileSystemType:
      type: string
      enum:
        - WINDOWS
        - LUSTRE
      description: The type of file system.
    StorageCapacity:
      type: integer
      description: The storage capacity for your Amazon FSx file system, in gibibytes.
      minimum: 1
    SelfManagedActiveDirectoryConfiguration:
      type: object
      required:
        - DomainName
        - UserName
        - Password
        - DnsIps
      properties:
        DomainName:
          $ref: "#/components/schemas/ActiveDirectoryFullyQualifiedName"
        OrganizationalUnitDistinguishedName:
          $ref: "#/components/schemas/OrganizationalUnitDistinguishedName"
        FileSystemAdministratorsGroup:
          $ref: "#/components/schemas/FileSystemAdministratorsGroupName"
        UserName:
          $ref: "#/components/schemas/DirectoryUserName"
        Password:
          $ref: "#/components/schemas/DirectoryPassword"
        DnsIps:
          $ref: "#/components/schemas/DnsIps"
      description: The configuration that Amazon FSx uses to join the Windows File Server
        instance to your self-managed (including on-premises) Microsoft Active
        Directory (AD) directory.
    MegabytesPerSecond:
      type: integer
      description: Sustained throughput of an Amazon FSx file system in MBps.
      minimum: 8
      maximum: 2048
    DailyTime:
      type: string
      pattern: ^([01]\d|2[0-3]):?([0-5]\d)$
      description: "A recurring daily time, in the format <code>HH:MM</code>.
        <code>HH</code> is the zero-padded hour of the day (0-23), and
        <code>MM</code> is the zero-padded minute of the hour. For example,
        <code>05:00</code> specifies 5 AM daily. "
      minLength: 5
      maxLength: 5
    Flag:
      type: boolean
    DNSName:
      type: string
      pattern: ^(fsi?-[0-9a-f]{8,}\..{4,253})$
      description: The Domain Name Service (DNS) name for the file system. You can mount
        your file system using its DNS name.
      minLength: 16
      maxLength: 275
    DataRepositoryConfiguration:
      type: object
      properties:
        ImportPath:
          $ref: "#/components/schemas/ArchivePath"
        ExportPath:
          $ref: "#/components/schemas/ArchivePath"
        ImportedFileChunkSize:
          $ref: "#/components/schemas/Megabytes"
      description: The data repository configuration object for Lustre file systems
        returned in the response of the <code>CreateFileSystem</code> operation.
    DeleteFileSystemWindowsConfiguration:
      type: object
      properties:
        SkipFinalBackup:
          $ref: "#/components/schemas/Flag"
        FinalBackupTags:
          $ref: "#/components/schemas/Tags"
      description: The configuration object for the Microsoft Windows file system used in
        the <code>DeleteFileSystem</code> operation.
    FileSystemLifecycle:
      type: string
      enum:
        - AVAILABLE
        - CREATING
        - FAILED
        - DELETING
        - MISCONFIGURED
        - UPDATING
      description: The lifecycle status of the file system.
    DeleteFileSystemWindowsResponse:
      type: object
      properties:
        FinalBackupId:
          $ref: "#/components/schemas/BackupId"
        FinalBackupTags:
          $ref: "#/components/schemas/Tags"
      description: The response object for the Microsoft Windows file system used in the
        <code>DeleteFileSystem</code> operation.
    Filters:
      type: array
      description: A list of <code>Filter</code> elements.
      items:
        $ref: "#/components/schemas/Filter"
      maxItems: 10
    MaxResults:
      type: integer
      description: The maximum number of resources to return in the response. This value
        must be an integer greater than zero.
      minimum: 1
    NextToken:
      type: string
      pattern: ^(?:[A-Za-z0-9+\/]{4})*(?:[A-Za-z0-9+\/]{2}==|[A-Za-z0-9+\/]{3}=)?$
      description: (Optional) Opaque pagination token returned from a previous operation
        (String). If present, this token indicates from what point you can
        continue processing the request, where the previous
        <code>NextToken</code> value left off.
      minLength: 1
      maxLength: 255
    FileSystemIds:
      type: array
      description: A list of <code>FileSystemId</code>s.
      items:
        $ref: "#/components/schemas/FileSystemId"
      maxItems: 50
    FileSystems:
      type: array
      description: A list of file systems.
      items:
        $ref: "#/components/schemas/FileSystem"
      maxItems: 50
    DirectoryPassword:
      type: string
      minLength: 1
      maxLength: 256
      format: password
    DirectoryUserName:
      type: string
      minLength: 1
      maxLength: 256
    IpAddress:
      type: string
      pattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$
    DnsIps:
      type: array
      items:
        $ref: "#/components/schemas/IpAddress"
      minItems: 1
      maxItems: 2
    FileSystemFailureDetails:
      type: object
      properties:
        Message:
          $ref: "#/components/schemas/ErrorMessage"
      description: A structure providing details of any failures that occur when creating
        the file system has failed.
    VpcId:
      type: string
      pattern: ^(vpc-[0-9a-f]{8,})$
      description: The ID of your virtual private cloud (VPC). For more information, see <a
        href="https://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_Subnets.html">VPC
        and Subnets</a> in the <i>Amazon VPC User Guide</i>.
      minLength: 12
      maxLength: 21
    NetworkInterfaceIds:
      type: array
      description: A list of network interface IDs.
      items:
        $ref: "#/components/schemas/NetworkInterfaceId"
      maxItems: 50
    WindowsFileSystemConfiguration:
      type: object
      properties:
        ActiveDirectoryId:
          $ref: "#/components/schemas/DirectoryId"
        SelfManagedActiveDirectoryConfiguration:
          $ref: "#/components/schemas/SelfManagedActiveDirectoryAttributes"
        ThroughputCapacity:
          $ref: "#/components/schemas/MegabytesPerSecond"
        MaintenanceOperationsInProgress:
          $ref: "#/components/schemas/FileSystemMaintenanceOperations"
        WeeklyMaintenanceStartTime:
          $ref: "#/components/schemas/WeeklyTime"
        DailyAutomaticBackupStartTime:
          $ref: "#/components/schemas/DailyTime"
        AutomaticBackupRetentionDays:
          $ref: "#/components/schemas/AutomaticBackupRetentionDays"
        CopyTagsToBackups:
          $ref: "#/components/schemas/Flag"
      description: The configuration for this Microsoft Windows file system.
    LustreFileSystemConfiguration:
      type: object
      properties:
        WeeklyMaintenanceStartTime:
          $ref: "#/components/schemas/WeeklyTime"
        DataRepositoryConfiguration:
          $ref: "#/components/schemas/DataRepositoryConfiguration"
      description: The configuration for the Amazon FSx for Lustre file system.
    FileSystemAdministratorsGroupName:
      type: string
      minLength: 1
      maxLength: 256
    FileSystemMaintenanceOperation:
      type: string
      enum:
        - PATCHING
        - BACKING_UP
      description: An enumeration specifying the currently ongoing maintenance operation.
    FileSystemMaintenanceOperations:
      type: array
      description: A list of maintenance operations.
      items:
        $ref: "#/components/schemas/FileSystemMaintenanceOperation"
      maxItems: 20
    FilterName:
      type: string
      enum:
        - file-system-id
        - backup-type
      description: The name for a filter.
    FilterValues:
      type: array
      description: A list of filter values.
      items:
        $ref: "#/components/schemas/FilterValue"
      maxItems: 20
    Filter:
      type: object
      properties:
        Name:
          $ref: "#/components/schemas/FilterName"
        Values:
          $ref: "#/components/schemas/FilterValues"
      description: A filter used to restrict the results of describe calls. You can use
        multiple filters to return results that meet all applied filter
        requirements.
    FilterValue:
      type: string
      pattern: ^[0-9a-zA-Z\*\.\\/\?\-\_]*$
      description: The value for a filter.
      minLength: 1
      maxLength: 128
    NetworkInterfaceId:
      type: string
      pattern: ^(eni-[0-9a-f]{8,})$
      description: An elastic network interface ID. An elastic network interface is a
        logical networking component in a virtual private cloud (VPC) that
        represents a virtual network card. For more information, see <a
        href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-eni.html">Elastic
        Network Interfaces</a> in the <i>Amazon EC2 User Guide for Linux
        Instances</i>.
      minLength: 12
      maxLength: 21
    OrganizationalUnitDistinguishedName:
      type: string
      minLength: 1
      maxLength: 2000
    SecurityGroupId:
      type: string
      pattern: ^(sg-[0-9a-f]{8,})$
      description: The ID of your Amazon EC2 security group. This ID is used to control
        network access to the endpoint that Amazon FSx creates on your behalf in
        each subnet. For more information, see <a
        href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-network-security.html">Amazon
        EC2 Security Groups for Linux Instances</a> in the <i>Amazon EC2 User
        Guide</i>.
      minLength: 11
      maxLength: 20
    SelfManagedActiveDirectoryAttributes:
      type: object
      properties:
        DomainName:
          $ref: "#/components/schemas/ActiveDirectoryFullyQualifiedName"
        OrganizationalUnitDistinguishedName:
          $ref: "#/components/schemas/OrganizationalUnitDistinguishedName"
        FileSystemAdministratorsGroup:
          $ref: "#/components/schemas/FileSystemAdministratorsGroupName"
        UserName:
          $ref: "#/components/schemas/DirectoryUserName"
        DnsIps:
          $ref: "#/components/schemas/DnsIps"
      description: The configuration of the self-managed Microsoft Active Directory (AD)
        directory to which the Windows File Server instance is joined.
    SelfManagedActiveDirectoryConfigurationUpdates:
      type: object
      properties:
        UserName:
          $ref: "#/components/schemas/DirectoryUserName"
        Password:
          $ref: "#/components/schemas/DirectoryPassword"
        DnsIps:
          $ref: "#/components/schemas/DnsIps"
      description: The configuration that Amazon FSx uses to join the Windows File Server
        instance to the self-managed Microsoft Active Directory (AD) directory.
    SubnetId:
      type: string
      pattern: ^(subnet-[0-9a-f]{8,})$
      description: 'The ID for a subnet. A <i>subnet</i> is a range of IP addresses in your
        virtual private cloud (VPC). For more information, see <a
        href="https://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_Subnets.html">VPC
        and Subnets</a> in the <i>Amazon VPC User Guide.</i> '
      minLength: 15
      maxLength: 24
    TagKey:
      type: string
      description: A string of 1 to 128 characters that specifies the key for a tag. Tag
        keys must be unique for the resource to which they are attached.
      minLength: 1
      maxLength: 128
    TagValue:
      type: string
      description: A string of 0 to 256 characters that specifies the value for a tag. Tag
        values can be null and don't have to be unique in a tag set.
      minLength: 0
      maxLength: 256
    Tag:
      type: object
      properties:
        Key:
          $ref: "#/components/schemas/TagKey"
        Value:
          $ref: "#/components/schemas/TagValue"
      description: Specifies a key-value pair for a resource tag.
    TagKeys:
      type: array
      description: A list of <code>TagKey</code> values, with a maximum of 50 elements.
      items:
        $ref: "#/components/schemas/TagKey"
      minItems: 1
      maxItems: 50
    UpdateFileSystemLustreConfiguration:
      type: object
      properties:
        WeeklyMaintenanceStartTime:
          $ref: "#/components/schemas/WeeklyTime"
      description: The configuration object for Amazon FSx for Lustre file systems used in
        the <code>UpdateFileSystem</code> operation.
    UpdateFileSystemWindowsConfiguration:
      type: object
      properties:
        WeeklyMaintenanceStartTime:
          $ref: "#/components/schemas/WeeklyTime"
        DailyAutomaticBackupStartTime:
          $ref: "#/components/schemas/DailyTime"
        AutomaticBackupRetentionDays:
          $ref: "#/components/schemas/AutomaticBackupRetentionDays"
        SelfManagedActiveDirectoryConfiguration:
          $ref: "#/components/schemas/SelfManagedActiveDirectoryConfigurationUpdates"
      description: Updates the Microsoft Windows configuration for an existing Amazon FSx
        for Windows File Server file system. Amazon FSx overwrites existing
        properties with non-null values provided in the request. If you don't
        specify a non-null value for a property, that property is not updated.
