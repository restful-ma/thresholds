openapi: 3.0.0
info:
  version: 2017-10-12
  x-release: v4
  title: AWS Elemental MediaPackage
  description: AWS Elemental MediaPackage
  x-logo:
    url: https://twitter.com/awscloud/profile_image?size=original
    backgroundColor: "#FFFFFF"
  termsOfService: https://aws.amazon.com/service-terms/
  contact:
    name: Mike Ralphson
    email: mike.ralphson@gmail.com
    url: https://github.com/mermade/aws2openapi
    x-twitter: PermittedSoc
  license:
    name: Apache 2.0 License
    url: http://www.apache.org/licenses/
  x-providerName: amazonaws.com
  x-serviceName: mediapackage
  x-origin:
    - contentType: application/json
      url: https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/mediapackage-2017-10-12.normal.json
      converter:
        url: https://github.com/mermade/aws2openapi
        version: 1.0.0
      x-apisguru-direct: true
  x-apiClientRegistration:
    url: https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct
  x-apisguru-categories:
    - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: https://docs.aws.amazon.com/mediapackage/
x-hasEquivalentPaths: true
security:
  - hmac: []
paths:
  /channels:
    post:
      operationId: CreateChannel
      description: Creates a new Channel.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateChannelResponse"
        "480":
          description: UnprocessableEntityException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnprocessableEntityException"
        "481":
          description: InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerErrorException"
        "482":
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ForbiddenException"
        "483":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "484":
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceUnavailableException"
        "485":
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TooManyRequestsException"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - id
              properties:
                description:
                  description: A short text description of the Channel.
                  type: string
                id:
                  description: >
                    The ID of the Channel. The ID must be unique within the
                    region and it

                    cannot be changed after a Channel is created.
                  type: string
                tags:
                  description: A collection of tags associated with a resource
                  type: object
                  additionalProperties:
                    $ref: "#/components/schemas/__string"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    get:
      operationId: ListChannels
      description: Returns a collection of Channels.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListChannelsResponse"
        "480":
          description: UnprocessableEntityException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnprocessableEntityException"
        "481":
          description: InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerErrorException"
        "482":
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ForbiddenException"
        "483":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "484":
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceUnavailableException"
        "485":
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TooManyRequestsException"
      parameters:
        - name: maxResults
          in: query
          required: false
          description: Upper bound on number of records to return.
          schema:
            type: integer
            minimum: 1
            maximum: 1000
        - name: nextToken
          in: query
          required: false
          description: A token used to resume pagination from the end of a previous request.
          schema:
            type: string
        - name: MaxResults
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: NextToken
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
  /harvest_jobs:
    post:
      operationId: CreateHarvestJob
      description: Creates a new HarvestJob record.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateHarvestJobResponse"
        "480":
          description: UnprocessableEntityException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnprocessableEntityException"
        "481":
          description: InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerErrorException"
        "482":
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ForbiddenException"
        "483":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "484":
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceUnavailableException"
        "485":
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TooManyRequestsException"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - endTime
                - id
                - originEndpointId
                - s3Destination
                - startTime
              properties:
                endTime:
                  description: |
                    The end of the time-window which will be harvested
                  type: string
                id:
                  description: >
                    The ID of the HarvestJob. The ID must be unique within the
                    region

                    and it cannot be changed after the HarvestJob is submitted
                  type: string
                originEndpointId:
                  description: >
                    The ID of the OriginEndpoint that the HarvestJob will
                    harvest from.

                    This cannot be changed after the HarvestJob is submitted.
                  type: string
                s3Destination:
                  description: >
                    Configuration parameters for where in an S3 bucket to place
                    the harvested content
                  type: object
                  properties:
                    BucketName:
                      $ref: "#/components/schemas/__string"
                    ManifestKey:
                      $ref: "#/components/schemas/__string"
                    RoleArn:
                      $ref: "#/components/schemas/__string"
                startTime:
                  description: |
                    The start of the time-window which will be harvested
                  type: string
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    get:
      operationId: ListHarvestJobs
      description: Returns a collection of HarvestJob records.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListHarvestJobsResponse"
        "480":
          description: UnprocessableEntityException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnprocessableEntityException"
        "481":
          description: InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerErrorException"
        "482":
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ForbiddenException"
        "483":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "484":
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceUnavailableException"
        "485":
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TooManyRequestsException"
      parameters:
        - name: includeChannelId
          in: query
          required: false
          description: When specified, the request will return only HarvestJobs associated
            with the given Channel ID.
          schema:
            type: string
        - name: includeStatus
          in: query
          required: false
          description: When specified, the request will return only HarvestJobs in the
            given status.
          schema:
            type: string
        - name: maxResults
          in: query
          required: false
          description: The upper bound on the number of records to return.
          schema:
            type: integer
            minimum: 1
            maximum: 1000
        - name: nextToken
          in: query
          required: false
          description: A token used to resume pagination from the end of a previous request.
          schema:
            type: string
        - name: MaxResults
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: NextToken
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
  /origin_endpoints:
    post:
      operationId: CreateOriginEndpoint
      description: Creates a new OriginEndpoint record.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateOriginEndpointResponse"
        "480":
          description: UnprocessableEntityException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnprocessableEntityException"
        "481":
          description: InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerErrorException"
        "482":
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ForbiddenException"
        "483":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "484":
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceUnavailableException"
        "485":
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TooManyRequestsException"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - channelId
                - id
              properties:
                channelId:
                  description: >
                    The ID of the Channel that the OriginEndpoint will be
                    associated with.

                    This cannot be changed after the OriginEndpoint is created.
                  type: string
                cmafPackage:
                  description: A Common Media Application Format (CMAF) packaging
                    configuration.
                  type: object
                  properties:
                    Encryption:
                      $ref: "#/components/schemas/CmafEncryption"
                    HlsManifests:
                      $ref: "#/components/schemas/__listOfHlsManifestCreateOrUpdate\
                        Parameters"
                    SegmentDurationSeconds:
                      $ref: "#/components/schemas/__integer"
                    SegmentPrefix:
                      $ref: "#/components/schemas/__string"
                    StreamSelection:
                      $ref: "#/components/schemas/StreamSelection"
                dashPackage:
                  description: A Dynamic Adaptive Streaming over HTTP (DASH) packaging
                    configuration.
                  type: object
                  properties:
                    AdTriggers:
                      $ref: "#/components/schemas/AdTriggers"
                    AdsOnDeliveryRestrictions:
                      $ref: "#/components/schemas/AdsOnDeliveryRestrictions"
                    Encryption:
                      $ref: "#/components/schemas/DashEncryption"
                    ManifestLayout:
                      $ref: "#/components/schemas/ManifestLayout"
                    ManifestWindowSeconds:
                      $ref: "#/components/schemas/__integer"
                    MinBufferTimeSeconds:
                      $ref: "#/components/schemas/__integer"
                    MinUpdatePeriodSeconds:
                      $ref: "#/components/schemas/__integer"
                    PeriodTriggers:
                      $ref: "#/components/schemas/__listOf__PeriodTriggersElement"
                    Profile:
                      $ref: "#/components/schemas/Profile"
                    SegmentDurationSeconds:
                      $ref: "#/components/schemas/__integer"
                    SegmentTemplateFormat:
                      $ref: "#/components/schemas/SegmentTemplateFormat"
                    StreamSelection:
                      $ref: "#/components/schemas/StreamSelection"
                    SuggestedPresentationDelaySeconds:
                      $ref: "#/components/schemas/__integer"
                description:
                  description: A short text description of the OriginEndpoint.
                  type: string
                hlsPackage:
                  description: An HTTP Live Streaming (HLS) packaging configuration.
                  type: object
                  properties:
                    AdMarkers:
                      $ref: "#/components/schemas/AdMarkers"
                    AdTriggers:
                      $ref: "#/components/schemas/AdTriggers"
                    AdsOnDeliveryRestrictions:
                      $ref: "#/components/schemas/AdsOnDeliveryRestrictions"
                    Encryption:
                      $ref: "#/components/schemas/HlsEncryption"
                    IncludeIframeOnlyStream:
                      $ref: "#/components/schemas/__boolean"
                    PlaylistType:
                      $ref: "#/components/schemas/PlaylistType"
                    PlaylistWindowSeconds:
                      $ref: "#/components/schemas/__integer"
                    ProgramDateTimeIntervalSeconds:
                      $ref: "#/components/schemas/__integer"
                    SegmentDurationSeconds:
                      $ref: "#/components/schemas/__integer"
                    StreamSelection:
                      $ref: "#/components/schemas/StreamSelection"
                    UseAudioRenditionGroup:
                      $ref: "#/components/schemas/__boolean"
                id:
                  description: >
                    The ID of the OriginEndpoint.  The ID must be unique within
                    the region

                    and it cannot be changed after the OriginEndpoint is created.
                  type: string
                manifestName:
                  description: A short string that will be used as the filename of the
                    OriginEndpoint URL (defaults to "index").
                  type: string
                mssPackage:
                  description: A Microsoft Smooth Streaming (MSS) packaging configuration.
                  type: object
                  properties:
                    Encryption:
                      $ref: "#/components/schemas/MssEncryption"
                    ManifestWindowSeconds:
                      $ref: "#/components/schemas/__integer"
                    SegmentDurationSeconds:
                      $ref: "#/components/schemas/__integer"
                    StreamSelection:
                      $ref: "#/components/schemas/StreamSelection"
                origination:
                  description: >
                    Control whether origination of video is allowed for this
                    OriginEndpoint. If set to ALLOW, the OriginEndpoint

                    may by requested, pursuant to any other form of access control. If set to DENY, the OriginEndpoint may not be

                    requested. This can be helpful for Live to VOD harvesting, or for temporarily disabling origination
                  enum:
                    - ALLOW
                    - DENY
                  type: string
                startoverWindowSeconds:
                  description: >
                    Maximum duration (seconds) of content to retain for
                    startover playback.

                    If not specified, startover playback will be disabled for the OriginEndpoint.
                  type: integer
                tags:
                  description: A collection of tags associated with a resource
                  type: object
                  additionalProperties:
                    $ref: "#/components/schemas/__string"
                timeDelaySeconds:
                  description: >
                    Amount of delay (seconds) to enforce on the playback of live
                    content.

                    If not specified, there will be no time delay in effect for the OriginEndpoint.
                  type: integer
                whitelist:
                  description: A list of source IP CIDR blocks that will be allowed to
                    access the OriginEndpoint.
                  type: array
                  items:
                    $ref: "#/components/schemas/__string"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    get:
      operationId: ListOriginEndpoints
      description: Returns a collection of OriginEndpoint records.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListOriginEndpointsResponse"
        "480":
          description: UnprocessableEntityException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnprocessableEntityException"
        "481":
          description: InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerErrorException"
        "482":
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ForbiddenException"
        "483":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "484":
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceUnavailableException"
        "485":
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TooManyRequestsException"
      parameters:
        - name: channelId
          in: query
          required: false
          description: When specified, the request will return only OriginEndpoints
            associated with the given Channel ID.
          schema:
            type: string
        - name: maxResults
          in: query
          required: false
          description: The upper bound on the number of records to return.
          schema:
            type: integer
            minimum: 1
            maximum: 1000
        - name: nextToken
          in: query
          required: false
          description: A token used to resume pagination from the end of a previous request.
          schema:
            type: string
        - name: MaxResults
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: NextToken
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
  "/channels/{id}":
    delete:
      operationId: DeleteChannel
      description: Deletes an existing Channel.
      responses:
        "202":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteChannelResponse"
        "480":
          description: UnprocessableEntityException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnprocessableEntityException"
        "481":
          description: InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerErrorException"
        "482":
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ForbiddenException"
        "483":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "484":
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceUnavailableException"
        "485":
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TooManyRequestsException"
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the Channel to delete.
          schema:
            type: string
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    get:
      operationId: DescribeChannel
      description: Gets details about a Channel.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeChannelResponse"
        "480":
          description: UnprocessableEntityException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnprocessableEntityException"
        "481":
          description: InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerErrorException"
        "482":
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ForbiddenException"
        "483":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "484":
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceUnavailableException"
        "485":
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TooManyRequestsException"
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of a Channel.
          schema:
            type: string
    put:
      operationId: UpdateChannel
      description: Updates an existing Channel.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateChannelResponse"
        "480":
          description: UnprocessableEntityException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnprocessableEntityException"
        "481":
          description: InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerErrorException"
        "482":
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ForbiddenException"
        "483":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "484":
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceUnavailableException"
        "485":
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TooManyRequestsException"
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the Channel to update.
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                description:
                  description: A short text description of the Channel.
                  type: string
        required: true
  "/origin_endpoints/{id}":
    delete:
      operationId: DeleteOriginEndpoint
      description: Deletes an existing OriginEndpoint.
      responses:
        "202":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteOriginEndpointResponse"
        "480":
          description: UnprocessableEntityException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnprocessableEntityException"
        "481":
          description: InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerErrorException"
        "482":
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ForbiddenException"
        "483":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "484":
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceUnavailableException"
        "485":
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TooManyRequestsException"
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the OriginEndpoint to delete.
          schema:
            type: string
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    get:
      operationId: DescribeOriginEndpoint
      description: Gets details about an existing OriginEndpoint.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeOriginEndpointResponse"
        "480":
          description: UnprocessableEntityException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnprocessableEntityException"
        "481":
          description: InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerErrorException"
        "482":
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ForbiddenException"
        "483":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "484":
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceUnavailableException"
        "485":
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TooManyRequestsException"
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the OriginEndpoint.
          schema:
            type: string
    put:
      operationId: UpdateOriginEndpoint
      description: Updates an existing OriginEndpoint.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateOriginEndpointResponse"
        "480":
          description: UnprocessableEntityException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnprocessableEntityException"
        "481":
          description: InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerErrorException"
        "482":
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ForbiddenException"
        "483":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "484":
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceUnavailableException"
        "485":
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TooManyRequestsException"
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the OriginEndpoint to update.
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                cmafPackage:
                  description: A Common Media Application Format (CMAF) packaging
                    configuration.
                  type: object
                  properties:
                    Encryption:
                      $ref: "#/components/schemas/CmafEncryption"
                    HlsManifests:
                      $ref: "#/components/schemas/__listOfHlsManifestCreateOrUpdate\
                        Parameters"
                    SegmentDurationSeconds:
                      $ref: "#/components/schemas/__integer"
                    SegmentPrefix:
                      $ref: "#/components/schemas/__string"
                    StreamSelection:
                      $ref: "#/components/schemas/StreamSelection"
                dashPackage:
                  description: A Dynamic Adaptive Streaming over HTTP (DASH) packaging
                    configuration.
                  type: object
                  properties:
                    AdTriggers:
                      $ref: "#/components/schemas/AdTriggers"
                    AdsOnDeliveryRestrictions:
                      $ref: "#/components/schemas/AdsOnDeliveryRestrictions"
                    Encryption:
                      $ref: "#/components/schemas/DashEncryption"
                    ManifestLayout:
                      $ref: "#/components/schemas/ManifestLayout"
                    ManifestWindowSeconds:
                      $ref: "#/components/schemas/__integer"
                    MinBufferTimeSeconds:
                      $ref: "#/components/schemas/__integer"
                    MinUpdatePeriodSeconds:
                      $ref: "#/components/schemas/__integer"
                    PeriodTriggers:
                      $ref: "#/components/schemas/__listOf__PeriodTriggersElement"
                    Profile:
                      $ref: "#/components/schemas/Profile"
                    SegmentDurationSeconds:
                      $ref: "#/components/schemas/__integer"
                    SegmentTemplateFormat:
                      $ref: "#/components/schemas/SegmentTemplateFormat"
                    StreamSelection:
                      $ref: "#/components/schemas/StreamSelection"
                    SuggestedPresentationDelaySeconds:
                      $ref: "#/components/schemas/__integer"
                description:
                  description: A short text description of the OriginEndpoint.
                  type: string
                hlsPackage:
                  description: An HTTP Live Streaming (HLS) packaging configuration.
                  type: object
                  properties:
                    AdMarkers:
                      $ref: "#/components/schemas/AdMarkers"
                    AdTriggers:
                      $ref: "#/components/schemas/AdTriggers"
                    AdsOnDeliveryRestrictions:
                      $ref: "#/components/schemas/AdsOnDeliveryRestrictions"
                    Encryption:
                      $ref: "#/components/schemas/HlsEncryption"
                    IncludeIframeOnlyStream:
                      $ref: "#/components/schemas/__boolean"
                    PlaylistType:
                      $ref: "#/components/schemas/PlaylistType"
                    PlaylistWindowSeconds:
                      $ref: "#/components/schemas/__integer"
                    ProgramDateTimeIntervalSeconds:
                      $ref: "#/components/schemas/__integer"
                    SegmentDurationSeconds:
                      $ref: "#/components/schemas/__integer"
                    StreamSelection:
                      $ref: "#/components/schemas/StreamSelection"
                    UseAudioRenditionGroup:
                      $ref: "#/components/schemas/__boolean"
                manifestName:
                  description: A short string that will be appended to the end of the
                    Endpoint URL.
                  type: string
                mssPackage:
                  description: A Microsoft Smooth Streaming (MSS) packaging configuration.
                  type: object
                  properties:
                    Encryption:
                      $ref: "#/components/schemas/MssEncryption"
                    ManifestWindowSeconds:
                      $ref: "#/components/schemas/__integer"
                    SegmentDurationSeconds:
                      $ref: "#/components/schemas/__integer"
                    StreamSelection:
                      $ref: "#/components/schemas/StreamSelection"
                origination:
                  description: >
                    Control whether origination of video is allowed for this
                    OriginEndpoint. If set to ALLOW, the OriginEndpoint

                    may by requested, pursuant to any other form of access control. If set to DENY, the OriginEndpoint may not be

                    requested. This can be helpful for Live to VOD harvesting, or for temporarily disabling origination
                  enum:
                    - ALLOW
                    - DENY
                  type: string
                startoverWindowSeconds:
                  description: >
                    Maximum duration (in seconds) of content to retain for
                    startover playback.

                    If not specified, startover playback will be disabled for the OriginEndpoint.
                  type: integer
                timeDelaySeconds:
                  description: >
                    Amount of delay (in seconds) to enforce on the playback of
                    live content.

                    If not specified, there will be no time delay in effect for the OriginEndpoint.
                  type: integer
                whitelist:
                  description: A list of source IP CIDR blocks that will be allowed to
                    access the OriginEndpoint.
                  type: array
                  items:
                    $ref: "#/components/schemas/__string"
        required: true
  "/harvest_jobs/{id}":
    get:
      operationId: DescribeHarvestJob
      description: Gets details about an existing HarvestJob.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeHarvestJobResponse"
        "480":
          description: UnprocessableEntityException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnprocessableEntityException"
        "481":
          description: InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerErrorException"
        "482":
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ForbiddenException"
        "483":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "484":
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceUnavailableException"
        "485":
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TooManyRequestsException"
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the HarvestJob.
          schema:
            type: string
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  "/tags/{resource-arn}":
    get:
      operationId: ListTagsForResource
      description: ""
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListTagsForResourceResponse"
      parameters:
        - name: resource-arn
          in: path
          required: true
          description: ""
          schema:
            type: string
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      operationId: TagResource
      description: ""
      responses:
        "204":
          description: Success
      parameters:
        - name: resource-arn
          in: path
          required: true
          description: ""
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - tags
              properties:
                tags:
                  description: ""
                  type: object
                  additionalProperties:
                    $ref: "#/components/schemas/__string"
        required: true
  "/channels/{id}/credentials":
    put:
      deprecated: true
      operationId: RotateChannelCredentials
      description: Changes the Channel's first IngestEndpoint's username and password.
        WARNING - This API is deprecated. Please use
        RotateIngestEndpointCredentials instead
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RotateChannelCredentialsResponse"
        "480":
          description: UnprocessableEntityException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnprocessableEntityException"
        "481":
          description: InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerErrorException"
        "482":
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ForbiddenException"
        "483":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "484":
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceUnavailableException"
        "485":
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TooManyRequestsException"
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the channel to update.
          schema:
            type: string
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  "/channels/{id}/ingest_endpoints/{ingest_endpoint_id}/credentials":
    put:
      operationId: RotateIngestEndpointCredentials
      description: Rotate the IngestEndpoint's username and password, as specified by the
        IngestEndpoint's id.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RotateIngestEndpointCredentialsResponse"
        "480":
          description: UnprocessableEntityException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnprocessableEntityException"
        "481":
          description: InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerErrorException"
        "482":
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ForbiddenException"
        "483":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "484":
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceUnavailableException"
        "485":
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TooManyRequestsException"
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the channel the IngestEndpoint is on.
          schema:
            type: string
        - name: ingest_endpoint_id
          in: path
          required: true
          description: The id of the IngestEndpoint whose credentials should be rotated
          schema:
            type: string
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  "/tags/{resource-arn}#tagKeys":
    delete:
      operationId: UntagResource
      description: ""
      responses:
        "204":
          description: Success
      parameters:
        - name: resource-arn
          in: path
          required: true
          description: ""
          schema:
            type: string
        - name: tagKeys
          in: query
          required: true
          description: The key(s) of tag to be deleted
          schema:
            type: array
            items:
              type: string
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
servers:
  - url: http://mediapackage.{region}.amazonaws.com
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-south-1
          - sa-east-1
        default: us-east-1
    description: The MediaPackage multi-region endpoint
  - url: https://mediapackage.{region}.amazonaws.com
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-south-1
          - sa-east-1
        default: us-east-1
    description: The MediaPackage multi-region endpoint
  - url: http://mediapackage.{region}.amazonaws.com.cn
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The MediaPackage endpoint for China (Beijing) and China (Ningxia)
  - url: https://mediapackage.{region}.amazonaws.com.cn
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The MediaPackage endpoint for China (Beijing) and China (Ningxia)
components:
  parameters:
    X-Amz-Content-Sha256:
      name: X-Amz-Content-Sha256
      in: header
      required: false
      schema:
        type: string
    X-Amz-Date:
      name: X-Amz-Date
      in: header
      required: false
      schema:
        type: string
    X-Amz-Algorithm:
      name: X-Amz-Algorithm
      in: header
      required: false
      schema:
        type: string
    X-Amz-Credential:
      name: X-Amz-Credential
      in: header
      required: false
      schema:
        type: string
    X-Amz-Security-Token:
      name: X-Amz-Security-Token
      in: header
      required: false
      schema:
        type: string
    X-Amz-Signature:
      name: X-Amz-Signature
      in: header
      required: false
      schema:
        type: string
    X-Amz-SignedHeaders:
      name: X-Amz-SignedHeaders
      in: header
      required: false
      schema:
        type: string
  securitySchemes:
    hmac:
      type: apiKey
      name: Authorization
      in: header
      description: Amazon Signature authorization v4
      x-amazon-apigateway-authtype: awsSigv4
  schemas:
    CreateChannelResponse:
      type: object
      properties:
        Arn:
          $ref: "#/components/schemas/__string"
        Description:
          $ref: "#/components/schemas/__string"
        HlsIngest:
          $ref: "#/components/schemas/HlsIngest"
        Id:
          $ref: "#/components/schemas/__string"
        Tags:
          $ref: "#/components/schemas/Tags"
    __string:
      type: string
    UnprocessableEntityException: {}
    InternalServerErrorException: {}
    ForbiddenException: {}
    NotFoundException: {}
    ServiceUnavailableException: {}
    TooManyRequestsException: {}
    CreateHarvestJobResponse:
      type: object
      properties:
        Arn:
          $ref: "#/components/schemas/__string"
        ChannelId:
          $ref: "#/components/schemas/__string"
        CreatedAt:
          $ref: "#/components/schemas/__string"
        EndTime:
          $ref: "#/components/schemas/__string"
        Id:
          $ref: "#/components/schemas/__string"
        OriginEndpointId:
          $ref: "#/components/schemas/__string"
        S3Destination:
          $ref: "#/components/schemas/S3Destination"
        StartTime:
          $ref: "#/components/schemas/__string"
        Status:
          $ref: "#/components/schemas/Status"
    CreateOriginEndpointResponse:
      type: object
      properties:
        Arn:
          $ref: "#/components/schemas/__string"
        ChannelId:
          $ref: "#/components/schemas/__string"
        CmafPackage:
          $ref: "#/components/schemas/CmafPackage"
        DashPackage:
          $ref: "#/components/schemas/DashPackage"
        Description:
          $ref: "#/components/schemas/__string"
        HlsPackage:
          $ref: "#/components/schemas/HlsPackage"
        Id:
          $ref: "#/components/schemas/__string"
        ManifestName:
          $ref: "#/components/schemas/__string"
        MssPackage:
          $ref: "#/components/schemas/MssPackage"
        Origination:
          $ref: "#/components/schemas/Origination"
        StartoverWindowSeconds:
          $ref: "#/components/schemas/__integer"
        Tags:
          $ref: "#/components/schemas/Tags"
        TimeDelaySeconds:
          $ref: "#/components/schemas/__integer"
        Url:
          $ref: "#/components/schemas/__string"
        Whitelist:
          $ref: "#/components/schemas/__listOf__string"
    CmafEncryption:
      required:
        - SpekeKeyProvider
      type: object
      properties:
        KeyRotationIntervalSeconds:
          $ref: "#/components/schemas/__integer"
        SpekeKeyProvider:
          $ref: "#/components/schemas/SpekeKeyProvider"
      description: A Common Media Application Format (CMAF) encryption configuration.
    __listOfHlsManifestCreateOrUpdateParameters:
      type: array
      items:
        $ref: "#/components/schemas/HlsManifestCreateOrUpdateParameters"
    __integer:
      type: integer
    StreamSelection:
      type: object
      properties:
        MaxVideoBitsPerSecond:
          $ref: "#/components/schemas/__integer"
        MinVideoBitsPerSecond:
          $ref: "#/components/schemas/__integer"
        StreamOrder:
          $ref: "#/components/schemas/StreamOrder"
      description: A StreamSelection configuration.
    AdTriggers:
      type: array
      description: >
        A list of SCTE-35 message types that are treated as ad markers in the
        output.  If empty, no

        ad markers are output.  Specify multiple items to create ad markers for all of the included

        message types.
      items:
        $ref: "#/components/schemas/__AdTriggersElement"
    AdsOnDeliveryRestrictions:
      enum:
        - NONE
        - RESTRICTED
        - UNRESTRICTED
        - BOTH
      type: string
      description: >
        This setting allows the delivery restriction flags on SCTE-35
        segmentation descriptors to

        determine whether a message signals an ad.  Choosing "NONE" means no SCTE-35 messages become

        ads.  Choosing "RESTRICTED" means SCTE-35 messages of the types specified in AdTriggers that

        contain delivery restrictions will be treated as ads.  Choosing "UNRESTRICTED" means SCTE-35

        messages of the types specified in AdTriggers that do not contain delivery restrictions will

        be treated as ads.  Choosing "BOTH" means all SCTE-35 messages of the types specified in

        AdTriggers will be treated as ads.  Note that Splice Insert messages do not have these flags

        and are always treated as ads if specified in AdTriggers.
    DashEncryption:
      required:
        - SpekeKeyProvider
      type: object
      properties:
        KeyRotationIntervalSeconds:
          $ref: "#/components/schemas/__integer"
        SpekeKeyProvider:
          $ref: "#/components/schemas/SpekeKeyProvider"
      description: A Dynamic Adaptive Streaming over HTTP (DASH) encryption configuration.
    ManifestLayout:
      enum:
        - FULL
        - COMPACT
      type: string
    __listOf__PeriodTriggersElement:
      type: array
      items:
        $ref: "#/components/schemas/__PeriodTriggersElement"
    Profile:
      enum:
        - NONE
        - HBBTV_1_5
      type: string
    SegmentTemplateFormat:
      enum:
        - NUMBER_WITH_TIMELINE
        - TIME_WITH_TIMELINE
        - NUMBER_WITH_DURATION
      type: string
    AdMarkers:
      enum:
        - NONE
        - SCTE35_ENHANCED
        - PASSTHROUGH
      type: string
    HlsEncryption:
      required:
        - SpekeKeyProvider
      type: object
      properties:
        ConstantInitializationVector:
          $ref: "#/components/schemas/__string"
        EncryptionMethod:
          $ref: "#/components/schemas/EncryptionMethod"
        KeyRotationIntervalSeconds:
          $ref: "#/components/schemas/__integer"
        RepeatExtXKey:
          $ref: "#/components/schemas/__boolean"
        SpekeKeyProvider:
          $ref: "#/components/schemas/SpekeKeyProvider"
      description: An HTTP Live Streaming (HLS) encryption configuration.
    __boolean:
      type: boolean
    PlaylistType:
      enum:
        - NONE
        - EVENT
        - VOD
      type: string
    MssEncryption:
      required:
        - SpekeKeyProvider
      type: object
      properties:
        SpekeKeyProvider:
          $ref: "#/components/schemas/SpekeKeyProvider"
      description: A Microsoft Smooth Streaming (MSS) encryption configuration.
    DeleteChannelResponse:
      type: object
      properties: {}
    DeleteOriginEndpointResponse:
      type: object
      properties: {}
    DescribeChannelResponse:
      type: object
      properties:
        Arn:
          $ref: "#/components/schemas/__string"
        Description:
          $ref: "#/components/schemas/__string"
        HlsIngest:
          $ref: "#/components/schemas/HlsIngest"
        Id:
          $ref: "#/components/schemas/__string"
        Tags:
          $ref: "#/components/schemas/Tags"
    DescribeHarvestJobResponse:
      type: object
      properties:
        Arn:
          $ref: "#/components/schemas/__string"
        ChannelId:
          $ref: "#/components/schemas/__string"
        CreatedAt:
          $ref: "#/components/schemas/__string"
        EndTime:
          $ref: "#/components/schemas/__string"
        Id:
          $ref: "#/components/schemas/__string"
        OriginEndpointId:
          $ref: "#/components/schemas/__string"
        S3Destination:
          $ref: "#/components/schemas/S3Destination"
        StartTime:
          $ref: "#/components/schemas/__string"
        Status:
          $ref: "#/components/schemas/Status"
    DescribeOriginEndpointResponse:
      type: object
      properties:
        Arn:
          $ref: "#/components/schemas/__string"
        ChannelId:
          $ref: "#/components/schemas/__string"
        CmafPackage:
          $ref: "#/components/schemas/CmafPackage"
        DashPackage:
          $ref: "#/components/schemas/DashPackage"
        Description:
          $ref: "#/components/schemas/__string"
        HlsPackage:
          $ref: "#/components/schemas/HlsPackage"
        Id:
          $ref: "#/components/schemas/__string"
        ManifestName:
          $ref: "#/components/schemas/__string"
        MssPackage:
          $ref: "#/components/schemas/MssPackage"
        Origination:
          $ref: "#/components/schemas/Origination"
        StartoverWindowSeconds:
          $ref: "#/components/schemas/__integer"
        Tags:
          $ref: "#/components/schemas/Tags"
        TimeDelaySeconds:
          $ref: "#/components/schemas/__integer"
        Url:
          $ref: "#/components/schemas/__string"
        Whitelist:
          $ref: "#/components/schemas/__listOf__string"
    ListChannelsResponse:
      type: object
      properties:
        Channels:
          $ref: "#/components/schemas/__listOfChannel"
        NextToken:
          $ref: "#/components/schemas/__string"
    ListHarvestJobsResponse:
      type: object
      properties:
        HarvestJobs:
          $ref: "#/components/schemas/__listOfHarvestJob"
        NextToken:
          $ref: "#/components/schemas/__string"
    ListOriginEndpointsResponse:
      type: object
      properties:
        NextToken:
          $ref: "#/components/schemas/__string"
        OriginEndpoints:
          $ref: "#/components/schemas/__listOfOriginEndpoint"
    ListTagsForResourceResponse:
      type: object
      properties:
        Tags:
          $ref: "#/components/schemas/__mapOf__string"
    RotateChannelCredentialsResponse:
      type: object
      properties:
        Arn:
          $ref: "#/components/schemas/__string"
        Description:
          $ref: "#/components/schemas/__string"
        HlsIngest:
          $ref: "#/components/schemas/HlsIngest"
        Id:
          $ref: "#/components/schemas/__string"
        Tags:
          $ref: "#/components/schemas/Tags"
    RotateIngestEndpointCredentialsResponse:
      type: object
      properties:
        Arn:
          $ref: "#/components/schemas/__string"
        Description:
          $ref: "#/components/schemas/__string"
        HlsIngest:
          $ref: "#/components/schemas/HlsIngest"
        Id:
          $ref: "#/components/schemas/__string"
        Tags:
          $ref: "#/components/schemas/Tags"
    UpdateChannelResponse:
      type: object
      properties:
        Arn:
          $ref: "#/components/schemas/__string"
        Description:
          $ref: "#/components/schemas/__string"
        HlsIngest:
          $ref: "#/components/schemas/HlsIngest"
        Id:
          $ref: "#/components/schemas/__string"
        Tags:
          $ref: "#/components/schemas/Tags"
    UpdateOriginEndpointResponse:
      type: object
      properties:
        Arn:
          $ref: "#/components/schemas/__string"
        ChannelId:
          $ref: "#/components/schemas/__string"
        CmafPackage:
          $ref: "#/components/schemas/CmafPackage"
        DashPackage:
          $ref: "#/components/schemas/DashPackage"
        Description:
          $ref: "#/components/schemas/__string"
        HlsPackage:
          $ref: "#/components/schemas/HlsPackage"
        Id:
          $ref: "#/components/schemas/__string"
        ManifestName:
          $ref: "#/components/schemas/__string"
        MssPackage:
          $ref: "#/components/schemas/MssPackage"
        Origination:
          $ref: "#/components/schemas/Origination"
        StartoverWindowSeconds:
          $ref: "#/components/schemas/__integer"
        Tags:
          $ref: "#/components/schemas/Tags"
        TimeDelaySeconds:
          $ref: "#/components/schemas/__integer"
        Url:
          $ref: "#/components/schemas/__string"
        Whitelist:
          $ref: "#/components/schemas/__listOf__string"
    __AdTriggersElement:
      enum:
        - SPLICE_INSERT
        - BREAK
        - PROVIDER_ADVERTISEMENT
        - DISTRIBUTOR_ADVERTISEMENT
        - PROVIDER_PLACEMENT_OPPORTUNITY
        - DISTRIBUTOR_PLACEMENT_OPPORTUNITY
        - PROVIDER_OVERLAY_PLACEMENT_OPPORTUNITY
        - DISTRIBUTOR_OVERLAY_PLACEMENT_OPPORTUNITY
      type: string
    HlsIngest:
      type: object
      properties:
        IngestEndpoints:
          $ref: "#/components/schemas/__listOfIngestEndpoint"
      description: An HTTP Live Streaming (HLS) ingest resource configuration.
    Tags:
      type: object
      description: A collection of tags associated with a resource
      additionalProperties:
        $ref: "#/components/schemas/__string"
    Channel:
      type: object
      properties:
        Arn:
          $ref: "#/components/schemas/__string"
        Description:
          $ref: "#/components/schemas/__string"
        HlsIngest:
          $ref: "#/components/schemas/HlsIngest"
        Id:
          $ref: "#/components/schemas/__string"
        Tags:
          $ref: "#/components/schemas/Tags"
      description: A Channel resource configuration.
    SpekeKeyProvider:
      required:
        - ResourceId
        - SystemIds
        - Url
        - RoleArn
      type: object
      properties:
        CertificateArn:
          $ref: "#/components/schemas/__string"
        ResourceId:
          $ref: "#/components/schemas/__string"
        RoleArn:
          $ref: "#/components/schemas/__string"
        SystemIds:
          $ref: "#/components/schemas/__listOf__string"
        Url:
          $ref: "#/components/schemas/__string"
      description: A configuration for accessing an external Secure Packager and Encoder
        Key Exchange (SPEKE) service that will provide encryption keys.
    __listOfHlsManifest:
      type: array
      items:
        $ref: "#/components/schemas/HlsManifest"
    CmafPackage:
      type: object
      properties:
        Encryption:
          $ref: "#/components/schemas/CmafEncryption"
        HlsManifests:
          $ref: "#/components/schemas/__listOfHlsManifest"
        SegmentDurationSeconds:
          $ref: "#/components/schemas/__integer"
        SegmentPrefix:
          $ref: "#/components/schemas/__string"
        StreamSelection:
          $ref: "#/components/schemas/StreamSelection"
      description: A Common Media Application Format (CMAF) packaging configuration.
    CmafPackageCreateOrUpdateParameters:
      type: object
      properties:
        Encryption:
          $ref: "#/components/schemas/CmafEncryption"
        HlsManifests:
          $ref: "#/components/schemas/__listOfHlsManifestCreateOrUpdateParameters"
        SegmentDurationSeconds:
          $ref: "#/components/schemas/__integer"
        SegmentPrefix:
          $ref: "#/components/schemas/__string"
        StreamSelection:
          $ref: "#/components/schemas/StreamSelection"
      description: A Common Media Application Format (CMAF) packaging configuration.
    CreateChannelRequest:
      required:
        - Id
      type: object
      properties:
        Description:
          $ref: "#/components/schemas/__string"
        Id:
          $ref: "#/components/schemas/__string"
        Tags:
          $ref: "#/components/schemas/Tags"
      description: A new Channel configuration.
    S3Destination:
      required:
        - ManifestKey
        - BucketName
        - RoleArn
      type: object
      properties:
        BucketName:
          $ref: "#/components/schemas/__string"
        ManifestKey:
          $ref: "#/components/schemas/__string"
        RoleArn:
          $ref: "#/components/schemas/__string"
      description: >
        Configuration parameters for where in an S3 bucket to place the
        harvested content
    CreateHarvestJobRequest:
      required:
        - S3Destination
        - EndTime
        - OriginEndpointId
        - StartTime
        - Id
      type: object
      properties:
        EndTime:
          $ref: "#/components/schemas/__string"
        Id:
          $ref: "#/components/schemas/__string"
        OriginEndpointId:
          $ref: "#/components/schemas/__string"
        S3Destination:
          $ref: "#/components/schemas/S3Destination"
        StartTime:
          $ref: "#/components/schemas/__string"
      description: Configuration parameters used to create a new HarvestJob.
    Status:
      enum:
        - IN_PROGRESS
        - SUCCEEDED
        - FAILED
      type: string
    DashPackage:
      type: object
      properties:
        AdTriggers:
          $ref: "#/components/schemas/AdTriggers"
        AdsOnDeliveryRestrictions:
          $ref: "#/components/schemas/AdsOnDeliveryRestrictions"
        Encryption:
          $ref: "#/components/schemas/DashEncryption"
        ManifestLayout:
          $ref: "#/components/schemas/ManifestLayout"
        ManifestWindowSeconds:
          $ref: "#/components/schemas/__integer"
        MinBufferTimeSeconds:
          $ref: "#/components/schemas/__integer"
        MinUpdatePeriodSeconds:
          $ref: "#/components/schemas/__integer"
        PeriodTriggers:
          $ref: "#/components/schemas/__listOf__PeriodTriggersElement"
        Profile:
          $ref: "#/components/schemas/Profile"
        SegmentDurationSeconds:
          $ref: "#/components/schemas/__integer"
        SegmentTemplateFormat:
          $ref: "#/components/schemas/SegmentTemplateFormat"
        StreamSelection:
          $ref: "#/components/schemas/StreamSelection"
        SuggestedPresentationDelaySeconds:
          $ref: "#/components/schemas/__integer"
      description: A Dynamic Adaptive Streaming over HTTP (DASH) packaging configuration.
    HlsPackage:
      type: object
      properties:
        AdMarkers:
          $ref: "#/components/schemas/AdMarkers"
        AdTriggers:
          $ref: "#/components/schemas/AdTriggers"
        AdsOnDeliveryRestrictions:
          $ref: "#/components/schemas/AdsOnDeliveryRestrictions"
        Encryption:
          $ref: "#/components/schemas/HlsEncryption"
        IncludeIframeOnlyStream:
          $ref: "#/components/schemas/__boolean"
        PlaylistType:
          $ref: "#/components/schemas/PlaylistType"
        PlaylistWindowSeconds:
          $ref: "#/components/schemas/__integer"
        ProgramDateTimeIntervalSeconds:
          $ref: "#/components/schemas/__integer"
        SegmentDurationSeconds:
          $ref: "#/components/schemas/__integer"
        StreamSelection:
          $ref: "#/components/schemas/StreamSelection"
        UseAudioRenditionGroup:
          $ref: "#/components/schemas/__boolean"
      description: An HTTP Live Streaming (HLS) packaging configuration.
    MssPackage:
      type: object
      properties:
        Encryption:
          $ref: "#/components/schemas/MssEncryption"
        ManifestWindowSeconds:
          $ref: "#/components/schemas/__integer"
        SegmentDurationSeconds:
          $ref: "#/components/schemas/__integer"
        StreamSelection:
          $ref: "#/components/schemas/StreamSelection"
      description: A Microsoft Smooth Streaming (MSS) packaging configuration.
    Origination:
      enum:
        - ALLOW
        - DENY
      type: string
    __listOf__string:
      type: array
      items:
        $ref: "#/components/schemas/__string"
    CreateOriginEndpointRequest:
      required:
        - Id
        - ChannelId
      type: object
      properties:
        ChannelId:
          $ref: "#/components/schemas/__string"
        CmafPackage:
          $ref: "#/components/schemas/CmafPackageCreateOrUpdateParameters"
        DashPackage:
          $ref: "#/components/schemas/DashPackage"
        Description:
          $ref: "#/components/schemas/__string"
        HlsPackage:
          $ref: "#/components/schemas/HlsPackage"
        Id:
          $ref: "#/components/schemas/__string"
        ManifestName:
          $ref: "#/components/schemas/__string"
        MssPackage:
          $ref: "#/components/schemas/MssPackage"
        Origination:
          $ref: "#/components/schemas/Origination"
        StartoverWindowSeconds:
          $ref: "#/components/schemas/__integer"
        Tags:
          $ref: "#/components/schemas/Tags"
        TimeDelaySeconds:
          $ref: "#/components/schemas/__integer"
        Whitelist:
          $ref: "#/components/schemas/__listOf__string"
      description: Configuration parameters used to create a new OriginEndpoint.
    DeleteChannelRequest:
      type: object
      properties: {}
    DeleteOriginEndpointRequest:
      type: object
      properties: {}
    DescribeChannelRequest:
      type: object
      properties: {}
    DescribeHarvestJobRequest:
      type: object
      properties: {}
    DescribeOriginEndpointRequest:
      type: object
      properties: {}
    EncryptionMethod:
      enum:
        - AES_128
        - SAMPLE_AES
      type: string
    HarvestJob:
      type: object
      properties:
        Arn:
          $ref: "#/components/schemas/__string"
        ChannelId:
          $ref: "#/components/schemas/__string"
        CreatedAt:
          $ref: "#/components/schemas/__string"
        EndTime:
          $ref: "#/components/schemas/__string"
        Id:
          $ref: "#/components/schemas/__string"
        OriginEndpointId:
          $ref: "#/components/schemas/__string"
        S3Destination:
          $ref: "#/components/schemas/S3Destination"
        StartTime:
          $ref: "#/components/schemas/__string"
        Status:
          $ref: "#/components/schemas/Status"
      description: A HarvestJob resource configuration
    __listOfIngestEndpoint:
      type: array
      items:
        $ref: "#/components/schemas/IngestEndpoint"
    HlsManifest:
      required:
        - Id
      type: object
      properties:
        AdMarkers:
          $ref: "#/components/schemas/AdMarkers"
        Id:
          $ref: "#/components/schemas/__string"
        IncludeIframeOnlyStream:
          $ref: "#/components/schemas/__boolean"
        ManifestName:
          $ref: "#/components/schemas/__string"
        PlaylistType:
          $ref: "#/components/schemas/PlaylistType"
        PlaylistWindowSeconds:
          $ref: "#/components/schemas/__integer"
        ProgramDateTimeIntervalSeconds:
          $ref: "#/components/schemas/__integer"
        Url:
          $ref: "#/components/schemas/__string"
      description: A HTTP Live Streaming (HLS) manifest configuration.
    HlsManifestCreateOrUpdateParameters:
      required:
        - Id
      type: object
      properties:
        AdMarkers:
          $ref: "#/components/schemas/AdMarkers"
        AdTriggers:
          $ref: "#/components/schemas/AdTriggers"
        AdsOnDeliveryRestrictions:
          $ref: "#/components/schemas/AdsOnDeliveryRestrictions"
        Id:
          $ref: "#/components/schemas/__string"
        IncludeIframeOnlyStream:
          $ref: "#/components/schemas/__boolean"
        ManifestName:
          $ref: "#/components/schemas/__string"
        PlaylistType:
          $ref: "#/components/schemas/PlaylistType"
        PlaylistWindowSeconds:
          $ref: "#/components/schemas/__integer"
        ProgramDateTimeIntervalSeconds:
          $ref: "#/components/schemas/__integer"
      description: A HTTP Live Streaming (HLS) manifest configuration.
    IngestEndpoint:
      type: object
      properties:
        Id:
          $ref: "#/components/schemas/__string"
        Password:
          $ref: "#/components/schemas/__string"
        Url:
          $ref: "#/components/schemas/__string"
        Username:
          $ref: "#/components/schemas/__string"
      description: An endpoint for ingesting source content for a Channel.
    MaxResults:
      type: integer
      minimum: 1
      maximum: 1000
    ListChannelsRequest:
      type: object
      properties: {}
    __listOfChannel:
      type: array
      items:
        $ref: "#/components/schemas/Channel"
    ListHarvestJobsRequest:
      type: object
      properties: {}
    __listOfHarvestJob:
      type: array
      items:
        $ref: "#/components/schemas/HarvestJob"
    ListOriginEndpointsRequest:
      type: object
      properties: {}
    __listOfOriginEndpoint:
      type: array
      items:
        $ref: "#/components/schemas/OriginEndpoint"
    ListTagsForResourceRequest:
      type: object
      properties: {}
    __mapOf__string:
      type: object
      additionalProperties:
        $ref: "#/components/schemas/__string"
    OriginEndpoint:
      type: object
      properties:
        Arn:
          $ref: "#/components/schemas/__string"
        ChannelId:
          $ref: "#/components/schemas/__string"
        CmafPackage:
          $ref: "#/components/schemas/CmafPackage"
        DashPackage:
          $ref: "#/components/schemas/DashPackage"
        Description:
          $ref: "#/components/schemas/__string"
        HlsPackage:
          $ref: "#/components/schemas/HlsPackage"
        Id:
          $ref: "#/components/schemas/__string"
        ManifestName:
          $ref: "#/components/schemas/__string"
        MssPackage:
          $ref: "#/components/schemas/MssPackage"
        Origination:
          $ref: "#/components/schemas/Origination"
        StartoverWindowSeconds:
          $ref: "#/components/schemas/__integer"
        Tags:
          $ref: "#/components/schemas/Tags"
        TimeDelaySeconds:
          $ref: "#/components/schemas/__integer"
        Url:
          $ref: "#/components/schemas/__string"
        Whitelist:
          $ref: "#/components/schemas/__listOf__string"
      description: An OriginEndpoint resource configuration.
    RotateChannelCredentialsRequest:
      type: object
      properties: {}
    RotateIngestEndpointCredentialsRequest:
      type: object
      properties: {}
    StreamOrder:
      enum:
        - ORIGINAL
        - VIDEO_BITRATE_ASCENDING
        - VIDEO_BITRATE_DESCENDING
      type: string
    TagResourceRequest:
      required:
        - Tags
      type: object
      properties:
        Tags:
          $ref: "#/components/schemas/__mapOf__string"
    UntagResourceRequest:
      type: object
      properties: {}
    UpdateChannelRequest:
      type: object
      properties:
        Description:
          $ref: "#/components/schemas/__string"
      description: Configuration parameters used to update the Channel.
    UpdateOriginEndpointRequest:
      type: object
      properties:
        CmafPackage:
          $ref: "#/components/schemas/CmafPackageCreateOrUpdateParameters"
        DashPackage:
          $ref: "#/components/schemas/DashPackage"
        Description:
          $ref: "#/components/schemas/__string"
        HlsPackage:
          $ref: "#/components/schemas/HlsPackage"
        ManifestName:
          $ref: "#/components/schemas/__string"
        MssPackage:
          $ref: "#/components/schemas/MssPackage"
        Origination:
          $ref: "#/components/schemas/Origination"
        StartoverWindowSeconds:
          $ref: "#/components/schemas/__integer"
        TimeDelaySeconds:
          $ref: "#/components/schemas/__integer"
        Whitelist:
          $ref: "#/components/schemas/__listOf__string"
      description: Configuration parameters used to update an existing OriginEndpoint.
    __PeriodTriggersElement:
      enum:
        - ADS
      type: string
