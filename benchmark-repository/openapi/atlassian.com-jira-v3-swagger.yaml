openapi: 3.0.0
info:
  contact:
    x-twitter: Atlassian
  description: The Jira Cloud Platform REST API
  title: Jira
  version: v3
  x-apisguru-categories:
    - developer_tools
  x-logo:
    url: https://twitter.com/Atlassian/profile_image?size=original
  x-origin:
    - format: swagger
      url: https://raw.githubusercontent.com/bobby-brennan/scrape-to-swagger/master/output/jira.swagger.json
      version: "2.0"
  x-providerName: atlassian.com
  x-serviceName: jira
  x-unofficialSpec: true
paths:
  /application-properties:
    get:
      description: Returns all application properties or a single application property.
      parameters:
        - description: The key of the application property.
          in: query
          name: key
          schema:
            type: string
        - description: When a key isn't provided, this filters the list of results by the
            application property key using a regular expression. For example,
            using jira.lf.* will return all application properties with keys
            that start with jira.lf..
          in: query
          name: keyFilter
          schema:
            type: string
        - description: The permission level of all items being returned in the list.
          in: query
          name: permissionLevel
          schema:
            type: string
      responses:
        "200":
          description: Returned if the request is successful.
          content:
            "*/*":
              schema:
                description: ""
                items:
                  properties:
                    defaultValue:
                      type: string
                    desc:
                      minLength: 1
                      type: string
                    id:
                      minLength: 1
                      type: string
                    key:
                      minLength: 1
                      type: string
                    name:
                      minLength: 1
                      type: string
                    type:
                      minLength: 1
                      type: string
                    value:
                      minLength: 1
                      type: string
                  required:
                    - id
                    - key
                    - value
                    - name
                    - desc
                    - type
                    - defaultValue
                  type: object
                minItems: 1
                type: array
                uniqueItems: true
  /application-properties/advanced-settings:
    get:
      description: Returns the application properties that are accessible on the Advanced
        Settings page. To navigate to the Advanced Settings page in Jira, choose
        the Jira icon > Jira settings > System, General Configuration and then
        click Advanced Settings (in the upper right).
      responses:
        "200":
          description: Returned if the request is successful.
          content:
            "*/*":
              schema:
                description: ""
                items:
                  properties:
                    defaultValue:
                      type: string
                    desc:
                      minLength: 1
                      type: string
                    id:
                      minLength: 1
                      type: string
                    key:
                      minLength: 1
                      type: string
                    name:
                      minLength: 1
                      type: string
                    type:
                      minLength: 1
                      type: string
                    value:
                      minLength: 1
                      type: string
                  required:
                    - id
                    - key
                    - value
                    - name
                    - desc
                    - type
                    - defaultValue
                  type: object
                minItems: 1
                type: array
                uniqueItems: true
  "/application-properties/{id}":
    put:
      description: Changes the value of an application property. For example, you can
        change the value of the jira.clone.prefix from its default value of
        CLONE - to Clone - if you prefer sentence case capitalization. Editable
        properties are described below along with their default values.
      parameters:
        - description: The key of the application property to update.
          in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                id:
                  description: The ID of the application property, for example
                    jira.newsletter.tip.delay.days.
                  type: string
                value:
                  description: The new value, for example -1.
                  type: string
              type: object
      responses:
        "200":
          description: Returned if the request is successful.
  /applicationrole:
    get:
      description: Returns all application roles. In Jira, application roles are managed
        using the Application access configuration page.
      responses:
        "200":
          description: Returned if the request is successful.
          content:
            "*/*":
              schema:
                description: ""
                items:
                  properties:
                    defaultGroups:
                      items:
                        properties: {}
                      type: array
                    defined:
                      type: boolean
                    groups:
                      items:
                        properties: {}
                      type: array
                    hasUnlimitedSeats:
                      type: boolean
                    key:
                      minLength: 1
                      type: string
                    name:
                      minLength: 1
                      type: string
                    numberOfSeats:
                      type: number
                    platform:
                      type: boolean
                    remainingSeats:
                      type: number
                    selectedByDefault:
                      type: boolean
                    userCount:
                      type: number
                    userCountDescription:
                      minLength: 1
                      type: string
                  required:
                    - key
                    - groups
                    - name
                    - defaultGroups
                    - selectedByDefault
                    - defined
                    - numberOfSeats
                    - remainingSeats
                    - userCount
                    - userCountDescription
                    - hasUnlimitedSeats
                    - platform
                  type: object
                minItems: 1
                type: array
                uniqueItems: true
  "/applicationrole/{key}":
    get:
      description: Returns an application role.
      parameters:
        - description: The key of the application role. Use the Get all application roles
            method to get the key for each application role.
          in: path
          name: key
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Returns the ApplicationRole if it exists.
          content:
            "*/*":
              schema:
                description: ""
                properties:
                  defaultGroups:
                    items:
                      properties: {}
                    type: array
                  defined:
                    type: boolean
                  groups:
                    items:
                      properties: {}
                    type: array
                  hasUnlimitedSeats:
                    type: boolean
                  key:
                    minLength: 1
                    type: string
                  name:
                    minLength: 1
                    type: string
                  numberOfSeats:
                    type: number
                  platform:
                    type: boolean
                  remainingSeats:
                    type: number
                  selectedByDefault:
                    type: boolean
                  userCount:
                    type: number
                  userCountDescription:
                    minLength: 1
                    type: string
                required:
                  - key
                  - groups
                  - name
                  - defaultGroups
                  - selectedByDefault
                  - defined
                  - numberOfSeats
                  - remainingSeats
                  - userCount
                  - userCountDescription
                  - hasUnlimitedSeats
                  - platform
                type: object
  /attachment/meta:
    get:
      description: Returns the global attachment settings, that is, whether attachments are
        enabled and the maximum attachment size allowed.
      responses:
        "200":
          description: Returned if the request is successful.
          content:
            "*/*":
              schema:
                description: ""
                properties:
                  enabled:
                    type: boolean
                  uploadLimit:
                    type: number
                required:
                  - enabled
                  - uploadLimit
                type: object
  "/attachment/{id}":
    delete:
      description: Deletes an attachment from an issue.
      parameters:
        - description: The ID of the attachment.
          in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Returned if the request is successful.
    get:
      description: Returns the metadata for an attachment. Note that the attachment itself
        is not returned.
      parameters:
        - description: The ID of the attachment.
          in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Returned if the request is successful.
          content:
            "*/*":
              schema:
                description: ""
                properties:
                  author:
                    properties:
                      accountId:
                        minLength: 1
                        type: string
                      active:
                        type: boolean
                      avatarUrls:
                        properties:
                          16x16:
                            minLength: 1
                            type: string
                          24x24:
                            minLength: 1
                            type: string
                          32x32:
                            minLength: 1
                            type: string
                          48x48:
                            minLength: 1
                            type: string
                        required:
                          - 48x48
                          - 24x24
                          - 16x16
                          - 32x32
                        type: object
                      displayName:
                        minLength: 1
                        type: string
                      key:
                        minLength: 1
                        type: string
                      name:
                        minLength: 1
                        type: string
                      self:
                        minLength: 1
                        type: string
                    required:
                      - self
                      - key
                      - accountId
                      - name
                      - avatarUrls
                      - displayName
                      - active
                    type: object
                  content:
                    minLength: 1
                    type: string
                  created:
                    minLength: 1
                    type: string
                  filename:
                    minLength: 1
                    type: string
                  id:
                    type: number
                  mimeType:
                    minLength: 1
                    type: string
                  self:
                    minLength: 1
                    type: string
                  size:
                    type: number
                  thumbnail:
                    minLength: 1
                    type: string
                required:
                  - id
                  - self
                  - filename
                  - author
                  - created
                  - size
                  - mimeType
                  - content
                  - thumbnail
                type: object
  "/attachment/{id}/expand/human":
    get:
      description: Returns the metadata for the contents of an attachment, if it is an
        archive, and metadata for the attachment itself. For example, if the
        attachment is a ZIP archive, then information about the files in the
        archive is returned and metadata for the ZIP archive. Currently, only
        the ZIP archive format is supported.
      parameters:
        - description: The ID of the attachment.
          in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Returned if the request is successful. If an empty list is returned
            in the response, the attachment is empty, corrupt, or not an
            archive.
          content:
            "*/*":
              schema:
                description: ""
                properties:
                  entries:
                    items:
                      properties:
                        index:
                          type: number
                        label:
                          minLength: 1
                          type: string
                        mediaType:
                          minLength: 1
                          type: string
                        path:
                          minLength: 1
                          type: string
                        size:
                          minLength: 1
                          type: string
                      required:
                        - path
                        - index
                        - size
                        - mediaType
                        - label
                    minItems: 1
                    type: array
                    uniqueItems: true
                  id:
                    type: number
                  mediaType:
                    minLength: 1
                    type: string
                  name:
                    minLength: 1
                    type: string
                  totalEntryCount:
                    type: number
                required:
                  - id
                  - name
                  - entries
                  - totalEntryCount
                  - mediaType
                type: object
  "/attachment/{id}/expand/raw":
    get:
      description: Returns the metadata for the contents of an attachment, if it is an
        archive. For example, if the attachment is a ZIP archive, then
        information about the files in the archive is returned. Currently, only
        the ZIP archive format is supported.
      parameters:
        - description: The ID of the attachment.
          in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Returned if the request is successful. If an empty list is returned
            in the response, the attachment is empty, corrupt, or not an
            archive.
          content:
            "*/*":
              schema:
                description: ""
                properties:
                  entries:
                    items:
                      properties:
                        entryIndex:
                          type: number
                        mediaType:
                          minLength: 1
                          type: string
                        name:
                          minLength: 1
                          type: string
                        size:
                          type: number
                      required:
                        - entryIndex
                        - name
                        - size
                        - mediaType
                    minItems: 1
                    type: array
                    uniqueItems: true
                  totalEntryCount:
                    type: number
                required:
                  - entries
                  - totalEntryCount
                type: object
  /auditing/record:
    get:
      description: "Returns a list of audit records. The list can be filtered to include
        items:"
      parameters:
        - description: The query string.
          in: query
          name: filter
          schema:
            type: string
        - description: The date and time on or after which returned audit records must have
            been created. If to is provided from must be before to or the result
            set will be empty.
          in: query
          name: from
          schema:
            type: string
        - description: The maximum number of results to return. The maximum is 1000.
          in: query
          name: limit
          schema:
            type: integer
        - description: The number of records to skip before returning the first result.
          in: query
          name: offset
          schema:
            type: integer
        - description: The date and time on or before which returned audit results must
            have been created. If from is provided to must be after from or the
            result set will be empty.
          in: query
          name: to
          schema:
            type: string
      responses:
        "200":
          description: Returned if the request is successful.
          content:
            "*/*":
              schema:
                description: ""
                properties:
                  limit:
                    type: number
                  offset:
                    type: number
                  records:
                    items:
                      properties:
                        associatedItems:
                          items:
                            properties:
                              id:
                                minLength: 1
                                type: string
                              name:
                                minLength: 1
                                type: string
                              parentId:
                                minLength: 1
                                type: string
                              parentName:
                                minLength: 1
                                type: string
                              typeName:
                                minLength: 1
                                type: string
                            required:
                              - id
                              - name
                              - typeName
                              - parentId
                              - parentName
                          minItems: 1
                          type: array
                          uniqueItems: true
                        authorKey:
                          minLength: 1
                          type: string
                        category:
                          minLength: 1
                          type: string
                        changedValues:
                          items:
                            properties:
                              changedFrom:
                                minLength: 1
                                type: string
                              changedTo:
                                minLength: 1
                                type: string
                              fieldName:
                                minLength: 1
                                type: string
                            required:
                              - fieldName
                              - changedFrom
                              - changedTo
                          minItems: 1
                          type: array
                          uniqueItems: true
                        created:
                          minLength: 1
                          type: string
                        description:
                          minLength: 1
                          type: string
                        eventSource:
                          minLength: 1
                          type: string
                        id:
                          type: number
                        objectItem:
                          properties:
                            id:
                              minLength: 1
                              type: string
                            name:
                              minLength: 1
                              type: string
                            parentId:
                              minLength: 1
                              type: string
                            parentName:
                              minLength: 1
                              type: string
                            typeName:
                              minLength: 1
                              type: string
                          required:
                            - id
                            - name
                            - typeName
                            - parentId
                            - parentName
                          type: object
                        remoteAddress:
                          minLength: 1
                          type: string
                        summary:
                          minLength: 1
                          type: string
                      required:
                        - id
                        - summary
                        - remoteAddress
                        - authorKey
                        - created
                        - category
                        - eventSource
                        - description
                    minItems: 1
                    type: array
                    uniqueItems: true
                  total:
                    type: number
                required:
                  - offset
                  - limit
                  - total
                  - records
                type: object
  "/avatar/{type}/system":
    get:
      description: Returns a list of system avatar details by owner type, where the owner
        types are issue type, project, or user.
      parameters:
        - description: The avatar type.
          in: path
          name: type
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Returned if the request is successful.
          content:
            "*/*":
              schema:
                description: ""
                properties:
                  system:
                    items:
                      properties:
                        id:
                          minLength: 1
                          type: string
                        isDeletable:
                          type: boolean
                        isSelected:
                          type: boolean
                        isSystemAvatar:
                          type: boolean
                        urls:
                          properties:
                            16x16:
                              minLength: 1
                              type: string
                            24x24:
                              minLength: 1
                              type: string
                            32x32:
                              minLength: 1
                              type: string
                            48x48:
                              minLength: 1
                              type: string
                          required:
                            - 16x16
                            - 24x24
                            - 32x32
                            - 48x48
                          type: object
                      required:
                        - id
                        - isSystemAvatar
                        - isSelected
                        - isDeletable
                    minItems: 1
                    type: array
                    uniqueItems: true
                required:
                  - system
                type: object
  /comment/list:
    post:
      description: Returns the comments for a list of comment IDs.
      parameters:
        - description: "Use expand to include additional information about comments in the
            response. This parameter accepts multiple values separated by a
            comma:"
          in: query
          name: expand
          schema:
            type: string
            enum:
              - renderedBody
              - properties
      requestBody:
        content:
          application/json:
            schema:
              properties:
                ids:
                  description: The list of comment IDs. Maximum of 1000 IDs can be
                    specified. Required
                  items:
                    type: integer
                  type: array
              type: object
      responses:
        "200":
          description: Returned if the request is successful.
          content:
            "*/*":
              schema:
                description: ""
                properties:
                  isLast:
                    type: boolean
                  maxResults:
                    type: number
                  startAt:
                    type: number
                  total:
                    type: number
                  values:
                    items:
                      properties:
                        author:
                          properties:
                            active:
                              type: boolean
                            displayName:
                              minLength: 1
                              type: string
                            name:
                              minLength: 1
                              type: string
                            self:
                              minLength: 1
                              type: string
                          required:
                            - self
                            - name
                            - displayName
                            - active
                          type: object
                        body:
                          properties:
                            content:
                              items:
                                properties:
                                  content:
                                    items:
                                      properties:
                                        text:
                                          minLength: 1
                                          type: string
                                        type:
                                          minLength: 1
                                          type: string
                                      required:
                                        - type
                                        - text
                                    minItems: 1
                                    type: array
                                    uniqueItems: true
                                  type:
                                    minLength: 1
                                    type: string
                                required:
                                  - type
                              minItems: 1
                              type: array
                              uniqueItems: true
                            type:
                              minLength: 1
                              type: string
                            version:
                              type: number
                          required:
                            - type
                            - version
                            - content
                          type: object
                        created:
                          minLength: 1
                          type: string
                        id:
                          minLength: 1
                          type: string
                        self:
                          minLength: 1
                          type: string
                        updateAuthor:
                          properties:
                            active:
                              type: boolean
                            displayName:
                              minLength: 1
                              type: string
                            name:
                              minLength: 1
                              type: string
                            self:
                              minLength: 1
                              type: string
                          required:
                            - self
                            - name
                            - displayName
                            - active
                          type: object
                        updated:
                          minLength: 1
                          type: string
                        visibility:
                          properties:
                            type:
                              minLength: 1
                              type: string
                            value:
                              minLength: 1
                              type: string
                          required:
                            - type
                            - value
                          type: object
                      required:
                        - self
                        - id
                        - created
                        - updated
                    minItems: 1
                    type: array
                    uniqueItems: true
                required:
                  - maxResults
                  - startAt
                  - total
                  - isLast
                  - values
                type: object
  "/comment/{commentId}/properties":
    get:
      description: Returns the keys of all the properties of a comment.
      parameters:
        - description: The ID of the comment.
          in: path
          name: commentId
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Returned if the request is successful.
          content:
            "*/*":
              schema:
                description: ""
                properties:
                  keys:
                    items:
                      properties:
                        key:
                          minLength: 1
                          type: string
                        self:
                          minLength: 1
                          type: string
                      required:
                        - self
                        - key
                    minItems: 1
                    type: array
                    uniqueItems: true
                required:
                  - keys
                type: object
  "/comment/{commentId}/properties/{propertyKey}":
    delete:
      description: Deletes a comment property.
      parameters:
        - description: The ID of the comment.
          in: path
          name: commentId
          required: true
          schema:
            type: string
        - description: The key of the property.
          in: path
          name: propertyKey
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Returned if the request is successful.
    get:
      description: Returns the value of a comment property.
      parameters:
        - description: The ID of the comment.
          in: path
          name: commentId
          required: true
          schema:
            type: string
        - description: The key of the property.
          in: path
          name: propertyKey
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Returned if the request is successful.
          content:
            "*/*":
              schema:
                description: ""
                properties:
                  key:
                    minLength: 1
                    type: string
                  value:
                    properties:
                      stride.conversation.id:
                        minLength: 1
                        type: string
                      support.time:
                        minLength: 1
                        type: string
                    required:
                      - stride.conversation.id
                      - support.time
                    type: object
                required:
                  - key
                  - value
                type: object
    put:
      description: Creates or updates the value of a property for a comment. Use this
        resource to store custom data against a comment.
      parameters:
        - description: The ID of the comment.
          in: path
          name: commentId
          required: true
          schema:
            type: string
        - description: The key of the property. The maximum length is 255 characters.
          in: path
          name: propertyKey
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Returned if the comment property is updated.
  /component:
    post:
      description: "Creates a component. Use components to provide containers for issues
        within a project. Permissions required: Any of the following:"
      requestBody:
        $ref: "#/components/requestBodies/Body6"
      responses:
        "201":
          description: Returned if the request is successful.
          content:
            "*/*":
              schema:
                description: ""
                properties:
                  assignee:
                    properties:
                      accountId:
                        minLength: 1
                        type: string
                      active:
                        type: boolean
                      avatarUrls:
                        properties:
                          16x16:
                            minLength: 1
                            type: string
                          24x24:
                            minLength: 1
                            type: string
                          32x32:
                            minLength: 1
                            type: string
                          48x48:
                            minLength: 1
                            type: string
                        required:
                          - 48x48
                          - 24x24
                          - 16x16
                          - 32x32
                        type: object
                      displayName:
                        minLength: 1
                        type: string
                      key:
                        minLength: 1
                        type: string
                      name:
                        minLength: 1
                        type: string
                      self:
                        minLength: 1
                        type: string
                    required:
                      - self
                      - key
                      - accountId
                      - name
                      - avatarUrls
                      - displayName
                      - active
                    type: object
                  assigneeType:
                    minLength: 1
                    type: string
                  description:
                    minLength: 1
                    type: string
                  id:
                    minLength: 1
                    type: string
                  isAssigneeTypeValid:
                    type: boolean
                  lead:
                    properties:
                      accountId:
                        minLength: 1
                        type: string
                      active:
                        type: boolean
                      avatarUrls:
                        properties:
                          16x16:
                            minLength: 1
                            type: string
                          24x24:
                            minLength: 1
                            type: string
                          32x32:
                            minLength: 1
                            type: string
                          48x48:
                            minLength: 1
                            type: string
                        required:
                          - 48x48
                          - 24x24
                          - 16x16
                          - 32x32
                        type: object
                      displayName:
                        minLength: 1
                        type: string
                      key:
                        minLength: 1
                        type: string
                      name:
                        minLength: 1
                        type: string
                      self:
                        minLength: 1
                        type: string
                    required:
                      - self
                      - key
                      - accountId
                      - name
                      - avatarUrls
                      - displayName
                      - active
                    type: object
                  name:
                    minLength: 1
                    type: string
                  project:
                    minLength: 1
                    type: string
                  projectId:
                    type: number
                  realAssignee:
                    properties:
                      accountId:
                        minLength: 1
                        type: string
                      active:
                        type: boolean
                      avatarUrls:
                        properties:
                          16x16:
                            minLength: 1
                            type: string
                          24x24:
                            minLength: 1
                            type: string
                          32x32:
                            minLength: 1
                            type: string
                          48x48:
                            minLength: 1
                            type: string
                        required:
                          - 48x48
                          - 24x24
                          - 16x16
                          - 32x32
                        type: object
                      displayName:
                        minLength: 1
                        type: string
                      key:
                        minLength: 1
                        type: string
                      name:
                        minLength: 1
                        type: string
                      self:
                        minLength: 1
                        type: string
                    required:
                      - self
                      - key
                      - accountId
                      - name
                      - avatarUrls
                      - displayName
                      - active
                    type: object
                  realAssigneeType:
                    minLength: 1
                    type: string
                  self:
                    minLength: 1
                    type: string
                required:
                  - self
                  - id
                  - name
                  - description
                  - lead
                  - assigneeType
                  - assignee
                  - realAssigneeType
                  - realAssignee
                  - isAssigneeTypeValid
                  - project
                  - projectId
                type: object
  "/component/{id}":
    delete:
      description: "Deletes a component. Permissions required: Any of the following:"
      parameters:
        - description: The ID of the component.
          in: path
          name: id
          required: true
          schema:
            type: string
        - description: The ID of the component to replace the deleted component. If this
            value is null no replacement is made.
          in: query
          name: moveIssuesTo
          schema:
            type: string
      responses:
        "204":
          description: Returned if the request is successfully.
    get:
      description: "Returns a component. Permissions required: Browse projects project
        permission."
      parameters:
        - description: The ID of the component.
          in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Returned if the request is successful.
          content:
            "*/*":
              schema:
                description: ""
                properties:
                  assignee:
                    properties:
                      accountId:
                        minLength: 1
                        type: string
                      active:
                        type: boolean
                      avatarUrls:
                        properties:
                          16x16:
                            minLength: 1
                            type: string
                          24x24:
                            minLength: 1
                            type: string
                          32x32:
                            minLength: 1
                            type: string
                          48x48:
                            minLength: 1
                            type: string
                        required:
                          - 48x48
                          - 24x24
                          - 16x16
                          - 32x32
                        type: object
                      displayName:
                        minLength: 1
                        type: string
                      key:
                        minLength: 1
                        type: string
                      name:
                        minLength: 1
                        type: string
                      self:
                        minLength: 1
                        type: string
                    required:
                      - self
                      - key
                      - accountId
                      - name
                      - avatarUrls
                      - displayName
                      - active
                    type: object
                  assigneeType:
                    minLength: 1
                    type: string
                  description:
                    minLength: 1
                    type: string
                  id:
                    minLength: 1
                    type: string
                  isAssigneeTypeValid:
                    type: boolean
                  lead:
                    properties:
                      accountId:
                        minLength: 1
                        type: string
                      active:
                        type: boolean
                      avatarUrls:
                        properties:
                          16x16:
                            minLength: 1
                            type: string
                          24x24:
                            minLength: 1
                            type: string
                          32x32:
                            minLength: 1
                            type: string
                          48x48:
                            minLength: 1
                            type: string
                        required:
                          - 48x48
                          - 24x24
                          - 16x16
                          - 32x32
                        type: object
                      displayName:
                        minLength: 1
                        type: string
                      key:
                        minLength: 1
                        type: string
                      name:
                        minLength: 1
                        type: string
                      self:
                        minLength: 1
                        type: string
                    required:
                      - self
                      - key
                      - accountId
                      - name
                      - avatarUrls
                      - displayName
                      - active
                    type: object
                  name:
                    minLength: 1
                    type: string
                  project:
                    minLength: 1
                    type: string
                  projectId:
                    type: number
                  realAssignee:
                    properties:
                      accountId:
                        minLength: 1
                        type: string
                      active:
                        type: boolean
                      avatarUrls:
                        properties:
                          16x16:
                            minLength: 1
                            type: string
                          24x24:
                            minLength: 1
                            type: string
                          32x32:
                            minLength: 1
                            type: string
                          48x48:
                            minLength: 1
                            type: string
                        required:
                          - 48x48
                          - 24x24
                          - 16x16
                          - 32x32
                        type: object
                      displayName:
                        minLength: 1
                        type: string
                      key:
                        minLength: 1
                        type: string
                      name:
                        minLength: 1
                        type: string
                      self:
                        minLength: 1
                        type: string
                    required:
                      - self
                      - key
                      - accountId
                      - name
                      - avatarUrls
                      - displayName
                      - active
                    type: object
                  realAssigneeType:
                    minLength: 1
                    type: string
                  self:
                    minLength: 1
                    type: string
                required:
                  - self
                  - id
                  - name
                  - description
                  - lead
                  - assigneeType
                  - assignee
                  - realAssigneeType
                  - realAssignee
                  - isAssigneeTypeValid
                  - project
                  - projectId
                type: object
    put:
      description: 'Modifies a component. Any fields included in the request are
        overwritten. If leadUserName is an empty string ("") the component lead
        is removed. Permissions required: Any of the following:'
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/Body6"
      responses:
        "200":
          description: Returned if the request is successful.
  "/component/{id}/relatedIssueCounts":
    get:
      description: "Returns the counts of issues assigned to the component. Permissions
        required: Permission to access Jira."
      parameters:
        - description: The ID of the component.
          in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Returned if the request is successful.
          content:
            "*/*":
              schema:
                description: ""
                properties:
                  issueCount:
                    type: number
                  self:
                    minLength: 1
                    type: string
                required:
                  - self
                  - issueCount
                type: object
  /configuration:
    get:
      description: Returns the global settings in Jira. These settings determine whether
        optional features (for example, sub-tasks, time tracking, and others)
        are enabled. If time tracking is enabled, this method also returns the
        time tracking configuration.
      responses:
        "200":
          description: Returned if the request is successful.
          content:
            "*/*":
              schema:
                description: ""
                properties:
                  attachmentsEnabled:
                    type: boolean
                  issueLinkingEnabled:
                    type: boolean
                  subTasksEnabled:
                    type: boolean
                  timeTrackingConfiguration:
                    properties:
                      defaultUnit:
                        minLength: 1
                        type: string
                      timeFormat:
                        minLength: 1
                        type: string
                      workingDaysPerWeek:
                        type: number
                      workingHoursPerDay:
                        type: number
                    required:
                      - workingHoursPerDay
                      - workingDaysPerWeek
                      - timeFormat
                      - defaultUnit
                    type: object
                  timeTrackingEnabled:
                    type: boolean
                  unassignedIssuesAllowed:
                    type: boolean
                  votingEnabled:
                    type: boolean
                  watchingEnabled:
                    type: boolean
                required:
                  - votingEnabled
                  - watchingEnabled
                  - unassignedIssuesAllowed
                  - subTasksEnabled
                  - issueLinkingEnabled
                  - timeTrackingEnabled
                  - attachmentsEnabled
                  - timeTrackingConfiguration
                type: object
  /configuration/timetracking:
    delete:
      description: Disables time tracking.
      responses:
        "204":
          description: Returned if the request is successful.
    get:
      description: Returns the time tracking provider that is currently selected. Note that
        if time tracking is disabled, then a successful but empty response is
        returned.
      responses:
        "200":
          description: Returned if the request is successful and time tracking is enabled.
          content:
            "*/*":
              schema:
                description: ""
                properties:
                  key:
                    minLength: 1
                    type: string
                  name:
                    minLength: 1
                    type: string
                  url:
                    minLength: 1
                    type: string
                required:
                  - key
                  - name
                  - url
                type: object
    put:
      description: Selects a time tracking provider.
      requestBody:
        content:
          application/json:
            schema:
              properties:
                key:
                  description: The key for the time tracking provider (for example, JIRA).
                  type: string
                name:
                  description: The name of the time tracking provider (for example, JIRA
                    provided time tracking).
                  type: string
              type: object
      responses:
        "204":
          description: Returned if the request is successful.
  /configuration/timetracking/list:
    get:
      description: "Returns all time tracking providers. By default, Jira only has one time
        tracking provider: JIRA provided time tracking. However, you can install
        other time tracking providers via apps from the Atlassian Marketplace.
        For more information on time tracking providers, see the documentation
        for the Time Tracking Provider module."
      responses:
        "200":
          description: Returned if the request is successful.
          content:
            "*/*":
              schema:
                description: ""
                items:
                  properties:
                    key:
                      minLength: 1
                      type: string
                    name:
                      minLength: 1
                      type: string
                    url:
                      minLength: 1
                      type: string
                  required:
                    - key
                    - name
                    - url
                  type: object
                minItems: 1
                type: array
                uniqueItems: true
  /configuration/timetracking/options:
    get:
      description: Returns the time tracking settings. This includes settings such as the
        time format, default time unit, and others. For more information, see
        Configuring time tracking.
      responses:
        "200":
          description: Returned if the request is successful.
          content:
            "*/*":
              schema:
                description: ""
                properties:
                  defaultUnit:
                    minLength: 1
                    type: string
                  timeFormat:
                    minLength: 1
                    type: string
                  workingDaysPerWeek:
                    type: number
                  workingHoursPerDay:
                    type: number
                required:
                  - workingHoursPerDay
                  - workingDaysPerWeek
                  - timeFormat
                  - defaultUnit
                type: object
    put:
      description: Sets the time tracking settings.
      requestBody:
        content:
          application/json:
            schema:
              properties:
                defaultUnit:
                  description: The unit of time that will be applied to logged time by
                    default.
                  enum:
                    - minute
                    - hour
                    - day
                    - week
                  type: string
                timeFormat:
                  description: The format that will appear on an issue's Time Spent field.
                  enum:
                    - pretty
                    - days
                    - hours
                  type: string
                workingDaysPerWeek:
                  description: The number of days in a working week (for example, 5.5).
                    This value is specified in days.
                  type: number
                workingHoursPerDay:
                  description: The number of hours in a working day (for example, 7.6).
                    This value is specified in hours.
                  type: number
              type: object
      responses:
        "200":
          description: Returned if the request is successful.
          content:
            "*/*":
              schema:
                description: ""
                properties:
                  defaultUnit:
                    minLength: 1
                    type: string
                  timeFormat:
                    minLength: 1
                    type: string
                  workingDaysPerWeek:
                    type: number
                  workingHoursPerDay:
                    type: number
                required:
                  - workingHoursPerDay
                  - workingDaysPerWeek
                  - timeFormat
                  - defaultUnit
                type: object
  "/customFieldOption/{id}":
    get:
      description: Returns a custom field option. For example, an option in a cascading
        select list.
      parameters:
        - description: The ID of the custom field option. To find this ID, configure the
            custom field and edit its options in Jira. Click the option and its
            ID will show in the URL as the selectedParentOptionId parameter.
          in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Returned if the request is successful.
          content:
            "*/*":
              schema:
                description: ""
                properties:
                  self:
                    minLength: 1
                    type: string
                  value:
                    minLength: 1
                    type: string
                required:
                  - self
                  - value
                type: object
  /dashboard:
    get:
      description: Returns a list of dashboards owned by or shared with the user. The list
        may be filtered to include only favorite or owned dashboards.
      parameters:
        - description: "The filter applied to the list of dashboards. Valid values are:"
          in: query
          name: filter
          schema:
            type: string
            enum:
              - favourite
              - my
        - description: The maximum number of items to return per page. Maximum is 1000.
          in: query
          name: maxResults
          schema:
            type: integer
        - description: The index of the first item to return in a page of results (page
            offset).
          in: query
          name: startAt
          schema:
            type: integer
      responses:
        "200":
          description: Returned if the request is successful.
          content:
            "*/*":
              schema:
                description: ""
                properties:
                  dashboards:
                    items:
                      properties:
                        id:
                          minLength: 1
                          type: string
                        isFavourite:
                          type: boolean
                        name:
                          minLength: 1
                          type: string
                        owner:
                          properties:
                            avatarUrls:
                              properties:
                                16x16:
                                  minLength: 1
                                  type: string
                                24x24:
                                  minLength: 1
                                  type: string
                                32x32:
                                  minLength: 1
                                  type: string
                                48x48:
                                  minLength: 1
                                  type: string
                              required:
                                - 32x32
                                - 16x16
                                - 24x24
                                - 48x48
                              type: object
                            displayName:
                              minLength: 1
                              type: string
                            key:
                              minLength: 1
                              type: string
                            name:
                              minLength: 1
                              type: string
                            self:
                              minLength: 1
                              type: string
                          required:
                            - key
                            - self
                            - name
                            - displayName
                            - avatarUrls
                          type: object
                        popularity:
                          type: number
                        self:
                          minLength: 1
                          type: string
                        sharePermissions:
                          items:
                            properties:
                              group:
                                properties:
                                  name:
                                    minLength: 1
                                    type: string
                                  self:
                                    minLength: 1
                                    type: string
                                required:
                                  - name
                                  - self
                                type: object
                              id:
                                type: number
                              type:
                                minLength: 1
                                type: string
                            required:
                              - id
                              - type
                          minItems: 1
                          type: array
                          uniqueItems: true
                        view:
                          minLength: 1
                          type: string
                      required:
                        - id
                        - isFavourite
                        - name
                        - popularity
                        - self
                        - view
                    minItems: 1
                    type: array
                    uniqueItems: true
                  maxResults:
                    type: number
                  next:
                    minLength: 1
                    type: string
                  prev:
                    minLength: 1
                    type: string
                  startAt:
                    type: number
                  total:
                    type: number
                required:
                  - startAt
                  - maxResults
                  - total
                  - prev
                  - next
                  - dashboards
                type: object
  "/dashboard/{dashboardId}/items/{itemId}/properties":
    get:
      description: Returns the keys of all properties for a dashboard item.
      parameters:
        - description: The ID of the dashboard.
          in: path
          name: dashboardId
          required: true
          schema:
            type: string
        - description: The ID of the dashboard item.
          in: path
          name: itemId
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Returned if the request is successful.
          content:
            "*/*":
              schema:
                description: ""
                properties:
                  keys:
                    items:
                      properties:
                        key:
                          minLength: 1
                          type: string
                        self:
                          minLength: 1
                          type: string
                      required:
                        - self
                        - key
                    minItems: 1
                    type: array
                    uniqueItems: true
                required:
                  - keys
                type: object
  "/dashboard/{dashboardId}/items/{itemId}/properties/{propertyKey}":
    delete:
      description: Deletes a dashboard item property.
      parameters:
        - description: The ID of the dashboard.
          in: path
          name: dashboardId
          required: true
          schema:
            type: string
        - description: The ID of the dashboard item.
          in: path
          name: itemId
          required: true
          schema:
            type: string
        - description: The key of the dashboard item property.
          in: path
          name: propertyKey
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Returned if the dashboard item property was deleted.
    get:
      description: Returns the key and value of a dashboard item property.
      parameters:
        - description: The ID of the dashboard.
          in: path
          name: dashboardId
          required: true
          schema:
            type: string
        - description: The ID of the dashboard item.
          in: path
          name: itemId
          required: true
          schema:
            type: string
        - description: The key of the dashboard item property.
          in: path
          name: propertyKey
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Returned if the request is successful.
          content:
            "*/*":
              schema:
                description: ""
                properties:
                  key:
                    minLength: 1
                    type: string
                  value:
                    properties:
                      stride.conversation.id:
                        minLength: 1
                        type: string
                      support.time:
                        minLength: 1
                        type: string
                    required:
                      - stride.conversation.id
                      - support.time
                    type: object
                required:
                  - key
                  - value
                type: object
    put:
      description: Sets the value of a dashboard item property. Use this resource in apps
        to store custom data against a dashboard item.
      parameters:
        - description: The ID of the dashboard.
          in: path
          name: dashboardId
          required: true
          schema:
            type: string
        - description: The ID of the dashboard item.
          in: path
          name: itemId
          required: true
          schema:
            type: string
        - description: The key of the dashboard item property. The maximum length of the
            key is 255 bytes.
          in: path
          name: propertyKey
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Returned if the dashboard item property is updated.
  "/dashboard/{id}":
    get:
      description: Returns a dashboard.
      parameters:
        - description: The ID of the dashboard.
          in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Returned if the request is successful.
          content:
            "*/*":
              schema:
                description: ""
                properties:
                  id:
                    minLength: 1
                    type: string
                  isFavourite:
                    type: boolean
                  name:
                    minLength: 1
                    type: string
                  popularity:
                    type: number
                  self:
                    minLength: 1
                    type: string
                  sharePermissions:
                    items:
                      properties:
                        type:
                          minLength: 1
                          type: string
                      required:
                        - type
                    minItems: 1
                    type: array
                    uniqueItems: true
                  view:
                    minLength: 1
                    type: string
                required:
                  - id
                  - isFavourite
                  - name
                  - popularity
                  - self
                  - sharePermissions
                  - view
                type: object
  /expression/eval:
    post:
      description: Evaluates a Jira expression and returns its value.
      parameters:
        - description: "Use expand to include additional information in the response. This
            parameter accepts multiple values separated by a comma:"
          in: query
          name: expand
          schema:
            type: string
            enum:
              - meta.complexity
      requestBody:
        content:
          application/json:
            schema:
              properties:
                context:
                  type: object
                expression:
                  description: The Jira expression to evaluate.
                  type: string
              type: object
      responses:
        "200":
          description: Returned if the expression evaluated successfully. The result can be
            any JSON, not only a primitive value but also a list or object.
          content:
            "*/*":
              schema:
                description: ""
                properties:
                  meta:
                    properties:
                      complexity:
                        properties:
                          beans:
                            properties:
                              limit:
                                type: number
                              value:
                                type: number
                            required:
                              - value
                              - limit
                            type: object
                          expensiveOperations:
                            properties:
                              limit:
                                type: number
                              value:
                                type: number
                            required:
                              - value
                              - limit
                            type: object
                          primitiveValues:
                            properties:
                              limit:
                                type: number
                              value:
                                type: number
                            required:
                              - value
                              - limit
                            type: object
                          steps:
                            properties:
                              limit:
                                type: number
                              value:
                                type: number
                            required:
                              - value
                              - limit
                            type: object
                        required:
                          - steps
                          - expensiveOperations
                          - beans
                          - primitiveValues
                        type: object
                    required:
                      - complexity
                    type: object
                  value:
                    minLength: 1
                    type: string
                required:
                  - value
                  - meta
                type: object
  /field:
    get:
      description: Returns all issue fields in Jira, both system and custom fields.
      responses:
        "200":
          description: Returned if the requested fields are returned.
          content:
            "*/*":
              schema:
                description: ""
                items:
                  properties:
                    clauseNames:
                      items:
                        properties: {}
                      type: array
                    custom:
                      type: boolean
                    id:
                      minLength: 1
                      type: string
                    key:
                      minLength: 1
                      type: string
                    name:
                      minLength: 1
                      type: string
                    navigable:
                      type: boolean
                    orderable:
                      type: boolean
                    schema:
                      properties:
                        system:
                          minLength: 1
                          type: string
                        type:
                          minLength: 1
                          type: string
                      required:
                        - type
                        - system
                      type: object
                    searchable:
                      type: boolean
                  required:
                    - id
                    - key
                    - name
                    - custom
                    - orderable
                    - navigable
                    - searchable
                    - clauseNames
                    - schema
                  type: object
                minItems: 1
                type: array
                uniqueItems: true
    post:
      description: Creates a custom field.
      requestBody:
        content:
          application/json:
            schema:
              properties:
                description:
                  description: The description of the custom field, which is displayed in
                    the UI.
                  type: string
                name:
                  description: The name of the custom field, which is displayed in the UI.
                    This is not the unique identifier.
                  type: string
                searcherKey:
                  description: "The searcher defines the way the field is searched in Jira.
                    For example,
                    com.atlassian.jira.plugin.system.customfieldtypes:grouppick\
                    ersearcher.The search UI (basic search and JQL search) will
                    display different operations and values for the field, based
                    on the field searcher. You must specify a searcher that is
                    valid for the field type, as listed below (abbreviated
                    values shown):"
                  enum:
                    - com.atlassian.jira.plugin.system.customfieldtypes:cascadingselectsearcher
                    - com.atlassian.jira.plugin.system.customfieldtypes:daterange
                    - com.atlassian.jira.plugin.system.customfieldtypes:datetimerange
                    - com.atlassian.jira.plugin.system.customfieldtypes:exactnumber
                    - com.atlassian.jira.plugin.system.customfieldtypes:exacttextsearcher
                    - com.atlassian.jira.plugin.system.customfieldtypes:grouppickersearcher
                    - com.atlassian.jira.plugin.system.customfieldtypes:labelsearcher
                    - com.atlassian.jira.plugin.system.customfieldtypes:multiselectsearcher
                    - com.atlassian.jira.plugin.system.customfieldtypes:numberrange
                    - com.atlassian.jira.plugin.system.customfieldtypes:projectsearcher
                  type: string
                type:
                  description: The type of the custom field. For example,
                    com.atlassian.jira.plugin.system.customfieldtypes:grouppicker.
                  enum:
                    - com.atlassian.jira.plugin.system.customfieldtypes:cascadingselect
                    - com.atlassian.jira.plugin.system.customfieldtypes:datepicker
                    - com.atlassian.jira.plugin.system.customfieldtypes:datetime
                    - com.atlassian.jira.plugin.system.customfieldtypes:float
                    - com.atlassian.jira.plugin.system.customfieldtypes:grouppicker
                    - com.atlassian.jira.plugin.system.customfieldtypes:importid
                    - com.atlassian.jira.plugin.system.customfieldtypes:labels
                    - com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes
                    - com.atlassian.jira.plugin.system.customfieldtypes:multigrouppicker
                    - com.atlassian.jira.plugin.system.customfieldtypes:multiselect
                  type: string
              type: object
      responses:
        "201":
          description: Returned if the custom field was created.
          content:
            "*/*":
              schema:
                description: ""
                properties:
                  clauseNames:
                    items:
                      properties: {}
                    type: array
                  custom:
                    type: boolean
                  id:
                    minLength: 1
                    type: string
                  name:
                    minLength: 1
                    type: string
                  navigable:
                    type: boolean
                  orderable:
                    type: boolean
                  schema:
                    properties:
                      custom:
                        minLength: 1
                        type: string
                      customId:
                        type: number
                      type:
                        minLength: 1
                        type: string
                    required:
                      - type
                      - custom
                      - customId
                    type: object
                  searchable:
                    type: boolean
                required:
                  - id
                  - name
                  - custom
                  - orderable
                  - navigable
                  - searchable
                  - clauseNames
                  - schema
                type: object
  "/field/{fieldKey}/option":
    get:
      description: Returns all options defined for a select list issue field. A select list
        issue field is a type of issue field that allows a user to select an
        value from a list of options.
      parameters:
        - description: "The field key is specified in the following format:
            $(app-key)__$(field-key). For example,
            example-add-on__example-issue-field."
          in: path
          name: fieldKey
          required: true
          schema:
            type: string
        - description: The maximum number of items to return per page. For example, 20.
          in: query
          name: maxResults
          schema:
            type: integer
        - description: The starting index of the returned objects. For example, 1.
          in: query
          name: startAt
          schema:
            type: integer
      responses:
        "200":
          description: Returned if the requested options are returned.
          content:
            "*/*":
              schema:
                description: ""
                properties:
                  isLast:
                    type: boolean
                  maxResults:
                    type: number
                  nextPage:
                    minLength: 1
                    type: string
                  self:
                    minLength: 1
                    type: string
                  startAt:
                    type: number
                  total:
                    type: number
                  values:
                    items:
                      properties:
                        config:
                          properties:
                            attributes:
                              items:
                                properties: {}
                              type: array
                            scope:
                              properties:
                                global:
                                  properties: {}
                                  type: object
                                projects:
                                  items:
                                    properties: {}
                                  type: array
                                projects2:
                                  items:
                                    properties:
                                      attributes:
                                        items:
                                          properties: {}
                                        type: array
                                      id:
                                        type: number
                                    required:
                                      - id
                                  minItems: 1
                                  type: array
                                  uniqueItems: true
                              required:
                                - projects
                                - projects2
                                - global
                              type: object
                          required:
                            - scope
                            - attributes
                          type: object
                        id:
                          type: number
                        properties:
                          properties:
                            description:
                              minLength: 1
                              type: string
                            founded:
                              minLength: 1
                              type: string
                            leader:
                              properties:
                                email:
                                  minLength: 1
                                  type: string
                                name:
                                  minLength: 1
                                  type: string
                              required:
                                - name
                                - email
                              type: object
                            members:
                              type: number
                          required:
                            - leader
                            - members
                            - description
                            - founded
                          type: object
                        value:
                          minLength: 1
                          type: string
                      required:
                        - id
                        - value
                    minItems: 1
                    type: array
                    uniqueItems: true
                required:
                  - self
                  - nextPage
                  - maxResults
                  - startAt
                  - total
                  - isLast
                  - values
                type: object
    post:
      description: Creates an option for a select list issue field.
      parameters:
        - in: path
          name: fieldKey
          required: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/Body"
      responses:
        "200":
          description: Returned if the option has been created.
          content:
            "*/*":
              schema:
                description: ""
                properties:
                  config:
                    properties:
                      attributes:
                        items:
                          properties: {}
                        type: array
                      scope:
                        properties:
                          global:
                            properties: {}
                            type: object
                          projects:
                            items:
                              properties: {}
                            type: array
                          projects2:
                            items:
                              properties:
                                attributes:
                                  items:
                                    properties: {}
                                  type: array
                                id:
                                  type: number
                              required:
                                - id
                            minItems: 1
                            type: array
                            uniqueItems: true
                        required:
                          - projects
                          - projects2
                          - global
                        type: object
                    required:
                      - scope
                      - attributes
                    type: object
                  properties:
                    properties:
                      description:
                        minLength: 1
                        type: string
                      founded:
                        minLength: 1
                        type: string
                      leader:
                        properties:
                          email:
                            minLength: 1
                            type: string
                          name:
                            minLength: 1
                            type: string
                        required:
                          - name
                          - email
                        type: object
                      members:
                        type: number
                    required:
                      - leader
                      - members
                      - description
                      - founded
                    type: object
                  value:
                    minLength: 1
                    type: string
                required:
                  - value
                  - properties
                  - config
                type: object
  "/field/{fieldKey}/option/suggestions/edit":
    get:
      description: Returns options defined for a select list issue field that can be viewed
        and selected by the currently logged in user.
      parameters:
        - description: "The field key is specified in the following format:
            $(app-key)__$(field-key). For example,
            example-add-on__example-issue-field."
          in: path
          name: fieldKey
          required: true
          schema:
            type: string
        - description: The maximum number of items to return per page. For example, 20.
          in: query
          name: maxResults
          schema:
            type: integer
        - description: Filters the results to options that are only available in the
            specified project. For example, 10000.
          in: query
          name: projectId
          schema:
            type: integer
        - description: The starting index of the returned objects. For example, 1.
          in: query
          name: startAt
          schema:
            type: integer
      responses:
        "200":
          description: Returned if the requested options are returned.
          content:
            "*/*":
              schema:
                description: ""
                properties:
                  isLast:
                    type: boolean
                  maxResults:
                    type: number
                  nextPage:
                    minLength: 1
                    type: string
                  self:
                    minLength: 1
                    type: string
                  startAt:
                    type: number
                  total:
                    type: number
                  values:
                    items:
                      properties:
                        id:
                          type: number
                        properties:
                          properties:
                            description:
                              minLength: 1
                              type: string
                            founded:
                              minLength: 1
                              type: string
                            leader:
                              properties:
                                email:
                                  minLength: 1
                                  type: string
                                name:
                                  minLength: 1
                                  type: string
                              required:
                                - name
                                - email
                              type: object
                            members:
                              type: number
                          required:
                            - leader
                            - members
                            - description
                            - founded
                          type: object
                        value:
                          minLength: 1
                          type: string
                      required:
                        - id
                        - value
                    minItems: 1
                    type: array
                    uniqueItems: true
                required:
                  - self
                  - nextPage
                  - maxResults
                  - startAt
                  - total
                  - isLast
                  - values
                type: object
  "/field/{fieldKey}/option/suggestions/search":
    get:
      description: Returns options defined for a select list issue field that can be viewed
        by the currently logged in user.
      parameters:
        - description: "The field key is specified in the following format:
            $(app-key)__$(field-key). For example,
            example-add-on__example-issue-field."
          in: path
          name: fieldKey
          required: true
          schema:
            type: string
        - description: The maximum number of items to return per page. For example, 20.
          in: query
          name: maxResults
          schema:
            type: integer
        - description: Filters the results to options that are only available in the
            specified project. For example, 10000.
          in: query
          name: projectId
          schema:
            type: integer
        - description: The starting index of the returned objects. For example, 1.
          in: query
          name: startAt
          schema:
            type: integer
      responses:
        "200":
          description: Returned if the requested options are returned.
          content:
            "*/*":
              schema:
                description: ""
                properties:
                  isLast:
                    type: boolean
                  maxResults:
                    type: number
                  nextPage:
                    minLength: 1
                    type: string
                  self:
                    minLength: 1
                    type: string
                  startAt:
                    type: number
                  total:
                    type: number
                  values:
                    items:
                      properties:
                        id:
                          type: number
                        properties:
                          properties:
                            description:
                              minLength: 1
                              type: string
                            founded:
                              minLength: 1
                              type: string
                            leader:
                              properties:
                                email:
                                  minLength: 1
                                  type: string
                                name:
                                  minLength: 1
                                  type: string
                              required:
                                - name
                                - email
                              type: object
                            members:
                              type: number
                          required:
                            - leader
                            - members
                            - description
                            - founded
                          type: object
                        value:
                          minLength: 1
                          type: string
                      required:
                        - id
                        - value
                    minItems: 1
                    type: array
                    uniqueItems: true
                required:
                  - self
                  - nextPage
                  - maxResults
                  - startAt
                  - total
                  - isLast
                  - values
                type: object
  "/field/{fieldKey}/option/{optionId}":
    delete:
      description: Deletes an option from a select list issue field.
      parameters:
        - description: "The field key is specified in the following format:
            $(app-key)__$(field-key). For example,
            example-add-on__example-issue-field."
          in: path
          name: fieldKey
          required: true
          schema:
            type: string
        - description: The ID of the option to be deleted. For example, 3.
          in: path
          name: optionId
          required: true
          schema:
            type: integer
      responses:
        "204":
          description: Returned if the field option has been deleted.
    get:
      description: Returns an option from a select list issue field.
      parameters:
        - description: "The field key is specified in the following format:
            $(app-key)__$(field-key). For example,
            example-add-on__example-issue-field."
          in: path
          name: fieldKey
          required: true
          schema:
            type: string
        - description: The ID of the option to be returned. For example, 3.
          in: path
          name: optionId
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Returned if the requested option is returned.
          content:
            "*/*":
              schema:
                description: ""
                properties:
                  config:
                    properties:
                      attributes:
                        items:
                          properties: {}
                        type: array
                      scope:
                        properties:
                          global:
                            properties: {}
                            type: object
                          projects:
                            items:
                              properties: {}
                            type: array
                          projects2:
                            items:
                              properties:
                                attributes:
                                  items:
                                    properties: {}
                                  type: array
                                id:
                                  type: number
                              required:
                                - id
                            minItems: 1
                            type: array
                            uniqueItems: true
                        required:
                          - projects
                          - projects2
                          - global
                        type: object
                    required:
                      - scope
                      - attributes
                    type: object
                  id:
                    type: number
                  properties:
                    properties:
                      description:
                        minLength: 1
                        type: string
                      founded:
                        minLength: 1
                        type: string
                      leader:
                        properties:
                          email:
                            minLength: 1
                            type: string
                          name:
                            minLength: 1
                            type: string
                        required:
                          - name
                          - email
                        type: object
                      members:
                        type: number
                    required:
                      - leader
                      - members
                      - description
                      - founded
                    type: object
                  value:
                    minLength: 1
                    type: string
                required:
                  - id
                  - value
                  - properties
                  - config
                type: object
    put:
      description: Updates an option for a select list issue field. If the option does not
        exist, a new option is created.
      parameters:
        - description: "The field key is specified in the following format:
            $(app-key)__$(field-key). For example,
            example-add-on__example-issue-field."
          in: path
          name: fieldKey
          required: true
          schema:
            type: string
        - description: The ID of the option to be updated. For example, 3.
          in: path
          name: optionId
          required: true
          schema:
            type: integer
      requestBody:
        $ref: "#/components/requestBodies/Body"
      responses:
        "200":
          description: Returned if the option has been updated or created.
          content:
            "*/*":
              schema:
                description: ""
                properties:
                  config:
                    properties:
                      attributes:
                        items:
                          properties: {}
                        type: array
                      scope:
                        properties:
                          global:
                            properties: {}
                            type: object
                          projects:
                            items:
                              properties: {}
                            type: array
                          projects2:
                            items:
                              properties:
                                attributes:
                                  items:
                                    properties: {}
                                  type: array
                                id:
                                  type: number
                              required:
                                - id
                            minItems: 1
                            type: array
                            uniqueItems: true
                        required:
                          - projects
                          - projects2
                          - global
                        type: object
                    required:
                      - scope
                      - attributes
                    type: object
                  id:
                    type: number
                  properties:
                    properties:
                      description:
                        minLength: 1
                        type: string
                      founded:
                        minLength: 1
                        type: string
                      leader:
                        properties:
                          email:
                            minLength: 1
                            type: string
                          name:
                            minLength: 1
                            type: string
                        required:
                          - name
                          - email
                        type: object
                      members:
                        type: number
                    required:
                      - leader
                      - members
                      - description
                      - founded
                    type: object
                  value:
                    minLength: 1
                    type: string
                required:
                  - id
                  - value
                  - properties
                  - config
                type: object
  "/field/{fieldKey}/option/{optionId}/issue":
    delete:
      description: Deselects a select list issue field option in all issues that it has
        been selected in. A different option can be selected to replace the
        deselected option. The update can also be limited to a smaller set of
        issues by using a JQL query.
      parameters:
        - description: "The field key is specified in the following format:
            $(app-key)__$(field-key). For example,
            example-add-on__example-issue-field."
          in: path
          name: fieldKey
          required: true
          schema:
            type: string
        - description: A JQL query that specifies the issues to be updated. For example,
            project=10000.
          in: query
          name: jql
          schema:
            type: string
        - description: The ID of the option to be deselected. For example, 3.
          in: path
          name: optionId
          required: true
          schema:
            type: integer
        - description: The ID of the option that will replace the currently selected
            option. For example, 2.
          in: query
          name: replaceWith
          schema:
            type: integer
      responses:
        "303":
          description: Example response (application/json)
          content:
            "*/*":
              schema:
                description: ""
                properties:
                  description:
                    minLength: 1
                    type: string
                  elapsedRuntime:
                    type: number
                  id:
                    minLength: 1
                    type: string
                  result:
                    properties:
                      errors:
                        properties:
                          errorMessages:
                            items:
                              properties: {}
                            type: array
                          errors:
                            properties: {}
                            type: object
                        required:
                          - errors
                          - errorMessages
                        type: object
                      modifiedIssues:
                        items:
                          properties: {}
                        type: array
                      unmodifiedIssues:
                        items:
                          properties: {}
                        type: array
                    required:
                      - modifiedIssues
                      - unmodifiedIssues
                      - errors
                    type: object
                  self:
                    minLength: 1
                    type: string
                  status:
                    minLength: 1
                    type: string
                required:
                  - self
                  - id
                  - description
                  - status
                  - result
                  - elapsedRuntime
                type: object
  /filter:
    get:
      description: "Returns all filters. Deprecated, use Search for filters that supports
        search and pagination. Permissions required: None, however only the
        following filters are returned:"
      parameters:
        - description: "Use expand to include additional information about filter in the
            response. This parameter accepts multiple values separated by a
            comma:"
          in: query
          name: expand
          schema:
            type: string
            enum:
              - sharedUsers
              - subscriptions
      responses:
        "200":
          description: Returned if the request is successful.
          content:
            "*/*":
              schema:
                description: ""
                properties:
                  description:
                    minLength: 1
                    type: string
                  favourite:
                    type: boolean
                  favouritedCount:
                    type: number
                  id:
                    minLength: 1
                    type: string
                  jql:
                    minLength: 1
                    type: string
                  name:
                    minLength: 1
                    type: string
                  owner:
                    properties:
                      accountId:
                        minLength: 1
                        type: string
                      active:
                        type: boolean
                      avatarUrls:
                        properties:
                          16x16:
                            minLength: 1
                            type: string
                          24x24:
                            minLength: 1
                            type: string
                          32x32:
                            minLength: 1
                            type: string
                          48x48:
                            minLength: 1
                            type: string
                        required:
                          - 48x48
                          - 24x24
                          - 16x16
                          - 32x32
                        type: object
                      displayName:
                        minLength: 1
                        type: string
                      key:
                        minLength: 1
                        type: string
                      name:
                        minLength: 1
                        type: string
                      self:
                        minLength: 1
                        type: string
                    required:
                      - self
                      - key
                      - accountId
                      - name
                      - avatarUrls
                      - displayName
                      - active
                    type: object
                  searchUrl:
                    minLength: 1
                    type: string
                  self:
                    minLength: 1
                    type: string
                  sharePermissions:
                    items:
                      properties: {}
                    type: array
                  subscriptions:
                    properties:
                      end-index:
                        type: number
                      items:
                        items:
                          properties: {}
                        type: array
                      max-results:
                        type: number
                      size:
                        type: number
                      start-index:
                        type: number
                    required:
                      - size
                      - items
                      - max-results
                      - start-index
                      - end-index
                    type: object
                  viewUrl:
                    minLength: 1
                    type: string
                required:
                  - self
                  - id
                  - name
                  - description
                  - owner
                  - jql
                  - viewUrl
                  - searchUrl
                  - favourite
                  - favouritedCount
                  - sharePermissions
                  - subscriptions
                type: object
    post:
      description: "Creates a new filter. The new filter is not shared and not selected as
        a favorite. Permissions required: Permission to log in to Jira."
      parameters:
        - description: "Use expand to include additional information about filter in the
            response. This parameter accepts multiple values separated by a
            comma:"
          in: query
          name: expand
          schema:
            type: string
            enum:
              - sharedUsers
              - subscriptions
      requestBody:
        $ref: "#/components/requestBodies/Body7"
      responses:
        "200":
          description: Returned if the request is successful.
          content:
            "*/*":
              schema:
                description: ""
                properties:
                  description:
                    minLength: 1
                    type: string
                  favourite:
                    type: boolean
                  favouritedCount:
                    type: number
                  id:
                    minLength: 1
                    type: string
                  jql:
                    minLength: 1
                    type: string
                  name:
                    minLength: 1
                    type: string
                  owner:
                    properties:
                      accountId:
                        minLength: 1
                        type: string
                      active:
                        type: boolean
                      avatarUrls:
                        properties:
                          16x16:
                            minLength: 1
                            type: string
                          24x24:
                            minLength: 1
                            type: string
                          32x32:
                            minLength: 1
                            type: string
                          48x48:
                            minLength: 1
                            type: string
                        required:
                          - 48x48
                          - 24x24
                          - 16x16
                          - 32x32
                        type: object
                      displayName:
                        minLength: 1
                        type: string
                      key:
                        minLength: 1
                        type: string
                      name:
                        minLength: 1
                        type: string
                      self:
                        minLength: 1
                        type: string
                    required:
                      - self
                      - key
                      - accountId
                      - name
                      - avatarUrls
                      - displayName
                      - active
                    type: object
                  searchUrl:
                    minLength: 1
                    type: string
                  self:
                    minLength: 1
                    type: string
                  sharePermissions:
                    items:
                      properties: {}
                    type: array
                  subscriptions:
                    properties:
                      end-index:
                        type: number
                      items:
                        items:
                          properties: {}
                        type: array
                      max-results:
                        type: number
                      size:
                        type: number
                      start-index:
                        type: number
                    required:
                      - size
                      - items
                      - max-results
                      - start-index
                      - end-index
                    type: object
                  viewUrl:
                    minLength: 1
                    type: string
                required:
                  - self
                  - id
                  - name
                  - description
                  - owner
                  - jql
                  - viewUrl
                  - searchUrl
                  - favourite
                  - favouritedCount
                  - sharePermissions
                  - subscriptions
                type: object
  /filter/defaultShareScope:
    get:
      description: "Returns the default sharing settings for new filters and dashboards for
        a user. Permissions required: Permission to log in to Jira (i.e., member
        of the users group)."
      responses:
        "200":
          description: Returned if the request is successful.
          content:
            "*/*":
              schema:
                description: ""
                properties:
                  scope:
                    minLength: 1
                    type: string
                required:
                  - scope
                type: object
    put:
      description: "Sets the default sharing for new filters and dashboards for a user.
        Permissions required: Permission to log in to Jira (i.e., member of the
        users group)."
      requestBody:
        content:
          application/json:
            schema:
              properties:
                scope:
                  description: "The scope of the default sharing for new filters and
                    dashboards:"
                  enum:
                    - GLOBAL
                    - AUTHENTICATED
                    - PRIVATE
                  type: string
              type: object
      responses:
        "200":
          description: Returned if the request is successful.
          content:
            "*/*":
              schema:
                description: ""
                properties:
                  scope:
                    minLength: 1
                    type: string
                required:
                  - scope
                type: object
  /filter/favourite:
    get:
      description: "Returns the favorite filters of the calling user. Permissions required:
        Permission to log in to Jira (i.e., member of the users group)."
      parameters:
        - description: "Use expand to include additional information about filter in the
            response. This parameter accepts multiple values separated by a
            comma:"
          in: query
          name: expand
          schema:
            type: string
            enum:
              - sharedUsers
              - subscriptions
      responses:
        "200":
          description: Returned if the request is successful.
          content:
            "*/*":
              schema:
                description: ""
                items:
                  properties:
                    description:
                      minLength: 1
                      type: string
                    favourite:
                      type: boolean
                    favouritedCount:
                      type: number
                    id:
                      minLength: 1
                      type: string
                    jql:
                      minLength: 1
                      type: string
                    name:
                      minLength: 1
                      type: string
                    owner:
                      properties:
                        accountId:
                          minLength: 1
                          type: string
                        active:
                          type: boolean
                        avatarUrls:
                          properties:
                            16x16:
                              minLength: 1
                              type: string
                            24x24:
                              minLength: 1
                              type: string
                            32x32:
                              minLength: 1
                              type: string
                            48x48:
                              minLength: 1
                              type: string
                          required:
                            - 48x48
                            - 24x24
                            - 16x16
                            - 32x32
                          type: object
                        displayName:
                          minLength: 1
                          type: string
                        key:
                          minLength: 1
                          type: string
                        name:
                          minLength: 1
                          type: string
                        self:
                          minLength: 1
                          type: string
                      required:
                        - self
                        - key
                        - accountId
                        - name
                        - avatarUrls
                        - displayName
                        - active
                      type: object
                    searchUrl:
                      minLength: 1
                      type: string
                    self:
                      minLength: 1
                      type: string
                    sharePermissions:
                      items:
                        properties: {}
                      type: array
                    subscriptions:
                      properties:
                        end-index:
                          type: number
                        items:
                          items:
                            properties: {}
                          type: array
                        max-results:
                          type: number
                        size:
                          type: number
                        start-index:
                          type: number
                      required:
                        - size
                        - items
                        - max-results
                        - start-index
                        - end-index
                      type: object
                    viewUrl:
                      minLength: 1
                      type: string
                  required:
                    - self
                    - id
                    - name
                    - description
                    - owner
                    - jql
                    - viewUrl
                    - searchUrl
                    - favourite
                    - favouritedCount
                    - sharePermissions
                    - subscriptions
                  type: object
                minItems: 1
                type: array
                uniqueItems: true
  /filter/my:
    get:
      description: "Returns the filters owned by the calling user. If includeFavourites is
        true, the user's favorite filters are also returned. Permissions
        required: Permission to log in to Jira (i.e., member of the users
        group)."
      parameters:
        - description: "Use expand to include additional information about filter in the
            response. This parameter accepts multiple values separated by a
            comma:"
          in: query
          name: expand
          schema:
            type: string
            enum:
              - sharedUsers
              - subscriptions
        - description: Include the user's favorite filters in the response.
          in: query
          name: includeFavourites
          schema:
            type: boolean
      responses:
        "200":
          description: Returned if the request is successful.
          content:
            "*/*":
              schema:
                description: ""
                items:
                  properties:
                    description:
                      minLength: 1
                      type: string
                    favourite:
                      type: boolean
                    favouritedCount:
                      type: number
                    id:
                      minLength: 1
                      type: string
                    jql:
                      minLength: 1
                      type: string
                    name:
                      minLength: 1
                      type: string
                    owner:
                      properties:
                        accountId:
                          minLength: 1
                          type: string
                        active:
                          type: boolean
                        avatarUrls:
                          properties:
                            16x16:
                              minLength: 1
                              type: string
                            24x24:
                              minLength: 1
                              type: string
                            32x32:
                              minLength: 1
                              type: string
                            48x48:
                              minLength: 1
                              type: string
                          required:
                            - 48x48
                            - 24x24
                            - 16x16
                            - 32x32
                          type: object
                        displayName:
                          minLength: 1
                          type: string
                        key:
                          minLength: 1
                          type: string
                        name:
                          minLength: 1
                          type: string
                        self:
                          minLength: 1
                          type: string
                      required:
                        - self
                        - key
                        - accountId
                        - name
                        - avatarUrls
                        - displayName
                        - active
                      type: object
                    searchUrl:
                      minLength: 1
                      type: string
                    self:
                      minLength: 1
                      type: string
                    sharePermissions:
                      items:
                        properties: {}
                      type: array
                    subscriptions:
                      properties:
                        end-index:
                          type: number
                        items:
                          items:
                            properties: {}
                          type: array
                        max-results:
                          type: number
                        size:
                          type: number
                        start-index:
                          type: number
                      required:
                        - size
                        - items
                        - max-results
                        - start-index
                        - end-index
                      type: object
                    viewUrl:
                      minLength: 1
                      type: string
                  required:
                    - self
                    - id
                    - name
                    - description
                    - owner
                    - jql
                    - viewUrl
                    - searchUrl
                    - favourite
                    - favouritedCount
                    - sharePermissions
                    - subscriptions
                  type: object
                minItems: 1
                type: array
                uniqueItems: true
  /filter/search:
    get:
      description: "Search for filters. This method is similar to Get filters except that
        you can refine the results to include filters that have specific
        attributes. For example, filters with a particular name. Permissions
        required: None, however only the following filters are returned (if no
        search parameters are set):"
      parameters:
        - description: Returns filters with an owner that exactly matches accountId of the
            owner. This parameter cannot be used with the owner parameter.
          in: query
          name: accountId
          schema:
            type: string
        - description: "Use expand to include additional information about filter in the
            response. This parameter accepts multiple values separated by a
            comma:"
          in: query
          name: expand
          schema:
            type: string
            enum:
              - sharedUsers
              - subscriptions
        - description: Returns filters with a name that partially matches filterName.
          in: query
          name: filterName
          schema:
            type: string
        - description: Returns filters that are shared with a group that has a name that
            exactly matches groupname.
          in: query
          name: groupname
          schema:
            type: string
        - description: The maximum number of items to return per page. Max is 50.
          in: query
          name: maxResults
          schema:
            type: integer
        - description: Orders the results by a property of the filter. For example, name.
          in: query
          name: orderBy
          schema:
            type: string
            enum:
              - id
              - name
              - description
              - owner
              - favourite_count
              - favouritedCount
              - is_favourite
              - favourite
        - description: Returns filters with an owner that exactly matches owner. This
            parameter cannot be used with the accountId parameter.
          in: query
          name: owner
          schema:
            type: string
        - description: Returns filters that are shared with a project that has an ID that
            exactly matches projectId.
          in: query
          name: projectId
          schema:
            type: integer
        - description: The index of the first item to return in a page of results (page
            offset). The base index is 0.
          in: query
          name: startAt
          schema:
            type: integer
      responses:
        "200":
          description: Returned if the request is successful.
          content:
            "*/*":
              schema:
                description: ""
                properties:
                  isLast:
                    type: boolean
                  maxResults:
                    type: number
                  self:
                    minLength: 1
                    type: string
                  startAt:
                    type: number
                  total:
                    type: number
                  values:
                    items:
                      properties:
                        description:
                          minLength: 1
                          type: string
                        favourite:
                          type: boolean
                        favouritedCount:
                          type: number
                        id:
                          minLength: 1
                          type: string
                        jql:
                          minLength: 1
                          type: string
                        name:
                          minLength: 1
                          type: string
                        owner:
                          properties:
                            accountId:
                              minLength: 1
                              type: string
                            active:
                              type: boolean
                            avatarUrls:
                              properties:
                                16x16:
                                  minLength: 1
                                  type: string
                                24x24:
                                  minLength: 1
                                  type: string
                                32x32:
                                  minLength: 1
                                  type: string
                                48x48:
                                  minLength: 1
                                  type: string
                              required:
                                - 48x48
                                - 24x24
                                - 16x16
                                - 32x32
                              type: object
                            displayName:
                              minLength: 1
                              type: string
                            key:
                              minLength: 1
                              type: string
                            name:
                              minLength: 1
                              type: string
                            self:
                              minLength: 1
                              type: string
                          required:
                            - self
                            - key
                            - accountId
                            - name
                            - avatarUrls
                            - displayName
                            - active
                          type: object
                        searchUrl:
                          minLength: 1
                          type: string
                        self:
                          minLength: 1
                          type: string
                        sharePermissions:
                          items:
                            properties: {}
                          type: array
                        subscriptions:
                          items:
                            properties: {}
                          type: array
                        viewUrl:
                          minLength: 1
                          type: string
                      required:
                        - self
                        - id
                        - name
                        - description
                        - jql
                        - viewUrl
                        - searchUrl
                        - favourite
                        - favouritedCount
                    minItems: 1
                    type: array
                    uniqueItems: true
                required:
                  - self
                  - maxResults
                  - startAt
                  - total
                  - isLast
                  - values
                type: object
  "/filter/{id}":
    delete:
      description: "Delete a filter. Permissions required: Permission to log in to Jira,
        however the following rules govern what a user can delete:"
      parameters:
        - description: The ID of the filter to delete.
          in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        "204":
          description: Returned if the request is successful.
    get:
      description: "Returns a filter. Permissions required: None, however the calling user
        must have permission view the filter."
      parameters:
        - description: "Use expand to include additional information about filter in the
            response. This parameter accepts multiple values separated by a
            comma:"
          in: query
          name: expand
          schema:
            type: string
            enum:
              - sharedUsers
              - subscriptions
        - description: The ID of the filter to return.
          in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Returned if the request is successful.
          content:
            "*/*":
              schema:
                description: ""
                properties:
                  description:
                    minLength: 1
                    type: string
                  favourite:
                    type: boolean
                  favouritedCount:
                    type: number
                  id:
                    minLength: 1
                    type: string
                  jql:
                    minLength: 1
                    type: string
                  name:
                    minLength: 1
                    type: string
                  owner:
                    properties:
                      accountId:
                        minLength: 1
                        type: string
                      active:
                        type: boolean
                      avatarUrls:
                        properties:
                          16x16:
                            minLength: 1
                            type: string
                          24x24:
                            minLength: 1
                            type: string
                          32x32:
                            minLength: 1
                            type: string
                          48x48:
                            minLength: 1
                            type: string
                        required:
                          - 48x48
                          - 24x24
                          - 16x16
                          - 32x32
                        type: object
                      displayName:
                        minLength: 1
                        type: string
                      key:
                        minLength: 1
                        type: string
                      name:
                        minLength: 1
                        type: string
                      self:
                        minLength: 1
                        type: string
                    required:
                      - self
                      - key
                      - accountId
                      - name
                      - avatarUrls
                      - displayName
                      - active
                    type: object
                  searchUrl:
                    minLength: 1
                    type: string
                  self:
                    minLength: 1
                    type: string
                  sharePermissions:
                    items:
                      properties: {}
                    type: array
                  subscriptions:
                    properties:
                      end-index:
                        type: number
                      items:
                        items:
                          properties: {}
                        type: array
                      max-results:
                        type: number
                      size:
                        type: number
                      start-index:
                        type: number
                    required:
                      - size
                      - items
                      - max-results
                      - start-index
                      - end-index
                    type: object
                  viewUrl:
                    minLength: 1
                    type: string
                required:
                  - self
                  - id
                  - name
                  - description
                  - owner
                  - jql
                  - viewUrl
                  - searchUrl
                  - favourite
                  - favouritedCount
                  - sharePermissions
                  - subscriptions
                type: object
    put:
      description: "Updates an existing filter. Use this method to update a filter's name,
        description, JQL, or sharing. Permissions required: Permission to log in
        to Jira, however the following rules govern what a user can update:"
      parameters:
        - description: "Use expand to include additional information about filter in the
            response. This parameter accepts multiple values separated by a
            comma:"
          in: query
          name: expand
          schema:
            type: string
            enum:
              - sharedUsers
              - subscriptions
        - description: The ID of the filter to update.
          in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        $ref: "#/components/requestBodies/Body7"
      responses:
        "200":
          description: Returned if the request is successful.
          content:
            "*/*":
              schema:
                description: ""
                properties:
                  description:
                    minLength: 1
                    type: string
                  favourite:
                    type: boolean
                  favouritedCount:
                    type: number
                  id:
                    minLength: 1
                    type: string
                  jql:
                    minLength: 1
                    type: string
                  name:
                    minLength: 1
                    type: string
                  owner:
                    properties:
                      accountId:
                        minLength: 1
                        type: string
                      active:
                        type: boolean
                      avatarUrls:
                        properties:
                          16x16:
                            minLength: 1
                            type: string
                          24x24:
                            minLength: 1
                            type: string
                          32x32:
                            minLength: 1
                            type: string
                          48x48:
                            minLength: 1
                            type: string
                        required:
                          - 48x48
                          - 24x24
                          - 16x16
                          - 32x32
                        type: object
                      displayName:
                        minLength: 1
                        type: string
                      key:
                        minLength: 1
                        type: string
                      name:
                        minLength: 1
                        type: string
                      self:
                        minLength: 1
                        type: string
                    required:
                      - self
                      - key
                      - accountId
                      - name
                      - avatarUrls
                      - displayName
                      - active
                    type: object
                  searchUrl:
                    minLength: 1
                    type: string
                  self:
                    minLength: 1
                    type: string
                  sharePermissions:
                    items:
                      properties: {}
                    type: array
                  subscriptions:
                    properties:
                      end-index:
                        type: number
                      items:
                        items:
                          properties: {}
                        type: array
                      max-results:
                        type: number
                      size:
                        type: number
                      start-index:
                        type: number
                    required:
                      - size
                      - items
                      - max-results
                      - start-index
                      - end-index
                    type: object
                  viewUrl:
                    minLength: 1
                    type: string
                required:
                  - self
                  - id
                  - name
                  - description
                  - owner
                  - jql
                  - viewUrl
                  - searchUrl
                  - favourite
                  - favouritedCount
                  - sharePermissions
                  - subscriptions
                type: object
  "/filter/{id}/columns":
    delete:
      description: "Reset the user's column configuration for the filter to the default.
        Permissions required: Permission to log in to Jira (i.e., member of the
        users group) and permission to view the filter."
      parameters:
        - description: The ID of the filter.
          in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        "204":
          description: Returned if the request is successful.
    get:
      description: "Returns the columns configured for a filter. The column configuration
        is used when the filter's results are viewed in List View with the
        Columns set to Filter. Permissions required: None, however the calling
        user must have permission to view the filter."
      parameters:
        - description: The ID of the filter.
          in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Returned if the request is successful.
          content:
            "*/*":
              schema:
                description: ""
                items:
                  properties:
                    label:
                      minLength: 1
                      type: string
                    value:
                      minLength: 1
                      type: string
                  required:
                    - label
                    - value
                  type: object
                minItems: 1
                type: array
                uniqueItems: true
    put:
      description: "Sets the columns for a filter. Only navigable fields can be set as
        columns. Use Get fields to get the list fields in Jira. A navigable
        field has navigable set to true. Permissions required: Permission to log
        in to Jira (i.e., member of the users group) and permission to view the
        filter."
      parameters:
        - description: The ID of the filter.
          in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Returned if the request is successful.
  "/filter/{id}/favourite":
    delete:
      description: "Removes a filter as a favorite for the calling user. Permissions
        required: Permission to log in to Jira (i.e., member of the users group)
        and permission to view the filter."
      parameters:
        - description: "Use expand to include additional information about filter in the
            response. This parameter accepts multiple values separated by a
            comma:"
          in: query
          name: expand
          schema:
            type: string
            enum:
              - sharedUsers
              - subscriptions
        - description: The ID of the filter.
          in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Returned if the request is successful.
          content:
            "*/*":
              schema:
                description: ""
                properties:
                  description:
                    minLength: 1
                    type: string
                  favourite:
                    type: boolean
                  favouritedCount:
                    type: number
                  id:
                    minLength: 1
                    type: string
                  jql:
                    minLength: 1
                    type: string
                  name:
                    minLength: 1
                    type: string
                  owner:
                    properties:
                      accountId:
                        minLength: 1
                        type: string
                      active:
                        type: boolean
                      avatarUrls:
                        properties:
                          16x16:
                            minLength: 1
                            type: string
                          24x24:
                            minLength: 1
                            type: string
                          32x32:
                            minLength: 1
                            type: string
                          48x48:
                            minLength: 1
                            type: string
                        required:
                          - 48x48
                          - 24x24
                          - 16x16
                          - 32x32
                        type: object
                      displayName:
                        minLength: 1
                        type: string
                      key:
                        minLength: 1
                        type: string
                      name:
                        minLength: 1
                        type: string
                      self:
                        minLength: 1
                        type: string
                    required:
                      - self
                      - key
                      - accountId
                      - name
                      - avatarUrls
                      - displayName
                      - active
                    type: object
                  searchUrl:
                    minLength: 1
                    type: string
                  self:
                    minLength: 1
                    type: string
                  sharePermissions:
                    items:
                      properties: {}
                    type: array
                  subscriptions:
                    properties:
                      end-index:
                        type: number
                      items:
                        items:
                          properties: {}
                        type: array
                      max-results:
                        type: number
                      size:
                        type: number
                      start-index:
                        type: number
                    required:
                      - size
                      - items
                      - max-results
                      - start-index
                      - end-index
                    type: object
                  viewUrl:
                    minLength: 1
                    type: string
                required:
                  - self
                  - id
                  - name
                  - description
                  - owner
                  - jql
                  - viewUrl
                  - searchUrl
                  - favourite
                  - favouritedCount
                  - sharePermissions
                  - subscriptions
                type: object
    put:
      description: "Add a filter as a favorite for the calling user. Permissions required:
        Permission to log in to Jira (i.e., member of the users group) and
        permission to view the filter."
      parameters:
        - description: "Use expand to include additional information about filter in the
            response. This parameter accepts multiple values separated by a
            comma:"
          in: query
          name: expand
          schema:
            type: string
            enum:
              - sharedUsers
              - subscriptions
        - description: The ID of the filter.
          in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Returned if the request is successful.
          content:
            "*/*":
              schema:
                description: ""
                properties:
                  description:
                    minLength: 1
                    type: string
                  favourite:
                    type: boolean
                  favouritedCount:
                    type: number
                  id:
                    minLength: 1
                    type: string
                  jql:
                    minLength: 1
                    type: string
                  name:
                    minLength: 1
                    type: string
                  owner:
                    properties:
                      accountId:
                        minLength: 1
                        type: string
                      active:
                        type: boolean
                      avatarUrls:
                        properties:
                          16x16:
                            minLength: 1
                            type: string
                          24x24:
                            minLength: 1
                            type: string
                          32x32:
                            minLength: 1
                            type: string
                          48x48:
                            minLength: 1
                            type: string
                        required:
                          - 48x48
                          - 24x24
                          - 16x16
                          - 32x32
                        type: object
                      displayName:
                        minLength: 1
                        type: string
                      key:
                        minLength: 1
                        type: string
                      name:
                        minLength: 1
                        type: string
                      self:
                        minLength: 1
                        type: string
                    required:
                      - self
                      - key
                      - accountId
                      - name
                      - avatarUrls
                      - displayName
                      - active
                    type: object
                  searchUrl:
                    minLength: 1
                    type: string
                  self:
                    minLength: 1
                    type: string
                  sharePermissions:
                    items:
                      properties: {}
                    type: array
                  subscriptions:
                    properties:
                      end-index:
                        type: number
                      items:
                        items:
                          properties: {}
                        type: array
                      max-results:
                        type: number
                      size:
                        type: number
                      start-index:
                        type: number
                    required:
                      - size
                      - items
                      - max-results
                      - start-index
                      - end-index
                    type: object
                  viewUrl:
                    minLength: 1
                    type: string
                required:
                  - self
                  - id
                  - name
                  - description
                  - owner
                  - jql
                  - viewUrl
                  - searchUrl
                  - favourite
                  - favouritedCount
                  - sharePermissions
                  - subscriptions
                type: object
  "/filter/{id}/permission":
    get:
      description: "Returns the share permissions for a filter. A filter can be shared with
        groups, projects, all logged-in users, or the public. Sharing with all
        logged-in users or the public is known as a global share permission.
        Permissions required: None, however the calling user must have
        permission to view the filter."
      parameters:
        - description: The ID of the filter.
          in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Returned if the request is successful.
          content:
            "*/*":
              schema:
                description: ""
                items:
                  properties:
                    id:
                      type: number
                    project:
                      properties:
                        avatarUrls:
                          properties:
                            16x16:
                              minLength: 1
                              type: string
                            24x24:
                              minLength: 1
                              type: string
                            32x32:
                              minLength: 1
                              type: string
                            48x48:
                              minLength: 1
                              type: string
                          required:
                            - 48x48
                            - 24x24
                            - 16x16
                            - 32x32
                          type: object
                        id:
                          minLength: 1
                          type: string
                        key:
                          minLength: 1
                          type: string
                        name:
                          minLength: 1
                          type: string
                        projectCategory:
                          properties:
                            description:
                              minLength: 1
                              type: string
                            id:
                              minLength: 1
                              type: string
                            name:
                              minLength: 1
                              type: string
                            self:
                              minLength: 1
                              type: string
                          required:
                            - self
                            - id
                            - name
                            - description
                          type: object
                        self:
                          minLength: 1
                          type: string
                        simplified:
                          type: boolean
                        style:
                          minLength: 1
                          type: string
                      required:
                        - self
                        - id
                        - key
                        - name
                        - avatarUrls
                        - projectCategory
                        - simplified
                        - style
                      type: object
                    role:
                      properties:
                        actors:
                          items:
                            properties:
                              actorGroup:
                                properties:
                                  displayName:
                                    minLength: 1
                                    type: string
                                  name:
                                    minLength: 1
                                    type: string
                                required:
                                  - name
                                  - displayName
                                type: object
                              displayName:
                                minLength: 1
                                type: string
                              id:
                                type: number
                              name:
                                minLength: 1
                                type: string
                              type:
                                minLength: 1
                                type: string
                            required:
                              - id
                              - displayName
                              - type
                              - name
                          minItems: 1
                          type: array
                          uniqueItems: true
                        description:
                          minLength: 1
                          type: string
                        id:
                          type: number
                        name:
                          minLength: 1
                          type: string
                        scope:
                          properties:
                            project:
                              properties:
                                id:
                                  minLength: 1
                                  type: string
                              required:
                                - id
                              type: object
                            type:
                              minLength: 1
                              type: string
                          required:
                            - type
                            - project
                          type: object
                        self:
                          minLength: 1
                          type: string
                      required:
                        - self
                        - name
                        - id
                        - description
                        - actors
                        - scope
                      type: object
                    type:
                      minLength: 1
                      type: string
                  required:
                    - id
                    - type
                    - project
                    - role
                  type: object
                minItems: 1
                type: array
                uniqueItems: true
    post:
      description: "Add a share permissions to a filter. If you add a global share
        permission (i.e., all logged-in users or the public) it will overwrite
        all share permissions for the filter.Be aware that this method uses
        different objects for updating share permissions compared to Update
        filter. Permissions required: Share dashboards and filters global
        permission and the calling user must own the filter."
      parameters:
        - description: The ID of the filter.
          in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              properties:
                groupname:
                  description: The name of the group to share the filter with. Set type to
                    group.
                  type: string
                projectId:
                  description: The ID of the project to share the filter with. Set type to
                    project.
                  type: string
                projectRoleId:
                  description: The ID of the project role to share the filter with. Set
                    type to projectRole and the projectId for the project that
                    the role is in.
                  type: string
                type:
                  description: "The type of the share permission.Specify the type as
                    follows:"
                  enum:
                    - project
                    - group
                    - projectRole
                    - global
                    - authenticated
                  type: string
              type: object
      responses:
        "201":
          description: Returned if the request is successful.
          content:
            "*/*":
              schema:
                description: ""
                items:
                  properties:
                    id:
                      type: number
                    project:
                      properties:
                        avatarUrls:
                          properties:
                            16x16:
                              minLength: 1
                              type: string
                            24x24:
                              minLength: 1
                              type: string
                            32x32:
                              minLength: 1
                              type: string
                            48x48:
                              minLength: 1
                              type: string
                          required:
                            - 48x48
                            - 24x24
                            - 16x16
                            - 32x32
                          type: object
                        id:
                          minLength: 1
                          type: string
                        key:
                          minLength: 1
                          type: string
                        name:
                          minLength: 1
                          type: string
                        projectCategory:
                          properties:
                            description:
                              minLength: 1
                              type: string
                            id:
                              minLength: 1
                              type: string
                            name:
                              minLength: 1
                              type: string
                            self:
                              minLength: 1
                              type: string
                          required:
                            - self
                            - id
                            - name
                            - description
                          type: object
                        self:
                          minLength: 1
                          type: string
                        simplified:
                          type: boolean
                        style:
                          minLength: 1
                          type: string
                      required:
                        - self
                        - id
                        - key
                        - name
                        - avatarUrls
                        - projectCategory
                        - simplified
                        - style
                      type: object
                    role:
                      properties:
                        actors:
                          items:
                            properties:
                              actorGroup:
                                properties:
                                  displayName:
                                    minLength: 1
                                    type: string
                                  name:
                                    minLength: 1
                                    type: string
                                required:
                                  - name
                                  - displayName
                                type: object
                              displayName:
                                minLength: 1
                                type: string
                              id:
                                type: number
                              name:
                                minLength: 1
                                type: string
                              type:
                                minLength: 1
                                type: string
                            required:
                              - id
                              - displayName
                              - type
                              - name
                          minItems: 1
                          type: array
                          uniqueItems: true
                        description:
                          minLength: 1
                          type: string
                        id:
                          type: number
                        name:
                          minLength: 1
                          type: string
                        scope:
                          properties:
                            project:
                              properties:
                                id:
                                  minLength: 1
                                  type: string
                              required:
                                - id
                              type: object
                            type:
                              minLength: 1
                              type: string
                          required:
                            - type
                            - project
                          type: object
                        self:
                          minLength: 1
                          type: string
                      required:
                        - self
                        - name
                        - id
                        - description
                        - actors
                        - scope
                      type: object
                    type:
                      minLength: 1
                      type: string
                  required:
                    - id
                    - type
                    - project
                    - role
                  type: object
                minItems: 1
                type: array
                uniqueItems: true
  "/filter/{id}/permission/{permissionId}":
    delete:
      description: "Deletes a share permission from a filter. Permissions required:
        Permission to log in to Jira (i.e., member of the users group) and the
        calling user must own the filter."
      parameters:
        - description: The ID of the filter.
          in: path
          name: id
          required: true
          schema:
            type: integer
        - description: The ID of the share permission.
          in: path
          name: permissionId
          required: true
          schema:
            type: integer
      responses:
        "204":
          description: Returned if the request is successful.
    get:
      description: "Returns a share permission for a filter. A filter can be shared with
        groups, projects, all logged-in users, or the public. Sharing with all
        logged-in users or the public is known as a global share permission.
        Permissions required: None, however the calling user must have
        permission to view the filter."
      parameters:
        - description: The ID of the filter.
          in: path
          name: id
          required: true
          schema:
            type: integer
        - description: The ID of the share permission.
          in: path
          name: permissionId
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Returned if the request is successful.
          content:
            "*/*":
              schema:
                description: ""
                properties:
                  id:
                    type: number
                  type:
                    minLength: 1
                    type: string
                required:
                  - id
                  - type
                type: object
  /group:
    delete:
      description: Deletes a group.
      parameters:
        - description: The name of the group.
          in: query
          name: groupname
          schema:
            type: string
        - description: The group to transfer restrictions to. Only comments and worklogs
            are transferred. If restrictions are not transferred, comments and
            worklogs will be inaccessible after the deletion.
          in: query
          name: swapGroup
          schema:
            type: string
      responses:
        "200":
          description: Returned if the group was deleted.
    get:
      description: This resource is deprecated, use group/member.
      parameters:
        - description: List of fields to expand.
          in: query
          name: expand
          schema:
            type: string
        - description: The name of the group.
          in: query
          name: groupname
          schema:
            type: string
      responses:
        "200":
          description: Returned if the requested group is returned.
    post:
      description: Creates a group.
      requestBody:
        content:
          application/json:
            schema:
              properties:
                name:
                  description: The name of the group.
                  type: string
              type: object
      responses:
        "201":
          description: Returns the group details.
          content:
            "*/*":
              schema:
                description: ""
                properties:
                  expand:
                    minLength: 1
                    type: string
                  name:
                    minLength: 1
                    type: string
                  self:
                    minLength: 1
                    type: string
                  users:
                    properties:
                      end-index:
                        type: number
                      items:
                        items:
                          properties:
                            active:
                              type: boolean
                            displayName:
                              minLength: 1
                              type: string
                            name:
                              minLength: 1
                              type: string
                            self:
                              minLength: 1
                              type: string
                          required:
                            - self
                            - name
                            - displayName
                            - active
                        minItems: 1
                        type: array
                        uniqueItems: true
                      max-results:
                        type: number
                      size:
                        type: number
                      start-index:
                        type: number
                    required:
                      - size
                      - items
                      - max-results
                      - start-index
                      - end-index
                    type: object
                required:
                  - name
                  - self
                  - users
                  - expand
                type: object
  /group/member:
    get:
      description: Returns all users in a group. Users are ordered by username.
      parameters:
        - description: The name of the group.
          in: query
          name: groupname
          schema:
            type: string
        - description: Include inactive users.
          in: query
          name: includeInactiveUsers
          schema:
            type: boolean
        - description: The maximum number of users to return per page.
          in: query
          name: maxResults
          schema:
            type: integer
        - description: The index of the first user to return.
          in: query
          name: startAt
          schema:
            type: integer
      responses:
        "200":
          description: Returned if the requested group is returned.
          content:
            "*/*":
              schema:
                description: ""
                properties:
                  isLast:
                    type: boolean
                  maxResults:
                    type: number
                  nextPage:
                    minLength: 1
                    type: string
                  self:
                    minLength: 1
                    type: string
                  startAt:
                    type: number
                  total:
                    type: number
                  values:
                    items:
                      properties:
                        accountId:
                          minLength: 1
                          type: string
                        active:
                          type: boolean
                        avatarUrls:
                          properties: {}
                          type: object
                        displayName:
                          minLength: 1
                          type: string
                        emailAddress:
                          minLength: 1
                          type: string
                        key:
                          minLength: 1
                          type: string
                        name:
                          minLength: 1
                          type: string
                        self:
                          minLength: 1
                          type: string
                        timeZone:
                          minLength: 1
                          type: string
                      required:
                        - self
                        - name
                        - key
                        - accountId
                        - emailAddress
                        - displayName
                        - active
                        - timeZone
                    minItems: 1
                    type: array
                    uniqueItems: true
                required:
                  - self
                  - nextPage
                  - maxResults
                  - startAt
                  - total
                  - isLast
                  - values
                type: object
  /group/user:
    delete:
      description: "Removes a user from a group. Permissions required: Administer Jira
        global permission."
      parameters:
        - description: The accountId of the user, which uniquely identifies the user across
            all Atlassian products. For example,
            384093:32b4d9w0-f6a5-3535-11a3-9c8c88d10192. Required, unless
            username is specified.
          in: query
          name: accountid
          schema:
            type: string
        - description: The name of the group.
          in: query
          name: groupname
          schema:
            type: string
        - description: This parameter has been deprecated due to privacy changes. Use
            accountId instead. See the migration guide for details.The username
            of the user. For example, admin. Required, unless accountId is
            specified.
          in: query
          name: username
          schema:
            type: string
      responses:
        "200":
          description: Returned if the user is removed from the group.
    post:
      description: Adds a user to a group.
      parameters:
        - description: The name of the group.
          in: query
          name: groupname
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                accountId:
                  description: The accountId of the user, which uniquely identifies the
                    user across all Atlassian products. For example,
                    384093:32b4d9w0-f6a5-3535-11a3-9c8c88d10192.
                  type: string
                name:
                  description: This property has been deprecated in favour of accountId due
                    to privacy changes. See the migration guide for details.The
                    username of the user. For example, admin.
                  type: string
              type: object
      responses:
        "201":
          description: Returns the group details.
  /groups/picker:
    get:
      description: Returns a list of groups whose names contain a query string. A list of
        group names can be provided to exclude groups from the results.
      parameters:
        - description: Parameter not in use.
          in: query
          name: accountId
          schema:
            type: string
        - description: A list of groups to exclude from the result.
          in: query
          name: exclude
          schema:
            type: array
            items:
              type: string
        - description: The maximum number of groups to return. The maximum number of groups
            that can be returned is limited by the system property
            jira.ajax.autocomplete.limit.
          in: query
          name: maxResults
          schema:
            type: integer
        - description: The string to find in group names.
          in: query
          name: query
          schema:
            type: string
        - description: Parameter not in use.
          in: query
          name: userName
          schema:
            type: string
      responses:
        "200":
          description: Returned if the request is successful.
          content:
            "*/*":
              schema:
                description: ""
                properties:
                  groups:
                    items:
                      properties:
                        html:
                          minLength: 1
                          type: string
                        name:
                          minLength: 1
                          type: string
                      required:
                        - name
                        - html
                    minItems: 1
                    type: array
                    uniqueItems: true
                  header:
                    minLength: 1
                    type: string
                  total:
                    type: number
                required:
                  - header
                  - total
                  - groups
                type: object
  /groupuserpicker:
    get:
      description: "Returns a list of users and groups matching a string. The string is
        used:"
      parameters:
        - description: The size of the avatar to return. If an invalid value is provided,
            the default value is used.
          in: query
          name: avatarSize
          schema:
            type: string
        - description: Indicates whether the search for groups should be case insensitive.
          in: query
          name: caseInsensitive
          schema:
            type: boolean
        - description: Indicates whether Connect app users and groups should be excluded
            from the search results. If an invalid value is provided, the
            default value is used.
          in: query
          name: excludeConnectAddons
          schema:
            type: boolean
        - description: The custom field ID of the field this request is for.
          in: query
          name: fieldId
          schema:
            type: string
        - description: The ID of an issue type that returned users and groups must have
            permission to view. To include multiple issue type IDs repeat this
            parameter, use of a comma separated list is not supported. Special
            values, such as -1 (all standard issue types) and -2 (all subtask
            issue types), are supported. This parameter is only used when
            fieldId is present.
          in: query
          name: issueTypeId
          schema:
            type: array
            items:
              type: string
        - description: The maximum number of items to return in each list. The maximum is
            1000.
          in: query
          name: maxResults
          schema:
            type: integer
        - description: The ID of a project that returned users and groups must have
            permission to view. To include multiple projects repeat this
            parameter, use of a comma separated list is not supported. This
            parameter is only used when fieldId is present.
          in: query
          name: projectId
          schema:
            type: array
            items:
              type: string
        - description: The search string.
          in: query
          name: query
          schema:
            type: string
        - description: Indicates whether the user avatar should be returned. If an invalid
            value is provided, the default value is used.
          in: query
          name: showAvatar
          schema:
            type: boolean
      responses:
        "200":
          description: Returned if the request is successful.
          content:
            "*/*":
              schema:
                description: ""
                properties:
                  groups:
                    properties:
                      groups:
                        items:
                          properties:
                            html:
                              minLength: 1
                              type: string
                            name:
                              minLength: 1
                              type: string
                          required:
                            - name
                            - html
                        minItems: 1
                        type: array
                        uniqueItems: true
                      header:
                        minLength: 1
                        type: string
                      total:
                        type: number
                    required:
                      - header
                      - total
                      - groups
                    type: object
                  users:
                    properties:
                      header:
                        minLength: 1
                        type: string
                      total:
                        type: number
                      users:
                        items:
                          properties:
                            accountId:
                              minLength: 1
                              type: string
                            avatarUrl:
                              minLength: 1
                              type: string
                            displayName:
                              minLength: 1
                              type: string
                            html:
                              minLength: 1
                              type: string
                            key:
                              minLength: 1
                              type: string
                            name:
                              minLength: 1
                              type: string
                          required:
                            - accountId
                            - name
                            - key
                            - html
                            - displayName
                            - avatarUrl
                        minItems: 1
                        type: array
                        uniqueItems: true
                    required:
                      - users
                      - total
                      - header
                    type: object
                required:
                  - users
                  - groups
                type: object
  /issue:
    post:
      description: Creates an issue or, where the option to create sub-tasks is enabled in
        Jira, a sub-task. A transition may be applied, to move the issue or
        sub-task to a workflow step other than the default start step, and issue
        properties set.
      parameters:
        - description: Indicates whether the project in which the issue is created is added
            to the user's Recently viewed project list, as shown under Projects
            in Jira.
          in: query
          name: updateHistory
          schema:
            type: boolean
      requestBody:
        $ref: "#/components/requestBodies/Body8"
      responses:
        "201":
          description: Returned if the request is successful.
          content:
            "*/*":
              schema:
                description: ""
                properties:
                  id:
                    minLength: 1
                    type: string
                  key:
                    minLength: 1
                    type: string
                  self:
                    minLength: 1
                    type: string
                required:
                  - id
                  - key
                  - self
                type: object
  /issue/bulk:
    post:
      description: Creates issues and, where the option to create sub-tasks is enabled in
        Jira, sub-tasks. Transitions may be applied, to move the issues or
        sub-tasks to a workflow step other than the default start step, and
        issue properties set.
      requestBody:
        content:
          application/json:
            schema:
              properties:
                issueUpdates:
                  items:
                    type: object
                  type: array
              type: object
      responses:
        "201":
          description: Example response (application/json)
          content:
            "*/*":
              schema:
                description: ""
                properties:
                  errors:
                    items:
                      properties: {}
                    type: array
                  issues:
                    items:
                      properties:
                        id:
                          minLength: 1
                          type: string
                        key:
                          minLength: 1
                          type: string
                        self:
                          minLength: 1
                          type: string
                      required:
                        - id
                        - key
                        - self
                    minItems: 1
                    type: array
                    uniqueItems: true
                required:
                  - issues
                  - errors
                type: object
  /issue/createmeta:
    get:
      description: Returns details of projects, issue types within projects, and, when
        requested, the create screen fields for each issue type for the user.
        Use the information to populate the requests in Create issue and Create
        issues.
      parameters:
        - description: "Use expand to include additional information about in the response.
            This parameter accepts multiple values separated by a comma:"
          in: query
          name: expand
          schema:
            type: string
            enum:
              - projects.issuetypes.fields
              - fields
              - update
        - description: Comma-separated list of issue type IDs. May be specified multiple
            times and with issuetypeNames.
          in: query
          name: issuetypeIds
          schema:
            type: array
            items:
              type: string
        - description: Comma-separated list of issue type names. May be specified multiple
            times and with issuetypeIds.
          in: query
          name: issuetypeNames
          schema:
            type: array
            items:
              type: string
        - description: Comma-separated list of project IDs. May be specified multiple times
            and with projectKeys.
          in: query
          name: projectIds
          schema:
            type: array
            items:
              type: string
        - description: Comma-separated list of project keys. May be specified multiple
            times and with projectIds.
          in: query
          name: projectKeys
          schema:
            type: array
            items:
              type: string
      responses:
        "200":
          description: Returned if the request is successful.
          content:
            "*/*":
              schema:
                description: ""
                properties:
                  projects:
                    items:
                      properties:
                        avatarUrls:
                          properties:
                            16x16:
                              minLength: 1
                              type: string
                            24x24:
                              minLength: 1
                              type: string
                            32x32:
                              minLength: 1
                              type: string
                            48x48:
                              minLength: 1
                              type: string
                          required:
                            - 16x16
                            - 24x24
                            - 32x32
                            - 48x48
                          type: object
                        id:
                          minLength: 1
                          type: string
                        issuetypes:
                          items:
                            properties:
                              description:
                                minLength: 1
                                type: string
                              fields:
                                properties:
                                  issuetype:
                                    properties:
                                      hasDefaultValue:
                                        type: boolean
                                      key:
                                        minLength: 1
                                        type: string
                                      name:
                                        minLength: 1
                                        type: string
                                      operations:
                                        items:
                                          properties: {}
                                        type: array
                                      required:
                                        type: boolean
                                    required:
                                      - required
                                      - name
                                      - key
                                      - hasDefaultValue
                                      - operations
                                    type: object
                                required:
                                  - issuetype
                                type: object
                              iconUrl:
                                minLength: 1
                                type: string
                              id:
                                minLength: 1
                                type: string
                              name:
                                minLength: 1
                                type: string
                              self:
                                minLength: 1
                                type: string
                              subtask:
                                type: boolean
                            required:
                              - self
                              - id
                              - description
                              - iconUrl
                              - name
                              - subtask
                          minItems: 1
                          type: array
                          uniqueItems: true
                        key:
                          minLength: 1
                          type: string
                        name:
                          minLength: 1
                          type: string
                        self:
                          minLength: 1
                          type: string
                      required:
                        - self
                        - id
                        - key
                        - name
                    minItems: 1
                    type: array
                    uniqueItems: true
                required:
                  - projects
                type: object
  /issue/picker:
    get:
      description: Returns a list of suggested issues matching the auto-completion query
        for the user executing this request. This operation checks the user's
        history and browsing context to return issue suggestions.
      parameters:
        - description: Key of the issue defining search context. The issue defining a
            context is excluded from the search results.
          in: query
          name: currentIssueKey
          schema:
            type: string
        - description: JQL that defines the search context. Only issues matching this JQL
            query are included in the results. Note that username and userkey
            have been deprecated as search terms for this parameter. See the
            migration guide for details. Use accountId instead.
          in: query
          name: currentJQL
          schema:
            type: string
        - description: ID of a project defining search context. Only issues belonging to a
            given project are suggested.
          in: query
          name: currentProjectId
          schema:
            type: string
        - description: Query used to filter issue search results.
          in: query
          name: query
          schema:
            type: string
        - description: Set to false to exclude parent issue from the suggestions list if
            search is performed in the context of a sub-task.
          in: query
          name: showSubTaskParent
          schema:
            type: boolean
        - description: Set to false to exclude subtasks from the suggestions list.
          in: query
          name: showSubTasks
          schema:
            type: boolean
      responses:
        "200":
          description: Returns a list of issues matching the issue picker parameters.
  "/issue/properties/{propertyKey}":
    delete:
      description: Deletes a property value from multiple issues. The issues to be updated
        can be specified by filter criteria.
      parameters:
        - description: The key of the property.
          in: path
          name: propertyKey
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                currentValue:
                  description: The value of properties to perform the bulk operation on.
                  type: object
                entityIds:
                  description: List of issues to perform the bulk delete operation on.
                  items:
                    type: integer
                  type: array
              type: object
      responses:
        "303":
          description: Returned if the request is successful.
    put:
      description: Sets a property value on multiple issues. The issues to be updated can
        be specified by a filter.
      parameters:
        - description: The key of the property. The maximum length is 255 characters.
          in: path
          name: propertyKey
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                filter:
                  description: Bulk operation filter details.
                  type: object
                value:
                  description: The value of the property. The value must be a valid,
                    non-empty JSON blob. The maximum length is 32768 characters.
                  type: object
              type: object
      responses:
        "303":
          description: Returned if the request is successful.
  "/issue/{issueIdOrKey}":
    delete:
      description: Deletes an issue.
      parameters:
        - description: Indicates whether the issue's sub-tasks are deleted when the issue
            is deleted.
          in: query
          name: deleteSubtasks
          schema:
            type: string
        - description: The ID or key of the issue.
          in: path
          name: issueIdOrKey
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Returned if the request is successful.
    get:
      description: Returns the details for an issue.
      parameters:
        - description: "Use expand to include additional information about the issues in
            the response. This parameter accepts multiple values separated by a
            comma:"
          in: query
          name: expand
          schema:
            type: string
            enum:
              - renderedFields
              - names
              - schema
              - transitions
              - operations
              - editmeta
              - changelog
              - versionedRepresentations
              - fields
        - description: "A comma-separated list of fields to return for the issue. Use it to
            retrieve a subset of fields. Allowed values:"
          in: query
          name: fields
          schema:
            type: array
            items:
              type: string
            enum:
              - "*all"
              - "*navigable"
              - summary,comment
              - -description
              - "*navigable,-comment"
        - description: Indicates whether fields in fields are referenced by keys rather
            than IDs. This parameter is useful where fields have been added by a
            connect app and a field's key may differ from its ID.
          in: query
          name: fieldsByKeys
          schema:
            type: boolean
        - description: The ID or key of the issue. For example, JRACLOUD-1549.
          in: path
          name: issueIdOrKey
          required: true
          schema:
            type: string
        - description: "A comma-separated list of issue properties to return for the issue.
            Allowed values:"
          in: query
          name: properties
          schema:
            type: array
            items:
              type: string
            enum:
              - "*all"
              - "*all,-prop1"
              - prop1
              - prop1,prop2
              - prop2
        - description: Indicates whether the project in which the issue is created is added
            to the user's Recently viewed project list, as shown under Projects
            in Jira. This also populates the JQL issues search lastViewed field.
          in: query
          name: updateHistory
          schema:
            type: boolean
      responses:
        "200":
          description: Returned if the request is successful.
          content:
            "*/*":
              schema:
                description: ""
                properties:
                  fields:
                    properties:
                      attachment:
                        items:
                          properties:
                            author:
                              properties:
                                accountId:
                                  minLength: 1
                                  type: string
                                active:
                                  type: boolean
                                avatarUrls:
                                  properties:
                                    16x16:
                                      minLength: 1
                                      type: string
                                    24x24:
                                      minLength: 1
                                      type: string
                                    32x32:
                                      minLength: 1
                                      type: string
                                    48x48:
                                      minLength: 1
                                      type: string
                                  required:
                                    - 48x48
                                    - 24x24
                                    - 16x16
                                    - 32x32
                                  type: object
                                displayName:
                                  minLength: 1
                                  type: string
                                key:
                                  minLength: 1
                                  type: string
                                name:
                                  minLength: 1
                                  type: string
                                self:
                                  minLength: 1
                                  type: string
                              required:
                                - self
                                - key
                                - accountId
                                - name
                                - avatarUrls
                                - displayName
                                - active
                              type: object
                            content:
                              minLength: 1
                              type: string
                            created:
                              minLength: 1
                              type: string
                            filename:
                              minLength: 1
                              type: string
                            id:
                              type: number
                            mimeType:
                              minLength: 1
                              type: string
                            self:
                              minLength: 1
                              type: string
                            size:
                              type: number
                            thumbnail:
                              minLength: 1
                              type: string
                          required:
                            - id
                            - self
                            - filename
                            - created
                            - size
                            - mimeType
                            - content
                            - thumbnail
                        minItems: 1
                        type: array
                        uniqueItems: true
                      comment:
                        items:
                          properties:
                            author:
                              properties:
                                active:
                                  type: boolean
                                displayName:
                                  minLength: 1
                                  type: string
                                name:
                                  minLength: 1
                                  type: string
                                self:
                                  minLength: 1
                                  type: string
                              required:
                                - self
                                - name
                                - displayName
                                - active
                              type: object
                            body:
                              properties:
                                content:
                                  items:
                                    properties:
                                      content:
                                        items:
                                          properties:
                                            text:
                                              minLength: 1
                                              type: string
                                            type:
                                              minLength: 1
                                              type: string
                                          required:
                                            - type
                                            - text
                                        minItems: 1
                                        type: array
                                        uniqueItems: true
                                      type:
                                        minLength: 1
                                        type: string
                                    required:
                                      - type
                                  minItems: 1
                                  type: array
                                  uniqueItems: true
                                type:
                                  minLength: 1
                                  type: string
                                version:
                                  type: number
                              required:
                                - type
                                - version
                                - content
                              type: object
                            created:
                              minLength: 1
                              type: string
                            id:
                              minLength: 1
                              type: string
                            self:
                              minLength: 1
                              type: string
                            updateAuthor:
                              properties:
                                active:
                                  type: boolean
                                displayName:
                                  minLength: 1
                                  type: string
                                name:
                                  minLength: 1
                                  type: string
                                self:
                                  minLength: 1
                                  type: string
                              required:
                                - self
                                - name
                                - displayName
                                - active
                              type: object
                            updated:
                              minLength: 1
                              type: string
                            visibility:
                              properties:
                                type:
                                  minLength: 1
                                  type: string
                                value:
                                  minLength: 1
                                  type: string
                              required:
                                - type
                                - value
                              type: object
                          required:
                            - self
                            - id
                            - created
                            - updated
                        minItems: 1
                        type: array
                        uniqueItems: true
                      description:
                        properties:
                          content:
                            items:
                              properties:
                                content:
                                  items:
                                    properties:
                                      text:
                                        minLength: 1
                                        type: string
                                      type:
                                        minLength: 1
                                        type: string
                                    required:
                                      - type
                                      - text
                                  minItems: 1
                                  type: array
                                  uniqueItems: true
                                type:
                                  minLength: 1
                                  type: string
                              required:
                                - type
                            minItems: 1
                            type: array
                            uniqueItems: true
                          type:
                            minLength: 1
                            type: string
                          version:
                            type: number
                        required:
                          - type
                          - version
                          - content
                        type: object
                      issuelinks:
                        items:
                          properties:
                            id:
                              minLength: 1
                              type: string
                            outwardIssue:
                              properties:
                                fields:
                                  properties:
                                    status:
                                      properties:
                                        iconUrl:
                                          minLength: 1
                                          type: string
                                        name:
                                          minLength: 1
                                          type: string
                                      required:
                                        - iconUrl
                                        - name
                                      type: object
                                  required:
                                    - status
                                  type: object
                                id:
                                  minLength: 1
                                  type: string
                                key:
                                  minLength: 1
                                  type: string
                                self:
                                  minLength: 1
                                  type: string
                              required:
                                - id
                                - key
                                - self
                                - fields
                              type: object
                            type:
                              properties:
                                id:
                                  minLength: 1
                                  type: string
                                inward:
                                  minLength: 1
                                  type: string
                                name:
                                  minLength: 1
                                  type: string
                                outward:
                                  minLength: 1
                                  type: string
                              required:
                                - id
                                - name
                                - inward
                                - outward
                              type: object
                          required:
                            - id
                        minItems: 1
                        type: array
                        uniqueItems: true
                      project:
                        properties:
                          avatarUrls:
                            properties:
                              16x16:
                                minLength: 1
                                type: string
                              24x24:
                                minLength: 1
                                type: string
                              32x32:
                                minLength: 1
                                type: string
                              48x48:
                                minLength: 1
                                type: string
                            required:
                              - 48x48
                              - 24x24
                              - 16x16
                              - 32x32
                            type: object
                          id:
                            minLength: 1
                            type: string
                          key:
                            minLength: 1
                            type: string
                          name:
                            minLength: 1
                            type: string
                          projectCategory:
                            properties:
                              description:
                                minLength: 1
                                type: string
                              id:
                                minLength: 1
                                type: string
                              name:
                                minLength: 1
                                type: string
                              self:
                                minLength: 1
                                type: string
                            required:
                              - self
                              - id
                              - name
                              - description
                            type: object
                          self:
                            minLength: 1
                            type: string
                          simplified:
                            type: boolean
                          style:
                            minLength: 1
                            type: string
                        required:
                          - self
                          - id
                          - key
                          - name
                          - avatarUrls
                          - projectCategory
                          - simplified
                          - style
                        type: object
                      sub-tasks:
                        items:
                          properties:
                            id:
                              minLength: 1
                              type: string
                            outwardIssue:
                              properties:
                                fields:
                                  properties:
                                    status:
                                      properties:
                                        iconUrl:
                                          minLength: 1
                                          type: string
                                        name:
                                          minLength: 1
                                          type: string
                                      required:
                                        - iconUrl
                                        - name
                                      type: object
                                  required:
                                    - status
                                  type: object
                                id:
                                  minLength: 1
                                  type: string
                                key:
                                  minLength: 1
                                  type: string
                                self:
                                  minLength: 1
                                  type: string
                              required:
                                - id
                                - key
                                - self
                                - fields
                              type: object
                            type:
                              properties:
                                id:
                                  minLength: 1
                                  type: string
                                inward:
                                  minLength: 1
                                  type: string
                                name:
                                  type: string
                                outward:
                                  minLength: 1
                                  type: string
                              required:
                                - id
                                - name
                                - inward
                                - outward
                              type: object
                          required:
                            - id
                        minItems: 1
                        type: array
                        uniqueItems: true
                      timetracking:
                        properties:
                          originalEstimate:
                            minLength: 1
                            type: string
                          originalEstimateSeconds:
                            type: number
                          remainingEstimate:
                            minLength: 1
                            type: string
                          remainingEstimateSeconds:
                            type: number
                          timeSpent:
                            minLength: 1
                            type: string
                          timeSpentSeconds:
                            type: number
                        required:
                          - originalEstimate
                          - remainingEstimate
                          - timeSpent
                          - originalEstimateSeconds
                          - remainingEstimateSeconds
                          - timeSpentSeconds
                        type: object
                      updated:
                        type: number
                      watcher:
                        properties:
                          isWatching:
                            type: boolean
                          self:
                            minLength: 1
                            type: string
                          watchCount:
                            type: number
                          watchers:
                            items:
                              properties:
                                active:
                                  type: boolean
                                displayName:
                                  minLength: 1
                                  type: string
                                name:
                                  minLength: 1
                                  type: string
                                self:
                                  minLength: 1
                                  type: string
                              required:
                                - self
                                - name
                                - displayName
                                - active
                            minItems: 1
                            type: array
                            uniqueItems: true
                        required:
                          - self
                          - isWatching
                          - watchCount
                          - watchers
                        type: object
                      worklog:
                        items:
                          properties:
                            author:
                              properties:
                                active:
                                  type: boolean
                                displayName:
                                  minLength: 1
                                  type: string
                                name:
                                  minLength: 1
                                  type: string
                                self:
                                  minLength: 1
                                  type: string
                              required:
                                - self
                                - name
                                - displayName
                                - active
                              type: object
                            comment:
                              properties:
                                content:
                                  items:
                                    properties:
                                      content:
                                        items:
                                          properties:
                                            text:
                                              minLength: 1
                                              type: string
                                            type:
                                              minLength: 1
                                              type: string
                                          required:
                                            - type
                                            - text
                                        minItems: 1
                                        type: array
                                        uniqueItems: true
                                      type:
                                        minLength: 1
                                        type: string
                                    required:
                                      - type
                                  minItems: 1
                                  type: array
                                  uniqueItems: true
                                type:
                                  minLength: 1
                                  type: string
                                version:
                                  type: number
                              required:
                                - type
                                - version
                                - content
                              type: object
                            id:
                              minLength: 1
                              type: string
                            issueId:
                              minLength: 1
                              type: string
                            self:
                              minLength: 1
                              type: string
                            started:
                              minLength: 1
                              type: string
                            timeSpent:
                              minLength: 1
                              type: string
                            timeSpentSeconds:
                              type: number
                            updateAuthor:
                              properties:
                                active:
                                  type: boolean
                                displayName:
                                  minLength: 1
                                  type: string
                                name:
                                  minLength: 1
                                  type: string
                                self:
                                  minLength: 1
                                  type: string
                              required:
                                - self
                                - name
                                - displayName
                                - active
                              type: object
                            updated:
                              minLength: 1
                              type: string
                            visibility:
                              properties:
                                type:
                                  minLength: 1
                                  type: string
                                value:
                                  minLength: 1
                                  type: string
                              required:
                                - type
                                - value
                              type: object
                          required:
                            - self
                            - updated
                            - started
                            - timeSpent
                            - timeSpentSeconds
                            - id
                            - issueId
                        minItems: 1
                        type: array
                        uniqueItems: true
                    required:
                      - watcher
                      - attachment
                      - sub-tasks
                      - description
                      - project
                      - comment
                      - issuelinks
                      - worklog
                      - updated
                      - timetracking
                    type: object
                  id:
                    minLength: 1
                    type: string
                  key:
                    minLength: 1
                    type: string
                  self:
                    minLength: 1
                    type: string
                required:
                  - id
                  - self
                  - key
                  - fields
                type: object
    put:
      description: Edits an issue. A transition may be applied and issue properties updated
        as part of the edit.
      parameters:
        - description: The ID or key of the issue.
          in: path
          name: issueIdOrKey
          required: true
          schema:
            type: string
        - description: Indicates whether a notification email about the issue update is
            sent to all watchers. To disable the notification, administer Jira
            or administer project permissions are required. If the user doesn't
            have the necessary permission the request is ignored.
          in: query
          name: notifyUsers
          schema:
            type: boolean
        - description: Indicates whether screen security should be overridden to enable
            uneditable fields to be edited. Available to Connect app users with
            admin permissions.
          in: query
          name: overrideEditableFlag
          schema:
            type: boolean
        - description: Indicates whether screen security should be overridden to enable
            hidden fields to be edited. Available to Connect app users with
            admin permissions.
          in: query
          name: overrideScreenSecurity
          schema:
            type: boolean
      requestBody:
        $ref: "#/components/requestBodies/Body8"
      responses:
        "204":
          description: Returned if the request is successful.
  "/issue/{issueIdOrKey}/assignee":
    put:
      description: Assigns an issue to a user. Use this operation when the calling user
        does not have the Edit Issues permission but has the Assign issue
        permission for the project that the issue is in.
      parameters:
        - description: The ID or key of the issue to be assigned.
          in: path
          name: issueIdOrKey
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                accountId:
                  description: The accountId of the user, which uniquely identifies the
                    user across all Atlassian products. For example,
                    384093:32b4d9w0-f6a5-3535-11a3-9c8c88d10192.
                  type: string
                active:
                  description: Indicates whether the user is active.
                  type: boolean
                applicationRoles:
                  description: The application roles the user is assigned to.
                  type: object
                avatarUrls:
                  description: The avatars of the user.
                  type: object
                displayName:
                  description: The display name of the user. Depending on the user’s
                    privacy setting, this may return an alternative value.
                  type: string
                emailAddress:
                  description: The email address of the user. Depending on the user’s
                    privacy setting, this may be returned as null.
                  type: string
                groups:
                  description: The groups that the user belongs to.
                  type: object
                key:
                  description: This property has been deprecated in favour of accountId due
                    to privacy changes. See the migration guide for details.The
                    key of the user. For example, admin.
                  type: string
                locale:
                  description: The locale of the user. Depending on the user’s privacy
                    setting, this may be returned as null.
                  type: string
                name:
                  description: This property has been deprecated in favour of accountId due
                    to privacy changes. See the migration guide for details.The
                    username of the user. For example, admin.
                  type: string
                timeZone:
                  description: The time zone specified in the user's profile. Depending on
                    the user’s privacy setting, this may be returned as null.
                  type: string
              type: object
      responses:
        "204":
          description: Returned if the request is successful.
  "/issue/{issueIdOrKey}/attachments":
    post:
      description: Adds one or more attachments to an issue. Attachments are posted as
        multipart/form-data (RFC 1867).
      parameters:
        - description: The ID or key of the issue that attachments are added to.
          in: path
          name: issueIdOrKey
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Returned if the request is successful.
          content:
            "*/*":
              schema:
                description: ""
                items:
                  properties:
                    author:
                      properties:
                        accountId:
                          minLength: 1
                          type: string
                        active:
                          type: boolean
                        avatarUrls:
                          properties:
                            16x16:
                              minLength: 1
                              type: string
                            24x24:
                              minLength: 1
                              type: string
                            32x32:
                              minLength: 1
                              type: string
                            48x48:
                              minLength: 1
                              type: string
                          required:
                            - 48x48
                            - 24x24
                            - 16x16
                            - 32x32
                          type: object
                        displayName:
                          minLength: 1
                          type: string
                        emailAddress:
                          minLength: 1
                          type: string
                        key:
                          minLength: 1
                          type: string
                        name:
                          minLength: 1
                          type: string
                        self:
                          minLength: 1
                          type: string
                        timeZone:
                          minLength: 1
                          type: string
                      required:
                        - self
                        - name
                        - key
                        - accountId
                        - emailAddress
                        - avatarUrls
                        - displayName
                        - active
                        - timeZone
                      type: object
                    content:
                      minLength: 1
                      type: string
                    created:
                      minLength: 1
                      type: string
                    filename:
                      minLength: 1
                      type: string
                    id:
                      minLength: 1
                      type: string
                    mimeType:
                      minLength: 1
                      type: string
                    self:
                      minLength: 1
                      type: string
                    size:
                      type: number
                    thumbnail:
                      minLength: 1
                      type: string
                  required:
                    - self
                    - id
                    - filename
                    - author
                    - created
                    - size
                    - mimeType
                    - content
                    - thumbnail
                  type: object
                minItems: 1
                type: array
                uniqueItems: true
  "/issue/{issueIdOrKey}/changelog":
    get:
      description: Returns a paginated list of all updates of an issue, sorted by date,
        starting from the oldest.
      parameters:
        - description: ID or key of the issue.
          in: path
          name: issueIdOrKey
          required: true
          schema:
            type: string
        - description: Maximum number of items to return per page. See Pagination section
            for more details.
          in: query
          name: maxResults
          schema:
            type: integer
        - description: "Page offset, ie. index of the first item returned in the page of
            results. Base index: 0."
          in: query
          name: startAt
          schema:
            type: integer
      responses:
        "200":
          description: returns a collection of changelogs associated with the issue, with
            count and pagination information.
          content:
            "*/*":
              schema:
                description: ""
                properties:
                  isLast:
                    type: boolean
                  maxResults:
                    type: number
                  nextPage:
                    minLength: 1
                    type: string
                  self:
                    minLength: 1
                    type: string
                  startAt:
                    type: number
                  total:
                    type: number
                  values:
                    items:
                      properties:
                        author:
                          properties:
                            accountId:
                              minLength: 1
                              type: string
                            active:
                              type: boolean
                            avatarUrls:
                              properties:
                                16x16:
                                  minLength: 1
                                  type: string
                                24x24:
                                  minLength: 1
                                  type: string
                                32x32:
                                  minLength: 1
                                  type: string
                                48x48:
                                  minLength: 1
                                  type: string
                              required:
                                - 48x48
                                - 24x24
                                - 16x16
                                - 32x32
                              type: object
                            displayName:
                              minLength: 1
                              type: string
                            emailAddress:
                              minLength: 1
                              type: string
                            key:
                              minLength: 1
                              type: string
                            name:
                              minLength: 1
                              type: string
                            self:
                              minLength: 1
                              type: string
                            timeZone:
                              minLength: 1
                              type: string
                          required:
                            - self
                            - name
                            - key
                            - accountId
                            - emailAddress
                            - avatarUrls
                            - displayName
                            - active
                            - timeZone
                          type: object
                        created:
                          minLength: 1
                          type: string
                        id:
                          minLength: 1
                          type: string
                        items:
                          items:
                            properties:
                              field:
                                minLength: 1
                                type: string
                              fieldId:
                                minLength: 1
                                type: string
                              fieldtype:
                                minLength: 1
                                type: string
                              from: {}
                              fromString:
                                type: string
                              to: {}
                              toString:
                                minLength: 1
                                type: string
                            required:
                              - field
                              - fieldtype
                              - fieldId
                              - fromString
                              - toString
                          minItems: 1
                          type: array
                          uniqueItems: true
                      required:
                        - id
                        - created
                    minItems: 1
                    type: array
                    uniqueItems: true
                required:
                  - self
                  - nextPage
                  - maxResults
                  - startAt
                  - total
                  - isLast
                  - values
                type: object
  "/issue/{issueIdOrKey}/comment":
    get:
      description: to get comments for
      parameters:
        - description: "optional flags: renderedBody (provides body rendered in HTML)"
          in: query
          name: expand
          schema:
            type: string
        - description: to get comments for
          in: path
          name: issueIdOrKey
          required: true
          schema:
            type: string
        - description: how many results on the page should be included. Defaults to 50.
          in: query
          name: maxResults
          schema:
            type: integer
        - description: ordering of the results.
          in: query
          name: orderBy
          schema:
            type: string
        - description: the page offset, if not specified then defaults to 0
          in: query
          name: startAt
          schema:
            type: integer
      responses:
        "200":
          description: returns a collection of comments associated with the issue, with
            count and pagination information.
          content:
            "*/*":
              schema:
                description: ""
                properties:
                  comments:
                    items:
                      properties:
                        author:
                          properties:
                            active:
                              type: boolean
                            displayName:
                              minLength: 1
                              type: string
                            name:
                              minLength: 1
                              type: string
                            self:
                              minLength: 1
                              type: string
                          required:
                            - self
                            - name
                            - displayName
                            - active
                          type: object
                        body:
                          properties:
                            content:
                              items:
                                properties:
                                  content:
                                    items:
                                      properties:
                                        text:
                                          minLength: 1
                                          type: string
                                        type:
                                          minLength: 1
                                          type: string
                                      required:
                                        - type
                                        - text
                                    minItems: 1
                                    type: array
                                    uniqueItems: true
                                  type:
                                    minLength: 1
                                    type: string
                                required:
                                  - type
                              minItems: 1
                              type: array
                              uniqueItems: true
                            type:
                              minLength: 1
                              type: string
                            version:
                              type: number
                          required:
                            - type
                            - version
                            - content
                          type: object
                        created:
                          minLength: 1
                          type: string
                        id:
                          minLength: 1
                          type: string
                        self:
                          minLength: 1
                          type: string
                        updateAuthor:
                          properties:
                            active:
                              type: boolean
                            displayName:
                              minLength: 1
                              type: string
                            name:
                              minLength: 1
                              type: string
                            self:
                              minLength: 1
                              type: string
                          required:
                            - self
                            - name
                            - displayName
                            - active
                          type: object
                        updated:
                          minLength: 1
                          type: string
                        visibility:
                          properties:
                            type:
                              minLength: 1
                              type: string
                            value:
                              minLength: 1
                              type: string
                          required:
                            - type
                            - value
                          type: object
                      required:
                        - self
                        - id
                        - created
                        - updated
                    minItems: 1
                    type: array
                    uniqueItems: true
                  maxResults:
                    type: number
                  startAt:
                    type: number
                  total:
                    type: number
                required:
                  - startAt
                  - maxResults
                  - total
                  - comments
                type: object
    post:
      description: a string containing the issue id or key the comment will be added to
      parameters:
        - description: "optional flags: renderedBody (provides body rendered in HTML)"
          in: query
          name: expand
          schema:
            type: string
        - description: a string containing the issue id or key the comment will be added to
          in: path
          name: issueIdOrKey
          required: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/Body10"
      responses:
        "201":
          description: Returned if add was successful
          content:
            "*/*":
              schema:
                description: ""
                properties:
                  author:
                    properties:
                      active:
                        type: boolean
                      displayName:
                        minLength: 1
                        type: string
                      name:
                        minLength: 1
                        type: string
                      self:
                        minLength: 1
                        type: string
                    required:
                      - self
                      - name
                      - displayName
                      - active
                    type: object
                  body:
                    properties:
                      content:
                        items:
                          properties:
                            content:
                              items:
                                properties:
                                  text:
                                    minLength: 1
                                    type: string
                                  type:
                                    minLength: 1
                                    type: string
                                required:
                                  - type
                                  - text
                              minItems: 1
                              type: array
                              uniqueItems: true
                            type:
                              minLength: 1
                              type: string
                          required:
                            - type
                        minItems: 1
                        type: array
                        uniqueItems: true
                      type:
                        minLength: 1
                        type: string
                      version:
                        type: number
                    required:
                      - type
                      - version
                      - content
                    type: object
                  created:
                    minLength: 1
                    type: string
                  id:
                    minLength: 1
                    type: string
                  self:
                    minLength: 1
                    type: string
                  updateAuthor:
                    properties:
                      active:
                        type: boolean
                      displayName:
                        minLength: 1
                        type: string
                      name:
                        minLength: 1
                        type: string
                      self:
                        minLength: 1
                        type: string
                    required:
                      - self
                      - name
                      - displayName
                      - active
                    type: object
                  updated:
                    minLength: 1
                    type: string
                  visibility:
                    properties:
                      type:
                        minLength: 1
                        type: string
                      value:
                        minLength: 1
                        type: string
                    required:
                      - type
                      - value
                    type: object
                required:
                  - self
                  - id
                  - author
                  - body
                  - updateAuthor
                  - created
                  - updated
                  - visibility
                type: object
  "/issue/{issueIdOrKey}/comment/{id}":
    delete:
      description: a string containing the issue id or key the comment belongs to
      parameters:
        - description: id of the comment to be deleted
          in: path
          name: id
          required: true
          schema:
            type: string
        - description: a string containing the issue id or key the comment belongs to
          in: path
          name: issueIdOrKey
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Returned if delete was successful
    get:
      description: of the issue the comment belongs to
      parameters:
        - description: "optional flags: renderedBody (provides body rendered in HTML)"
          in: query
          name: expand
          schema:
            type: string
        - description: the ID of the comment to request
          in: path
          name: id
          required: true
          schema:
            type: string
        - description: of the issue the comment belongs to
          in: path
          name: issueIdOrKey
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Returns a full representation of a Jira comment in JSON format.
          content:
            "*/*":
              schema:
                description: ""
                properties:
                  author:
                    properties:
                      active:
                        type: boolean
                      displayName:
                        minLength: 1
                        type: string
                      name:
                        minLength: 1
                        type: string
                      self:
                        minLength: 1
                        type: string
                    required:
                      - self
                      - name
                      - displayName
                      - active
                    type: object
                  body:
                    properties:
                      content:
                        items:
                          properties:
                            content:
                              items:
                                properties:
                                  text:
                                    minLength: 1
                                    type: string
                                  type:
                                    minLength: 1
                                    type: string
                                required:
                                  - type
                                  - text
                              minItems: 1
                              type: array
                              uniqueItems: true
                            type:
                              minLength: 1
                              type: string
                          required:
                            - type
                        minItems: 1
                        type: array
                        uniqueItems: true
                      type:
                        minLength: 1
                        type: string
                      version:
                        type: number
                    required:
                      - type
                      - version
                      - content
                    type: object
                  created:
                    minLength: 1
                    type: string
                  id:
                    minLength: 1
                    type: string
                  self:
                    minLength: 1
                    type: string
                  updateAuthor:
                    properties:
                      active:
                        type: boolean
                      displayName:
                        minLength: 1
                        type: string
                      name:
                        minLength: 1
                        type: string
                      self:
                        minLength: 1
                        type: string
                    required:
                      - self
                      - name
                      - displayName
                      - active
                    type: object
                  updated:
                    minLength: 1
                    type: string
                  visibility:
                    properties:
                      type:
                        minLength: 1
                        type: string
                      value:
                        minLength: 1
                        type: string
                    required:
                      - type
                      - value
                    type: object
                required:
                  - self
                  - id
                  - author
                  - body
                  - updateAuthor
                  - created
                  - updated
                  - visibility
                type: object
    put:
      description: a string containing the issue id or key the comment belongs to
      parameters:
        - description: "optional flags: renderedBody (provides body rendered in HTML)"
          in: query
          name: expand
          schema:
            type: string
        - description: id of the comment to be updated
          in: path
          name: id
          required: true
          schema:
            type: string
        - description: a string containing the issue id or key the comment belongs to
          in: path
          name: issueIdOrKey
          required: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/Body10"
      responses:
        "200":
          description: Returned if update was successful
          content:
            "*/*":
              schema:
                description: ""
                properties:
                  author:
                    properties:
                      active:
                        type: boolean
                      displayName:
                        minLength: 1
                        type: string
                      name:
                        minLength: 1
                        type: string
                      self:
                        minLength: 1
                        type: string
                    required:
                      - self
                      - name
                      - displayName
                      - active
                    type: object
                  body:
                    properties:
                      content:
                        items:
                          properties:
                            content:
                              items:
                                properties:
                                  text:
                                    minLength: 1
                                    type: string
                                  type:
                                    minLength: 1
                                    type: string
                                required:
                                  - type
                                  - text
                              minItems: 1
                              type: array
                              uniqueItems: true
                            type:
                              minLength: 1
                              type: string
                          required:
                            - type
                        minItems: 1
                        type: array
                        uniqueItems: true
                      type:
                        minLength: 1
                        type: string
                      version:
                        type: number
                    required:
                      - type
                      - version
                      - content
                    type: object
                  created:
                    minLength: 1
                    type: string
                  id:
                    minLength: 1
                    type: string
                  self:
                    minLength: 1
                    type: string
                  updateAuthor:
                    properties:
                      active:
                        type: boolean
                      displayName:
                        minLength: 1
                        type: string
                      name:
                        minLength: 1
                        type: string
                      self:
                        minLength: 1
                        type: string
                    required:
                      - self
                      - name
                      - displayName
                      - active
                    type: object
                  updated:
                    minLength: 1
                    type: string
                  visibility:
                    properties:
                      type:
                        minLength: 1
                        type: string
                      value:
                        minLength: 1
                        type: string
                    required:
                      - type
                      - value
                    type: object
                required:
                  - self
                  - id
                  - author
                  - body
                  - updateAuthor
                  - created
                  - updated
                  - visibility
                type: object
  "/issue/{issueIdOrKey}/editmeta":
    get:
      description: Returns the edit screen fields for an issue that are visible to and
        editable by the user. Use the information to populate the requests in
        Edit issue.
      parameters:
        - description: The ID or key of the issue.
          in: path
          name: issueIdOrKey
          required: true
          schema:
            type: string
        - description: Indicates whether non-editable fields should be returned. Available
            to connect app users with admin permissions.
          in: query
          name: overrideEditableFlag
          schema:
            type: boolean
        - description: Indicates whether hidden fields should be returned. Available to
            connect app users with admin permissions.
          in: query
          name: overrideScreenSecurity
          schema:
            type: boolean
      responses:
        "200":
          description: Returned if the request is successful.
          content:
            "*/*":
              schema:
                description: ""
                properties:
                  fields:
                    properties:
                      summary:
                        properties:
                          allowedValues:
                            items:
                              properties: {}
                            type: array
                          defaultValue:
                            minLength: 1
                            type: string
                          hasDefaultValue:
                            type: boolean
                          key:
                            minLength: 1
                            type: string
                          name:
                            minLength: 1
                            type: string
                          operations:
                            items:
                              properties: {}
                            type: array
                          required:
                            type: boolean
                          schema:
                            properties:
                              custom:
                                minLength: 1
                                type: string
                              customId:
                                type: number
                              items:
                                minLength: 1
                                type: string
                              type:
                                minLength: 1
                                type: string
                            required:
                              - type
                              - items
                              - custom
                              - customId
                            type: object
                        required:
                          - required
                          - schema
                          - name
                          - key
                          - hasDefaultValue
                          - operations
                          - allowedValues
                          - defaultValue
                        type: object
                    required:
                      - summary
                    type: object
                required:
                  - fields
                type: object
  "/issue/{issueIdOrKey}/notify":
    post:
      description: Creates an email notification for an issue and adds it to the mail queue.
      parameters:
        - description: ID or key of the issue that the notification is sent for.
          in: path
          name: issueIdOrKey
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                htmlBody:
                  description: The HTML body of the email notification for the issue.
                  type: string
                restrict:
                  type: object
                subject:
                  description: The subject of the email notification for the issue. If this
                    is not specified, then the subject is set to the issue key
                    and summary.
                  type: string
                textBody:
                  description: The plain text body of the email notification for the issue.
                  type: string
                to:
                  type: object
              type: object
      responses:
        "204":
          description: Returned if the email was successfully queued for sending.
  "/issue/{issueIdOrKey}/properties":
    get:
      description: Returns the URIs and keys of an issue's properties.
      parameters:
        - description: The key or ID of the issue.
          in: path
          name: issueIdOrKey
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Returned if the request is successful.
          content:
            "*/*":
              schema:
                description: ""
                properties:
                  keys:
                    items:
                      properties:
                        key:
                          minLength: 1
                          type: string
                        self:
                          minLength: 1
                          type: string
                      required:
                        - self
                        - key
                    minItems: 1
                    type: array
                    uniqueItems: true
                required:
                  - keys
                type: object
  "/issue/{issueIdOrKey}/properties/{propertyKey}":
    delete:
      description: Deletes an issue's property.
      parameters:
        - description: The key or ID of the issue.
          in: path
          name: issueIdOrKey
          required: true
          schema:
            type: string
        - description: The key of the property.
          in: path
          name: propertyKey
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Returned if the request is successful.
    get:
      description: Returns the key and value of an issue's property.
      parameters:
        - description: The key or ID of the issue.
          in: path
          name: issueIdOrKey
          required: true
          schema:
            type: string
        - description: The key of the property.
          in: path
          name: propertyKey
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Returned if the request is successful.
          content:
            "*/*":
              schema:
                description: ""
                properties:
                  key:
                    minLength: 1
                    type: string
                  value:
                    properties:
                      stride.conversation.id:
                        minLength: 1
                        type: string
                      support.time:
                        minLength: 1
                        type: string
                    required:
                      - stride.conversation.id
                      - support.time
                    type: object
                required:
                  - key
                  - value
                type: object
    put:
      description: Sets the value of an issue's property. Use this resource to store custom
        data against an issue.
      parameters:
        - description: The ID or key of the issue.
          in: path
          name: issueIdOrKey
          required: true
          schema:
            type: string
        - description: The key of the issue property. The maximum length is 255 characters.
          in: path
          name: propertyKey
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Returned if the issue property is updated.
  "/issue/{issueIdOrKey}/remotelink":
    delete:
      description: Deletes the remote issue link from the issue using the link's global ID.
      parameters:
        - description: The global ID of a remote issue link.
          in: query
          name: globalId
          schema:
            type: string
        - description: The ID or key of the issue.
          in: path
          name: issueIdOrKey
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Returned if the request is successful.
    get:
      description: Returns the remote issue links for an issue. When a remote issue link
        global ID is provided the record with that global ID is returned,
        otherwise all remote issue links are returned.
      parameters:
        - description: The global ID of the remote issue link.
          in: query
          name: globalId
          schema:
            type: string
        - description: The ID or key of the issue.
          in: path
          name: issueIdOrKey
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Returned if the request is successful.
          content:
            "*/*":
              schema:
                description: ""
                items:
                  properties:
                    application:
                      properties:
                        name:
                          minLength: 1
                          type: string
                        type:
                          minLength: 1
                          type: string
                      required:
                        - type
                        - name
                      type: object
                    globalId:
                      minLength: 1
                      type: string
                    id:
                      type: number
                    object:
                      properties:
                        icon:
                          properties:
                            title:
                              minLength: 1
                              type: string
                            url16x16:
                              minLength: 1
                              type: string
                          required:
                            - url16x16
                            - title
                          type: object
                        status:
                          properties:
                            icon:
                              properties:
                                link:
                                  minLength: 1
                                  type: string
                                title:
                                  minLength: 1
                                  type: string
                                url16x16:
                                  minLength: 1
                                  type: string
                              required:
                                - url16x16
                                - title
                                - link
                              type: object
                            resolved:
                              type: boolean
                          required:
                            - resolved
                            - icon
                          type: object
                        summary:
                          minLength: 1
                          type: string
                        title:
                          minLength: 1
                          type: string
                        url:
                          minLength: 1
                          type: string
                      required:
                        - url
                        - title
                        - summary
                        - icon
                        - status
                      type: object
                    relationship:
                      minLength: 1
                      type: string
                    self:
                      minLength: 1
                      type: string
                  required:
                    - id
                    - self
                    - globalId
                    - application
                    - relationship
                    - object
                  type: object
                minItems: 1
                type: array
                uniqueItems: true
    post:
      description: Creates or updates a remote issue link for an issue.
      parameters:
        - description: The ID or key of the issue.
          in: path
          name: issueIdOrKey
          required: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/Body11"
      responses:
        "200":
          description: Returned if the remote issue link is updated.
          content:
            "*/*":
              schema:
                description: ""
                properties:
                  id:
                    type: number
                  self:
                    minLength: 1
                    type: string
                required:
                  - id
                  - self
                type: object
  "/issue/{issueIdOrKey}/remotelink/{linkId}":
    delete:
      description: Deletes a remote issue link from an issue.
      parameters:
        - description: The ID or key of the issue.
          in: path
          name: issueIdOrKey
          required: true
          schema:
            type: string
        - description: The ID of a remote issue link.
          in: path
          name: linkId
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Returned if the request is successful.
    get:
      description: Returns a remote issue link for an issue.
      parameters:
        - description: The ID or key of the issue.
          in: path
          name: issueIdOrKey
          required: true
          schema:
            type: string
        - description: The ID of the remote issue link.
          in: path
          name: linkId
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Returned if the request is successful.
          content:
            "*/*":
              schema:
                description: ""
                properties:
                  application:
                    properties:
                      name:
                        minLength: 1
                        type: string
                      type:
                        minLength: 1
                        type: string
                    required:
                      - type
                      - name
                    type: object
                  globalId:
                    minLength: 1
                    type: string
                  id:
                    type: number
                  object:
                    properties:
                      icon:
                        properties:
                          title:
                            minLength: 1
                            type: string
                          url16x16:
                            minLength: 1
                            type: string
                        required:
                          - url16x16
                          - title
                        type: object
                      status:
                        properties:
                          icon:
                            properties:
                              link:
                                minLength: 1
                                type: string
                              title:
                                minLength: 1
                                type: string
                              url16x16:
                                minLength: 1
                                type: string
                            required:
                              - url16x16
                              - title
                              - link
                            type: object
                          resolved:
                            type: boolean
                        required:
                          - resolved
                          - icon
                        type: object
                      summary:
                        minLength: 1
                        type: string
                      title:
                        minLength: 1
                        type: string
                      url:
                        minLength: 1
                        type: string
                    required:
                      - url
                      - title
                      - summary
                      - icon
                      - status
                    type: object
                  relationship:
                    minLength: 1
                    type: string
                  self:
                    minLength: 1
                    type: string
                required:
                  - id
                  - self
                  - globalId
                  - application
                  - relationship
                  - object
                type: object
    put:
      description: Updates a remote issue link for an issue.
      parameters:
        - description: The ID or key of the issue.
          in: path
          name: issueIdOrKey
          required: true
          schema:
            type: string
        - description: The ID of the remote issue link.
          in: path
          name: linkId
          required: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/Body11"
      responses:
        "204":
          description: Returned if the request is successful.
  "/issue/{issueIdOrKey}/transitions":
    get:
      description: Returns either all transitions or a transition that can be performed by
        the user on an issue, based on the issue's status.
      parameters:
        - description: "Use expand to include additional information about in the response.
            This parameter accepts multiple values separated by a comma:"
          in: query
          name: expand
          schema:
            type: string
            enum:
              - transitions.fields
              - fields
              - update
        - description: The ID or key of the issue.
          in: path
          name: issueIdOrKey
          required: true
          schema:
            type: string
        - description: Indicates whether transitions with the condition Hide From User
            Condition are included in the response.
          in: query
          name: skipRemoteOnlyCondition
          schema:
            type: boolean
        - description: The ID of the transition.
          in: query
          name: transitionId
          schema:
            type: string
      responses:
        "200":
          description: Returned if the request is successful.
          content:
            "*/*":
              schema:
                description: ""
                properties:
                  transitions:
                    items:
                      properties:
                        fields:
                          properties:
                            summary:
                              properties:
                                allowedValues:
                                  items:
                                    properties: {}
                                  type: array
                                defaultValue:
                                  minLength: 1
                                  type: string
                                hasDefaultValue:
                                  type: boolean
                                key:
                                  minLength: 1
                                  type: string
                                name:
                                  minLength: 1
                                  type: string
                                operations:
                                  items:
                                    properties: {}
                                  type: array
                                required:
                                  type: boolean
                                schema:
                                  properties:
                                    custom:
                                      minLength: 1
                                      type: string
                                    customId:
                                      type: number
                                    items:
                                      minLength: 1
                                      type: string
                                    type:
                                      minLength: 1
                                      type: string
                                  required:
                                    - type
                                    - items
                                    - custom
                                    - customId
                                  type: object
                              required:
                                - required
                                - schema
                                - name
                                - key
                                - hasDefaultValue
                                - operations
                                - allowedValues
                                - defaultValue
                              type: object
                          required:
                            - summary
                          type: object
                        hasScreen:
                          type: boolean
                        id:
                          minLength: 1
                          type: string
                        isConditional:
                          type: boolean
                        isGlobal:
                          type: boolean
                        isInitial:
                          type: boolean
                        name:
                          minLength: 1
                          type: string
                        to:
                          properties:
                            description:
                              minLength: 1
                              type: string
                            iconUrl:
                              minLength: 1
                              type: string
                            id:
                              minLength: 1
                              type: string
                            name:
                              minLength: 1
                              type: string
                            self:
                              minLength: 1
                              type: string
                            statusCategory:
                              properties:
                                colorName:
                                  minLength: 1
                                  type: string
                                id:
                                  type: number
                                key:
                                  minLength: 1
                                  type: string
                                name:
                                  minLength: 1
                                  type: string
                                self:
                                  minLength: 1
                                  type: string
                              required:
                                - self
                                - id
                                - key
                                - colorName
                                - name
                              type: object
                          required:
                            - self
                            - description
                            - iconUrl
                            - name
                            - id
                            - statusCategory
                          type: object
                      required:
                        - id
                        - name
                        - hasScreen
                        - isGlobal
                        - isInitial
                        - isConditional
                    minItems: 1
                    type: array
                    uniqueItems: true
                required:
                  - transitions
                type: object
    post:
      description: Performs an issue transition and, if the transition has a screen,
        updates the fields from the transition screen. Optionally, issue
        properties can be set.
      parameters:
        - description: The ID or key of the issue.
          in: path
          name: issueIdOrKey
          required: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/Body8"
      responses:
        "204":
          description: Returned if the request is successful.
  "/issue/{issueIdOrKey}/votes":
    delete:
      description: Deletes a user's vote from an issue. This is the equivalent of the user
        clicking Unvote on an issue in Jira.
      parameters:
        - description: The ID or key of the issue.
          in: path
          name: issueIdOrKey
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Returned if the request is successful.
    get:
      description: Returns details about the votes on an issue.
      parameters:
        - description: The ID or key of the issue.
          in: path
          name: issueIdOrKey
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Returned if the request is successful.
          content:
            "*/*":
              schema:
                description: ""
                properties:
                  hasVoted:
                    type: boolean
                  self:
                    minLength: 1
                    type: string
                  voters:
                    items:
                      properties:
                        accountId:
                          minLength: 1
                          type: string
                        active:
                          type: boolean
                        avatarUrls:
                          properties:
                            16x16:
                              minLength: 1
                              type: string
                            24x24:
                              minLength: 1
                              type: string
                            32x32:
                              minLength: 1
                              type: string
                            48x48:
                              minLength: 1
                              type: string
                          required:
                            - 48x48
                            - 24x24
                            - 16x16
                            - 32x32
                          type: object
                        displayName:
                          minLength: 1
                          type: string
                        key:
                          minLength: 1
                          type: string
                        name:
                          minLength: 1
                          type: string
                        self:
                          minLength: 1
                          type: string
                      required:
                        - self
                        - key
                        - accountId
                        - name
                        - displayName
                        - active
                    minItems: 1
                    type: array
                    uniqueItems: true
                  votes:
                    type: number
                required:
                  - self
                  - votes
                  - hasVoted
                  - voters
                type: object
    post:
      description: Adds the user's vote to an issue. This is the equivalent of the user
        clicking Vote on an issue in Jira.
      parameters:
        - description: The ID or key of the issue.
          in: path
          name: issueIdOrKey
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Returned if the request is successful.
  "/issue/{issueIdOrKey}/watchers":
    delete:
      description: Deletes a user as a watcher of an issue.
      parameters:
        - description: The account ID of the user. Required if username is omitted,
            otherwise must be omitted.
          in: query
          name: accountId
          schema:
            type: string
        - description: The ID or key of the issue.
          in: path
          name: issueIdOrKey
          required: true
          schema:
            type: string
        - description: The name of the user. Required if accountId is omitted, otherwise
            must be omitted.
          in: query
          name: username
          schema:
            type: string
      responses:
        "204":
          description: Returned if the request is successful.
    get:
      description: Returns the watchers for an issue.
      parameters:
        - description: The ID or key of the issue.
          in: path
          name: issueIdOrKey
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Returned if the request is successful
          content:
            "*/*":
              schema:
                description: ""
                properties:
                  isWatching:
                    type: boolean
                  self:
                    minLength: 1
                    type: string
                  watchCount:
                    type: number
                  watchers:
                    items:
                      properties:
                        active:
                          type: boolean
                        displayName:
                          minLength: 1
                          type: string
                        name:
                          minLength: 1
                          type: string
                        self:
                          minLength: 1
                          type: string
                      required:
                        - self
                        - name
                        - displayName
                        - active
                    minItems: 1
                    type: array
                    uniqueItems: true
                required:
                  - self
                  - isWatching
                  - watchCount
                  - watchers
                type: object
    post:
      description: Adds a user as a watcher of an issue. If no user is specified the
        calling user is added.
      parameters:
        - description: The ID or key of the issue.
          in: path
          name: issueIdOrKey
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Returned if the request was successful.
  "/issue/{issueIdOrKey}/worklog":
    get:
      description: Returns all worklogs for an issue.
      parameters:
        - description: "Use expand to include additional information about worklogs in the
            response. This parameter accepts multiple values separated by a
            comma:"
          in: query
          name: expand
          schema:
            type: string
            enum:
              - properties
        - description: The ID or key of the issue.
          in: path
          name: issueIdOrKey
          required: true
          schema:
            type: string
        - description: The maximum number of items to return per page. Maximum is 1048576.
          in: query
          name: maxResults
          schema:
            type: integer
        - description: The index of the first item to return in a page of results (page
            offset).
          in: query
          name: startAt
          schema:
            type: integer
      responses:
        "200":
          description: Returned if the request is successful
          content:
            "*/*":
              schema:
                description: ""
                properties:
                  maxResults:
                    type: number
                  startAt:
                    type: number
                  total:
                    type: number
                  worklogs:
                    items:
                      properties:
                        author:
                          properties:
                            active:
                              type: boolean
                            displayName:
                              minLength: 1
                              type: string
                            name:
                              minLength: 1
                              type: string
                            self:
                              minLength: 1
                              type: string
                          required:
                            - self
                            - name
                            - displayName
                            - active
                          type: object
                        comment:
                          properties:
                            content:
                              items:
                                properties:
                                  content:
                                    items:
                                      properties:
                                        text:
                                          minLength: 1
                                          type: string
                                        type:
                                          minLength: 1
                                          type: string
                                      required:
                                        - type
                                        - text
                                    minItems: 1
                                    type: array
                                    uniqueItems: true
                                  type:
                                    minLength: 1
                                    type: string
                                required:
                                  - type
                              minItems: 1
                              type: array
                              uniqueItems: true
                            type:
                              minLength: 1
                              type: string
                            version:
                              type: number
                          required:
                            - type
                            - version
                            - content
                          type: object
                        id:
                          minLength: 1
                          type: string
                        issueId:
                          minLength: 1
                          type: string
                        self:
                          minLength: 1
                          type: string
                        started:
                          minLength: 1
                          type: string
                        timeSpent:
                          minLength: 1
                          type: string
                        timeSpentSeconds:
                          type: number
                        updateAuthor:
                          properties:
                            active:
                              type: boolean
                            displayName:
                              minLength: 1
                              type: string
                            name:
                              minLength: 1
                              type: string
                            self:
                              minLength: 1
                              type: string
                          required:
                            - self
                            - name
                            - displayName
                            - active
                          type: object
                        updated:
                          minLength: 1
                          type: string
                        visibility:
                          properties:
                            type:
                              minLength: 1
                              type: string
                            value:
                              minLength: 1
                              type: string
                          required:
                            - type
                            - value
                          type: object
                      required:
                        - self
                        - updated
                        - started
                        - timeSpent
                        - timeSpentSeconds
                        - id
                        - issueId
                    minItems: 1
                    type: array
                    uniqueItems: true
                required:
                  - startAt
                  - maxResults
                  - total
                  - worklogs
                type: object
    post:
      description: Adds a worklog to an issue.
      parameters:
        - description: "Defines how to update the issue's time estimate, the options are:"
          in: query
          name: adjustEstimate
          schema:
            type: string
            enum:
              - new
              - newEstimate
              - leave
              - manual
              - reduceBy
              - auto
              - timeSpent
        - description: "Use expand to include additional information about work logs in the
            response. This parameter accepts multiple values separated by a
            comma:"
          in: query
          name: expand
          schema:
            type: string
            enum:
              - properties
        - description: The ID or key the issue.
          in: path
          name: issueIdOrKey
          required: true
          schema:
            type: string
        - description: "The value to set as the issue's remaining time estimate, as days
            (#d), hours (#h), or minutes (#m or #). For example, 2d. Required
            when adjustEstimate is new."
          in: query
          name: newEstimate
          schema:
            type: string
        - description: Indicates whether users watching the issue are notified by email.
          in: query
          name: notifyUsers
          schema:
            type: boolean
        - description: Indicates whether the worklog entry should be added to the issue
            even if the issue is not editable, because jira.issue.editable set
            to false or missing. For example, the issue is closed. Only connect
            app users with admin scope permission can use this flag.
          in: query
          name: overrideEditableFlag
          schema:
            type: boolean
        - description: The amount to reduce the issue's remaining estimate by, as days
            (#d), hours (#h), or minutes (#m). For example, 2d. Required when
            adjustEstimate is manual.
          in: query
          name: reduceBy
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/Body3"
      responses:
        "201":
          description: Returned if the request was successful
  "/issue/{issueIdOrKey}/worklog/{id}":
    delete:
      description: Deletes a worklog from an issue.
      parameters:
        - description: "Defines how to update the issue's time estimate, the options are:"
          in: query
          name: adjustEstimate
          schema:
            type: string
            enum:
              - new
              - newEstimate
              - leave
              - manual
              - increaseBy
              - auto
              - timeSpent
        - description: The ID of the worklog.
          in: path
          name: id
          required: true
          schema:
            type: string
        - description: "The amount to increase the issue's remaining estimate by, as days
            (#d), hours (#h), or minutes (#m or #). For example, 2d. Required
            when adjustEstimate is manual."
          in: query
          name: increaseBy
          schema:
            type: string
        - description: The ID or key of the issue.
          in: path
          name: issueIdOrKey
          required: true
          schema:
            type: string
        - description: "The value to set as the issue's remaining time estimate, as days
            (#d), hours (#h), or minutes (#m or #). For example, 2d. Required
            when adjustEstimate is new."
          in: query
          name: newEstimate
          schema:
            type: string
        - description: Indicates whether users watching the issue are notified by email.
          in: query
          name: notifyUsers
          schema:
            type: boolean
        - description: Indicates whether the work log entry should be added to the issue
            even if the issue is not editable, because jira.issue.editable set
            to false or missing. For example, the issue is closed. Only connect
            app users with admin permissions can use this flag.
          in: query
          name: overrideEditableFlag
          schema:
            type: boolean
      responses:
        "204":
          description: Returned if the request is successful.
    get:
      description: Returns a worklog.
      parameters:
        - description: "Use expand to include additional information about work logs in the
            response. This parameter accepts multiple values separated by a
            comma:"
          in: query
          name: expand
          schema:
            type: string
            enum:
              - properties
        - description: The ID of the worklog.
          in: path
          name: id
          required: true
          schema:
            type: string
        - description: The ID or key of the issue.
          in: path
          name: issueIdOrKey
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Returned if the request is successful.
          content:
            "*/*":
              schema:
                description: ""
                properties:
                  author:
                    properties:
                      active:
                        type: boolean
                      displayName:
                        minLength: 1
                        type: string
                      name:
                        minLength: 1
                        type: string
                      self:
                        minLength: 1
                        type: string
                    required:
                      - self
                      - name
                      - displayName
                      - active
                    type: object
                  comment:
                    properties:
                      content:
                        items:
                          properties:
                            content:
                              items:
                                properties:
                                  text:
                                    minLength: 1
                                    type: string
                                  type:
                                    minLength: 1
                                    type: string
                                required:
                                  - type
                                  - text
                              minItems: 1
                              type: array
                              uniqueItems: true
                            type:
                              minLength: 1
                              type: string
                          required:
                            - type
                        minItems: 1
                        type: array
                        uniqueItems: true
                      type:
                        minLength: 1
                        type: string
                      version:
                        type: number
                    required:
                      - type
                      - version
                      - content
                    type: object
                  id:
                    minLength: 1
                    type: string
                  issueId:
                    minLength: 1
                    type: string
                  self:
                    minLength: 1
                    type: string
                  started:
                    minLength: 1
                    type: string
                  timeSpent:
                    minLength: 1
                    type: string
                  timeSpentSeconds:
                    type: number
                  updateAuthor:
                    properties:
                      active:
                        type: boolean
                      displayName:
                        minLength: 1
                        type: string
                      name:
                        minLength: 1
                        type: string
                      self:
                        minLength: 1
                        type: string
                    required:
                      - self
                      - name
                      - displayName
                      - active
                    type: object
                  updated:
                    minLength: 1
                    type: string
                  visibility:
                    properties:
                      type:
                        minLength: 1
                        type: string
                      value:
                        minLength: 1
                        type: string
                    required:
                      - type
                      - value
                    type: object
                required:
                  - self
                  - author
                  - updateAuthor
                  - comment
                  - updated
                  - visibility
                  - started
                  - timeSpent
                  - timeSpentSeconds
                  - id
                  - issueId
                type: object
    put:
      description: Updates a worklog.
      parameters:
        - description: "Defines how to update the issue's time estimate, the options are:"
          in: query
          name: adjustEstimate
          schema:
            type: string
            enum:
              - new
              - newEstimate
              - leave
              - auto
              - timeSpent
              - timeSpentSeconds
        - description: "Use expand to include additional information about worklogs in the
            response. This parameter accepts multiple values separated by a
            comma:"
          in: query
          name: expand
          schema:
            type: string
            enum:
              - properties
        - description: The ID of the worklog.
          in: path
          name: id
          required: true
          schema:
            type: string
        - description: The ID or key the issue.
          in: path
          name: issueIdOrKey
          required: true
          schema:
            type: string
        - description: "The value to set as the issue's remaining time estimate, as days
            (#d), hours (#h), or minutes (#m or #). For example, 2d. Required
            when adjustEstimate is new."
          in: query
          name: newEstimate
          schema:
            type: string
        - description: Indicates whether users watching the issue are notified by email.
          in: query
          name: notifyUsers
          schema:
            type: boolean
        - description: Indicates whether the worklog should be added to the issue even if
            the issue is not editable, for example, because the issue is closed.
            Only connect app users with admin permissions can use this flag.
          in: query
          name: overrideEditableFlag
          schema:
            type: boolean
      requestBody:
        $ref: "#/components/requestBodies/Body3"
      responses:
        "200":
          description: Returned if the request is successful
          content:
            "*/*":
              schema:
                description: ""
                properties:
                  author:
                    properties:
                      active:
                        type: boolean
                      displayName:
                        minLength: 1
                        type: string
                      name:
                        minLength: 1
                        type: string
                      self:
                        minLength: 1
                        type: string
                    required:
                      - self
                      - name
                      - displayName
                      - active
                    type: object
                  comment:
                    properties:
                      content:
                        items:
                          properties:
                            content:
                              items:
                                properties:
                                  text:
                                    minLength: 1
                                    type: string
                                  type:
                                    minLength: 1
                                    type: string
                                required:
                                  - type
                                  - text
                              minItems: 1
                              type: array
                              uniqueItems: true
                            type:
                              minLength: 1
                              type: string
                          required:
                            - type
                        minItems: 1
                        type: array
                        uniqueItems: true
                      type:
                        minLength: 1
                        type: string
                      version:
                        type: number
                    required:
                      - type
                      - version
                      - content
                    type: object
                  id:
                    minLength: 1
                    type: string
                  issueId:
                    minLength: 1
                    type: string
                  self:
                    minLength: 1
                    type: string
                  started:
                    minLength: 1
                    type: string
                  timeSpent:
                    minLength: 1
                    type: string
                  timeSpentSeconds:
                    type: number
                  updateAuthor:
                    properties:
                      active:
                        type: boolean
                      displayName:
                        minLength: 1
                        type: string
                      name:
                        minLength: 1
                        type: string
                      self:
                        minLength: 1
                        type: string
                    required:
                      - self
                      - name
                      - displayName
                      - active
                    type: object
                  updated:
                    minLength: 1
                    type: string
                  visibility:
                    properties:
                      type:
                        minLength: 1
                        type: string
                      value:
                        minLength: 1
                        type: string
                    required:
                      - type
                      - value
                    type: object
                required:
                  - self
                  - author
                  - updateAuthor
                  - comment
                  - updated
                  - visibility
                  - started
                  - timeSpent
                  - timeSpentSeconds
                  - id
                  - issueId
                type: object
  "/issue/{issueIdOrKey}/worklog/{worklogId}/properties":
    get:
      description: Returns the keys of all properties for a worklog.
      parameters:
        - description: The ID or key of the issue.
          in: path
          name: issueIdOrKey
          required: true
          schema:
            type: string
        - description: The ID of the worklog.
          in: path
          name: worklogId
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Returned if the request is successful.
          content:
            "*/*":
              schema:
                description: ""
                properties:
                  keys:
                    items:
                      properties:
                        key:
                          minLength: 1
                          type: string
                        self:
                          minLength: 1
                          type: string
                      required:
                        - self
                        - key
                    minItems: 1
                    type: array
                    uniqueItems: true
                required:
                  - keys
                type: object
  "/issue/{issueIdOrKey}/worklog/{worklogId}/properties/{propertyKey}":
    delete:
      description: Deletes a worklog property.
      parameters:
        - description: The ID or key of the issue.
          in: path
          name: issueIdOrKey
          required: true
          schema:
            type: string
        - description: The key of the property.
          in: path
          name: propertyKey
          required: true
          schema:
            type: string
        - description: The ID of the worklog.
          in: path
          name: worklogId
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Returned if the worklog property was removed successfully.
    get:
      description: Returns the value of a worklog property.
      parameters:
        - description: The ID or key of the issue.
          in: path
          name: issueIdOrKey
          required: true
          schema:
            type: string
        - description: The key of the property.
          in: path
          name: propertyKey
          required: true
          schema:
            type: string
        - description: The ID of the worklog.
          in: path
          name: worklogId
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Returned if the request is successful.
          content:
            "*/*":
              schema:
                description: ""
                properties:
                  key:
                    minLength: 1
                    type: string
                  value:
                    properties:
                      stride.conversation.id:
                        minLength: 1
                        type: string
                      support.time:
                        minLength: 1
                        type: string
                    required:
                      - stride.conversation.id
                      - support.time
                    type: object
                required:
                  - key
                  - value
                type: object
    put:
      description: Sets the value of a worklog property. Use this operation to store custom
        data against the worklog.
      parameters:
        - description: The ID or key of the issue.
          in: path
          name: issueIdOrKey
          required: true
          schema:
            type: string
        - description: The key of the issue property. The maximum length is 255 characters.
          in: path
          name: propertyKey
          required: true
          schema:
            type: string
        - description: The ID of the worklog.
          in: path
          name: worklogId
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Returned if the worklog property is updated.
  /issueLink:
    post:
      description: Creates a link between two issues. Use this operation to indicate a
        relationship between two issues and optionally add a comment to the from
        (outward) issue. To use this resource the site must have Issue Linking
        enabled.
      requestBody:
        content:
          application/json:
            schema:
              properties:
                comment:
                  description: A comment.
                  type: object
                inwardIssue:
                  description: The ID or key of a linked issue.
                  type: object
                outwardIssue:
                  description: The ID or key of a linked issue.
                  type: object
                type:
                  description: "This bean is used as follows:"
                  type: object
              type: object
      responses:
        "201":
          description: Returned if the request is successful.
  "/issueLink/{linkId}":
    delete:
      description: Deletes an issue link.
      parameters:
        - description: The ID of the issue link.
          in: path
          name: linkId
          required: true
          schema:
            type: string
      responses:
        "200":
          description: 200 response
    get:
      description: Returns an issue link.
      parameters:
        - description: The ID of the issue link.
          in: path
          name: linkId
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Returned if the request is successful.
          content:
            "*/*":
              schema:
                description: ""
                properties:
                  id:
                    minLength: 1
                    type: string
                  inwardIssue:
                    properties:
                      fields:
                        properties:
                          issuetype:
                            properties:
                              avatarId:
                                type: number
                              description:
                                minLength: 1
                                type: string
                              iconUrl:
                                minLength: 1
                                type: string
                              id:
                                minLength: 1
                                type: string
                              name:
                                minLength: 1
                                type: string
                              scope:
                                properties:
                                  project:
                                    properties:
                                      id:
                                        minLength: 1
                                        type: string
                                    required:
                                      - id
                                    type: object
                                  type:
                                    minLength: 1
                                    type: string
                                required:
                                  - type
                                  - project
                                type: object
                              self:
                                minLength: 1
                                type: string
                              subtask:
                                type: boolean
                            required:
                              - self
                              - id
                              - description
                              - iconUrl
                              - name
                              - subtask
                              - avatarId
                              - scope
                            type: object
                          priority:
                            properties:
                              description:
                                minLength: 1
                                type: string
                              iconUrl:
                                minLength: 1
                                type: string
                              id:
                                minLength: 1
                                type: string
                              name:
                                minLength: 1
                                type: string
                              self:
                                minLength: 1
                                type: string
                              statusColor:
                                minLength: 1
                                type: string
                            required:
                              - self
                              - statusColor
                              - description
                              - iconUrl
                              - name
                              - id
                            type: object
                          status:
                            properties:
                              description:
                                minLength: 1
                                type: string
                              iconUrl:
                                minLength: 1
                                type: string
                              id:
                                minLength: 1
                                type: string
                              name:
                                minLength: 1
                                type: string
                              self:
                                minLength: 1
                                type: string
                              statusCategory:
                                properties:
                                  colorName:
                                    minLength: 1
                                    type: string
                                  id:
                                    type: number
                                  key:
                                    minLength: 1
                                    type: string
                                  self:
                                    minLength: 1
                                    type: string
                                required:
                                  - self
                                  - id
                                  - key
                                  - colorName
                                type: object
                            required:
                              - self
                              - description
                              - iconUrl
                              - name
                              - id
                              - statusCategory
                            type: object
                        required:
                          - status
                          - priority
                          - issuetype
                        type: object
                      id:
                        minLength: 1
                        type: string
                      key:
                        minLength: 1
                        type: string
                      self:
                        minLength: 1
                        type: string
                    required:
                      - id
                      - key
                      - self
                      - fields
                    type: object
                  outwardIssue:
                    properties:
                      fields:
                        properties:
                          issuetype:
                            properties:
                              avatarId:
                                type: number
                              description:
                                minLength: 1
                                type: string
                              iconUrl:
                                minLength: 1
                                type: string
                              id:
                                minLength: 1
                                type: string
                              name:
                                minLength: 1
                                type: string
                              self:
                                minLength: 1
                                type: string
                              subtask:
                                type: boolean
                            required:
                              - self
                              - id
                              - description
                              - iconUrl
                              - name
                              - subtask
                              - avatarId
                            type: object
                          priority:
                            properties:
                              description:
                                minLength: 1
                                type: string
                              iconUrl:
                                minLength: 1
                                type: string
                              id:
                                minLength: 1
                                type: string
                              name:
                                minLength: 1
                                type: string
                              self:
                                minLength: 1
                                type: string
                              statusColor:
                                minLength: 1
                                type: string
                            required:
                              - self
                              - statusColor
                              - description
                              - iconUrl
                              - name
                              - id
                            type: object
                          status:
                            properties:
                              description:
                                minLength: 1
                                type: string
                              iconUrl:
                                minLength: 1
                                type: string
                              id:
                                minLength: 1
                                type: string
                              name:
                                minLength: 1
                                type: string
                              self:
                                minLength: 1
                                type: string
                              statusCategory:
                                properties:
                                  colorName:
                                    minLength: 1
                                    type: string
                                  id:
                                    type: number
                                  key:
                                    minLength: 1
                                    type: string
                                  name:
                                    minLength: 1
                                    type: string
                                  self:
                                    minLength: 1
                                    type: string
                                required:
                                  - self
                                  - id
                                  - key
                                  - colorName
                                  - name
                                type: object
                            required:
                              - self
                              - description
                              - iconUrl
                              - name
                              - id
                              - statusCategory
                            type: object
                        required:
                          - status
                          - priority
                          - issuetype
                        type: object
                      id:
                        minLength: 1
                        type: string
                      key:
                        minLength: 1
                        type: string
                      self:
                        minLength: 1
                        type: string
                    required:
                      - id
                      - key
                      - self
                      - fields
                    type: object
                  type:
                    properties:
                      id:
                        minLength: 1
                        type: string
                      inward:
                        minLength: 1
                        type: string
                      name:
                        minLength: 1
                        type: string
                      outward:
                        minLength: 1
                        type: string
                      self:
                        minLength: 1
                        type: string
                    required:
                      - id
                      - name
                      - inward
                      - outward
                      - self
                    type: object
                required:
                  - id
                  - type
                  - inwardIssue
                  - outwardIssue
                type: object
  /issueLinkType:
    get:
      description: Returns a list of all issue link types.
      responses:
        "200":
          description: Returned if the request is successful.
          content:
            "*/*":
              schema:
                description: ""
                properties:
                  issueLinkTypes:
                    items:
                      properties:
                        id:
                          minLength: 1
                          type: string
                        inward:
                          minLength: 1
                          type: string
                        name:
                          minLength: 1
                          type: string
                        outward:
                          minLength: 1
                          type: string
                        self:
                          minLength: 1
                          type: string
                      required:
                        - id
                        - name
                        - inward
                        - outward
                        - self
                    minItems: 1
                    type: array
                    uniqueItems: true
                required:
                  - issueLinkTypes
                type: object
    post:
      description: Creates an issue link type. Use this operation to create descriptions of
        the reasons why issues are linked. The issue link type consists of a
        name and descriptions for a link's inward and outward relationships.
      requestBody:
        $ref: "#/components/requestBodies/Body12"
      responses:
        "201":
          description: Returned if the request is successful.
          content:
            "*/*":
              schema:
                description: ""
                properties:
                  id:
                    minLength: 1
                    type: string
                  inward:
                    minLength: 1
                    type: string
                  name:
                    minLength: 1
                    type: string
                  outward:
                    minLength: 1
                    type: string
                  self:
                    minLength: 1
                    type: string
                required:
                  - id
                  - name
                  - inward
                  - outward
                  - self
                type: object
  "/issueLinkType/{issueLinkTypeId}":
    delete:
      description: Deletes an issue link type.
      parameters:
        - description: The ID of the issue link type.
          in: path
          name: issueLinkTypeId
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Returned if the request is successful.
    get:
      description: Returns an issue link type.
      parameters:
        - description: The ID of the issue link type.
          in: path
          name: issueLinkTypeId
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Returned if the request is successful.
          content:
            "*/*":
              schema:
                description: ""
                properties:
                  id:
                    minLength: 1
                    type: string
                  inward:
                    minLength: 1
                    type: string
                  name:
                    minLength: 1
                    type: string
                  outward:
                    minLength: 1
                    type: string
                  self:
                    minLength: 1
                    type: string
                required:
                  - id
                  - name
                  - inward
                  - outward
                  - self
                type: object
    put:
      description: Updates an issue link type.
      parameters:
        - description: The ID of the issue link type.
          in: path
          name: issueLinkTypeId
          required: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/Body12"
      responses:
        "200":
          description: Returned if the request is successful.
          content:
            "*/*":
              schema:
                description: ""
                properties:
                  id:
                    minLength: 1
                    type: string
                  inward:
                    minLength: 1
                    type: string
                  name:
                    minLength: 1
                    type: string
                  outward:
                    minLength: 1
                    type: string
                  self:
                    minLength: 1
                    type: string
                required:
                  - id
                  - name
                  - inward
                  - outward
                  - self
                type: object
  /issuesecurityschemes:
    get:
      description: Returns all issue security schemes.
      responses:
        "200":
          description: Returned if the request is successful.
          content:
            "*/*":
              schema:
                description: ""
                properties:
                  issueSecuritySchemes:
                    items:
                      properties:
                        defaultSecurityLevelId:
                          type: number
                        description:
                          minLength: 1
                          type: string
                        id:
                          type: number
                        name:
                          minLength: 1
                          type: string
                        self:
                          minLength: 1
                          type: string
                      required:
                        - self
                        - id
                        - name
                        - description
                        - defaultSecurityLevelId
                    minItems: 1
                    type: array
                    uniqueItems: true
                required:
                  - issueSecuritySchemes
                type: object
  "/issuesecurityschemes/{id}":
    get:
      description: Returns an issue security scheme along with its security levels.
      parameters:
        - description: The ID of the issue security scheme. Use the Get issue security
            schemes operation to get a list of issue security scheme IDs.
          in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Returned if the request is successful.
          content:
            "*/*":
              schema:
                description: ""
                properties:
                  defaultSecurityLevelId:
                    type: number
                  description:
                    minLength: 1
                    type: string
                  id:
                    type: number
                  levels:
                    items:
                      properties:
                        description:
                          minLength: 1
                          type: string
                        id:
                          minLength: 1
                          type: string
                        name:
                          minLength: 1
                          type: string
                        self:
                          minLength: 1
                          type: string
                      required:
                        - self
                        - id
                        - description
                        - name
                    minItems: 1
                    type: array
                    uniqueItems: true
                  name:
                    minLength: 1
                    type: string
                  self:
                    minLength: 1
                    type: string
                required:
                  - self
                  - id
                  - name
                  - description
                  - defaultSecurityLevelId
                  - levels
                type: object
  /issuetype:
    get:
      description: "Returns all issue types. Permissions required: Permission to access
        Jira, however, only issue types that are visible to the user are
        returned."
      responses:
        "200":
          description: Returned if the request is successful.
          content:
            "*/*":
              schema:
                description: ""
                items:
                  properties:
                    avatarId:
                      type: number
                    description:
                      minLength: 1
                      type: string
                    iconUrl:
                      minLength: 1
                      type: string
                    id:
                      minLength: 1
                      type: string
                    name:
                      minLength: 1
                      type: string
                    scope:
                      properties:
                        project:
                          properties:
                            id:
                              minLength: 1
                              type: string
                          required:
                            - id
                          type: object
                        type:
                          minLength: 1
                          type: string
                      required:
                        - type
                        - project
                      type: object
                    self:
                      minLength: 1
                      type: string
                    subtask:
                      type: boolean
                  required:
                    - self
                    - id
                    - description
                    - iconUrl
                    - name
                    - subtask
                    - avatarId
                    - scope
                  type: object
                minItems: 1
                type: array
                uniqueItems: true
    post:
      description: "Creates an issue type and adds it to the default issue type scheme.
        Permissions required: Administer Jira global permission."
      requestBody:
        content:
          application/json:
            schema:
              properties:
                description:
                  description: The description of the issue type.
                  type: string
                name:
                  description: The unique name for the issue type. Maximum length 60
                    characters. Required.
                  type: string
                type:
                  description: Whether the issue type is subtype or standard. Defaults to
                    standard.
                  enum:
                    - subtask
                    - standard
                  type: string
              type: object
      responses:
        "201":
          description: Returned if the request is successful.
  "/issuetype/{id}":
    delete:
      description: "Deletes the issue type. If the issue type is in use, all uses are
        updated with the alternative issue type (alternativeIssueTypeId). A list
        of alternative issue types can be obtained from the Get alternative
        issue types resource. Permissions required: Administer Jira global
        permission."
      parameters:
        - description: The ID of the replacement issue type.
          in: query
          name: alternativeIssueTypeId
          schema:
            type: string
        - description: The ID of the issue type.
          in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Returned if the request is successful.
    get:
      description: "Returns an issue type. Permissions required:"
      parameters:
        - description: The ID of the issue type.
          in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Returned if the request is successful.
          content:
            "*/*":
              schema:
                description: ""
                properties:
                  avatarId:
                    type: number
                  description:
                    minLength: 1
                    type: string
                  iconUrl:
                    minLength: 1
                    type: string
                  id:
                    minLength: 1
                    type: string
                  name:
                    minLength: 1
                    type: string
                  self:
                    minLength: 1
                    type: string
                  subtask:
                    type: boolean
                required:
                  - self
                  - id
                  - description
                  - iconUrl
                  - name
                  - subtask
                  - avatarId
                type: object
    put:
      description: "Updates the issue type. Permissions required: Administer Jira global
        permission."
      parameters:
        - description: The ID of the issue type.
          in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                avatarId:
                  description: The ID of an issue type avatar.
                  type: integer
                description:
                  description: The description of the issue type.
                  type: string
                name:
                  description: The unique name for the issue type. Maximum length 60
                    characters.
                  type: string
              type: object
      responses:
        "200":
          description: Returned if the request is successful.
  "/issuetype/{id}/alternatives":
    get:
      description: "Returns a list of issue types that can be used to replace the issue
        type. The alternative issue types are those assigned to the same
        workflow scheme, field configuration scheme, and screen scheme.
        Permissions required: Permission to access Jira."
      parameters:
        - description: The ID of the issue type.
          in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Returned if the request is successful.
          content:
            "*/*":
              schema:
                description: ""
                items:
                  properties:
                    avatarId:
                      type: number
                    description:
                      minLength: 1
                      type: string
                    iconUrl:
                      minLength: 1
                      type: string
                    id:
                      minLength: 1
                      type: string
                    name:
                      minLength: 1
                      type: string
                    scope:
                      properties:
                        project:
                          properties:
                            id:
                              minLength: 1
                              type: string
                          required:
                            - id
                          type: object
                        type:
                          minLength: 1
                          type: string
                      required:
                        - type
                        - project
                      type: object
                    self:
                      minLength: 1
                      type: string
                    subtask:
                      type: boolean
                  required:
                    - self
                    - id
                    - description
                    - iconUrl
                    - name
                    - subtask
                    - avatarId
                    - scope
                  type: object
                minItems: 1
                type: array
                uniqueItems: true
  "/issuetype/{id}/avatar2":
    post:
      description: Loads an avatar for the issue type.
      parameters:
        - description: The ID of the issue type.
          in: path
          name: id
          required: true
          schema:
            type: string
        - description: The length of each side of the crop region.
          in: query
          name: size
          schema:
            type: integer
        - description: The X coordinate of the top-left corner of the crop region.
          in: query
          name: x
          schema:
            type: integer
        - description: The Y coordinate of the top-left corner of the crop region.
          in: query
          name: y
          schema:
            type: integer
      responses:
        "201":
          description: Returned if the request is successful.
          content:
            "*/*":
              schema:
                description: ""
                properties:
                  id:
                    minLength: 1
                    type: string
                  isDeletable:
                    type: boolean
                  isSelected:
                    type: boolean
                  isSystemAvatar:
                    type: boolean
                  urls:
                    properties:
                      16x16:
                        minLength: 1
                        type: string
                      24x24:
                        minLength: 1
                        type: string
                      32x32:
                        minLength: 1
                        type: string
                      48x48:
                        minLength: 1
                        type: string
                    required:
                      - 16x16
                      - 24x24
                      - 32x32
                      - 48x48
                    type: object
                required:
                  - id
                  - isSystemAvatar
                  - isSelected
                  - isDeletable
                  - urls
                type: object
  "/issuetype/{issueTypeId}/properties":
    get:
      description: "Returns all the issue type property keys of the issue type. Permissions
        required:"
      parameters:
        - description: The ID of the issue type.
          in: path
          name: issueTypeId
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Returned if the request is successful.
          content:
            "*/*":
              schema:
                description: ""
                properties:
                  keys:
                    items:
                      properties:
                        key:
                          minLength: 1
                          type: string
                        self:
                          minLength: 1
                          type: string
                      required:
                        - self
                        - key
                    minItems: 1
                    type: array
                    uniqueItems: true
                required:
                  - keys
                type: object
  "/issuetype/{issueTypeId}/properties/{propertyKey}":
    delete:
      description: "Deletes the issue type property. Permissions required: Administer Jira
        global permission."
      parameters:
        - description: The ID of the issue type.
          in: path
          name: issueTypeId
          required: true
          schema:
            type: string
        - description: The key of the property. Use Get issue type property keys to get a
            list of all issue type property keys.
          in: path
          name: propertyKey
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Returned if the issue type property is deleted.
    get:
      description: "Returns the key and value of the issue type property. Permissions
        required:"
      parameters:
        - description: The ID of the issue type.
          in: path
          name: issueTypeId
          required: true
          schema:
            type: string
        - description: The key of the property. Use Get issue type property keys to get a
            list of all issue type property keys.
          in: path
          name: propertyKey
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Returned if the request is successful.
          content:
            "*/*":
              schema:
                description: ""
                properties:
                  key:
                    minLength: 1
                    type: string
                  value:
                    properties:
                      stride.conversation.id:
                        minLength: 1
                        type: string
                      support.time:
                        minLength: 1
                        type: string
                    required:
                      - stride.conversation.id
                      - support.time
                    type: object
                required:
                  - key
                  - value
                type: object
    put:
      description: "Creates or updates the value of the issue type property. Use this
        resource to store and update data against an issue type. The value of
        the request body must be a valid, non-empty JSON blob. The maximum
        length of the property value is 32768 bytes. Permissions required:
        Administer Jira global permission."
      parameters:
        - description: The ID of the issue type.
          in: path
          name: issueTypeId
          required: true
          schema:
            type: string
        - description: The key of the issue type property. The maximum length of the key is
            255 bytes.
          in: path
          name: propertyKey
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Returned if the issue type property is updated.
  /jql/autocompletedata:
    get:
      description: Returns reference data for JQL searches. This is a downloadable version
        of the documentation provided in Advanced searching - fields reference
        and Advanced searching - functions reference, along with a list of
        JQL-reserved words. Use this information to assist with the programmatic
        creation of JQL queries or the validation of queries built in a custom
        query builder.
      responses:
        "200":
          description: Returned if the request is successful.
          content:
            "*/*":
              schema:
                description: ""
                properties:
                  jqlReservedWords:
                    items:
                      properties: {}
                    type: array
                  visibleFieldNames:
                    items:
                      properties:
                        auto:
                          minLength: 1
                          type: string
                        cfid:
                          minLength: 1
                          type: string
                        displayName:
                          minLength: 1
                          type: string
                        operators:
                          items:
                            properties: {}
                          type: array
                        orderable:
                          minLength: 1
                          type: string
                        searchable:
                          minLength: 1
                          type: string
                        types:
                          items:
                            properties: {}
                          type: array
                        value:
                          minLength: 1
                          type: string
                      required:
                        - value
                        - displayName
                        - orderable
                        - searchable
                        - auto
                        - cfid
                    minItems: 1
                    type: array
                    uniqueItems: true
                  visibleFunctionNames:
                    items:
                      properties:
                        displayName:
                          minLength: 1
                          type: string
                        isList:
                          minLength: 1
                          type: string
                        types:
                          items:
                            properties: {}
                          type: array
                        value:
                          minLength: 1
                          type: string
                      required:
                        - value
                        - displayName
                        - isList
                    minItems: 1
                    type: array
                    uniqueItems: true
                required:
                  - visibleFieldNames
                  - visibleFunctionNames
                  - jqlReservedWords
                type: object
  /jql/autocompletedata/suggestions:
    get:
      description: Returns the JQL search auto complete suggestions for a field.
      parameters:
        - description: The name of the field.
          in: query
          name: fieldName
          schema:
            type: string
        - description: The partial field item name entered by the user.
          in: query
          name: fieldValue
          schema:
            type: string
        - description: The name of the CHANGED operator predicate for which the suggestions
            are generated. The valid predicate operators are by, from, and to.
          in: query
          name: predicateName
          schema:
            type: string
        - description: The partial predicate item name entered by the user.
          in: query
          name: predicateValue
          schema:
            type: string
      responses:
        "200":
          description: Returned if the request is successful.
          content:
            "*/*":
              schema:
                description: ""
                properties:
                  results:
                    items:
                      properties:
                        displayName:
                          minLength: 1
                          type: string
                        value:
                          minLength: 1
                          type: string
                      required:
                        - value
                        - displayName
                    minItems: 1
                    type: array
                    uniqueItems: true
                required:
                  - results
                type: object
  /jql/pdcleaner:
    post:
      description: The query strings having personal data that need to be migrated. There
        should be at most 100 queries.
      requestBody:
        content:
          application/json:
            schema:
              properties:
                queryStrings:
                  description: The query strings having personal data that need to be
                    migrated. There should be at most 100 queries.
                  items:
                    type: string
                  type: array
              type: object
      responses:
        "200":
          description: Returned if the request is successful.
          content:
            "*/*":
              schema:
                description: ""
                properties:
                  queryStrings:
                    items:
                      properties: {}
                    type: array
                required:
                  - queryStrings
                type: object
  /mypermissions:
    get:
      description: Returns a list of permissions indicating which permissions the user has.
        Details of the user's permissions can be obtained in a global, project,
        or issue context.
      parameters:
        - description: The ID of the issue.
          in: query
          name: issueId
          schema:
            type: string
        - description: The key of the issue. Ignored if issueId is provided.
          in: query
          name: issueKey
          schema:
            type: string
        - description: A comma separated list of permission keys. Omitting this parameter
            is deprecated. To get the list of available permissions, use Get all
            permissions. Note that deprecated keys cannot be used. Deprecated
            keys are not returned by Get all permissions but are returned by
            this operation if permissions is omitted.
          in: query
          name: permissions
          schema:
            type: string
        - description: The ID of project.
          in: query
          name: projectId
          schema:
            type: string
        - description: The key of project. Ignored if projectId is provided.
          in: query
          name: projectKey
          schema:
            type: string
      responses:
        "200":
          description: Returned if the request is successful.
          content:
            "*/*":
              schema:
                description: ""
                properties:
                  permissions:
                    properties:
                      EDIT_ISSUE:
                        properties:
                          description:
                            minLength: 1
                            type: string
                          havePermission:
                            type: boolean
                          id:
                            minLength: 1
                            type: string
                          key:
                            minLength: 1
                            type: string
                          name:
                            minLength: 1
                            type: string
                          type:
                            minLength: 1
                            type: string
                        required:
                          - id
                          - key
                          - name
                          - type
                          - description
                          - havePermission
                        type: object
                    required:
                      - EDIT_ISSUE
                    type: object
                required:
                  - permissions
                type: object
  /mypreferences:
    delete:
      description: Deletes a preference of the user, which restores the default value of
        system defined settings.
      parameters:
        - description: The key of the preference.
          in: query
          name: key
          schema:
            type: string
      responses:
        "204":
          description: Returned if the request is successful.
    get:
      description: Returns the value of a preference of the user.
      parameters:
        - description: The key of the preference.
          in: query
          name: key
          schema:
            type: string
      responses:
        "200":
          description: Returned if the request is successful.
    put:
      description: "Creates a preference for the user or updates its value. An arbitrary
        preference can be created with the value containing up to 255
        characters. In addition, the following keys define system preferences
        that can be set or created:"
      parameters:
        - description: The key of the preference. Maximum length is 255 characters.
          in: query
          name: key
          schema:
            type: string
      responses:
        "204":
          description: Returned if the request is successful.
  /mypreferences/locale:
    delete:
      description: Deletes the locale of the current user, which restores the default
        setting.
      responses:
        "204":
          description: Returned if the request is successful.
    get:
      description: Returns the locale for the current user.
      responses:
        "200":
          description: Returned if the request is successful.
          content:
            "*/*":
              schema:
                description: ""
                properties:
                  locale:
                    minLength: 1
                    type: string
                required:
                  - locale
                type: object
    put:
      description: Sets the locale of the current user. The requested locale must be one
        supported by the instance of Jira.
      requestBody:
        content:
          application/json:
            schema:
              properties:
                locale:
                  description: "The locale code. The Java the locale format is used: a two
                    character language code (ISO 639), an underscore, and two
                    letter country code (ISO 3166). For example, en_US
                    represents a locale of English (United States). Required on
                    create."
                  type: string
              type: object
      responses:
        "204":
          description: Returned if the request is successful.
  /myself:
    get:
      description: Returns details for the authenticated user.
      parameters:
        - description: "Use expand to include additional information about user in the
            response. This parameter accepts multiple values separated by a
            comma:"
          in: query
          name: expand
          schema:
            type: string
            enum:
              - groups
              - applicationRoles
      responses:
        "200":
          description: Returned if the request is successful.
          content:
            "*/*":
              schema:
                description: ""
                properties:
                  accountId:
                    minLength: 1
                    type: string
                  active:
                    type: boolean
                  applicationRoles:
                    properties:
                      items:
                        items:
                          properties: {}
                        type: array
                      size:
                        type: number
                    required:
                      - size
                      - items
                    type: object
                  avatarUrls:
                    properties:
                      16x16:
                        minLength: 1
                        type: string
                      24x24:
                        minLength: 1
                        type: string
                      32x32:
                        minLength: 1
                        type: string
                      48x48:
                        minLength: 1
                        type: string
                    required:
                      - 48x48
                      - 24x24
                      - 16x16
                      - 32x32
                    type: object
                  displayName:
                    minLength: 1
                    type: string
                  emailAddress:
                    minLength: 1
                    type: string
                  groups:
                    properties:
                      items:
                        items:
                          properties: {}
                        type: array
                      size:
                        type: number
                    required:
                      - size
                      - items
                    type: object
                  key:
                    minLength: 1
                    type: string
                  name:
                    minLength: 1
                    type: string
                  self:
                    minLength: 1
                    type: string
                  timeZone:
                    minLength: 1
                    type: string
                required:
                  - self
                  - key
                  - accountId
                  - name
                  - emailAddress
                  - avatarUrls
                  - displayName
                  - active
                  - timeZone
                  - groups
                  - applicationRoles
                type: object
  /notificationscheme:
    get:
      description: Returns a paginated list of notification schemes in order by display
        name.
      parameters:
        - description: "Use expand to include additional information in the response. This
            parameter accepts multiple values separated by a comma:"
          in: query
          name: expand
          schema:
            type: string
            enum:
              - all
              - field
              - group
              - notificationSchemeEvents
              - projectRole
              - user
        - description: The maximum number of items to return per page. Max is 50.
          in: query
          name: maxResults
          schema:
            type: integer
        - description: The index of the first item to return in a page of results (page
            offset). The base index is 0.
          in: query
          name: startAt
          schema:
            type: integer
      responses:
        "200":
          description: Returned if the request is successful. Only returns notification
            schemes that the user has permission to access. An empty list is
            returned if the requesting user lacks permission to access all
            notification schemes.
          content:
            "*/*":
              schema:
                description: ""
                properties:
                  isLast:
                    type: boolean
                  maxResults:
                    type: number
                  startAt:
                    type: number
                  total:
                    type: number
                  values:
                    items:
                      properties:
                        description:
                          minLength: 1
                          type: string
                        expand:
                          minLength: 1
                          type: string
                        id:
                          type: number
                        name:
                          minLength: 1
                          type: string
                        notificationSchemeEvents:
                          items:
                            properties:
                              event:
                                properties:
                                  description:
                                    minLength: 1
                                    type: string
                                  id:
                                    type: number
                                  name:
                                    minLength: 1
                                    type: string
                                required:
                                  - id
                                  - name
                                  - description
                                type: object
                              notifications:
                                items:
                                  properties:
                                    expand:
                                      minLength: 1
                                      type: string
                                    group:
                                      properties:
                                        name:
                                          minLength: 1
                                          type: string
                                        self:
                                          minLength: 1
                                          type: string
                                      required:
                                        - name
                                        - self
                                      type: object
                                    id:
                                      type: number
                                    notificationType:
                                      minLength: 1
                                      type: string
                                    parameter:
                                      minLength: 1
                                      type: string
                                  required:
                                    - id
                                    - notificationType
                                    - parameter
                                    - expand
                                minItems: 1
                                type: array
                                uniqueItems: true
                          minItems: 1
                          type: array
                          uniqueItems: true
                        self:
                          minLength: 1
                          type: string
                      required:
                        - expand
                        - id
                        - self
                        - name
                        - description
                    minItems: 1
                    type: array
                    uniqueItems: true
                required:
                  - maxResults
                  - startAt
                  - total
                  - isLast
                  - values
                type: object
  "/notificationscheme/{id}":
    get:
      description: Returns a notification scheme, including the list of events and the
        recipients who will receive notifications for those events.
      parameters:
        - description: "Use expand to include additional information in the response. This
            parameter accepts multiple values separated by a comma:"
          in: query
          name: expand
          schema:
            type: string
            enum:
              - all
              - field
              - group
              - notificationSchemeEvents
              - projectRole
              - user
        - description: The ID of the notification scheme. Use Get notification schemes
            paginated to get a list of notification scheme IDs.
          in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Returned if the request is successful.
          content:
            "*/*":
              schema:
                description: ""
                properties:
                  description:
                    minLength: 1
                    type: string
                  expand:
                    minLength: 1
                    type: string
                  id:
                    type: number
                  name:
                    minLength: 1
                    type: string
                  notificationSchemeEvents:
                    items:
                      properties:
                        event:
                          properties:
                            description:
                              minLength: 1
                              type: string
                            id:
                              type: number
                            name:
                              minLength: 1
                              type: string
                          required:
                            - id
                            - name
                            - description
                          type: object
                        notifications:
                          items:
                            properties:
                              expand:
                                minLength: 1
                                type: string
                              group:
                                properties:
                                  name:
                                    minLength: 1
                                    type: string
                                  self:
                                    minLength: 1
                                    type: string
                                required:
                                  - name
                                  - self
                                type: object
                              id:
                                type: number
                              notificationType:
                                minLength: 1
                                type: string
                              parameter:
                                minLength: 1
                                type: string
                            required:
                              - id
                              - notificationType
                              - parameter
                              - expand
                          minItems: 1
                          type: array
                          uniqueItems: true
                    minItems: 1
                    type: array
                    uniqueItems: true
                  self:
                    minLength: 1
                    type: string
                required:
                  - expand
                  - id
                  - self
                  - name
                  - description
                  - notificationSchemeEvents
                type: object
  /permissions:
    get:
      description: "Returns all permissions, including:"
      responses:
        "200":
          description: Returned if the request is successful.
          content:
            "*/*":
              schema:
                description: ""
                properties:
                  permissions:
                    properties:
                      BULK_CHANGE:
                        properties:
                          description:
                            minLength: 1
                            type: string
                          key:
                            minLength: 1
                            type: string
                          name:
                            minLength: 1
                            type: string
                          type:
                            minLength: 1
                            type: string
                        required:
                          - key
                          - name
                          - type
                          - description
                        type: object
                    required:
                      - BULK_CHANGE
                    type: object
                required:
                  - permissions
                type: object
  /permissions/project:
    post:
      description: Returns all the projects where the user is granted a list of project
        permissions.
      requestBody:
        content:
          application/json:
            schema:
              properties:
                permissions:
                  description: A list of permission keys.
                  items:
                    type: string
                  type: array
              type: object
      responses:
        "200":
          description: Returned if the request is successful.
          content:
            "*/*":
              schema:
                description: ""
                properties:
                  projects:
                    items:
                      properties:
                        id:
                          type: number
                        key:
                          minLength: 1
                          type: string
                      required:
                        - id
                        - key
                    minItems: 1
                    type: array
                    uniqueItems: true
                required:
                  - projects
                type: object
  /permissionscheme:
    get:
      description: Returns all permission schemes.
      parameters:
        - description: "Use expand to include additional information in the response. This
            parameter accepts multiple values separated by a comma. Note that
            permissions are included when you specify any value:"
          in: query
          name: expand
          schema:
            type: string
            enum:
              - all
              - field
              - group
              - permissions
              - projectRole
              - user
      responses:
        "200":
          description: Returned if the request is successful.
          content:
            "*/*":
              schema:
                description: ""
                properties:
                  permissionSchemes:
                    items:
                      properties:
                        description:
                          minLength: 1
                          type: string
                        id:
                          type: number
                        name:
                          minLength: 1
                          type: string
                        self:
                          minLength: 1
                          type: string
                      required:
                        - id
                        - self
                        - name
                        - description
                    minItems: 1
                    type: array
                    uniqueItems: true
                required:
                  - permissionSchemes
                type: object
    post:
      description: "Creates a new permission scheme. You can create a permission scheme
        with or without defining a set of permission grants. Permissions
        required: Administer Jira global permission."
      parameters:
        - description: "Use expand to include additional information in the response. This
            parameter accepts multiple values separated by a comma. Note that
            permissions are always included when you specify any value:"
          in: query
          name: expand
          schema:
            type: string
            enum:
              - all
              - field
              - group
              - permissions
              - projectRole
              - user
      requestBody:
        $ref: "#/components/requestBodies/Body13"
      responses:
        "201":
          description: Returned if the permission scheme is created successfully.
          content:
            "*/*":
              schema:
                description: ""
                properties:
                  description:
                    minLength: 1
                    type: string
                  id:
                    type: number
                  name:
                    minLength: 1
                    type: string
                  permissions:
                    items:
                      properties:
                        holder:
                          properties:
                            expand:
                              minLength: 1
                              type: string
                            parameter:
                              minLength: 1
                              type: string
                            type:
                              minLength: 1
                              type: string
                          required:
                            - type
                            - parameter
                            - expand
                          type: object
                        id:
                          type: number
                        permission:
                          minLength: 1
                          type: string
                        self:
                          minLength: 1
                          type: string
                      required:
                        - id
                        - self
                        - permission
                    minItems: 1
                    type: array
                    uniqueItems: true
                  self:
                    minLength: 1
                    type: string
                required:
                  - id
                  - self
                  - name
                  - description
                  - permissions
                type: object
  "/permissionscheme/{schemeId}":
    delete:
      description: "Deletes a permission scheme. Permissions required: Administer Jira
        global permission."
      parameters:
        - description: The ID of the permission scheme being deleted (e.g., 10000).
          in: path
          name: schemeId
          required: true
          schema:
            type: integer
      responses:
        "204":
          description: Returned if the permission scheme is deleted successfully.
    get:
      description: "Returns a permission scheme. Permissions required: Permission to log in
        to Jira."
      parameters:
        - description: "Use expand to include additional information in the response. This
            parameter accepts multiple values separated by a comma. Note that
            permissions are included when you specify any value:"
          in: query
          name: expand
          schema:
            type: string
            enum:
              - all
              - field
              - group
              - permissions
              - projectRole
              - user
        - description: The ID of the permission scheme to return (e.g., 10000).
          in: path
          name: schemeId
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Returned if the request is successful.
          content:
            "*/*":
              schema:
                description: ""
                properties:
                  description:
                    minLength: 1
                    type: string
                  id:
                    type: number
                  name:
                    minLength: 1
                    type: string
                  permissions:
                    items:
                      properties:
                        holder:
                          properties:
                            expand:
                              minLength: 1
                              type: string
                            parameter:
                              minLength: 1
                              type: string
                            type:
                              minLength: 1
                              type: string
                          required:
                            - type
                            - parameter
                            - expand
                          type: object
                        id:
                          type: number
                        permission:
                          minLength: 1
                          type: string
                        self:
                          minLength: 1
                          type: string
                      required:
                        - id
                        - self
                        - permission
                    minItems: 1
                    type: array
                    uniqueItems: true
                  self:
                    minLength: 1
                    type: string
                required:
                  - id
                  - self
                  - name
                  - description
                  - permissions
                type: object
    put:
      description: "Updates a permission scheme. Below are some important things to note
        when using this resource:"
      parameters:
        - description: "Use expand to include additional information in the response. This
            parameter accepts multiple values separated by a comma. Note that
            permissions are always included when you specify any value:"
          in: query
          name: expand
          schema:
            type: string
            enum:
              - all
              - field
              - group
              - permissions
              - projectRole
              - user
        - description: The ID of the permission scheme to update (e.g., 10000).
          in: path
          name: schemeId
          required: true
          schema:
            type: integer
      requestBody:
        $ref: "#/components/requestBodies/Body13"
      responses:
        "200":
          description: Returned if the scheme is updated successfully.
          content:
            "*/*":
              schema:
                description: ""
                properties:
                  description:
                    minLength: 1
                    type: string
                  id:
                    type: number
                  name:
                    minLength: 1
                    type: string
                  permissions:
                    items:
                      properties:
                        holder:
                          properties:
                            expand:
                              minLength: 1
                              type: string
                            parameter:
                              minLength: 1
                              type: string
                            type:
                              minLength: 1
                              type: string
                          required:
                            - type
                            - parameter
                            - expand
                          type: object
                        id:
                          type: number
                        permission:
                          minLength: 1
                          type: string
                        self:
                          minLength: 1
                          type: string
                      required:
                        - id
                        - self
                        - permission
                    minItems: 1
                    type: array
                    uniqueItems: true
                  self:
                    minLength: 1
                    type: string
                required:
                  - id
                  - self
                  - name
                  - description
                  - permissions
                type: object
  "/permissionscheme/{schemeId}/permission":
    get:
      description: "Returns all permission grants for a permission scheme. Permissions
        required: Permission to log in to Jira."
      parameters:
        - description: "Use expand to include additional information in the response. This
            parameter accepts multiple values separated by a comma. Note that
            permissions are always included when you specify any value:"
          in: query
          name: expand
          schema:
            type: string
            enum:
              - permissions
              - user
              - group
              - projectRole
              - field
              - all
        - description: The ID of the permission scheme (e.g., 10010).
          in: path
          name: schemeId
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Returned if the request is successful.
          content:
            "*/*":
              schema:
                description: ""
                properties:
                  expand:
                    minLength: 1
                    type: string
                  permissions:
                    items:
                      properties:
                        holder:
                          properties:
                            expand:
                              minLength: 1
                              type: string
                            parameter:
                              minLength: 1
                              type: string
                            type:
                              minLength: 1
                              type: string
                          required:
                            - type
                            - parameter
                            - expand
                          type: object
                        id:
                          type: number
                        permission:
                          minLength: 1
                          type: string
                        self:
                          minLength: 1
                          type: string
                      required:
                        - id
                        - self
                        - permission
                    minItems: 1
                    type: array
                    uniqueItems: true
                required:
                  - permissions
                  - expand
                type: object
    post:
      description: "Creates a new permission grant in the given permission scheme.
        Permissions required: Administer Jira global permission."
      parameters:
        - description: "Use expand to include additional information in the response. This
            parameter accepts multiple values separated by a comma. Note that
            permissions are always included when you specify any value:"
          in: query
          name: expand
          schema:
            type: string
            enum:
              - permissions
              - user
              - group
              - projectRole
              - field
              - all
        - description: The ID of the permission scheme in which to create a new permission
            grant.
          in: path
          name: schemeId
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              properties:
                holder:
                  description: The user or group being granted the permission. It consists
                    of a type and a type-dependent parameter. See holderfor more
                    information.
                  type: object
                permission:
                  description: The permission to grant. Choose from the list of built-in
                    permissions or from any custom permissions that have been
                    added by apps. For more information about custom
                    permissions, see the project permission and global
                    permission module documentation.
                  type: string
              type: object
      responses:
        "201":
          description: Returned if the scheme permission is created successfully.
          content:
            "*/*":
              schema:
                description: ""
                properties:
                  holder:
                    properties:
                      expand:
                        minLength: 1
                        type: string
                      parameter:
                        minLength: 1
                        type: string
                      type:
                        minLength: 1
                        type: string
                    required:
                      - type
                      - parameter
                      - expand
                    type: object
                  id:
                    type: number
                  permission:
                    minLength: 1
                    type: string
                  self:
                    minLength: 1
                    type: string
                required:
                  - id
                  - self
                  - holder
                  - permission
                type: object
  "/permissionscheme/{schemeId}/permission/{permissionId}":
    delete:
      description: "Deletes a permission grant from a permission scheme. See About
        permission schemes and grants for more details. Permissions required:
        Administer Jira global permission."
      parameters:
        - description: The ID of the permission grant to delete (e.g., 10847).
          in: path
          name: permissionId
          required: true
          schema:
            type: integer
        - description: The ID of the permission scheme to delete the permission grant from
            (e.g., 10000).
          in: path
          name: schemeId
          required: true
          schema:
            type: integer
      responses:
        "204":
          description: Returned if the permission grant is deleted successfully.
    get:
      description: "Returns a permission grant. Permissions required: Permission to log in
        to Jira."
      parameters:
        - description: "Use expand to include additional information in the response. This
            parameter accepts multiple values separated by a comma. Note that
            permissions are always included when you specify any value:"
          in: query
          name: expand
          schema:
            type: string
            enum:
              - all
              - field
              - group
              - permissions
              - projectRole
              - user
        - description: The ID of the permission grant (e.g., 10000).
          in: path
          name: permissionId
          required: true
          schema:
            type: integer
        - description: The ID of the permission scheme (e.g., 10010).
          in: path
          name: schemeId
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Returned if the request is successful.
          content:
            "*/*":
              schema:
                description: ""
                properties:
                  holder:
                    properties:
                      expand:
                        minLength: 1
                        type: string
                      parameter:
                        minLength: 1
                        type: string
                      type:
                        minLength: 1
                        type: string
                    required:
                      - type
                      - parameter
                      - expand
                    type: object
                  id:
                    type: number
                  permission:
                    minLength: 1
                    type: string
                  self:
                    minLength: 1
                    type: string
                required:
                  - id
                  - self
                  - holder
                  - permission
                type: object
  /priority:
    get:
      description: Returns the list of all issue priorities.
      responses:
        "200":
          description: Returned if the request is successful.
          content:
            "*/*":
              schema:
                description: ""
                items:
                  properties:
                    description:
                      minLength: 1
                      type: string
                    iconUrl:
                      minLength: 1
                      type: string
                    id:
                      minLength: 1
                      type: string
                    name:
                      minLength: 1
                      type: string
                    self:
                      minLength: 1
                      type: string
                    statusColor:
                      minLength: 1
                      type: string
                  required:
                    - self
                    - statusColor
                    - description
                    - iconUrl
                    - name
                    - id
                  type: object
                minItems: 1
                type: array
                uniqueItems: true
  "/priority/{id}":
    get:
      description: Returns an issue priority.
      parameters:
        - description: The ID of the issue priority.
          in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Returned if the request is successful.
          content:
            "*/*":
              schema:
                description: ""
                properties:
                  description:
                    minLength: 1
                    type: string
                  iconUrl:
                    minLength: 1
                    type: string
                  id:
                    minLength: 1
                    type: string
                  name:
                    minLength: 1
                    type: string
                  self:
                    minLength: 1
                    type: string
                  statusColor:
                    minLength: 1
                    type: string
                required:
                  - self
                  - statusColor
                  - description
                  - iconUrl
                  - name
                  - id
                type: object
  /project:
    get:
      description: Returns all projects visible to the currently logged in user.
        Deprecated, use Get projects paginated that supports search and
        pagination. For projects to be visible, the authenticated user must be
        granted either Browse projects or Administer projects permissions. If no
        user is logged in, it returns all projects that are visible for
        anonymous users.
      parameters:
        - description: "Use expand to include additional information in the response. This
            parameter accepts multiple values separated by a comma:"
          in: query
          name: expand
          schema:
            type: string
            enum:
              - description
              - issueTypes
              - lead
              - projectKeys
        - description: Returns the most recently accessed projects for the current user.
            You may specify the number of results to return up to a maximum of
            20. If no user is logged in, then the recently accessed projects
            will be returned based on the current HTTP session.
          in: query
          name: recent
          schema:
            type: integer
      responses:
        "200":
          description: Returns a list of projects visible to the current user or visible
            with anonymous access if no user is logged in.
          content:
            "*/*":
              schema:
                description: ""
                items:
                  properties:
                    avatarUrls:
                      properties:
                        16x16:
                          minLength: 1
                          type: string
                        24x24:
                          minLength: 1
                          type: string
                        32x32:
                          minLength: 1
                          type: string
                        48x48:
                          minLength: 1
                          type: string
                      required:
                        - 48x48
                        - 24x24
                        - 16x16
                        - 32x32
                      type: object
                    id:
                      minLength: 1
                      type: string
                    key:
                      minLength: 1
                      type: string
                    name:
                      minLength: 1
                      type: string
                    projectCategory:
                      properties:
                        description:
                          minLength: 1
                          type: string
                        id:
                          minLength: 1
                          type: string
                        name:
                          minLength: 1
                          type: string
                        self:
                          minLength: 1
                          type: string
                      required:
                        - self
                        - id
                        - name
                        - description
                      type: object
                    self:
                      minLength: 1
                      type: string
                    simplified:
                      type: boolean
                    style:
                      minLength: 1
                      type: string
                  required:
                    - self
                    - id
                    - key
                    - name
                    - avatarUrls
                    - projectCategory
                    - simplified
                    - style
                  type: object
                minItems: 1
                type: array
                uniqueItems: true
    post:
      description: Creates a new project.
      requestBody:
        $ref: "#/components/requestBodies/Body14"
      responses:
        "201":
          description: Returned if the project was created successfully.
          content:
            "*/*":
              schema:
                description: ""
                properties:
                  id:
                    type: number
                  key:
                    minLength: 1
                    type: string
                  self:
                    minLength: 1
                    type: string
                required:
                  - self
                  - id
                  - key
                type: object
  /project/search:
    get:
      description: Returns projects visible to the currently logged in user. For projects
        to be visible, the authenticated user must be granted either Browse
        projects or Administer projects permissions. If no user is logged in,
        then all projects visible to anonymous users are returned.
      parameters:
        - description: Filter results by projects for which the calling user has permission
            to perform the given action. The view action corresponds with the
            Browse projects project permission, and the edit action corresponds
            with Administer project permissions.
          in: query
          name: action
          schema:
            type: string
        - description: The ID of the project's category. A complete list of category IDs
            can be found using the Get all project categories resource.
          in: query
          name: categoryId
          schema:
            type: integer
        - description: "Use expand to include additional information in the response. This
            parameter accepts multiple values separated by a comma:"
          in: query
          name: expand
          schema:
            type: string
            enum:
              - description
              - projectKeys
              - lead
              - issueTypes
              - url
        - description: The maximum number of items to return per page. Max 50.
          in: query
          name: maxResults
          schema:
            type: integer
        - description: "Order the results by a particular field. If the orderBy field is
            not set, then projects are listed in ascending order by project
            key:"
          in: query
          name: orderBy
          schema:
            type: string
            enum:
              - category
              - key
              - name
              - owner
        - description: Filter the results using a literal string. Projects with a matching
            key or name are returned (case insensitive).
          in: query
          name: query
          schema:
            type: string
        - description: The starting index of the first item returned in the page of results
            (page offset). The base index is 0.
          in: query
          name: startAt
          schema:
            type: integer
        - description: Orders results by the project type. This parameter accepts multiple
            values separated by a comma. Valid values are business,
            service_desk, and software.
          in: query
          name: typeKey
          schema:
            type: string
      responses:
        "200":
          description: Returned if the request is successful. Returns a single page of
            projects.
          content:
            "*/*":
              schema:
                description: ""
                properties:
                  isLast:
                    type: boolean
                  maxResults:
                    type: number
                  nextPage:
                    minLength: 1
                    type: string
                  self:
                    minLength: 1
                    type: string
                  startAt:
                    type: number
                  total:
                    type: number
                  values:
                    items:
                      properties:
                        avatarUrls:
                          properties:
                            16x16:
                              minLength: 1
                              type: string
                            24x24:
                              minLength: 1
                              type: string
                            32x32:
                              minLength: 1
                              type: string
                            48x48:
                              minLength: 1
                              type: string
                          required:
                            - 48x48
                            - 24x24
                            - 16x16
                            - 32x32
                          type: object
                        id:
                          minLength: 1
                          type: string
                        key:
                          minLength: 1
                          type: string
                        name:
                          minLength: 1
                          type: string
                        projectCategory:
                          properties:
                            description:
                              minLength: 1
                              type: string
                            id:
                              minLength: 1
                              type: string
                            name:
                              minLength: 1
                              type: string
                            self:
                              minLength: 1
                              type: string
                          required:
                            - self
                            - id
                            - name
                            - description
                          type: object
                        self:
                          minLength: 1
                          type: string
                        simplified:
                          type: boolean
                        style:
                          minLength: 1
                          type: string
                      required:
                        - self
                        - id
                        - key
                        - name
                        - simplified
                        - style
                    minItems: 1
                    type: array
                    uniqueItems: true
                required:
                  - self
                  - nextPage
                  - maxResults
                  - startAt
                  - total
                  - isLast
                  - values
                type: object
  /project/type:
    get:
      description: Returns all project types, whether or not the instance has a valid
        license for each type.
      responses:
        "200":
          description: Returned if the request is successful.
          content:
            "*/*":
              schema:
                description: ""
                items:
                  properties:
                    color:
                      minLength: 1
                      type: string
                    descriptionI18nKey:
                      minLength: 1
                      type: string
                    formattedKey:
                      minLength: 1
                      type: string
                    icon:
                      minLength: 1
                      type: string
                    key:
                      minLength: 1
                      type: string
                  required:
                    - key
                    - formattedKey
                    - descriptionI18nKey
                    - icon
                    - color
                  type: object
                minItems: 1
                type: array
                uniqueItems: true
  "/project/type/{projectTypeKey}":
    get:
      description: Returns a project type.
      parameters:
        - description: The key of the project type.
          in: path
          name: projectTypeKey
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Returned if the request is successful.
          content:
            "*/*":
              schema:
                description: ""
                properties:
                  color:
                    minLength: 1
                    type: string
                  descriptionI18nKey:
                    minLength: 1
                    type: string
                  formattedKey:
                    minLength: 1
                    type: string
                  icon:
                    minLength: 1
                    type: string
                  key:
                    minLength: 1
                    type: string
                required:
                  - key
                  - formattedKey
                  - descriptionI18nKey
                  - icon
                  - color
                type: object
  "/project/type/{projectTypeKey}/accessible":
    get:
      description: Returns a project type if it is accessible to the logged in user.
      parameters:
        - description: The key of the project type.
          in: path
          name: projectTypeKey
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Returned if the request is successful.
          content:
            "*/*":
              schema:
                description: ""
                properties:
                  color:
                    minLength: 1
                    type: string
                  descriptionI18nKey:
                    minLength: 1
                    type: string
                  formattedKey:
                    minLength: 1
                    type: string
                  icon:
                    minLength: 1
                    type: string
                  key:
                    minLength: 1
                    type: string
                required:
                  - key
                  - formattedKey
                  - descriptionI18nKey
                  - icon
                  - color
                type: object
  "/project/{projectIdOrKey}":
    delete:
      description: Deletes an existing project.
      parameters:
        - description: The project ID or project key (case sensitive).
          in: path
          name: projectIdOrKey
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Returned if the project was deleted successfully.
    get:
      description: Returns the project details for the specified project.
      parameters:
        - description: "Use expand to include additional information in the response. This
            parameter accepts multiple values separated by a comma. Note that
            the project description, issue types, and project lead are included
            in all responses by default:"
          in: query
          name: expand
          schema:
            type: string
            enum:
              - description
              - issueTypes
              - lead
              - projectKeys
        - description: The project ID or project key (case sensitive).
          in: path
          name: projectIdOrKey
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Returned if successful.
          content:
            "*/*":
              schema:
                description: ""
                properties:
                  assigneeType:
                    minLength: 1
                    type: string
                  avatarUrls:
                    properties:
                      16x16:
                        minLength: 1
                        type: string
                      24x24:
                        minLength: 1
                        type: string
                      32x32:
                        minLength: 1
                        type: string
                      48x48:
                        minLength: 1
                        type: string
                    required:
                      - 48x48
                      - 24x24
                      - 16x16
                      - 32x32
                    type: object
                  components:
                    items:
                      properties:
                        assignee:
                          properties:
                            accountId:
                              minLength: 1
                              type: string
                            active:
                              type: boolean
                            avatarUrls:
                              properties:
                                16x16:
                                  minLength: 1
                                  type: string
                                24x24:
                                  minLength: 1
                                  type: string
                                32x32:
                                  minLength: 1
                                  type: string
                                48x48:
                                  minLength: 1
                                  type: string
                              required:
                                - 48x48
                                - 24x24
                                - 16x16
                                - 32x32
                              type: object
                            displayName:
                              minLength: 1
                              type: string
                            key:
                              minLength: 1
                              type: string
                            name:
                              minLength: 1
                              type: string
                            self:
                              minLength: 1
                              type: string
                          required:
                            - self
                            - key
                            - accountId
                            - name
                            - avatarUrls
                            - displayName
                            - active
                          type: object
                        assigneeType:
                          minLength: 1
                          type: string
                        description:
                          minLength: 1
                          type: string
                        id:
                          minLength: 1
                          type: string
                        isAssigneeTypeValid:
                          type: boolean
                        lead:
                          properties:
                            accountId:
                              minLength: 1
                              type: string
                            active:
                              type: boolean
                            avatarUrls:
                              properties:
                                16x16:
                                  minLength: 1
                                  type: string
                                24x24:
                                  minLength: 1
                                  type: string
                                32x32:
                                  minLength: 1
                                  type: string
                                48x48:
                                  minLength: 1
                                  type: string
                              required:
                                - 48x48
                                - 24x24
                                - 16x16
                                - 32x32
                              type: object
                            displayName:
                              minLength: 1
                              type: string
                            key:
                              minLength: 1
                              type: string
                            name:
                              minLength: 1
                              type: string
                            self:
                              minLength: 1
                              type: string
                          required:
                            - self
                            - key
                            - accountId
                            - name
                            - avatarUrls
                            - displayName
                            - active
                          type: object
                        name:
                          minLength: 1
                          type: string
                        project:
                          minLength: 1
                          type: string
                        projectId:
                          type: number
                        realAssignee:
                          properties:
                            accountId:
                              minLength: 1
                              type: string
                            active:
                              type: boolean
                            avatarUrls:
                              properties:
                                16x16:
                                  minLength: 1
                                  type: string
                                24x24:
                                  minLength: 1
                                  type: string
                                32x32:
                                  minLength: 1
                                  type: string
                                48x48:
                                  minLength: 1
                                  type: string
                              required:
                                - 48x48
                                - 24x24
                                - 16x16
                                - 32x32
                              type: object
                            displayName:
                              minLength: 1
                              type: string
                            key:
                              minLength: 1
                              type: string
                            name:
                              minLength: 1
                              type: string
                            self:
                              minLength: 1
                              type: string
                          required:
                            - self
                            - key
                            - accountId
                            - name
                            - avatarUrls
                            - displayName
                            - active
                          type: object
                        realAssigneeType:
                          minLength: 1
                          type: string
                        self:
                          minLength: 1
                          type: string
                      required:
                        - self
                        - id
                        - name
                        - description
                        - assigneeType
                        - realAssigneeType
                        - isAssigneeTypeValid
                        - project
                        - projectId
                    minItems: 1
                    type: array
                    uniqueItems: true
                  description:
                    minLength: 1
                    type: string
                  email:
                    minLength: 1
                    type: string
                  id:
                    minLength: 1
                    type: string
                  issueTypes:
                    items:
                      properties:
                        avatarId:
                          type: number
                        description:
                          minLength: 1
                          type: string
                        iconUrl:
                          minLength: 1
                          type: string
                        id:
                          minLength: 1
                          type: string
                        name:
                          minLength: 1
                          type: string
                        scope:
                          properties:
                            project:
                              properties:
                                id:
                                  minLength: 1
                                  type: string
                              required:
                                - id
                              type: object
                            type:
                              minLength: 1
                              type: string
                          required:
                            - type
                            - project
                          type: object
                        self:
                          minLength: 1
                          type: string
                        subtask:
                          type: boolean
                      required:
                        - self
                        - id
                        - description
                        - iconUrl
                        - name
                        - subtask
                        - avatarId
                    minItems: 1
                    type: array
                    uniqueItems: true
                  key:
                    minLength: 1
                    type: string
                  lead:
                    properties:
                      accountId:
                        minLength: 1
                        type: string
                      active:
                        type: boolean
                      avatarUrls:
                        properties:
                          16x16:
                            minLength: 1
                            type: string
                          24x24:
                            minLength: 1
                            type: string
                          32x32:
                            minLength: 1
                            type: string
                          48x48:
                            minLength: 1
                            type: string
                        required:
                          - 48x48
                          - 24x24
                          - 16x16
                          - 32x32
                        type: object
                      displayName:
                        minLength: 1
                        type: string
                      key:
                        minLength: 1
                        type: string
                      name:
                        minLength: 1
                        type: string
                      self:
                        minLength: 1
                        type: string
                    required:
                      - self
                      - key
                      - accountId
                      - name
                      - avatarUrls
                      - displayName
                      - active
                    type: object
                  name:
                    minLength: 1
                    type: string
                  projectCategory:
                    properties:
                      description:
                        minLength: 1
                        type: string
                      id:
                        minLength: 1
                        type: string
                      name:
                        minLength: 1
                        type: string
                      self:
                        minLength: 1
                        type: string
                    required:
                      - self
                      - id
                      - name
                      - description
                    type: object
                  roles:
                    properties:
                      Developers:
                        minLength: 1
                        type: string
                    required:
                      - Developers
                    type: object
                  self:
                    minLength: 1
                    type: string
                  simplified:
                    type: boolean
                  style:
                    minLength: 1
                    type: string
                  url:
                    minLength: 1
                    type: string
                  versions:
                    items:
                      properties: {}
                    type: array
                required:
                  - self
                  - id
                  - key
                  - description
                  - lead
                  - components
                  - issueTypes
                  - url
                  - email
                  - assigneeType
                  - versions
                  - name
                  - roles
                  - avatarUrls
                  - projectCategory
                  - simplified
                  - style
                type: object
    put:
      description: Updates the project details of an existing project.
      parameters:
        - description: "Use expand to include additional information in the response. This
            parameter accepts multiple values separated by a comma. Note that
            the project description, issue types, and project lead are included
            in all responses by default:"
          in: query
          name: expand
          schema:
            type: string
            enum:
              - description
              - issueTypes
              - lead
              - projectKeys
        - description: The project ID or project key (case sensitive).
          in: path
          name: projectIdOrKey
          required: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/Body14"
      responses:
        "200":
          description: Returned if the project was updated successfully.
          content:
            "*/*":
              schema:
                description: ""
                properties:
                  assigneeType:
                    minLength: 1
                    type: string
                  avatarUrls:
                    properties:
                      16x16:
                        minLength: 1
                        type: string
                      24x24:
                        minLength: 1
                        type: string
                      32x32:
                        minLength: 1
                        type: string
                      48x48:
                        minLength: 1
                        type: string
                    required:
                      - 48x48
                      - 24x24
                      - 16x16
                      - 32x32
                    type: object
                  components:
                    items:
                      properties:
                        assignee:
                          properties:
                            accountId:
                              minLength: 1
                              type: string
                            active:
                              type: boolean
                            avatarUrls:
                              properties:
                                16x16:
                                  minLength: 1
                                  type: string
                                24x24:
                                  minLength: 1
                                  type: string
                                32x32:
                                  minLength: 1
                                  type: string
                                48x48:
                                  minLength: 1
                                  type: string
                              required:
                                - 48x48
                                - 24x24
                                - 16x16
                                - 32x32
                              type: object
                            displayName:
                              minLength: 1
                              type: string
                            key:
                              minLength: 1
                              type: string
                            name:
                              minLength: 1
                              type: string
                            self:
                              minLength: 1
                              type: string
                          required:
                            - self
                            - key
                            - accountId
                            - name
                            - avatarUrls
                            - displayName
                            - active
                          type: object
                        assigneeType:
                          minLength: 1
                          type: string
                        description:
                          minLength: 1
                          type: string
                        id:
                          minLength: 1
                          type: string
                        isAssigneeTypeValid:
                          type: boolean
                        lead:
                          properties:
                            accountId:
                              minLength: 1
                              type: string
                            active:
                              type: boolean
                            avatarUrls:
                              properties:
                                16x16:
                                  minLength: 1
                                  type: string
                                24x24:
                                  minLength: 1
                                  type: string
                                32x32:
                                  minLength: 1
                                  type: string
                                48x48:
                                  minLength: 1
                                  type: string
                              required:
                                - 48x48
                                - 24x24
                                - 16x16
                                - 32x32
                              type: object
                            displayName:
                              minLength: 1
                              type: string
                            key:
                              minLength: 1
                              type: string
                            name:
                              minLength: 1
                              type: string
                            self:
                              minLength: 1
                              type: string
                          required:
                            - self
                            - key
                            - accountId
                            - name
                            - avatarUrls
                            - displayName
                            - active
                          type: object
                        name:
                          minLength: 1
                          type: string
                        project:
                          minLength: 1
                          type: string
                        projectId:
                          type: number
                        realAssignee:
                          properties:
                            accountId:
                              minLength: 1
                              type: string
                            active:
                              type: boolean
                            avatarUrls:
                              properties:
                                16x16:
                                  minLength: 1
                                  type: string
                                24x24:
                                  minLength: 1
                                  type: string
                                32x32:
                                  minLength: 1
                                  type: string
                                48x48:
                                  minLength: 1
                                  type: string
                              required:
                                - 48x48
                                - 24x24
                                - 16x16
                                - 32x32
                              type: object
                            displayName:
                              minLength: 1
                              type: string
                            key:
                              minLength: 1
                              type: string
                            name:
                              minLength: 1
                              type: string
                            self:
                              minLength: 1
                              type: string
                          required:
                            - self
                            - key
                            - accountId
                            - name
                            - avatarUrls
                            - displayName
                            - active
                          type: object
                        realAssigneeType:
                          minLength: 1
                          type: string
                        self:
                          minLength: 1
                          type: string
                      required:
                        - self
                        - id
                        - name
                        - description
                        - assigneeType
                        - realAssigneeType
                        - isAssigneeTypeValid
                        - project
                        - projectId
                    minItems: 1
                    type: array
                    uniqueItems: true
                  description:
                    minLength: 1
                    type: string
                  email:
                    minLength: 1
                    type: string
                  id:
                    minLength: 1
                    type: string
                  issueTypes:
                    items:
                      properties:
                        avatarId:
                          type: number
                        description:
                          minLength: 1
                          type: string
                        iconUrl:
                          minLength: 1
                          type: string
                        id:
                          minLength: 1
                          type: string
                        name:
                          minLength: 1
                          type: string
                        scope:
                          properties:
                            project:
                              properties:
                                id:
                                  minLength: 1
                                  type: string
                              required:
                                - id
                              type: object
                            type:
                              minLength: 1
                              type: string
                          required:
                            - type
                            - project
                          type: object
                        self:
                          minLength: 1
                          type: string
                        subtask:
                          type: boolean
                      required:
                        - self
                        - id
                        - description
                        - iconUrl
                        - name
                        - subtask
                        - avatarId
                    minItems: 1
                    type: array
                    uniqueItems: true
                  key:
                    minLength: 1
                    type: string
                  lead:
                    properties:
                      accountId:
                        minLength: 1
                        type: string
                      active:
                        type: boolean
                      avatarUrls:
                        properties:
                          16x16:
                            minLength: 1
                            type: string
                          24x24:
                            minLength: 1
                            type: string
                          32x32:
                            minLength: 1
                            type: string
                          48x48:
                            minLength: 1
                            type: string
                        required:
                          - 48x48
                          - 24x24
                          - 16x16
                          - 32x32
                        type: object
                      displayName:
                        minLength: 1
                        type: string
                      key:
                        minLength: 1
                        type: string
                      name:
                        minLength: 1
                        type: string
                      self:
                        minLength: 1
                        type: string
                    required:
                      - self
                      - key
                      - accountId
                      - name
                      - avatarUrls
                      - displayName
                      - active
                    type: object
                  name:
                    minLength: 1
                    type: string
                  projectCategory:
                    properties:
                      description:
                        minLength: 1
                        type: string
                      id:
                        minLength: 1
                        type: string
                      name:
                        minLength: 1
                        type: string
                      self:
                        minLength: 1
                        type: string
                    required:
                      - self
                      - id
                      - name
                      - description
                    type: object
                  roles:
                    properties:
                      Developers:
                        minLength: 1
                        type: string
                    required:
                      - Developers
                    type: object
                  self:
                    minLength: 1
                    type: string
                  simplified:
                    type: boolean
                  style:
                    minLength: 1
                    type: string
                  url:
                    minLength: 1
                    type: string
                  versions:
                    items:
                      properties: {}
                    type: array
                required:
                  - self
                  - id
                  - key
                  - description
                  - lead
                  - components
                  - issueTypes
                  - url
                  - email
                  - assigneeType
                  - versions
                  - name
                  - roles
                  - avatarUrls
                  - projectCategory
                  - simplified
                  - style
                type: object
  "/project/{projectIdOrKey}/avatar":
    put:
      description: Sets the avatar displayed for a project.
      parameters:
        - description: The ID or (case-sensitive) key of the project.
          in: path
          name: projectIdOrKey
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                id:
                  description: The ID of the avatar. Required when setting the project
                    avatar, otherwise read only.
                  type: string
              type: object
      responses:
        "204":
          description: Returned if request was successfully.
  "/project/{projectIdOrKey}/avatar/{id}":
    delete:
      description: Deletes a custom avatar from a project. Note that system avatars cannot
        be deleted.
      parameters:
        - description: The ID of the avatar.
          in: path
          name: id
          required: true
          schema:
            type: integer
        - description: The project ID or (case-sensitive) key.
          in: path
          name: projectIdOrKey
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Returned if request was successfully.
  "/project/{projectIdOrKey}/avatar2":
    post:
      description: Loads an avatar for a project.
      parameters:
        - description: The ID or (case-sensitive) key of the project.
          in: path
          name: projectIdOrKey
          required: true
          schema:
            type: string
        - description: The length of each side of the crop region.
          in: query
          name: size
          schema:
            type: integer
        - description: The X coordinate of the top-left corner of the crop region.
          in: query
          name: x
          schema:
            type: integer
        - description: The Y coordinate of the top-left corner of the crop region.
          in: query
          name: y
          schema:
            type: integer
      responses:
        "201":
          description: Returned if the request is successful.
          content:
            "*/*":
              schema:
                description: ""
                properties:
                  id:
                    minLength: 1
                    type: string
                  isDeletable:
                    type: boolean
                  isSelected:
                    type: boolean
                  isSystemAvatar:
                    type: boolean
                required:
                  - id
                  - isSystemAvatar
                  - isSelected
                  - isDeletable
                type: object
  "/project/{projectIdOrKey}/avatars":
    get:
      description: Returns all project avatars, grouped by system and custom avatars.
      parameters:
        - description: The ID or (case-sensitive) key of the project.
          in: path
          name: projectIdOrKey
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Returned if request is successful.
          content:
            "*/*":
              schema:
                description: ""
                properties:
                  custom:
                    items:
                      properties:
                        id:
                          minLength: 1
                          type: string
                        isDeletable:
                          type: boolean
                        isSelected:
                          type: boolean
                        isSystemAvatar:
                          type: boolean
                        urls:
                          properties:
                            16x16:
                              minLength: 1
                              type: string
                            24x24:
                              minLength: 1
                              type: string
                            32x32:
                              minLength: 1
                              type: string
                            48x48:
                              minLength: 1
                              type: string
                          required:
                            - 16x16
                            - 24x24
                            - 32x32
                            - 48x48
                          type: object
                      required:
                        - id
                        - isSystemAvatar
                        - isSelected
                        - isDeletable
                    minItems: 1
                    type: array
                    uniqueItems: true
                  system:
                    items:
                      properties:
                        id:
                          minLength: 1
                          type: string
                        isDeletable:
                          type: boolean
                        isSelected:
                          type: boolean
                        isSystemAvatar:
                          type: boolean
                        urls:
                          properties:
                            16x16:
                              minLength: 1
                              type: string
                            24x24:
                              minLength: 1
                              type: string
                            32x32:
                              minLength: 1
                              type: string
                            48x48:
                              minLength: 1
                              type: string
                          required:
                            - 16x16
                            - 24x24
                            - 32x32
                            - 48x48
                          type: object
                      required:
                        - id
                        - isSystemAvatar
                        - isSelected
                        - isDeletable
                    minItems: 1
                    type: array
                    uniqueItems: true
                required:
                  - system
                  - custom
                type: object
  "/project/{projectIdOrKey}/component":
    get:
      description: Returns a paginated representation of all components existing in a
        single project. See the Get project components resource if you want to
        get a full list of versions without pagination.
      parameters:
        - description: The maximum number of components to return per page. Max 50.
          in: query
          name: maxResults
          schema:
            type: integer
        - description: "Order the results by a particular field:"
          in: query
          name: orderBy
          schema:
            type: string
            enum:
              - description
              - issueCount
              - lead
              - name
        - description: The project ID or project key (case sensitive).
          in: path
          name: projectIdOrKey
          required: true
          schema:
            type: string
        - description: Filter the results using a literal string. Components with a
            matching name or description are returned (case insensitive).
          in: query
          name: query
          schema:
            type: string
        - description: The starting index of the returned list of components. The base
            index is 0.
          in: query
          name: startAt
          schema:
            type: integer
      responses:
        "200":
          description: Returns a single page of components.
          content:
            "*/*":
              schema:
                description: ""
                properties:
                  isLast:
                    type: boolean
                  maxResults:
                    type: number
                  nextPage:
                    minLength: 1
                    type: string
                  self:
                    minLength: 1
                    type: string
                  startAt:
                    type: number
                  total:
                    type: number
                  values:
                    items:
                      properties:
                        assignee:
                          properties:
                            accountId:
                              minLength: 1
                              type: string
                            active:
                              type: boolean
                            avatarUrls:
                              properties:
                                16x16:
                                  minLength: 1
                                  type: string
                                24x24:
                                  minLength: 1
                                  type: string
                                32x32:
                                  minLength: 1
                                  type: string
                                48x48:
                                  minLength: 1
                                  type: string
                              required:
                                - 48x48
                                - 24x24
                                - 16x16
                                - 32x32
                              type: object
                            displayName:
                              minLength: 1
                              type: string
                            key:
                              minLength: 1
                              type: string
                            name:
                              minLength: 1
                              type: string
                            self:
                              minLength: 1
                              type: string
                          required:
                            - self
                            - key
                            - accountId
                            - name
                            - avatarUrls
                            - displayName
                            - active
                          type: object
                        assigneeType:
                          minLength: 1
                          type: string
                        description:
                          minLength: 1
                          type: string
                        id:
                          minLength: 1
                          type: string
                        isAssigneeTypeValid:
                          type: boolean
                        issueCount:
                          type: number
                        lead:
                          properties:
                            accountId:
                              minLength: 1
                              type: string
                            active:
                              type: boolean
                            avatarUrls:
                              properties:
                                16x16:
                                  minLength: 1
                                  type: string
                                24x24:
                                  minLength: 1
                                  type: string
                                32x32:
                                  minLength: 1
                                  type: string
                                48x48:
                                  minLength: 1
                                  type: string
                              required:
                                - 48x48
                                - 24x24
                                - 16x16
                                - 32x32
                              type: object
                            displayName:
                              minLength: 1
                              type: string
                            key:
                              minLength: 1
                              type: string
                            name:
                              minLength: 1
                              type: string
                            self:
                              minLength: 1
                              type: string
                          required:
                            - self
                            - key
                            - accountId
                            - name
                            - avatarUrls
                            - displayName
                            - active
                          type: object
                        name:
                          minLength: 1
                          type: string
                        project:
                          minLength: 1
                          type: string
                        projectId:
                          type: number
                        realAssignee:
                          properties:
                            accountId:
                              minLength: 1
                              type: string
                            active:
                              type: boolean
                            avatarUrls:
                              properties:
                                16x16:
                                  minLength: 1
                                  type: string
                                24x24:
                                  minLength: 1
                                  type: string
                                32x32:
                                  minLength: 1
                                  type: string
                                48x48:
                                  minLength: 1
                                  type: string
                              required:
                                - 48x48
                                - 24x24
                                - 16x16
                                - 32x32
                              type: object
                            displayName:
                              minLength: 1
                              type: string
                            key:
                              minLength: 1
                              type: string
                            name:
                              minLength: 1
                              type: string
                            self:
                              minLength: 1
                              type: string
                          required:
                            - self
                            - key
                            - accountId
                            - name
                            - avatarUrls
                            - displayName
                            - active
                          type: object
                        realAssigneeType:
                          minLength: 1
                          type: string
                        self:
                          minLength: 1
                          type: string
                      required:
                        - issueCount
                        - description
                        - self
                        - project
                        - assigneeType
                        - projectId
                        - isAssigneeTypeValid
                        - realAssigneeType
                        - name
                        - id
                    minItems: 1
                    type: array
                    uniqueItems: true
                required:
                  - self
                  - nextPage
                  - maxResults
                  - startAt
                  - total
                  - isLast
                  - values
                type: object
  "/project/{projectIdOrKey}/components":
    get:
      description: Returns all components existing in a single project. See the Get project
        components paginated resource if you want to get a full list of
        components with pagination.
      parameters:
        - description: The project ID or project key (case sensitive).
          in: path
          name: projectIdOrKey
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Returned if the project exists and the user has permission to view
            its components.
          content:
            "*/*":
              schema:
                description: ""
                items:
                  properties:
                    assignee:
                      properties:
                        accountId:
                          minLength: 1
                          type: string
                        active:
                          type: boolean
                        avatarUrls:
                          properties:
                            16x16:
                              minLength: 1
                              type: string
                            24x24:
                              minLength: 1
                              type: string
                            32x32:
                              minLength: 1
                              type: string
                            48x48:
                              minLength: 1
                              type: string
                          required:
                            - 48x48
                            - 24x24
                            - 16x16
                            - 32x32
                          type: object
                        displayName:
                          minLength: 1
                          type: string
                        key:
                          minLength: 1
                          type: string
                        name:
                          minLength: 1
                          type: string
                        self:
                          minLength: 1
                          type: string
                      required:
                        - self
                        - key
                        - accountId
                        - name
                        - avatarUrls
                        - displayName
                        - active
                      type: object
                    assigneeType:
                      minLength: 1
                      type: string
                    description:
                      minLength: 1
                      type: string
                    id:
                      minLength: 1
                      type: string
                    isAssigneeTypeValid:
                      type: boolean
                    lead:
                      properties:
                        accountId:
                          minLength: 1
                          type: string
                        active:
                          type: boolean
                        avatarUrls:
                          properties:
                            16x16:
                              minLength: 1
                              type: string
                            24x24:
                              minLength: 1
                              type: string
                            32x32:
                              minLength: 1
                              type: string
                            48x48:
                              minLength: 1
                              type: string
                          required:
                            - 48x48
                            - 24x24
                            - 16x16
                            - 32x32
                          type: object
                        displayName:
                          minLength: 1
                          type: string
                        key:
                          minLength: 1
                          type: string
                        name:
                          minLength: 1
                          type: string
                        self:
                          minLength: 1
                          type: string
                      required:
                        - self
                        - key
                        - accountId
                        - name
                        - avatarUrls
                        - displayName
                        - active
                      type: object
                    name:
                      minLength: 1
                      type: string
                    project:
                      minLength: 1
                      type: string
                    projectId:
                      type: number
                    realAssignee:
                      properties:
                        accountId:
                          minLength: 1
                          type: string
                        active:
                          type: boolean
                        avatarUrls:
                          properties:
                            16x16:
                              minLength: 1
                              type: string
                            24x24:
                              minLength: 1
                              type: string
                            32x32:
                              minLength: 1
                              type: string
                            48x48:
                              minLength: 1
                              type: string
                          required:
                            - 48x48
                            - 24x24
                            - 16x16
                            - 32x32
                          type: object
                        displayName:
                          minLength: 1
                          type: string
                        key:
                          minLength: 1
                          type: string
                        name:
                          minLength: 1
                          type: string
                        self:
                          minLength: 1
                          type: string
                      required:
                        - self
                        - key
                        - accountId
                        - name
                        - avatarUrls
                        - displayName
                        - active
                      type: object
                    realAssigneeType:
                      minLength: 1
                      type: string
                    self:
                      minLength: 1
                      type: string
                  required:
                    - self
                    - id
                    - name
                    - description
                    - lead
                    - assigneeType
                    - assignee
                    - realAssigneeType
                    - realAssignee
                    - isAssigneeTypeValid
                    - project
                    - projectId
                  type: object
                minItems: 1
                type: array
                uniqueItems: true
  "/project/{projectIdOrKey}/properties":
    get:
      description: Returns all project property keys for the project.
      parameters:
        - description: The project ID or project key (case sensitive).
          in: path
          name: projectIdOrKey
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Returned if the request was successful.
          content:
            "*/*":
              schema:
                description: ""
                properties:
                  keys:
                    items:
                      properties:
                        key:
                          minLength: 1
                          type: string
                        self:
                          minLength: 1
                          type: string
                      required:
                        - self
                        - key
                    minItems: 1
                    type: array
                    uniqueItems: true
                required:
                  - keys
                type: object
  "/project/{projectIdOrKey}/properties/{propertyKey}":
    delete:
      description: Removes the property from the project.
      parameters:
        - description: The project ID or project key (case sensitive).
          in: path
          name: projectIdOrKey
          required: true
          schema:
            type: string
        - description: The project property key. Use Get project property keys to get a
            list of all project property keys.
          in: path
          name: propertyKey
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Returned if the project property was deleted successfully.
    get:
      description: Returns the value of the project property.
      parameters:
        - description: The project ID or project key (case sensitive).
          in: path
          name: projectIdOrKey
          required: true
          schema:
            type: string
        - description: The project property key. Use Get project property keys to get a
            list of all project property keys.
          in: path
          name: propertyKey
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Returned if the request was successful.
          content:
            "*/*":
              schema:
                description: ""
                properties:
                  key:
                    minLength: 1
                    type: string
                  value:
                    properties:
                      stride.conversation.id:
                        minLength: 1
                        type: string
                      support.time:
                        minLength: 1
                        type: string
                    required:
                      - stride.conversation.id
                      - support.time
                    type: object
                required:
                  - key
                  - value
                type: object
    put:
      description: Sets the value of the project property. You can use project properties
        to store custom data against the project.
      parameters:
        - description: The project ID or project key (case sensitive).
          in: path
          name: projectIdOrKey
          required: true
          schema:
            type: string
        - description: The key of the project property. The maximum length is 255 bytes.
          in: path
          name: propertyKey
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Returned if the project property is successfully updated.
  "/project/{projectIdOrKey}/role":
    get:
      description: Returns a list of project roles for the project.
      parameters:
        - description: The project ID or project key (case sensitive).
          in: path
          name: projectIdOrKey
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Returned if the request is successful.
          content:
            "*/*":
              schema:
                description: ""
                properties:
                  Administrators:
                    minLength: 1
                    type: string
                  Developers:
                    minLength: 1
                    type: string
                  Users:
                    minLength: 1
                    type: string
                required:
                  - Administrators
                  - Users
                  - Developers
                type: object
  "/project/{projectIdOrKey}/role/{id}":
    delete:
      description: Deletes actors from a project role for the project.
      parameters:
        - description: The name of the group to remove from the project role.
          in: query
          name: group
          schema:
            type: string
        - description: The ID of the project role. Use Get all project roles to get a list
            of project role IDs.
          in: path
          name: id
          required: true
          schema:
            type: integer
        - description: The project ID or project key (case sensitive).
          in: path
          name: projectIdOrKey
          required: true
          schema:
            type: string
        - description: The user account ID of the user to remove from the project role.
          in: query
          name: user
          schema:
            type: string
      responses:
        "204":
          description: Returned if the request is successful.
    get:
      description: Returns the project role's details and actors associated with the
        project. The list of actors is sorted by display name.
      parameters:
        - description: The ID of the project role. Use Get all project roles to get a list
            of project role IDs.
          in: path
          name: id
          required: true
          schema:
            type: integer
        - description: The project ID or project key (case sensitive).
          in: path
          name: projectIdOrKey
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Returned if the request is successful.
          content:
            "*/*":
              schema:
                description: ""
                properties:
                  actors:
                    items:
                      properties:
                        actorGroup:
                          properties:
                            displayName:
                              minLength: 1
                              type: string
                            name:
                              minLength: 1
                              type: string
                          required:
                            - name
                            - displayName
                          type: object
                        displayName:
                          minLength: 1
                          type: string
                        id:
                          type: number
                        name:
                          minLength: 1
                          type: string
                        type:
                          minLength: 1
                          type: string
                      required:
                        - id
                        - displayName
                        - type
                        - name
                    minItems: 1
                    type: array
                    uniqueItems: true
                  description:
                    minLength: 1
                    type: string
                  id:
                    type: number
                  name:
                    minLength: 1
                    type: string
                  scope:
                    properties:
                      project:
                        properties:
                          id:
                            minLength: 1
                            type: string
                        required:
                          - id
                        type: object
                      type:
                        minLength: 1
                        type: string
                    required:
                      - type
                      - project
                    type: object
                  self:
                    minLength: 1
                    type: string
                required:
                  - self
                  - name
                  - id
                  - description
                  - actors
                  - scope
                type: object
    post:
      description: Adds additional actors to a project role for the project.
      parameters:
        - description: The ID of the project role. Use Get all project roles to get a list
            of project role IDs.
          in: path
          name: id
          required: true
          schema:
            type: integer
        - description: The project ID or project key (case sensitive).
          in: path
          name: projectIdOrKey
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                group:
                  description: The name of the group to add.
                  items:
                    type: string
                  type: array
                user:
                  description: The user account ID of the user to add.
                  items:
                    type: string
                  type: array
              type: object
      responses:
        "200":
          description: Example response (application/json)
    put:
      description: Associates actors with the project role for the project, replacing all
        existing actors.
      parameters:
        - description: The ID of the project role. Use Get all project roles to get a list
            of project role IDs.
          in: path
          name: id
          required: true
          schema:
            type: integer
        - description: The project ID or project key (case sensitive).
          in: path
          name: projectIdOrKey
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                categorisedActors:
                  description: The actors to add to the project role for the project.
                    Provide the group name or account ID. User key may be
                    provided instead of account ID when not in GDPR-strict mode,
                    however this is deprecated behavior. Add groups using
                    atlassian-group-role-actor. Add users using
                    atlassian-user-role-actor.
                  type: object
                id:
                  description: The ID of the project role. Use Get all project roles to get
                    a list of project role IDs.
                  type: integer
              type: object
      responses:
        "200":
          description: Returned if the request is successful. The complete list of actors
            for the project is returned.
          content:
            "*/*":
              schema:
                description: ""
                properties:
                  actors:
                    items:
                      properties:
                        actorGroup:
                          properties:
                            displayName:
                              minLength: 1
                              type: string
                            name:
                              minLength: 1
                              type: string
                          required:
                            - name
                            - displayName
                          type: object
                        displayName:
                          minLength: 1
                          type: string
                        id:
                          type: number
                        name:
                          minLength: 1
                          type: string
                        type:
                          minLength: 1
                          type: string
                      required:
                        - id
                        - displayName
                        - type
                        - name
                    minItems: 1
                    type: array
                    uniqueItems: true
                  description:
                    minLength: 1
                    type: string
                  id:
                    type: number
                  name:
                    minLength: 1
                    type: string
                  scope:
                    properties:
                      project:
                        properties:
                          id:
                            minLength: 1
                            type: string
                        required:
                          - id
                        type: object
                      type:
                        minLength: 1
                        type: string
                    required:
                      - type
                      - project
                    type: object
                  self:
                    minLength: 1
                    type: string
                required:
                  - self
                  - name
                  - id
                  - description
                  - actors
                  - scope
                type: object
  "/project/{projectIdOrKey}/roledetails":
    get:
      description: Returns all project roles and the details for each role. Note that the
        list of project roles is common to all projects.
      parameters:
        - description: The project ID or project key (case sensitive).
          in: path
          name: projectIdOrKey
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Returned if the request is successful.
          content:
            "*/*":
              schema:
                description: ""
                items:
                  properties:
                    actors:
                      items:
                        properties:
                          actorGroup:
                            properties:
                              displayName:
                                minLength: 1
                                type: string
                              name:
                                minLength: 1
                                type: string
                            required:
                              - name
                              - displayName
                            type: object
                          displayName:
                            minLength: 1
                            type: string
                          id:
                            type: number
                          name:
                            minLength: 1
                            type: string
                          type:
                            minLength: 1
                            type: string
                        required:
                          - id
                          - displayName
                          - type
                          - name
                      minItems: 1
                      type: array
                      uniqueItems: true
                    description:
                      minLength: 1
                      type: string
                    id:
                      type: number
                    name:
                      minLength: 1
                      type: string
                    scope:
                      properties:
                        project:
                          properties:
                            id:
                              minLength: 1
                              type: string
                          required:
                            - id
                          type: object
                        type:
                          minLength: 1
                          type: string
                      required:
                        - type
                        - project
                      type: object
                    self:
                      minLength: 1
                      type: string
                  required:
                    - self
                    - name
                    - id
                    - description
                    - actors
                    - scope
                  type: object
                minItems: 1
                type: array
                uniqueItems: true
  "/project/{projectIdOrKey}/statuses":
    get:
      description: Returns the valid statuses for a project. The statuses are grouped by
        issue type, as each project has a set of valid issue types and each
        issue type has a set of valid statuses.
      parameters:
        - description: The project ID or project key (case sensitive).
          in: path
          name: projectIdOrKey
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Returns a list of issue types and valid statuses for each type.
          content:
            "*/*":
              schema:
                description: ""
                items:
                  properties:
                    id:
                      minLength: 1
                      type: string
                    name:
                      minLength: 1
                      type: string
                    self:
                      minLength: 1
                      type: string
                    statuses:
                      items:
                        properties:
                          description:
                            minLength: 1
                            type: string
                          iconUrl:
                            minLength: 1
                            type: string
                          id:
                            minLength: 1
                            type: string
                          name:
                            minLength: 1
                            type: string
                          self:
                            minLength: 1
                            type: string
                        required:
                          - self
                          - description
                          - iconUrl
                          - name
                          - id
                      minItems: 1
                      type: array
                      uniqueItems: true
                    subtask:
                      type: boolean
                  required:
                    - self
                    - id
                    - name
                    - subtask
                    - statuses
                  type: object
                minItems: 1
                type: array
                uniqueItems: true
  "/project/{projectIdOrKey}/type/{newProjectTypeKey}":
    put:
      description: Updates the project type.
      parameters:
        - description: The key of the new project type.
          in: path
          name: newProjectTypeKey
          required: true
          schema:
            type: string
        - description: The project ID or project key (case sensitive).
          in: path
          name: projectIdOrKey
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Returned if the project type was updated successfully.
          content:
            "*/*":
              schema:
                description: ""
                properties:
                  assigneeType:
                    minLength: 1
                    type: string
                  avatarUrls:
                    properties:
                      16x16:
                        minLength: 1
                        type: string
                      24x24:
                        minLength: 1
                        type: string
                      32x32:
                        minLength: 1
                        type: string
                      48x48:
                        minLength: 1
                        type: string
                    required:
                      - 48x48
                      - 24x24
                      - 16x16
                      - 32x32
                    type: object
                  components:
                    items:
                      properties:
                        assignee:
                          properties:
                            accountId:
                              minLength: 1
                              type: string
                            active:
                              type: boolean
                            avatarUrls:
                              properties:
                                16x16:
                                  minLength: 1
                                  type: string
                                24x24:
                                  minLength: 1
                                  type: string
                                32x32:
                                  minLength: 1
                                  type: string
                                48x48:
                                  minLength: 1
                                  type: string
                              required:
                                - 48x48
                                - 24x24
                                - 16x16
                                - 32x32
                              type: object
                            displayName:
                              minLength: 1
                              type: string
                            key:
                              minLength: 1
                              type: string
                            name:
                              minLength: 1
                              type: string
                            self:
                              minLength: 1
                              type: string
                          required:
                            - self
                            - key
                            - accountId
                            - name
                            - avatarUrls
                            - displayName
                            - active
                          type: object
                        assigneeType:
                          minLength: 1
                          type: string
                        description:
                          minLength: 1
                          type: string
                        id:
                          minLength: 1
                          type: string
                        isAssigneeTypeValid:
                          type: boolean
                        lead:
                          properties:
                            accountId:
                              minLength: 1
                              type: string
                            active:
                              type: boolean
                            avatarUrls:
                              properties:
                                16x16:
                                  minLength: 1
                                  type: string
                                24x24:
                                  minLength: 1
                                  type: string
                                32x32:
                                  minLength: 1
                                  type: string
                                48x48:
                                  minLength: 1
                                  type: string
                              required:
                                - 48x48
                                - 24x24
                                - 16x16
                                - 32x32
                              type: object
                            displayName:
                              minLength: 1
                              type: string
                            key:
                              minLength: 1
                              type: string
                            name:
                              minLength: 1
                              type: string
                            self:
                              minLength: 1
                              type: string
                          required:
                            - self
                            - key
                            - accountId
                            - name
                            - avatarUrls
                            - displayName
                            - active
                          type: object
                        name:
                          minLength: 1
                          type: string
                        project:
                          minLength: 1
                          type: string
                        projectId:
                          type: number
                        realAssignee:
                          properties:
                            accountId:
                              minLength: 1
                              type: string
                            active:
                              type: boolean
                            avatarUrls:
                              properties:
                                16x16:
                                  minLength: 1
                                  type: string
                                24x24:
                                  minLength: 1
                                  type: string
                                32x32:
                                  minLength: 1
                                  type: string
                                48x48:
                                  minLength: 1
                                  type: string
                              required:
                                - 48x48
                                - 24x24
                                - 16x16
                                - 32x32
                              type: object
                            displayName:
                              minLength: 1
                              type: string
                            key:
                              minLength: 1
                              type: string
                            name:
                              minLength: 1
                              type: string
                            self:
                              minLength: 1
                              type: string
                          required:
                            - self
                            - key
                            - accountId
                            - name
                            - avatarUrls
                            - displayName
                            - active
                          type: object
                        realAssigneeType:
                          minLength: 1
                          type: string
                        self:
                          minLength: 1
                          type: string
                      required:
                        - self
                        - id
                        - name
                        - description
                        - assigneeType
                        - realAssigneeType
                        - isAssigneeTypeValid
                        - project
                        - projectId
                    minItems: 1
                    type: array
                    uniqueItems: true
                  description:
                    minLength: 1
                    type: string
                  email:
                    minLength: 1
                    type: string
                  id:
                    minLength: 1
                    type: string
                  issueTypes:
                    items:
                      properties:
                        avatarId:
                          type: number
                        description:
                          minLength: 1
                          type: string
                        iconUrl:
                          minLength: 1
                          type: string
                        id:
                          minLength: 1
                          type: string
                        name:
                          minLength: 1
                          type: string
                        scope:
                          properties:
                            project:
                              properties:
                                id:
                                  minLength: 1
                                  type: string
                              required:
                                - id
                              type: object
                            type:
                              minLength: 1
                              type: string
                          required:
                            - type
                            - project
                          type: object
                        self:
                          minLength: 1
                          type: string
                        subtask:
                          type: boolean
                      required:
                        - self
                        - id
                        - description
                        - iconUrl
                        - name
                        - subtask
                        - avatarId
                    minItems: 1
                    type: array
                    uniqueItems: true
                  key:
                    minLength: 1
                    type: string
                  lead:
                    properties:
                      accountId:
                        minLength: 1
                        type: string
                      active:
                        type: boolean
                      avatarUrls:
                        properties:
                          16x16:
                            minLength: 1
                            type: string
                          24x24:
                            minLength: 1
                            type: string
                          32x32:
                            minLength: 1
                            type: string
                          48x48:
                            minLength: 1
                            type: string
                        required:
                          - 48x48
                          - 24x24
                          - 16x16
                          - 32x32
                        type: object
                      displayName:
                        minLength: 1
                        type: string
                      key:
                        minLength: 1
                        type: string
                      name:
                        minLength: 1
                        type: string
                      self:
                        minLength: 1
                        type: string
                    required:
                      - self
                      - key
                      - accountId
                      - name
                      - avatarUrls
                      - displayName
                      - active
                    type: object
                  name:
                    minLength: 1
                    type: string
                  projectCategory:
                    properties:
                      description:
                        minLength: 1
                        type: string
                      id:
                        minLength: 1
                        type: string
                      name:
                        minLength: 1
                        type: string
                      self:
                        minLength: 1
                        type: string
                    required:
                      - self
                      - id
                      - name
                      - description
                    type: object
                  roles:
                    properties:
                      Developers:
                        minLength: 1
                        type: string
                    required:
                      - Developers
                    type: object
                  self:
                    minLength: 1
                    type: string
                  simplified:
                    type: boolean
                  style:
                    minLength: 1
                    type: string
                  url:
                    minLength: 1
                    type: string
                  versions:
                    items:
                      properties: {}
                    type: array
                required:
                  - self
                  - id
                  - key
                  - description
                  - lead
                  - components
                  - issueTypes
                  - url
                  - email
                  - assigneeType
                  - versions
                  - name
                  - roles
                  - avatarUrls
                  - projectCategory
                  - simplified
                  - style
                type: object
  "/project/{projectIdOrKey}/version":
    get:
      description: Returns a paginated representation of all versions existing in a single
        project. See the Get project versions resource if you want to get a full
        list of versions without pagination.
      parameters:
        - description: "Use expand to include additional information in the response. This
            parameter accepts multiple values separated by a comma:"
          in: query
          name: expand
          schema:
            type: string
            enum:
              - issuesstatus
              - operations
              - remotelinks
        - description: The maximum number of versions to return per page. Max 50.
          in: query
          name: maxResults
          schema:
            type: integer
        - description: "Order the results by a particular field:"
          in: query
          name: orderBy
          schema:
            type: string
            enum:
              - description
              - name
              - releaseDate
              - sequence
              - startDate
        - description: The project ID or project key (case sensitive).
          in: path
          name: projectIdOrKey
          required: true
          schema:
            type: string
        - description: Filter the results using a literal string. Versions with matching
            name or description are returned (case insensitive).
          in: query
          name: query
          schema:
            type: string
        - description: The starting index of the returned list of versions (page offset).
            The base index is 0.
          in: query
          name: startAt
          schema:
            type: integer
        - description: A comma separated string used to filter the results by version
            status.
          in: query
          name: status
          schema:
            type: string
      responses:
        "200":
          description: Returns a single page of versions.
          content:
            "*/*":
              schema:
                description: ""
                properties:
                  isLast:
                    type: boolean
                  maxResults:
                    type: number
                  nextPage:
                    minLength: 1
                    type: string
                  self:
                    minLength: 1
                    type: string
                  startAt:
                    type: number
                  total:
                    type: number
                  values:
                    items:
                      properties:
                        archived:
                          type: boolean
                        description:
                          minLength: 1
                          type: string
                        id:
                          minLength: 1
                          type: string
                        name:
                          minLength: 1
                          type: string
                        overdue:
                          type: boolean
                        projectId:
                          type: number
                        releaseDate:
                          minLength: 1
                          type: string
                        released:
                          type: boolean
                        self:
                          minLength: 1
                          type: string
                        userReleaseDate:
                          minLength: 1
                          type: string
                      required:
                        - self
                        - id
                        - description
                        - name
                        - archived
                        - released
                        - releaseDate
                        - overdue
                        - userReleaseDate
                        - projectId
                    minItems: 1
                    type: array
                    uniqueItems: true
                required:
                  - self
                  - nextPage
                  - maxResults
                  - startAt
                  - total
                  - isLast
                  - values
                type: object
  "/project/{projectIdOrKey}/versions":
    get:
      description: Returns all versions existing in a single project. The response is not
        paginated. Use Get project versions paginated if you want to get the
        versions in a project with pagination.
      parameters:
        - description: "Use expand to include additional information in the response. This
            parameter accepts multiple values separated by a comma:"
          in: query
          name: expand
          schema:
            type: string
            enum:
              - operations
        - description: The project ID or project key (case sensitive).
          in: path
          name: projectIdOrKey
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Returned if successful.
          content:
            "*/*":
              schema:
                description: ""
                items:
                  properties:
                    archived:
                      type: boolean
                    description:
                      minLength: 1
                      type: string
                    id:
                      minLength: 1
                      type: string
                    name:
                      minLength: 1
                      type: string
                    overdue:
                      type: boolean
                    projectId:
                      type: number
                    releaseDate:
                      minLength: 1
                      type: string
                    released:
                      type: boolean
                    self:
                      minLength: 1
                      type: string
                    userReleaseDate:
                      minLength: 1
                      type: string
                  required:
                    - self
                    - id
                    - description
                    - name
                    - archived
                    - released
                    - releaseDate
                    - overdue
                    - userReleaseDate
                    - projectId
                  type: object
                minItems: 1
                type: array
                uniqueItems: true
  "/project/{projectKeyOrId}/issuesecuritylevelscheme":
    get:
      description: Returns the issue security scheme associated with the project.
      parameters:
        - description: The project ID or project key (case sensitive).
          in: path
          name: projectKeyOrId
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Returned if the request is successful.
          content:
            "*/*":
              schema:
                description: ""
                properties:
                  defaultSecurityLevelId:
                    type: number
                  description:
                    minLength: 1
                    type: string
                  id:
                    type: number
                  levels:
                    items:
                      properties:
                        description:
                          minLength: 1
                          type: string
                        id:
                          minLength: 1
                          type: string
                        name:
                          minLength: 1
                          type: string
                        self:
                          minLength: 1
                          type: string
                      required:
                        - self
                        - id
                        - description
                        - name
                    minItems: 1
                    type: array
                    uniqueItems: true
                  name:
                    minLength: 1
                    type: string
                  self:
                    minLength: 1
                    type: string
                required:
                  - self
                  - id
                  - name
                  - description
                  - defaultSecurityLevelId
                  - levels
                type: object
  "/project/{projectKeyOrId}/notificationscheme":
    get:
      description: Gets a notification scheme associated with the project. See the Get
        notification scheme resource for more information about notification
        schemes.
      parameters:
        - description: "Use expand to include additional information in the response. This
            parameter accepts multiple values separated by a comma:"
          in: query
          name: expand
          schema:
            type: string
            enum:
              - all
              - field
              - group
              - notificationSchemeEvents
              - projectRole
              - user
        - description: The project ID or project key (case sensitive).
          in: path
          name: projectKeyOrId
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Returned if the request is successful.
          content:
            "*/*":
              schema:
                description: ""
                properties:
                  description:
                    minLength: 1
                    type: string
                  expand:
                    minLength: 1
                    type: string
                  id:
                    type: number
                  name:
                    minLength: 1
                    type: string
                  notificationSchemeEvents:
                    items:
                      properties:
                        event:
                          properties:
                            description:
                              minLength: 1
                              type: string
                            id:
                              type: number
                            name:
                              minLength: 1
                              type: string
                          required:
                            - id
                            - name
                            - description
                          type: object
                        notifications:
                          items:
                            properties:
                              expand:
                                minLength: 1
                                type: string
                              group:
                                properties:
                                  name:
                                    minLength: 1
                                    type: string
                                  self:
                                    minLength: 1
                                    type: string
                                required:
                                  - name
                                  - self
                                type: object
                              id:
                                type: number
                              notificationType:
                                minLength: 1
                                type: string
                              parameter:
                                minLength: 1
                                type: string
                            required:
                              - id
                              - notificationType
                              - parameter
                              - expand
                          minItems: 1
                          type: array
                          uniqueItems: true
                    minItems: 1
                    type: array
                    uniqueItems: true
                  self:
                    minLength: 1
                    type: string
                required:
                  - expand
                  - id
                  - self
                  - name
                  - description
                  - notificationSchemeEvents
                type: object
  "/project/{projectKeyOrId}/permissionscheme":
    get:
      description: Gets the permission scheme associated with the project.
      parameters:
        - description: "Use expand to include additional information in the response. This
            parameter accepts multiple values separated by a comma. Note that
            permissions are included when you specify any value:"
          in: query
          name: expand
          schema:
            type: string
            enum:
              - all
              - field
              - group
              - permissions
              - projectRole
              - user
        - description: The project ID or project key (case sensitive).
          in: path
          name: projectKeyOrId
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Returned if the request is successful.
          content:
            "*/*":
              schema:
                description: ""
                properties:
                  description:
                    minLength: 1
                    type: string
                  id:
                    type: number
                  name:
                    minLength: 1
                    type: string
                  self:
                    minLength: 1
                    type: string
                required:
                  - id
                  - self
                  - name
                  - description
                type: object
    put:
      description: Associates a permission scheme with a particular project. See Managing
        project permissions for more information about permission schemes.
      parameters:
        - description: "Use expand to include additional information in the response. This
            parameter accepts multiple values separated by a comma. Note that
            permissions are included when you specify any value:"
          in: query
          name: expand
          schema:
            type: string
            enum:
              - all
              - field
              - group
              - permissions
              - projectRole
              - user
        - description: The project ID or project key (case sensitive).
          in: path
          name: projectKeyOrId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                id:
                  description: The ID of the permission scheme to associate with the
                    project. Use the Get all permission schemes resource to get
                    a list of permission scheme IDs.
                  type: integer
              type: object
      responses:
        "200":
          description: Returned if the request is successful.
          content:
            "*/*":
              schema:
                description: ""
                properties:
                  description:
                    minLength: 1
                    type: string
                  id:
                    type: number
                  name:
                    minLength: 1
                    type: string
                  self:
                    minLength: 1
                    type: string
                required:
                  - id
                  - self
                  - name
                  - description
                type: object
  "/project/{projectKeyOrId}/securitylevel":
    get:
      description: Returns all issue security levels for the project that the currently
        authenticated user has access to. If the user does not have permission
        to see an issue security level, then that level is not returned. If the
        user lacks the Set Issue Security permission, then an empty list is
        returned.
      parameters:
        - description: The project ID or project key (case sensitive).
          in: path
          name: projectKeyOrId
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Returned if the request is successful.
          content:
            "*/*":
              schema:
                description: ""
                properties:
                  levels:
                    items:
                      properties:
                        description:
                          minLength: 1
                          type: string
                        id:
                          minLength: 1
                          type: string
                        name:
                          minLength: 1
                          type: string
                        self:
                          minLength: 1
                          type: string
                      required:
                        - self
                        - id
                        - description
                        - name
                    minItems: 1
                    type: array
                    uniqueItems: true
                required:
                  - levels
                type: object
  /projectCategory:
    get:
      description: Returns all project categories.
      responses:
        "200":
          description: Returned if the request is successful.
          content:
            "*/*":
              schema:
                description: ""
                items:
                  properties:
                    description:
                      minLength: 1
                      type: string
                    id:
                      minLength: 1
                      type: string
                    name:
                      minLength: 1
                      type: string
                    self:
                      minLength: 1
                      type: string
                  required:
                    - self
                    - id
                    - name
                    - description
                  type: object
                minItems: 1
                type: array
                uniqueItems: true
    post:
      description: Creates a project category.
      requestBody:
        $ref: "#/components/requestBodies/Body2"
      responses:
        "201":
          description: Returned if the request is successful.
          content:
            "*/*":
              schema:
                description: ""
                properties:
                  description:
                    minLength: 1
                    type: string
                  id:
                    minLength: 1
                    type: string
                  name:
                    minLength: 1
                    type: string
                  self:
                    minLength: 1
                    type: string
                required:
                  - self
                  - id
                  - name
                  - description
                type: object
  "/projectCategory/{id}":
    delete:
      description: Deletes a project category.
      parameters:
        - description: ID of the project category to delete.
          in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        "204":
          description: Returned if the request is successful.
    get:
      description: Returns a project category.
      parameters:
        - description: The ID of the project category.
          in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Returned if the request is successful.
          content:
            "*/*":
              schema:
                description: ""
                properties:
                  description:
                    minLength: 1
                    type: string
                  id:
                    minLength: 1
                    type: string
                  name:
                    minLength: 1
                    type: string
                  self:
                    minLength: 1
                    type: string
                required:
                  - self
                  - id
                  - name
                  - description
                type: object
    put:
      description: Updates a project category.
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        $ref: "#/components/requestBodies/Body2"
      responses:
        "200":
          description: Returned if the request is successful.
          content:
            "*/*":
              schema:
                description: ""
                properties:
                  description:
                    minLength: 1
                    type: string
                  id:
                    minLength: 1
                    type: string
                  name:
                    minLength: 1
                    type: string
                  self:
                    minLength: 1
                    type: string
                required:
                  - self
                  - id
                  - name
                  - description
                type: object
  /projectvalidate/key:
    get:
      description: Validates a project key by confirming the key is a valid string and not
        in use.
      parameters:
        - description: The project key.
          in: query
          name: key
          schema:
            type: string
      responses:
        "200":
          description: Returned if the request is successful.
          content:
            "*/*":
              schema:
                description: ""
                properties:
                  errorMessages:
                    items:
                      properties: {}
                    type: array
                  errors:
                    properties:
                      projectKey:
                        minLength: 1
                        type: string
                    required:
                      - projectKey
                    type: object
                required:
                  - errorMessages
                  - errors
                type: object
  /projectvalidate/validProjectKey:
    get:
      description: Validates a project key and, if the key is invalid or in use, generates
        a valid random string for the project key.
      parameters:
        - description: The project key.
          in: query
          name: key
          schema:
            type: string
      responses:
        "200":
          description: Returned if the request is successful.
          content:
            "*/*":
              schema:
                description: ""
                properties:
                  "0":
                    minLength: 1
                    type: string
                  "1":
                    minLength: 1
                    type: string
                  "2":
                    minLength: 1
                    type: string
                  "3":
                    minLength: 1
                    type: string
                required:
                  - "0"
                  - "1"
                  - "2"
                  - "3"
                type: object
  /projectvalidate/validProjectName:
    get:
      description: Checks that a project name isn't in use. If the name isn't in use, the
        passed string is returned. If the name is in use, this operation
        attempts to generate a valid project name based on the one supplied,
        usually by adding a sequence number. If a valid project name cannot be
        generated, a 404 response is returned.
      parameters:
        - description: The project name.
          in: query
          name: name
          schema:
            type: string
      responses:
        "200":
          description: Returned if the request is successful.
          content:
            "*/*":
              schema:
                description: ""
                properties:
                  "0":
                    minLength: 1
                    type: string
                  "1":
                    minLength: 1
                    type: string
                  "2":
                    minLength: 1
                    type: string
                  "3":
                    minLength: 1
                    type: string
                  "4":
                    minLength: 1
                    type: string
                  "5":
                    minLength: 1
                    type: string
                  "6":
                    minLength: 1
                    type: string
                  "7":
                    minLength: 1
                    type: string
                  "8":
                    minLength: 1
                    type: string
                  "9":
                    minLength: 1
                    type: string
                  "10":
                    minLength: 1
                    type: string
                  "11":
                    minLength: 1
                    type: string
                  "12":
                    minLength: 1
                    type: string
                  "13":
                    minLength: 1
                    type: string
                  "14":
                    minLength: 1
                    type: string
                  "15":
                    minLength: 1
                    type: string
                  "16":
                    minLength: 1
                    type: string
                  "17":
                    minLength: 1
                    type: string
                  "18":
                    minLength: 1
                    type: string
                  "19":
                    minLength: 1
                    type: string
                  "20":
                    minLength: 1
                    type: string
                  "21":
                    minLength: 1
                    type: string
                  "22":
                    minLength: 1
                    type: string
                  "23":
                    minLength: 1
                    type: string
                  "24":
                    minLength: 1
                    type: string
                  "25":
                    minLength: 1
                    type: string
                required:
                  - "0"
                  - "1"
                  - "2"
                  - "3"
                  - "4"
                  - "5"
                  - "6"
                  - "7"
                  - "8"
                  - "9"
                  - "10"
                  - "11"
                  - "12"
                  - "13"
                  - "14"
                  - "15"
                  - "16"
                  - "17"
                  - "18"
                  - "19"
                  - "20"
                  - "21"
                  - "22"
                  - "23"
                  - "24"
                  - "25"
                type: object
  /resolution:
    get:
      description: Returns a list of all issue resolution values.
      responses:
        "200":
          description: Returned if the request is successful.
          content:
            "*/*":
              schema:
                description: ""
                items:
                  properties:
                    description:
                      minLength: 1
                      type: string
                    id:
                      minLength: 1
                      type: string
                    name:
                      minLength: 1
                      type: string
                    self:
                      minLength: 1
                      type: string
                  required:
                    - self
                    - id
                    - description
                    - name
                  type: object
                minItems: 1
                type: array
                uniqueItems: true
  "/resolution/{id}":
    get:
      description: Returns an issue resolution value.
      parameters:
        - description: The ID of the issue resolution value.
          in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Returned if the request is successful.
          content:
            "*/*":
              schema:
                description: ""
                properties:
                  description:
                    minLength: 1
                    type: string
                  id:
                    minLength: 1
                    type: string
                  name:
                    minLength: 1
                    type: string
                  self:
                    minLength: 1
                    type: string
                required:
                  - self
                  - id
                  - description
                  - name
                type: object
  /role:
    get:
      description: Gets a list of all project roles, complete with project role details and
        default actors.
      responses:
        "200":
          description: Returned if the request is successful.
          content:
            "*/*":
              schema:
                description: ""
                items:
                  properties:
                    actors:
                      items:
                        properties:
                          actorGroup:
                            properties:
                              displayName:
                                minLength: 1
                                type: string
                              name:
                                minLength: 1
                                type: string
                            required:
                              - name
                              - displayName
                            type: object
                          displayName:
                            minLength: 1
                            type: string
                          id:
                            type: number
                          name:
                            minLength: 1
                            type: string
                          type:
                            minLength: 1
                            type: string
                        required:
                          - id
                          - displayName
                          - type
                          - name
                      minItems: 1
                      type: array
                      uniqueItems: true
                    description:
                      minLength: 1
                      type: string
                    id:
                      type: number
                    name:
                      minLength: 1
                      type: string
                    scope:
                      properties:
                        project:
                          properties:
                            id:
                              minLength: 1
                              type: string
                          required:
                            - id
                          type: object
                        type:
                          minLength: 1
                          type: string
                      required:
                        - type
                        - project
                      type: object
                    self:
                      minLength: 1
                      type: string
                  required:
                    - self
                    - name
                    - id
                    - description
                    - actors
                    - scope
                  type: object
                minItems: 1
                type: array
                uniqueItems: true
    post:
      description: Creates a new project role with no default actors. You can use the Add
        default actors to project role the project method to add default actors
        to the project role after creating it.
      requestBody:
        $ref: "#/components/requestBodies/Body15"
      responses:
        "200":
          description: Returned if the request is successful.
          content:
            "*/*":
              schema:
                description: ""
                properties:
                  description:
                    minLength: 1
                    type: string
                  id:
                    type: number
                  name:
                    minLength: 1
                    type: string
                  self:
                    minLength: 1
                    type: string
                required:
                  - self
                  - name
                  - id
                  - description
                type: object
  "/role/{id}":
    delete:
      description: Deletes a project role. You must specify a replacement project role if
        you wish to delete a project role that is in use.
      parameters:
        - description: The ID of the project role to delete. Use Get all project roles to
            get a list of project role IDs.
          in: path
          name: id
          required: true
          schema:
            type: integer
        - description: The ID of the project role that will replace the one being deleted.
          in: query
          name: swap
          schema:
            type: integer
      responses:
        "204":
          description: Returned if the request is successful.
    get:
      description: Gets the project role details and the default actors associated with the
        role. The list of default actors is sorted by display name.
      parameters:
        - description: The ID of the project role. Use Get all project roles to get a list
            of project role IDs.
          in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Returned if the request is successful.
          content:
            "*/*":
              schema:
                description: ""
                properties:
                  actors:
                    items:
                      properties:
                        actorGroup:
                          properties:
                            displayName:
                              minLength: 1
                              type: string
                            name:
                              minLength: 1
                              type: string
                          required:
                            - name
                            - displayName
                          type: object
                        displayName:
                          minLength: 1
                          type: string
                        id:
                          type: number
                        name:
                          minLength: 1
                          type: string
                        type:
                          minLength: 1
                          type: string
                      required:
                        - id
                        - displayName
                        - type
                        - name
                    minItems: 1
                    type: array
                    uniqueItems: true
                  description:
                    minLength: 1
                    type: string
                  id:
                    type: number
                  name:
                    minLength: 1
                    type: string
                  scope:
                    properties:
                      project:
                        properties:
                          id:
                            minLength: 1
                            type: string
                        required:
                          - id
                        type: object
                      type:
                        minLength: 1
                        type: string
                    required:
                      - type
                      - project
                    type: object
                  self:
                    minLength: 1
                    type: string
                required:
                  - self
                  - name
                  - id
                  - description
                  - actors
                  - scope
                type: object
    post:
      description: Update either the project role's name or its description.
      parameters:
        - description: The ID of the project role. Use Get all project roles to get a list
            of project role IDs.
          in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        $ref: "#/components/requestBodies/Body15"
      responses:
        "200":
          description: Returned if the request is successful.
          content:
            "*/*":
              schema:
                description: ""
                properties:
                  actors:
                    items:
                      properties:
                        actorGroup:
                          properties:
                            displayName:
                              minLength: 1
                              type: string
                            name:
                              minLength: 1
                              type: string
                          required:
                            - name
                            - displayName
                          type: object
                        displayName:
                          minLength: 1
                          type: string
                        id:
                          type: number
                        name:
                          minLength: 1
                          type: string
                        type:
                          minLength: 1
                          type: string
                      required:
                        - id
                        - displayName
                        - type
                        - name
                    minItems: 1
                    type: array
                    uniqueItems: true
                  description:
                    minLength: 1
                    type: string
                  id:
                    type: number
                  name:
                    minLength: 1
                    type: string
                  scope:
                    properties:
                      project:
                        properties:
                          id:
                            minLength: 1
                            type: string
                        required:
                          - id
                        type: object
                      type:
                        minLength: 1
                        type: string
                    required:
                      - type
                      - project
                    type: object
                  self:
                    minLength: 1
                    type: string
                required:
                  - self
                  - name
                  - id
                  - description
                  - actors
                  - scope
                type: object
    put:
      description: Update the project role's name and description. You must include both a
        name and a description in the request.
      parameters:
        - description: The ID of the project role. Use Get all project roles to get a list
            of project role IDs.
          in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        $ref: "#/components/requestBodies/Body15"
      responses:
        "200":
          description: Returned if the request is successful.
          content:
            "*/*":
              schema:
                description: ""
                properties:
                  actors:
                    items:
                      properties:
                        actorGroup:
                          properties:
                            displayName:
                              minLength: 1
                              type: string
                            name:
                              minLength: 1
                              type: string
                          required:
                            - name
                            - displayName
                          type: object
                        displayName:
                          minLength: 1
                          type: string
                        id:
                          type: number
                        name:
                          minLength: 1
                          type: string
                        type:
                          minLength: 1
                          type: string
                      required:
                        - id
                        - displayName
                        - type
                        - name
                    minItems: 1
                    type: array
                    uniqueItems: true
                  description:
                    minLength: 1
                    type: string
                  id:
                    type: number
                  name:
                    minLength: 1
                    type: string
                  scope:
                    properties:
                      project:
                        properties:
                          id:
                            minLength: 1
                            type: string
                        required:
                          - id
                        type: object
                      type:
                        minLength: 1
                        type: string
                    required:
                      - type
                      - project
                    type: object
                  self:
                    minLength: 1
                    type: string
                required:
                  - self
                  - name
                  - id
                  - description
                  - actors
                  - scope
                type: object
  "/role/{id}/actors":
    delete:
      description: Removes default actors from the project role. You may remove either a
        group or user, but you cannot remove a group and a user in the same
        request.
      parameters:
        - description: The group name of the group to be removed as a default actor.
          in: query
          name: group
          schema:
            type: string
        - description: The ID of the project role. Use Get all project roles to get a list
            of project role IDs.
          in: path
          name: id
          required: true
          schema:
            type: integer
        - description: The user account ID of the user to remove as a default actor.
          in: query
          name: user
          schema:
            type: string
      responses:
        "200":
          description: Returned if the request was successful.
          content:
            "*/*":
              schema:
                description: ""
                properties:
                  actors:
                    items:
                      properties:
                        actorGroup:
                          properties:
                            displayName:
                              minLength: 1
                              type: string
                            name:
                              minLength: 1
                              type: string
                          required:
                            - name
                            - displayName
                          type: object
                        displayName:
                          minLength: 1
                          type: string
                        id:
                          type: number
                        name:
                          minLength: 1
                          type: string
                        type:
                          minLength: 1
                          type: string
                      required:
                        - id
                        - displayName
                        - type
                        - name
                    minItems: 1
                    type: array
                    uniqueItems: true
                required:
                  - actors
                type: object
    get:
      description: Returns the default actors for the project role.
      parameters:
        - description: The ID of the project role. Use Get all project roles to get a list
            of project role IDs.
          in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Returned if the request is successful.
          content:
            "*/*":
              schema:
                description: ""
                properties:
                  actors:
                    items:
                      properties:
                        actorGroup:
                          properties:
                            displayName:
                              minLength: 1
                              type: string
                            name:
                              minLength: 1
                              type: string
                          required:
                            - name
                            - displayName
                          type: object
                        displayName:
                          minLength: 1
                          type: string
                        id:
                          type: number
                        name:
                          minLength: 1
                          type: string
                        type:
                          minLength: 1
                          type: string
                      required:
                        - id
                        - displayName
                        - type
                        - name
                    minItems: 1
                    type: array
                    uniqueItems: true
                required:
                  - actors
                type: object
    post:
      description: Adds default actors to the given role. You may add either groups or
        users, but you cannot add groups and users in the same request.
      parameters:
        - description: The ID of the project role. Use Get all project roles to get a list
            of project role IDs.
          in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              properties:
                group:
                  items:
                    type: string
                  type: array
                user:
                  description: The user account ID of the user to add as a default actor.
                    When not in GDPR-strict-mode this may be user key instead,
                    however this behaviour is deprecated. You can add multiple
                    users separated by a comma (for example,
                    "user":["12345678-9abc-def1-2345-6789abcdef12",
                    "abcdef12-3456-789a-bcde-f123456789ab"]).
                  items:
                    type: string
                  type: array
              type: object
      responses:
        "200":
          description: Returned if the request was successful.
          content:
            "*/*":
              schema:
                description: ""
                properties:
                  actors:
                    items:
                      properties:
                        actorGroup:
                          properties:
                            displayName:
                              minLength: 1
                              type: string
                            name:
                              minLength: 1
                              type: string
                          required:
                            - name
                            - displayName
                          type: object
                        displayName:
                          minLength: 1
                          type: string
                        id:
                          type: number
                        name:
                          minLength: 1
                          type: string
                        type:
                          minLength: 1
                          type: string
                      required:
                        - id
                        - displayName
                        - type
                        - name
                    minItems: 1
                    type: array
                    uniqueItems: true
                required:
                  - actors
                type: object
  /screens:
    get:
      description: Returns all screens.
      parameters:
        - description: The maximum number of items to return per page. Maximum is 100.
          in: query
          name: maxResults
          schema:
            type: integer
        - description: The index of the first item to return in a page of results (page
            offset).
          in: query
          name: startAt
          schema:
            type: integer
      responses:
        "200":
          description: Returned if the request is successful.
  "/screens/addToDefault/{fieldId}":
    post:
      description: Adds a field to the default tab of the default screen.
      parameters:
        - description: The ID of the field.
          in: path
          name: fieldId
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Returned if the request is successful.
  "/screens/{screenId}/availableFields":
    get:
      description: Returns the fields that can be added to a tab on a screen.
      parameters:
        - description: The ID of the screen.
          in: path
          name: screenId
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Returned if the request is successful.
  "/screens/{screenId}/tabs":
    get:
      description: Returns the list of tabs for a screen.
      parameters:
        - description: The key of the project.
          in: query
          name: projectKey
          schema:
            type: string
        - description: The ID of the screen.
          in: path
          name: screenId
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Returned if the request is successful.
    post:
      description: Creates a tab for a screen.
      parameters:
        - description: The ID of the screen.
          in: path
          name: screenId
          required: true
          schema:
            type: integer
      requestBody:
        $ref: "#/components/requestBodies/Body16"
      responses:
        "200":
          description: Returned if the request is successful.
          content:
            "*/*":
              schema:
                description: ""
                properties:
                  id:
                    type: number
                  name:
                    minLength: 1
                    type: string
                required:
                  - id
                  - name
                type: object
  "/screens/{screenId}/tabs/{tabId}":
    delete:
      description: Deletes a screen tab.
      parameters:
        - description: The ID of the screen.
          in: path
          name: screenId
          required: true
          schema:
            type: integer
        - description: The ID of the screen tab.
          in: path
          name: tabId
          required: true
          schema:
            type: integer
      responses:
        "204":
          description: Returned if the request is successful.
    put:
      description: Updates the name of a screen tab.
      parameters:
        - description: The ID of the screen.
          in: path
          name: screenId
          required: true
          schema:
            type: integer
        - description: The ID of the screen tab.
          in: path
          name: tabId
          required: true
          schema:
            type: integer
      requestBody:
        $ref: "#/components/requestBodies/Body16"
      responses:
        "200":
          description: Returned if the request is successful.
          content:
            "*/*":
              schema:
                description: ""
                properties:
                  id:
                    type: number
                  name:
                    minLength: 1
                    type: string
                required:
                  - id
                  - name
                type: object
  "/screens/{screenId}/tabs/{tabId}/fields":
    get:
      description: Returns all fields for a screen tab.
      parameters:
        - description: The key of the project.
          in: query
          name: projectKey
          schema:
            type: string
        - description: The ID of the screen.
          in: path
          name: screenId
          required: true
          schema:
            type: integer
        - description: The ID of the screen tab.
          in: path
          name: tabId
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Returned if the request is successful.
    post:
      description: Adds a field to a screen tab.
      parameters:
        - description: The ID of the screen.
          in: path
          name: screenId
          required: true
          schema:
            type: integer
        - description: The ID of the screen tab.
          in: path
          name: tabId
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              properties:
                fieldId:
                  description: The ID of the field to add.
                  type: string
              type: object
      responses:
        "200":
          description: Returned if the request is successful.
          content:
            "*/*":
              schema:
                description: ""
                properties:
                  id:
                    minLength: 1
                    type: string
                  name:
                    minLength: 1
                    type: string
                required:
                  - id
                  - name
                type: object
  "/screens/{screenId}/tabs/{tabId}/fields/{id}":
    delete:
      description: Removes a field from a screen tab.
      parameters:
        - description: The ID of the field.
          in: path
          name: id
          required: true
          schema:
            type: string
        - description: The ID of the screen.
          in: path
          name: screenId
          required: true
          schema:
            type: integer
        - description: The ID of the screen tab.
          in: path
          name: tabId
          required: true
          schema:
            type: integer
      responses:
        "201":
          description: Returned if the request is successful.
  "/screens/{screenId}/tabs/{tabId}/fields/{id}/move":
    post:
      description: Moves a screen tab field.
      parameters:
        - description: The ID of the field.
          in: path
          name: id
          required: true
          schema:
            type: string
        - description: The ID of the screen.
          in: path
          name: screenId
          required: true
          schema:
            type: integer
        - description: The ID of the screen tab.
          in: path
          name: tabId
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              properties:
                after:
                  description: The ID of the screen tab field after which to place the
                    moved screen tab field. Required if position isn't provided.
                  type: string
                position:
                  description: The named position to which the screen tab field should be
                    moved. Required if after isn't provided.
                  enum:
                    - Earlier
                    - Later
                    - First
                    - Last
                  type: string
              type: object
      responses:
        "201":
          description: Returned if the request is successful.
  "/screens/{screenId}/tabs/{tabId}/move/{pos}":
    post:
      description: Moves a screen tab.
      parameters:
        - description: The position of tab. The base index is 0.
          in: path
          name: pos
          required: true
          schema:
            type: integer
        - description: The ID of the screen.
          in: path
          name: screenId
          required: true
          schema:
            type: integer
        - description: The ID of the screen tab.
          in: path
          name: tabId
          required: true
          schema:
            type: integer
      responses:
        "201":
          description: Returned if the request is successful.
  /search:
    get:
      description: "Searches for issues using JQL. Permissions required: Permission to
        access Jira."
      parameters:
        - description: "Use expand to include additional information about issues in the
            response. This parameter accepts multiple values separated by a
            comma:"
          in: query
          name: expand
          schema:
            type: string
            enum:
              - renderedFields
              - names
              - schema
              - transitions
              - operations
              - editmeta
              - changelog
              - versionedRepresentations
              - fields
        - description: "A comma-separated list of fields to return for each issue, use it
            to retrieve a subset of fields. Allowed values:"
          in: query
          name: fields
          schema:
            type: array
            items:
              type: string
            enum:
              - "*all"
              - "*navigable"
              - summary,comment
              - -description
              - "*all,-comment"
        - description: Reference fields by their key (rather than ID).
          in: query
          name: fieldsByKeys
          schema:
            type: boolean
        - description: The JQL that defines the search. If no JQL expression is provided,
            all issues are returned. Note that username and userkey have been
            deprecated as search terms for this parameter. See the migration
            guide for details. Use accountId instead.
          in: query
          name: jql
          schema:
            type: string
        - description: The maximum number of items to return per page. Maximum is 100.
          in: query
          name: maxResults
          schema:
            type: integer
        - description: A comma-separated list of up to 5 issue properties to include in the
            results.
          in: query
          name: properties
          schema:
            type: array
            items:
              type: string
        - description: The index of the first item to return in the page of results (page
            offset).
          in: query
          name: startAt
          schema:
            type: integer
        - description: "Determines how to validate the JQL query and treat the validation
            results. Supported values are:"
          in: query
          name: validateQuery
          schema:
            type: string
            enum:
              - strict
              - warn
              - none
              - "true"
              - "false"
      responses:
        "200":
          description: Returned if the request is successful.
          content:
            "*/*":
              schema:
                description: ""
                properties:
                  expand:
                    minLength: 1
                    type: string
                  issues:
                    items:
                      properties:
                        expand:
                          type: string
                        id:
                          minLength: 1
                          type: string
                        key:
                          minLength: 1
                          type: string
                        self:
                          minLength: 1
                          type: string
                      required:
                        - expand
                        - id
                        - self
                        - key
                    minItems: 1
                    type: array
                    uniqueItems: true
                  maxResults:
                    type: number
                  startAt:
                    type: number
                  total:
                    type: number
                  warningMessages:
                    items:
                      properties: {}
                    type: array
                required:
                  - expand
                  - startAt
                  - maxResults
                  - total
                  - issues
                  - warningMessages
                type: object
    post:
      description: "Searches for issues using JQL. Permissions required: Permission to
        access Jira."
      requestBody:
        content:
          application/json:
            schema:
              properties:
                expand:
                  description: "Use expand to include additional information about issues
                    in the response. This parameter accepts multiple values
                    separated by a comma:"
                  items:
                    type: string
                  type: array
                fields:
                  description: A comma-separated list of fields to return for each issue,
                    use it to retrieve a subset of fields. Allowed values
                  items:
                    type: string
                  type: array
                fieldsByKeys:
                  description: Reference fields by their key (rather than ID). The default
                    is false.
                  type: boolean
                jql:
                  description: A JQL expression.
                  type: string
                maxResults:
                  description: The maximum number of items to return per page. The default
                    is 50 and maximum is 100.
                  type: integer
                properties:
                  description: A comma-separated list of up to 5 issue properties to
                    include in the results.
                  items:
                    type: string
                  type: array
                startAt:
                  description: The index of the first item to return in the page of results
                    (page offset). The base index is 0.
                  type: integer
                validateQuery:
                  description: "Determines how to validate the JQL query and treat the
                    validation results. Supported values:"
                  enum:
                    - strict
                    - warn
                    - none
                    - "true"
                    - "false"
                  type: string
              type: object
      responses:
        "200":
          description: Returned if the request is successful.
          content:
            "*/*":
              schema:
                description: ""
                properties:
                  expand:
                    minLength: 1
                    type: string
                  issues:
                    items:
                      properties:
                        expand:
                          type: string
                        id:
                          minLength: 1
                          type: string
                        key:
                          minLength: 1
                          type: string
                        self:
                          minLength: 1
                          type: string
                      required:
                        - expand
                        - id
                        - self
                        - key
                    minItems: 1
                    type: array
                    uniqueItems: true
                  maxResults:
                    type: number
                  startAt:
                    type: number
                  total:
                    type: number
                  warningMessages:
                    items:
                      properties: {}
                    type: array
                required:
                  - expand
                  - startAt
                  - maxResults
                  - total
                  - issues
                  - warningMessages
                type: object
  "/securitylevel/{id}":
    get:
      description: Returns details of an issue security level.
      parameters:
        - description: The ID of the issue security level.
          in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Returned if the request is successful.
          content:
            "*/*":
              schema:
                description: ""
                properties:
                  description:
                    minLength: 1
                    type: string
                  id:
                    minLength: 1
                    type: string
                  name:
                    minLength: 1
                    type: string
                  self:
                    minLength: 1
                    type: string
                required:
                  - self
                  - id
                  - description
                  - name
                type: object
  /serverInfo:
    get:
      description: Returns information about the Jira instance.
      responses:
        "200":
          description: Returns if the request is successful.
          content:
            "*/*":
              schema:
                description: ""
                properties:
                  baseUrl:
                    minLength: 1
                    type: string
                  buildDate:
                    minLength: 1
                    type: string
                  buildNumber:
                    type: number
                  scmInfo:
                    minLength: 1
                    type: string
                  serverTime:
                    minLength: 1
                    type: string
                  serverTitle:
                    minLength: 1
                    type: string
                  version:
                    minLength: 1
                    type: string
                  versionNumbers:
                    items:
                      properties: {}
                    type: array
                required:
                  - baseUrl
                  - version
                  - versionNumbers
                  - buildNumber
                  - buildDate
                  - serverTime
                  - scmInfo
                  - serverTitle
                type: object
  /settings/columns:
    get:
      description: Returns the default issue navigator columns.
      responses:
        "200":
          description: Returned if the request is successful.
          content:
            "*/*":
              schema:
                description: ""
                items:
                  properties:
                    label:
                      minLength: 1
                      type: string
                    value:
                      minLength: 1
                      type: string
                  required:
                    - label
                    - value
                  type: object
                minItems: 1
                type: array
                uniqueItems: true
    put:
      description: Sets the default issue navigator columns.
      responses:
        "200":
          description: Returned if the request is successful.
  /status:
    get:
      description: Returns a list of all statuses associated with workflows.
      responses:
        "200":
          description: Returned if the request is successful.
          content:
            "*/*":
              schema:
                description: ""
                items:
                  properties:
                    description:
                      minLength: 1
                      type: string
                    iconUrl:
                      minLength: 1
                      type: string
                    id:
                      minLength: 1
                      type: string
                    name:
                      minLength: 1
                      type: string
                    self:
                      minLength: 1
                      type: string
                    statusCategory:
                      properties:
                        colorName:
                          minLength: 1
                          type: string
                        id:
                          type: number
                        key:
                          minLength: 1
                          type: string
                        name:
                          minLength: 1
                          type: string
                        self:
                          minLength: 1
                          type: string
                      required:
                        - self
                        - id
                        - key
                        - colorName
                        - name
                      type: object
                  required:
                    - self
                    - description
                    - iconUrl
                    - name
                    - id
                    - statusCategory
                  type: object
                minItems: 1
                type: array
                uniqueItems: true
  "/status/{idOrName}":
    get:
      description: Returns a status. The status must be associated with a workflow to be
        returned.
      parameters:
        - description: The ID or name of the status.
          in: path
          name: idOrName
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Returned if the request is successful.
          content:
            "*/*":
              schema:
                description: ""
                properties:
                  description:
                    minLength: 1
                    type: string
                  iconUrl:
                    minLength: 1
                    type: string
                  id:
                    minLength: 1
                    type: string
                  name:
                    minLength: 1
                    type: string
                  self:
                    minLength: 1
                    type: string
                  statusCategory:
                    properties:
                      colorName:
                        minLength: 1
                        type: string
                      id:
                        type: number
                      key:
                        minLength: 1
                        type: string
                      name:
                        minLength: 1
                        type: string
                      self:
                        minLength: 1
                        type: string
                    required:
                      - self
                      - id
                      - key
                      - colorName
                      - name
                    type: object
                required:
                  - self
                  - description
                  - iconUrl
                  - name
                  - id
                  - statusCategory
                type: object
  /statuscategory:
    get:
      description: Returns a list of all status categories.
      responses:
        "200":
          description: Returned if the request is successful.
          content:
            "*/*":
              schema:
                description: ""
                items:
                  properties:
                    colorName:
                      minLength: 1
                      type: string
                    id:
                      type: number
                    key:
                      minLength: 1
                      type: string
                    name:
                      minLength: 1
                      type: string
                    self:
                      minLength: 1
                      type: string
                  required:
                    - self
                    - id
                    - key
                    - colorName
                    - name
                  type: object
                minItems: 1
                type: array
                uniqueItems: true
  "/statuscategory/{idOrKey}":
    get:
      description: Returns a status category. Status categories provided a mechanism for
        categorizing statuses.
      parameters:
        - description: The ID or key of the status category.
          in: path
          name: idOrKey
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Returned if the request is successful.
          content:
            "*/*":
              schema:
                description: ""
                properties:
                  colorName:
                    minLength: 1
                    type: string
                  id:
                    type: number
                  key:
                    minLength: 1
                    type: string
                  name:
                    minLength: 1
                    type: string
                  self:
                    minLength: 1
                    type: string
                required:
                  - self
                  - id
                  - key
                  - colorName
                  - name
                type: object
  "/task/{taskId}":
    get:
      description: Returns the status of a long-running asynchronous task.
      parameters:
        - description: The ID of the task.
          in: path
          name: taskId
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Returned if the request is successful.
          content:
            "*/*":
              schema:
                description: ""
                properties:
                  description:
                    minLength: 1
                    type: string
                  elapsedRuntime:
                    type: number
                  finished:
                    type: number
                  id:
                    minLength: 1
                    type: string
                  lastUpdate:
                    type: number
                  progress:
                    type: number
                  result:
                    minLength: 1
                    type: string
                  self:
                    minLength: 1
                    type: string
                  started:
                    type: number
                  status:
                    minLength: 1
                    type: string
                  submitted:
                    type: number
                  submittedBy:
                    type: number
                required:
                  - self
                  - id
                  - description
                  - status
                  - result
                  - submittedBy
                  - progress
                  - elapsedRuntime
                  - submitted
                  - started
                  - finished
                  - lastUpdate
                type: object
  "/task/{taskId}/cancel":
    post:
      description: Cancels a task.
      parameters:
        - description: The ID of the task.
          in: path
          name: taskId
          required: true
          schema:
            type: string
      responses:
        "202":
          description: Returned if the request is successful.
  "/universal_avatar/type/{type}/owner/{entityId}":
    get:
      description: Returns the system and custom avatars for a project or issue type.
      parameters:
        - description: The ID of the entity item.
          in: path
          name: entityId
          required: true
          schema:
            type: string
        - description: The type of the entity. Valid values are project and issuetype.
          in: path
          name: type
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Returned if the request is successful.
          content:
            "*/*":
              schema:
                description: ""
                properties:
                  custom:
                    items:
                      properties:
                        id:
                          minLength: 1
                          type: string
                        isDeletable:
                          type: boolean
                        isSelected:
                          type: boolean
                        isSystemAvatar:
                          type: boolean
                        urls:
                          properties:
                            16x16:
                              minLength: 1
                              type: string
                            24x24:
                              minLength: 1
                              type: string
                            32x32:
                              minLength: 1
                              type: string
                            48x48:
                              minLength: 1
                              type: string
                          required:
                            - 16x16
                            - 24x24
                            - 32x32
                            - 48x48
                          type: object
                      required:
                        - id
                        - isSystemAvatar
                        - isSelected
                        - isDeletable
                    minItems: 1
                    type: array
                    uniqueItems: true
                  system:
                    items:
                      properties:
                        id:
                          minLength: 1
                          type: string
                        isDeletable:
                          type: boolean
                        isSelected:
                          type: boolean
                        isSystemAvatar:
                          type: boolean
                        urls:
                          properties:
                            16x16:
                              minLength: 1
                              type: string
                            24x24:
                              minLength: 1
                              type: string
                            32x32:
                              minLength: 1
                              type: string
                            48x48:
                              minLength: 1
                              type: string
                          required:
                            - 16x16
                            - 24x24
                            - 32x32
                            - 48x48
                          type: object
                      required:
                        - id
                        - isSystemAvatar
                        - isSelected
                        - isDeletable
                    minItems: 1
                    type: array
                    uniqueItems: true
                required:
                  - system
                  - custom
                type: object
    post:
      description: Loads a custom avatar for a project or issue type.
      parameters:
        - description: The ID of the entity item.
          in: path
          name: entityId
          required: true
          schema:
            type: string
        - description: The length of each side of the crop region.
          in: query
          name: size
          schema:
            type: integer
        - description: The type of the entity. Valid values are project and issuetype.
          in: path
          name: type
          required: true
          schema:
            type: string
        - description: The X coordinate of the top-left corner of the crop region.
          in: query
          name: x
          schema:
            type: integer
        - description: The Y coordinate of the top-left corner of the crop region.
          in: query
          name: y
          schema:
            type: integer
      responses:
        "201":
          description: Returned if the request is successful.
          content:
            "*/*":
              schema:
                description: ""
                properties:
                  id:
                    minLength: 1
                    type: string
                  isDeletable:
                    type: boolean
                  isSelected:
                    type: boolean
                  isSystemAvatar:
                    type: boolean
                  urls:
                    properties:
                      16x16:
                        minLength: 1
                        type: string
                      24x24:
                        minLength: 1
                        type: string
                      32x32:
                        minLength: 1
                        type: string
                      48x48:
                        minLength: 1
                        type: string
                    required:
                      - 16x16
                      - 24x24
                      - 32x32
                      - 48x48
                    type: object
                required:
                  - id
                  - isSystemAvatar
                  - isSelected
                  - isDeletable
                  - urls
                type: object
  "/universal_avatar/type/{type}/owner/{owningObjectId}/avatar/{id}":
    delete:
      description: Deletes an avatar from a project or issue type.
      parameters:
        - description: The ID of the avatar.
          in: path
          name: id
          required: true
          schema:
            type: integer
        - description: The ID of the entity item.
          in: path
          name: owningObjectId
          required: true
          schema:
            type: string
        - description: The type of the entity. Valid values are project and issuetype.
          in: path
          name: type
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Returned if the request is successful.
  /user:
    delete:
      description: "Deletes a user. Permissions required: Site administration (i.e., member
        of the site-admin group)."
      parameters:
        - description: The accountId of the user, which uniquely identifies the user across
            all Atlassian products. For example,
            384093:32b4d9w0-f6a5-3535-11a3-9c8c88d10192. Required, unless
            username or key is specified.
          in: query
          name: accountId
          schema:
            type: string
        - description: This parameter has been deprecated due to privacy changes. Use
            accountId instead. See the migration guide for details.The key of
            the user. For example, admin. Required, unless accountId or username
            is specified.
          in: query
          name: key
          schema:
            type: string
        - description: This parameter has been deprecated due to privacy changes. Use
            accountId instead. See the migration guide for details.The username
            of the user. For example, admin. Required, unless accountId or key
            is specified.
          in: query
          name: username
          schema:
            type: string
      responses:
        "204":
          description: Returned if the request is successful.
    get:
      description: "Returns a user. Permissions required: None."
      parameters:
        - description: The accountId of the user, which uniquely identifies the user across
            all Atlassian products. For example,
            384093:32b4d9w0-f6a5-3535-11a3-9c8c88d10192. Required, unless
            username or key is specified.
          in: query
          name: accountId
          schema:
            type: string
        - description: "Use expand to include additional information about users in the
            response. This parameter accepts multiple values separated by a
            comma:"
          in: query
          name: expand
          schema:
            type: string
            enum:
              - groups
              - applicationRoles
        - description: This parameter has been deprecated due to privacy changes. Use
            accountId instead. See the migration guide for details.The key of
            the user. For example, admin. Required, unless accountId or username
            is specified.
          in: query
          name: key
          schema:
            type: string
        - description: This parameter has been deprecated due to privacy changes. Use
            accountId instead. See the migration guide for details.The username
            of the user. For example, admin. Required, unless accountId or key
            is specified.
          in: query
          name: username
          schema:
            type: string
      responses:
        "200":
          description: Returned if the request is successful.
          content:
            "*/*":
              schema:
                description: ""
                properties:
                  accountId:
                    minLength: 1
                    type: string
                  active:
                    type: boolean
                  applicationRoles:
                    properties:
                      items:
                        items:
                          properties: {}
                        type: array
                      size:
                        type: number
                    required:
                      - size
                      - items
                    type: object
                  avatarUrls:
                    properties:
                      16x16:
                        minLength: 1
                        type: string
                      24x24:
                        minLength: 1
                        type: string
                      32x32:
                        minLength: 1
                        type: string
                      48x48:
                        minLength: 1
                        type: string
                    required:
                      - 48x48
                      - 24x24
                      - 16x16
                      - 32x32
                    type: object
                  displayName:
                    minLength: 1
                    type: string
                  emailAddress:
                    minLength: 1
                    type: string
                  groups:
                    properties:
                      items:
                        items:
                          properties: {}
                        type: array
                      size:
                        type: number
                    required:
                      - size
                      - items
                    type: object
                  key:
                    minLength: 1
                    type: string
                  name:
                    minLength: 1
                    type: string
                  self:
                    minLength: 1
                    type: string
                  timeZone:
                    minLength: 1
                    type: string
                required:
                  - self
                  - key
                  - accountId
                  - name
                  - emailAddress
                  - avatarUrls
                  - displayName
                  - active
                  - timeZone
                  - groups
                  - applicationRoles
                type: object
    post:
      description: "Creates a user. This resource is retained for legacy compatibility. As
        soon as a more suitable alternative is available this resource will be
        deprecated. The option is provided to set or generate a password for the
        user. When using the option to generate a password, by omitting password
        from the request, include \"notification\": \"true\" to ensure the user
        is sent an email advising them that their account has been created. This
        email includes a link for the user to set their password. If the
        notification isn't sent for a generated password, the user will need to
        be sent a reset password request from Jira. Permissions required:
        Administer Jira global permission"
      requestBody:
        content:
          application/json:
            schema:
              properties:
                applicationKeys:
                  description: Deprecated, do not use.
                  items:
                    type: string
                  type: array
                displayName:
                  description: The display name for the user. Required.
                  type: string
                emailAddress:
                  description: The email address for the user. Required.
                  type: string
                key:
                  description: The key for the user. Read-only. This property has been
                    deprecated due to privacy changes.See the migration guide
                    for details.
                  type: string
                name:
                  description: The username for the user. This property has been deprecated
                    due to privacy changes. See the migration guide for details.
                  type: string
                notification:
                  description: Sends the user an email confirmation that they have been
                    added to Jira. Default is false.
                  type: string
                password:
                  description: A password for the user. If a password is not set, a random
                    password is generated.
                  type: string
              type: object
      responses:
        "201":
          description: Returned if the request is successful.
          content:
            "*/*":
              schema:
                description: ""
                properties:
                  accountId:
                    minLength: 1
                    type: string
                  active:
                    type: boolean
                  applicationRoles:
                    properties:
                      items:
                        items:
                          properties: {}
                        type: array
                      size:
                        type: number
                    required:
                      - size
                      - items
                    type: object
                  avatarUrls:
                    properties:
                      16x16:
                        minLength: 1
                        type: string
                      24x24:
                        minLength: 1
                        type: string
                      32x32:
                        minLength: 1
                        type: string
                      48x48:
                        minLength: 1
                        type: string
                    required:
                      - 48x48
                      - 24x24
                      - 16x16
                      - 32x32
                    type: object
                  displayName:
                    minLength: 1
                    type: string
                  emailAddress:
                    minLength: 1
                    type: string
                  groups:
                    properties:
                      items:
                        items:
                          properties: {}
                        type: array
                      size:
                        type: number
                    required:
                      - size
                      - items
                    type: object
                  key:
                    minLength: 1
                    type: string
                  name:
                    minLength: 1
                    type: string
                  self:
                    minLength: 1
                    type: string
                  timeZone:
                    minLength: 1
                    type: string
                required:
                  - self
                  - key
                  - accountId
                  - name
                  - emailAddress
                  - avatarUrls
                  - displayName
                  - active
                  - timeZone
                  - groups
                  - applicationRoles
                type: object
  /user/assignable/multiProjectSearch:
    get:
      description: "Returns a list of users who fulfill both of these criteria:"
      parameters:
        - description: The maximum number of items to return per page. Maximum is 1000.
          in: query
          name: maxResults
          schema:
            type: integer
        - description: A comma-separated list of project keys (case sensitive).
          in: query
          name: projectKeys
          schema:
            type: string
        - description: A query string that is matched against user attributes, such as key,
            name, displayName, and emailAddress, to find relevant users. The
            string can match any part of the attribute's value. For example,
            query=john matches a user with a displayName of John Smith and a
            user with an emailAddress of jane.johnson@example.com.
          in: query
          name: query
          schema:
            type: string
        - description: The index of the first item to return in a page of results (page
            offset).
          in: query
          name: startAt
          schema:
            type: integer
        - description: This parameter has been deprecated due to privacy changes. Use query
            instead. See the migration guide for details. A query string used to
            search username, display name, and email address. The string is
            matched to the starting letters of any word in the searched fields.
            For example, ar matches to the username archie but not mark.
          in: query
          name: username
          schema:
            type: string
      responses:
        "200":
          description: Returned if the request is successful.
          content:
            "*/*":
              schema:
                description: ""
                items:
                  properties:
                    accountId:
                      minLength: 1
                      type: string
                    active:
                      type: boolean
                    avatarUrls:
                      properties:
                        16x16:
                          minLength: 1
                          type: string
                        24x24:
                          minLength: 1
                          type: string
                        32x32:
                          minLength: 1
                          type: string
                        48x48:
                          minLength: 1
                          type: string
                      required:
                        - 48x48
                        - 24x24
                        - 16x16
                        - 32x32
                      type: object
                    displayName:
                      minLength: 1
                      type: string
                    key:
                      minLength: 1
                      type: string
                    name:
                      minLength: 1
                      type: string
                    self:
                      minLength: 1
                      type: string
                  required:
                    - self
                    - key
                    - accountId
                    - name
                    - avatarUrls
                    - displayName
                    - active
                  type: object
                minItems: 1
                type: array
                uniqueItems: true
  /user/assignable/search:
    get:
      description: "Returns a list of users that can be assigned to an issue. Use this
        method to find the list of users who can be assigned to:"
      parameters:
        - description: The ID of the transition.
          in: query
          name: actionDescriptorId
          schema:
            type: integer
        - description: The key of the issue. Required, unless project is specified.
          in: query
          name: issueKey
          schema:
            type: string
        - description: The maximum number of items to return per page. Maximum is 1000.
          in: query
          name: maxResults
          schema:
            type: integer
        - description: The project ID or project key (case sensitive). Required, unless
            issueKey is specified.
          in: query
          name: project
          schema:
            type: string
        - description: A query string that is matched against user attributes, such as key,
            name, displayName, and emailAddress, to find relevant users. The
            string can match any part of the attribute's value. For example,
            query=john matches a user with a displayName of John Smith and a
            user with an emailAddress of jane.johnson@example.com. Required,
            unless username is specified.
          in: query
          name: query
          schema:
            type: string
        - description: The index of the first item to return in a page of results (page
            offset).
          in: query
          name: startAt
          schema:
            type: integer
        - description: This parameter has been deprecated due to privacy changes. Use query
            instead. See the migration guide for details. A query string used to
            search username, display name, and email address. The string is
            matched to the starting letters of any word in the searched fields.
            For example, ar matches to the username archie but not mark.
            Required, unless accountId is specified.
          in: query
          name: username
          schema:
            type: string
      responses:
        "200":
          description: Returned if the request is successful.
          content:
            "*/*":
              schema:
                description: ""
                properties:
                  accountId:
                    minLength: 1
                    type: string
                  active:
                    type: boolean
                  applicationRoles:
                    properties:
                      items:
                        items:
                          properties: {}
                        type: array
                      size:
                        type: number
                    required:
                      - size
                      - items
                    type: object
                  avatarUrls:
                    properties:
                      16x16:
                        minLength: 1
                        type: string
                      24x24:
                        minLength: 1
                        type: string
                      32x32:
                        minLength: 1
                        type: string
                      48x48:
                        minLength: 1
                        type: string
                    required:
                      - 48x48
                      - 24x24
                      - 16x16
                      - 32x32
                    type: object
                  displayName:
                    minLength: 1
                    type: string
                  emailAddress:
                    minLength: 1
                    type: string
                  groups:
                    properties:
                      items:
                        items:
                          properties: {}
                        type: array
                      size:
                        type: number
                    required:
                      - size
                      - items
                    type: object
                  key:
                    minLength: 1
                    type: string
                  name:
                    minLength: 1
                    type: string
                  self:
                    minLength: 1
                    type: string
                  timeZone:
                    minLength: 1
                    type: string
                required:
                  - self
                  - key
                  - accountId
                  - name
                  - emailAddress
                  - avatarUrls
                  - displayName
                  - active
                  - timeZone
                  - groups
                  - applicationRoles
                type: object
  /user/bulk:
    get:
      description: "Returns details of users specified in a list of usernames or keys.
        Permissions required: Administer Jira global permission. Users with
        permission to access Jira can call this method, but empty search results
        are returned."
      parameters:
        - description: Comma-separated list of user keys. Required if username isn't
            provided.
          in: query
          name: key
          schema:
            type: array
            items:
              type: string
        - description: The maximum number of items to return per page. Maximum is 200.
          in: query
          name: maxResults
          schema:
            type: integer
        - description: The index of the first item to return in a page of results (page
            offset).
          in: query
          name: startAt
          schema:
            type: integer
        - description: Comma-separated list of usernames. Required if key isn't provided.
          in: query
          name: username
          schema:
            type: array
            items:
              type: string
      responses:
        "200":
          description: Returned if the request is successful.
          content:
            "*/*":
              schema:
                description: ""
                properties:
                  isLast:
                    type: boolean
                  maxResults:
                    type: number
                  startAt:
                    type: number
                  total:
                    type: number
                  values:
                    items:
                      properties:
                        accountId:
                          minLength: 1
                          type: string
                        active:
                          type: boolean
                        applicationRoles:
                          properties:
                            items:
                              items:
                                properties: {}
                              type: array
                            size:
                              type: number
                          required:
                            - size
                            - items
                          type: object
                        avatarUrls:
                          properties:
                            16x16:
                              minLength: 1
                              type: string
                            24x24:
                              minLength: 1
                              type: string
                            32x32:
                              minLength: 1
                              type: string
                            48x48:
                              minLength: 1
                              type: string
                          required:
                            - 48x48
                            - 24x24
                            - 16x16
                            - 32x32
                          type: object
                        displayName:
                          minLength: 1
                          type: string
                        emailAddress:
                          minLength: 1
                          type: string
                        groups:
                          properties:
                            items:
                              items:
                                properties: {}
                              type: array
                            size:
                              type: number
                          required:
                            - size
                            - items
                          type: object
                        key:
                          minLength: 1
                          type: string
                        name:
                          minLength: 1
                          type: string
                        self:
                          minLength: 1
                          type: string
                        timeZone:
                          minLength: 1
                          type: string
                      required:
                        - self
                        - key
                        - accountId
                        - name
                        - emailAddress
                        - displayName
                        - active
                        - timeZone
                    minItems: 1
                    type: array
                    uniqueItems: true
                required:
                  - maxResults
                  - startAt
                  - total
                  - isLast
                  - values
                type: object
  /user/columns:
    delete:
      description: "Resets the default issue table columns for the user to the system
        default. If a username is not passed, the calling user's default columns
        are reset. Permissions required:"
      parameters:
        - description: The accountId of the user, which uniquely identifies the user across
            all Atlassian products. For example,
            384093:32b4d9w0-f6a5-3535-11a3-9c8c88d10192. Required, unless
            username is specified.
          in: query
          name: accountId
          schema:
            type: string
        - description: This parameter has been deprecated due to privacy changes. Use
            accountId instead. See the migration guide for details.The username
            of the user. For example, admin. Required, unless accountId is
            specified.
          in: query
          name: username
          schema:
            type: string
      responses:
        "204":
          description: Returned if the request is successful.
    get:
      description: "Returns the default issue table columns for the user. If a username is
        not passed in the request, the calling user's details are returned.
        Permissions required:"
      parameters:
        - description: The accountId of the user, which uniquely identifies the user across
            all Atlassian products. For example,
            384093:32b4d9w0-f6a5-3535-11a3-9c8c88d10192. Required, unless
            username is specified.
          in: query
          name: accountId
          schema:
            type: string
        - description: This parameter has been deprecated due to privacy changes. Use
            accountId instead. See the migration guide for details.The username
            of the user. For example, admin. Required, unless accountId is
            specified.
          in: query
          name: username
          schema:
            type: string
      responses:
        "200":
          description: Returned if the request is successful.
    put:
      description: "Sets the default issue table columns for the user. If a username is not
        passed, the calling user's default columns are set. If no column details
        are sent, then all default columns are removed. The parameters for this
        resource are expressed as HTML form data. For example, in curl: curl -X
        PUT -d username=<username> -d columns=summary -d columns=description
        <url> Permissions required:"
      parameters:
        - description: The accountId of the user, which uniquely identifies the user across
            all Atlassian products. For example,
            384093:32b4d9w0-f6a5-3535-11a3-9c8c88d10192. Required, unless
            username is specified.
          in: query
          name: accountId
          schema:
            type: string
      responses:
        "200":
          description: Returned if the request is successful.
  /user/groups:
    get:
      description: "Returns the groups to which a user belongs. Permissions required:
        Browse users and groups global permission."
      parameters:
        - description: The account ID of the user.
          in: query
          name: accountId
          schema:
            type: string
        - description: The key of the user.
          in: query
          name: key
          schema:
            type: string
        - description: The username of the user. Deprecated in favour of accountId.
          in: query
          name: username
          schema:
            type: string
      responses:
        "200":
          description: Returned if the request is successful.
          content:
            "*/*":
              schema:
                description: ""
                properties:
                  name:
                    minLength: 1
                    type: string
                  self:
                    minLength: 1
                    type: string
                required:
                  - name
                  - self
                type: object
  /user/permission/search:
    get:
      description: "Returns a list of users who fulfill both of these criteria:"
      parameters:
        - description: The issue key for the issue.
          in: query
          name: issueKey
          schema:
            type: string
        - description: The maximum number of items to return per page. Maximum is 1000.
          in: query
          name: maxResults
          schema:
            type: integer
        - description: "A comma-separated list of permissions. The valid permissions are:"
          in: query
          name: permissions
          schema:
            type: string
        - description: The project key for the project (case sensitive).
          in: query
          name: projectKey
          schema:
            type: string
        - description: A query string that is matched against user attributes, such as key,
            name, displayName, and emailAddress, to find relevant users. The
            string can match any part of the attribute's value. For example,
            query=john matches a user with a displayName of John Smith and a
            user with an emailAddress of jane.johnson@example.com.
          in: query
          name: query
          schema:
            type: string
        - description: The index of the first item to return in a page of results (page
            offset).
          in: query
          name: startAt
          schema:
            type: integer
        - description: This parameter has been deprecated due to privacy changes. Use query
            instead. See the migration guide for details. A query string used to
            search username, display name, and email address. The string is
            matched to the starting letters of any word in the searched fields.
            For example, ar matches to the username archie but not mark.
          in: query
          name: username
          schema:
            type: string
      responses:
        "200":
          description: Returned if the request is successful.
          content:
            "*/*":
              schema:
                description: ""
                items:
                  properties:
                    accountId:
                      minLength: 1
                      type: string
                    active:
                      type: boolean
                    avatarUrls:
                      properties:
                        16x16:
                          minLength: 1
                          type: string
                        24x24:
                          minLength: 1
                          type: string
                        32x32:
                          minLength: 1
                          type: string
                        48x48:
                          minLength: 1
                          type: string
                      required:
                        - 48x48
                        - 24x24
                        - 16x16
                        - 32x32
                      type: object
                    displayName:
                      minLength: 1
                      type: string
                    key:
                      minLength: 1
                      type: string
                    name:
                      minLength: 1
                      type: string
                    self:
                      minLength: 1
                      type: string
                  required:
                    - self
                    - key
                    - accountId
                    - name
                    - avatarUrls
                    - displayName
                    - active
                  type: object
                minItems: 1
                type: array
                uniqueItems: true
  /user/picker:
    get:
      description: "Returns a list of users whose attributes match the query term. The
        returned object includes the html field where the matched query term is
        highlighted with the HTML strong tag. A list of account IDs can be
        provided to exclude users from the results. Permissions required: Browse
        users and groups global permission. Users with permission to access Jira
        can call this method, but will only get search results for an exact name
        match."
      parameters:
        - description: This parameter has been deprecated due to privacy changes. Use
            excludeAccountIds instead. See the migration guide for details. A
            comma-separated list of usernames to exclude from the search
            results.
          in: query
          name: exclude
          schema:
            type: array
            items:
              type: string
        - description: A comma-separated list of account IDs to exclude from the search
            results.
          in: query
          name: excludeAccountIds
          schema:
            type: array
            items:
              type: string
        - description: The maximum number of items to return. Maximum is 1000. The total
            number of matched users is returned in total.
          in: query
          name: maxResults
          schema:
            type: integer
        - description: A search input that is matched against appropriate user attributes
            to find relevant users.
          in: query
          name: query
          schema:
            type: string
        - description: Include the URI to the user's avatar.
          in: query
          name: showAvatar
          schema:
            type: boolean
      responses:
        "200":
          description: Returned if the request is successful.
          content:
            "*/*":
              schema:
                description: ""
                properties:
                  header:
                    minLength: 1
                    type: string
                  total:
                    type: number
                  users:
                    items:
                      properties:
                        accountId:
                          minLength: 1
                          type: string
                        avatarUrl:
                          minLength: 1
                          type: string
                        displayName:
                          minLength: 1
                          type: string
                        html:
                          minLength: 1
                          type: string
                        key:
                          minLength: 1
                          type: string
                        name:
                          minLength: 1
                          type: string
                      required:
                        - accountId
                        - name
                        - key
                        - html
                        - displayName
                        - avatarUrl
                    minItems: 1
                    type: array
                    uniqueItems: true
                required:
                  - users
                  - total
                  - header
                type: object
  /user/properties:
    get:
      description: "Returns the keys of all properties for a user. Permissions required:"
      parameters:
        - description: The accountId of the user, which uniquely identifies the user across
            all Atlassian products. For example,
            384093:32b4d9w0-f6a5-3535-11a3-9c8c88d10192. Required, unless
            username or key is specified.
          in: query
          name: accountId
          schema:
            type: string
        - description: This parameter has been deprecated due to privacy changes. Use
            accountId instead. See the migration guide for details.The key of
            the user. For example, admin. Required, unless accountId or username
            is specified.
          in: query
          name: userKey
          schema:
            type: string
        - description: This parameter has been deprecated due to privacy changes. Use
            accountId instead. See the migration guide for details.The username
            of the user. For example, admin. Required, unless accountId or key
            is specified.
          in: query
          name: username
          schema:
            type: string
      responses:
        "200":
          description: Returned if the request is successful.
          content:
            "*/*":
              schema:
                description: ""
                properties:
                  keys:
                    items:
                      properties:
                        key:
                          minLength: 1
                          type: string
                        self:
                          minLength: 1
                          type: string
                      required:
                        - self
                        - key
                    minItems: 1
                    type: array
                    uniqueItems: true
                required:
                  - keys
                type: object
  "/user/properties/{propertyKey}":
    delete:
      description: "Deletes a property from a user. Permissions required:"
      parameters:
        - description: The accountId of the user, which uniquely identifies the user across
            all Atlassian products. For example,
            384093:32b4d9w0-f6a5-3535-11a3-9c8c88d10192. Required, unless
            username or key is specified.
          in: query
          name: accountId
          schema:
            type: string
        - description: The key of the user's property.
          in: path
          name: propertyKey
          required: true
          schema:
            type: string
        - description: This parameter has been deprecated due to privacy changes. Use
            accountId instead. See the migration guide for details.The key of
            the user. For example, admin.
          in: query
          name: userKey
          schema:
            type: string
        - description: This parameter has been deprecated due to privacy changes. Use
            accountId instead. See the migration guide for details.The username
            of the user. For example, admin. Required, unless accountId or key
            is specified.
          in: query
          name: username
          schema:
            type: string
      responses:
        "204":
          description: Returned if the user property is deleted.
    get:
      description: "Returns the value of a user's property. If no property key is provided
        Get user property keys is called. Permissions required:"
      parameters:
        - description: The accountId of the user, which uniquely identifies the user across
            all Atlassian products. For example,
            384093:32b4d9w0-f6a5-3535-11a3-9c8c88d10192. Required, unless
            username or key is specified.
          in: query
          name: accountId
          schema:
            type: string
        - description: The key of the user's property.
          in: path
          name: propertyKey
          required: true
          schema:
            type: string
        - description: This parameter has been deprecated due to privacy changes. Use
            accountId instead. See the migration guide for details.The key of
            the user. For example, admin.
          in: query
          name: userKey
          schema:
            type: string
        - description: This parameter has been deprecated due to privacy changes. Use
            accountId instead. See the migration guide for details.The username
            of the user. For example, admin. Required, unless accountId or key
            is specified.
          in: query
          name: username
          schema:
            type: string
      responses:
        "200":
          description: Returned if the request is successful.
          content:
            "*/*":
              schema:
                description: ""
                properties:
                  key:
                    minLength: 1
                    type: string
                  value:
                    properties:
                      stride.conversation.id:
                        minLength: 1
                        type: string
                      support.time:
                        minLength: 1
                        type: string
                    required:
                      - stride.conversation.id
                      - support.time
                    type: object
                required:
                  - key
                  - value
                type: object
    put:
      description: "Sets the value of a user's property. Use this resource to store custom
        data against a user. Permissions required:"
      parameters:
        - description: The accountId of the user, which uniquely identifies the user across
            all Atlassian products. For example,
            384093:32b4d9w0-f6a5-3535-11a3-9c8c88d10192. Required, unless
            username or key is specified.
          in: query
          name: accountId
          schema:
            type: string
        - description: The key of the user's property. The maximum length of the key is 255
            bytes.
          in: path
          name: propertyKey
          required: true
          schema:
            type: string
        - description: This parameter has been deprecated due to privacy changes. Use
            accountId instead. See the migration guide for details.The key of
            the user. For example, admin. Required, unless accountId or username
            is specified.
          in: query
          name: userKey
          schema:
            type: string
        - description: This parameter has been deprecated due to privacy changes. Use
            accountId instead. See the migration guide for details.The username
            of the user. For example, admin. Required, unless accountId or key
            is specified.
          in: query
          name: username
          schema:
            type: string
      responses:
        "200":
          description: Returned if the user property is updated.
  /user/search:
    get:
      description: "Returns a list of users that match the search string and property.
        Permissions required: Browse users and groups global permission. Users
        with permission to access Jira can call this method, but empty search
        results are returned."
      parameters:
        - description: Include active users.
          in: query
          name: includeActive
          schema:
            type: boolean
        - description: Include inactive users.
          in: query
          name: includeInactive
          schema:
            type: boolean
        - description: The maximum number of items to return per page. Maximum is 1000.
          in: query
          name: maxResults
          schema:
            type: integer
        - description: 'A query string used to search properties. Property keys are
            specified by path, so property keys containing dot (.) or equals (=)
            characters cannot be used. The query string cannot be specified
            using a JSON object. Example: To search for the value of nested from
            {"something":{"nested":1,"other":2}} use
            thepropertykey.something.nested=1.'
          in: query
          name: property
          schema:
            type: string
        - description: A query string that is matched against user attributes (key, name,
            displayName, and emailAddress) to find relevant users. The string
            can match any part of the attribute's value. For example, query=john
            matches a user with a displayName of John Smith and a user with an
            emailAddress of jane.johnson@example.com. Required, unless username
            is specified.
          in: query
          name: query
          schema:
            type: string
        - description: The index of the first item to return in a page of results (page
            offset).
          in: query
          name: startAt
          schema:
            type: integer
        - description: This parameter has been deprecated due to privacy changes. Use query
            instead. See the migration guide for details. A query string used to
            search username, display name, and email address. The string is
            matched to the starting letters of any word in the searched fields.
            For example, ar matches to the username archie but not mark.
            Required, unless accountId is specified.
          in: query
          name: username
          schema:
            type: string
      responses:
        "200":
          description: Returned if the request is successful.
          content:
            "*/*":
              schema:
                description: ""
                items:
                  properties:
                    accountId:
                      minLength: 1
                      type: string
                    active:
                      type: boolean
                    avatarUrls:
                      properties:
                        16x16:
                          minLength: 1
                          type: string
                        24x24:
                          minLength: 1
                          type: string
                        32x32:
                          minLength: 1
                          type: string
                        48x48:
                          minLength: 1
                          type: string
                      required:
                        - 48x48
                        - 24x24
                        - 16x16
                        - 32x32
                      type: object
                    displayName:
                      minLength: 1
                      type: string
                    key:
                      minLength: 1
                      type: string
                    name:
                      minLength: 1
                      type: string
                    self:
                      minLength: 1
                      type: string
                  required:
                    - self
                    - key
                    - accountId
                    - name
                    - avatarUrls
                    - displayName
                    - active
                  type: object
                minItems: 1
                type: array
                uniqueItems: true
  /user/search/query:
    get:
      description: "Finds users using a structured query and returns user details.
        Permissions required: Browse users and groups global permission. The
        available queries statements are:"
      parameters:
        - description: Include inactive users in the results.
          in: query
          name: includeInactive
          schema:
            type: boolean
        - description: The maximum number of items to return per page. Maximum is 1000.
          in: query
          name: maxResults
          schema:
            type: integer
        - description: The search query.
          in: query
          name: query
          schema:
            type: string
        - description: The index of the first item to return in a page of results (page
            offset).
          in: query
          name: startAt
          schema:
            type: integer
      responses:
        "200":
          description: Returned if the request is successful.
  /user/search/query/key:
    get:
      description: "Finds users using a structured query and returns a list of user keys.
        Permissions required: Browse users and groups global permission. The
        available query statements are:"
      parameters:
        - description: Include inactive users in the results.
          in: query
          name: includeInactive
          schema:
            type: boolean
        - description: The maximum number of items to return per page. Maximum is 1000.
          in: query
          name: maxResults
          schema:
            type: integer
        - description: The search query.
          in: query
          name: query
          schema:
            type: string
        - description: The index of the first item to return in a page of results (page
            offset).
          in: query
          name: startAt
          schema:
            type: integer
      responses:
        "200":
          description: Returned if the request is successful.
  /user/viewissue/search:
    get:
      description: "Returns a list of users who fulfill both of these criteria:"
      parameters:
        - description: The issue key for the issue. Required, unless projectKey is
            specified.
          in: query
          name: issueKey
          schema:
            type: string
        - description: The maximum number of items to return per page. Maximum is 1000.
          in: query
          name: maxResults
          schema:
            type: integer
        - description: The project key for the project (case sensitive). Required, unless
            issueKey is specified.
          in: query
          name: projectKey
          schema:
            type: string
        - description: A query string that is matched against user attributes, such as key,
            name, displayName, and emailAddress, to find relevant users. The
            string can match any part of the attribute's value. For example,
            query=john matches a user with a displayName of John Smith and a
            user with an emailAddress of jane.johnson@example.com. Required,
            unless username is specified.
          in: query
          name: query
          schema:
            type: string
        - description: The index of the first item to return in a page of results (page
            offset).
          in: query
          name: startAt
          schema:
            type: integer
        - description: This parameter has been deprecated due to privacy changes. Use query
            instead. See the migration guide for details. A query string used to
            search username, display name, and email address. The string is
            matched to the starting letters of any word in the searched fields.
            For example, ar matches to the username archie but not mark.
            Required, unless accountId is specified.
          in: query
          name: username
          schema:
            type: string
      responses:
        "200":
          description: Returned if the request is successful.
          content:
            "*/*":
              schema:
                description: ""
                items:
                  properties:
                    accountId:
                      minLength: 1
                      type: string
                    active:
                      type: boolean
                    avatarUrls:
                      properties:
                        16x16:
                          minLength: 1
                          type: string
                        24x24:
                          minLength: 1
                          type: string
                        32x32:
                          minLength: 1
                          type: string
                        48x48:
                          minLength: 1
                          type: string
                      required:
                        - 48x48
                        - 24x24
                        - 16x16
                        - 32x32
                      type: object
                    displayName:
                      minLength: 1
                      type: string
                    key:
                      minLength: 1
                      type: string
                    name:
                      minLength: 1
                      type: string
                    self:
                      minLength: 1
                      type: string
                  required:
                    - self
                    - key
                    - accountId
                    - name
                    - avatarUrls
                    - displayName
                    - active
                  type: object
                minItems: 1
                type: array
                uniqueItems: true
  /version:
    post:
      description: "Creates a project version. Permissions required: Administer Jira global
        permission or Administer Projects project permission."
      requestBody:
        $ref: "#/components/requestBodies/Body17"
      responses:
        "201":
          description: Returned if the request is successful.
          content:
            "*/*":
              schema:
                description: ""
                properties:
                  archived:
                    type: boolean
                  description:
                    minLength: 1
                    type: string
                  name:
                    minLength: 1
                    type: string
                  project:
                    minLength: 1
                    type: string
                  projectId:
                    type: number
                  releaseDate:
                    minLength: 1
                    type: string
                  released:
                    type: boolean
                  userReleaseDate:
                    minLength: 1
                    type: string
                required:
                  - description
                  - name
                  - archived
                  - released
                  - releaseDate
                  - userReleaseDate
                  - project
                  - projectId
                type: object
  /version/remotelink:
    get:
      description: the global ID of the remote resource that is linked to the versions
      parameters:
        - description: the global ID of the remote resource that is linked to the versions
          in: query
          name: globalId
          schema:
            type: string
      responses:
        "200":
          description: Contains a list of remote version links. Any existing links that the
            user does not have permission to see will be filtered out. The user
            must have BROWSE permission for the project to see links to its
            versions.
          content:
            "*/*":
              schema:
                description: ""
                properties:
                  links:
                    items:
                      properties:
                        link:
                          properties:
                            colors:
                              items:
                                properties: {}
                              type: array
                            globalId:
                              minLength: 1
                              type: string
                            myCustomLinkProperty:
                              type: boolean
                          required:
                            - globalId
                            - myCustomLinkProperty
                            - colors
                          type: object
                        name:
                          minLength: 1
                          type: string
                        self:
                          minLength: 1
                          type: string
                      required:
                        - self
                        - name
                    minItems: 1
                    type: array
                    uniqueItems: true
                required:
                  - links
                type: object
  "/version/{id}":
    delete:
      description: "Deletes a project version. Deprecated, use Delete and replace version
        that supports swapping version values in custom fields, in addition to
        the swapping for fixVersion and affectedVersion provided in this
        resource. Alternative versions can be provided to update issues that use
        the deleted version in fixVersion or affectedVersion. If alternatives
        are not provided, occurrences of fixVersion and affectedVersion that
        contain the deleted version are cleared. Permissions required:
        Administer Jira global permission or Administer Projects project
        permission."
      parameters:
        - description: The ID of the version.
          in: path
          name: id
          required: true
          schema:
            type: string
        - description: The ID of the version to update affectedVersion to when the field
            contains the deleted version. The replacement version must be in the
            same project as the version being deleted and cannot be the version
            being deleted.
          in: query
          name: moveAffectedIssuesTo
          schema:
            type: string
        - description: The ID of the version to update fixVersion to when the field
            contains the deleted version. The replacement version must be in the
            same project as the version being deleted and cannot be the version
            being deleted.
          in: query
          name: moveFixIssuesTo
          schema:
            type: string
      responses:
        "204":
          description: Returned if the version is deleted.
    get:
      description: "Returns a project version. Permissions required: Browse projects
        project permission"
      parameters:
        - description: "Use expand to include additional information about version in the
            response. This parameter accepts multiple values separated by a
            comma:"
          in: query
          name: expand
          schema:
            type: string
            enum:
              - operations
              - remotelinks
              - issuesstatus
        - description: The ID of the version.
          in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Returned if the request is successful.
          content:
            "*/*":
              schema:
                description: ""
                properties:
                  archived:
                    type: boolean
                  description:
                    minLength: 1
                    type: string
                  id:
                    minLength: 1
                    type: string
                  name:
                    minLength: 1
                    type: string
                  overdue:
                    type: boolean
                  projectId:
                    type: number
                  releaseDate:
                    minLength: 1
                    type: string
                  released:
                    type: boolean
                  self:
                    minLength: 1
                    type: string
                  userReleaseDate:
                    minLength: 1
                    type: string
                required:
                  - self
                  - id
                  - description
                  - name
                  - archived
                  - released
                  - releaseDate
                  - overdue
                  - userReleaseDate
                  - projectId
                type: object
    put:
      description: "Modifies a project version. Permissions required: Administer Jira
        global permission or Administer Projects project permission."
      parameters:
        - description: The ID of the version.
          in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/Body17"
      responses:
        "200":
          description: Returned if the request is successful.
  "/version/{id}/mergeto/{moveIssuesTo}":
    put:
      description: "Merges two project versions. The merge is completed by deleting the
        version specified in id and replacing any occurrences of its ID in
        fixVersion with the version ID specified in moveIssuesTo. Consider using
        Delete and replace version instead. This resource supports swapping
        version values in fixVersion, affectedVersion, and custom fields.
        Permissions required: Administer Jira global permission or Administer
        Projects project permission."
      parameters:
        - description: The ID of the version to delete.
          in: path
          name: id
          required: true
          schema:
            type: string
        - description: The ID of the version to merge into.
          in: path
          name: moveIssuesTo
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Returned if the version is deleted.
  "/version/{id}/move":
    post:
      description: "Modifies the version's sequence within the project, which affects the
        display order of the versions in Jira. Permissions required: Administer
        Jira global permission or Administer Projects project permission."
      parameters:
        - description: The ID of the version to be moved.
          in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                after:
                  description: The URI (self link) of the version after which to place the
                    moved version. Cannot be used with position.
                  type: string
                position:
                  description: An absolute position in which to place the moved version.
                    Cannot be used with after.
                  enum:
                    - Earlier
                    - Later
                    - First
                    - Last
                  type: string
              type: object
      responses:
        "200":
          description: Returned if the request is successful.
          content:
            "*/*":
              schema:
                description: ""
                properties:
                  archived:
                    type: boolean
                  description:
                    minLength: 1
                    type: string
                  id:
                    minLength: 1
                    type: string
                  name:
                    minLength: 1
                    type: string
                  overdue:
                    type: boolean
                  projectId:
                    type: number
                  releaseDate:
                    minLength: 1
                    type: string
                  released:
                    type: boolean
                  self:
                    minLength: 1
                    type: string
                  userReleaseDate:
                    minLength: 1
                    type: string
                required:
                  - self
                  - id
                  - description
                  - name
                  - archived
                  - released
                  - releaseDate
                  - overdue
                  - userReleaseDate
                  - projectId
                type: object
  "/version/{id}/relatedIssueCounts":
    get:
      description: "Returns the following counts for a version:"
      parameters:
        - description: The ID of the version.
          in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Returned if the request is successful.
          content:
            "*/*":
              schema:
                description: ""
                properties:
                  customFieldUsage:
                    items:
                      properties:
                        customFieldId:
                          type: number
                        fieldName:
                          minLength: 1
                          type: string
                        issueCountWithVersionInCustomField:
                          type: number
                      required:
                        - fieldName
                        - customFieldId
                        - issueCountWithVersionInCustomField
                    minItems: 1
                    type: array
                    uniqueItems: true
                  issueCountWithCustomFieldsShowingVersion:
                    type: number
                  issuesAffectedCount:
                    type: number
                  issuesFixedCount:
                    type: number
                  self:
                    minLength: 1
                    type: string
                required:
                  - self
                  - issuesFixedCount
                  - issuesAffectedCount
                  - issueCountWithCustomFieldsShowingVersion
                  - customFieldUsage
                type: object
  "/version/{id}/removeAndSwap":
    post:
      description: "Deletes a project version. Permissions required: Administer Jira global
        permission or Administer Projects project permission. Alternative
        versions can be provided to update issues that use the deleted version
        in fixVersion, affectedVersion, or any version picker custom fields. If
        alternatives are not provided, occurrences of fixVersion,
        affectedVersion, and any version picker custom field, that contain the
        deleted version, are cleared. Any replacement version must be in the
        same project as the version being deleted and cannot be the version
        being deleted."
      parameters:
        - description: The ID of the version.
          in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                customFieldReplacementList:
                  description: A JSON array of custom field IDs (customFieldId) and version
                    IDs (moveTo) to update when the fields contain the deleted
                    version.
                  items:
                    type: object
                  type: array
                moveAffectedIssuesTo:
                  description: The ID of the version to update affectedVersion to when the
                    field contains the deleted version.
                  type: integer
                moveFixIssuesTo:
                  description: The ID of the version to update fixVersion to when the field
                    contains the deleted version.
                  type: integer
              type: object
      responses:
        "204":
          description: Returned if the version is deleted.
  "/version/{id}/unresolvedIssueCount":
    get:
      description: "Returns counts of the issues and unresolved issues for the project
        version. Permissions required: Browse projects project permission"
      parameters:
        - description: The ID of the version.
          in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Returned if the request is successful.
          content:
            "*/*":
              schema:
                description: ""
                properties:
                  issuesCount:
                    type: number
                  issuesUnresolvedCount:
                    type: number
                  self:
                    minLength: 1
                    type: string
                required:
                  - self
                  - issuesUnresolvedCount
                  - issuesCount
                type: object
  "/version/{versionId}/remotelink":
    delete:
      description: The version for which to delete ALL existing remote version links
      parameters:
        - description: The version for which to delete ALL existing remote version links
          in: path
          name: versionId
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Returned if the remote version links are successfully deleted.
    get:
      description: a String containing the version ID
      parameters:
        - description: a String containing the version ID
          in: path
          name: versionId
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Returned if the version exists and the currently authenticated user
            has permission to view it, which is restricted to those users with
            BROWSE permission for the project. Contains a full representation of
            the remote version links.
          content:
            "*/*":
              schema:
                description: ""
                properties:
                  links:
                    items:
                      properties:
                        link:
                          properties:
                            colors:
                              items:
                                properties: {}
                              type: array
                            globalId:
                              minLength: 1
                              type: string
                            myCustomLinkProperty:
                              type: boolean
                          required:
                            - globalId
                            - myCustomLinkProperty
                            - colors
                          type: object
                        name:
                          minLength: 1
                          type: string
                        self:
                          minLength: 1
                          type: string
                      required:
                        - self
                        - name
                    minItems: 1
                    type: array
                    uniqueItems: true
                required:
                  - links
                type: object
    post:
      description: Create a remote version link via POST. The link's global ID will be
        taken from the JSON payload if provided; otherwise, it will be
        generated.
      parameters:
        - in: path
          name: versionId
          required: true
          schema:
            type: string
      responses:
        "201":
          description: ""
  "/version/{versionId}/remotelink/{globalId}":
    delete:
      description: The version ID of the remote link
      parameters:
        - description: The global ID of the remote link
          in: path
          name: globalId
          required: true
          schema:
            type: string
        - description: The version ID of the remote link
          in: path
          name: versionId
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Returned if the remote version link is successfully deleted.
    get:
      description: A REST sub-resource representing a remote version link
      parameters:
        - description: The id of the remote issue link to be returned. If {@code null} (not
            provided) all remote links for the issue are returned.
          in: path
          name: globalId
          required: true
          schema:
            type: string
        - description: a String containing the version id
          in: path
          name: versionId
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Example response (application/json)
          content:
            "*/*":
              schema:
                description: ""
                properties:
                  link:
                    properties:
                      colors:
                        items:
                          properties: {}
                        type: array
                      globalId:
                        minLength: 1
                        type: string
                      myCustomLinkProperty:
                        type: boolean
                    required:
                      - globalId
                      - myCustomLinkProperty
                      - colors
                    type: object
                  name:
                    minLength: 1
                    type: string
                  self:
                    minLength: 1
                    type: string
                required:
                  - self
                  - name
                  - link
                type: object
    post:
      parameters:
        - in: path
          name: globalId
          required: true
          schema:
            type: string
        - in: path
          name: versionId
          required: true
          schema:
            type: string
      responses:
        "201":
          description: A schema has not been defined for this response code.
  /workflow:
    get:
      description: Returns all workflows in Jira or a single workflow.
      parameters:
        - description: The name of the workflow to be returned. Only one workflow can be
            specified.
          in: query
          name: workflowName
          schema:
            type: string
      responses:
        "200":
          description: Returned if the requested workflows are returned.
          content:
            "*/*":
              schema:
                description: ""
                items:
                  properties:
                    default:
                      type: boolean
                    description:
                      minLength: 1
                      type: string
                    lastModifiedDate:
                      minLength: 1
                      type: string
                    lastModifiedUser:
                      minLength: 1
                      type: string
                    lastModifiedUserAccountId:
                      minLength: 1
                      type: string
                    name:
                      minLength: 1
                      type: string
                    steps:
                      type: number
                  required:
                    - name
                    - description
                    - lastModifiedDate
                    - lastModifiedUser
                    - lastModifiedUserAccountId
                    - steps
                    - default
                  type: object
                minItems: 1
                type: array
                uniqueItems: true
  "/workflow/transitions/{transitionId}/properties":
    delete:
      description: Deletes a property from a workflow transition. Transition properties are
        used to change the behavior of a transition. For more information, see
        Transition properties and Workflow properties.
      parameters:
        - description: The name of the transition property to delete, also known as the
            name of the property.
          in: query
          name: key
          schema:
            type: string
        - description: The ID of the transition. To get the ID, view the workflow in text
            mode in the Jira admin settings. The ID is shown next to the
            transition.
          in: path
          name: transitionId
          required: true
          schema:
            type: integer
        - description: The workflow status. Set to live for inactive workflows or draft for
            draft workflows. Active workflows cannot be edited.
          in: query
          name: workflowMode
          schema:
            type: string
        - description: The name of the workflow that the transition belongs to.
          in: query
          name: workflowName
          schema:
            type: string
      responses:
        "200":
          description: 200 response
    get:
      description: Returns the properties on a workflow transition. Transition properties
        are used to change the behavior of a transition. For more information,
        see Transition properties and Workflow properties.
      parameters:
        - description: Some properties with keys that have the jira. prefix are reserved,
            i.e., not editable. To include these properties in the results, set
            this parameter to true.
          in: query
          name: includeReservedKeys
          schema:
            type: boolean
        - description: The key of the property being returned, also known as the name of
            the property. If this parameter is not specified, all properties on
            the transition are returned.
          in: query
          name: key
          schema:
            type: string
        - description: The ID of the transition. To get the ID, view the workflow in text
            mode in the Jira administration console. The ID is shown next to the
            transition.
          in: path
          name: transitionId
          required: true
          schema:
            type: integer
        - description: The workflow status. Set to live for active and inactive workflows,
            or draft for draft workflows.
          in: query
          name: workflowMode
          schema:
            type: string
        - description: The name of the workflow that the transition belongs to.
          in: query
          name: workflowName
          schema:
            type: string
      responses:
        "200":
          description: 200 response
          content:
            "*/*":
              schema:
                description: ""
                items:
                  properties:
                    id:
                      minLength: 1
                      type: string
                    key:
                      minLength: 1
                      type: string
                    value:
                      minLength: 1
                      type: string
                  required:
                    - key
                    - value
                    - id
                  type: object
                minItems: 1
                type: array
                uniqueItems: true
    post:
      description: Adds a property to a workflow transition. Transition properties are used
        to change the behavior of a transition. For more information, see
        Transition properties and Workflow properties.
      parameters:
        - description: The key of the property being added, also known as the name of the
            property. Set this to the same value as the key defined in the
            request body.
          in: query
          name: key
          schema:
            type: string
        - description: The ID of the transition. To get the ID, view the workflow in text
            mode in the Jira admin settings. The ID is shown next to the
            transition.
          in: path
          name: transitionId
          required: true
          schema:
            type: integer
        - description: The workflow status. Set to live for inactive workflows or draft for
            draft workflows. Active workflows cannot be edited.
          in: query
          name: workflowMode
          schema:
            type: string
        - description: The name of the workflow that the transition belongs to.
          in: query
          name: workflowName
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/Body18"
      responses:
        "200":
          description: 200 response
          content:
            "*/*":
              schema:
                description: ""
                properties:
                  id:
                    minLength: 1
                    type: string
                  key:
                    minLength: 1
                    type: string
                  value:
                    minLength: 1
                    type: string
                required:
                  - key
                  - value
                  - id
                type: object
    put:
      description: Updates a workflow transition by changing the property value. Trying to
        update a property that does not exist results in a new property being
        added to the transition. Transition properties are used to change the
        behavior of a transition. For more information, see Transition
        properties and Workflow properties.
      parameters:
        - description: The key of the property being updated, also known as the name of the
            property. Set this to the same value as the key defined in the
            request body.
          in: query
          name: key
          schema:
            type: string
        - description: The ID of the transition. To get the ID, view the workflow in text
            mode in the Jira admin settings. The ID is shown next to the
            transition.
          in: path
          name: transitionId
          required: true
          schema:
            type: integer
        - description: The workflow status. Set to live for inactive workflows or draft for
            draft workflows. Active workflows cannot be edited.
          in: query
          name: workflowMode
          schema:
            type: string
        - description: The name of the workflow that the transition belongs to.
          in: query
          name: workflowName
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/Body18"
      responses:
        "200":
          description: 200 response
          content:
            "*/*":
              schema:
                description: ""
                properties:
                  id:
                    minLength: 1
                    type: string
                  key:
                    minLength: 1
                    type: string
                  value:
                    minLength: 1
                    type: string
                required:
                  - key
                  - value
                  - id
                type: object
  /workflowscheme:
    post:
      description: Creates a workflow scheme.
      requestBody:
        $ref: "#/components/requestBodies/Body19"
      responses:
        "201":
          description: Returned if the request is successful.
          content:
            "*/*":
              schema:
                description: ""
                properties:
                  defaultWorkflow:
                    minLength: 1
                    type: string
                  description:
                    minLength: 1
                    type: string
                  draft:
                    type: boolean
                  id:
                    type: number
                  issueTypeMappings:
                    properties:
                      "10000":
                        minLength: 1
                        type: string
                      "10001":
                        minLength: 1
                        type: string
                    required:
                      - "10000"
                      - "10001"
                    type: object
                  name:
                    minLength: 1
                    type: string
                  self:
                    minLength: 1
                    type: string
                required:
                  - id
                  - name
                  - description
                  - defaultWorkflow
                  - issueTypeMappings
                  - draft
                  - self
                type: object
  "/workflowscheme/{id}":
    delete:
      description: Deletes a workflow scheme. Note that a workflow scheme cannot be deleted
        if it is active (that is, being used by at least one project).
      parameters:
        - description: The ID of the workflow scheme. Find this ID by editing the desired
            workflow scheme in Jira. The ID will be shown in the URL as schemeId
            (for example, schemeId=10301).
          in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        "204":
          description: Returned if the request is successful.
    get:
      description: Returns a workflow scheme.
      parameters:
        - description: The ID of the workflow scheme. Find this ID by editing the desired
            workflow scheme in Jira. The ID will be shown in the URL as schemeId
            (for example, schemeId=10301).
          in: path
          name: id
          required: true
          schema:
            type: integer
        - description: Returns the workflow scheme's draft rather than scheme itself, if
            set to true. If the workflow scheme does not have a draft, then the
            workflow scheme is returned.
          in: query
          name: returnDraftIfExists
          schema:
            type: boolean
      responses:
        "200":
          description: Returned if the request is successful.
          content:
            "*/*":
              schema:
                description: ""
                properties:
                  defaultWorkflow:
                    minLength: 1
                    type: string
                  description:
                    minLength: 1
                    type: string
                  draft:
                    type: boolean
                  id:
                    type: number
                  issueTypeMappings:
                    properties:
                      "10000":
                        minLength: 1
                        type: string
                      "10001":
                        minLength: 1
                        type: string
                    required:
                      - "10000"
                      - "10001"
                    type: object
                  name:
                    minLength: 1
                    type: string
                  self:
                    minLength: 1
                    type: string
                required:
                  - id
                  - name
                  - description
                  - defaultWorkflow
                  - issueTypeMappings
                  - draft
                  - self
                type: object
    put:
      description: Updates a workflow scheme, including the name, default workflow, issue
        type to project mappings, and more. If the workflow scheme is active
        (that is, being used by at least one project), then a draft workflow
        scheme is created or updated instead, provided that updateDraftIfNeeded
        is set to true.
      parameters:
        - description: The ID of the workflow scheme. Find this ID by editing the desired
            workflow scheme in Jira. The ID will be shown in the URL as schemeId
            (for example, schemeId=10301).
          in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        $ref: "#/components/requestBodies/Body19"
      responses:
        "200":
          description: Returned if the request is successful.
          content:
            "*/*":
              schema:
                description: ""
                properties:
                  defaultWorkflow:
                    minLength: 1
                    type: string
                  description:
                    minLength: 1
                    type: string
                  draft:
                    type: boolean
                  id:
                    type: number
                  issueTypeMappings:
                    properties:
                      "10000":
                        minLength: 1
                        type: string
                      "10001":
                        minLength: 1
                        type: string
                    required:
                      - "10000"
                      - "10001"
                    type: object
                  name:
                    minLength: 1
                    type: string
                  self:
                    minLength: 1
                    type: string
                required:
                  - id
                  - name
                  - description
                  - defaultWorkflow
                  - issueTypeMappings
                  - draft
                  - self
                type: object
  "/workflowscheme/{id}/createdraft":
    post:
      description: Create a draft workflow scheme from an active workflow scheme, by
        copying the active workflow scheme. Note that an active workflow scheme
        can only have one draft workflow scheme at any given time.
      parameters:
        - description: The ID of the active workflow scheme that the draft is created from.
          in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        "201":
          description: Returned if the request is successful.
          content:
            "*/*":
              schema:
                description: ""
                properties:
                  defaultWorkflow:
                    minLength: 1
                    type: string
                  description:
                    minLength: 1
                    type: string
                  draft:
                    type: boolean
                  id:
                    type: number
                  issueTypeMappings:
                    properties:
                      "10000":
                        minLength: 1
                        type: string
                      "10001":
                        minLength: 1
                        type: string
                    required:
                      - "10000"
                      - "10001"
                    type: object
                  lastModified:
                    minLength: 1
                    type: string
                  lastModifiedUser:
                    properties:
                      accountId:
                        minLength: 1
                        type: string
                      active:
                        type: boolean
                      applicationRoles:
                        properties:
                          items:
                            items:
                              properties: {}
                            type: array
                          size:
                            type: number
                        required:
                          - size
                          - items
                        type: object
                      avatarUrls:
                        properties:
                          16x16:
                            minLength: 1
                            type: string
                          24x24:
                            minLength: 1
                            type: string
                          32x32:
                            minLength: 1
                            type: string
                          48x48:
                            minLength: 1
                            type: string
                        required:
                          - 48x48
                          - 24x24
                          - 16x16
                          - 32x32
                        type: object
                      displayName:
                        minLength: 1
                        type: string
                      emailAddress:
                        minLength: 1
                        type: string
                      groups:
                        properties:
                          items:
                            items:
                              properties: {}
                            type: array
                          size:
                            type: number
                        required:
                          - size
                          - items
                        type: object
                      key:
                        minLength: 1
                        type: string
                      name:
                        minLength: 1
                        type: string
                      self:
                        minLength: 1
                        type: string
                      timeZone:
                        minLength: 1
                        type: string
                    required:
                      - self
                      - key
                      - accountId
                      - name
                      - emailAddress
                      - avatarUrls
                      - displayName
                      - active
                      - timeZone
                      - groups
                      - applicationRoles
                    type: object
                  name:
                    minLength: 1
                    type: string
                  originalDefaultWorkflow:
                    minLength: 1
                    type: string
                  originalIssueTypeMappings:
                    properties:
                      "10001":
                        minLength: 1
                        type: string
                    required:
                      - "10001"
                    type: object
                  self:
                    minLength: 1
                    type: string
                required:
                  - id
                  - name
                  - description
                  - defaultWorkflow
                  - issueTypeMappings
                  - originalDefaultWorkflow
                  - originalIssueTypeMappings
                  - draft
                  - lastModifiedUser
                  - lastModified
                  - self
                type: object
  "/workflowscheme/{id}/default":
    delete:
      description: Resets the default workflow for a workflow scheme. That is, the default
        workflow is set to Jira's system workflow (the jira workflow).
      parameters:
        - description: The ID of the workflow scheme.
          in: path
          name: id
          required: true
          schema:
            type: integer
        - description: Set to true to create or update the draft of a workflow scheme and
            delete the mapping from the draft, when the workflow scheme cannot
            be edited. Defaults to false.
          in: query
          name: updateDraftIfNeeded
          schema:
            type: boolean
      responses:
        "200":
          description: Returned if the request is successful.
          content:
            "*/*":
              schema:
                description: ""
                properties:
                  defaultWorkflow:
                    minLength: 1
                    type: string
                  description:
                    minLength: 1
                    type: string
                  draft:
                    type: boolean
                  id:
                    type: number
                  issueTypeMappings:
                    properties:
                      "10000":
                        minLength: 1
                        type: string
                      "10001":
                        minLength: 1
                        type: string
                    required:
                      - "10000"
                      - "10001"
                    type: object
                  name:
                    minLength: 1
                    type: string
                  self:
                    minLength: 1
                    type: string
                required:
                  - id
                  - name
                  - description
                  - defaultWorkflow
                  - issueTypeMappings
                  - draft
                  - self
                type: object
    get:
      description: Returns the default workflow for a workflow scheme. The default workflow
        is the workflow that is assigned any issue types that have not been
        mapped to any other workflow. The default workflow has All Unassigned
        Issue Types listed in its issue types for the workflow scheme in Jira.
      parameters:
        - description: The ID of the workflow scheme.
          in: path
          name: id
          required: true
          schema:
            type: integer
        - description: Set to true to return the default workflow for the workflow scheme's
            draft rather than scheme itself. If the workflow scheme does not
            have a draft, then the default workflow for the workflow scheme is
            returned.
          in: query
          name: returnDraftIfExists
          schema:
            type: boolean
      responses:
        "200":
          description: Returned if the request is successful.
          content:
            "*/*":
              schema:
                description: ""
                properties:
                  workflow:
                    minLength: 1
                    type: string
                required:
                  - workflow
                type: object
    put:
      description: Sets the default workflow for a workflow scheme.
      parameters:
        - description: The ID of the workflow scheme.
          in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        $ref: "#/components/requestBodies/Body4"
      responses:
        "200":
          description: Returned if the request is successful.
          content:
            "*/*":
              schema:
                description: ""
                properties:
                  defaultWorkflow:
                    minLength: 1
                    type: string
                  description:
                    minLength: 1
                    type: string
                  draft:
                    type: boolean
                  id:
                    type: number
                  issueTypeMappings:
                    properties:
                      "10000":
                        minLength: 1
                        type: string
                      "10001":
                        minLength: 1
                        type: string
                    required:
                      - "10000"
                      - "10001"
                    type: object
                  name:
                    minLength: 1
                    type: string
                  self:
                    minLength: 1
                    type: string
                required:
                  - id
                  - name
                  - description
                  - defaultWorkflow
                  - issueTypeMappings
                  - draft
                  - self
                type: object
  "/workflowscheme/{id}/draft":
    delete:
      description: Deletes a draft workflow scheme.
      parameters:
        - description: The ID of the active workflow scheme that the draft was originally
            created from.
          in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        "204":
          description: Returned if the request is successful.
    get:
      description: "Returns the draft workflow scheme for an active workflow scheme. Draft
        workflow schemes allow changes to be made to the active workflow
        schemes: When an active workflow scheme is updated, a draft copy is
        created. The draft is modified, then the changes in the draft are copied
        back to the active workflow scheme. See Configuring workflow schemes for
        more information.Note that:"
      parameters:
        - description: The ID of the active workflow scheme that the draft was originally
            created from.
          in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Returned if the request is successful.
          content:
            "*/*":
              schema:
                description: ""
                properties:
                  defaultWorkflow:
                    minLength: 1
                    type: string
                  description:
                    minLength: 1
                    type: string
                  draft:
                    type: boolean
                  id:
                    type: number
                  issueTypeMappings:
                    properties:
                      "10000":
                        minLength: 1
                        type: string
                      "10001":
                        minLength: 1
                        type: string
                    required:
                      - "10000"
                      - "10001"
                    type: object
                  lastModified:
                    minLength: 1
                    type: string
                  lastModifiedUser:
                    properties:
                      accountId:
                        minLength: 1
                        type: string
                      active:
                        type: boolean
                      applicationRoles:
                        properties:
                          items:
                            items:
                              properties: {}
                            type: array
                          size:
                            type: number
                        required:
                          - size
                          - items
                        type: object
                      avatarUrls:
                        properties:
                          16x16:
                            minLength: 1
                            type: string
                          24x24:
                            minLength: 1
                            type: string
                          32x32:
                            minLength: 1
                            type: string
                          48x48:
                            minLength: 1
                            type: string
                        required:
                          - 48x48
                          - 24x24
                          - 16x16
                          - 32x32
                        type: object
                      displayName:
                        minLength: 1
                        type: string
                      emailAddress:
                        minLength: 1
                        type: string
                      groups:
                        properties:
                          items:
                            items:
                              properties: {}
                            type: array
                          size:
                            type: number
                        required:
                          - size
                          - items
                        type: object
                      key:
                        minLength: 1
                        type: string
                      name:
                        minLength: 1
                        type: string
                      self:
                        minLength: 1
                        type: string
                      timeZone:
                        minLength: 1
                        type: string
                    required:
                      - self
                      - key
                      - accountId
                      - name
                      - emailAddress
                      - avatarUrls
                      - displayName
                      - active
                      - timeZone
                      - groups
                      - applicationRoles
                    type: object
                  name:
                    minLength: 1
                    type: string
                  originalDefaultWorkflow:
                    minLength: 1
                    type: string
                  originalIssueTypeMappings:
                    properties:
                      "10001":
                        minLength: 1
                        type: string
                    required:
                      - "10001"
                    type: object
                  self:
                    minLength: 1
                    type: string
                required:
                  - id
                  - name
                  - description
                  - defaultWorkflow
                  - issueTypeMappings
                  - originalDefaultWorkflow
                  - originalIssueTypeMappings
                  - draft
                  - lastModifiedUser
                  - lastModified
                  - self
                type: object
    put:
      description: Updates a draft workflow scheme. If a draft workflow scheme does not
        exist for the active workflow scheme, then a draft is created. Note that
        an active workflow scheme can only have one draft workflow scheme at any
        given time.
      parameters:
        - description: The ID of the active workflow scheme that the draft was originally
            created from.
          in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        $ref: "#/components/requestBodies/Body19"
      responses:
        "200":
          description: Returned if the request is successful.
          content:
            "*/*":
              schema:
                description: ""
                properties:
                  defaultWorkflow:
                    minLength: 1
                    type: string
                  description:
                    minLength: 1
                    type: string
                  draft:
                    type: boolean
                  id:
                    type: number
                  issueTypeMappings:
                    properties:
                      "10000":
                        minLength: 1
                        type: string
                      "10001":
                        minLength: 1
                        type: string
                    required:
                      - "10000"
                      - "10001"
                    type: object
                  lastModified:
                    minLength: 1
                    type: string
                  lastModifiedUser:
                    properties:
                      accountId:
                        minLength: 1
                        type: string
                      active:
                        type: boolean
                      applicationRoles:
                        properties:
                          items:
                            items:
                              properties: {}
                            type: array
                          size:
                            type: number
                        required:
                          - size
                          - items
                        type: object
                      avatarUrls:
                        properties:
                          16x16:
                            minLength: 1
                            type: string
                          24x24:
                            minLength: 1
                            type: string
                          32x32:
                            minLength: 1
                            type: string
                          48x48:
                            minLength: 1
                            type: string
                        required:
                          - 48x48
                          - 24x24
                          - 16x16
                          - 32x32
                        type: object
                      displayName:
                        minLength: 1
                        type: string
                      emailAddress:
                        minLength: 1
                        type: string
                      groups:
                        properties:
                          items:
                            items:
                              properties: {}
                            type: array
                          size:
                            type: number
                        required:
                          - size
                          - items
                        type: object
                      key:
                        minLength: 1
                        type: string
                      name:
                        minLength: 1
                        type: string
                      self:
                        minLength: 1
                        type: string
                      timeZone:
                        minLength: 1
                        type: string
                    required:
                      - self
                      - key
                      - accountId
                      - name
                      - emailAddress
                      - avatarUrls
                      - displayName
                      - active
                      - timeZone
                      - groups
                      - applicationRoles
                    type: object
                  name:
                    minLength: 1
                    type: string
                  originalDefaultWorkflow:
                    minLength: 1
                    type: string
                  originalIssueTypeMappings:
                    properties:
                      "10001":
                        minLength: 1
                        type: string
                    required:
                      - "10001"
                    type: object
                  self:
                    minLength: 1
                    type: string
                required:
                  - id
                  - name
                  - description
                  - defaultWorkflow
                  - issueTypeMappings
                  - originalDefaultWorkflow
                  - originalIssueTypeMappings
                  - draft
                  - lastModifiedUser
                  - lastModified
                  - self
                type: object
  "/workflowscheme/{id}/draft/default":
    delete:
      description: Resets the default workflow for a workflow scheme's draft. That is, the
        default workflow is set to Jira's system workflow (the jira workflow).
      parameters:
        - description: The ID of the workflow scheme that the draft belongs to.
          in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Returned if the request is successful.
          content:
            "*/*":
              schema:
                description: ""
                properties:
                  defaultWorkflow:
                    minLength: 1
                    type: string
                  description:
                    minLength: 1
                    type: string
                  draft:
                    type: boolean
                  id:
                    type: number
                  issueTypeMappings:
                    properties:
                      "10000":
                        minLength: 1
                        type: string
                      "10001":
                        minLength: 1
                        type: string
                    required:
                      - "10000"
                      - "10001"
                    type: object
                  lastModified:
                    minLength: 1
                    type: string
                  lastModifiedUser:
                    properties:
                      accountId:
                        minLength: 1
                        type: string
                      active:
                        type: boolean
                      applicationRoles:
                        properties:
                          items:
                            items:
                              properties: {}
                            type: array
                          size:
                            type: number
                        required:
                          - size
                          - items
                        type: object
                      avatarUrls:
                        properties:
                          16x16:
                            minLength: 1
                            type: string
                          24x24:
                            minLength: 1
                            type: string
                          32x32:
                            minLength: 1
                            type: string
                          48x48:
                            minLength: 1
                            type: string
                        required:
                          - 48x48
                          - 24x24
                          - 16x16
                          - 32x32
                        type: object
                      displayName:
                        minLength: 1
                        type: string
                      emailAddress:
                        minLength: 1
                        type: string
                      groups:
                        properties:
                          items:
                            items:
                              properties: {}
                            type: array
                          size:
                            type: number
                        required:
                          - size
                          - items
                        type: object
                      key:
                        minLength: 1
                        type: string
                      name:
                        minLength: 1
                        type: string
                      self:
                        minLength: 1
                        type: string
                      timeZone:
                        minLength: 1
                        type: string
                    required:
                      - self
                      - key
                      - accountId
                      - name
                      - emailAddress
                      - avatarUrls
                      - displayName
                      - active
                      - timeZone
                      - groups
                      - applicationRoles
                    type: object
                  name:
                    minLength: 1
                    type: string
                  originalDefaultWorkflow:
                    minLength: 1
                    type: string
                  originalIssueTypeMappings:
                    properties:
                      "10001":
                        minLength: 1
                        type: string
                    required:
                      - "10001"
                    type: object
                  self:
                    minLength: 1
                    type: string
                required:
                  - id
                  - name
                  - description
                  - defaultWorkflow
                  - issueTypeMappings
                  - originalDefaultWorkflow
                  - originalIssueTypeMappings
                  - draft
                  - lastModifiedUser
                  - lastModified
                  - self
                type: object
    get:
      description: Returns the default workflow for a workflow scheme's draft. The default
        workflow is the workflow that is assigned any issue types that have not
        been mapped to any other workflow. The default workflow has All
        Unassigned Issue Types listed in its issue types for the workflow scheme
        in Jira.
      parameters:
        - description: The ID of the workflow scheme that the draft belongs to.
          in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Returned if the request is successful.
          content:
            "*/*":
              schema:
                description: ""
                properties:
                  workflow:
                    minLength: 1
                    type: string
                required:
                  - workflow
                type: object
    put:
      description: Sets the default workflow for a workflow scheme's draft.
      parameters:
        - description: The ID of the workflow scheme that the draft belongs to.
          in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        $ref: "#/components/requestBodies/Body4"
      responses:
        "200":
          description: Returned if the request is successful.
          content:
            "*/*":
              schema:
                description: ""
                properties:
                  defaultWorkflow:
                    minLength: 1
                    type: string
                  description:
                    minLength: 1
                    type: string
                  draft:
                    type: boolean
                  id:
                    type: number
                  issueTypeMappings:
                    properties:
                      "10000":
                        minLength: 1
                        type: string
                      "10001":
                        minLength: 1
                        type: string
                    required:
                      - "10000"
                      - "10001"
                    type: object
                  lastModified:
                    minLength: 1
                    type: string
                  lastModifiedUser:
                    properties:
                      accountId:
                        minLength: 1
                        type: string
                      active:
                        type: boolean
                      applicationRoles:
                        properties:
                          items:
                            items:
                              properties: {}
                            type: array
                          size:
                            type: number
                        required:
                          - size
                          - items
                        type: object
                      avatarUrls:
                        properties:
                          16x16:
                            minLength: 1
                            type: string
                          24x24:
                            minLength: 1
                            type: string
                          32x32:
                            minLength: 1
                            type: string
                          48x48:
                            minLength: 1
                            type: string
                        required:
                          - 48x48
                          - 24x24
                          - 16x16
                          - 32x32
                        type: object
                      displayName:
                        minLength: 1
                        type: string
                      emailAddress:
                        minLength: 1
                        type: string
                      groups:
                        properties:
                          items:
                            items:
                              properties: {}
                            type: array
                          size:
                            type: number
                        required:
                          - size
                          - items
                        type: object
                      key:
                        minLength: 1
                        type: string
                      name:
                        minLength: 1
                        type: string
                      self:
                        minLength: 1
                        type: string
                      timeZone:
                        minLength: 1
                        type: string
                    required:
                      - self
                      - key
                      - accountId
                      - name
                      - emailAddress
                      - avatarUrls
                      - displayName
                      - active
                      - timeZone
                      - groups
                      - applicationRoles
                    type: object
                  name:
                    minLength: 1
                    type: string
                  originalDefaultWorkflow:
                    minLength: 1
                    type: string
                  originalIssueTypeMappings:
                    properties:
                      "10001":
                        minLength: 1
                        type: string
                    required:
                      - "10001"
                    type: object
                  self:
                    minLength: 1
                    type: string
                required:
                  - id
                  - name
                  - description
                  - defaultWorkflow
                  - issueTypeMappings
                  - originalDefaultWorkflow
                  - originalIssueTypeMappings
                  - draft
                  - lastModifiedUser
                  - lastModified
                  - self
                type: object
  "/workflowscheme/{id}/draft/issuetype/{issueType}":
    delete:
      description: Deletes the issue type-workflow mapping for an issue type in a workflow
        scheme's draft.
      parameters:
        - description: The ID of the workflow scheme that the draft belongs to.
          in: path
          name: id
          required: true
          schema:
            type: integer
        - description: The ID of the issue type.
          in: path
          name: issueType
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Returned if the request is successful.
          content:
            "*/*":
              schema:
                description: ""
                properties:
                  defaultWorkflow:
                    minLength: 1
                    type: string
                  description:
                    minLength: 1
                    type: string
                  draft:
                    type: boolean
                  id:
                    type: number
                  issueTypeMappings:
                    properties:
                      "10000":
                        minLength: 1
                        type: string
                      "10001":
                        minLength: 1
                        type: string
                    required:
                      - "10000"
                      - "10001"
                    type: object
                  lastModified:
                    minLength: 1
                    type: string
                  lastModifiedUser:
                    properties:
                      accountId:
                        minLength: 1
                        type: string
                      active:
                        type: boolean
                      applicationRoles:
                        properties:
                          items:
                            items:
                              properties: {}
                            type: array
                          size:
                            type: number
                        required:
                          - size
                          - items
                        type: object
                      avatarUrls:
                        properties:
                          16x16:
                            minLength: 1
                            type: string
                          24x24:
                            minLength: 1
                            type: string
                          32x32:
                            minLength: 1
                            type: string
                          48x48:
                            minLength: 1
                            type: string
                        required:
                          - 48x48
                          - 24x24
                          - 16x16
                          - 32x32
                        type: object
                      displayName:
                        minLength: 1
                        type: string
                      emailAddress:
                        minLength: 1
                        type: string
                      groups:
                        properties:
                          items:
                            items:
                              properties: {}
                            type: array
                          size:
                            type: number
                        required:
                          - size
                          - items
                        type: object
                      key:
                        minLength: 1
                        type: string
                      name:
                        minLength: 1
                        type: string
                      self:
                        minLength: 1
                        type: string
                      timeZone:
                        minLength: 1
                        type: string
                    required:
                      - self
                      - key
                      - accountId
                      - name
                      - emailAddress
                      - avatarUrls
                      - displayName
                      - active
                      - timeZone
                      - groups
                      - applicationRoles
                    type: object
                  name:
                    minLength: 1
                    type: string
                  originalDefaultWorkflow:
                    minLength: 1
                    type: string
                  originalIssueTypeMappings:
                    properties:
                      "10001":
                        minLength: 1
                        type: string
                    required:
                      - "10001"
                    type: object
                  self:
                    minLength: 1
                    type: string
                required:
                  - id
                  - name
                  - description
                  - defaultWorkflow
                  - issueTypeMappings
                  - originalDefaultWorkflow
                  - originalIssueTypeMappings
                  - draft
                  - lastModifiedUser
                  - lastModified
                  - self
                type: object
    get:
      description: Returns the issue type-workflow mapping for an issue type in a workflow
        scheme's draft.
      parameters:
        - description: The ID of the workflow scheme that the draft belongs to.
          in: path
          name: id
          required: true
          schema:
            type: integer
        - description: The ID of the issue type.
          in: path
          name: issueType
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Returned if the request is successful.
          content:
            "*/*":
              schema:
                description: ""
                properties:
                  issueType:
                    minLength: 1
                    type: string
                  workflow:
                    minLength: 1
                    type: string
                required:
                  - issueType
                  - workflow
                type: object
    put:
      description: Sets the workflow for an issue type in a workflow scheme's draft.
      parameters:
        - description: The ID of the workflow scheme that the draft belongs to.
          in: path
          name: id
          required: true
          schema:
            type: integer
        - description: The ID of the issue type.
          in: path
          name: issueType
          required: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/Body9"
      responses:
        "200":
          description: Returned if the request is successful.
          content:
            "*/*":
              schema:
                description: ""
                properties:
                  defaultWorkflow:
                    minLength: 1
                    type: string
                  description:
                    minLength: 1
                    type: string
                  draft:
                    type: boolean
                  id:
                    type: number
                  issueTypeMappings:
                    properties:
                      "10000":
                        minLength: 1
                        type: string
                      "10001":
                        minLength: 1
                        type: string
                    required:
                      - "10000"
                      - "10001"
                    type: object
                  lastModified:
                    minLength: 1
                    type: string
                  lastModifiedUser:
                    properties:
                      accountId:
                        minLength: 1
                        type: string
                      active:
                        type: boolean
                      applicationRoles:
                        properties:
                          items:
                            items:
                              properties: {}
                            type: array
                          size:
                            type: number
                        required:
                          - size
                          - items
                        type: object
                      avatarUrls:
                        properties:
                          16x16:
                            minLength: 1
                            type: string
                          24x24:
                            minLength: 1
                            type: string
                          32x32:
                            minLength: 1
                            type: string
                          48x48:
                            minLength: 1
                            type: string
                        required:
                          - 48x48
                          - 24x24
                          - 16x16
                          - 32x32
                        type: object
                      displayName:
                        minLength: 1
                        type: string
                      emailAddress:
                        minLength: 1
                        type: string
                      groups:
                        properties:
                          items:
                            items:
                              properties: {}
                            type: array
                          size:
                            type: number
                        required:
                          - size
                          - items
                        type: object
                      key:
                        minLength: 1
                        type: string
                      name:
                        minLength: 1
                        type: string
                      self:
                        minLength: 1
                        type: string
                      timeZone:
                        minLength: 1
                        type: string
                    required:
                      - self
                      - key
                      - accountId
                      - name
                      - emailAddress
                      - avatarUrls
                      - displayName
                      - active
                      - timeZone
                      - groups
                      - applicationRoles
                    type: object
                  name:
                    minLength: 1
                    type: string
                  originalDefaultWorkflow:
                    minLength: 1
                    type: string
                  originalIssueTypeMappings:
                    properties:
                      "10001":
                        minLength: 1
                        type: string
                    required:
                      - "10001"
                    type: object
                  self:
                    minLength: 1
                    type: string
                required:
                  - id
                  - name
                  - description
                  - defaultWorkflow
                  - issueTypeMappings
                  - originalDefaultWorkflow
                  - originalIssueTypeMappings
                  - draft
                  - lastModifiedUser
                  - lastModified
                  - self
                type: object
  "/workflowscheme/{id}/draft/workflow":
    delete:
      description: Deletes the workflow-issue type mapping for a workflow in a workflow
        scheme's draft.
      parameters:
        - description: The ID of the workflow scheme that the draft belongs to.
          in: path
          name: id
          required: true
          schema:
            type: integer
        - description: The name of the workflow.
          in: query
          name: workflowName
          schema:
            type: string
      responses:
        "200":
          description: Returned if the request is successful.
    get:
      description: Returns the workflow-issue type mappings for a workflow scheme's draft.
      parameters:
        - description: The ID of the workflow scheme that the draft belongs to.
          in: path
          name: id
          required: true
          schema:
            type: integer
        - description: The name of a workflow in the scheme. Limits the results to the
            workflow-issue type mapping for the specified workflow.
          in: query
          name: workflowName
          schema:
            type: string
      responses:
        "200":
          description: Returned if the request is successful.
          content:
            "*/*":
              schema:
                description: ""
                properties:
                  defaultMapping:
                    type: boolean
                  issueTypes:
                    items:
                      properties: {}
                    type: array
                  workflow:
                    minLength: 1
                    type: string
                required:
                  - workflow
                  - issueTypes
                  - defaultMapping
                type: object
    put:
      description: Sets the issue types for a workflow in a workflow scheme's draft. The
        workflow can also be set as the default workflow for the draft workflow
        scheme. Unmapped issues types are mapped to the default workflow.
      parameters:
        - description: The ID of the workflow scheme that the draft belongs to.
          in: path
          name: id
          required: true
          schema:
            type: integer
        - description: The name of the workflow.
          in: query
          name: workflowName
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/Body5"
      responses:
        "200":
          description: Returned if the request is successful.
          content:
            "*/*":
              schema:
                description: ""
                properties:
                  defaultWorkflow:
                    minLength: 1
                    type: string
                  description:
                    minLength: 1
                    type: string
                  draft:
                    type: boolean
                  id:
                    type: number
                  issueTypeMappings:
                    properties:
                      "10000":
                        minLength: 1
                        type: string
                      "10001":
                        minLength: 1
                        type: string
                    required:
                      - "10000"
                      - "10001"
                    type: object
                  name:
                    minLength: 1
                    type: string
                  self:
                    minLength: 1
                    type: string
                required:
                  - id
                  - name
                  - description
                  - defaultWorkflow
                  - issueTypeMappings
                  - draft
                  - self
                type: object
  "/workflowscheme/{id}/issuetype/{issueType}":
    delete:
      description: Deletes the issue type-workflow mapping for an issue type in a workflow
        scheme.
      parameters:
        - description: The ID of the workflow scheme.
          in: path
          name: id
          required: true
          schema:
            type: integer
        - description: The ID of the issue type.
          in: path
          name: issueType
          required: true
          schema:
            type: string
        - description: Set to true to create or update the draft of a workflow scheme and
            update the mapping in the draft, when the workflow scheme cannot be
            edited. Defaults to false.
          in: query
          name: updateDraftIfNeeded
          schema:
            type: boolean
      responses:
        "200":
          description: Returned if the request is successful.
          content:
            "*/*":
              schema:
                description: ""
                properties:
                  defaultWorkflow:
                    minLength: 1
                    type: string
                  description:
                    minLength: 1
                    type: string
                  draft:
                    type: boolean
                  id:
                    type: number
                  issueTypeMappings:
                    properties:
                      "10000":
                        minLength: 1
                        type: string
                      "10001":
                        minLength: 1
                        type: string
                    required:
                      - "10000"
                      - "10001"
                    type: object
                  name:
                    minLength: 1
                    type: string
                  self:
                    minLength: 1
                    type: string
                required:
                  - id
                  - name
                  - description
                  - defaultWorkflow
                  - issueTypeMappings
                  - draft
                  - self
                type: object
    get:
      description: Returns the issue type-workflow mapping for an issue type in a workflow
        scheme.
      parameters:
        - description: The ID of the workflow scheme.
          in: path
          name: id
          required: true
          schema:
            type: integer
        - description: The ID of the issue type.
          in: path
          name: issueType
          required: true
          schema:
            type: string
        - description: Returns the mapping from the workflow scheme's draft rather than the
            workflow scheme, if set to true. If no draft exists, the mapping
            from the workflow scheme is returned.
          in: query
          name: returnDraftIfExists
          schema:
            type: boolean
      responses:
        "200":
          description: Returned if the request is successful.
          content:
            "*/*":
              schema:
                description: ""
                properties:
                  issueType:
                    minLength: 1
                    type: string
                  workflow:
                    minLength: 1
                    type: string
                required:
                  - issueType
                  - workflow
                type: object
    put:
      description: Sets the workflow for an issue type in a workflow scheme.
      parameters:
        - description: The ID of the workflow scheme.
          in: path
          name: id
          required: true
          schema:
            type: integer
        - description: The ID of the issue type.
          in: path
          name: issueType
          required: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/Body9"
      responses:
        "200":
          description: Returned if the request is successful.
          content:
            "*/*":
              schema:
                description: ""
                properties:
                  defaultWorkflow:
                    minLength: 1
                    type: string
                  description:
                    minLength: 1
                    type: string
                  draft:
                    type: boolean
                  id:
                    type: number
                  issueTypeMappings:
                    properties:
                      "10000":
                        minLength: 1
                        type: string
                      "10001":
                        minLength: 1
                        type: string
                    required:
                      - "10000"
                      - "10001"
                    type: object
                  name:
                    minLength: 1
                    type: string
                  self:
                    minLength: 1
                    type: string
                required:
                  - id
                  - name
                  - description
                  - defaultWorkflow
                  - issueTypeMappings
                  - draft
                  - self
                type: object
  "/workflowscheme/{id}/workflow":
    delete:
      description: Deletes the workflow-issue type mapping for a workflow in a workflow
        scheme.
      parameters:
        - description: The ID of the workflow scheme.
          in: path
          name: id
          required: true
          schema:
            type: integer
        - description: Set to true to create or update the draft of a workflow scheme and
            delete the mapping from the draft, when the workflow scheme cannot
            be edited. Defaults to false.
          in: query
          name: updateDraftIfNeeded
          schema:
            type: boolean
        - description: The name of the workflow.
          in: query
          name: workflowName
          schema:
            type: string
      responses:
        "200":
          description: Returned if the request is successful.
    get:
      description: Returns the workflow-issue type mappings for a workflow scheme.
      parameters:
        - description: The ID of the workflow scheme.
          in: path
          name: id
          required: true
          schema:
            type: integer
        - description: Returns the mapping from the workflow scheme's draft rather than the
            workflow scheme, if set to true. If no draft exists, the mapping
            from the workflow scheme is returned.
          in: query
          name: returnDraftIfExists
          schema:
            type: boolean
        - description: The name of a workflow in the scheme. Limits the results to the
            workflow-issue type mapping for the specified workflow.
          in: query
          name: workflowName
          schema:
            type: string
      responses:
        "200":
          description: Returned if the request is successful.
          content:
            "*/*":
              schema:
                description: ""
                properties:
                  defaultMapping:
                    type: boolean
                  issueTypes:
                    items:
                      properties: {}
                    type: array
                  workflow:
                    minLength: 1
                    type: string
                required:
                  - workflow
                  - issueTypes
                  - defaultMapping
                type: object
    put:
      description: Sets the issue types for a workflow in a workflow scheme. The workflow
        can also be set as the default workflow for the workflow scheme.
        Unmapped issues types are mapped to the default workflow.
      parameters:
        - description: The ID of the workflow scheme.
          in: path
          name: id
          required: true
          schema:
            type: integer
        - description: The name of the workflow.
          in: query
          name: workflowName
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/Body5"
      responses:
        "200":
          description: Returned if the request is successful.
          content:
            "*/*":
              schema:
                description: ""
                properties:
                  defaultWorkflow:
                    minLength: 1
                    type: string
                  description:
                    minLength: 1
                    type: string
                  draft:
                    type: boolean
                  id:
                    type: number
                  issueTypeMappings:
                    properties:
                      "10000":
                        minLength: 1
                        type: string
                      "10001":
                        minLength: 1
                        type: string
                    required:
                      - "10000"
                      - "10001"
                    type: object
                  name:
                    minLength: 1
                    type: string
                  self:
                    minLength: 1
                    type: string
                required:
                  - id
                  - name
                  - description
                  - defaultWorkflow
                  - issueTypeMappings
                  - draft
                  - self
                type: object
  /worklog/deleted:
    get:
      description: Returns a list of IDs and delete timestamps for worklogs deleted after a
        date and time.
      parameters:
        - description: The date and time, in UNIX timestamp format, after which deleted
            worklogs are returned.
          in: query
          name: since
          schema:
            type: integer
      responses:
        "200":
          description: Returned if the request is successful.
          content:
            "*/*":
              schema:
                description: ""
                properties:
                  lastPage:
                    type: boolean
                  nextPage:
                    minLength: 1
                    type: string
                  self:
                    minLength: 1
                    type: string
                  since:
                    type: number
                  until:
                    type: number
                  values:
                    items:
                      properties:
                        properties:
                          items:
                            properties: {}
                          type: array
                        updatedTime:
                          type: number
                        worklogId:
                          type: number
                      required:
                        - worklogId
                        - updatedTime
                    minItems: 1
                    type: array
                    uniqueItems: true
                required:
                  - values
                  - since
                  - until
                  - self
                  - nextPage
                  - lastPage
                type: object
  /worklog/list:
    post:
      description: Returns worklog details for a list of worklog IDs.
      parameters:
        - description: Use expand to include additional information about worklogs in the
            response. This parameter accepts properties that returns the
            properties of each worklog.
          in: query
          name: expand
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                ids:
                  description: A list of worklog IDs.
                  items:
                    type: integer
                  type: array
              type: object
      responses:
        "200":
          description: Returned if the request is successful.
          content:
            "*/*":
              schema:
                description: ""
                items:
                  properties:
                    author:
                      properties:
                        active:
                          type: boolean
                        displayName:
                          minLength: 1
                          type: string
                        name:
                          minLength: 1
                          type: string
                        self:
                          minLength: 1
                          type: string
                      required:
                        - self
                        - name
                        - displayName
                        - active
                      type: object
                    comment:
                      properties:
                        content:
                          items:
                            properties:
                              content:
                                items:
                                  properties:
                                    text:
                                      minLength: 1
                                      type: string
                                    type:
                                      minLength: 1
                                      type: string
                                  required:
                                    - type
                                    - text
                                minItems: 1
                                type: array
                                uniqueItems: true
                              type:
                                minLength: 1
                                type: string
                            required:
                              - type
                          minItems: 1
                          type: array
                          uniqueItems: true
                        type:
                          minLength: 1
                          type: string
                        version:
                          type: number
                      required:
                        - type
                        - version
                        - content
                      type: object
                    id:
                      minLength: 1
                      type: string
                    issueId:
                      minLength: 1
                      type: string
                    self:
                      minLength: 1
                      type: string
                    started:
                      minLength: 1
                      type: string
                    timeSpent:
                      minLength: 1
                      type: string
                    timeSpentSeconds:
                      type: number
                    updateAuthor:
                      properties:
                        active:
                          type: boolean
                        displayName:
                          minLength: 1
                          type: string
                        name:
                          minLength: 1
                          type: string
                        self:
                          minLength: 1
                          type: string
                      required:
                        - self
                        - name
                        - displayName
                        - active
                      type: object
                    updated:
                      minLength: 1
                      type: string
                    visibility:
                      properties:
                        type:
                          minLength: 1
                          type: string
                        value:
                          minLength: 1
                          type: string
                      required:
                        - type
                        - value
                      type: object
                  required:
                    - self
                    - author
                    - updateAuthor
                    - comment
                    - updated
                    - visibility
                    - started
                    - timeSpent
                    - timeSpentSeconds
                    - id
                    - issueId
                  type: object
                minItems: 1
                type: array
                uniqueItems: true
  /worklog/updated:
    get:
      description: Returns a list of IDs and update timestamps for worklogs updated after a
        date and time.
      parameters:
        - description: Use expand to include additional information about worklogs in the
            response. This parameter accepts properties that returns the
            properties of each worklog.
          in: query
          name: expand
          schema:
            type: string
        - description: The date and time, in UNIX timestamp format, after which updated
            worklogs are returned.
          in: query
          name: since
          schema:
            type: integer
      responses:
        "200":
          description: Returned if the request is successful.
          content:
            "*/*":
              schema:
                description: ""
                properties:
                  lastPage:
                    type: boolean
                  nextPage:
                    minLength: 1
                    type: string
                  self:
                    minLength: 1
                    type: string
                  since:
                    type: number
                  until:
                    type: number
                  values:
                    items:
                      properties:
                        properties:
                          items:
                            properties: {}
                          type: array
                        updatedTime:
                          type: number
                        worklogId:
                          type: number
                      required:
                        - worklogId
                        - updatedTime
                    minItems: 1
                    type: array
                    uniqueItems: true
                required:
                  - values
                  - since
                  - until
                  - self
                  - nextPage
                  - lastPage
                type: object
servers:
  - url: https://jira.atlassian.com/rest/api/3
components:
  requestBodies:
    Body:
      content:
        application/json:
          schema:
            properties:
              config:
                type: object
              properties:
                description: The properties can be any arbitrary key value pairs. These
                  properties can be searched using JQL, if the extractions (see
                  https://developer.atlassian.com/cloud/jira/platform/modules/issue-field-option-property-index/)
                  are defined in the descriptor for the issue field module.
                type: object
              value:
                description: The option's name, which is displayed in the UI.
                type: string
            type: object
    Body2:
      content:
        application/json:
          schema:
            properties:
              description:
                description: The description of the project category. Required on create,
                  optional on update.
                type: string
              name:
                description: The name of the project category. Required on create, optional
                  on update.
                type: string
            type: object
    Body3:
      content:
        application/json:
          schema:
            properties:
              author:
                description: User details. Read only.
                type: object
              comment:
                description: A comment about the worklog. Optional when creating or
                  updating a worklog.
                type: object
              properties:
                description: Details of properties for the worklog. Optional when creating
                  or updating a worklog.
                items:
                  type: object
                type: array
              started:
                description: The datetime on which the worklog effort was started. Required
                  when creating a worklog. Optional when updating a worklog.
                type: string
              timeSpent:
                description: "The time spent working on the issue as days (#d), hours (#h),
                  or minutes (#m or #). Required when creating a worklog if
                  timeSpentSeconds isn't provided. Optional when updating a
                  worklog. Cannot be provided if timeSpentSecond is provided."
                type: string
              timeSpentSeconds:
                description: The time in seconds spent working on the issue. Required when
                  creating a worklog if timeSpent isn't provided. Optional when
                  updating a worklog. Cannot be provided if timeSpent is
                  provided.
                type: integer
              updateAuthor:
                description: User details. Read only.
                type: object
              visibility:
                description: The group or role to which this item is visible.
                type: object
            type: object
    Body4:
      content:
        application/json:
          schema:
            properties:
              updateDraftIfNeeded:
                description: Indicates whether a draft workflow scheme is created or
                  updated when updating an active workflow scheme. The draft is
                  updated with the new default workflow. Defaults to false.
                type: boolean
              workflow:
                description: The name of the workflow to set as the default workflow. For
                  example, jira.
                type: string
            type: object
    Body5:
      content:
        application/json:
          schema:
            properties:
              defaultMapping:
                description: Indicates whether the workflow is the default workflow for the
                  workflow scheme.
                type: boolean
              issueTypes:
                description: The list of issue type IDs.
                items:
                  type: string
                type: array
              updateDraftIfNeeded:
                description: Indicates whether a draft workflow scheme is created or
                  updated when updating an active workflow scheme. The draft is
                  updated with the new workflow-issue types mapping. Defaults to
                  false.
                type: boolean
              workflow:
                description: The name of the workflow. For example, jira. Optional if
                  updating the workflow-issue types mapping.
                type: string
            type: object
    Body6:
      content:
        application/json:
          schema:
            properties:
              assignee:
                description: A user.
                type: object
              assigneeType:
                description: "The nominal user type used to determine the assignee for
                  issues created with this component. See realAssigneeType for
                  details on how the type of the user, and hence the user,
                  assigned to issues is determined. Can take the following
                  values:"
                enum:
                  - PROJECT_DEFAULT
                  - COMPONENT_LEAD
                  - PROJECT_LEAD
                  - UNASSIGNED
                type: string
              description:
                description: The description for the component. Optional when creating or
                  updating a component.
                type: string
              lead:
                description: A user.
                type: object
              leadAccountId:
                description: The accountId of the component's lead user. The accountId
                  uniquely identifies the user across all Atlassian products.
                  For example,
                  384093:32b4d9w0-f6a5-3535-11a3-9c8c88d10192.Optional when
                  creating or updating a component.
                type: string
              leadUserName:
                description: This property has been deprecated in favour of leadAccountId
                  due to privacy changes. See the migration guide for
                  details.The username of the component's lead user. Optional
                  when creating or updating a component.
                type: string
              name:
                description: The unique name for the component in the project. Required
                  when creating a component. Optional when updating a component.
                  Maximum length 255 chars.
                type: string
              project:
                description: The key of the project to which the component is assigned.
                  Required when creating a component. Can't be updated.
                type: string
              projectId:
                description: Not used.
                type: integer
              realAssignee:
                description: A user.
                type: object
            type: object
    Body7:
      content:
        application/json:
          schema:
            properties:
              description:
                description: A description of the filter (e.g., This filter returns open
                  bugs for the Example project).
                type: string
              name:
                description: The name of the filter (e.g., Open bugs for Example project).
                  Must be unique.
                type: string
              owner:
                description: A user.
                type: object
              sharePermissions:
                description: The groups and projects that the filter is shared with. This
                  can be specified when updating a filter, but not when creating
                  a filter.
                items:
                  type: object
                type: array
              sharedUsers:
                type: object
              subscriptions:
                type: object
            type: object
    Body8:
      content:
        application/json:
          schema:
            properties:
              fields:
                description: List of issue screen field to update, specifying the sub-field
                  to update and its value. This field provides a straightforward
                  option when setting a single sub-field. When multiple
                  sub-fields or other operations are required, use update.
                  Fields included in here cannot be included in update.
                type: object
              historyMetadata:
                description: Details of issue history metadata. Deprecated.
                type: object
              properties:
                description: Details of issue properties to be add or update.
                items:
                  type: object
                type: array
              transition:
                description: Details of an issue transition.
                type: object
              update:
                description: List of operations to perform on issue screen fields. Note
                  that fields included in here cannot be included in fields.
                type: object
            type: object
    Body9:
      content:
        application/json:
          schema:
            properties:
              issueType:
                description: The ID of the issue type. Not required if updating the issue
                  type-workflow mapping.
                type: string
              updateDraftIfNeeded:
                description: Set to true to create or update the draft of a workflow scheme
                  and update the mapping in the draft, when the workflow scheme
                  cannot be edited. Defaults to false. Only applicable when
                  updating the workflow-issue types mapping.
                type: boolean
              workflow:
                description: The name of the workflow. For example, jira.
                type: string
            type: object
    Body10:
      content:
        application/json:
          schema:
            properties:
              body:
                description: The comment.
                type: object
              jsdPublic:
                description: Indicates whether the comment is visible in Jira Service Desk.
                  Optional on create and update. Defaults to true. If the site
                  doesn't use Jira Service Desk or the project isn't a Jira
                  Service Desk projectthis parameter defaults to true.
                type: boolean
              properties:
                description: A list of comment properties. Optional on create and update.
                items:
                  type: object
                type: array
              visibility:
                description: The group or role to which this comment is visible. Optional
                  on create and update.
                type: object
            type: object
    Body11:
      content:
        application/json:
          schema:
            properties:
              application:
                description: The application the linked item is in.
                type: object
              globalId:
                description: The global ID of the link, such as the ID of the item on the
                  remote system. The maximum length is 255 characters.
                type: string
              object:
                description: The linked item.
                type: object
              relationship:
                description: Description of the relationship between the issue and the
                  linked item.
                type: string
            type: object
    Body12:
      content:
        application/json:
          schema:
            properties:
              id:
                description: "The ID of the issue link type and is used as follows:"
                type: string
              inward:
                description: "The description of the issue link type inward link and is
                  used as follows:"
                type: string
              name:
                description: "The name of the issue link type and is used as follows:"
                type: string
              outward:
                description: "The description of the issue link type outward link and is
                  used as follows:"
                type: string
            type: object
    Body13:
      content:
        application/json:
          schema:
            properties:
              description:
                description: A description for the permission scheme.
                type: string
              name:
                description: The name of the permission scheme. Must be unique. Required
                  when creating or updating a permission scheme.
                type: string
              permissions:
                description: The permission scheme to create or update. See About
                  permission schemes and grants for more information.
                items:
                  type: object
                type: array
              scope:
                description: The scope of the permission scheme
                type: object
            type: object
    Body14:
      content:
        application/json:
          schema:
            properties:
              assigneeType:
                description: The default assignee when creating issues for this project.
                enum:
                  - PROJECT_LEAD
                  - UNASSIGNED
                type: string
              avatarId:
                description: An integer value for the project's avatar.
                type: integer
              categoryId:
                description: The ID of the project's category. A complete list of category
                  IDs can be found using the Get all project categories
                  resource.
                type: integer
              description:
                description: A brief description of the project.
                type: string
              issueSecurityScheme:
                description: The ID of the issue security scheme for the project, which
                  enables you to control who can and cannot view issues. Use the
                  Get issue security schemes resource to get all issue security
                  scheme IDs.
                type: integer
              key:
                description: Project keys must be unique and start with an uppercase letter
                  followed by one or more uppercase alphanumeric characters. Max
                  length is 10 characters. Required when creating a project.
                  Optional when updating a project.
                type: string
              lead:
                description: Sets the username of the project lead. Either lead or
                  leadAccountId should be setwhen creating a project. Optional
                  when updating a project.
                type: string
              leadAccountId:
                description: Sets the project lead account id.Either lead or leadAccountId
                  should be setwhen creating a project. Optional when updating a
                  project.
                type: string
              name:
                description: The name of the project. Required when creating a project.
                  Optional when updating a project.
                type: string
              notificationScheme:
                description: The ID of the notification scheme for the project. Use the Get
                  notification schemes resource to get a list of notification
                  scheme IDs.
                type: integer
              permissionScheme:
                description: The ID of the permission scheme for the project. Use the Get
                  all permission schemes resource to see a list of all
                  permission scheme IDs.
                type: integer
              projectTemplateKey:
                description: A prebuilt configuration for a project. The type of the
                  projectTemplateKey must match with the type of the
                  projectTypeKey. Required when creating a project. Not
                  applicable for the Update project resource.
                enum:
                  - com.pyxis.greenhopper.jira:gh-simplified-agility
                  - com.pyxis.greenhopper.jira:gh-simplified-basic
                  - com.pyxis.greenhopper.jira:gh-simplified-kanban
                  - com.pyxis.greenhopper.jira:gh-simplified-scrum
                  - com.atlassian.servicedesk:simplified-it-service-desk
                  - com.atlassian.servicedesk:simplified-internal-service-desk
                  - com.atlassian.servicedesk:simplified-external-service-desk
                  - com.atlassian.jira-core-project-templates:jira-core-simplified-content-management
                  - com.atlassian.jira-core-project-templates:jira-core-simplified-document-approval
                  - com.atlassian.jira-core-project-templates:jira-core-simplified-lead-tracking
                type: string
              projectTypeKey:
                description: The project type, which dictates the application-specific
                  feature set. Required when creating a project. Not applicable
                  for the Update project resource. See the Update project type
                  resource instead.
                enum:
                  - software
                  - service_desk
                  - business
                type: string
              url:
                description: A link to information about this project, such as project
                  documentation
                type: string
            type: object
    Body15:
      content:
        application/json:
          schema:
            properties:
              description:
                description: A description of the project role. Required when fully
                  updating a project role. Optional when creating or partially
                  updating a project role.
                type: string
              name:
                description: The name of the project role. Must be unique. Cannot begin or
                  end with whitespace. Max length is 255 characters. Required
                  when creating a project role. Optional when partially updating
                  a project role.
                type: string
            type: object
    Body16:
      content:
        application/json:
          schema:
            properties:
              name:
                description: The name of the screen tab. Required on create and update.
                  Maximum length is 255 characters.
                type: string
            type: object
    Body17:
      content:
        application/json:
          schema:
            properties:
              archived:
                description: Indicates that the version is archived. Optional when creating
                  or updating a version.
                type: boolean
              description:
                description: The description of the version. Optional when creating or
                  updating a version.
                type: string
              issuesStatusForFixVersion:
                type: object
              moveUnfixedIssuesTo:
                description: The URL of the self link to the version to which all unfixed
                  issues are moved when a version is released. Not applicable
                  when creating a version. Optional when updating a version.
                type: string
              name:
                description: The unique name of the version. Required when creating a
                  version. Optional when updating a version. Maximum length 255
                  chars.
                type: string
              operations:
                description: If the expand option operations is used, returns the list of
                  operations available for this version. Read only.
                items:
                  type: object
                type: array
              project:
                description: Deprecated. Use projectId.
                type: string
              projectId:
                description: The ID of the project to which this version is attached.
                  Required when creating a version. Not applicable when updating
                  a version.
                type: integer
              releaseDate:
                description: The release date of the version. Expressed in ISO 8601 format
                  (yyyy-mm-dd). Optional when creating or updating a version.
                type: string
              released:
                description: Indicates that the version is released. If the version is
                  released a request to release again is ignored. Not applicable
                  when creating a version. Optional when updating a version.
                type: boolean
              remotelinks:
                description: If the expand option remotelinks is used, returns the list of
                  remote links stored against this version. Read only.
                items:
                  type: object
                type: array
              startDate:
                description: The start date of the version. Expressed in ISO 8601 format
                  (yyyy-mm-dd). Optional when creating or updating a version.
                type: string
            type: object
    Body18:
      content:
        application/json:
          schema:
            properties:
              key:
                description: The key of the transition property. Also known as the name of
                  the transition property.
                type: string
              value:
                description: The value of the transition property.
                type: string
            type: object
    Body19:
      content:
        application/json:
          schema:
            properties:
              defaultWorkflow:
                description: The name of the default workflow for the workflow scheme. The
                  default workflow has All Unassigned Issue Types assigned to it
                  in Jira. If defaultWorkflow is not specified when creating a
                  workflow scheme, it is set to Jira Workflow (jira).
                type: string
              description:
                description: The description of the workflow scheme.
                type: string
              issueTypeMappings:
                description: The issue type-project mappings, where each mapping is an
                  issue type ID and project name pair. Note that an issue type
                  can only be mapped to one project in a workflow scheme.
                type: object
              name:
                description: The name of the workflow scheme. The name must be unique.
                  Maximum length 255 characters.
                type: string
              updateDraftIfNeeded:
                description: "Indicates whether to create or update a draft workflow scheme
                  when updating an active workflow scheme. An active workflow
                  scheme is a workflow scheme that is used by at least one
                  project. The following examples show how this property works:"
                type: boolean
            type: object
  securitySchemes:
    Basic:
      type: http
      scheme: basic
    OAuth:
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: https://auth.atlassian.com/authorize
          tokenUrl: https://auth.atlassian.com/oauth/token
          scopes:
            manage:jira-configuration: Take Jira administration actions (for example, create projects and
              custom fields, view workflows, and manage issue link types)
            manage:jira-project: Create and edit project settings and create new project-level
              objects (for example, versions and components)
            read:jira-user: View user information in Jira that the user has access to,
              including usernames, email addresses, and avatars
            read:jira-work: Read Jira project and issue data, search for issues and objects
              associated with issues like attachments and worklogs
            write:jira-work: Create and edit issues in Jira, post comments as the user, create
              worklogs, and delete issues
