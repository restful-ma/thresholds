openapi: 3.0.0
info:
  version: 2016-08-04
  x-release: v4
  title: AWS Health APIs and Notifications
  description: '<fullname>AWS Health</fullname> <p>The AWS Health API provides programmatic
    access to the AWS Health information that is presented in the <a
    href="https://phd.aws.amazon.com/phd/home#/">AWS Personal Health
    Dashboard</a>. You can get information about events that affect your AWS
    resources:</p> <ul> <li> <p> <a>DescribeEvents</a>: Summary information
    about events.</p> </li> <li> <p> <a>DescribeEventDetails</a>: Detailed
    information about one or more events.</p> </li> <li> <p>
    <a>DescribeAffectedEntities</a>: Information about AWS resources that are
    affected by one or more events.</p> </li> </ul> <p>In addition, these
    operations provide information about event types and summary counts of
    events or affected entities:</p> <ul> <li> <p> <a>DescribeEventTypes</a>:
    Information about the kinds of events that AWS Health tracks.</p> </li> <li>
    <p> <a>DescribeEventAggregates</a>: A count of the number of events that
    meet specified criteria.</p> </li> <li> <p> <a>DescribeEntityAggregates</a>:
    A count of the number of affected entities that meet specified criteria.</p>
    </li> </ul> <p>The Health API requires a Business or Enterprise support plan
    from <a href="http://aws.amazon.com/premiumsupport/">AWS Support</a>.
    Calling the Health API from an account that does not have a Business or
    Enterprise support plan causes a <code>SubscriptionRequiredException</code>.
    </p> <p>For authentication of requests, AWS Health uses the <a
    href="https://docs.aws.amazon.com/general/latest/gr/signature-version-4.html">Signature
    Version 4 Signing Process</a>.</p> <p>See the <a
    href="https://docs.aws.amazon.com/health/latest/ug/what-is-aws-health.html">AWS
    Health User Guide</a> for information about how to use the API.</p> <p>
    <b>Service Endpoint</b> </p> <p>The HTTP endpoint for the AWS Health API
    is:</p> <ul> <li> <p>https://health.us-east-1.amazonaws.com </p> </li>
    </ul>'
  x-logo:
    url: https://twitter.com/awscloud/profile_image?size=original
    backgroundColor: "#FFFFFF"
  termsOfService: https://aws.amazon.com/service-terms/
  contact:
    name: Mike Ralphson
    email: mike.ralphson@gmail.com
    url: https://github.com/mermade/aws2openapi
    x-twitter: PermittedSoc
  license:
    name: Apache 2.0 License
    url: http://www.apache.org/licenses/
  x-providerName: amazonaws.com
  x-serviceName: health
  x-origin:
    - contentType: application/json
      url: https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/health-2016-08-04.normal.json
      converter:
        url: https://github.com/mermade/aws2openapi
        version: 1.0.0
      x-apisguru-direct: true
  x-apiClientRegistration:
    url: https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct
  x-apisguru-categories:
    - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: https://docs.aws.amazon.com/health/
x-hasEquivalentPaths: true
security:
  - hmac: []
paths:
  /#X-Amz-Target=AWSHealth_20160804.DescribeAffectedEntities:
    post:
      operationId: DescribeAffectedEntities
      description: <p>Returns a list of entities that have been affected by the specified
        events, based on the specified filter criteria. Entities can refer to
        individual customer resources, groups of customer resources, or any
        other construct, depending on the AWS service. Events that have impact
        beyond that of the affected entities, or where the extent of impact is
        unknown, include at least one entity indicating this.</p> <p>At least
        one event ARN is required. Results are sorted by the
        <code>lastUpdatedTime</code> of the entity, starting with the most
        recent.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeAffectedEntitiesResponse"
        "480":
          description: InvalidPaginationToken
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidPaginationToken"
        "481":
          description: UnsupportedLocale
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnsupportedLocale"
      parameters:
        - name: maxResults
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: nextToken
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSHealth_20160804.DescribeAffectedEntities
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DescribeAffectedEntitiesRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSHealth_20160804.DescribeEntityAggregates:
    post:
      operationId: DescribeEntityAggregates
      description: Returns the number of entities that are affected by each of the
        specified events. If no events are specified, the counts of all affected
        entities are returned.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeEntityAggregatesResponse"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSHealth_20160804.DescribeEntityAggregates
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DescribeEntityAggregatesRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSHealth_20160804.DescribeEventAggregates:
    post:
      operationId: DescribeEventAggregates
      description: Returns the number of events of each event type (issue, scheduled
        change, and account notification). If no filter is specified, the counts
        of all events in each category are returned.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeEventAggregatesResponse"
        "480":
          description: InvalidPaginationToken
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidPaginationToken"
      parameters:
        - name: maxResults
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: nextToken
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSHealth_20160804.DescribeEventAggregates
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DescribeEventAggregatesRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSHealth_20160804.DescribeEventDetails:
    post:
      operationId: DescribeEventDetails
      description: <p>Returns detailed information about one or more specified events.
        Information includes standard event data (region, service, etc., as
        returned by <a>DescribeEvents</a>), a detailed event description, and
        possible additional metadata that depends upon the nature of the event.
        Affected entities are not included; to retrieve those, use the
        <a>DescribeAffectedEntities</a> operation.</p> <p>If a specified event
        cannot be retrieved, an error message is returned for that event.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeEventDetailsResponse"
        "480":
          description: UnsupportedLocale
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnsupportedLocale"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSHealth_20160804.DescribeEventDetails
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DescribeEventDetailsRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSHealth_20160804.DescribeEventTypes:
    post:
      operationId: DescribeEventTypes
      description: Returns the event types that meet the specified filter criteria. If no
        filter criteria are specified, all event types are returned, in no
        particular order.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeEventTypesResponse"
        "480":
          description: InvalidPaginationToken
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidPaginationToken"
        "481":
          description: UnsupportedLocale
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnsupportedLocale"
      parameters:
        - name: maxResults
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: nextToken
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSHealth_20160804.DescribeEventTypes
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DescribeEventTypesRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSHealth_20160804.DescribeEvents:
    post:
      operationId: DescribeEvents
      description: <p>Returns information about events that meet the specified filter
        criteria. Events are returned in a summary form and do not include the
        detailed description, any additional metadata that depends on the event
        type, or any affected resources. To retrieve that information, use the
        <a>DescribeEventDetails</a> and <a>DescribeAffectedEntities</a>
        operations.</p> <p>If no filter criteria are specified, all events are
        returned. Results are sorted by <code>lastModifiedTime</code>, starting
        with the most recent.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeEventsResponse"
        "480":
          description: InvalidPaginationToken
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidPaginationToken"
        "481":
          description: UnsupportedLocale
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnsupportedLocale"
      parameters:
        - name: maxResults
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: nextToken
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSHealth_20160804.DescribeEvents
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DescribeEventsRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
servers:
  - url: https://health.us-east-1.amazonaws.com
    variables: {}
    description: The general AWSHealth multi-region endpoint
  - url: http://health.{region}.amazonaws.com.cn
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The AWSHealth endpoint for China (Beijing) and China (Ningxia)
  - url: https://health.{region}.amazonaws.com.cn
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The AWSHealth endpoint for China (Beijing) and China (Ningxia)
components:
  parameters:
    X-Amz-Content-Sha256:
      name: X-Amz-Content-Sha256
      in: header
      required: false
      schema:
        type: string
    X-Amz-Date:
      name: X-Amz-Date
      in: header
      required: false
      schema:
        type: string
    X-Amz-Algorithm:
      name: X-Amz-Algorithm
      in: header
      required: false
      schema:
        type: string
    X-Amz-Credential:
      name: X-Amz-Credential
      in: header
      required: false
      schema:
        type: string
    X-Amz-Security-Token:
      name: X-Amz-Security-Token
      in: header
      required: false
      schema:
        type: string
    X-Amz-Signature:
      name: X-Amz-Signature
      in: header
      required: false
      schema:
        type: string
    X-Amz-SignedHeaders:
      name: X-Amz-SignedHeaders
      in: header
      required: false
      schema:
        type: string
  securitySchemes:
    hmac:
      type: apiKey
      name: Authorization
      in: header
      description: Amazon Signature authorization v4
      x-amazon-apigateway-authtype: awsSigv4
  schemas:
    DescribeAffectedEntitiesResponse:
      type: object
      properties:
        entities:
          $ref: "#/components/schemas/EntityList"
        nextToken:
          $ref: "#/components/schemas/nextToken"
    DescribeAffectedEntitiesRequest:
      type: object
      required:
        - filter
      properties:
        filter:
          $ref: "#/components/schemas/EntityFilter"
        locale:
          $ref: "#/components/schemas/locale"
        nextToken:
          $ref: "#/components/schemas/nextToken"
        maxResults:
          $ref: "#/components/schemas/maxResults"
    InvalidPaginationToken: {}
    UnsupportedLocale: {}
    DescribeEntityAggregatesResponse:
      type: object
      properties:
        entityAggregates:
          $ref: "#/components/schemas/EntityAggregateList"
    DescribeEntityAggregatesRequest:
      type: object
      properties:
        eventArns:
          $ref: "#/components/schemas/EventArnsList"
    DescribeEventAggregatesResponse:
      type: object
      properties:
        eventAggregates:
          $ref: "#/components/schemas/EventAggregateList"
        nextToken:
          $ref: "#/components/schemas/nextToken"
    DescribeEventAggregatesRequest:
      type: object
      required:
        - aggregateField
      properties:
        filter:
          $ref: "#/components/schemas/EventFilter"
        aggregateField:
          $ref: "#/components/schemas/eventAggregateField"
        maxResults:
          $ref: "#/components/schemas/maxResults"
        nextToken:
          $ref: "#/components/schemas/nextToken"
    DescribeEventDetailsResponse:
      type: object
      properties:
        successfulSet:
          $ref: "#/components/schemas/DescribeEventDetailsSuccessfulSet"
        failedSet:
          $ref: "#/components/schemas/DescribeEventDetailsFailedSet"
    DescribeEventDetailsRequest:
      type: object
      required:
        - eventArns
      properties:
        eventArns:
          $ref: "#/components/schemas/eventArnList"
        locale:
          $ref: "#/components/schemas/locale"
    DescribeEventTypesResponse:
      type: object
      properties:
        eventTypes:
          $ref: "#/components/schemas/EventTypeList"
        nextToken:
          $ref: "#/components/schemas/nextToken"
    DescribeEventTypesRequest:
      type: object
      properties:
        filter:
          $ref: "#/components/schemas/EventTypeFilter"
        locale:
          $ref: "#/components/schemas/locale"
        nextToken:
          $ref: "#/components/schemas/nextToken"
        maxResults:
          $ref: "#/components/schemas/maxResults"
    DescribeEventsResponse:
      type: object
      properties:
        events:
          $ref: "#/components/schemas/EventList"
        nextToken:
          $ref: "#/components/schemas/nextToken"
    DescribeEventsRequest:
      type: object
      properties:
        filter:
          $ref: "#/components/schemas/EventFilter"
        nextToken:
          $ref: "#/components/schemas/nextToken"
        maxResults:
          $ref: "#/components/schemas/maxResults"
        locale:
          $ref: "#/components/schemas/locale"
    entityArn:
      type: string
      maxLength: 1600
    eventArn:
      type: string
      pattern: arn:aws(-[a-z]+(-[a-z]+)?)?:health:[^:]*:[^:]*:event(?:/[\w-]+){3}
      maxLength: 1600
    entityValue:
      type: string
      maxLength: 256
    entityUrl:
      type: string
      pattern: https?://.+\.(amazon\.com|amazonaws\.com|amazonaws\.cn|c2s\.ic\.gov|sc2s\.sgov\.gov|amazonaws-us-gov.com)/.*
    accountId:
      type: string
      pattern: "[0-9]{12}"
    timestamp:
      type: string
      format: date-time
    entityStatusCode:
      type: string
      enum:
        - IMPAIRED
        - UNIMPAIRED
        - UNKNOWN
    tagSet:
      type: object
      maxProperties: 50
      additionalProperties:
        $ref: "#/components/schemas/tagValue"
    AffectedEntity:
      type: object
      properties:
        entityArn:
          $ref: "#/components/schemas/entityArn"
        eventArn:
          $ref: "#/components/schemas/eventArn"
        entityValue:
          $ref: "#/components/schemas/entityValue"
        entityUrl:
          $ref: "#/components/schemas/entityUrl"
        awsAccountId:
          $ref: "#/components/schemas/accountId"
        lastUpdatedTime:
          $ref: "#/components/schemas/timestamp"
        statusCode:
          $ref: "#/components/schemas/entityStatusCode"
        tags:
          $ref: "#/components/schemas/tagSet"
      description: Information about an entity that is affected by a Health event.
    DateTimeRange:
      type: object
      properties:
        from:
          $ref: "#/components/schemas/timestamp"
        to:
          $ref: "#/components/schemas/timestamp"
      description: "A range of dates and times that is used by the <a>EventFilter</a> and
        <a>EntityFilter</a> objects. If <code>from</code> is set and
        <code>to</code> is set: match items where the timestamp
        (<code>startTime</code>, <code>endTime</code>, or
        <code>lastUpdatedTime</code>) is between <code>from</code> and
        <code>to</code> inclusive. If <code>from</code> is set and
        <code>to</code> is not set: match items where the timestamp value is
        equal to or after <code>from</code>. If <code>from</code> is not set and
        <code>to</code> is set: match items where the timestamp value is equal
        to or before <code>to</code>."
    EntityFilter:
      type: object
      required:
        - eventArns
      properties:
        eventArns:
          $ref: "#/components/schemas/eventArnList"
        entityArns:
          $ref: "#/components/schemas/entityArnList"
        entityValues:
          $ref: "#/components/schemas/entityValueList"
        lastUpdatedTimes:
          $ref: "#/components/schemas/dateTimeRangeList"
        tags:
          $ref: "#/components/schemas/tagFilter"
        statusCodes:
          $ref: "#/components/schemas/entityStatusCodeList"
      description: The values to use to filter results from the
        <a>DescribeAffectedEntities</a> operation.
    locale:
      type: string
      minLength: 2
      maxLength: 256
    nextToken:
      type: string
      pattern: "[a-zA-Z0-9=/+_.-]{4,512}"
    maxResults:
      type: integer
      minimum: 10
      maximum: 100
    EntityList:
      type: array
      items:
        $ref: "#/components/schemas/AffectedEntity"
    EventArnsList:
      type: array
      items:
        $ref: "#/components/schemas/eventArn"
      minItems: 1
      maxItems: 50
    EntityAggregateList:
      type: array
      items:
        $ref: "#/components/schemas/EntityAggregate"
    EventFilter:
      type: object
      properties:
        eventArns:
          $ref: "#/components/schemas/eventArnList"
        eventTypeCodes:
          $ref: "#/components/schemas/eventTypeList"
        services:
          $ref: "#/components/schemas/serviceList"
        regions:
          $ref: "#/components/schemas/regionList"
        availabilityZones:
          $ref: "#/components/schemas/availabilityZones"
        startTimes:
          $ref: "#/components/schemas/dateTimeRangeList"
        endTimes:
          $ref: "#/components/schemas/dateTimeRangeList"
        lastUpdatedTimes:
          $ref: "#/components/schemas/dateTimeRangeList"
        entityArns:
          $ref: "#/components/schemas/entityArnList"
        entityValues:
          $ref: "#/components/schemas/entityValueList"
        eventTypeCategories:
          $ref: "#/components/schemas/eventTypeCategoryList"
        tags:
          $ref: "#/components/schemas/tagFilter"
        eventStatusCodes:
          $ref: "#/components/schemas/eventStatusCodeList"
      description: The values to use to filter results from the <a>DescribeEvents</a> and
        <a>DescribeEventAggregates</a> operations.
    eventAggregateField:
      type: string
      enum:
        - eventTypeCategory
    EventAggregateList:
      type: array
      items:
        $ref: "#/components/schemas/EventAggregate"
    EventDetailsErrorItem:
      type: object
      properties:
        eventArn:
          $ref: "#/components/schemas/eventArn"
        errorName:
          $ref: "#/components/schemas/string"
        errorMessage:
          $ref: "#/components/schemas/string"
      description: Error information returned when a <a>DescribeEventDetails</a> operation
        cannot find a specified event.
    DescribeEventDetailsFailedSet:
      type: array
      items:
        $ref: "#/components/schemas/EventDetailsErrorItem"
    eventArnList:
      type: array
      items:
        $ref: "#/components/schemas/eventArn"
      minItems: 1
      maxItems: 10
    DescribeEventDetailsSuccessfulSet:
      type: array
      items:
        $ref: "#/components/schemas/EventDetails"
    EventDetails:
      type: object
      properties:
        event:
          $ref: "#/components/schemas/Event"
        eventDescription:
          $ref: "#/components/schemas/EventDescription"
        eventMetadata:
          $ref: "#/components/schemas/eventMetadata"
      description: Detailed information about an event. A combination of an <a>Event</a>
        object, an <a>EventDescription</a> object, and additional metadata about
        the event. Returned by the <a>DescribeEventDetails</a> operation.
    EventTypeFilter:
      type: object
      properties:
        eventTypeCodes:
          $ref: "#/components/schemas/EventTypeCodeList"
        services:
          $ref: "#/components/schemas/serviceList"
        eventTypeCategories:
          $ref: "#/components/schemas/EventTypeCategoryList"
      description: The values to use to filter results from the <a>DescribeEventTypes</a>
        operation.
    EventTypeList:
      type: array
      items:
        $ref: "#/components/schemas/EventType"
    EventList:
      type: array
      items:
        $ref: "#/components/schemas/Event"
    count:
      type: integer
    EntityAggregate:
      type: object
      properties:
        eventArn:
          $ref: "#/components/schemas/eventArn"
        count:
          $ref: "#/components/schemas/count"
      description: The number of entities that are affected by one or more events. Returned
        by the <a>DescribeEntityAggregates</a> operation.
    entityArnList:
      type: array
      items:
        $ref: "#/components/schemas/entityArn"
      minItems: 1
      maxItems: 100
    entityValueList:
      type: array
      items:
        $ref: "#/components/schemas/entityValue"
      minItems: 1
      maxItems: 100
    dateTimeRangeList:
      type: array
      items:
        $ref: "#/components/schemas/DateTimeRange"
      minItems: 1
      maxItems: 10
    tagFilter:
      type: array
      items:
        $ref: "#/components/schemas/tagSet"
      maxItems: 50
    entityStatusCodeList:
      type: array
      items:
        $ref: "#/components/schemas/entityStatusCode"
      minItems: 1
      maxItems: 3
    service:
      type: string
      minLength: 2
      maxLength: 30
    eventTypeCode:
      type: string
      minLength: 3
      maxLength: 100
    eventTypeCategory:
      type: string
      enum:
        - issue
        - accountNotification
        - scheduledChange
        - investigation
      minLength: 3
      maxLength: 255
    region:
      type: string
      pattern: "[^:/]{2,25}"
    availabilityZone:
      type: string
      pattern: "[a-z]{2}\\-[0-9a-z\\-]{4,16}"
    eventStatusCode:
      type: string
      enum:
        - open
        - closed
        - upcoming
    Event:
      type: object
      properties:
        arn:
          $ref: "#/components/schemas/eventArn"
        service:
          $ref: "#/components/schemas/service"
        eventTypeCode:
          $ref: "#/components/schemas/eventTypeCode"
        eventTypeCategory:
          $ref: "#/components/schemas/eventTypeCategory"
        region:
          $ref: "#/components/schemas/region"
        availabilityZone:
          $ref: "#/components/schemas/availabilityZone"
        startTime:
          $ref: "#/components/schemas/timestamp"
        endTime:
          $ref: "#/components/schemas/timestamp"
        lastUpdatedTime:
          $ref: "#/components/schemas/timestamp"
        statusCode:
          $ref: "#/components/schemas/eventStatusCode"
      description: Summary information about an event, returned by the
        <a>DescribeEvents</a> operation. The <a>DescribeEventDetails</a>
        operation also returns this information, as well as the
        <a>EventDescription</a> and additional event metadata.
    aggregateValue:
      type: string
    EventAggregate:
      type: object
      properties:
        aggregateValue:
          $ref: "#/components/schemas/aggregateValue"
        count:
          $ref: "#/components/schemas/count"
      description: The number of events of each issue type. Returned by the
        <a>DescribeEventAggregates</a> operation.
    eventDescription:
      type: string
    EventDescription:
      type: object
      properties:
        latestDescription:
          $ref: "#/components/schemas/eventDescription"
      description: The detailed description of the event. Included in the information
        returned by the <a>DescribeEventDetails</a> operation.
    eventMetadata:
      type: object
      additionalProperties:
        $ref: "#/components/schemas/metadataValue"
    string:
      type: string
    eventTypeList:
      type: array
      items:
        $ref: "#/components/schemas/eventType"
      minItems: 1
      maxItems: 10
    serviceList:
      type: array
      items:
        $ref: "#/components/schemas/service"
      minItems: 1
      maxItems: 10
    regionList:
      type: array
      items:
        $ref: "#/components/schemas/region"
      minItems: 1
      maxItems: 10
    availabilityZones:
      type: array
      items:
        $ref: "#/components/schemas/availabilityZone"
    eventTypeCategoryList:
      type: array
      items:
        $ref: "#/components/schemas/eventTypeCategory"
      minItems: 1
      maxItems: 10
    eventStatusCodeList:
      type: array
      items:
        $ref: "#/components/schemas/eventStatusCode"
      minItems: 1
      maxItems: 6
    EventType:
      type: object
      properties:
        service:
          $ref: "#/components/schemas/service"
        code:
          $ref: "#/components/schemas/eventTypeCode"
        category:
          $ref: "#/components/schemas/eventTypeCategory"
      description: Metadata about a type of event that is reported by AWS Health. Data
        consists of the category (for example, <code>issue</code>), the service
        (for example, <code>EC2</code>), and the event type code (for example,
        <code>AWS_EC2_SYSTEM_MAINTENANCE_EVENT</code>).
    EventTypeCategoryList:
      type: array
      items:
        $ref: "#/components/schemas/eventTypeCategory"
      minItems: 1
      maxItems: 10
    EventTypeCodeList:
      type: array
      items:
        $ref: "#/components/schemas/eventTypeCode"
      minItems: 1
      maxItems: 10
    metadataValue:
      type: string
      maxLength: 10240
    eventType:
      type: string
      minLength: 3
      maxLength: 100
    metadataKey:
      type: string
    tagKey:
      type: string
      maxLength: 127
    tagValue:
      type: string
      maxLength: 255
