openapi: 3.0.0
info:
  contact:
    x-twitter: vocadb
  title: VocaDB
  version: v1
  x-apisguru-categories:
    - media
  x-logo:
    url: https://twitter.com/vocadb/profile_image?size=original
  x-origin:
    - format: swagger
      url: http://vocadb.net/swagger/docs/v1
      version: "2.0"
  x-providerName: vocadb.net
paths:
  /api/activityEntries:
    get:
      deprecated: false
      description: "Entries are always returned sorted from newest to oldest.\r

        \            Activity for deleted entries is not returned."
      operationId: ActivityEntryApi_GetList
      parameters:
        - description: Filter to return activity entries only before this date. Optional,
            by default no filter.
          in: query
          name: before
          required: false
          schema:
            type: string
            format: date-time
        - description: Filter to return activity entries only after this date. Optional, by
            default no filter.
          in: query
          name: since
          required: false
          schema:
            type: string
            format: date-time
        - description: Filter by user Id. Optional, by default no filter.
          in: query
          name: userId
          required: false
          schema:
            type: integer
            format: int32
        - description: Filter by entry edit event (either Created or Updated). Optional, by
            default no filter.
          in: query
          name: editEvent
          required: false
          schema:
            type: string
            enum:
              - Created
              - Updated
              - Deleted
              - Restored
        - description: Maximum number of results to return. Default 50. Maximum value 500.
          in: query
          name: maxResults
          required: false
          schema:
            type: integer
            format: int32
        - description: Whether to load total number of items (optional, default to false).
          in: query
          name: getTotalCount
          required: false
          schema:
            type: boolean
        - description: Optional fields.
          in: query
          name: fields
          required: false
          schema:
            type: string
            enum:
              - None
              - ArchivedVersion
              - Entry
        - description: Optional fields for entries.
          in: query
          name: entryFields
          required: false
          schema:
            type: string
            enum:
              - None
              - AdditionalNames
              - Description
              - MainPicture
              - Names
              - PVs
              - Tags
              - WebLinks
        - description: Content language preference.
          in: query
          name: lang
          required: false
          schema:
            type: string
            enum:
              - Default
              - Japanese
              - Romaji
              - English
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PartialFindResult_ActivityEntryForApiCo\
                  ntract_"
            text/json:
              schema:
                $ref: "#/components/schemas/PartialFindResult_ActivityEntryForApiCo\
                  ntract_"
            application/xml:
              schema:
                $ref: "#/components/schemas/PartialFindResult_ActivityEntryForApiCo\
                  ntract_"
            text/xml:
              schema:
                $ref: "#/components/schemas/PartialFindResult_ActivityEntryForApiCo\
                  ntract_"
            text/javascript:
              schema:
                $ref: "#/components/schemas/PartialFindResult_ActivityEntryForApiCo\
                  ntract_"
            application/javascript:
              schema:
                $ref: "#/components/schemas/PartialFindResult_ActivityEntryForApiCo\
                  ntract_"
            application/json-p:
              schema:
                $ref: "#/components/schemas/PartialFindResult_ActivityEntryForApiCo\
                  ntract_"
      summary: Gets a list of recent activity entries.
      tags:
        - ActivityEntryApi
  /api/albums:
    get:
      deprecated: false
      operationId: AlbumApi_GetList
      parameters:
        - description: Album name query (optional).
          in: query
          name: query
          required: false
          schema:
            type: string
        - description: "Disc type. By default nothing. Possible values are Album, Single,
            EP, SplitAlbum, Compilation, Video, Other. Note: only one type
            supported for now."
          in: query
          name: discTypes
          required: false
          schema:
            type: string
            enum:
              - Unknown
              - Album
              - Single
              - EP
              - SplitAlbum
              - Compilation
              - Video
              - Artbook
              - Game
              - Fanmade
              - Instrumental
              - Other
        - description: Filter by tag name (optional). This filter can be specified multiple
            times.
          in: query
          name: tagName
          required: false
          explode: true
          schema:
            type: array
            items:
              type: string
        - description: Filter by tag Id (optional). This filter can be specified multiple
            times.
          in: query
          name: tagId
          required: false
          explode: true
          schema:
            type: array
            items:
              format: int32
              type: integer
        - description: Include child tags, if the tags being filtered by have any.
          in: query
          name: childTags
          required: false
          schema:
            type: boolean
        - description: Filter by artist Id (optional).
          in: query
          name: artistId
          required: false
          explode: true
          schema:
            type: array
            items:
              format: int32
              type: integer
        - description: "Filter by artist participation status. Only valid if artistId is
            specified.\r

            \            Everything (default): Show all albums by
            that artist (no filter).\r

            \            OnlyMainAlbums: Show only main albums by
            that artist.\r

            \            OnlyCollaborations: Show only
            collaborations by that artist."
          in: query
          name: artistParticipationStatus
          required: false
          schema:
            type: string
            enum:
              - Everything
              - OnlyMainAlbums
              - OnlyCollaborations
        - description: Include child voicebanks, if the artist being filtered by has any.
          in: query
          name: childVoicebanks
          required: false
          schema:
            type: boolean
        - description: Include members of groups. This applies if {artistId} is a group.
          in: query
          name: includeMembers
          required: false
          schema:
            type: boolean
        - description: Filter by album barcode (optional).
          in: query
          name: barcode
          required: false
          schema:
            type: string
        - description: Filter by entry status (optional).
          in: query
          name: status
          required: false
          schema:
            type: string
            enum:
              - Draft
              - Finished
              - Approved
              - Locked
        - description: Filter by albums whose release date is after this date (inclusive).
          in: query
          name: releaseDateAfter
          required: false
          schema:
            type: string
            format: date-time
        - description: Filter by albums whose release date is before this date (exclusive).
          in: query
          name: releaseDateBefore
          required: false
          schema:
            type: string
            format: date-time
        - description: List of advanced filters (optional).
          in: query
          name: advancedFilters
          required: false
          explode: true
          schema:
            type: array
            items: {}
        - description: First item to be retrieved (optional, defaults to 0).
          in: query
          name: start
          required: false
          schema:
            type: integer
            format: int32
        - description: Maximum number of results to be loaded (optional, defaults to 10,
            maximum of 50).
          in: query
          name: maxResults
          required: false
          schema:
            type: integer
            format: int32
        - description: Whether to load total number of items (optional, default to false).
          in: query
          name: getTotalCount
          required: false
          schema:
            type: boolean
        - description: "Sort rule (optional, defaults to Name). \r

            \            Possible values are None, Name,
            ReleaseDate, ReleaseDateWithNulls, AdditionDate, RatingAverage,
            RatingTotal, NameThenReleaseDate."
          in: query
          name: sort
          required: false
          schema:
            type: string
            enum:
              - None
              - Name
              - ReleaseDate
              - ReleaseDateWithNulls
              - AdditionDate
              - RatingAverage
              - RatingTotal
              - NameThenReleaseDate
              - CollectionCount
        - description: "Whether the search should prefer accurate matches. \r

            \            If this is true, entries that match by
            prefix will be moved first, instead of being sorted
            alphabetically.\r

            \            Requires a text query. Does not support
            pagination.\r

            \            This is mostly useful for autocomplete
            boxes."
          in: query
          name: preferAccurateMatches
          required: false
          schema:
            type: boolean
        - description: "Whether to search for deleted entries.\r

            \            If this is true, only deleted entries will
            be returned.\r

            \            If this is false (default), deleted entries
            are not returned."
          in: query
          name: deleted
          required: false
          schema:
            type: boolean
        - description: Match mode for artist name (optional, defaults to Exact).
          in: query
          name: nameMatchMode
          required: false
          schema:
            type: string
            enum:
              - Auto
              - Partial
              - StartsWith
              - Exact
              - Words
        - description: Optional fields (optional). Possible values are artists, names, pvs,
            tags, tracks, webLinks.
          in: query
          name: fields
          required: false
          schema:
            type: string
            enum:
              - None
              - AdditionalNames
              - Artists
              - Description
              - Discs
              - Identifiers
              - MainPicture
              - Names
              - PVs
              - ReleaseEvent
              - Tags
              - Tracks
              - WebLinks
        - description: Content language preference (optional).
          in: query
          name: lang
          required: false
          schema:
            type: string
            enum:
              - Default
              - Japanese
              - Romaji
              - English
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PartialFindResult_AlbumForApiContract_"
            text/json:
              schema:
                $ref: "#/components/schemas/PartialFindResult_AlbumForApiContract_"
            application/xml:
              schema:
                $ref: "#/components/schemas/PartialFindResult_AlbumForApiContract_"
            text/xml:
              schema:
                $ref: "#/components/schemas/PartialFindResult_AlbumForApiContract_"
            text/javascript:
              schema:
                $ref: "#/components/schemas/PartialFindResult_AlbumForApiContract_"
            application/javascript:
              schema:
                $ref: "#/components/schemas/PartialFindResult_AlbumForApiContract_"
            application/json-p:
              schema:
                $ref: "#/components/schemas/PartialFindResult_AlbumForApiContract_"
      summary: Gets a page of albums.
      tags:
        - AlbumApi
  "/api/albums/comments/{commentId}":
    delete:
      deprecated: false
      description: "Normal users can delete their own comments, moderators can delete all
        comments.\r

        \            Requires login."
      operationId: AlbumApi_DeleteComment
      parameters:
        - description: ID of the comment to be deleted.
          in: path
          name: commentId
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "204":
          description: No Content
      summary: Deletes a comment.
      tags:
        - AlbumApi
    post:
      deprecated: false
      description: "Normal users can edit their own comments, moderators can edit all
        comments.\r

        \            Requires login."
      operationId: AlbumApi_PostEditComment
      parameters:
        - description: ID of the comment to be edited.
          in: path
          name: commentId
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        $ref: "#/components/requestBodies/CommentForApiContract3"
      responses:
        "204":
          description: No Content
      summary: Updates a comment.
      tags:
        - AlbumApi
  /api/albums/names:
    get:
      deprecated: false
      operationId: AlbumApi_GetNames
      parameters:
        - description: Text query.
          in: query
          name: query
          required: false
          schema:
            type: string
        - description: Name match mode.
          in: query
          name: nameMatchMode
          required: false
          schema:
            type: string
            enum:
              - Auto
              - Partial
              - StartsWith
              - Exact
              - Words
        - description: Maximum number of results.
          in: query
          name: maxResults
          required: false
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
            text/json:
              schema:
                items:
                  type: string
                type: array
            application/xml:
              schema:
                items:
                  type: string
                type: array
            text/xml:
              schema:
                items:
                  type: string
                type: array
            text/javascript:
              schema:
                items:
                  type: string
                type: array
            application/javascript:
              schema:
                items:
                  type: string
                type: array
            application/json-p:
              schema:
                items:
                  type: string
                type: array
      summary: Gets a list of album names. Ideal for autocomplete boxes.
      tags:
        - AlbumApi
  /api/albums/new:
    get:
      deprecated: false
      description: Output is cached for 1 hour.
      operationId: AlbumApi_GetNewAlbums
      parameters:
        - in: query
          name: languagePreference
          required: false
          schema:
            type: string
            enum:
              - Default
              - Japanese
              - Romaji
              - English
        - in: query
          name: fields
          required: false
          schema:
            type: string
            enum:
              - None
              - AdditionalNames
              - Artists
              - Description
              - Discs
              - Identifiers
              - MainPicture
              - Names
              - PVs
              - ReleaseEvent
              - Tags
              - Tracks
              - WebLinks
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/AlbumForApiContract"
                type: array
            text/json:
              schema:
                items:
                  $ref: "#/components/schemas/AlbumForApiContract"
                type: array
            application/xml:
              schema:
                items:
                  $ref: "#/components/schemas/AlbumForApiContract"
                type: array
            text/xml:
              schema:
                items:
                  $ref: "#/components/schemas/AlbumForApiContract"
                type: array
            text/javascript:
              schema:
                items:
                  $ref: "#/components/schemas/AlbumForApiContract"
                type: array
            application/javascript:
              schema:
                items:
                  $ref: "#/components/schemas/AlbumForApiContract"
                type: array
            application/json-p:
              schema:
                items:
                  $ref: "#/components/schemas/AlbumForApiContract"
                type: array
      summary: Gets list of upcoming or recent albums, same as front page.
      tags:
        - AlbumApi
  /api/albums/top:
    get:
      deprecated: false
      description: Output is cached for 1 hour.
      operationId: AlbumApi_GetTopAlbums
      parameters:
        - in: query
          name: languagePreference
          required: false
          schema:
            type: string
            enum:
              - Default
              - Japanese
              - Romaji
              - English
        - in: query
          name: fields
          required: false
          schema:
            type: string
            enum:
              - None
              - AdditionalNames
              - Artists
              - Description
              - Discs
              - Identifiers
              - MainPicture
              - Names
              - PVs
              - ReleaseEvent
              - Tags
              - Tracks
              - WebLinks
      requestBody:
        content:
          application/json:
            schema:
              items:
                format: int32
                type: integer
              type: array
          text/json:
            schema:
              items:
                format: int32
                type: integer
              type: array
          application/xml:
            schema:
              items:
                format: int32
                type: integer
              type: array
          text/xml:
            schema:
              items:
                format: int32
                type: integer
              type: array
          application/x-www-form-urlencoded:
            schema:
              items:
                format: int32
                type: integer
              type: array
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/AlbumForApiContract"
                type: array
            text/json:
              schema:
                items:
                  $ref: "#/components/schemas/AlbumForApiContract"
                type: array
            application/xml:
              schema:
                items:
                  $ref: "#/components/schemas/AlbumForApiContract"
                type: array
            text/xml:
              schema:
                items:
                  $ref: "#/components/schemas/AlbumForApiContract"
                type: array
            text/javascript:
              schema:
                items:
                  $ref: "#/components/schemas/AlbumForApiContract"
                type: array
            application/javascript:
              schema:
                items:
                  $ref: "#/components/schemas/AlbumForApiContract"
                type: array
            application/json-p:
              schema:
                items:
                  $ref: "#/components/schemas/AlbumForApiContract"
                type: array
      summary: Gets list of top rated albums, same as front page.
      tags:
        - AlbumApi
  "/api/albums/{id}":
    delete:
      deprecated: false
      operationId: AlbumApi_Delete
      parameters:
        - description: ID of the album to be deleted.
          in: path
          name: id
          required: true
          schema:
            type: integer
            format: int32
        - description: Notes.
          in: query
          name: notes
          required: false
          schema:
            type: string
      responses:
        "204":
          description: No Content
      summary: Deletes an album.
      tags:
        - AlbumApi
    get:
      deprecated: false
      operationId: AlbumApi_GetOne
      parameters:
        - description: Album Id (required).
          in: path
          name: id
          required: true
          schema:
            type: integer
            format: int32
        - description: Optional fields (optional). Possible values are artists, names, pvs,
            tags, tracks, webLinks.
          in: query
          name: fields
          required: false
          schema:
            type: string
            enum:
              - None
              - AdditionalNames
              - Artists
              - Description
              - Discs
              - Identifiers
              - MainPicture
              - Names
              - PVs
              - ReleaseEvent
              - Tags
              - Tracks
              - WebLinks
        - description: Optional fields for tracks, if included (optional).
          in: query
          name: songFields
          required: false
          schema:
            type: string
            enum:
              - None
              - AdditionalNames
              - Albums
              - Artists
              - Lyrics
              - MainPicture
              - Names
              - PVs
              - ReleaseEvent
              - Tags
              - ThumbUrl
              - WebLinks
        - description: Content language preference (optional).
          in: query
          name: lang
          required: false
          schema:
            type: string
            enum:
              - Default
              - Japanese
              - Romaji
              - English
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AlbumForApiContract"
            text/json:
              schema:
                $ref: "#/components/schemas/AlbumForApiContract"
            application/xml:
              schema:
                $ref: "#/components/schemas/AlbumForApiContract"
            text/xml:
              schema:
                $ref: "#/components/schemas/AlbumForApiContract"
            text/javascript:
              schema:
                $ref: "#/components/schemas/AlbumForApiContract"
            application/javascript:
              schema:
                $ref: "#/components/schemas/AlbumForApiContract"
            application/json-p:
              schema:
                $ref: "#/components/schemas/AlbumForApiContract"
      summary: Gets an album by Id.
      tags:
        - AlbumApi
  "/api/albums/{id}/comments":
    get:
      deprecated: false
      description: Pagination and sorting might be added later.
      operationId: AlbumApi_GetComments
      parameters:
        - description: ID of the album whose comments to load.
          in: path
          name: id
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/CommentForApiContract"
                type: array
            text/json:
              schema:
                items:
                  $ref: "#/components/schemas/CommentForApiContract"
                type: array
            application/xml:
              schema:
                items:
                  $ref: "#/components/schemas/CommentForApiContract"
                type: array
            text/xml:
              schema:
                items:
                  $ref: "#/components/schemas/CommentForApiContract"
                type: array
            text/javascript:
              schema:
                items:
                  $ref: "#/components/schemas/CommentForApiContract"
                type: array
            application/javascript:
              schema:
                items:
                  $ref: "#/components/schemas/CommentForApiContract"
                type: array
            application/json-p:
              schema:
                items:
                  $ref: "#/components/schemas/CommentForApiContract"
                type: array
      summary: Gets a list of comments for an album.
      tags:
        - AlbumApi
    post:
      deprecated: false
      operationId: AlbumApi_PostNewComment
      parameters:
        - description: ID of the album for which to create the comment.
          in: path
          name: id
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        $ref: "#/components/requestBodies/CommentForApiContract"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CommentForApiContract"
            text/json:
              schema:
                $ref: "#/components/schemas/CommentForApiContract"
            application/xml:
              schema:
                $ref: "#/components/schemas/CommentForApiContract"
            text/xml:
              schema:
                $ref: "#/components/schemas/CommentForApiContract"
            text/javascript:
              schema:
                $ref: "#/components/schemas/CommentForApiContract"
            application/javascript:
              schema:
                $ref: "#/components/schemas/CommentForApiContract"
            application/json-p:
              schema:
                $ref: "#/components/schemas/CommentForApiContract"
      summary: Posts a new comment.
      tags:
        - AlbumApi
  "/api/albums/{id}/reviews":
    get:
      deprecated: false
      operationId: AlbumApi_GetReviews
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
            format: int32
        - in: query
          name: languageCode
          required: false
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/AlbumReviewContract"
                type: array
            text/json:
              schema:
                items:
                  $ref: "#/components/schemas/AlbumReviewContract"
                type: array
            application/xml:
              schema:
                items:
                  $ref: "#/components/schemas/AlbumReviewContract"
                type: array
            text/xml:
              schema:
                items:
                  $ref: "#/components/schemas/AlbumReviewContract"
                type: array
            text/javascript:
              schema:
                items:
                  $ref: "#/components/schemas/AlbumReviewContract"
                type: array
            application/javascript:
              schema:
                items:
                  $ref: "#/components/schemas/AlbumReviewContract"
                type: array
            application/json-p:
              schema:
                items:
                  $ref: "#/components/schemas/AlbumReviewContract"
                type: array
      tags:
        - AlbumApi
    post:
      deprecated: false
      operationId: AlbumApi_PostReview
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AlbumReviewContract"
          text/json:
            schema:
              $ref: "#/components/schemas/AlbumReviewContract"
          application/xml:
            schema:
              $ref: "#/components/schemas/AlbumReviewContract"
          text/xml:
            schema:
              $ref: "#/components/schemas/AlbumReviewContract"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/AlbumReviewContract"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AlbumReviewContract"
            text/json:
              schema:
                $ref: "#/components/schemas/AlbumReviewContract"
            application/xml:
              schema:
                $ref: "#/components/schemas/AlbumReviewContract"
            text/xml:
              schema:
                $ref: "#/components/schemas/AlbumReviewContract"
            text/javascript:
              schema:
                $ref: "#/components/schemas/AlbumReviewContract"
            application/javascript:
              schema:
                $ref: "#/components/schemas/AlbumReviewContract"
            application/json-p:
              schema:
                $ref: "#/components/schemas/AlbumReviewContract"
      tags:
        - AlbumApi
  "/api/albums/{id}/reviews/{reviewId}":
    delete:
      deprecated: false
      operationId: AlbumApi_DeleteReview
      parameters:
        - in: path
          name: reviewId
          required: true
          schema:
            type: integer
            format: int32
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "204":
          description: No Content
      tags:
        - AlbumApi
  "/api/albums/{id}/tracks":
    get:
      deprecated: false
      operationId: AlbumApi_GetTracks
      parameters:
        - description: Album ID (required).
          in: path
          name: id
          required: true
          schema:
            type: integer
            format: int32
        - description: List of optional fields (optional). Possible values are Albums,
            Artists, Names, PVs, Tags, ThumbUrl, WebLinks.
          in: query
          name: fields
          required: false
          schema:
            type: string
            enum:
              - None
              - AdditionalNames
              - Albums
              - Artists
              - Lyrics
              - MainPicture
              - Names
              - PVs
              - ReleaseEvent
              - Tags
              - ThumbUrl
              - WebLinks
        - description: Content language preference (optional).
          in: query
          name: lang
          required: false
          schema:
            type: string
            enum:
              - Default
              - Japanese
              - Romaji
              - English
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/SongInAlbumForApiContract"
                type: array
            text/json:
              schema:
                items:
                  $ref: "#/components/schemas/SongInAlbumForApiContract"
                type: array
            application/xml:
              schema:
                items:
                  $ref: "#/components/schemas/SongInAlbumForApiContract"
                type: array
            text/xml:
              schema:
                items:
                  $ref: "#/components/schemas/SongInAlbumForApiContract"
                type: array
            text/javascript:
              schema:
                items:
                  $ref: "#/components/schemas/SongInAlbumForApiContract"
                type: array
            application/javascript:
              schema:
                items:
                  $ref: "#/components/schemas/SongInAlbumForApiContract"
                type: array
            application/json-p:
              schema:
                items:
                  $ref: "#/components/schemas/SongInAlbumForApiContract"
                type: array
      summary: Gets tracks for an album.
      tags:
        - AlbumApi
  "/api/albums/{id}/tracks/fields":
    get:
      deprecated: false
      operationId: AlbumApi_GetTracksFormatted
      parameters:
        - description: Album ID.
          in: path
          name: id
          required: true
          schema:
            type: integer
            format: int32
        - description: Field to be included, for example "featvocalists" or "url". Can be
            specified multiple times.
          in: query
          name: field
          required: false
          explode: true
          schema:
            type: array
            items:
              type: string
        - description: Language preference.
          in: query
          name: lang
          required: false
          schema:
            type: string
            enum:
              - Default
              - Japanese
              - Romaji
              - English
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                items:
                  additionalProperties:
                    type: string
                  type: object
                type: array
            text/json:
              schema:
                items:
                  additionalProperties:
                    type: string
                  type: object
                type: array
            application/xml:
              schema:
                items:
                  additionalProperties:
                    type: string
                  type: object
                type: array
            text/xml:
              schema:
                items:
                  additionalProperties:
                    type: string
                  type: object
                type: array
            text/csv:
              schema:
                items:
                  additionalProperties:
                    type: string
                  type: object
                type: array
            text/javascript:
              schema:
                items:
                  additionalProperties:
                    type: string
                  type: object
                type: array
            application/javascript:
              schema:
                items:
                  additionalProperties:
                    type: string
                  type: object
                type: array
            application/json-p:
              schema:
                items:
                  additionalProperties:
                    type: string
                  type: object
                type: array
      summary: Gets tracks for an album formatted using the CSV format string.
      tags:
        - AlbumApi
  "/api/albums/{id}/user-collections":
    get:
      deprecated: false
      operationId: AlbumApi_GetUserCollections
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
            format: int32
        - in: query
          name: languagePreference
          required: false
          schema:
            type: string
            enum:
              - Default
              - Japanese
              - Romaji
              - English
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/AlbumForUserForApiContract"
                type: array
            text/json:
              schema:
                items:
                  $ref: "#/components/schemas/AlbumForUserForApiContract"
                type: array
            application/xml:
              schema:
                items:
                  $ref: "#/components/schemas/AlbumForUserForApiContract"
                type: array
            text/xml:
              schema:
                items:
                  $ref: "#/components/schemas/AlbumForUserForApiContract"
                type: array
            text/javascript:
              schema:
                items:
                  $ref: "#/components/schemas/AlbumForUserForApiContract"
                type: array
            application/javascript:
              schema:
                items:
                  $ref: "#/components/schemas/AlbumForUserForApiContract"
                type: array
            application/json-p:
              schema:
                items:
                  $ref: "#/components/schemas/AlbumForUserForApiContract"
                type: array
      tags:
        - AlbumApi
  /api/artists:
    get:
      deprecated: false
      operationId: ArtistApi_GetList
      parameters:
        - description: Artist name query (optional).
          in: query
          name: query
          required: false
          schema:
            type: string
        - description: Filtered artist type (optional).
          in: query
          name: artistTypes
          required: false
          schema:
            type: string
        - description: Allow base voicebanks. If false, only root voicebanks will be
            allowed. Only affects voice synthesizers that can have base
            voicebanks.
          in: query
          name: allowBaseVoicebanks
          required: false
          schema:
            type: boolean
        - description: Filter by tag name (optional).
          in: query
          name: tagName
          required: false
          explode: true
          schema:
            type: array
            items:
              type: string
        - description: Filter by tag Id (optional). This filter can be specified multiple
            times.
          in: query
          name: tagId
          required: false
          explode: true
          schema:
            type: array
            items:
              format: int32
              type: integer
        - description: Include child tags, if the tags being filtered by have any.
          in: query
          name: childTags
          required: false
          schema:
            type: boolean
        - description: Filter by user following the artists. By default there is no
            filtering.
          in: query
          name: followedByUserId
          required: false
          schema:
            type: integer
            format: int32
        - description: Filter by entry status (optional).
          in: query
          name: status
          required: false
          schema:
            type: string
            enum:
              - Draft
              - Finished
              - Approved
              - Locked
        - description: List of advanced filters (optional).
          in: query
          name: advancedFilters
          required: false
          explode: true
          schema:
            type: array
            items: {}
        - description: First item to be retrieved (optional, defaults to 0).
          in: query
          name: start
          required: false
          schema:
            type: integer
            format: int32
        - description: Maximum number of results to be loaded (optional, defaults to 10,
            maximum of 100).
          in: query
          name: maxResults
          required: false
          schema:
            type: integer
            format: int32
        - description: Whether to load total number of items (optional, default to false).
          in: query
          name: getTotalCount
          required: false
          schema:
            type: boolean
        - description: Sort rule (optional, defaults to Name). Possible values are None,
            Name, AdditionDate, AdditionDateAsc.
          in: query
          name: sort
          required: false
          schema:
            type: string
            enum:
              - None
              - Name
              - AdditionDate
              - AdditionDateAsc
              - ReleaseDate
              - SongCount
              - SongRating
              - FollowerCount
        - description: "Whether the search should prefer accurate matches. \r

            \            If this is true, entries that match by
            prefix will be moved first, instead of being sorted
            alphabetically.\r

            \            Requires a text query. Does not support
            pagination.\r

            \            This is mostly useful for autocomplete
            boxes."
          in: query
          name: preferAccurateMatches
          required: false
          schema:
            type: boolean
        - description: Match mode for artist name (optional, defaults to Exact).
          in: query
          name: nameMatchMode
          required: false
          schema:
            type: string
            enum:
              - Auto
              - Partial
              - StartsWith
              - Exact
              - Words
        - description: List of optional fields (optional). Possible values are Description,
            Groups, Members, Names, Tags, WebLinks.
          in: query
          name: fields
          required: false
          schema:
            type: string
            enum:
              - None
              - AdditionalNames
              - ArtistLinks
              - ArtistLinksReverse
              - BaseVoicebank
              - Description
              - MainPicture
              - Names
              - Tags
              - WebLinks
        - description: Content language preference (optional).
          in: query
          name: lang
          required: false
          schema:
            type: string
            enum:
              - Default
              - Japanese
              - Romaji
              - English
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PartialFindResult_ArtistForApiContract_"
            text/json:
              schema:
                $ref: "#/components/schemas/PartialFindResult_ArtistForApiContract_"
            application/xml:
              schema:
                $ref: "#/components/schemas/PartialFindResult_ArtistForApiContract_"
            text/xml:
              schema:
                $ref: "#/components/schemas/PartialFindResult_ArtistForApiContract_"
            text/javascript:
              schema:
                $ref: "#/components/schemas/PartialFindResult_ArtistForApiContract_"
            application/javascript:
              schema:
                $ref: "#/components/schemas/PartialFindResult_ArtistForApiContract_"
            application/json-p:
              schema:
                $ref: "#/components/schemas/PartialFindResult_ArtistForApiContract_"
      summary: Find artists.
      tags:
        - ArtistApi
  "/api/artists/comments/{commentId}":
    delete:
      deprecated: false
      description: "Normal users can delete their own comments, moderators can delete all
        comments.\r

        \            Requires login."
      operationId: ArtistApi_DeleteComment
      parameters:
        - description: ID of the comment to be deleted.
          in: path
          name: commentId
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "204":
          description: No Content
      summary: Deletes a comment.
      tags:
        - ArtistApi
    post:
      deprecated: false
      description: "Normal users can edit their own comments, moderators can edit all
        comments.\r

        \            Requires login."
      operationId: ArtistApi_PostEditComment
      parameters:
        - description: ID of the comment to be edited.
          in: path
          name: commentId
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        $ref: "#/components/requestBodies/CommentForApiContract3"
      responses:
        "204":
          description: No Content
      summary: Updates a comment.
      tags:
        - ArtistApi
  /api/artists/names:
    get:
      deprecated: false
      operationId: ArtistApi_GetNames
      parameters:
        - description: Text query.
          in: query
          name: query
          required: false
          schema:
            type: string
        - description: Name match mode.
          in: query
          name: nameMatchMode
          required: false
          schema:
            type: string
            enum:
              - Auto
              - Partial
              - StartsWith
              - Exact
              - Words
        - description: Maximum number of results.
          in: query
          name: maxResults
          required: false
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
            text/json:
              schema:
                items:
                  type: string
                type: array
            application/xml:
              schema:
                items:
                  type: string
                type: array
            text/xml:
              schema:
                items:
                  type: string
                type: array
            text/javascript:
              schema:
                items:
                  type: string
                type: array
            application/javascript:
              schema:
                items:
                  type: string
                type: array
            application/json-p:
              schema:
                items:
                  type: string
                type: array
      summary: Gets a list of artist names. Ideal for autocomplete boxes.
      tags:
        - ArtistApi
  "/api/artists/{id}":
    delete:
      deprecated: false
      operationId: ArtistApi_Delete
      parameters:
        - description: ID of the artist to be deleted.
          in: path
          name: id
          required: true
          schema:
            type: integer
            format: int32
        - description: Notes.
          in: query
          name: notes
          required: false
          schema:
            type: string
      responses:
        "204":
          description: No Content
      summary: Deletes an artist.
      tags:
        - ArtistApi
    get:
      deprecated: false
      operationId: ArtistApi_GetOne
      parameters:
        - description: Artist ID (required).
          in: path
          name: id
          required: true
          schema:
            type: integer
            format: int32
        - description: List of optional fields (optional). Possible values are Description,
            Groups, Members, Names, Tags, WebLinks.
          in: query
          name: fields
          required: false
          schema:
            type: string
            enum:
              - None
              - AdditionalNames
              - ArtistLinks
              - ArtistLinksReverse
              - BaseVoicebank
              - Description
              - MainPicture
              - Names
              - Tags
              - WebLinks
        - description: List of artist relations (optional). Possible values are
            LatestAlbums, PopularAlbums, LatestSongs, PopularSongs, All
          in: query
          name: relations
          required: false
          schema:
            type: string
            enum:
              - None
              - LatestAlbums
              - LatestEvents
              - LatestSongs
              - PopularAlbums
              - PopularSongs
              - All
        - description: Content language preference (optional).
          in: query
          name: lang
          required: false
          schema:
            type: string
            enum:
              - Default
              - Japanese
              - Romaji
              - English
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ArtistForApiContract"
            text/json:
              schema:
                $ref: "#/components/schemas/ArtistForApiContract"
            application/xml:
              schema:
                $ref: "#/components/schemas/ArtistForApiContract"
            text/xml:
              schema:
                $ref: "#/components/schemas/ArtistForApiContract"
            text/javascript:
              schema:
                $ref: "#/components/schemas/ArtistForApiContract"
            application/javascript:
              schema:
                $ref: "#/components/schemas/ArtistForApiContract"
            application/json-p:
              schema:
                $ref: "#/components/schemas/ArtistForApiContract"
      summary: Gets an artist by Id.
      tags:
        - ArtistApi
  "/api/artists/{id}/comments":
    get:
      deprecated: false
      description: Pagination and sorting might be added later.
      operationId: ArtistApi_GetComments
      parameters:
        - description: ID of the artist whose comments to load.
          in: path
          name: id
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/CommentForApiContract"
                type: array
            text/json:
              schema:
                items:
                  $ref: "#/components/schemas/CommentForApiContract"
                type: array
            application/xml:
              schema:
                items:
                  $ref: "#/components/schemas/CommentForApiContract"
                type: array
            text/xml:
              schema:
                items:
                  $ref: "#/components/schemas/CommentForApiContract"
                type: array
            text/javascript:
              schema:
                items:
                  $ref: "#/components/schemas/CommentForApiContract"
                type: array
            application/javascript:
              schema:
                items:
                  $ref: "#/components/schemas/CommentForApiContract"
                type: array
            application/json-p:
              schema:
                items:
                  $ref: "#/components/schemas/CommentForApiContract"
                type: array
      summary: Gets a list of comments for an artist.
      tags:
        - ArtistApi
    post:
      deprecated: false
      operationId: ArtistApi_PostNewComment
      parameters:
        - description: ID of the artist for which to create the comment.
          in: path
          name: id
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        $ref: "#/components/requestBodies/CommentForApiContract"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CommentForApiContract"
            text/json:
              schema:
                $ref: "#/components/schemas/CommentForApiContract"
            application/xml:
              schema:
                $ref: "#/components/schemas/CommentForApiContract"
            text/xml:
              schema:
                $ref: "#/components/schemas/CommentForApiContract"
            text/javascript:
              schema:
                $ref: "#/components/schemas/CommentForApiContract"
            application/javascript:
              schema:
                $ref: "#/components/schemas/CommentForApiContract"
            application/json-p:
              schema:
                $ref: "#/components/schemas/CommentForApiContract"
      summary: Posts a new comment.
      tags:
        - ArtistApi
  "/api/comments/{entryType}-comments":
    get:
      deprecated: false
      operationId: CommentApi_GetComments
      parameters:
        - description: Entry type.
          in: path
          name: entryType
          required: true
          schema:
            type: string
            enum:
              - Undefined
              - Album
              - Artist
              - DiscussionTopic
              - PV
              - ReleaseEvent
              - ReleaseEventSeries
              - Song
              - SongList
              - Tag
              - User
        - description: ID of the entry whose comments to load.
          in: query
          name: entryId
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PartialFindResult_CommentForApiContract_"
            text/json:
              schema:
                $ref: "#/components/schemas/PartialFindResult_CommentForApiContract_"
            application/xml:
              schema:
                $ref: "#/components/schemas/PartialFindResult_CommentForApiContract_"
            text/xml:
              schema:
                $ref: "#/components/schemas/PartialFindResult_CommentForApiContract_"
            text/javascript:
              schema:
                $ref: "#/components/schemas/PartialFindResult_CommentForApiContract_"
            application/javascript:
              schema:
                $ref: "#/components/schemas/PartialFindResult_CommentForApiContract_"
            application/json-p:
              schema:
                $ref: "#/components/schemas/PartialFindResult_CommentForApiContract_"
      summary: Gets a list of comments for an entry.
      tags:
        - CommentApi
    post:
      deprecated: false
      operationId: CommentApi_PostNewComment
      parameters:
        - description: Entry type.
          in: path
          name: entryType
          required: true
          schema:
            type: string
            enum:
              - Undefined
              - Album
              - Artist
              - DiscussionTopic
              - PV
              - ReleaseEvent
              - ReleaseEventSeries
              - Song
              - SongList
              - Tag
              - User
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CommentForApiContract"
          text/json:
            schema:
              $ref: "#/components/schemas/CommentForApiContract"
          application/xml:
            schema:
              $ref: "#/components/schemas/CommentForApiContract"
          text/xml:
            schema:
              $ref: "#/components/schemas/CommentForApiContract"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/CommentForApiContract"
        description: Comment data. Message, entry and author must be specified. Author must
          match the logged in user.
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CommentForApiContract"
            text/json:
              schema:
                $ref: "#/components/schemas/CommentForApiContract"
            application/xml:
              schema:
                $ref: "#/components/schemas/CommentForApiContract"
            text/xml:
              schema:
                $ref: "#/components/schemas/CommentForApiContract"
            text/javascript:
              schema:
                $ref: "#/components/schemas/CommentForApiContract"
            application/javascript:
              schema:
                $ref: "#/components/schemas/CommentForApiContract"
            application/json-p:
              schema:
                $ref: "#/components/schemas/CommentForApiContract"
      summary: Posts a new comment.
      tags:
        - CommentApi
  "/api/comments/{entryType}-comments/{commentId}":
    delete:
      deprecated: false
      description: "Normal users can delete their own comments, moderators can delete all
        comments.\r

        \            Requires login."
      operationId: CommentApi_DeleteComment
      parameters:
        - description: Entry type.
          in: path
          name: entryType
          required: true
          schema:
            type: string
            enum:
              - Undefined
              - Album
              - Artist
              - DiscussionTopic
              - PV
              - ReleaseEvent
              - ReleaseEventSeries
              - Song
              - SongList
              - Tag
              - User
        - description: ID of the comment to be deleted.
          in: path
          name: commentId
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "204":
          description: No Content
      summary: Deletes a comment.
      tags:
        - CommentApi
    post:
      deprecated: false
      description: "Normal users can edit their own comments, moderators can edit all
        comments.\r

        \            Requires login."
      operationId: CommentApi_PostEditComment
      parameters:
        - description: Entry type.
          in: path
          name: entryType
          required: true
          schema:
            type: string
            enum:
              - Undefined
              - Album
              - Artist
              - DiscussionTopic
              - PV
              - ReleaseEvent
              - ReleaseEventSeries
              - Song
              - SongList
              - Tag
              - User
        - description: ID of the comment to be edited.
          in: path
          name: commentId
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        $ref: "#/components/requestBodies/CommentForApiContract3"
      responses:
        "204":
          description: No Content
      summary: Updates a comment.
      tags:
        - CommentApi
  "/api/discussions/comments/{commentId}":
    delete:
      deprecated: false
      operationId: DiscussionApi_DeleteComment
      parameters:
        - in: path
          name: commentId
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "204":
          description: No Content
      tags:
        - DiscussionApi
    post:
      deprecated: false
      operationId: DiscussionApi_PostEditComment
      parameters:
        - in: path
          name: commentId
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        $ref: "#/components/requestBodies/CommentForApiContract2"
      responses:
        "204":
          description: No Content
      tags:
        - DiscussionApi
  /api/discussions/folders:
    get:
      deprecated: false
      operationId: DiscussionApi_GetFolders
      parameters:
        - in: query
          name: fields
          required: false
          schema:
            type: string
            enum:
              - None
              - LastTopic
              - TopicCount
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/DiscussionFolderContract"
                type: array
            text/json:
              schema:
                items:
                  $ref: "#/components/schemas/DiscussionFolderContract"
                type: array
            application/xml:
              schema:
                items:
                  $ref: "#/components/schemas/DiscussionFolderContract"
                type: array
            text/xml:
              schema:
                items:
                  $ref: "#/components/schemas/DiscussionFolderContract"
                type: array
            text/javascript:
              schema:
                items:
                  $ref: "#/components/schemas/DiscussionFolderContract"
                type: array
            application/javascript:
              schema:
                items:
                  $ref: "#/components/schemas/DiscussionFolderContract"
                type: array
            application/json-p:
              schema:
                items:
                  $ref: "#/components/schemas/DiscussionFolderContract"
                type: array
      tags:
        - DiscussionApi
    post:
      deprecated: false
      operationId: DiscussionApi_PostNewFolder
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DiscussionFolderContract"
          text/json:
            schema:
              $ref: "#/components/schemas/DiscussionFolderContract"
          application/xml:
            schema:
              $ref: "#/components/schemas/DiscussionFolderContract"
          text/xml:
            schema:
              $ref: "#/components/schemas/DiscussionFolderContract"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/DiscussionFolderContract"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DiscussionFolderContract"
            text/json:
              schema:
                $ref: "#/components/schemas/DiscussionFolderContract"
            application/xml:
              schema:
                $ref: "#/components/schemas/DiscussionFolderContract"
            text/xml:
              schema:
                $ref: "#/components/schemas/DiscussionFolderContract"
            text/javascript:
              schema:
                $ref: "#/components/schemas/DiscussionFolderContract"
            application/javascript:
              schema:
                $ref: "#/components/schemas/DiscussionFolderContract"
            application/json-p:
              schema:
                $ref: "#/components/schemas/DiscussionFolderContract"
      tags:
        - DiscussionApi
  "/api/discussions/folders/{folderId}/topics":
    get:
      deprecated: true
      operationId: DiscussionApi_GetTopicsForFolder
      parameters:
        - in: path
          name: folderId
          required: true
          schema:
            type: integer
            format: int32
        - in: query
          name: fields
          required: false
          schema:
            type: string
            enum:
              - None
              - Comments
              - CommentCount
              - Content
              - LastComment
              - All
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/DiscussionTopicContract"
                type: array
            text/json:
              schema:
                items:
                  $ref: "#/components/schemas/DiscussionTopicContract"
                type: array
            application/xml:
              schema:
                items:
                  $ref: "#/components/schemas/DiscussionTopicContract"
                type: array
            text/xml:
              schema:
                items:
                  $ref: "#/components/schemas/DiscussionTopicContract"
                type: array
            text/javascript:
              schema:
                items:
                  $ref: "#/components/schemas/DiscussionTopicContract"
                type: array
            application/javascript:
              schema:
                items:
                  $ref: "#/components/schemas/DiscussionTopicContract"
                type: array
            application/json-p:
              schema:
                items:
                  $ref: "#/components/schemas/DiscussionTopicContract"
                type: array
      tags:
        - DiscussionApi
    post:
      deprecated: false
      operationId: DiscussionApi_PostNewTopic
      parameters:
        - in: path
          name: folderId
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        $ref: "#/components/requestBodies/DiscussionTopicContract"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DiscussionTopicContract"
            text/json:
              schema:
                $ref: "#/components/schemas/DiscussionTopicContract"
            application/xml:
              schema:
                $ref: "#/components/schemas/DiscussionTopicContract"
            text/xml:
              schema:
                $ref: "#/components/schemas/DiscussionTopicContract"
            text/javascript:
              schema:
                $ref: "#/components/schemas/DiscussionTopicContract"
            application/javascript:
              schema:
                $ref: "#/components/schemas/DiscussionTopicContract"
            application/json-p:
              schema:
                $ref: "#/components/schemas/DiscussionTopicContract"
      tags:
        - DiscussionApi
  /api/discussions/topics:
    get:
      deprecated: false
      operationId: DiscussionApi_GetTopics
      parameters:
        - in: query
          name: folderId
          required: false
          schema:
            type: integer
            format: int32
        - in: query
          name: start
          required: false
          schema:
            type: integer
            format: int32
        - in: query
          name: maxResults
          required: false
          schema:
            type: integer
            format: int32
        - in: query
          name: getTotalCount
          required: false
          schema:
            type: boolean
        - in: query
          name: sort
          required: false
          schema:
            type: string
            enum:
              - None
              - Name
              - DateCreated
              - LastCommentDate
        - in: query
          name: fields
          required: false
          schema:
            type: string
            enum:
              - None
              - Comments
              - CommentCount
              - Content
              - LastComment
              - All
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PartialFindResult_DiscussionTopicContra\
                  ct_"
            text/json:
              schema:
                $ref: "#/components/schemas/PartialFindResult_DiscussionTopicContra\
                  ct_"
            application/xml:
              schema:
                $ref: "#/components/schemas/PartialFindResult_DiscussionTopicContra\
                  ct_"
            text/xml:
              schema:
                $ref: "#/components/schemas/PartialFindResult_DiscussionTopicContra\
                  ct_"
            text/javascript:
              schema:
                $ref: "#/components/schemas/PartialFindResult_DiscussionTopicContra\
                  ct_"
            application/javascript:
              schema:
                $ref: "#/components/schemas/PartialFindResult_DiscussionTopicContra\
                  ct_"
            application/json-p:
              schema:
                $ref: "#/components/schemas/PartialFindResult_DiscussionTopicContra\
                  ct_"
      tags:
        - DiscussionApi
  "/api/discussions/topics/{topicId}":
    delete:
      deprecated: false
      operationId: DiscussionApi_DeleteTopic
      parameters:
        - in: path
          name: topicId
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "204":
          description: No Content
      tags:
        - DiscussionApi
    get:
      deprecated: false
      operationId: DiscussionApi_GetTopic
      parameters:
        - in: path
          name: topicId
          required: true
          schema:
            type: integer
            format: int32
        - in: query
          name: fields
          required: false
          schema:
            type: string
            enum:
              - None
              - Comments
              - CommentCount
              - Content
              - LastComment
              - All
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DiscussionTopicContract"
            text/json:
              schema:
                $ref: "#/components/schemas/DiscussionTopicContract"
            application/xml:
              schema:
                $ref: "#/components/schemas/DiscussionTopicContract"
            text/xml:
              schema:
                $ref: "#/components/schemas/DiscussionTopicContract"
            text/javascript:
              schema:
                $ref: "#/components/schemas/DiscussionTopicContract"
            application/javascript:
              schema:
                $ref: "#/components/schemas/DiscussionTopicContract"
            application/json-p:
              schema:
                $ref: "#/components/schemas/DiscussionTopicContract"
      tags:
        - DiscussionApi
    post:
      deprecated: false
      operationId: DiscussionApi_PostEditTopic
      parameters:
        - in: path
          name: topicId
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        $ref: "#/components/requestBodies/DiscussionTopicContract"
      responses:
        "204":
          description: No Content
      tags:
        - DiscussionApi
  "/api/discussions/topics/{topicId}/comments":
    post:
      deprecated: false
      operationId: DiscussionApi_PostNewComment
      parameters:
        - in: path
          name: topicId
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        $ref: "#/components/requestBodies/CommentForApiContract2"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CommentForApiContract"
            text/json:
              schema:
                $ref: "#/components/schemas/CommentForApiContract"
            application/xml:
              schema:
                $ref: "#/components/schemas/CommentForApiContract"
            text/xml:
              schema:
                $ref: "#/components/schemas/CommentForApiContract"
            text/javascript:
              schema:
                $ref: "#/components/schemas/CommentForApiContract"
            application/javascript:
              schema:
                $ref: "#/components/schemas/CommentForApiContract"
            application/json-p:
              schema:
                $ref: "#/components/schemas/CommentForApiContract"
      tags:
        - DiscussionApi
  /api/entries:
    get:
      deprecated: false
      operationId: EntryApi_GetList
      parameters:
        - description: Entry name query (optional).
          in: query
          name: query
          required: false
          schema:
            type: string
        - description: Filter by tag name (optional).
          in: query
          name: tagName
          required: false
          explode: true
          schema:
            type: array
            items:
              type: string
        - description: Filter by tag Id (optional).
          in: query
          name: tagId
          required: false
          explode: true
          schema:
            type: array
            items:
              format: int32
              type: integer
        - description: Include child tags, if the tags being filtered by have any.
          in: query
          name: childTags
          required: false
          schema:
            type: boolean
        - description: Included entry types (optional).
          in: query
          name: entryTypes
          required: false
          schema:
            type: string
            enum:
              - Nothing
              - Album
              - Artist
              - DiscussionTopic
              - PV
              - ReleaseEvent
              - ReleaseEventSeries
              - Song
              - SongList
              - Tag
              - User
        - description: Filter by entry status (optional).
          in: query
          name: status
          required: false
          schema:
            type: string
            enum:
              - Draft
              - Finished
              - Approved
              - Locked
        - description: First item to be retrieved (optional, defaults to 0).
          in: query
          name: start
          required: false
          schema:
            type: integer
            format: int32
        - description: Maximum number of results to be loaded (optional, defaults to 10,
            maximum of 30).
          in: query
          name: maxResults
          required: false
          schema:
            type: integer
            format: int32
        - description: Whether to load total number of items (optional, default to false).
          in: query
          name: getTotalCount
          required: false
          schema:
            type: boolean
        - description: Sort rule (optional, defaults to Name). Possible values are None,
            Name, AdditionDate.
          in: query
          name: sort
          required: false
          schema:
            type: string
            enum:
              - None
              - Name
              - AdditionDate
              - ActivityDate
        - description: Match mode for entry name (optional, defaults to Exact).
          in: query
          name: nameMatchMode
          required: false
          schema:
            type: string
            enum:
              - Auto
              - Partial
              - StartsWith
              - Exact
              - Words
        - description: List of optional fields (optional). Possible values are Description,
            MainPicture, Names, Tags, WebLinks.
          in: query
          name: fields
          required: false
          schema:
            type: string
            enum:
              - None
              - AdditionalNames
              - Description
              - MainPicture
              - Names
              - PVs
              - Tags
              - WebLinks
        - description: Content language preference (optional).
          in: query
          name: lang
          required: false
          schema:
            type: string
            enum:
              - Default
              - Japanese
              - Romaji
              - English
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PartialFindResult_EntryForApiContract_"
            text/json:
              schema:
                $ref: "#/components/schemas/PartialFindResult_EntryForApiContract_"
            application/xml:
              schema:
                $ref: "#/components/schemas/PartialFindResult_EntryForApiContract_"
            text/xml:
              schema:
                $ref: "#/components/schemas/PartialFindResult_EntryForApiContract_"
            text/javascript:
              schema:
                $ref: "#/components/schemas/PartialFindResult_EntryForApiContract_"
            application/javascript:
              schema:
                $ref: "#/components/schemas/PartialFindResult_EntryForApiContract_"
            application/json-p:
              schema:
                $ref: "#/components/schemas/PartialFindResult_EntryForApiContract_"
      summary: Find entries.
      tags:
        - EntryApi
  /api/entries/names:
    get:
      deprecated: false
      operationId: EntryApi_GetNames
      parameters:
        - description: Text query.
          in: query
          name: query
          required: false
          schema:
            type: string
        - description: Name match mode.
          in: query
          name: nameMatchMode
          required: false
          schema:
            type: string
            enum:
              - Auto
              - Partial
              - StartsWith
              - Exact
              - Words
        - description: Maximum number of results.
          in: query
          name: maxResults
          required: false
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
            text/json:
              schema:
                items:
                  type: string
                type: array
            application/xml:
              schema:
                items:
                  type: string
                type: array
            text/xml:
              schema:
                items:
                  type: string
                type: array
            text/javascript:
              schema:
                items:
                  type: string
                type: array
            application/javascript:
              schema:
                items:
                  type: string
                type: array
            application/json-p:
              schema:
                items:
                  type: string
                type: array
      summary: Gets a list of entry names. Ideal for autocomplete boxes.
      tags:
        - EntryApi
  /api/pvs/for-songs:
    get:
      deprecated: false
      operationId: PVApi_GetList
      parameters:
        - description: Uploader name (optional).
          in: query
          name: author
          required: false
          schema:
            type: string
        - description: Maximum number of results.
          in: query
          name: maxResults
          required: false
          schema:
            type: integer
            format: int32
        - description: Whether to load total number of items (optional, default to false).
          in: query
          name: getTotalCount
          required: false
          schema:
            type: boolean
        - description: Content language preference (optional).
          in: query
          name: lang
          required: false
          schema:
            type: string
            enum:
              - Default
              - Japanese
              - Romaji
              - English
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PartialFindResult_PVForSongContract_"
            text/json:
              schema:
                $ref: "#/components/schemas/PartialFindResult_PVForSongContract_"
            application/xml:
              schema:
                $ref: "#/components/schemas/PartialFindResult_PVForSongContract_"
            text/xml:
              schema:
                $ref: "#/components/schemas/PartialFindResult_PVForSongContract_"
            text/javascript:
              schema:
                $ref: "#/components/schemas/PartialFindResult_PVForSongContract_"
            application/javascript:
              schema:
                $ref: "#/components/schemas/PartialFindResult_PVForSongContract_"
            application/json-p:
              schema:
                $ref: "#/components/schemas/PartialFindResult_PVForSongContract_"
      summary: Gets a list of PVs for songs.
      tags:
        - PVApi
  /api/releaseEventSeries:
    get:
      deprecated: false
      operationId: ReleaseEventSeriesApi_GetList
      parameters:
        - description: Text query.
          in: query
          name: query
          required: false
          schema:
            type: string
        - description: First item to be retrieved (optional).
          in: query
          name: start
          required: false
          schema:
            type: integer
            format: int32
        - description: Maximum number of results to be loaded (optional).
          in: query
          name: maxResults
          required: false
          schema:
            type: integer
            format: int32
        - description: Whether to load total number of items (optional).
          in: query
          name: getTotalCount
          required: false
          schema:
            type: boolean
        - description: Match mode for event name (optional).
          in: query
          name: nameMatchMode
          required: false
          schema:
            type: string
            enum:
              - Auto
              - Partial
              - StartsWith
              - Exact
              - Words
        - description: Content language preference (optional).
          in: query
          name: lang
          required: false
          schema:
            type: string
            enum:
              - Default
              - Japanese
              - Romaji
              - English
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PartialFindResult_ReleaseEventSeriesCon\
                  tract_"
            text/json:
              schema:
                $ref: "#/components/schemas/PartialFindResult_ReleaseEventSeriesCon\
                  tract_"
            application/xml:
              schema:
                $ref: "#/components/schemas/PartialFindResult_ReleaseEventSeriesCon\
                  tract_"
            text/xml:
              schema:
                $ref: "#/components/schemas/PartialFindResult_ReleaseEventSeriesCon\
                  tract_"
            text/javascript:
              schema:
                $ref: "#/components/schemas/PartialFindResult_ReleaseEventSeriesCon\
                  tract_"
            application/javascript:
              schema:
                $ref: "#/components/schemas/PartialFindResult_ReleaseEventSeriesCon\
                  tract_"
            application/json-p:
              schema:
                $ref: "#/components/schemas/PartialFindResult_ReleaseEventSeriesCon\
                  tract_"
      summary: Gets a page of event series.
      tags:
        - ReleaseEventSeriesApi
  "/api/releaseEventSeries/{id}":
    delete:
      deprecated: false
      operationId: ReleaseEventSeriesApi_Delete
      parameters:
        - description: ID of the series to be deleted.
          in: path
          name: id
          required: true
          schema:
            type: integer
            format: int32
        - description: Notes.
          in: query
          name: notes
          required: false
          schema:
            type: string
        - description: "If true, the entry is hard deleted. Hard deleted entries cannot be
            restored normally, but they will be moved to trash.\r

            \            If false, the entry is soft deleted,
            meaning it can still be restored."
          in: query
          name: hardDelete
          required: false
          schema:
            type: boolean
      responses:
        "204":
          description: No Content
      summary: Deletes an event series.
      tags:
        - ReleaseEventSeriesApi
  /api/releaseEvents:
    get:
      deprecated: false
      operationId: ReleaseEventApi_GetList
      parameters:
        - description: Event name query (optional).
          in: query
          name: query
          required: false
          schema:
            type: string
        - description: Match mode for event name (optional, defaults to Auto).
          in: query
          name: nameMatchMode
          required: false
          schema:
            type: string
            enum:
              - Auto
              - Partial
              - StartsWith
              - Exact
              - Words
        - description: Filter by series Id.
          in: query
          name: seriesId
          required: false
          schema:
            type: integer
            format: int32
        - description: Filter by events after this date (inclusive).
          in: query
          name: afterDate
          required: false
          schema:
            type: string
            format: date-time
        - description: Filter by events before this date (exclusive).
          in: query
          name: beforeDate
          required: false
          schema:
            type: string
            format: date-time
        - description: Filter by event category.
          in: query
          name: category
          required: false
          schema:
            type: string
            enum:
              - Unspecified
              - AlbumRelease
              - Anniversary
              - Club
              - Concert
              - Contest
              - Convention
              - Other
        - description: Filter to include only events in user's events (interested or
            attending).
          in: query
          name: userCollectionId
          required: false
          schema:
            type: integer
            format: int32
        - description: Filter by one or more tag Ids (optional).
          in: query
          name: tagId
          required: false
          explode: true
          schema:
            type: array
            items:
              format: int32
              type: integer
        - description: Include child tags, if the tags being filtered by have any.
          in: query
          name: childTags
          required: false
          schema:
            type: boolean
        - description: Filter by artist Id.
          in: query
          name: artistId
          required: false
          explode: true
          schema:
            type: array
            items:
              format: int32
              type: integer
        - description: Include child voicebanks, if the artist being filtered by has any.
          in: query
          name: childVoicebanks
          required: false
          schema:
            type: boolean
        - description: Include members of groups. This applies if {artistId} is a group.
          in: query
          name: includeMembers
          required: false
          schema:
            type: boolean
        - description: Filter by entry status.
          in: query
          name: status
          required: false
          schema:
            type: string
            enum:
              - Draft
              - Finished
              - Approved
              - Locked
        - description: First item to be retrieved (optional, defaults to 0).
          in: query
          name: start
          required: false
          schema:
            type: integer
            format: int32
        - description: Maximum number of results to be loaded (optional, defaults to 10).
          in: query
          name: maxResults
          required: false
          schema:
            type: integer
            format: int32
        - description: Whether to load total number of items (optional, default to false).
          in: query
          name: getTotalCount
          required: false
          schema:
            type: boolean
        - description: "Sort rule (optional, defaults to Name). \r

            \            Possible values are None, Name, Date,
            SeriesName."
          in: query
          name: sort
          required: false
          schema:
            type: string
            enum:
              - None
              - Name
              - Date
              - AdditionDate
              - SeriesName
        - description: Optional fields (optional). Possible values are Description, Series.
          in: query
          name: fields
          required: false
          schema:
            type: string
            enum:
              - None
              - AdditionalNames
              - Artists
              - Description
              - MainPicture
              - Names
              - Series
              - SongList
              - WebLinks
        - description: Content language preference.
          in: query
          name: lang
          required: false
          schema:
            type: string
            enum:
              - Default
              - Japanese
              - Romaji
              - English
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PartialFindResult_ReleaseEventForApiCon\
                  tract_"
            text/json:
              schema:
                $ref: "#/components/schemas/PartialFindResult_ReleaseEventForApiCon\
                  tract_"
            application/xml:
              schema:
                $ref: "#/components/schemas/PartialFindResult_ReleaseEventForApiCon\
                  tract_"
            text/xml:
              schema:
                $ref: "#/components/schemas/PartialFindResult_ReleaseEventForApiCon\
                  tract_"
            text/javascript:
              schema:
                $ref: "#/components/schemas/PartialFindResult_ReleaseEventForApiCon\
                  tract_"
            application/javascript:
              schema:
                $ref: "#/components/schemas/PartialFindResult_ReleaseEventForApiCon\
                  tract_"
            application/json-p:
              schema:
                $ref: "#/components/schemas/PartialFindResult_ReleaseEventForApiCon\
                  tract_"
      summary: Gets a page of events.
      tags:
        - ReleaseEventApi
  /api/releaseEvents/names:
    get:
      deprecated: false
      operationId: ReleaseEventApi_GetNames
      parameters:
        - description: Event name query, for example "Voc@loid".
          in: query
          name: query
          required: false
          schema:
            type: string
        - description: Maximum number of search results.
          in: query
          name: maxResults
          required: false
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
            text/json:
              schema:
                items:
                  type: string
                type: array
            application/xml:
              schema:
                items:
                  type: string
                type: array
            text/xml:
              schema:
                items:
                  type: string
                type: array
            text/javascript:
              schema:
                items:
                  type: string
                type: array
            application/javascript:
              schema:
                items:
                  type: string
                type: array
            application/json-p:
              schema:
                items:
                  type: string
                type: array
      summary: "Find event names by a part of name.\r

        \            \r

        \            Matching is done anywhere from the name."
      tags:
        - ReleaseEventApi
  "/api/releaseEvents/{eventId}/albums":
    get:
      deprecated: false
      operationId: ReleaseEventApi_GetAlbums
      parameters:
        - description: Release event ID.
          in: path
          name: eventId
          required: true
          schema:
            type: integer
            format: int32
        - description: List of optional album fields.
          in: query
          name: fields
          required: false
          schema:
            type: string
            enum:
              - None
              - AdditionalNames
              - Artists
              - Description
              - Discs
              - Identifiers
              - MainPicture
              - Names
              - PVs
              - ReleaseEvent
              - Tags
              - Tracks
              - WebLinks
        - description: Content language preference.
          in: query
          name: lang
          required: false
          schema:
            type: string
            enum:
              - Default
              - Japanese
              - Romaji
              - English
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/AlbumForApiContract"
                type: array
            text/json:
              schema:
                items:
                  $ref: "#/components/schemas/AlbumForApiContract"
                type: array
            application/xml:
              schema:
                items:
                  $ref: "#/components/schemas/AlbumForApiContract"
                type: array
            text/xml:
              schema:
                items:
                  $ref: "#/components/schemas/AlbumForApiContract"
                type: array
            text/javascript:
              schema:
                items:
                  $ref: "#/components/schemas/AlbumForApiContract"
                type: array
            application/javascript:
              schema:
                items:
                  $ref: "#/components/schemas/AlbumForApiContract"
                type: array
            application/json-p:
              schema:
                items:
                  $ref: "#/components/schemas/AlbumForApiContract"
                type: array
      summary: Gets a list of albums for a specific event.
      tags:
        - ReleaseEventApi
  "/api/releaseEvents/{eventId}/published-songs":
    get:
      deprecated: false
      operationId: ReleaseEventApi_GetPublishedSongs
      parameters:
        - description: Event ID.
          in: path
          name: eventId
          required: true
          schema:
            type: integer
            format: int32
        - description: List of optional song fields.
          in: query
          name: fields
          required: false
          schema:
            type: string
            enum:
              - None
              - AdditionalNames
              - Albums
              - Artists
              - Lyrics
              - MainPicture
              - Names
              - PVs
              - ReleaseEvent
              - Tags
              - ThumbUrl
              - WebLinks
        - description: Content language preference.
          in: query
          name: lang
          required: false
          schema:
            type: string
            enum:
              - Default
              - Japanese
              - Romaji
              - English
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/SongForApiContract"
                type: array
            text/json:
              schema:
                items:
                  $ref: "#/components/schemas/SongForApiContract"
                type: array
            application/xml:
              schema:
                items:
                  $ref: "#/components/schemas/SongForApiContract"
                type: array
            text/xml:
              schema:
                items:
                  $ref: "#/components/schemas/SongForApiContract"
                type: array
            text/javascript:
              schema:
                items:
                  $ref: "#/components/schemas/SongForApiContract"
                type: array
            application/javascript:
              schema:
                items:
                  $ref: "#/components/schemas/SongForApiContract"
                type: array
            application/json-p:
              schema:
                items:
                  $ref: "#/components/schemas/SongForApiContract"
                type: array
      summary: Gets a list of songs for a specific event.
      tags:
        - ReleaseEventApi
  "/api/releaseEvents/{eventId}/reports":
    post:
      deprecated: false
      operationId: ReleaseEventApi_PostReport
      parameters:
        - description: Event to be reported.
          in: path
          name: eventId
          required: true
          schema:
            type: integer
            format: int32
        - description: Report type.
          in: query
          name: reportType
          required: true
          schema:
            type: string
            enum:
              - InvalidInfo
              - Duplicate
              - Inappropriate
              - Other
        - description: Notes. Optional.
          in: query
          name: notes
          required: true
          schema:
            type: string
        - description: Version to be reported. Optional.
          in: query
          name: versionNumber
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "204":
          description: No Content
      summary: Creates a new report.
      tags:
        - ReleaseEventApi
  "/api/releaseEvents/{id}":
    delete:
      deprecated: false
      operationId: ReleaseEventApi_Delete
      parameters:
        - description: ID of the event to be deleted.
          in: path
          name: id
          required: true
          schema:
            type: integer
            format: int32
        - description: Notes.
          in: query
          name: notes
          required: false
          schema:
            type: string
        - description: "If true, the entry is hard deleted. Hard deleted entries cannot be
            restored normally, but they will be moved to trash.\r

            \            If false, the entry is soft deleted,
            meaning it can still be restored."
          in: query
          name: hardDelete
          required: false
          schema:
            type: boolean
      responses:
        "204":
          description: No Content
      summary: Deletes an event.
      tags:
        - ReleaseEventApi
    get:
      deprecated: false
      operationId: ReleaseEventApi_GetOne
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
            format: int32
        - in: query
          name: fields
          required: false
          schema:
            type: string
            enum:
              - None
              - AdditionalNames
              - Artists
              - Description
              - MainPicture
              - Names
              - Series
              - SongList
              - WebLinks
        - in: query
          name: lang
          required: false
          schema:
            type: string
            enum:
              - Default
              - Japanese
              - Romaji
              - English
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ReleaseEventForApiContract"
            text/json:
              schema:
                $ref: "#/components/schemas/ReleaseEventForApiContract"
            application/xml:
              schema:
                $ref: "#/components/schemas/ReleaseEventForApiContract"
            text/xml:
              schema:
                $ref: "#/components/schemas/ReleaseEventForApiContract"
            text/javascript:
              schema:
                $ref: "#/components/schemas/ReleaseEventForApiContract"
            application/javascript:
              schema:
                $ref: "#/components/schemas/ReleaseEventForApiContract"
            application/json-p:
              schema:
                $ref: "#/components/schemas/ReleaseEventForApiContract"
      tags:
        - ReleaseEventApi
  "/api/resources/{cultureCode}":
    get:
      deprecated: false
      operationId: ResourcesApi_GetList
      parameters:
        - description: Culture code, for example "en-US" or "fi-FI".
          in: path
          name: cultureCode
          required: true
          schema:
            type: string
        - description: Names of resource sets to be returned. More than one value can be
            specified. For example "artistTypeNames"
          in: query
          name: setNames
          required: true
          explode: true
          schema:
            type: array
            items:
              type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                additionalProperties:
                  additionalProperties:
                    type: string
                  type: object
                type: object
            text/json:
              schema:
                additionalProperties:
                  additionalProperties:
                    type: string
                  type: object
                type: object
      summary: Gets a number of resource sets for a specific culture.
      tags:
        - ResourcesApi
  /api/songLists:
    post:
      deprecated: false
      operationId: SongListApi_Post
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SongListForEditContract"
          text/json:
            schema:
              $ref: "#/components/schemas/SongListForEditContract"
          application/xml:
            schema:
              $ref: "#/components/schemas/SongListForEditContract"
          text/xml:
            schema:
              $ref: "#/components/schemas/SongListForEditContract"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/SongListForEditContract"
        description: Song list properties.
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                format: int32
                type: integer
            text/json:
              schema:
                format: int32
                type: integer
            application/xml:
              schema:
                format: int32
                type: integer
            text/xml:
              schema:
                format: int32
                type: integer
            text/javascript:
              schema:
                format: int32
                type: integer
            application/javascript:
              schema:
                format: int32
                type: integer
            application/json-p:
              schema:
                format: int32
                type: integer
      summary: Creates a song list.
      tags:
        - SongListApi
  "/api/songLists/comments/{commentId}":
    delete:
      deprecated: false
      description: "Normal users can delete their own comments, moderators can delete all
        comments.\r

        \            Requires login."
      operationId: SongListApi_DeleteComment
      parameters:
        - description: ID of the comment to be deleted.
          in: path
          name: commentId
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "204":
          description: No Content
      summary: Deletes a comment.
      tags:
        - SongListApi
    post:
      deprecated: false
      description: "Normal users can edit their own comments, moderators can edit all
        comments.\r

        \            Requires login."
      operationId: SongListApi_PostEditComment
      parameters:
        - description: ID of the comment to be edited.
          in: path
          name: commentId
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        $ref: "#/components/requestBodies/CommentForApiContract3"
      responses:
        "204":
          description: No Content
      summary: Updates a comment.
      tags:
        - SongListApi
  /api/songLists/featured:
    get:
      deprecated: false
      operationId: SongListApi_GetFeaturedLists
      parameters:
        - description: Song list name query (optional).
          in: query
          name: query
          required: false
          schema:
            type: string
        - description: Match mode for list name (optional, defaults to Auto).
          in: query
          name: nameMatchMode
          required: false
          schema:
            type: string
            enum:
              - Auto
              - Partial
              - StartsWith
              - Exact
              - Words
        - description: Filter by a specific featured category. If empty, all categories are
            returned.
          in: query
          name: featuredCategory
          required: false
          schema:
            type: string
            enum:
              - Nothing
              - Concerts
              - VocaloidRanking
              - Pools
              - Other
        - description: First item to be retrieved (optional, defaults to 0).
          in: query
          name: start
          required: false
          schema:
            type: integer
            format: int32
        - description: Maximum number of results to be loaded (optional, defaults to 10,
            maximum of 50).
          in: query
          name: maxResults
          required: false
          schema:
            type: integer
            format: int32
        - description: Whether to load total number of items (optional, default to false).
          in: query
          name: getTotalCount
          required: false
          schema:
            type: boolean
        - description: List sort rule. Possible values are Nothing, Date, CreateDate, Name.
          in: query
          name: sort
          required: false
          schema:
            type: string
            enum:
              - None
              - Name
              - Date
              - CreateDate
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PartialFindResult_SongListForApiContrac\
                  t_"
            text/json:
              schema:
                $ref: "#/components/schemas/PartialFindResult_SongListForApiContrac\
                  t_"
            application/xml:
              schema:
                $ref: "#/components/schemas/PartialFindResult_SongListForApiContrac\
                  t_"
            text/xml:
              schema:
                $ref: "#/components/schemas/PartialFindResult_SongListForApiContrac\
                  t_"
            text/javascript:
              schema:
                $ref: "#/components/schemas/PartialFindResult_SongListForApiContrac\
                  t_"
            application/javascript:
              schema:
                $ref: "#/components/schemas/PartialFindResult_SongListForApiContrac\
                  t_"
            application/json-p:
              schema:
                $ref: "#/components/schemas/PartialFindResult_SongListForApiContrac\
                  t_"
      summary: Gets a list of featured song lists.
      tags:
        - SongListApi
  /api/songLists/featured/names:
    get:
      deprecated: false
      operationId: SongListApi_GetFeaturedListNames
      parameters:
        - description: Text query.
          in: query
          name: query
          required: false
          schema:
            type: string
        - description: Name match mode. Words is treated the same as Partial.
          in: query
          name: nameMatchMode
          required: false
          schema:
            type: string
            enum:
              - Auto
              - Partial
              - StartsWith
              - Exact
              - Words
        - description: Filter by a specific featured category. If empty, all categories are
            returned.
          in: query
          name: featuredCategory
          required: false
          schema:
            type: string
            enum:
              - Nothing
              - Concerts
              - VocaloidRanking
              - Pools
              - Other
        - description: Maximum number of results.
          in: query
          name: maxResults
          required: false
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
            text/json:
              schema:
                items:
                  type: string
                type: array
            application/xml:
              schema:
                items:
                  type: string
                type: array
            text/xml:
              schema:
                items:
                  type: string
                type: array
            text/javascript:
              schema:
                items:
                  type: string
                type: array
            application/javascript:
              schema:
                items:
                  type: string
                type: array
            application/json-p:
              schema:
                items:
                  type: string
                type: array
      summary: Gets a list of featuedd list names. Ideal for autocomplete boxes.
      tags:
        - SongListApi
  "/api/songLists/{id}":
    delete:
      deprecated: false
      operationId: SongListApi_Delete
      parameters:
        - description: ID of the list to be deleted.
          in: path
          name: id
          required: true
          schema:
            type: integer
            format: int32
        - description: Notes.
          in: query
          name: notes
          required: false
          schema:
            type: string
        - description: "If true, the entry is hard deleted. Hard deleted entries cannot be
            restored normally, but they will be moved to trash.\r

            \            If false, the entry is soft deleted,
            meaning it can still be restored."
          in: query
          name: hardDelete
          required: false
          schema:
            type: boolean
      responses:
        "204":
          description: No Content
      summary: Deletes a song list.
      tags:
        - SongListApi
  "/api/songLists/{listId}/comments":
    get:
      deprecated: false
      operationId: SongListApi_GetComments
      parameters:
        - description: ID of the list whose comments to load.
          in: path
          name: listId
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PartialFindResult_CommentForApiContract_"
            text/json:
              schema:
                $ref: "#/components/schemas/PartialFindResult_CommentForApiContract_"
            application/xml:
              schema:
                $ref: "#/components/schemas/PartialFindResult_CommentForApiContract_"
            text/xml:
              schema:
                $ref: "#/components/schemas/PartialFindResult_CommentForApiContract_"
            text/javascript:
              schema:
                $ref: "#/components/schemas/PartialFindResult_CommentForApiContract_"
            application/javascript:
              schema:
                $ref: "#/components/schemas/PartialFindResult_CommentForApiContract_"
            application/json-p:
              schema:
                $ref: "#/components/schemas/PartialFindResult_CommentForApiContract_"
      summary: Gets a list of comments for a song list.
      tags:
        - SongListApi
    post:
      deprecated: false
      operationId: SongListApi_PostNewComment
      parameters:
        - description: ID of the song list for which to create the comment.
          in: path
          name: listId
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        $ref: "#/components/requestBodies/CommentForApiContract"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CommentForApiContract"
            text/json:
              schema:
                $ref: "#/components/schemas/CommentForApiContract"
            application/xml:
              schema:
                $ref: "#/components/schemas/CommentForApiContract"
            text/xml:
              schema:
                $ref: "#/components/schemas/CommentForApiContract"
            text/javascript:
              schema:
                $ref: "#/components/schemas/CommentForApiContract"
            application/javascript:
              schema:
                $ref: "#/components/schemas/CommentForApiContract"
            application/json-p:
              schema:
                $ref: "#/components/schemas/CommentForApiContract"
      summary: Posts a new comment.
      tags:
        - SongListApi
  "/api/songLists/{listId}/songs":
    get:
      deprecated: false
      operationId: SongListApi_GetSongs
      parameters:
        - description: ID of the song list.
          in: path
          name: listId
          required: true
          schema:
            type: integer
            format: int32
        - description: Song name query (optional).
          in: query
          name: query
          required: false
          schema:
            type: string
        - description: Filtered song types (optional).
          in: query
          name: songTypes
          required: false
          schema:
            type: string
        - description: Filter by one or more PV services (separated by commas). The song
            will pass the filter if it has a PV for any of the matched services.
          in: query
          name: pvServices
          required: false
          schema:
            type: string
            enum:
              - Nothing
              - NicoNicoDouga
              - Youtube
              - SoundCloud
              - Vimeo
              - Piapro
              - Bilibili
              - File
              - LocalFile
              - Creofuga
              - Bandcamp
        - description: Filter by one or more tag Ids (optional).
          in: query
          name: tagId
          required: false
          explode: true
          schema:
            type: array
            items:
              format: int32
              type: integer
        - description: Filter by artist Id.
          in: query
          name: artistId
          required: false
          explode: true
          schema:
            type: array
            items:
              format: int32
              type: integer
        - description: Include child voicebanks, if the artist being filtered by has any.
          in: query
          name: childVoicebanks
          required: false
          schema:
            type: boolean
        - description: List of advanced filters (optional).
          in: query
          name: advancedFilters
          required: false
          explode: true
          schema:
            type: array
            items: {}
        - description: First item to be retrieved (optional, defaults to 0).
          in: query
          name: start
          required: false
          schema:
            type: integer
            format: int32
        - description: Maximum number of results to be loaded (optional, defaults to 10,
            maximum of 50).
          in: query
          name: maxResults
          required: false
          schema:
            type: integer
            format: int32
        - description: Whether to load total number of items (optional, default to false).
          in: query
          name: getTotalCount
          required: false
          schema:
            type: boolean
        - description: Song sort rule (optional, by default songs are sorted by song list
            order).
          in: query
          name: sort
          required: false
          schema:
            type: string
            enum:
              - None
              - Name
              - AdditionDate
              - PublishDate
              - FavoritedTimes
              - RatingScore
        - description: Match mode for song name (optional, defaults to Auto).
          in: query
          name: nameMatchMode
          required: false
          schema:
            type: string
            enum:
              - Auto
              - Partial
              - StartsWith
              - Exact
              - Words
        - description: List of optional fields (optional). Possible values are Albums,
            Artists, Names, PVs, Tags, ThumbUrl, WebLinks.
          in: query
          name: fields
          required: false
          schema:
            type: string
            enum:
              - None
              - AdditionalNames
              - Albums
              - Artists
              - Lyrics
              - MainPicture
              - Names
              - PVs
              - ReleaseEvent
              - Tags
              - ThumbUrl
              - WebLinks
        - description: Content language preference (optional).
          in: query
          name: lang
          required: false
          schema:
            type: string
            enum:
              - Default
              - Japanese
              - Romaji
              - English
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PartialFindResult_SongInListForApiContr\
                  act_"
            text/json:
              schema:
                $ref: "#/components/schemas/PartialFindResult_SongInListForApiContr\
                  act_"
            application/xml:
              schema:
                $ref: "#/components/schemas/PartialFindResult_SongInListForApiContr\
                  act_"
            text/xml:
              schema:
                $ref: "#/components/schemas/PartialFindResult_SongInListForApiContr\
                  act_"
            text/javascript:
              schema:
                $ref: "#/components/schemas/PartialFindResult_SongInListForApiContr\
                  act_"
            application/javascript:
              schema:
                $ref: "#/components/schemas/PartialFindResult_SongInListForApiContr\
                  act_"
            application/json-p:
              schema:
                $ref: "#/components/schemas/PartialFindResult_SongInListForApiContr\
                  act_"
      summary: Gets a list of songs in a song list.
      tags:
        - SongListApi
  /api/songs:
    get:
      deprecated: false
      operationId: SongApi_GetList
      parameters:
        - description: Song name query (optional).
          in: query
          name: query
          required: false
          schema:
            type: string
        - description: "Filtered song types (optional). \r

            \            Possible values are Original, Remaster,
            Remix, Cover, Instrumental, Mashup, MusicPV, DramaPV, Other."
          in: query
          name: songTypes
          required: false
          schema:
            type: string
        - description: Filter by songs published after this date (inclusive).
          in: query
          name: afterDate
          required: false
          schema:
            type: string
            format: date-time
        - description: Filter by songs published before this date (exclusive).
          in: query
          name: beforeDate
          required: false
          schema:
            type: string
            format: date-time
        - description: Filter by one or more tag names (optional).
          in: query
          name: tagName
          required: false
          explode: true
          schema:
            type: array
            items:
              type: string
        - description: Filter by one or more tag Ids (optional).
          in: query
          name: tagId
          required: false
          explode: true
          schema:
            type: array
            items:
              format: int32
              type: integer
        - description: Include child tags, if the tags being filtered by have any.
          in: query
          name: childTags
          required: false
          schema:
            type: boolean
        - description: Filter by artist Id.
          in: query
          name: artistId
          required: false
          explode: true
          schema:
            type: array
            items:
              format: int32
              type: integer
        - description: "Filter by artist participation status. Only valid if artistId is
            specified.\r

            \            Everything (default): Show all songs by
            that artist (no filter).\r

            \            OnlyMainAlbums: Show only main songs by
            that artist.\r

            \            OnlyCollaborations: Show only
            collaborations by that artist."
          in: query
          name: artistParticipationStatus
          required: false
          schema:
            type: string
            enum:
              - Everything
              - OnlyMainAlbums
              - OnlyCollaborations
        - description: Include child voicebanks, if the artist being filtered by has any.
          in: query
          name: childVoicebanks
          required: false
          schema:
            type: boolean
        - description: Include members of groups. This applies if {artistId} is a group.
          in: query
          name: includeMembers
          required: false
          schema:
            type: boolean
        - description: Whether to only include songs with at least one PV.
          in: query
          name: onlyWithPvs
          required: false
          schema:
            type: boolean
        - description: Filter by one or more PV services (separated by commas). The song
            will pass the filter if it has a PV for any of the matched services.
          in: query
          name: pvServices
          required: false
          schema:
            type: string
            enum:
              - Nothing
              - NicoNicoDouga
              - Youtube
              - SoundCloud
              - Vimeo
              - Piapro
              - Bilibili
              - File
              - LocalFile
              - Creofuga
              - Bandcamp
        - description: Allow only entries that have been created at most this many hours
            ago. By default there is no filtering.
          in: query
          name: since
          required: false
          schema:
            type: integer
            format: int32
        - description: Minimum rating score. Optional.
          in: query
          name: minScore
          required: false
          schema:
            type: integer
            format: int32
        - description: Filter by user's rated songs. By default there is no filtering.
          in: query
          name: userCollectionId
          required: false
          schema:
            type: integer
            format: int32
        - description: Filter by release event. By default there is no filtering.
          in: query
          name: releaseEventId
          required: false
          schema:
            type: integer
            format: int32
        - description: Filter by entry status (optional).
          in: query
          name: status
          required: false
          schema:
            type: string
            enum:
              - Draft
              - Finished
              - Approved
              - Locked
        - description: List of advanced filters (optional).
          in: query
          name: advancedFilters
          required: false
          explode: true
          schema:
            type: array
            items: {}
        - description: First item to be retrieved (optional, defaults to 0).
          in: query
          name: start
          required: false
          schema:
            type: integer
            format: int32
        - description: Maximum number of results to be loaded (optional, defaults to 10,
            maximum of 50).
          in: query
          name: maxResults
          required: false
          schema:
            type: integer
            format: int32
        - description: Whether to load total number of items (optional, default to false).
          in: query
          name: getTotalCount
          required: false
          schema:
            type: boolean
        - description: Sort rule (optional, defaults to Name). Possible values are None,
            Name, AdditionDate, FavoritedTimes, RatingScore.
          in: query
          name: sort
          required: false
          schema:
            type: string
            enum:
              - None
              - Name
              - AdditionDate
              - PublishDate
              - FavoritedTimes
              - RatingScore
        - description: "Whether the search should prefer accurate matches. \r

            \            If this is true, entries that match by
            prefix will be moved first, instead of being sorted
            alphabetically.\r

            \            Requires a text query. Does not support
            pagination.\r

            \            This is mostly useful for autocomplete
            boxes."
          in: query
          name: preferAccurateMatches
          required: false
          schema:
            type: boolean
        - description: Match mode for song name (optional, defaults to Exact).
          in: query
          name: nameMatchMode
          required: false
          schema:
            type: string
            enum:
              - Auto
              - Partial
              - StartsWith
              - Exact
              - Words
        - description: List of optional fields (optional). Possible values are Albums,
            Artists, Names, PVs, Tags, ThumbUrl, WebLinks.
          in: query
          name: fields
          required: false
          schema:
            type: string
            enum:
              - None
              - AdditionalNames
              - Albums
              - Artists
              - Lyrics
              - MainPicture
              - Names
              - PVs
              - ReleaseEvent
              - Tags
              - ThumbUrl
              - WebLinks
        - description: Content language preference (optional).
          in: query
          name: lang
          required: false
          schema:
            type: string
            enum:
              - Default
              - Japanese
              - Romaji
              - English
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PartialFindResult_SongForApiContract_"
            text/json:
              schema:
                $ref: "#/components/schemas/PartialFindResult_SongForApiContract_"
            application/xml:
              schema:
                $ref: "#/components/schemas/PartialFindResult_SongForApiContract_"
            text/xml:
              schema:
                $ref: "#/components/schemas/PartialFindResult_SongForApiContract_"
            text/javascript:
              schema:
                $ref: "#/components/schemas/PartialFindResult_SongForApiContract_"
            application/javascript:
              schema:
                $ref: "#/components/schemas/PartialFindResult_SongForApiContract_"
            application/json-p:
              schema:
                $ref: "#/components/schemas/PartialFindResult_SongForApiContract_"
      summary: Find songs.
      tags:
        - SongApi
  /api/songs/byPv:
    get:
      deprecated: false
      operationId: SongApi_GetByPV
      parameters:
        - description: PV service (required). Possible values are NicoNicoDouga, Youtube,
            SoundCloud, Vimeo, Piapro, Bilibili.
          in: query
          name: pvService
          required: true
          schema:
            type: string
            enum:
              - NicoNicoDouga
              - Youtube
              - SoundCloud
              - Vimeo
              - Piapro
              - Bilibili
              - File
              - LocalFile
              - Creofuga
              - Bandcamp
        - description: PV Id (required). For example sm123456.
          in: query
          name: pvId
          required: true
          schema:
            type: string
        - description: List of optional fields (optional). Possible values are Albums,
            Artists, Names, PVs, Tags, ThumbUrl, WebLinks.
          in: query
          name: fields
          required: false
          schema:
            type: string
            enum:
              - None
              - AdditionalNames
              - Albums
              - Artists
              - Lyrics
              - MainPicture
              - Names
              - PVs
              - ReleaseEvent
              - Tags
              - ThumbUrl
              - WebLinks
        - description: Content language preference (optional).
          in: query
          name: lang
          required: false
          schema:
            type: string
            enum:
              - Default
              - Japanese
              - Romaji
              - English
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SongForApiContract"
            text/json:
              schema:
                $ref: "#/components/schemas/SongForApiContract"
            application/xml:
              schema:
                $ref: "#/components/schemas/SongForApiContract"
            text/xml:
              schema:
                $ref: "#/components/schemas/SongForApiContract"
            text/javascript:
              schema:
                $ref: "#/components/schemas/SongForApiContract"
            application/javascript:
              schema:
                $ref: "#/components/schemas/SongForApiContract"
            application/json-p:
              schema:
                $ref: "#/components/schemas/SongForApiContract"
      summary: Gets a song by PV.
      tags:
        - SongApi
  "/api/songs/comments/{commentId}":
    delete:
      deprecated: false
      description: "Normal users can delete their own comments, moderators can delete all
        comments.\r

        \            Requires login."
      operationId: SongApi_DeleteComment
      parameters:
        - description: ID of the comment to be deleted.
          in: path
          name: commentId
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "204":
          description: No Content
      summary: Deletes a comment.
      tags:
        - SongApi
    post:
      deprecated: false
      description: "Normal users can edit their own comments, moderators can edit all
        comments.\r

        \            Requires login."
      operationId: SongApi_PostEditComment
      parameters:
        - description: ID of the comment to be edited.
          in: path
          name: commentId
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        $ref: "#/components/requestBodies/CommentForApiContract3"
      responses:
        "204":
          description: No Content
      summary: Updates a comment.
      tags:
        - SongApi
  /api/songs/highlighted:
    get:
      deprecated: false
      description: Output is cached for 1 hour.
      operationId: SongApi_GetHighlightedSongs
      parameters:
        - in: query
          name: languagePreference
          required: false
          schema:
            type: string
            enum:
              - Default
              - Japanese
              - Romaji
              - English
        - in: query
          name: fields
          required: false
          schema:
            type: string
            enum:
              - None
              - AdditionalNames
              - Albums
              - Artists
              - Lyrics
              - MainPicture
              - Names
              - PVs
              - ReleaseEvent
              - Tags
              - ThumbUrl
              - WebLinks
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/SongForApiContract"
                type: array
            text/json:
              schema:
                items:
                  $ref: "#/components/schemas/SongForApiContract"
                type: array
            application/xml:
              schema:
                items:
                  $ref: "#/components/schemas/SongForApiContract"
                type: array
            text/xml:
              schema:
                items:
                  $ref: "#/components/schemas/SongForApiContract"
                type: array
            text/javascript:
              schema:
                items:
                  $ref: "#/components/schemas/SongForApiContract"
                type: array
            application/javascript:
              schema:
                items:
                  $ref: "#/components/schemas/SongForApiContract"
                type: array
            application/json-p:
              schema:
                items:
                  $ref: "#/components/schemas/SongForApiContract"
                type: array
      summary: Gets list of highlighted songs, same as front page.
      tags:
        - SongApi
  "/api/songs/lyrics/{lyricsId}":
    get:
      deprecated: false
      description: Output is cached. Specify song version as parameter to refresh.
      operationId: SongApi_GetLyrics
      parameters:
        - description: Lyrics ID.
          in: path
          name: lyricsId
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LyricsForSongContract"
            text/json:
              schema:
                $ref: "#/components/schemas/LyricsForSongContract"
            application/xml:
              schema:
                $ref: "#/components/schemas/LyricsForSongContract"
            text/xml:
              schema:
                $ref: "#/components/schemas/LyricsForSongContract"
            text/javascript:
              schema:
                $ref: "#/components/schemas/LyricsForSongContract"
            application/javascript:
              schema:
                $ref: "#/components/schemas/LyricsForSongContract"
            application/json-p:
              schema:
                $ref: "#/components/schemas/LyricsForSongContract"
      summary: Gets lyrics by ID.
      tags:
        - SongApi
  /api/songs/names:
    get:
      deprecated: false
      operationId: SongApi_GetNames
      parameters:
        - description: Text query.
          in: query
          name: query
          required: false
          schema:
            type: string
        - description: Name match mode.
          in: query
          name: nameMatchMode
          required: false
          schema:
            type: string
            enum:
              - Auto
              - Partial
              - StartsWith
              - Exact
              - Words
        - description: Maximum number of results.
          in: query
          name: maxResults
          required: false
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
            text/json:
              schema:
                items:
                  type: string
                type: array
            application/xml:
              schema:
                items:
                  type: string
                type: array
            text/xml:
              schema:
                items:
                  type: string
                type: array
            text/javascript:
              schema:
                items:
                  type: string
                type: array
            application/javascript:
              schema:
                items:
                  type: string
                type: array
            application/json-p:
              schema:
                items:
                  type: string
                type: array
      summary: Gets a list of song names. Ideal for autocomplete boxes.
      tags:
        - SongApi
  /api/songs/top-rated:
    get:
      deprecated: false
      operationId: SongApi_GetTopSongs
      parameters:
        - description: Duration in hours from which to get songs.
          in: query
          name: durationHours
          required: false
          schema:
            type: integer
            format: int32
        - description: Lower bound of the date. Optional.
          in: query
          name: startDate
          required: false
          schema:
            type: string
            format: date-time
        - description: Filtering mode.
          in: query
          name: filterBy
          required: false
          schema:
            type: string
            enum:
              - CreateDate
              - PublishDate
              - Popularity
        - description: Vocalist selection.
          in: query
          name: vocalist
          required: false
          schema:
            type: string
            enum:
              - Nothing
              - Vocaloid
              - UTAU
              - CeVIO
        - description: Maximum number of results to be loaded (optional).
          in: query
          name: maxResults
          required: false
          schema:
            type: integer
            format: int32
        - description: Optional song fields to load.
          in: query
          name: fields
          required: false
          schema:
            type: string
            enum:
              - None
              - AdditionalNames
              - Albums
              - Artists
              - Lyrics
              - MainPicture
              - Names
              - PVs
              - ReleaseEvent
              - Tags
              - ThumbUrl
              - WebLinks
        - description: Language preference.
          in: query
          name: languagePreference
          required: false
          schema:
            type: string
            enum:
              - Default
              - Japanese
              - Romaji
              - English
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/SongForApiContract"
                type: array
            text/json:
              schema:
                items:
                  $ref: "#/components/schemas/SongForApiContract"
                type: array
            application/xml:
              schema:
                items:
                  $ref: "#/components/schemas/SongForApiContract"
                type: array
            text/xml:
              schema:
                items:
                  $ref: "#/components/schemas/SongForApiContract"
                type: array
            text/javascript:
              schema:
                items:
                  $ref: "#/components/schemas/SongForApiContract"
                type: array
            application/javascript:
              schema:
                items:
                  $ref: "#/components/schemas/SongForApiContract"
                type: array
            application/json-p:
              schema:
                items:
                  $ref: "#/components/schemas/SongForApiContract"
                type: array
      summary: Gets top rated songs.
      tags:
        - SongApi
  "/api/songs/{id}":
    delete:
      deprecated: false
      operationId: SongApi_Delete
      parameters:
        - description: ID of the song to be deleted.
          in: path
          name: id
          required: true
          schema:
            type: integer
            format: int32
        - description: Notes.
          in: query
          name: notes
          required: false
          schema:
            type: string
      responses:
        "204":
          description: No Content
      summary: Deletes a song.
      tags:
        - SongApi
    get:
      deprecated: false
      operationId: SongApi_GetById
      parameters:
        - description: Song Id (required).
          in: path
          name: id
          required: true
          schema:
            type: integer
            format: int32
        - description: "List of optional fields (optional). \r

            \            Possible values are Albums, Artists, Names,
            PVs, Tags, ThumbUrl, WebLinks."
          in: query
          name: fields
          required: false
          schema:
            type: string
            enum:
              - None
              - AdditionalNames
              - Albums
              - Artists
              - Lyrics
              - MainPicture
              - Names
              - PVs
              - ReleaseEvent
              - Tags
              - ThumbUrl
              - WebLinks
        - description: Content language preference (optional).
          in: query
          name: lang
          required: false
          schema:
            type: string
            enum:
              - Default
              - Japanese
              - Romaji
              - English
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SongForApiContract"
            text/json:
              schema:
                $ref: "#/components/schemas/SongForApiContract"
            application/xml:
              schema:
                $ref: "#/components/schemas/SongForApiContract"
            text/xml:
              schema:
                $ref: "#/components/schemas/SongForApiContract"
            text/javascript:
              schema:
                $ref: "#/components/schemas/SongForApiContract"
            application/javascript:
              schema:
                $ref: "#/components/schemas/SongForApiContract"
            application/json-p:
              schema:
                $ref: "#/components/schemas/SongForApiContract"
      summary: Gets a song by Id.
      tags:
        - SongApi
  "/api/songs/{id}/comments":
    get:
      deprecated: false
      description: Pagination and sorting might be added later.
      operationId: SongApi_GetComments
      parameters:
        - description: ID of the song whose comments to load.
          in: path
          name: id
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/CommentForApiContract"
                type: array
            text/json:
              schema:
                items:
                  $ref: "#/components/schemas/CommentForApiContract"
                type: array
            application/xml:
              schema:
                items:
                  $ref: "#/components/schemas/CommentForApiContract"
                type: array
            text/xml:
              schema:
                items:
                  $ref: "#/components/schemas/CommentForApiContract"
                type: array
            text/javascript:
              schema:
                items:
                  $ref: "#/components/schemas/CommentForApiContract"
                type: array
            application/javascript:
              schema:
                items:
                  $ref: "#/components/schemas/CommentForApiContract"
                type: array
            application/json-p:
              schema:
                items:
                  $ref: "#/components/schemas/CommentForApiContract"
                type: array
      summary: Gets a list of comments for a song.
      tags:
        - SongApi
    post:
      deprecated: false
      operationId: SongApi_PostNewComment
      parameters:
        - description: ID of the song for which to create the comment.
          in: path
          name: id
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        $ref: "#/components/requestBodies/CommentForApiContract"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CommentForApiContract"
            text/json:
              schema:
                $ref: "#/components/schemas/CommentForApiContract"
            application/xml:
              schema:
                $ref: "#/components/schemas/CommentForApiContract"
            text/xml:
              schema:
                $ref: "#/components/schemas/CommentForApiContract"
            text/javascript:
              schema:
                $ref: "#/components/schemas/CommentForApiContract"
            application/javascript:
              schema:
                $ref: "#/components/schemas/CommentForApiContract"
            application/json-p:
              schema:
                $ref: "#/components/schemas/CommentForApiContract"
      summary: Posts a new comment.
      tags:
        - SongApi
  "/api/songs/{id}/derived":
    get:
      deprecated: false
      description: Pagination and sorting might be added later.
      operationId: SongApi_GetDerived
      parameters:
        - description: Song Id (required).
          in: path
          name: id
          required: true
          schema:
            type: integer
            format: int32
        - description: "List of optional fields (optional). \r

            \            Possible values are Albums, Artists, Names,
            PVs, Tags, ThumbUrl, WebLinks."
          in: query
          name: fields
          required: false
          schema:
            type: string
            enum:
              - None
              - AdditionalNames
              - Albums
              - Artists
              - Lyrics
              - MainPicture
              - Names
              - PVs
              - ReleaseEvent
              - Tags
              - ThumbUrl
              - WebLinks
        - description: Content language preference (optional).
          in: query
          name: lang
          required: false
          schema:
            type: string
            enum:
              - Default
              - Japanese
              - Romaji
              - English
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/SongForApiContract"
                type: array
            text/json:
              schema:
                items:
                  $ref: "#/components/schemas/SongForApiContract"
                type: array
            application/xml:
              schema:
                items:
                  $ref: "#/components/schemas/SongForApiContract"
                type: array
            text/xml:
              schema:
                items:
                  $ref: "#/components/schemas/SongForApiContract"
                type: array
            text/javascript:
              schema:
                items:
                  $ref: "#/components/schemas/SongForApiContract"
                type: array
            application/javascript:
              schema:
                items:
                  $ref: "#/components/schemas/SongForApiContract"
                type: array
            application/json-p:
              schema:
                items:
                  $ref: "#/components/schemas/SongForApiContract"
                type: array
      summary: Gets derived (alternate versions) of a song.
      tags:
        - SongApi
  "/api/songs/{id}/ratings":
    get:
      deprecated: false
      description: "The result includes ratings and user information.\r

        \            For users who have requested not to make their
        ratings public, the user will be empty."
      operationId: SongApi_GetRatings
      parameters:
        - description: Song ID.
          in: path
          name: id
          required: true
          schema:
            type: integer
            format: int32
        - description: Optional fields for the users.
          in: query
          name: userFields
          required: true
          schema:
            type: string
            enum:
              - None
              - KnownLanguages
              - MainPicture
              - OldUsernames
        - description: Content language preference.
          in: query
          name: lang
          required: false
          schema:
            type: string
            enum:
              - Default
              - Japanese
              - Romaji
              - English
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/RatedSongForUserForApiContract"
                type: array
            text/json:
              schema:
                items:
                  $ref: "#/components/schemas/RatedSongForUserForApiContract"
                type: array
            application/xml:
              schema:
                items:
                  $ref: "#/components/schemas/RatedSongForUserForApiContract"
                type: array
            text/xml:
              schema:
                items:
                  $ref: "#/components/schemas/RatedSongForUserForApiContract"
                type: array
            text/javascript:
              schema:
                items:
                  $ref: "#/components/schemas/RatedSongForUserForApiContract"
                type: array
            application/javascript:
              schema:
                items:
                  $ref: "#/components/schemas/RatedSongForUserForApiContract"
                type: array
            application/json-p:
              schema:
                items:
                  $ref: "#/components/schemas/RatedSongForUserForApiContract"
                type: array
      summary: Get ratings for a song.
      tags:
        - SongApi
    post:
      deprecated: false
      description: "If the user has already rated the song, any previous rating is
        replaced.\r

        \            Authorization cookie must be included.\r

        \            This API supports CORS."
      operationId: SongApi_PostRating
      parameters:
        - description: ID of the song to be rated.
          in: path
          name: id
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SongRatingContract"
          text/json:
            schema:
              $ref: "#/components/schemas/SongRatingContract"
          application/xml:
            schema:
              $ref: "#/components/schemas/SongRatingContract"
          text/xml:
            schema:
              $ref: "#/components/schemas/SongRatingContract"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/SongRatingContract"
        description: Rating to be given. Possible values are Nothing, Like, Favorite.
        required: true
      responses:
        "204":
          description: No Content
      summary: Add or update rating for a specific song, for the currently logged in
        user.
      tags:
        - SongApi
  "/api/songs/{id}/related":
    get:
      deprecated: false
      operationId: SongApi_GetRelated
      parameters:
        - description: Song whose related songs are to be queried.
          in: path
          name: id
          required: true
          schema:
            type: integer
            format: int32
        - description: Optional song fields.
          in: query
          name: fields
          required: false
          schema:
            type: string
            enum:
              - None
              - AdditionalNames
              - Albums
              - Artists
              - Lyrics
              - MainPicture
              - Names
              - PVs
              - ReleaseEvent
              - Tags
              - ThumbUrl
              - WebLinks
        - description: Content language preference.
          in: query
          name: lang
          required: false
          schema:
            type: string
            enum:
              - Default
              - Japanese
              - Romaji
              - English
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RelatedSongsContract"
            text/json:
              schema:
                $ref: "#/components/schemas/RelatedSongsContract"
            application/xml:
              schema:
                $ref: "#/components/schemas/RelatedSongsContract"
            text/xml:
              schema:
                $ref: "#/components/schemas/RelatedSongsContract"
            text/javascript:
              schema:
                $ref: "#/components/schemas/RelatedSongsContract"
            application/javascript:
              schema:
                $ref: "#/components/schemas/RelatedSongsContract"
            application/json-p:
              schema:
                $ref: "#/components/schemas/RelatedSongsContract"
      summary: Gets related songs.
      tags:
        - SongApi
  /api/tags:
    get:
      deprecated: false
      operationId: TagApi_GetList
      parameters:
        - description: Tag name query (optional).
          in: query
          name: query
          required: false
          schema:
            type: string
        - description: Whether to allow child tags. If this is false, only root tags (that
            aren't children of any other tag) will be included.
          in: query
          name: allowChildren
          required: false
          schema:
            type: boolean
        - description: Filter tags by category (optional). If specified, this must be an
            exact match (case insensitive).
          in: query
          name: categoryName
          required: false
          schema:
            type: string
        - description: First item to be retrieved (optional, defaults to 0).
          in: query
          name: start
          required: false
          schema:
            type: integer
            format: int32
        - description: Maximum number of results to be loaded (optional, defaults to 10,
            maximum of 30).
          in: query
          name: maxResults
          required: false
          schema:
            type: integer
            format: int32
        - description: Whether to load total number of items (optional, default to false).
          in: query
          name: getTotalCount
          required: false
          schema:
            type: boolean
        - description: Match mode for song name (optional, defaults to Exact).
          in: query
          name: nameMatchMode
          required: false
          schema:
            type: string
            enum:
              - Auto
              - Partial
              - StartsWith
              - Exact
              - Words
        - description: Sort rule (optional, by default tags are sorted by name).Possible
            values are Name and UsageCount.
          in: query
          name: sort
          required: false
          schema:
            type: string
            enum:
              - Nothing
              - Name
              - AdditionDate
              - UsageCount
        - description: "Whether the search should prefer accurate matches. \r

            \            If this is true, entries that match by
            prefix will be moved first, instead of being sorted
            alphabetically.\r

            \            Requires a text query. Does not support
            pagination.\r

            \            This is mostly useful for autocomplete
            boxes."
          in: query
          name: preferAccurateMatches
          required: false
          schema:
            type: boolean
        - description: List of optional fields (optional).
          in: query
          name: fields
          required: false
          schema:
            type: string
            enum:
              - None
              - AdditionalNames
              - AliasedTo
              - Description
              - MainPicture
              - Names
              - Parent
              - RelatedTags
              - TranslatedDescription
              - WebLinks
        - description: Content language preference (optional).
          in: query
          name: lang
          required: false
          schema:
            type: string
            enum:
              - Default
              - Japanese
              - Romaji
              - English
        - in: query
          name: target
          required: false
          schema:
            type: string
            enum:
              - Nothing
              - Album
              - Artist
              - AlbumArtist
              - Event
              - Song
              - AlbumSong
              - ArtistSong
              - All
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PartialFindResult_TagForApiContract_"
            text/json:
              schema:
                $ref: "#/components/schemas/PartialFindResult_TagForApiContract_"
            application/xml:
              schema:
                $ref: "#/components/schemas/PartialFindResult_TagForApiContract_"
            text/xml:
              schema:
                $ref: "#/components/schemas/PartialFindResult_TagForApiContract_"
            text/javascript:
              schema:
                $ref: "#/components/schemas/PartialFindResult_TagForApiContract_"
            application/javascript:
              schema:
                $ref: "#/components/schemas/PartialFindResult_TagForApiContract_"
            application/json-p:
              schema:
                $ref: "#/components/schemas/PartialFindResult_TagForApiContract_"
      summary: Find tags.
      tags:
        - TagApi
    post:
      deprecated: false
      operationId: TagApi_PostNewTag
      parameters:
        - description: Tag English name. Tag names must be unique.
          in: query
          name: name
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TagBaseContract"
            text/json:
              schema:
                $ref: "#/components/schemas/TagBaseContract"
            application/xml:
              schema:
                $ref: "#/components/schemas/TagBaseContract"
            text/xml:
              schema:
                $ref: "#/components/schemas/TagBaseContract"
            text/javascript:
              schema:
                $ref: "#/components/schemas/TagBaseContract"
            application/javascript:
              schema:
                $ref: "#/components/schemas/TagBaseContract"
            application/json-p:
              schema:
                $ref: "#/components/schemas/TagBaseContract"
        "400":
          description: If tag name is already in use
      summary: Creates a new tag.
      tags:
        - TagApi
  "/api/tags/byName/{name}":
    get:
      deprecated: true
      operationId: TagApi_GetByName
      parameters:
        - description: Tag name (required).
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: List of optional fields (optional).
          in: query
          name: fields
          required: false
          schema:
            type: string
            enum:
              - None
              - AdditionalNames
              - AliasedTo
              - Description
              - MainPicture
              - Names
              - Parent
              - RelatedTags
              - TranslatedDescription
              - WebLinks
        - description: Content language preference (optional).
          in: query
          name: lang
          required: false
          schema:
            type: string
            enum:
              - Default
              - Japanese
              - Romaji
              - English
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TagForApiContract"
            text/json:
              schema:
                $ref: "#/components/schemas/TagForApiContract"
            application/xml:
              schema:
                $ref: "#/components/schemas/TagForApiContract"
            text/xml:
              schema:
                $ref: "#/components/schemas/TagForApiContract"
            text/javascript:
              schema:
                $ref: "#/components/schemas/TagForApiContract"
            application/javascript:
              schema:
                $ref: "#/components/schemas/TagForApiContract"
            application/json-p:
              schema:
                $ref: "#/components/schemas/TagForApiContract"
      summary: DEPRECATED. Gets a tag by name.
      tags:
        - TagApi
  /api/tags/categoryNames:
    get:
      deprecated: false
      operationId: TagApi_GetCategoryNamesList
      parameters:
        - in: query
          name: query
          required: false
          schema:
            type: string
        - in: query
          name: nameMatchMode
          required: false
          schema:
            type: string
            enum:
              - Auto
              - Partial
              - StartsWith
              - Exact
              - Words
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
            text/json:
              schema:
                items:
                  type: string
                type: array
            application/xml:
              schema:
                items:
                  type: string
                type: array
            text/xml:
              schema:
                items:
                  type: string
                type: array
            text/javascript:
              schema:
                items:
                  type: string
                type: array
            application/javascript:
              schema:
                items:
                  type: string
                type: array
            application/json-p:
              schema:
                items:
                  type: string
                type: array
      summary: Gets a list of tag category names.
      tags:
        - TagApi
  "/api/tags/comments/{commentId}":
    delete:
      deprecated: false
      operationId: TagApi_DeleteComment
      parameters:
        - description: ID of the comment to be deleted.
          in: path
          name: commentId
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "204":
          description: No Content
      summary: "Deletes a comment.\r

        \            Normal users can delete their own comments,
        moderators can delete all comments.\r

        \            Requires login."
      tags:
        - TagApi
    post:
      deprecated: false
      operationId: TagApi_PostEditComment
      parameters:
        - description: ID of the comment to be edited.
          in: path
          name: commentId
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        $ref: "#/components/requestBodies/CommentForApiContract3"
      responses:
        "204":
          description: No Content
      summary: "Updates a comment.\r

        \            Normal users can edit their own comments,
        moderators can edit all comments.\r

        \            Requires login."
      tags:
        - TagApi
  /api/tags/names:
    get:
      deprecated: false
      operationId: TagApi_GetNames
      parameters:
        - description: Tag name query, for example "rock".
          in: query
          name: query
          required: false
          schema:
            type: string
        - description: "Whether to find tags that are aliases of other tags as well. \r

            \            If false, only tags that are not aliases
            will be listed."
          in: query
          name: allowAliases
          required: false
          schema:
            type: boolean
        - description: Maximum number of search results.
          in: query
          name: maxResults
          required: false
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
            text/json:
              schema:
                items:
                  type: string
                type: array
            application/xml:
              schema:
                items:
                  type: string
                type: array
            text/xml:
              schema:
                items:
                  type: string
                type: array
            text/javascript:
              schema:
                items:
                  type: string
                type: array
            application/javascript:
              schema:
                items:
                  type: string
                type: array
            application/json-p:
              schema:
                items:
                  type: string
                type: array
      summary: "Find tag names by a part of name.\r

        \            \r

        \            Matching is done anywhere from the name."
      tags:
        - TagApi
  /api/tags/top:
    get:
      deprecated: false
      operationId: TagApi_GetTopTags
      parameters:
        - description: Tag category, for example "Genres". Optional - if not specified, no
            filtering is done.
          in: query
          name: categoryName
          required: false
          schema:
            type: string
        - description: Maximum number of tags to return.
          in: query
          name: maxResults
          required: false
          schema:
            type: integer
            format: int32
        - description: Content language preference (optional).
          in: query
          name: lang
          required: false
          schema:
            type: string
            enum:
              - Default
              - Japanese
              - Romaji
              - English
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/TagBaseContract"
                type: array
            text/json:
              schema:
                items:
                  $ref: "#/components/schemas/TagBaseContract"
                type: array
            application/xml:
              schema:
                items:
                  $ref: "#/components/schemas/TagBaseContract"
                type: array
            text/xml:
              schema:
                items:
                  $ref: "#/components/schemas/TagBaseContract"
                type: array
            text/javascript:
              schema:
                items:
                  $ref: "#/components/schemas/TagBaseContract"
                type: array
            application/javascript:
              schema:
                items:
                  $ref: "#/components/schemas/TagBaseContract"
                type: array
            application/json-p:
              schema:
                items:
                  $ref: "#/components/schemas/TagBaseContract"
                type: array
      summary: Gets the most common tags in a category.
      tags:
        - TagApi
  "/api/tags/{id}":
    delete:
      deprecated: false
      operationId: TagApi_Delete
      parameters:
        - description: ID of the tag to be deleted.
          in: path
          name: id
          required: true
          schema:
            type: integer
            format: int32
        - description: Notes (optional).
          in: query
          name: notes
          required: false
          schema:
            type: string
        - description: "If true, the entry is hard deleted. Hard deleted entries cannot be
            restored normally, but they will be moved to trash.\r

            \            If false, the entry is soft deleted,
            meaning it can still be restored."
          in: query
          name: hardDelete
          required: false
          schema:
            type: boolean
      responses:
        "204":
          description: No Content
      summary: Deletes a tag.
      tags:
        - TagApi
    get:
      deprecated: false
      operationId: TagApi_GetById
      parameters:
        - description: Tag ID (required).
          in: path
          name: id
          required: true
          schema:
            type: integer
            format: int32
        - description: List of optional fields (optional).
          in: query
          name: fields
          required: false
          schema:
            type: string
            enum:
              - None
              - AdditionalNames
              - AliasedTo
              - Description
              - MainPicture
              - Names
              - Parent
              - RelatedTags
              - TranslatedDescription
              - WebLinks
        - description: Content language preference (optional).
          in: query
          name: lang
          required: false
          schema:
            type: string
            enum:
              - Default
              - Japanese
              - Romaji
              - English
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TagForApiContract"
            text/json:
              schema:
                $ref: "#/components/schemas/TagForApiContract"
            application/xml:
              schema:
                $ref: "#/components/schemas/TagForApiContract"
            text/xml:
              schema:
                $ref: "#/components/schemas/TagForApiContract"
            text/javascript:
              schema:
                $ref: "#/components/schemas/TagForApiContract"
            application/javascript:
              schema:
                $ref: "#/components/schemas/TagForApiContract"
            application/json-p:
              schema:
                $ref: "#/components/schemas/TagForApiContract"
      summary: Gets a tag by ID.
      tags:
        - TagApi
  "/api/tags/{tagId}/children":
    get:
      deprecated: false
      operationId: TagApi_GetChildTags
      parameters:
        - description: ID of the tag whose children to load.
          in: path
          name: tagId
          required: true
          schema:
            type: integer
            format: int32
        - description: List of optional fields (optional).
          in: query
          name: fields
          required: false
          schema:
            type: string
            enum:
              - None
              - AdditionalNames
              - AliasedTo
              - Description
              - MainPicture
              - Names
              - Parent
              - RelatedTags
              - TranslatedDescription
              - WebLinks
        - description: Content language preference (optional).
          in: query
          name: lang
          required: false
          schema:
            type: string
            enum:
              - Default
              - Japanese
              - Romaji
              - English
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/TagForApiContract"
                type: array
            text/json:
              schema:
                items:
                  $ref: "#/components/schemas/TagForApiContract"
                type: array
            application/xml:
              schema:
                items:
                  $ref: "#/components/schemas/TagForApiContract"
                type: array
            text/xml:
              schema:
                items:
                  $ref: "#/components/schemas/TagForApiContract"
                type: array
            text/javascript:
              schema:
                items:
                  $ref: "#/components/schemas/TagForApiContract"
                type: array
            application/javascript:
              schema:
                items:
                  $ref: "#/components/schemas/TagForApiContract"
                type: array
            application/json-p:
              schema:
                items:
                  $ref: "#/components/schemas/TagForApiContract"
                type: array
      summary: "Gets a list of child tags for a tag.\r

        \            Only direct children will be included."
      tags:
        - TagApi
  "/api/tags/{tagId}/comments":
    get:
      deprecated: false
      operationId: TagApi_GetComments
      parameters:
        - description: ID of the tag whose comments to load.
          in: path
          name: tagId
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PartialFindResult_CommentForApiContract_"
            text/json:
              schema:
                $ref: "#/components/schemas/PartialFindResult_CommentForApiContract_"
            application/xml:
              schema:
                $ref: "#/components/schemas/PartialFindResult_CommentForApiContract_"
            text/xml:
              schema:
                $ref: "#/components/schemas/PartialFindResult_CommentForApiContract_"
            text/javascript:
              schema:
                $ref: "#/components/schemas/PartialFindResult_CommentForApiContract_"
            application/javascript:
              schema:
                $ref: "#/components/schemas/PartialFindResult_CommentForApiContract_"
            application/json-p:
              schema:
                $ref: "#/components/schemas/PartialFindResult_CommentForApiContract_"
      summary: "Gets a list of comments for a tag.\r

        \            Note: pagination and sorting might be added later."
      tags:
        - TagApi
    post:
      deprecated: false
      operationId: TagApi_PostNewComment
      parameters:
        - description: ID of the tag for which to create the comment.
          in: path
          name: tagId
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        $ref: "#/components/requestBodies/CommentForApiContract"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CommentForApiContract"
            text/json:
              schema:
                $ref: "#/components/schemas/CommentForApiContract"
            application/xml:
              schema:
                $ref: "#/components/schemas/CommentForApiContract"
            text/xml:
              schema:
                $ref: "#/components/schemas/CommentForApiContract"
            text/javascript:
              schema:
                $ref: "#/components/schemas/CommentForApiContract"
            application/javascript:
              schema:
                $ref: "#/components/schemas/CommentForApiContract"
            application/json-p:
              schema:
                $ref: "#/components/schemas/CommentForApiContract"
      summary: Posts a new comment.
      tags:
        - TagApi
  "/api/tags/{tagId}/reports":
    post:
      deprecated: false
      operationId: TagApi_PostReport
      parameters:
        - description: Tag to be reported.
          in: path
          name: tagId
          required: true
          schema:
            type: integer
            format: int32
        - description: Report type.
          in: query
          name: reportType
          required: true
          schema:
            type: string
            enum:
              - InvalidInfo
              - Duplicate
              - Inappropriate
              - Other
        - description: Notes. Optional.
          in: query
          name: notes
          required: true
          schema:
            type: string
        - description: Version to be reported. Optional.
          in: query
          name: versionNumber
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "204":
          description: No Content
      summary: Creates a new report.
      tags:
        - TagApi
  /api/users:
    get:
      deprecated: false
      operationId: UserApi_GetList
      parameters:
        - description: User name query (optional).
          in: query
          name: query
          required: false
          schema:
            type: string
        - description: Filter by user group. Only one value supported for now. Optional.
          in: query
          name: groups
          required: false
          schema:
            type: string
            enum:
              - Nothing
              - Limited
              - Regular
              - Trusted
              - Moderator
              - Admin
        - description: Filter by users who joined after this date (inclusive).
          in: query
          name: joinDateAfter
          required: false
          schema:
            type: string
            format: date-time
        - description: Filter by users who joined before this date (exclusive).
          in: query
          name: joinDateBefore
          required: false
          schema:
            type: string
            format: date-time
        - description: Name match mode.
          in: query
          name: nameMatchMode
          required: false
          schema:
            type: string
            enum:
              - Auto
              - Partial
              - StartsWith
              - Exact
              - Words
        - description: Index of the first entry to be loaded.
          in: query
          name: start
          required: false
          schema:
            type: integer
            format: int32
        - description: Maximum number of results to be loaded.
          in: query
          name: maxResults
          required: false
          schema:
            type: integer
            format: int32
        - description: Whether to get total number of results.
          in: query
          name: getTotalCount
          required: false
          schema:
            type: boolean
        - description: Sort rule.
          in: query
          name: sort
          required: false
          schema:
            type: string
            enum:
              - RegisterDate
              - Name
              - Group
        - description: Whether to include disabled user accounts.
          in: query
          name: includeDisabled
          required: false
          schema:
            type: boolean
        - description: Whether to only include verified artists.
          in: query
          name: onlyVerified
          required: false
          schema:
            type: boolean
        - description: Filter by known language (optional). This is the ISO 639-1 language
            code, for example "en" or "zh".
          in: query
          name: knowsLanguage
          required: false
          schema:
            type: string
        - description: Optional fields. Possible values are None and MainPicture. Optional.
          in: query
          name: fields
          required: false
          schema:
            type: string
            enum:
              - None
              - KnownLanguages
              - MainPicture
              - OldUsernames
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PartialFindResult_UserForApiContract_"
            text/json:
              schema:
                $ref: "#/components/schemas/PartialFindResult_UserForApiContract_"
            application/xml:
              schema:
                $ref: "#/components/schemas/PartialFindResult_UserForApiContract_"
            text/xml:
              schema:
                $ref: "#/components/schemas/PartialFindResult_UserForApiContract_"
            text/javascript:
              schema:
                $ref: "#/components/schemas/PartialFindResult_UserForApiContract_"
            application/javascript:
              schema:
                $ref: "#/components/schemas/PartialFindResult_UserForApiContract_"
            application/json-p:
              schema:
                $ref: "#/components/schemas/PartialFindResult_UserForApiContract_"
      summary: Gets a list of users.
      tags:
        - UserApi
  /api/users/current:
    get:
      deprecated: false
      description: "Requires login information.\r

        \            This API supports CORS, and is restricted to
        specific origins."
      operationId: UserApi_GetCurrent
      parameters:
        - description: Optional fields.
          in: query
          name: fields
          required: false
          schema:
            type: string
            enum:
              - None
              - KnownLanguages
              - MainPicture
              - OldUsernames
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserForApiContract"
            text/json:
              schema:
                $ref: "#/components/schemas/UserForApiContract"
            application/xml:
              schema:
                $ref: "#/components/schemas/UserForApiContract"
            text/xml:
              schema:
                $ref: "#/components/schemas/UserForApiContract"
            text/javascript:
              schema:
                $ref: "#/components/schemas/UserForApiContract"
            application/javascript:
              schema:
                $ref: "#/components/schemas/UserForApiContract"
            application/json-p:
              schema:
                $ref: "#/components/schemas/UserForApiContract"
      summary: Gets information about the currently logged in user.
      tags:
        - UserApi
  "/api/users/current/albums/{albumId}":
    post:
      deprecated: false
      description: "If the user has already rated the album, any previous rating is
        replaced.\r

        \            Authorization cookie must be included."
      operationId: UserApi_PostAlbumStatus
      parameters:
        - description: ID of the album to be rated.
          in: path
          name: albumId
          required: true
          schema:
            type: integer
            format: int32
        - description: Collection status. Possible values are Nothing, Wishlisted, Ordered
            and Owned.
          in: query
          name: collectionStatus
          required: true
          schema:
            type: string
            enum:
              - Nothing
              - Wishlisted
              - Ordered
              - Owned
        - description: Album media type. Possible values are PhysicalDisc, DigitalDownload
            and Other.
          in: query
          name: mediaType
          required: true
          schema:
            type: string
            enum:
              - PhysicalDisc
              - DigitalDownload
              - Other
        - description: Rating to be given. Possible values are between 0 and 5.
          in: query
          name: rating
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: string
            text/json:
              schema:
                type: string
            application/xml:
              schema:
                type: string
            text/xml:
              schema:
                type: string
            text/javascript:
              schema:
                type: string
            application/javascript:
              schema:
                type: string
            application/json-p:
              schema:
                type: string
      summary: Add or update collection status, media type and rating for a specific
        album, for the currently logged in user.
      tags:
        - UserApi
  "/api/users/current/followedTags/{tagId}":
    delete:
      deprecated: false
      operationId: UserApi_DeleteFollowedTag
      parameters:
        - in: path
          name: tagId
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "204":
          description: No Content
      tags:
        - UserApi
    post:
      deprecated: false
      operationId: UserApi_PostFollowedTag
      parameters:
        - in: path
          name: tagId
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "204":
          description: No Content
      tags:
        - UserApi
  "/api/users/current/ratedSongs/{songId}":
    get:
      deprecated: false
      description: Requires authentication.
      operationId: UserApi_GetSongRatingForCurrent
      parameters:
        - description: ID of the song whose rating is to be checked.
          in: path
          name: songId
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                enum:
                  - Nothing
                  - Dislike
                  - Like
                  - Favorite
                type: string
            text/json:
              schema:
                enum:
                  - Nothing
                  - Dislike
                  - Like
                  - Favorite
                type: string
            application/xml:
              schema:
                enum:
                  - Nothing
                  - Dislike
                  - Like
                  - Favorite
                type: string
            text/xml:
              schema:
                enum:
                  - Nothing
                  - Dislike
                  - Like
                  - Favorite
                type: string
            text/javascript:
              schema:
                enum:
                  - Nothing
                  - Dislike
                  - Like
                  - Favorite
                type: string
            application/javascript:
              schema:
                enum:
                  - Nothing
                  - Dislike
                  - Like
                  - Favorite
                type: string
            application/json-p:
              schema:
                enum:
                  - Nothing
                  - Dislike
                  - Like
                  - Favorite
                type: string
      summary: Gets currently logged in user's rating for a song.
      tags:
        - UserApi
  /api/users/current/refreshEntryEdit:
    post:
      deprecated: false
      operationId: UserApi_PostRefreshEntryEdit
      parameters:
        - description: Type of entry.
          in: query
          name: entryType
          required: true
          schema:
            type: string
            enum:
              - Undefined
              - Album
              - Artist
              - DiscussionTopic
              - PV
              - ReleaseEvent
              - ReleaseEventSeries
              - Song
              - SongList
              - Tag
              - User
        - description: Entry ID.
          in: query
          name: entryId
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "204":
          description: No Content
      summary: Refresh entry edit status, indicating that the current user is still
        editing that entry.
      tags:
        - UserApi
  "/api/users/current/songTags/{songId}":
    post:
      deprecated: false
      description: "This can only be used to add tags - existing tags will not be removed.
        \r

        \            Nothing will be done for tags that are already
        applied by the current user for the song.\r

        \            Authorization cookie is required."
      operationId: UserApi_PostSongTags
      parameters:
        - description: ID of the song to be tagged.
          in: path
          name: songId
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: "#/components/schemas/TagBaseContract"
              type: array
          text/json:
            schema:
              items:
                $ref: "#/components/schemas/TagBaseContract"
              type: array
          application/xml:
            schema:
              items:
                $ref: "#/components/schemas/TagBaseContract"
              type: array
          text/xml:
            schema:
              items:
                $ref: "#/components/schemas/TagBaseContract"
              type: array
          application/x-www-form-urlencoded:
            schema:
              items:
                $ref: "#/components/schemas/TagBaseContract"
              type: array
        description: List of tags to be appended.
        required: true
      responses:
        "204":
          description: No Content
      summary: Appends tags for a song, by the currently logged in user.
      tags:
        - UserApi
  "/api/users/messages/{messageId}":
    get:
      deprecated: false
      description: "The message will be marked as read.\r

        \            User can only load messages from their own inbox."
      operationId: UserApi_GetMessage
      parameters:
        - description: ID of the message.
          in: path
          name: messageId
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserMessageContract"
            text/json:
              schema:
                $ref: "#/components/schemas/UserMessageContract"
            application/xml:
              schema:
                $ref: "#/components/schemas/UserMessageContract"
            text/xml:
              schema:
                $ref: "#/components/schemas/UserMessageContract"
            text/javascript:
              schema:
                $ref: "#/components/schemas/UserMessageContract"
            application/javascript:
              schema:
                $ref: "#/components/schemas/UserMessageContract"
            application/json-p:
              schema:
                $ref: "#/components/schemas/UserMessageContract"
      summary: Gets a user message.
      tags:
        - UserApi
  /api/users/names:
    get:
      deprecated: false
      operationId: UserApi_GetNames
      parameters:
        - description: Text query.
          in: query
          name: query
          required: false
          schema:
            type: string
        - description: Name match mode. Words is treated the same as Partial.
          in: query
          name: nameMatchMode
          required: false
          schema:
            type: string
            enum:
              - Auto
              - Partial
              - StartsWith
              - Exact
              - Words
        - description: Maximum number of results.
          in: query
          name: maxResults
          required: false
          schema:
            type: integer
            format: int32
        - description: Whether to include disabled user accounts. If false, disabled
            accounts are excluded.
          in: query
          name: includeDisabled
          required: false
          schema:
            type: boolean
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
            text/json:
              schema:
                items:
                  type: string
                type: array
            application/xml:
              schema:
                items:
                  type: string
                type: array
            text/xml:
              schema:
                items:
                  type: string
                type: array
            text/javascript:
              schema:
                items:
                  type: string
                type: array
            application/javascript:
              schema:
                items:
                  type: string
                type: array
            application/json-p:
              schema:
                items:
                  type: string
                type: array
      summary: Gets a list of user names. Ideal for autocomplete boxes.
      tags:
        - UserApi
  "/api/users/profileComments/{commentId}":
    delete:
      deprecated: false
      description: "Normal users can delete their own comments, moderators can delete all
        comments.\r

        \            Requires login."
      operationId: UserApi_DeleteProfileComment
      parameters:
        - description: ID of the comment to be deleted.
          in: path
          name: commentId
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "204":
          description: No Content
      summary: Deletes a comment.
      tags:
        - UserApi
    post:
      deprecated: false
      description: "Normal users can edit their own comments, moderators can edit all
        comments.\r

        \            Requires login."
      operationId: UserApi_PostEditComment
      parameters:
        - description: ID of the comment to be edited.
          in: path
          name: commentId
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        $ref: "#/components/requestBodies/CommentForApiContract3"
      responses:
        "204":
          description: No Content
      summary: Updates a comment.
      tags:
        - UserApi
  "/api/users/{id}":
    get:
      deprecated: false
      operationId: UserApi_GetOne
      parameters:
        - description: User ID.
          in: path
          name: id
          required: true
          schema:
            type: integer
            format: int32
        - description: Optional fields.
          in: query
          name: fields
          required: false
          schema:
            type: string
            enum:
              - None
              - KnownLanguages
              - MainPicture
              - OldUsernames
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserForApiContract"
            text/json:
              schema:
                $ref: "#/components/schemas/UserForApiContract"
            application/xml:
              schema:
                $ref: "#/components/schemas/UserForApiContract"
            text/xml:
              schema:
                $ref: "#/components/schemas/UserForApiContract"
            text/javascript:
              schema:
                $ref: "#/components/schemas/UserForApiContract"
            application/javascript:
              schema:
                $ref: "#/components/schemas/UserForApiContract"
            application/json-p:
              schema:
                $ref: "#/components/schemas/UserForApiContract"
      summary: Gets user by ID.
      tags:
        - UserApi
  "/api/users/{id}/albums":
    get:
      deprecated: false
      description: "This includes albums that have been rated by the user as well as albums
        that the user has bought or wishlisted.\r

        \            Note that the user might have set his album
        ownership status and media type as private, in which case those
        properties are not included."
      operationId: UserApi_GetAlbumCollection
      parameters:
        - description: ID of the user whose albums are to be browsed.
          in: path
          name: id
          required: true
          schema:
            type: integer
            format: int32
        - description: Album name query (optional).
          in: query
          name: query
          required: false
          schema:
            type: string
        - description: Filter by tag Id (optional).
          in: query
          name: tagId
          required: false
          schema:
            type: integer
            format: int32
        - description: Filter by tag (optional).
          in: query
          name: tag
          required: false
          schema:
            type: string
        - description: Filter by album artist (optional).
          in: query
          name: artistId
          required: false
          schema:
            type: integer
            format: int32
        - description: Filter by a comma-separated list of purchase statuses (optional).
            Possible values are Nothing, Wishlisted, Ordered, Owned, and all
            combinations of these.
          in: query
          name: purchaseStatuses
          required: false
          schema:
            type: string
            enum:
              - Nothing
              - Wishlisted
              - Ordered
              - Owned
              - All
        - description: Filter by release event. Optional.
          in: query
          name: releaseEventId
          required: false
          schema:
            type: integer
            format: int32
        - description: Filter by album type (optional).
          in: query
          name: albumTypes
          required: false
          schema:
            type: string
            enum:
              - Unknown
              - Album
              - Single
              - EP
              - SplitAlbum
              - Compilation
              - Video
              - Artbook
              - Game
              - Fanmade
              - Instrumental
              - Other
        - description: List of advanced filters (optional).
          in: query
          name: advancedFilters
          required: false
          explode: true
          schema:
            type: array
            items: {}
        - description: First item to be retrieved (optional, defaults to 0).
          in: query
          name: start
          required: false
          schema:
            type: integer
            format: int32
        - description: Maximum number of results to be loaded (optional, defaults to 10,
            maximum of 50).
          in: query
          name: maxResults
          required: false
          schema:
            type: integer
            format: int32
        - description: Whether to load total number of items (optional, default to false).
          in: query
          name: getTotalCount
          required: false
          schema:
            type: boolean
        - description: Sort rule (optional, defaults to Name). Possible values are None,
            Name, ReleaseDate, AdditionDate, RatingAverage, RatingTotal,
            CollectionCount.
          in: query
          name: sort
          required: false
          schema:
            type: string
            enum:
              - None
              - Name
              - ReleaseDate
              - ReleaseDateWithNulls
              - AdditionDate
              - RatingAverage
              - RatingTotal
              - NameThenReleaseDate
              - CollectionCount
        - description: Match mode for album name (optional, defaults to Auto).
          in: query
          name: nameMatchMode
          required: false
          schema:
            type: string
            enum:
              - Auto
              - Partial
              - StartsWith
              - Exact
              - Words
        - description: List of optional fields (optional). Possible values are Artists,
            MainPicture, Names, PVs, Tags, WebLinks.
          in: query
          name: fields
          required: false
          schema:
            type: string
            enum:
              - None
              - AdditionalNames
              - Artists
              - Description
              - Discs
              - Identifiers
              - MainPicture
              - Names
              - PVs
              - ReleaseEvent
              - Tags
              - Tracks
              - WebLinks
        - description: Content language preference (optional).
          in: query
          name: lang
          required: false
          schema:
            type: string
            enum:
              - Default
              - Japanese
              - Romaji
              - English
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PartialFindResult_AlbumForUserForApiCon\
                  tract_"
            text/json:
              schema:
                $ref: "#/components/schemas/PartialFindResult_AlbumForUserForApiCon\
                  tract_"
            application/xml:
              schema:
                $ref: "#/components/schemas/PartialFindResult_AlbumForUserForApiCon\
                  tract_"
            text/xml:
              schema:
                $ref: "#/components/schemas/PartialFindResult_AlbumForUserForApiCon\
                  tract_"
            text/javascript:
              schema:
                $ref: "#/components/schemas/PartialFindResult_AlbumForUserForApiCon\
                  tract_"
            application/javascript:
              schema:
                $ref: "#/components/schemas/PartialFindResult_AlbumForUserForApiCon\
                  tract_"
            application/json-p:
              schema:
                $ref: "#/components/schemas/PartialFindResult_AlbumForUserForApiCon\
                  tract_"
      summary: Gets a list of albums in a user's collection.
      tags:
        - UserApi
  "/api/users/{id}/events":
    get:
      deprecated: false
      operationId: UserApi_GetEvents
      parameters:
        - description: User ID.
          in: path
          name: id
          required: true
          schema:
            type: integer
            format: int32
        - description: Type of event subscription.
          in: query
          name: relationshipType
          required: true
          schema:
            type: string
            enum:
              - Interested
              - Attending
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/ReleaseEventForApiContract"
                type: array
            text/json:
              schema:
                items:
                  $ref: "#/components/schemas/ReleaseEventForApiContract"
                type: array
            application/xml:
              schema:
                items:
                  $ref: "#/components/schemas/ReleaseEventForApiContract"
                type: array
            text/xml:
              schema:
                items:
                  $ref: "#/components/schemas/ReleaseEventForApiContract"
                type: array
            text/javascript:
              schema:
                items:
                  $ref: "#/components/schemas/ReleaseEventForApiContract"
                type: array
            application/javascript:
              schema:
                items:
                  $ref: "#/components/schemas/ReleaseEventForApiContract"
                type: array
            application/json-p:
              schema:
                items:
                  $ref: "#/components/schemas/ReleaseEventForApiContract"
                type: array
      summary: Gets a list of events a user has subscribed to.
      tags:
        - UserApi
  "/api/users/{id}/followedArtists":
    get:
      deprecated: false
      operationId: UserApi_GetFollowedArtists
      parameters:
        - description: ID of the user whose followed artists are to be browsed.
          in: path
          name: id
          required: true
          schema:
            type: integer
            format: int32
        - description: Artist name query (optional).
          in: query
          name: query
          required: false
          schema:
            type: string
        - description: Filter by artist type.
          in: query
          name: artistType
          required: false
          schema:
            type: string
            enum:
              - Unknown
              - Circle
              - Label
              - Producer
              - Animator
              - Illustrator
              - Lyricist
              - Vocaloid
              - UTAU
              - CeVIO
              - OtherVoiceSynthesizer
              - OtherVocalist
              - OtherGroup
              - OtherIndividual
              - Utaite
              - Band
              - Vocalist
              - Character
        - description: First item to be retrieved (optional, defaults to 0).
          in: query
          name: start
          required: false
          schema:
            type: integer
            format: int32
        - description: Maximum number of results to be loaded (optional, defaults to 10,
            maximum of 50).
          in: query
          name: maxResults
          required: false
          schema:
            type: integer
            format: int32
        - description: Whether to load total number of items (optional, default to false).
          in: query
          name: getTotalCount
          required: false
          schema:
            type: boolean
        - description: Sort rule (optional, defaults to Name). Possible values are None,
            Name, AdditionDate, AdditionDateAsc.
          in: query
          name: sort
          required: false
          schema:
            type: string
            enum:
              - None
              - Name
              - AdditionDate
              - AdditionDateAsc
              - ReleaseDate
              - SongCount
              - SongRating
              - FollowerCount
        - description: Match mode for artist name (optional, defaults to Auto).
          in: query
          name: nameMatchMode
          required: false
          schema:
            type: string
            enum:
              - Auto
              - Partial
              - StartsWith
              - Exact
              - Words
        - description: List of optional fields (optional). Possible values are Description,
            Groups, Members, Names, Tags, WebLinks.
          in: query
          name: fields
          required: false
          schema:
            type: string
            enum:
              - None
              - AdditionalNames
              - ArtistLinks
              - ArtistLinksReverse
              - BaseVoicebank
              - Description
              - MainPicture
              - Names
              - Tags
              - WebLinks
        - description: Content language preference (optional).
          in: query
          name: lang
          required: false
          schema:
            type: string
            enum:
              - Default
              - Japanese
              - Romaji
              - English
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PartialFindResult_ArtistForUserForApiCo\
                  ntract_"
            text/json:
              schema:
                $ref: "#/components/schemas/PartialFindResult_ArtistForUserForApiCo\
                  ntract_"
            application/xml:
              schema:
                $ref: "#/components/schemas/PartialFindResult_ArtistForUserForApiCo\
                  ntract_"
            text/xml:
              schema:
                $ref: "#/components/schemas/PartialFindResult_ArtistForUserForApiCo\
                  ntract_"
            text/javascript:
              schema:
                $ref: "#/components/schemas/PartialFindResult_ArtistForUserForApiCo\
                  ntract_"
            application/javascript:
              schema:
                $ref: "#/components/schemas/PartialFindResult_ArtistForUserForApiCo\
                  ntract_"
            application/json-p:
              schema:
                $ref: "#/components/schemas/PartialFindResult_ArtistForUserForApiCo\
                  ntract_"
      summary: Gets a list of artists followed by a user.
      tags:
        - UserApi
  "/api/users/{id}/messages":
    delete:
      deprecated: false
      operationId: UserApi_DeleteMessages
      parameters:
        - description: ID of the user whose messages to delete.
          in: path
          name: id
          required: true
          schema:
            type: integer
            format: int32
        - description: IDs of messages.
          in: query
          name: messageId
          required: true
          explode: true
          schema:
            type: array
            items:
              format: int32
              type: integer
      responses:
        "204":
          description: No Content
      summary: Deletes a list of user messages.
      tags:
        - UserApi
    get:
      deprecated: false
      operationId: UserApi_GetMessages
      parameters:
        - description: User ID. Must be the currently logged in user (loading messages for
            another user is not allowed).
          in: path
          name: id
          required: true
          schema:
            type: integer
            format: int32
        - description: Type of inbox. Possible values are Nothing (load all, default),
            Received, Sent, Notifications.
          in: query
          name: inbox
          required: false
          schema:
            type: string
            enum:
              - Nothing
              - Received
              - Sent
              - Notifications
        - description: Whether to only load unread messages. Loading unread messages is
            only possible for received messages and notifications (not sent
            messages).
          in: query
          name: unread
          required: false
          schema:
            type: boolean
        - description: Filter by id of the other user (either sender or receiver).
          in: query
          name: anotherUserId
          required: false
          schema:
            type: integer
            format: int32
        - description: Index of the first entry to be loaded.
          in: query
          name: start
          required: false
          schema:
            type: integer
            format: int32
        - description: Maximum number of results to be loaded.
          in: query
          name: maxResults
          required: false
          schema:
            type: integer
            format: int32
        - description: Whether to get total number of results.
          in: query
          name: getTotalCount
          required: false
          schema:
            type: boolean
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PartialFindResult_UserMessageContract_"
            text/json:
              schema:
                $ref: "#/components/schemas/PartialFindResult_UserMessageContract_"
            application/xml:
              schema:
                $ref: "#/components/schemas/PartialFindResult_UserMessageContract_"
            text/xml:
              schema:
                $ref: "#/components/schemas/PartialFindResult_UserMessageContract_"
            text/javascript:
              schema:
                $ref: "#/components/schemas/PartialFindResult_UserMessageContract_"
            application/javascript:
              schema:
                $ref: "#/components/schemas/PartialFindResult_UserMessageContract_"
            application/json-p:
              schema:
                $ref: "#/components/schemas/PartialFindResult_UserMessageContract_"
      summary: Gets a list of messages.
      tags:
        - UserApi
    post:
      deprecated: false
      operationId: UserApi_PostNewMessage
      parameters:
        - description: User ID. Must be logged in user.
          in: path
          name: id
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserMessageContract"
          text/json:
            schema:
              $ref: "#/components/schemas/UserMessageContract"
          application/xml:
            schema:
              $ref: "#/components/schemas/UserMessageContract"
          text/xml:
            schema:
              $ref: "#/components/schemas/UserMessageContract"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/UserMessageContract"
        description: Message data.
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserMessageContract"
            text/json:
              schema:
                $ref: "#/components/schemas/UserMessageContract"
            application/xml:
              schema:
                $ref: "#/components/schemas/UserMessageContract"
            text/xml:
              schema:
                $ref: "#/components/schemas/UserMessageContract"
            text/javascript:
              schema:
                $ref: "#/components/schemas/UserMessageContract"
            application/javascript:
              schema:
                $ref: "#/components/schemas/UserMessageContract"
            application/json-p:
              schema:
                $ref: "#/components/schemas/UserMessageContract"
      summary: Creates a new message.
      tags:
        - UserApi
  "/api/users/{id}/profileComments":
    get:
      deprecated: false
      operationId: UserApi_GetProfileComments
      parameters:
        - description: ID of the user whose comments are to be retrieved.
          in: path
          name: id
          required: true
          schema:
            type: integer
            format: int32
        - description: Index of the first comment to be loaded.
          in: query
          name: start
          required: false
          schema:
            type: integer
            format: int32
        - description: Maximum number of comments to load.
          in: query
          name: maxResults
          required: false
          schema:
            type: integer
            format: int32
        - description: Whether to load the total number of comments.
          in: query
          name: getTotalCount
          required: false
          schema:
            type: boolean
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PartialFindResult_CommentForApiContract_"
            text/json:
              schema:
                $ref: "#/components/schemas/PartialFindResult_CommentForApiContract_"
            application/xml:
              schema:
                $ref: "#/components/schemas/PartialFindResult_CommentForApiContract_"
            text/xml:
              schema:
                $ref: "#/components/schemas/PartialFindResult_CommentForApiContract_"
            text/javascript:
              schema:
                $ref: "#/components/schemas/PartialFindResult_CommentForApiContract_"
            application/javascript:
              schema:
                $ref: "#/components/schemas/PartialFindResult_CommentForApiContract_"
            application/json-p:
              schema:
                $ref: "#/components/schemas/PartialFindResult_CommentForApiContract_"
      summary: Gets a list of comments posted on user's profile.
      tags:
        - UserApi
    post:
      deprecated: false
      operationId: UserApi_PostNewComment
      parameters:
        - description: ID of the user for whom to create the comment.
          in: path
          name: id
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        $ref: "#/components/requestBodies/CommentForApiContract"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CommentForApiContract"
            text/json:
              schema:
                $ref: "#/components/schemas/CommentForApiContract"
            application/xml:
              schema:
                $ref: "#/components/schemas/CommentForApiContract"
            text/xml:
              schema:
                $ref: "#/components/schemas/CommentForApiContract"
            text/javascript:
              schema:
                $ref: "#/components/schemas/CommentForApiContract"
            application/javascript:
              schema:
                $ref: "#/components/schemas/CommentForApiContract"
            application/json-p:
              schema:
                $ref: "#/components/schemas/CommentForApiContract"
      summary: Posts a new comment.
      tags:
        - UserApi
  "/api/users/{id}/ratedSongs":
    get:
      deprecated: false
      operationId: UserApi_GetRatedSongs
      parameters:
        - description: ID of the user whose songs are to be browsed.
          in: path
          name: id
          required: true
          schema:
            type: integer
            format: int32
        - description: Song name query (optional).
          in: query
          name: query
          required: false
          schema:
            type: string
        - description: Filter by tag name (optional).
          in: query
          name: tagName
          required: false
          schema:
            type: string
        - description: Filter by tag Id (optional). This filter can be specified multiple
            times.
          in: query
          name: tagId
          required: false
          explode: true
          schema:
            type: array
            items:
              format: int32
              type: integer
        - description: Filter by song artist (optional).
          in: query
          name: artistId
          required: false
          explode: true
          schema:
            type: array
            items:
              format: int32
              type: integer
        - description: Include child voicebanks, if the artist being filtered by has any.
          in: query
          name: childVoicebanks
          required: false
          schema:
            type: boolean
        - description: Logical grouping for artists.
          in: query
          name: artistGrouping
          required: false
          schema:
            type: string
            enum:
              - And
              - Or
        - description: Filter songs by given rating (optional).
          in: query
          name: rating
          required: false
          schema:
            type: string
            enum:
              - Nothing
              - Dislike
              - Like
              - Favorite
        - description: Filter songs by song list (optional).
          in: query
          name: songListId
          required: false
          schema:
            type: integer
            format: int32
        - description: Group results by rating so that highest rated are first.
          in: query
          name: groupByRating
          required: false
          schema:
            type: boolean
        - description: Filter by one or more PV services (separated by commas). The song
            will pass the filter if it has a PV for any of the matched services.
          in: query
          name: pvServices
          required: false
          schema:
            type: string
            enum:
              - Nothing
              - NicoNicoDouga
              - Youtube
              - SoundCloud
              - Vimeo
              - Piapro
              - Bilibili
              - File
              - LocalFile
              - Creofuga
              - Bandcamp
        - description: List of advanced filters (optional).
          in: query
          name: advancedFilters
          required: false
          explode: true
          schema:
            type: array
            items: {}
        - description: First item to be retrieved (optional, defaults to 0).
          in: query
          name: start
          required: false
          schema:
            type: integer
            format: int32
        - description: Maximum number of results to be loaded (optional, defaults to 10,
            maximum of 50).
          in: query
          name: maxResults
          required: false
          schema:
            type: integer
            format: int32
        - description: Whether to load total number of items (optional, default to false).
          in: query
          name: getTotalCount
          required: false
          schema:
            type: boolean
        - description: Sort rule (optional, defaults to Name). Possible values are None,
            Name, AdditionDate, FavoritedTimes, RatingScore.
          in: query
          name: sort
          required: false
          schema:
            type: string
            enum:
              - None
              - Name
              - AdditionDate
              - PublishDate
              - FavoritedTimes
              - RatingScore
              - RatingDate
        - description: Match mode for song name (optional, defaults to Auto).
          in: query
          name: nameMatchMode
          required: false
          schema:
            type: string
            enum:
              - Auto
              - Partial
              - StartsWith
              - Exact
              - Words
        - description: List of optional fields (optional). Possible values are Albums,
            Artists, Names, PVs, Tags, ThumbUrl, WebLinks.
          in: query
          name: fields
          required: false
          schema:
            type: string
            enum:
              - None
              - AdditionalNames
              - Albums
              - Artists
              - Lyrics
              - MainPicture
              - Names
              - PVs
              - ReleaseEvent
              - Tags
              - ThumbUrl
              - WebLinks
        - description: Content language preference (optional).
          in: query
          name: lang
          required: false
          schema:
            type: string
            enum:
              - Default
              - Japanese
              - Romaji
              - English
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PartialFindResult_RatedSongForUserForAp\
                  iContract_"
            text/json:
              schema:
                $ref: "#/components/schemas/PartialFindResult_RatedSongForUserForAp\
                  iContract_"
            application/xml:
              schema:
                $ref: "#/components/schemas/PartialFindResult_RatedSongForUserForAp\
                  iContract_"
            text/xml:
              schema:
                $ref: "#/components/schemas/PartialFindResult_RatedSongForUserForAp\
                  iContract_"
            text/javascript:
              schema:
                $ref: "#/components/schemas/PartialFindResult_RatedSongForUserForAp\
                  iContract_"
            application/javascript:
              schema:
                $ref: "#/components/schemas/PartialFindResult_RatedSongForUserForAp\
                  iContract_"
            application/json-p:
              schema:
                $ref: "#/components/schemas/PartialFindResult_RatedSongForUserForAp\
                  iContract_"
      summary: Gets a list of songs rated by a user.
      tags:
        - UserApi
  "/api/users/{id}/ratedSongs/{songId}":
    get:
      deprecated: false
      operationId: UserApi_GetSongRating
      parameters:
        - description: User whose rating is to be checked.
          in: path
          name: id
          required: true
          schema:
            type: integer
            format: int32
        - description: ID of the song whose rating is to be checked.
          in: path
          name: songId
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                enum:
                  - Nothing
                  - Dislike
                  - Like
                  - Favorite
                type: string
            text/json:
              schema:
                enum:
                  - Nothing
                  - Dislike
                  - Like
                  - Favorite
                type: string
            application/xml:
              schema:
                enum:
                  - Nothing
                  - Dislike
                  - Like
                  - Favorite
                type: string
            text/xml:
              schema:
                enum:
                  - Nothing
                  - Dislike
                  - Like
                  - Favorite
                type: string
            text/javascript:
              schema:
                enum:
                  - Nothing
                  - Dislike
                  - Like
                  - Favorite
                type: string
            application/javascript:
              schema:
                enum:
                  - Nothing
                  - Dislike
                  - Like
                  - Favorite
                type: string
            application/json-p:
              schema:
                enum:
                  - Nothing
                  - Dislike
                  - Like
                  - Favorite
                type: string
      summary: Gets a specific user's rating for a song.
      tags:
        - UserApi
  "/api/users/{id}/settings/{settingName}":
    post:
      deprecated: false
      operationId: UserApi_PostSetting
      parameters:
        - description: ID of the user to be updated. This must match the current user OR be
            unspecified (or 0) if the user is not logged in.
          in: path
          name: id
          required: true
          schema:
            type: integer
            format: int32
        - description: Name of the setting to be updated, for example 'showChatBox'.
          in: path
          name: settingName
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: string
          text/json:
            schema:
              type: string
          application/xml:
            schema:
              type: string
          text/xml:
            schema:
              type: string
          application/x-www-form-urlencoded:
            schema:
              type: string
        description: Setting value, for example 'false'.
        required: true
      responses:
        "204":
          description: No Content
      summary: Updates user setting.
      tags:
        - UserApi
  "/api/users/{id}/songLists":
    get:
      deprecated: false
      operationId: UserApi_GetSongLists
      parameters:
        - description: User whose song lists are to be loaded.
          in: path
          name: id
          required: true
          schema:
            type: integer
            format: int32
        - description: Song list name query (optional).
          in: query
          name: query
          required: false
          schema:
            type: string
        - description: Match mode for song name (optional, defaults to Auto).
          in: query
          name: nameMatchMode
          required: false
          schema:
            type: string
            enum:
              - Auto
              - Partial
              - StartsWith
              - Exact
              - Words
        - description: First item to be retrieved (optional, defaults to 0).
          in: query
          name: start
          required: false
          schema:
            type: integer
            format: int32
        - description: Maximum number of results to be loaded (optional, defaults to 10,
            maximum of 50).
          in: query
          name: maxResults
          required: false
          schema:
            type: integer
            format: int32
        - description: Whether to load total number of items (optional, default to false).
          in: query
          name: getTotalCount
          required: false
          schema:
            type: boolean
        - description: Sort option for the song lists. Possible values are None, Name,
            Date, CreateDate. Default is Name.
          in: query
          name: sort
          required: false
          schema:
            type: string
            enum:
              - None
              - Name
              - Date
              - CreateDate
        - description: List of optional fields.
          in: query
          name: fields
          required: false
          schema:
            type: string
            enum:
              - None
              - Description
              - MainPicture
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PartialFindResult_SongListForApiContrac\
                  t_"
            text/json:
              schema:
                $ref: "#/components/schemas/PartialFindResult_SongListForApiContrac\
                  t_"
            application/xml:
              schema:
                $ref: "#/components/schemas/PartialFindResult_SongListForApiContrac\
                  t_"
            text/xml:
              schema:
                $ref: "#/components/schemas/PartialFindResult_SongListForApiContrac\
                  t_"
            text/javascript:
              schema:
                $ref: "#/components/schemas/PartialFindResult_SongListForApiContrac\
                  t_"
            application/javascript:
              schema:
                $ref: "#/components/schemas/PartialFindResult_SongListForApiContrac\
                  t_"
            application/json-p:
              schema:
                $ref: "#/components/schemas/PartialFindResult_SongListForApiContrac\
                  t_"
      summary: Gets a list of song lists for a user.
      tags:
        - UserApi
servers:
  - url: https://vocadb.net
components:
  requestBodies:
    CommentForApiContract:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/CommentForApiContract"
        text/json:
          schema:
            $ref: "#/components/schemas/CommentForApiContract"
        application/xml:
          schema:
            $ref: "#/components/schemas/CommentForApiContract"
        text/xml:
          schema:
            $ref: "#/components/schemas/CommentForApiContract"
        application/x-www-form-urlencoded:
          schema:
            $ref: "#/components/schemas/CommentForApiContract"
      description: Comment data. Message and author must be specified. Author must match
        the logged in user.
      required: true
    CommentForApiContract2:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/CommentForApiContract"
        text/json:
          schema:
            $ref: "#/components/schemas/CommentForApiContract"
        application/xml:
          schema:
            $ref: "#/components/schemas/CommentForApiContract"
        text/xml:
          schema:
            $ref: "#/components/schemas/CommentForApiContract"
        application/x-www-form-urlencoded:
          schema:
            $ref: "#/components/schemas/CommentForApiContract"
      required: true
    CommentForApiContract3:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/CommentForApiContract"
        text/json:
          schema:
            $ref: "#/components/schemas/CommentForApiContract"
        application/xml:
          schema:
            $ref: "#/components/schemas/CommentForApiContract"
        text/xml:
          schema:
            $ref: "#/components/schemas/CommentForApiContract"
        application/x-www-form-urlencoded:
          schema:
            $ref: "#/components/schemas/CommentForApiContract"
      description: New comment data. Only message can be edited.
      required: true
    DiscussionTopicContract:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/DiscussionTopicContract"
        text/json:
          schema:
            $ref: "#/components/schemas/DiscussionTopicContract"
        application/xml:
          schema:
            $ref: "#/components/schemas/DiscussionTopicContract"
        text/xml:
          schema:
            $ref: "#/components/schemas/DiscussionTopicContract"
        application/x-www-form-urlencoded:
          schema:
            $ref: "#/components/schemas/DiscussionTopicContract"
      required: true
  schemas:
    ActivityEntryForApiContract:
      properties:
        archivedVersion:
          $ref: "#/components/schemas/ArchivedObjectVersionForApiContract"
        author:
          $ref: "#/components/schemas/UserForApiContract"
        createDate:
          format: date-time
          type: string
        editEvent:
          enum:
            - Created
            - Updated
            - Deleted
            - Restored
          type: string
        entry:
          $ref: "#/components/schemas/EntryForApiContract"
      type: object
    AdvancedSearchFilter:
      properties:
        filterType:
          enum:
            - Nothing
            - ArtistType
            - WebLink
            - HasUserAccount
            - RootVoicebank
            - VoiceProvider
            - HasStoreLink
            - HasTracks
            - NoCoverPicture
            - HasAlbum
            - HasOriginalMedia
            - HasMedia
            - HasMultipleVoicebanks
            - HasPublishDate
            - Lyrics
            - LyricsContent
          type: string
        negate:
          type: boolean
        param:
          type: string
      type: object
    AlbumContract:
      properties:
        additionalNames:
          type: string
        artistString:
          type: string
        coverPictureMime:
          type: string
        createDate:
          format: date-time
          type: string
        deleted:
          type: boolean
        discType:
          enum:
            - Unknown
            - Album
            - Single
            - EP
            - SplitAlbum
            - Compilation
            - Video
            - Artbook
            - Game
            - Fanmade
            - Instrumental
            - Other
          type: string
        id:
          format: int32
          type: integer
        name:
          type: string
        ratingAverage:
          format: double
          type: number
        ratingCount:
          format: int32
          type: integer
        releaseDate:
          $ref: "#/components/schemas/OptionalDateTimeContract"
        releaseEvent:
          $ref: "#/components/schemas/ReleaseEventForApiContract"
        status:
          enum:
            - Draft
            - Finished
            - Approved
            - Locked
          type: string
        version:
          format: int32
          type: integer
      type: object
    AlbumDiscPropertiesContract:
      properties:
        discNumber:
          format: int32
          type: integer
        id:
          format: int32
          type: integer
        mediaType:
          enum:
            - Audio
            - Video
          type: string
        name:
          type: string
      type: object
    AlbumForApiContract:
      properties:
        additionalNames:
          type: string
        artistString:
          type: string
        artists:
          items:
            $ref: "#/components/schemas/ArtistForAlbumForApiContract"
          type: array
        barcode:
          type: string
        catalogNumber:
          type: string
        createDate:
          format: date-time
          type: string
        defaultName:
          type: string
        defaultNameLanguage:
          enum:
            - Unspecified
            - Japanese
            - Romaji
            - English
          type: string
        deleted:
          type: boolean
        description:
          type: string
        discType:
          enum:
            - Unknown
            - Album
            - Single
            - EP
            - SplitAlbum
            - Compilation
            - Video
            - Artbook
            - Game
            - Fanmade
            - Instrumental
            - Other
          type: string
        discs:
          items:
            $ref: "#/components/schemas/AlbumDiscPropertiesContract"
          type: array
        id:
          format: int32
          type: integer
        identifiers:
          items:
            $ref: "#/components/schemas/AlbumIdentifierContract"
          type: array
        mainPicture:
          $ref: "#/components/schemas/EntryThumbForApiContract"
        mergedTo:
          format: int32
          type: integer
        name:
          type: string
        names:
          items:
            $ref: "#/components/schemas/LocalizedStringContract"
          type: array
        pvs:
          items:
            $ref: "#/components/schemas/PVContract"
          type: array
        ratingAverage:
          format: double
          type: number
        ratingCount:
          format: int32
          type: integer
        releaseDate:
          $ref: "#/components/schemas/OptionalDateTimeContract"
        releaseEvent:
          $ref: "#/components/schemas/ReleaseEventForApiContract"
        status:
          enum:
            - Draft
            - Finished
            - Approved
            - Locked
          type: string
        tags:
          items:
            $ref: "#/components/schemas/TagUsageForApiContract"
          type: array
        tracks:
          items:
            $ref: "#/components/schemas/SongInAlbumForApiContract"
          type: array
        version:
          format: int32
          type: integer
        webLinks:
          items:
            $ref: "#/components/schemas/WebLinkForApiContract"
          type: array
      type: object
    AlbumForUserForApiContract:
      properties:
        album:
          $ref: "#/components/schemas/AlbumForApiContract"
        mediaType:
          enum:
            - PhysicalDisc
            - DigitalDownload
            - Other
          type: string
        purchaseStatus:
          enum:
            - Nothing
            - Wishlisted
            - Ordered
            - Owned
          type: string
        rating:
          format: int32
          type: integer
        user:
          $ref: "#/components/schemas/UserForApiContract"
      type: object
    AlbumIdentifierContract:
      properties:
        value:
          type: string
      type: object
    AlbumReviewContract:
      properties:
        albumId:
          format: int32
          type: integer
        date:
          format: date-time
          type: string
        id:
          format: int32
          type: integer
        languageCode:
          type: string
        text:
          type: string
        title:
          type: string
        user:
          $ref: "#/components/schemas/UserForApiContract"
      type: object
    ArchivedObjectVersionForApiContract:
      properties:
        changedFields:
          items:
            type: string
          type: array
        id:
          format: int32
          type: integer
        notes:
          type: string
        version:
          format: int32
          type: integer
      type: object
    ArchivedWebLinkContract:
      properties:
        category:
          enum:
            - Official
            - Commercial
            - Reference
            - Other
          type: string
        description:
          type: string
        url:
          type: string
      type: object
    ArtistContract:
      properties:
        additionalNames:
          type: string
        artistType:
          enum:
            - Unknown
            - Circle
            - Label
            - Producer
            - Animator
            - Illustrator
            - Lyricist
            - Vocaloid
            - UTAU
            - CeVIO
            - OtherVoiceSynthesizer
            - OtherVocalist
            - OtherGroup
            - OtherIndividual
            - Utaite
            - Band
            - Vocalist
            - Character
          type: string
        deleted:
          type: boolean
        id:
          format: int32
          type: integer
        name:
          type: string
        pictureMime:
          type: string
        releaseDate:
          format: date-time
          type: string
        status:
          enum:
            - Draft
            - Finished
            - Approved
            - Locked
          type: string
        version:
          format: int32
          type: integer
      type: object
    ArtistForAlbumForApiContract:
      properties:
        artist:
          $ref: "#/components/schemas/ArtistContract"
        categories:
          enum:
            - Nothing
            - Vocalist
            - Producer
            - Animator
            - Label
            - Circle
            - Other
            - Band
            - Illustrator
            - Subject
          type: string
        effectiveRoles:
          enum:
            - Default
            - Animator
            - Arranger
            - Composer
            - Distributor
            - Illustrator
            - Instrumentalist
            - Lyricist
            - Mastering
            - Publisher
            - Vocalist
            - VoiceManipulator
            - Other
            - Mixer
            - Chorus
            - Encoder
            - VocalDataProvider
          type: string
        isSupport:
          type: boolean
        name:
          type: string
        roles:
          enum:
            - Default
            - Animator
            - Arranger
            - Composer
            - Distributor
            - Illustrator
            - Instrumentalist
            - Lyricist
            - Mastering
            - Publisher
            - Vocalist
            - VoiceManipulator
            - Other
            - Mixer
            - Chorus
            - Encoder
            - VocalDataProvider
          type: string
      type: object
    ArtistForApiContract:
      properties:
        additionalNames:
          type: string
        artistLinks:
          items:
            $ref: "#/components/schemas/ArtistForArtistForApiContract"
          type: array
        artistLinksReverse:
          items:
            $ref: "#/components/schemas/ArtistForArtistForApiContract"
          type: array
        artistType:
          enum:
            - Unknown
            - Circle
            - Label
            - Producer
            - Animator
            - Illustrator
            - Lyricist
            - Vocaloid
            - UTAU
            - CeVIO
            - OtherVoiceSynthesizer
            - OtherVocalist
            - OtherGroup
            - OtherIndividual
            - Utaite
            - Band
            - Vocalist
            - Character
          type: string
        baseVoicebank:
          $ref: "#/components/schemas/ArtistContract"
        createDate:
          format: date-time
          type: string
        defaultName:
          type: string
        defaultNameLanguage:
          enum:
            - Unspecified
            - Japanese
            - Romaji
            - English
          type: string
        deleted:
          type: boolean
        description:
          type: string
        id:
          format: int32
          type: integer
        mainPicture:
          $ref: "#/components/schemas/EntryThumbForApiContract"
        mergedTo:
          format: int32
          type: integer
        name:
          type: string
        names:
          items:
            $ref: "#/components/schemas/LocalizedStringContract"
          type: array
        pictureMime:
          type: string
        relations:
          $ref: "#/components/schemas/ArtistRelationsForApi"
        releaseDate:
          format: date-time
          type: string
        status:
          enum:
            - Draft
            - Finished
            - Approved
            - Locked
          type: string
        tags:
          items:
            $ref: "#/components/schemas/TagUsageForApiContract"
          type: array
        version:
          format: int32
          type: integer
        webLinks:
          items:
            $ref: "#/components/schemas/WebLinkForApiContract"
          type: array
      type: object
    ArtistForArtistForApiContract:
      properties:
        artist:
          $ref: "#/components/schemas/ArtistContract"
        linkType:
          enum:
            - CharacterDesigner
            - Group
            - Illustrator
            - Manager
            - VoiceProvider
          type: string
      type: object
    ArtistForEventContract:
      properties:
        artist:
          $ref: "#/components/schemas/ArtistContract"
        effectiveRoles:
          enum:
            - Default
            - Dancer
            - DJ
            - Instrumentalist
            - Organizer
            - Promoter
            - VJ
            - Vocalist
            - VoiceManipulator
            - OtherPerformer
            - Other
          type: string
        id:
          format: int32
          type: integer
        name:
          type: string
        roles:
          enum:
            - Default
            - Dancer
            - DJ
            - Instrumentalist
            - Organizer
            - Promoter
            - VJ
            - Vocalist
            - VoiceManipulator
            - OtherPerformer
            - Other
          type: string
      type: object
    ArtistForSongContract:
      properties:
        artist:
          $ref: "#/components/schemas/ArtistContract"
        categories:
          enum:
            - Nothing
            - Vocalist
            - Producer
            - Animator
            - Label
            - Circle
            - Other
            - Band
            - Illustrator
            - Subject
          type: string
        effectiveRoles:
          enum:
            - Default
            - Animator
            - Arranger
            - Composer
            - Distributor
            - Illustrator
            - Instrumentalist
            - Lyricist
            - Mastering
            - Publisher
            - Vocalist
            - VoiceManipulator
            - Other
            - Mixer
            - Chorus
            - Encoder
            - VocalDataProvider
          type: string
        id:
          format: int32
          type: integer
        isCustomName:
          type: boolean
        isSupport:
          type: boolean
        name:
          type: string
        roles:
          enum:
            - Default
            - Animator
            - Arranger
            - Composer
            - Distributor
            - Illustrator
            - Instrumentalist
            - Lyricist
            - Mastering
            - Publisher
            - Vocalist
            - VoiceManipulator
            - Other
            - Mixer
            - Chorus
            - Encoder
            - VocalDataProvider
          type: string
      type: object
    ArtistForUserForApiContract:
      properties:
        artist:
          $ref: "#/components/schemas/ArtistForApiContract"
      type: object
    ArtistRelationsForApi:
      properties:
        latestAlbums:
          items:
            $ref: "#/components/schemas/AlbumForApiContract"
          type: array
        latestEvents:
          items:
            $ref: "#/components/schemas/ReleaseEventForApiContract"
          type: array
        latestSongs:
          items:
            $ref: "#/components/schemas/SongForApiContract"
          type: array
        popularAlbums:
          items:
            $ref: "#/components/schemas/AlbumForApiContract"
          type: array
        popularSongs:
          items:
            $ref: "#/components/schemas/SongForApiContract"
          type: array
      type: object
    CommentForApiContract:
      properties:
        author:
          $ref: "#/components/schemas/UserForApiContract"
        authorName:
          type: string
        created:
          format: date-time
          type: string
        entry:
          $ref: "#/components/schemas/EntryRefContract"
        id:
          format: int32
          type: integer
        message:
          type: string
      type: object
    DiscussionFolderContract:
      properties:
        description:
          type: string
        id:
          format: int32
          type: integer
        lastTopicAuthor:
          $ref: "#/components/schemas/UserForApiContract"
        lastTopicDate:
          format: date-time
          type: string
        name:
          type: string
        topicCount:
          format: int32
          type: integer
      type: object
    DiscussionTopicContract:
      properties:
        author:
          $ref: "#/components/schemas/UserForApiContract"
        commentCount:
          format: int32
          type: integer
        comments:
          items:
            $ref: "#/components/schemas/CommentForApiContract"
          type: array
        content:
          type: string
        created:
          format: date-time
          type: string
        folderId:
          format: int32
          type: integer
        id:
          format: int32
          type: integer
        lastComment:
          $ref: "#/components/schemas/CommentForApiContract"
        locked:
          type: boolean
        name:
          type: string
      type: object
    EnglishTranslatedStringContract:
      properties:
        english:
          type: string
        original:
          type: string
      type: object
    EntryForApiContract:
      properties:
        activityDate:
          format: date-time
          type: string
        additionalNames:
          type: string
        artistString:
          type: string
        artistType:
          enum:
            - Unknown
            - Circle
            - Label
            - Producer
            - Animator
            - Illustrator
            - Lyricist
            - Vocaloid
            - UTAU
            - CeVIO
            - OtherVoiceSynthesizer
            - OtherVocalist
            - OtherGroup
            - OtherIndividual
            - Utaite
            - Band
            - Vocalist
            - Character
          type: string
        createDate:
          format: date-time
          type: string
        defaultName:
          type: string
        defaultNameLanguage:
          enum:
            - Unspecified
            - Japanese
            - Romaji
            - English
          type: string
        description:
          type: string
        discType:
          enum:
            - Unknown
            - Album
            - Single
            - EP
            - SplitAlbum
            - Compilation
            - Video
            - Artbook
            - Game
            - Fanmade
            - Instrumental
            - Other
          type: string
        entryType:
          enum:
            - Undefined
            - Album
            - Artist
            - DiscussionTopic
            - PV
            - ReleaseEvent
            - ReleaseEventSeries
            - Song
            - SongList
            - Tag
            - User
          type: string
        eventCategory:
          enum:
            - Unspecified
            - AlbumRelease
            - Anniversary
            - Club
            - Concert
            - Contest
            - Convention
            - Other
          type: string
        id:
          format: int32
          type: integer
        mainPicture:
          $ref: "#/components/schemas/EntryThumbForApiContract"
        name:
          type: string
        names:
          items:
            $ref: "#/components/schemas/LocalizedStringContract"
          type: array
        pVs:
          items:
            $ref: "#/components/schemas/PVContract"
          type: array
        releaseEventSeriesName:
          type: string
        songListFeaturedCategory:
          enum:
            - Nothing
            - Concerts
            - VocaloidRanking
            - Pools
            - Other
          type: string
        songType:
          enum:
            - Unspecified
            - Original
            - Remaster
            - Remix
            - Cover
            - Arrangement
            - Instrumental
            - Mashup
            - MusicPV
            - DramaPV
            - Live
            - Illustration
            - Other
          type: string
        status:
          enum:
            - Draft
            - Finished
            - Approved
            - Locked
          type: string
        tagCategoryName:
          type: string
        tags:
          items:
            $ref: "#/components/schemas/TagUsageForApiContract"
          type: array
        urlSlug:
          type: string
        version:
          format: int32
          type: integer
        webLinks:
          items:
            $ref: "#/components/schemas/ArchivedWebLinkContract"
          type: array
      type: object
    EntryRefContract:
      properties:
        entryType:
          enum:
            - Undefined
            - Album
            - Artist
            - DiscussionTopic
            - PV
            - ReleaseEvent
            - ReleaseEventSeries
            - Song
            - SongList
            - Tag
            - User
          type: string
        id:
          format: int32
          type: integer
      type: object
    EntryThumbContract:
      properties:
        entryType:
          enum:
            - Undefined
            - Album
            - Artist
            - DiscussionTopic
            - PV
            - ReleaseEvent
            - ReleaseEventSeries
            - Song
            - SongList
            - Tag
            - User
          type: string
        id:
          format: int32
          type: integer
        mime:
          type: string
        version:
          format: int32
          type: integer
      type: object
    EntryThumbForApiContract:
      properties:
        mime:
          type: string
        urlSmallThumb:
          type: string
        urlThumb:
          type: string
        urlTinyThumb:
          type: string
      type: object
    LocalizedStringContract:
      properties:
        language:
          enum:
            - Unspecified
            - Japanese
            - Romaji
            - English
          type: string
        value:
          type: string
      type: object
    LocalizedStringWithIdContract:
      properties:
        id:
          format: int32
          type: integer
        language:
          enum:
            - Unspecified
            - Japanese
            - Romaji
            - English
          type: string
        value:
          type: string
      type: object
    LyricsForSongContract:
      properties:
        cultureCode:
          type: string
        id:
          format: int32
          type: integer
        source:
          type: string
        translationType:
          enum:
            - Original
            - Romanized
            - Translation
          type: string
        url:
          type: string
        value:
          type: string
      type: object
    OldUsernameContract:
      properties:
        date:
          format: date-time
          type: string
        oldName:
          type: string
      type: object
    OptionalDateTimeContract:
      properties:
        day:
          format: int32
          type: integer
        formatted:
          type: string
        isEmpty:
          type: boolean
        month:
          format: int32
          type: integer
        year:
          format: int32
          type: integer
      type: object
    PVContract:
      properties:
        author:
          type: string
        createdBy:
          format: int32
          type: integer
        disabled:
          type: boolean
        extendedMetadata:
          $ref: "#/components/schemas/PVExtendedMetadata"
        id:
          format: int32
          type: integer
        length:
          format: int32
          type: integer
        name:
          type: string
        publishDate:
          format: date-time
          type: string
        pvId:
          type: string
        pvType:
          enum:
            - Original
            - Reprint
            - Other
          type: string
        service:
          enum:
            - NicoNicoDouga
            - Youtube
            - SoundCloud
            - Vimeo
            - Piapro
            - Bilibili
            - File
            - LocalFile
            - Creofuga
            - Bandcamp
          type: string
        thumbUrl:
          type: string
        url:
          type: string
      type: object
    PVExtendedMetadata:
      properties:
        json:
          type: string
      type: object
    PVForSongContract:
      properties:
        author:
          type: string
        createdBy:
          format: int32
          type: integer
        disabled:
          type: boolean
        extendedMetadata:
          $ref: "#/components/schemas/PVExtendedMetadata"
        id:
          format: int32
          type: integer
        length:
          format: int32
          type: integer
        name:
          type: string
        publishDate:
          format: date-time
          type: string
        pvId:
          type: string
        pvType:
          enum:
            - Original
            - Reprint
            - Other
          type: string
        service:
          enum:
            - NicoNicoDouga
            - Youtube
            - SoundCloud
            - Vimeo
            - Piapro
            - Bilibili
            - File
            - LocalFile
            - Creofuga
            - Bandcamp
          type: string
        song:
          $ref: "#/components/schemas/SongContract"
        thumbUrl:
          type: string
        url:
          type: string
      type: object
    RatedSongForUserForApiContract:
      properties:
        date:
          format: date-time
          type: string
        rating:
          enum:
            - Nothing
            - Dislike
            - Like
            - Favorite
          type: string
        song:
          $ref: "#/components/schemas/SongForApiContract"
        user:
          $ref: "#/components/schemas/UserForApiContract"
      type: object
    RelatedSongsContract:
      properties:
        artistMatches:
          items:
            $ref: "#/components/schemas/SongForApiContract"
          type: array
        likeMatches:
          items:
            $ref: "#/components/schemas/SongForApiContract"
          type: array
        tagMatches:
          items:
            $ref: "#/components/schemas/SongForApiContract"
          type: array
      type: object
    ReleaseEventForApiContract:
      properties:
        additionalNames:
          type: string
        artists:
          items:
            $ref: "#/components/schemas/ArtistForEventContract"
          type: array
        category:
          enum:
            - Unspecified
            - AlbumRelease
            - Anniversary
            - Club
            - Concert
            - Contest
            - Convention
            - Other
          type: string
        date:
          format: date-time
          type: string
        description:
          type: string
        endDate:
          format: date-time
          type: string
        id:
          format: int32
          type: integer
        mainPicture:
          $ref: "#/components/schemas/EntryThumbForApiContract"
        name:
          type: string
        names:
          items:
            $ref: "#/components/schemas/LocalizedStringContract"
          type: array
        series:
          $ref: "#/components/schemas/ReleaseEventSeriesContract"
        seriesId:
          format: int32
          type: integer
        seriesNumber:
          format: int32
          type: integer
        seriesSuffix:
          type: string
        songList:
          $ref: "#/components/schemas/SongListBaseContract"
        status:
          enum:
            - Draft
            - Finished
            - Approved
            - Locked
          type: string
        urlSlug:
          type: string
        venueName:
          type: string
        version:
          format: int32
          type: integer
        webLinks:
          items:
            $ref: "#/components/schemas/WebLinkForApiContract"
          type: array
      type: object
    ReleaseEventSeriesContract:
      properties:
        additionalNames:
          type: string
        category:
          enum:
            - Unspecified
            - AlbumRelease
            - Anniversary
            - Club
            - Concert
            - Contest
            - Convention
            - Other
          type: string
        deleted:
          type: boolean
        description:
          type: string
        id:
          format: int32
          type: integer
        name:
          type: string
        pictureMime:
          type: string
        status:
          enum:
            - Draft
            - Finished
            - Approved
            - Locked
          type: string
        urlSlug:
          type: string
        version:
          format: int32
          type: integer
        webLinks:
          items:
            $ref: "#/components/schemas/WebLinkContract"
          type: array
      type: object
    SongContract:
      properties:
        additionalNames:
          type: string
        artistString:
          type: string
        createDate:
          format: date-time
          type: string
        deleted:
          type: boolean
        favoritedTimes:
          format: int32
          type: integer
        id:
          format: int32
          type: integer
        lengthSeconds:
          format: int32
          type: integer
        name:
          type: string
        nicoId:
          type: string
        publishDate:
          format: date-time
          type: string
        pvServices:
          enum:
            - Nothing
            - NicoNicoDouga
            - Youtube
            - SoundCloud
            - Vimeo
            - Piapro
            - Bilibili
            - File
            - LocalFile
            - Creofuga
            - Bandcamp
          type: string
        ratingScore:
          format: int32
          type: integer
        songType:
          enum:
            - Unspecified
            - Original
            - Remaster
            - Remix
            - Cover
            - Arrangement
            - Instrumental
            - Mashup
            - MusicPV
            - DramaPV
            - Live
            - Illustration
            - Other
          type: string
        status:
          enum:
            - Draft
            - Finished
            - Approved
            - Locked
          type: string
        thumbUrl:
          type: string
        version:
          format: int32
          type: integer
      type: object
    SongForApiContract:
      properties:
        additionalNames:
          type: string
        albums:
          items:
            $ref: "#/components/schemas/AlbumContract"
          type: array
        artistString:
          type: string
        artists:
          items:
            $ref: "#/components/schemas/ArtistForSongContract"
          type: array
        createDate:
          format: date-time
          type: string
        defaultName:
          type: string
        defaultNameLanguage:
          enum:
            - Unspecified
            - Japanese
            - Romaji
            - English
          type: string
        deleted:
          type: boolean
        favoritedTimes:
          format: int32
          type: integer
        id:
          format: int32
          type: integer
        lengthSeconds:
          format: int32
          type: integer
        lyrics:
          items:
            $ref: "#/components/schemas/LyricsForSongContract"
          type: array
        mainPicture:
          $ref: "#/components/schemas/EntryThumbForApiContract"
        mergedTo:
          format: int32
          type: integer
        name:
          type: string
        names:
          items:
            $ref: "#/components/schemas/LocalizedStringContract"
          type: array
        originalVersionId:
          format: int32
          type: integer
        publishDate:
          format: date-time
          type: string
        pvServices:
          enum:
            - Nothing
            - NicoNicoDouga
            - Youtube
            - SoundCloud
            - Vimeo
            - Piapro
            - Bilibili
            - File
            - LocalFile
            - Creofuga
            - Bandcamp
          type: string
        pvs:
          items:
            $ref: "#/components/schemas/PVContract"
          type: array
        ratingScore:
          format: int32
          type: integer
        releaseEvent:
          $ref: "#/components/schemas/ReleaseEventForApiContract"
        songType:
          enum:
            - Unspecified
            - Original
            - Remaster
            - Remix
            - Cover
            - Arrangement
            - Instrumental
            - Mashup
            - MusicPV
            - DramaPV
            - Live
            - Illustration
            - Other
          type: string
        status:
          enum:
            - Draft
            - Finished
            - Approved
            - Locked
          type: string
        tags:
          items:
            $ref: "#/components/schemas/TagUsageForApiContract"
          type: array
        thumbUrl:
          type: string
        version:
          format: int32
          type: integer
        webLinks:
          items:
            $ref: "#/components/schemas/WebLinkForApiContract"
          type: array
      type: object
    SongInAlbumForApiContract:
      properties:
        discNumber:
          format: int32
          type: integer
        id:
          format: int32
          type: integer
        name:
          type: string
        song:
          $ref: "#/components/schemas/SongForApiContract"
        trackNumber:
          format: int32
          type: integer
      type: object
    SongInListEditContract:
      properties:
        notes:
          type: string
        order:
          format: int32
          type: integer
        song:
          $ref: "#/components/schemas/SongForApiContract"
        songInListId:
          format: int32
          type: integer
      type: object
    SongInListForApiContract:
      properties:
        notes:
          type: string
        order:
          format: int32
          type: integer
        song:
          $ref: "#/components/schemas/SongForApiContract"
      type: object
    SongListBaseContract:
      properties:
        featuredCategory:
          enum:
            - Nothing
            - Concerts
            - VocaloidRanking
            - Pools
            - Other
          type: string
        id:
          format: int32
          type: integer
        name:
          type: string
      type: object
    SongListForApiContract:
      properties:
        author:
          $ref: "#/components/schemas/UserForApiContract"
        eventDate:
          format: date-time
          type: string
        featuredCategory:
          enum:
            - Nothing
            - Concerts
            - VocaloidRanking
            - Pools
            - Other
          type: string
        id:
          format: int32
          type: integer
        mainPicture:
          $ref: "#/components/schemas/EntryThumbForApiContract"
        name:
          type: string
      type: object
    SongListForEditContract:
      properties:
        author:
          $ref: "#/components/schemas/UserWithEmailContract"
        canEdit:
          type: boolean
        deleted:
          type: boolean
        description:
          type: string
        eventDate:
          format: date-time
          type: string
        featuredCategory:
          enum:
            - Nothing
            - Concerts
            - VocaloidRanking
            - Pools
            - Other
          type: string
        id:
          format: int32
          type: integer
        name:
          type: string
        songLinks:
          items:
            $ref: "#/components/schemas/SongInListEditContract"
          type: array
        status:
          enum:
            - Draft
            - Finished
            - Approved
            - Locked
          type: string
        thumb:
          $ref: "#/components/schemas/EntryThumbContract"
        updateNotes:
          type: string
        version:
          format: int32
          type: integer
      type: object
    SongRatingContract:
      properties:
        rating:
          enum:
            - Nothing
            - Dislike
            - Like
            - Favorite
          type: string
      type: object
    TagBaseContract:
      properties:
        additionalNames:
          type: string
        categoryName:
          type: string
        id:
          format: int32
          type: integer
        name:
          type: string
        urlSlug:
          type: string
      type: object
    TagForApiContract:
      properties:
        additionalNames:
          type: string
        aliasedTo:
          $ref: "#/components/schemas/TagBaseContract"
        categoryName:
          type: string
        createDate:
          format: date-time
          type: string
        defaultNameLanguage:
          enum:
            - Unspecified
            - Japanese
            - Romaji
            - English
          type: string
        description:
          type: string
        id:
          format: int32
          type: integer
        mainPicture:
          $ref: "#/components/schemas/EntryThumbForApiContract"
        name:
          type: string
        names:
          items:
            $ref: "#/components/schemas/LocalizedStringWithIdContract"
          type: array
        parent:
          $ref: "#/components/schemas/TagBaseContract"
        relatedTags:
          items:
            $ref: "#/components/schemas/TagBaseContract"
          type: array
        status:
          enum:
            - Draft
            - Finished
            - Approved
            - Locked
          type: string
        targets:
          format: int32
          type: integer
        translatedDescription:
          $ref: "#/components/schemas/EnglishTranslatedStringContract"
        urlSlug:
          type: string
        usageCount:
          format: int32
          type: integer
        version:
          format: int32
          type: integer
        webLinks:
          items:
            $ref: "#/components/schemas/WebLinkForApiContract"
          type: array
      type: object
    TagUsageForApiContract:
      properties:
        count:
          format: int32
          type: integer
        tag:
          $ref: "#/components/schemas/TagBaseContract"
      type: object
    UserForApiContract:
      properties:
        active:
          type: boolean
        groupId:
          enum:
            - Nothing
            - Limited
            - Regular
            - Trusted
            - Moderator
            - Admin
          type: string
        id:
          format: int32
          type: integer
        knownLanguages:
          items:
            $ref: "#/components/schemas/UserKnownLanguageContract"
          type: array
        mainPicture:
          $ref: "#/components/schemas/EntryThumbForApiContract"
        memberSince:
          format: date-time
          type: string
        name:
          type: string
        oldUsernames:
          items:
            $ref: "#/components/schemas/OldUsernameContract"
          type: array
        verifiedArtist:
          type: boolean
      type: object
    UserKnownLanguageContract:
      properties:
        cultureCode:
          type: string
        proficiency:
          enum:
            - Nothing
            - Basics
            - Intermediate
            - Advanced
            - Native
          type: string
      type: object
    UserMessageContract:
      properties:
        body:
          type: string
        createdFormatted:
          type: string
        highPriority:
          type: boolean
        id:
          format: int32
          type: integer
        inbox:
          enum:
            - Nothing
            - Received
            - Sent
            - Notifications
          type: string
        read:
          type: boolean
        receiver:
          $ref: "#/components/schemas/UserForApiContract"
        sender:
          $ref: "#/components/schemas/UserForApiContract"
        subject:
          type: string
      type: object
    UserWithEmailContract:
      properties:
        email:
          type: string
        id:
          format: int32
          type: integer
        name:
          type: string
      type: object
    WebLinkContract:
      properties:
        category:
          enum:
            - Official
            - Commercial
            - Reference
            - Other
          type: string
        description:
          type: string
        descriptionOrUrl:
          type: string
        id:
          format: int32
          type: integer
        url:
          type: string
      type: object
    WebLinkForApiContract:
      properties:
        category:
          enum:
            - Official
            - Commercial
            - Reference
            - Other
          type: string
        description:
          type: string
        id:
          format: int32
          type: integer
        url:
          type: string
      type: object
    PartialFindResult_ActivityEntryForApiContract_:
      properties:
        items:
          items:
            $ref: "#/components/schemas/ActivityEntryForApiContract"
          type: array
        term:
          type: string
        totalCount:
          format: int32
          type: integer
      type: object
    PartialFindResult_AlbumForApiContract_:
      properties:
        items:
          items:
            $ref: "#/components/schemas/AlbumForApiContract"
          type: array
        term:
          type: string
        totalCount:
          format: int32
          type: integer
      type: object
    PartialFindResult_AlbumForUserForApiContract_:
      properties:
        items:
          items:
            $ref: "#/components/schemas/AlbumForUserForApiContract"
          type: array
        term:
          type: string
        totalCount:
          format: int32
          type: integer
      type: object
    PartialFindResult_ArtistForApiContract_:
      properties:
        items:
          items:
            $ref: "#/components/schemas/ArtistForApiContract"
          type: array
        term:
          type: string
        totalCount:
          format: int32
          type: integer
      type: object
    PartialFindResult_ArtistForUserForApiContract_:
      properties:
        items:
          items:
            $ref: "#/components/schemas/ArtistForUserForApiContract"
          type: array
        term:
          type: string
        totalCount:
          format: int32
          type: integer
      type: object
    PartialFindResult_CommentForApiContract_:
      properties:
        items:
          items:
            $ref: "#/components/schemas/CommentForApiContract"
          type: array
        term:
          type: string
        totalCount:
          format: int32
          type: integer
      type: object
    PartialFindResult_DiscussionTopicContract_:
      properties:
        items:
          items:
            $ref: "#/components/schemas/DiscussionTopicContract"
          type: array
        term:
          type: string
        totalCount:
          format: int32
          type: integer
      type: object
    PartialFindResult_EntryForApiContract_:
      properties:
        items:
          items:
            $ref: "#/components/schemas/EntryForApiContract"
          type: array
        term:
          type: string
        totalCount:
          format: int32
          type: integer
      type: object
    PartialFindResult_PVForSongContract_:
      properties:
        items:
          items:
            $ref: "#/components/schemas/PVForSongContract"
          type: array
        term:
          type: string
        totalCount:
          format: int32
          type: integer
      type: object
    PartialFindResult_RatedSongForUserForApiContract_:
      properties:
        items:
          items:
            $ref: "#/components/schemas/RatedSongForUserForApiContract"
          type: array
        term:
          type: string
        totalCount:
          format: int32
          type: integer
      type: object
    PartialFindResult_ReleaseEventForApiContract_:
      properties:
        items:
          items:
            $ref: "#/components/schemas/ReleaseEventForApiContract"
          type: array
        term:
          type: string
        totalCount:
          format: int32
          type: integer
      type: object
    PartialFindResult_ReleaseEventSeriesContract_:
      properties:
        items:
          items:
            $ref: "#/components/schemas/ReleaseEventSeriesContract"
          type: array
        term:
          type: string
        totalCount:
          format: int32
          type: integer
      type: object
    PartialFindResult_SongForApiContract_:
      properties:
        items:
          items:
            $ref: "#/components/schemas/SongForApiContract"
          type: array
        term:
          type: string
        totalCount:
          format: int32
          type: integer
      type: object
    PartialFindResult_SongInListForApiContract_:
      properties:
        items:
          items:
            $ref: "#/components/schemas/SongInListForApiContract"
          type: array
        term:
          type: string
        totalCount:
          format: int32
          type: integer
      type: object
    PartialFindResult_SongListForApiContract_:
      properties:
        items:
          items:
            $ref: "#/components/schemas/SongListForApiContract"
          type: array
        term:
          type: string
        totalCount:
          format: int32
          type: integer
      type: object
    PartialFindResult_TagForApiContract_:
      properties:
        items:
          items:
            $ref: "#/components/schemas/TagForApiContract"
          type: array
        term:
          type: string
        totalCount:
          format: int32
          type: integer
      type: object
    PartialFindResult_UserForApiContract_:
      properties:
        items:
          items:
            $ref: "#/components/schemas/UserForApiContract"
          type: array
        term:
          type: string
        totalCount:
          format: int32
          type: integer
      type: object
    PartialFindResult_UserMessageContract_:
      properties:
        items:
          items:
            $ref: "#/components/schemas/UserMessageContract"
          type: array
        term:
          type: string
        totalCount:
          format: int32
          type: integer
      type: object
