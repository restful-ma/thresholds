openapi: 3.0.0
info:
  contact:
    name: Google
    url: https://google.com
  description: Creates, reads, and updates metadata for Google Cloud Platform resource
    containers.
  license:
    name: Creative Commons Attribution 3.0
    url: http://creativecommons.org/licenses/by/3.0/
  termsOfService: https://developers.google.com/terms/
  title: Cloud Resource Manager
  version: v1beta1
  x-apiClientRegistration:
    url: https://console.developers.google.com
  x-logo:
    url: https://cloud.google.com/_static/images/new-gcp-logo.png
  x-origin:
    - converter:
        url: https://github.com/lucybot/api-spec-converter
        version: 2.7.31
      format: google
      url: https://cloudresourcemanager.googleapis.com/$discovery/rest?version=v1beta1
      version: v1
  x-preferred: false
  x-providerName: googleapis.com
  x-serviceName: cloudresourcemanager
externalDocs:
  url: https://cloud.google.com/resource-manager
tags:
  - name: organizations
  - name: projects
paths:
  /v1beta1/organizations:
    get:
      description: >-
        Lists Organization resources that are visible to the user and satisfy

        the specified filter. This method returns Organizations in an unspecified

        order. New Organizations do not necessarily appear at the end of the list.
      operationId: cloudresourcemanager.organizations.list
      parameters:
        - description: >-
            An optional query string used to filter the Organizations to return
            in

            the response. Filter rules are case-insensitive.



            Organizations may be filtered by `owner.directoryCustomerId` or by

            `domain`, where the domain is a G Suite domain, for example:


            * Filter `owner.directorycustomerid:123456789` returns Organization

            resources with `owner.directory_customer_id` equal to `123456789`.

            * Filter `domain:google.com` returns Organization resources corresponding

            to the domain `google.com`.


            This field is optional.
          in: query
          name: filter
          schema:
            type: string
        - description: |-
            The maximum number of Organizations to return in the response.
            This field is optional.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: >-
            A pagination token returned from a previous call to
            `ListOrganizations`

            that indicates from where listing should continue.

            This field is optional.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ListOrganizationsResponse"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform.read-only
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform.read-only
      tags:
        - organizations
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/upload_protocol"
  /v1beta1/projects:
    get:
      description: >-
        Lists Projects that the caller has the `resourcemanager.projects.get`

        permission on and satisfy the specified filter.


        This method returns Projects in an unspecified order.

        This method is eventually consistent with project mutations; this means

        that a newly created project may not appear in the results or recent

        updates to an existing project may not be reflected in the results. To

        retrieve the latest state of a project, use the

        GetProject method.


        NOTE: If the request filter contains a `parent.type` and `parent.id` and

        the caller has the `resourcemanager.projects.list` permission on the

        parent, the results will be drawn from an alternate index which provides

        more consistent results. In future versions of this API, this List method

        will be split into List and Search to properly capture the behavorial

        difference.
      operationId: cloudresourcemanager.projects.list
      parameters:
        - description: >-
            An expression for filtering the results of the request.  Filter
            rules are

            case insensitive. The fields eligible for filtering are:


            + `name`

            + `id`

            + `labels.<key>` (where *key* is the name of a label)

            + `parent.type`

            + `parent.id`


            Some examples of using labels as filters:


            | Filter           | Description                                         |

            |------------------|-----------------------------------------------------|

            | name:how*        | The project's name starts with "how".               |

            | name:Howl        | The project's name is `Howl` or `howl`.             |

            | name:HOWL        | Equivalent to above.                                |

            | NAME:howl        | Equivalent to above.                                |

            | labels.color:*   | The project has the label `color`.                  |

            | labels.color:red | The project's label `color` has the value `red`.    |

            | labels.color:red&nbsp;labels.size:big |The project's label `color` has
              the value `red` and its label `size` has the value `big`.              |

            If no filter is specified, the call will return projects for which the user

            has the `resourcemanager.projects.get` permission.


            NOTE: To perform a by-parent query (eg., what projects are directly in a

            Folder), the caller must have the `resourcemanager.projects.list`

            permission on the parent and the filter must contain both a `parent.type`

            and a `parent.id` restriction

            (example: "parent.type:folder parent.id:123"). In this case an alternate

            search index is used which provides more consistent results.


            Optional.
          in: query
          name: filter
          schema:
            type: string
        - description: |-
            The maximum number of Projects to return in the response.
            The server can return fewer Projects than requested.
            If unspecified, server picks an appropriate default.

            Optional.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: |-
            A pagination token returned from a previous call to ListProjects
            that indicates from where listing should continue.

            Optional.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ListProjectsResponse"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform.read-only
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform.read-only
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/upload_protocol"
    post:
      description: >-
        Creates a Project resource.


        Initially, the Project resource is owned by its creator exclusively.

        The creator can later grant permission to others to read or update the

        Project.


        Several APIs are activated automatically for the Project, including

        Google Cloud Storage. The parent is identified by a specified

        ResourceId, which must include both an ID and a type, such as

        project, folder, or organization.


        This method does not associate the new project with a billing account.

        You can set or update the billing account associated with a project using

        the [`projects.updateBillingInfo`]

        (/billing/reference/rest/v1/projects/updateBillingInfo) method.
      operationId: cloudresourcemanager.projects.create
      parameters:
        - description: A safety hatch to opt out of the new reliable project creation
            process.
          in: query
          name: useLegacyStack
          schema:
            type: boolean
      requestBody:
        $ref: "#/components/requestBodies/Project"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Project"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  "/v1beta1/projects/{projectId}":
    delete:
      description: >-
        Marks the Project identified by the specified

        `project_id` (for example, `my-project-123`) for deletion.

        This method will only affect the Project if it has a lifecycle state of

        ACTIVE.


        This method changes the Project's lifecycle state from

        ACTIVE

        to DELETE_REQUESTED.

        The deletion starts at an unspecified time, at which point the project is

        no longer accessible.


        Until the deletion completes, you can check the lifecycle state

        checked by retrieving the Project with GetProject,

        and the Project remains visible to ListProjects.

        However, you cannot update the project.


        After the deletion completes, the Project is not retrievable by

        the  GetProject

        and ListProjects

        methods.


        The caller must have modify permissions for this Project.
      operationId: cloudresourcemanager.projects.delete
      parameters:
        - description: |-
            The Project ID (for example, `foo-bar-123`).

            Required.
          in: path
          name: projectId
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Empty"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    get:
      description: |-
        Retrieves the Project identified by the specified
        `project_id` (for example, `my-project-123`).

        The caller must have read permissions for this Project.
      operationId: cloudresourcemanager.projects.get
      parameters:
        - description: |-
            The Project ID (for example, `my-project-123`).

            Required.
          in: path
          name: projectId
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Project"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform.read-only
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform.read-only
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/upload_protocol"
    put:
      description: |-
        Updates the attributes of the Project identified by the specified
        `project_id` (for example, `my-project-123`).

        The caller must have modify permissions for this Project.
      operationId: cloudresourcemanager.projects.update
      parameters:
        - description: |-
            The project ID (for example, `my-project-123`).

            Required.
          in: path
          name: projectId
          required: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/Project"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Project"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  "/v1beta1/projects/{projectId}:getAncestry":
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/upload_protocol"
    post:
      description: >-
        Gets a list of ancestors in the resource hierarchy for the Project

        identified by the specified `project_id` (for example, `my-project-123`).


        The caller must have read permissions for this Project.
      operationId: cloudresourcemanager.projects.getAncestry
      parameters:
        - description: |-
            The Project ID (for example, `my-project-123`).

            Required.
          in: path
          name: projectId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GetAncestryRequest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/GetAncestryResponse"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform.read-only
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform.read-only
      tags:
        - projects
  "/v1beta1/projects/{projectId}:undelete":
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/upload_protocol"
    post:
      description: |-
        Restores the Project identified by the specified
        `project_id` (for example, `my-project-123`).
        You can only use this method for a Project that has a lifecycle state of
        DELETE_REQUESTED.
        After deletion starts, the Project cannot be restored.

        The caller must have modify permissions for this Project.
      operationId: cloudresourcemanager.projects.undelete
      parameters:
        - description: |-
            The project ID (for example, `foo-bar-123`).

            Required.
          in: path
          name: projectId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UndeleteProjectRequest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Empty"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  "/v1beta1/projects/{resource}:getIamPolicy":
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/upload_protocol"
    post:
      description: |-
        Returns the IAM access control policy for the specified Project.
        Permission is denied if the policy or the resource does not exist.

        For additional information about resource structure and identification,
        see [Resource Names](/apis/design/resource_names).
      operationId: cloudresourcemanager.projects.getIamPolicy
      parameters:
        - description: >-
            REQUIRED: The resource for which the policy is being requested.

            See the operation documentation for the appropriate value for this field.
          in: path
          name: resource
          required: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/GetIamPolicyRequest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Policy"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform.read-only
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform.read-only
      tags:
        - projects
  "/v1beta1/projects/{resource}:setIamPolicy":
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/upload_protocol"
    post:
      description: >-
        Sets the IAM access control policy for the specified Project. Overwrites

        any existing policy.


        The following constraints apply when using `setIamPolicy()`:


        + Project does not support `allUsers` and `allAuthenticatedUsers` as

        `members` in a `Binding` of a `Policy`.


        + The owner role can be granted to a `user`, `serviceAccount`, or a group

        that is part of an organization. For example,

        group@myownpersonaldomain.com could be added as an owner to a project in

        the myownpersonaldomain.com organization, but not the examplepetstore.com

        organization.


        + Service accounts can be made owners of a project directly

        without any restrictions. However, to be added as an owner, a user must be

        invited via Cloud Platform console and must accept the invitation.


        + A user cannot be granted the owner role using `setIamPolicy()`. The user

        must be granted the owner role using the Cloud Platform Console and must

        explicitly accept the invitation.


        + Invitations to grant the owner role cannot be sent using

        `setIamPolicy()`; they must be sent only using the Cloud Platform Console.


        + Membership changes that leave the project without any owners that have

        accepted the Terms of Service (ToS) will be rejected.


        + If the project is not part of an organization, there must be at least

        one owner who has accepted the Terms of Service (ToS) agreement in the

        policy. Calling `setIamPolicy()` to remove the last ToS-accepted owner

        from the policy will fail. This restriction also applies to legacy

        projects that no longer have owners who have accepted the ToS. Edits to

        IAM policies will be rejected until the lack of a ToS-accepting owner is

        rectified.


        + This method will replace the existing policy, and cannot be used to

        append additional IAM settings.


        Note: Removing service accounts from policies or changing their roles

        can render services completely inoperable. It is important to understand

        how the service account is being used before removing or updating its

        roles.
      operationId: cloudresourcemanager.projects.setIamPolicy
      parameters:
        - description: >-
            REQUIRED: The resource for which the policy is being specified.

            See the operation documentation for the appropriate value for this field.
          in: path
          name: resource
          required: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/SetIamPolicyRequest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Policy"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  "/v1beta1/projects/{resource}:testIamPermissions":
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/upload_protocol"
    post:
      description: Returns permissions that a caller has on the specified Project.
      operationId: cloudresourcemanager.projects.testIamPermissions
      parameters:
        - description: >-
            REQUIRED: The resource for which the policy detail is being
            requested.

            See the operation documentation for the appropriate value for this field.
          in: path
          name: resource
          required: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/TestIamPermissionsRequest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/TestIamPermissionsResponse"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform.read-only
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform.read-only
      tags:
        - projects
  "/v1beta1/{name}":
    get:
      description: Fetches an Organization resource identified by the specified resource
        name.
      operationId: cloudresourcemanager.organizations.get
      parameters:
        - description: >-
            The resource name of the Organization to fetch. This is the
            organization's

            relative path in the API, formatted as "organizations/[organizationId]".

            For example, "organizations/1234".
          in: path
          name: name
          required: true
          x-reservedExpansion: true
          schema:
            type: string
        - description: >-
            The id of the Organization resource to fetch.

            This field is deprecated and will be removed in v1. Use name instead.
          in: query
          name: organizationId
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Organization"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform.read-only
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform.read-only
      tags:
        - organizations
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/upload_protocol"
    put:
      description: Updates an Organization resource identified by the specified resource
        name.
      operationId: cloudresourcemanager.organizations.update
      parameters:
        - description: >-
            Output only. The resource name of the organization. This is the

            organization's relative path in the API. Its format is

            "organizations/[organization_id]". For example, "organizations/1234".
          in: path
          name: name
          required: true
          x-reservedExpansion: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Organization"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Organization"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - organizations
  "/v1beta1/{resource}:getIamPolicy":
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/upload_protocol"
    post:
      description: >-
        Gets the access control policy for an Organization resource. May be
        empty

        if no such policy or resource exists. The `resource` field should be the

        organization's resource name, e.g. "organizations/123".
      operationId: cloudresourcemanager.organizations.getIamPolicy
      parameters:
        - description: >-
            REQUIRED: The resource for which the policy is being requested.

            See the operation documentation for the appropriate value for this field.
          in: path
          name: resource
          required: true
          x-reservedExpansion: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/GetIamPolicyRequest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Policy"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform.read-only
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform.read-only
      tags:
        - organizations
  "/v1beta1/{resource}:setIamPolicy":
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/upload_protocol"
    post:
      description: >-
        Sets the access control policy on an Organization resource. Replaces any

        existing policy. The `resource` field should be the organization's resource

        name, e.g. "organizations/123".
      operationId: cloudresourcemanager.organizations.setIamPolicy
      parameters:
        - description: >-
            REQUIRED: The resource for which the policy is being specified.

            See the operation documentation for the appropriate value for this field.
          in: path
          name: resource
          required: true
          x-reservedExpansion: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/SetIamPolicyRequest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Policy"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - organizations
  "/v1beta1/{resource}:testIamPermissions":
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/upload_protocol"
    post:
      description: |-
        Returns permissions that a caller has on the specified Organization.
        The `resource` field should be the organization's resource name,
        e.g. "organizations/123".
      operationId: cloudresourcemanager.organizations.testIamPermissions
      parameters:
        - description: >-
            REQUIRED: The resource for which the policy detail is being
            requested.

            See the operation documentation for the appropriate value for this field.
          in: path
          name: resource
          required: true
          x-reservedExpansion: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/TestIamPermissionsRequest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/TestIamPermissionsResponse"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform.read-only
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform.read-only
      tags:
        - organizations
servers:
  - url: https://cloudresourcemanager.googleapis.com/
components:
  parameters:
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
          - media
          - proto
        default: json
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    key:
      description: API key. Your API key identifies your project and provides you with API
        access, quota, and reports. Required unless you provide an OAuth 2.0
        token.
      in: query
      name: key
      schema:
        type: string
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
        default: true
    quotaUser:
      description: Available to use for quota purposes for server-side applications. Can be
        any arbitrary string assigned to a user, but should not exceed 40
        characters.
      in: query
      name: quotaUser
      schema:
        type: string
    uploadType:
      description: Legacy upload protocol for media (e.g. "media", "multipart").
      in: query
      name: uploadType
      schema:
        type: string
    upload_protocol:
      description: Upload protocol for media (e.g. "raw", "multipart").
      in: query
      name: upload_protocol
      schema:
        type: string
    _.xgafv:
      description: V1 error format.
      in: query
      name: $.xgafv
      schema:
        type: string
        enum:
          - "1"
          - "2"
  requestBodies:
    Project:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Project"
    GetIamPolicyRequest:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/GetIamPolicyRequest"
    SetIamPolicyRequest:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/SetIamPolicyRequest"
    TestIamPermissionsRequest:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/TestIamPermissionsRequest"
  securitySchemes:
    Oauth2:
      description: Oauth 2.0 implicit authentication
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes:
            https://www.googleapis.com/auth/cloud-platform: View and manage your data across Google Cloud Platform services
            https://www.googleapis.com/auth/cloud-platform.read-only: View your data across Google Cloud Platform services
    Oauth2c:
      description: Oauth 2.0 accessCode authentication
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          tokenUrl: https://accounts.google.com/o/oauth2/token
          scopes:
            https://www.googleapis.com/auth/cloud-platform: View and manage your data across Google Cloud Platform services
            https://www.googleapis.com/auth/cloud-platform.read-only: View your data across Google Cloud Platform services
  schemas:
    Ancestor:
      description: Identifying information for a single ancestor of a project.
      properties:
        resourceId:
          $ref: "#/components/schemas/ResourceId"
      type: object
    AuditConfig:
      description: >-
        Specifies the audit configuration for a service.

        The configuration determines which permission types are logged, and what

        identities, if any, are exempted from logging.

        An AuditConfig must have one or more AuditLogConfigs.


        If there are AuditConfigs for both `allServices` and a specific service,

        the union of the two AuditConfigs is used for that service: the log_types

        specified in each AuditConfig are enabled, and the exempted_members in each

        AuditLogConfig are exempted.


        Example Policy with multiple AuditConfigs:

            {
              "audit_configs": [
                {
                  "service": "allServices"
                  "audit_log_configs": [
                    {
                      "log_type": "DATA_READ",
                      "exempted_members": [
                        "user:jose@example.com"
                      ]
                    },
                    {
                      "log_type": "DATA_WRITE",
                    },
                    {
                      "log_type": "ADMIN_READ",
                    }
                  ]
                },
                {
                  "service": "sampleservice.googleapis.com"
                  "audit_log_configs": [
                    {
                      "log_type": "DATA_READ",
                    },
                    {
                      "log_type": "DATA_WRITE",
                      "exempted_members": [
                        "user:aliya@example.com"
                      ]
                    }
                  ]
                }
              ]
            }

        For sampleservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ

        logging. It also exempts jose@example.com from DATA_READ logging, and

        aliya@example.com from DATA_WRITE logging.
      properties:
        auditLogConfigs:
          description: The configuration for logging of each type of permission.
          items:
            $ref: "#/components/schemas/AuditLogConfig"
          type: array
        service:
          description: |-
            Specifies a service that will be enabled for audit logging.
            For example, `storage.googleapis.com`, `cloudsql.googleapis.com`.
            `allServices` is a special value that covers all services.
          type: string
      type: object
    AuditLogConfig:
      description: |-
        Provides the configuration for logging a type of permissions.
        Example:

            {
              "audit_log_configs": [
                {
                  "log_type": "DATA_READ",
                  "exempted_members": [
                    "user:jose@example.com"
                  ]
                },
                {
                  "log_type": "DATA_WRITE",
                }
              ]
            }

        This enables 'DATA_READ' and 'DATA_WRITE' logging, while exempting
        jose@example.com from DATA_READ logging.
      properties:
        exemptedMembers:
          description: |-
            Specifies the identities that do not cause logging for this type of
            permission.
            Follows the same format of Binding.members.
          items:
            type: string
          type: array
        logType:
          description: The log type that this config enables.
          enum:
            - LOG_TYPE_UNSPECIFIED
            - ADMIN_READ
            - DATA_WRITE
            - DATA_READ
          type: string
      type: object
    Binding:
      description: Associates `members` with a `role`.
      properties:
        condition:
          $ref: "#/components/schemas/Expr"
        members:
          description: >+
            Specifies the identities requesting access for a Cloud Platform
            resource.

            `members` can have the following values:


            * `allUsers`: A special identifier that represents anyone who is
               on the internet; with or without a Google account.

            * `allAuthenticatedUsers`: A special identifier that represents anyone
               who is authenticated with a Google account or a service account.

            * `user:{emailid}`: An email address that represents a specific Google
               account. For example, `alice@example.com` .


            * `serviceAccount:{emailid}`: An email address that represents a service
               account. For example, `my-other-app@appspot.gserviceaccount.com`.

            * `group:{emailid}`: An email address that represents a Google group.
               For example, `admins@example.com`.


            * `domain:{domain}`: The G Suite domain (primary) that represents all the
               users of that domain. For example, `google.com` or `example.com`.

          items:
            type: string
          type: array
        role:
          description: |-
            Role that is assigned to `members`.
            For example, `roles/viewer`, `roles/editor`, or `roles/owner`.
          type: string
      type: object
    Empty:
      description: >-
        A generic empty message that you can re-use to avoid defining duplicated

        empty messages in your APIs. A typical example is to use it as the request

        or the response type of an API method. For instance:

            service Foo {
              rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);
            }

        The JSON representation for `Empty` is empty JSON object `{}`.
      properties: {}
      type: object
    Expr:
      description: |-
        Represents an expression text. Example:

            title: "User account presence"
            description: "Determines whether the request has a user account"
            expression: "size(request.user) > 0"
      properties:
        description:
          description: >-
            An optional description of the expression. This is a longer text
            which

            describes the expression, e.g. when hovered over it in a UI.
          type: string
        expression:
          description: |-
            Textual representation of an expression in
            Common Expression Language syntax.

            The application context of the containing message determines which
            well-known feature set of CEL is supported.
          type: string
        location:
          description: >-
            An optional string indicating the location of the expression for
            error

            reporting, e.g. a file name and a position in the file.
          type: string
        title:
          description: |-
            An optional title for the expression, i.e. a short string describing
            its purpose. This can be used e.g. in UIs which allow to enter the
            expression.
          type: string
      type: object
    FolderOperation:
      description: Metadata describing a long running folder operation
      properties:
        destinationParent:
          description: >-
            The resource name of the folder or organization we are either
            creating

            the folder under or moving the folder to.
          type: string
        displayName:
          description: The display name of the folder.
          type: string
        operationType:
          description: The type of this operation.
          enum:
            - OPERATION_TYPE_UNSPECIFIED
            - CREATE
            - MOVE
          type: string
        sourceParent:
          description: |-
            The resource name of the folder's parent.
            Only applicable when the operation_type is MOVE.
          type: string
      type: object
    FolderOperationError:
      description: A classification of the Folder Operation error.
      properties:
        errorMessageId:
          description: The type of operation error experienced.
          enum:
            - ERROR_TYPE_UNSPECIFIED
            - ACTIVE_FOLDER_HEIGHT_VIOLATION
            - MAX_CHILD_FOLDERS_VIOLATION
            - FOLDER_NAME_UNIQUENESS_VIOLATION
            - RESOURCE_DELETED_VIOLATION
            - PARENT_DELETED_VIOLATION
            - CYCLE_INTRODUCED_VIOLATION
            - FOLDER_BEING_MOVED_VIOLATION
            - FOLDER_TO_DELETE_NON_EMPTY_VIOLATION
            - DELETED_FOLDER_HEIGHT_VIOLATION
          type: string
      type: object
    GetAncestryRequest:
      description: |-
        The request sent to the
        GetAncestry
        method.
      properties: {}
      type: object
    GetAncestryResponse:
      description: Response from the GetAncestry method.
      properties:
        ancestor:
          description: >-
            Ancestors are ordered from bottom to top of the resource hierarchy.
            The

            first ancestor is the project itself, followed by the project's parent,

            etc.
          items:
            $ref: "#/components/schemas/Ancestor"
          type: array
      type: object
    GetIamPolicyRequest:
      description: Request message for `GetIamPolicy` method.
      properties:
        options:
          $ref: "#/components/schemas/GetPolicyOptions"
      type: object
    GetPolicyOptions:
      description: Encapsulates settings provided to GetIamPolicy.
      properties:
        requestedPolicyVersion:
          description: >-
            Optional. The policy format version to be returned.


            Valid values are 0, 1, and 3. Requests specifying an invalid value will be

            rejected.


            Requests for policies with any conditional bindings must specify version 3.

            Policies without any conditional bindings may specify any valid value or

            leave the field unset.
          format: int32
          type: integer
      type: object
    ListOrganizationsResponse:
      description: The response returned from the `ListOrganizations` method.
      properties:
        nextPageToken:
          description: >-
            A pagination token to be used to retrieve the next page of results.
            If the

            result is too large to fit within the page size specified in the request,

            this field will be set with a token that can be used to fetch the next page

            of results. If this field is empty, it indicates that this response

            contains the last page of results.
          type: string
        organizations:
          description: The list of Organizations that matched the list query, possibly
            paginated.
          items:
            $ref: "#/components/schemas/Organization"
          type: array
      type: object
    ListProjectsResponse:
      description: |-
        A page of the response received from the
        ListProjects
        method.

        A paginated response where more pages are available has
        `next_page_token` set. This token can be used in a subsequent request to
        retrieve the next request page.
      properties:
        nextPageToken:
          description: >-
            Pagination token.


            If the result set is too large to fit in a single response, this token

            is returned. It encodes the position of the current result cursor.

            Feeding this value into a new list request with the `page_token` parameter

            gives the next page of the results.


            When `next_page_token` is not filled in, there is no next page and

            the list returned is the last page in the result set.


            Pagination tokens have a limited lifetime.
          type: string
        projects:
          description: |-
            The list of Projects that matched the list filter. This list can
            be paginated.
          items:
            $ref: "#/components/schemas/Project"
          type: array
      type: object
    Organization:
      description: |-
        The root node in the resource hierarchy to which a particular entity's
        (e.g., company) resources belong.
      properties:
        creationTime:
          description: Timestamp when the Organization was created. Assigned by the server.
          format: google-datetime
          type: string
        displayName:
          description: |-
            A human-readable string that refers to the Organization in the
            GCP Console UI. This string is set by the server and cannot be
            changed. The string will be set to the primary domain (for example,
            "google.com") of the G Suite customer that owns the organization.
          type: string
        lifecycleState:
          description: The organization's current lifecycle state. Assigned by the server.
          enum:
            - LIFECYCLE_STATE_UNSPECIFIED
            - ACTIVE
            - DELETE_REQUESTED
          type: string
        name:
          description: >-
            Output only. The resource name of the organization. This is the

            organization's relative path in the API. Its format is

            "organizations/[organization_id]". For example, "organizations/1234".
          type: string
        organizationId:
          description: >-
            An immutable id for the Organization that is assigned on creation.
            This

            should be omitted when creating a new Organization.

            This field is read-only.
          type: string
        owner:
          $ref: "#/components/schemas/OrganizationOwner"
      type: object
    OrganizationOwner:
      description: >-
        The entity that owns an Organization. The lifetime of the Organization
        and

        all of its descendants are bound to the `OrganizationOwner`. If the

        `OrganizationOwner` is deleted, the Organization and all its descendants will

        be deleted.
      properties:
        directoryCustomerId:
          description: The G Suite customer id used in the Directory API.
          type: string
      type: object
    Policy:
      description: >-
        Defines an Identity and Access Management (IAM) policy. It is used to

        specify access control policies for Cloud Platform resources.



        A `Policy` consists of a list of `bindings`. A `binding` binds a list of

        `members` to a `role`, where the members can be user accounts, Google groups,

        Google domains, and service accounts. A `role` is a named list of permissions

        defined by IAM.


        **JSON Example**

            {
              "bindings": [
                {
                  "role": "roles/owner",
                  "members": [
                    "user:mike@example.com",
                    "group:admins@example.com",
                    "domain:google.com",
                    "serviceAccount:my-other-app@appspot.gserviceaccount.com"
                  ]
                },
                {
                  "role": "roles/viewer",
                  "members": ["user:sean@example.com"]
                }
              ]
            }

        **YAML Example**

            bindings:
            - members:
              - user:mike@example.com
              - group:admins@example.com
              - domain:google.com
              - serviceAccount:my-other-app@appspot.gserviceaccount.com
              role: roles/owner
            - members:
              - user:sean@example.com
              role: roles/viewer


        For a description of IAM and its features, see the

        [IAM developer's guide](https://cloud.google.com/iam/docs).
      properties:
        auditConfigs:
          description: Specifies cloud audit logging configuration for this policy.
          items:
            $ref: "#/components/schemas/AuditConfig"
          type: array
        bindings:
          description: |-
            Associates a list of `members` to a `role`.
            `bindings` with no members will result in an error.
          items:
            $ref: "#/components/schemas/Binding"
          type: array
        etag:
          description: >-
            `etag` is used for optimistic concurrency control as a way to help

            prevent simultaneous updates of a policy from overwriting each other.

            It is strongly suggested that systems make use of the `etag` in the

            read-modify-write cycle to perform policy updates in order to avoid race

            conditions: An `etag` is returned in the response to `getIamPolicy`, and

            systems are expected to put that etag in the request to `setIamPolicy` to

            ensure that their change will be applied to the same version of the policy.


            If no `etag` is provided in the call to `setIamPolicy`, then the existing

            policy is overwritten.
          format: byte
          type: string
        version:
          description: >-
            Specifies the format of the policy.


            Valid values are 0, 1, and 3. Requests specifying an invalid value will be

            rejected.


            Policies with any conditional bindings must specify version 3. Policies

            without any conditional bindings may specify any valid value or leave the

            field unset.
          format: int32
          type: integer
      type: object
    Project:
      description: |-
        A Project is a high-level Google Cloud Platform entity.  It is a
        container for ACLs, APIs, App Engine Apps, VMs, and other
        Google Cloud Platform resources.
      properties:
        createTime:
          description: |-
            Creation time.

            Read-only.
          format: google-datetime
          type: string
        labels:
          additionalProperties:
            type: string
          description: >-
            The labels associated with this Project.


            Label keys must be between 1 and 63 characters long and must conform

            to the following regular expression: \[a-z\](\[-a-z0-9\]*\[a-z0-9\])?.


            Label values must be between 0 and 63 characters long and must conform

            to the regular expression (\[a-z\](\[-a-z0-9\]*\[a-z0-9\])?)?. A label

            value can be empty.


            No more than 256 labels can be associated with a given resource.


            Clients should store labels in a representation such as JSON that does not

            depend on specific characters being disallowed.


            Example: <code>"environment" : "dev"</code>

            Read-write.
          type: object
        lifecycleState:
          description: |-
            The Project lifecycle state.

            Read-only.
          enum:
            - LIFECYCLE_STATE_UNSPECIFIED
            - ACTIVE
            - DELETE_REQUESTED
            - DELETE_IN_PROGRESS
          type: string
        name:
          description: |-
            The optional user-assigned display name of the Project.
            When present it must be between 4 to 30 characters.
            Allowed characters are: lowercase and uppercase letters, numbers,
            hyphen, single-quote, double-quote, space, and exclamation point.

            Example: <code>My Project</code>
            Read-write.
          type: string
        parent:
          $ref: "#/components/schemas/ResourceId"
        projectId:
          description: |-
            The unique, user-assigned ID of the Project.
            It must be 6 to 30 lowercase letters, digits, or hyphens.
            It must start with a letter.
            Trailing hyphens are prohibited.

            Example: <code>tokyo-rain-123</code>
            Read-only after creation.
          type: string
        projectNumber:
          description: |-
            The number uniquely identifying the project.

            Example: <code>415104041262</code>
            Read-only.
          format: int64
          type: string
      type: object
    ProjectCreationStatus:
      description: >-
        A status object which is used as the `metadata` field for the Operation

        returned by CreateProject. It provides insight for when significant phases of

        Project creation have completed.
      properties:
        createTime:
          description: Creation time of the project creation workflow.
          format: google-datetime
          type: string
        gettable:
          description: >-
            True if the project can be retrieved using GetProject. No other
            operations

            on the project are guaranteed to work until the project creation is

            complete.
          type: boolean
        ready:
          description: True if the project creation process is complete.
          type: boolean
      type: object
    ResourceId:
      description: >-
        A container to reference an id for any resource type. A `resource` in
        Google

        Cloud Platform is a generic term for something you (a developer) may want to

        interact with through one of our API's. Some examples are an App Engine app,

        a Compute Engine instance, a Cloud SQL database, and so on.
      properties:
        id:
          description: >-
            Required field for the type-specific id. This should correspond to
            the id

            used in the type-specific API's.
          type: string
        type:
          description: >-
            Required field representing the resource type this id is for.

            At present, the valid types are "project", "folder", and "organization".
          type: string
      type: object
    SetIamPolicyRequest:
      description: Request message for `SetIamPolicy` method.
      properties:
        policy:
          $ref: "#/components/schemas/Policy"
        updateMask:
          description: >-
            OPTIONAL: A FieldMask specifying which fields of the policy to
            modify. Only

            the fields in the mask will be modified. If no mask is provided, the

            following default mask is used:

            paths: "bindings, etag"

            This field is only used by Cloud IAM.
          format: google-fieldmask
          type: string
      type: object
    TestIamPermissionsRequest:
      description: Request message for `TestIamPermissions` method.
      properties:
        permissions:
          description: >-
            The set of permissions to check for the `resource`. Permissions with

            wildcards (such as '*' or 'storage.*') are not allowed. For more

            information see

            [IAM Overview](https://cloud.google.com/iam/docs/overview#permissions).
          items:
            type: string
          type: array
      type: object
    TestIamPermissionsResponse:
      description: Response message for `TestIamPermissions` method.
      properties:
        permissions:
          description: |-
            A subset of `TestPermissionsRequest.permissions` that the caller is
            allowed.
          items:
            type: string
          type: array
      type: object
    UndeleteProjectRequest:
      description: |-
        The request sent to the UndeleteProject
        method.
      properties: {}
      type: object
