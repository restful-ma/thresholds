openapi: 3.0.0
info:
  version: 2017-10-01
  x-release: v4
  title: Amazon WorkMail
  description: <p>Amazon WorkMail is a secure, managed business email and calendaring
    service with support for existing desktop and mobile email clients. You can
    access your email, contacts, and calendars using Microsoft Outlook, your
    browser, or other native iOS and Android email applications. You can
    integrate WorkMail with your existing corporate directory and control both
    the keys that encrypt your data and the location in which your data is
    stored.</p> <p>The WorkMail API is designed for the following scenarios:</p>
    <ul> <li> <p>Listing and describing organizations</p> </li> </ul> <ul> <li>
    <p>Managing users</p> </li> </ul> <ul> <li> <p>Managing groups</p> </li>
    </ul> <ul> <li> <p>Managing resources</p> </li> </ul> <p>All WorkMail API
    operations are Amazon-authenticated and certificate-signed. They not only
    require the use of the AWS SDK, but also allow for the exclusive use of AWS
    Identity and Access Management users and roles to help facilitate access,
    trust, and permission policies. By creating a role and allowing an IAM user
    to access the WorkMail site, the IAM user gains full administrative
    visibility into the entire WorkMail organization (or as set in the IAM
    policy). This includes, but is not limited to, the ability to create,
    update, and delete users, groups, and resources. This allows developers to
    perform the scenarios listed above, as well as give users the ability to
    grant access on a selective basis using the IAM model.</p>
  x-logo:
    url: https://twitter.com/awscloud/profile_image?size=original
    backgroundColor: "#FFFFFF"
  termsOfService: https://aws.amazon.com/service-terms/
  contact:
    name: Mike Ralphson
    email: mike.ralphson@gmail.com
    url: https://github.com/mermade/aws2openapi
    x-twitter: PermittedSoc
  license:
    name: Apache 2.0 License
    url: http://www.apache.org/licenses/
  x-providerName: amazonaws.com
  x-serviceName: workmail
  x-origin:
    - contentType: application/json
      url: https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/workmail-2017-10-01.normal.json
      converter:
        url: https://github.com/mermade/aws2openapi
        version: 1.0.0
      x-apisguru-direct: true
  x-apiClientRegistration:
    url: https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct
  x-apisguru-categories:
    - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: https://docs.aws.amazon.com/workmail/
x-hasEquivalentPaths: true
security:
  - hmac: []
paths:
  /#X-Amz-Target=WorkMailService.AssociateDelegateToResource:
    post:
      operationId: AssociateDelegateToResource
      description: Adds a member (user or group) to the resource's set of delegates.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AssociateDelegateToResourceResponse"
        "480":
          description: EntityNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EntityNotFoundException"
        "481":
          description: EntityStateException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EntityStateException"
        "482":
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterException"
        "483":
          description: OrganizationNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OrganizationNotFoundException"
        "484":
          description: OrganizationStateException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OrganizationStateException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - WorkMailService.AssociateDelegateToResource
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AssociateDelegateToResourceRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=WorkMailService.AssociateMemberToGroup:
    post:
      operationId: AssociateMemberToGroup
      description: Adds a member (user or group) to the group's set.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AssociateMemberToGroupResponse"
        "480":
          description: DirectoryServiceAuthenticationFailedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DirectoryServiceAuthenticationFailedExc\
                  eption"
        "481":
          description: DirectoryUnavailableException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DirectoryUnavailableException"
        "482":
          description: EntityNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EntityNotFoundException"
        "483":
          description: EntityStateException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EntityStateException"
        "484":
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterException"
        "485":
          description: OrganizationNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OrganizationNotFoundException"
        "486":
          description: OrganizationStateException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OrganizationStateException"
        "487":
          description: UnsupportedOperationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnsupportedOperationException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - WorkMailService.AssociateMemberToGroup
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AssociateMemberToGroupRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=WorkMailService.CreateAlias:
    post:
      operationId: CreateAlias
      description: Adds an alias to the set of a given member (user or group) of Amazon
        WorkMail.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateAliasResponse"
        "480":
          description: EmailAddressInUseException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EmailAddressInUseException"
        "481":
          description: EntityNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EntityNotFoundException"
        "482":
          description: EntityStateException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EntityStateException"
        "483":
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterException"
        "484":
          description: MailDomainNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MailDomainNotFoundException"
        "485":
          description: MailDomainStateException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MailDomainStateException"
        "486":
          description: OrganizationNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OrganizationNotFoundException"
        "487":
          description: OrganizationStateException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OrganizationStateException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - WorkMailService.CreateAlias
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateAliasRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=WorkMailService.CreateGroup:
    post:
      operationId: CreateGroup
      description: Creates a group that can be used in Amazon WorkMail by calling the
        <a>RegisterToWorkMail</a> operation.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateGroupResponse"
        "480":
          description: DirectoryServiceAuthenticationFailedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DirectoryServiceAuthenticationFailedExc\
                  eption"
        "481":
          description: DirectoryUnavailableException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DirectoryUnavailableException"
        "482":
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterException"
        "483":
          description: NameAvailabilityException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NameAvailabilityException"
        "484":
          description: OrganizationNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OrganizationNotFoundException"
        "485":
          description: OrganizationStateException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OrganizationStateException"
        "486":
          description: ReservedNameException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ReservedNameException"
        "487":
          description: UnsupportedOperationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnsupportedOperationException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - WorkMailService.CreateGroup
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateGroupRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=WorkMailService.CreateResource:
    post:
      operationId: CreateResource
      description: "Creates a new Amazon WorkMail resource. "
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateResourceResponse"
        "480":
          description: DirectoryServiceAuthenticationFailedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DirectoryServiceAuthenticationFailedExc\
                  eption"
        "481":
          description: DirectoryUnavailableException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DirectoryUnavailableException"
        "482":
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterException"
        "483":
          description: NameAvailabilityException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NameAvailabilityException"
        "484":
          description: OrganizationNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OrganizationNotFoundException"
        "485":
          description: OrganizationStateException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OrganizationStateException"
        "486":
          description: ReservedNameException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ReservedNameException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - WorkMailService.CreateResource
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateResourceRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=WorkMailService.CreateUser:
    post:
      operationId: CreateUser
      description: Creates a user who can be used in Amazon WorkMail by calling the
        <a>RegisterToWorkMail</a> operation.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateUserResponse"
        "480":
          description: DirectoryServiceAuthenticationFailedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DirectoryServiceAuthenticationFailedExc\
                  eption"
        "481":
          description: DirectoryUnavailableException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DirectoryUnavailableException"
        "482":
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterException"
        "483":
          description: InvalidPasswordException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidPasswordException"
        "484":
          description: NameAvailabilityException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NameAvailabilityException"
        "485":
          description: OrganizationNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OrganizationNotFoundException"
        "486":
          description: OrganizationStateException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OrganizationStateException"
        "487":
          description: ReservedNameException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ReservedNameException"
        "488":
          description: UnsupportedOperationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnsupportedOperationException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - WorkMailService.CreateUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateUserRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=WorkMailService.DeleteAlias:
    post:
      operationId: DeleteAlias
      description: Remove one or more specified aliases from a set of aliases for a given
        user.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteAliasResponse"
        "480":
          description: EntityNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EntityNotFoundException"
        "481":
          description: EntityStateException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EntityStateException"
        "482":
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterException"
        "483":
          description: OrganizationNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OrganizationNotFoundException"
        "484":
          description: OrganizationStateException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OrganizationStateException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - WorkMailService.DeleteAlias
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeleteAliasRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=WorkMailService.DeleteGroup:
    post:
      operationId: DeleteGroup
      description: Deletes a group from Amazon WorkMail.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteGroupResponse"
        "480":
          description: DirectoryServiceAuthenticationFailedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DirectoryServiceAuthenticationFailedExc\
                  eption"
        "481":
          description: DirectoryUnavailableException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DirectoryUnavailableException"
        "482":
          description: EntityStateException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EntityStateException"
        "483":
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterException"
        "484":
          description: OrganizationNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OrganizationNotFoundException"
        "485":
          description: OrganizationStateException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OrganizationStateException"
        "486":
          description: UnsupportedOperationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnsupportedOperationException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - WorkMailService.DeleteGroup
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeleteGroupRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=WorkMailService.DeleteMailboxPermissions:
    post:
      operationId: DeleteMailboxPermissions
      description: Deletes permissions granted to a member (user or group).
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteMailboxPermissionsResponse"
        "480":
          description: EntityNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EntityNotFoundException"
        "481":
          description: EntityStateException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EntityStateException"
        "482":
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterException"
        "483":
          description: OrganizationNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OrganizationNotFoundException"
        "484":
          description: OrganizationStateException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OrganizationStateException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - WorkMailService.DeleteMailboxPermissions
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeleteMailboxPermissionsRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=WorkMailService.DeleteResource:
    post:
      operationId: DeleteResource
      description: "Deletes the specified resource. "
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteResourceResponse"
        "480":
          description: EntityStateException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EntityStateException"
        "481":
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterException"
        "482":
          description: OrganizationNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OrganizationNotFoundException"
        "483":
          description: OrganizationStateException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OrganizationStateException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - WorkMailService.DeleteResource
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeleteResourceRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=WorkMailService.DeleteUser:
    post:
      operationId: DeleteUser
      description: <p>Deletes a user from Amazon WorkMail and all subsequent systems.
        Before you can delete a user, the user state must be
        <code>DISABLED</code>. Use the <a>DescribeUser</a> action to confirm the
        user state.</p> <p>Deleting a user is permanent and cannot be undone.
        WorkMail archives user mailboxes for 30 days before they are permanently
        removed.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteUserResponse"
        "480":
          description: DirectoryServiceAuthenticationFailedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DirectoryServiceAuthenticationFailedExc\
                  eption"
        "481":
          description: DirectoryUnavailableException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DirectoryUnavailableException"
        "482":
          description: EntityStateException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EntityStateException"
        "483":
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterException"
        "484":
          description: OrganizationNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OrganizationNotFoundException"
        "485":
          description: OrganizationStateException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OrganizationStateException"
        "486":
          description: UnsupportedOperationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnsupportedOperationException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - WorkMailService.DeleteUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeleteUserRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=WorkMailService.DeregisterFromWorkMail:
    post:
      operationId: DeregisterFromWorkMail
      description: Mark a user, group, or resource as no longer used in Amazon WorkMail.
        This action disassociates the mailbox and schedules it for clean-up.
        WorkMail keeps mailboxes for 30 days before they are permanently
        removed. The functionality in the console is <i>Disable</i>.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeregisterFromWorkMailResponse"
        "480":
          description: EntityNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EntityNotFoundException"
        "481":
          description: EntityStateException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EntityStateException"
        "482":
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterException"
        "483":
          description: OrganizationNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OrganizationNotFoundException"
        "484":
          description: OrganizationStateException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OrganizationStateException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - WorkMailService.DeregisterFromWorkMail
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeregisterFromWorkMailRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=WorkMailService.DescribeGroup:
    post:
      operationId: DescribeGroup
      description: Returns the data available for the group.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeGroupResponse"
        "480":
          description: EntityNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EntityNotFoundException"
        "481":
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterException"
        "482":
          description: OrganizationNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OrganizationNotFoundException"
        "483":
          description: OrganizationStateException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OrganizationStateException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - WorkMailService.DescribeGroup
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DescribeGroupRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=WorkMailService.DescribeOrganization:
    post:
      operationId: DescribeOrganization
      description: Provides more information regarding a given organization based on its
        identifier.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeOrganizationResponse"
        "480":
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterException"
        "481":
          description: OrganizationNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OrganizationNotFoundException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - WorkMailService.DescribeOrganization
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DescribeOrganizationRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=WorkMailService.DescribeResource:
    post:
      operationId: DescribeResource
      description: Returns the data available for the resource.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeResourceResponse"
        "480":
          description: EntityNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EntityNotFoundException"
        "481":
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterException"
        "482":
          description: OrganizationNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OrganizationNotFoundException"
        "483":
          description: OrganizationStateException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OrganizationStateException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - WorkMailService.DescribeResource
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DescribeResourceRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=WorkMailService.DescribeUser:
    post:
      operationId: DescribeUser
      description: Provides information regarding the user.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeUserResponse"
        "480":
          description: EntityNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EntityNotFoundException"
        "481":
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterException"
        "482":
          description: OrganizationNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OrganizationNotFoundException"
        "483":
          description: OrganizationStateException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OrganizationStateException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - WorkMailService.DescribeUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DescribeUserRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=WorkMailService.DisassociateDelegateFromResource:
    post:
      operationId: DisassociateDelegateFromResource
      description: Removes a member from the resource's set of delegates.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DisassociateDelegateFromResourceResponse"
        "480":
          description: EntityNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EntityNotFoundException"
        "481":
          description: EntityStateException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EntityStateException"
        "482":
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterException"
        "483":
          description: OrganizationNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OrganizationNotFoundException"
        "484":
          description: OrganizationStateException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OrganizationStateException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - WorkMailService.DisassociateDelegateFromResource
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DisassociateDelegateFromResourceRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=WorkMailService.DisassociateMemberFromGroup:
    post:
      operationId: DisassociateMemberFromGroup
      description: Removes a member from a group.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DisassociateMemberFromGroupResponse"
        "480":
          description: DirectoryServiceAuthenticationFailedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DirectoryServiceAuthenticationFailedExc\
                  eption"
        "481":
          description: DirectoryUnavailableException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DirectoryUnavailableException"
        "482":
          description: EntityNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EntityNotFoundException"
        "483":
          description: EntityStateException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EntityStateException"
        "484":
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterException"
        "485":
          description: OrganizationNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OrganizationNotFoundException"
        "486":
          description: OrganizationStateException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OrganizationStateException"
        "487":
          description: UnsupportedOperationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnsupportedOperationException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - WorkMailService.DisassociateMemberFromGroup
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DisassociateMemberFromGroupRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=WorkMailService.GetMailboxDetails:
    post:
      operationId: GetMailboxDetails
      description: Requests a user's mailbox details for a specified organization and user.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetMailboxDetailsResponse"
        "480":
          description: OrganizationNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OrganizationNotFoundException"
        "481":
          description: OrganizationStateException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OrganizationStateException"
        "482":
          description: EntityNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EntityNotFoundException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - WorkMailService.GetMailboxDetails
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GetMailboxDetailsRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=WorkMailService.ListAliases:
    post:
      operationId: ListAliases
      description: Creates a paginated call to list the aliases associated with a given
        entity.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListAliasesResponse"
        "480":
          description: EntityNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EntityNotFoundException"
        "481":
          description: EntityStateException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EntityStateException"
        "482":
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterException"
        "483":
          description: OrganizationNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OrganizationNotFoundException"
        "484":
          description: OrganizationStateException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OrganizationStateException"
      parameters:
        - name: MaxResults
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: NextToken
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - WorkMailService.ListAliases
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ListAliasesRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=WorkMailService.ListGroupMembers:
    post:
      operationId: ListGroupMembers
      description: Returns an overview of the members of a group. Users and groups can be
        members of a group.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListGroupMembersResponse"
        "480":
          description: EntityNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EntityNotFoundException"
        "481":
          description: EntityStateException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EntityStateException"
        "482":
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterException"
        "483":
          description: OrganizationNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OrganizationNotFoundException"
        "484":
          description: OrganizationStateException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OrganizationStateException"
      parameters:
        - name: MaxResults
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: NextToken
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - WorkMailService.ListGroupMembers
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ListGroupMembersRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=WorkMailService.ListGroups:
    post:
      operationId: ListGroups
      description: Returns summaries of the organization's groups.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListGroupsResponse"
        "480":
          description: EntityNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EntityNotFoundException"
        "481":
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterException"
        "482":
          description: OrganizationNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OrganizationNotFoundException"
        "483":
          description: OrganizationStateException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OrganizationStateException"
      parameters:
        - name: MaxResults
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: NextToken
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - WorkMailService.ListGroups
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ListGroupsRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=WorkMailService.ListMailboxPermissions:
    post:
      operationId: ListMailboxPermissions
      description: Lists the mailbox permissions associated with a user, group, or resource
        mailbox.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListMailboxPermissionsResponse"
        "480":
          description: EntityNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EntityNotFoundException"
        "481":
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterException"
        "482":
          description: OrganizationNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OrganizationNotFoundException"
        "483":
          description: OrganizationStateException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OrganizationStateException"
      parameters:
        - name: MaxResults
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: NextToken
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - WorkMailService.ListMailboxPermissions
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ListMailboxPermissionsRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=WorkMailService.ListOrganizations:
    post:
      operationId: ListOrganizations
      description: Returns summaries of the customer's non-deleted organizations.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListOrganizationsResponse"
        "480":
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterException"
      parameters:
        - name: MaxResults
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: NextToken
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - WorkMailService.ListOrganizations
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ListOrganizationsRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=WorkMailService.ListResourceDelegates:
    post:
      operationId: ListResourceDelegates
      description: Lists the delegates associated with a resource. Users and groups can be
        resource delegates and answer requests on behalf of the resource.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListResourceDelegatesResponse"
        "480":
          description: EntityNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EntityNotFoundException"
        "481":
          description: EntityStateException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EntityStateException"
        "482":
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterException"
        "483":
          description: OrganizationNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OrganizationNotFoundException"
        "484":
          description: OrganizationStateException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OrganizationStateException"
      parameters:
        - name: MaxResults
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: NextToken
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - WorkMailService.ListResourceDelegates
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ListResourceDelegatesRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=WorkMailService.ListResources:
    post:
      operationId: ListResources
      description: Returns summaries of the organization's resources.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListResourcesResponse"
        "480":
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterException"
        "481":
          description: OrganizationNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OrganizationNotFoundException"
        "482":
          description: OrganizationStateException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OrganizationStateException"
      parameters:
        - name: MaxResults
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: NextToken
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - WorkMailService.ListResources
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ListResourcesRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=WorkMailService.ListUsers:
    post:
      operationId: ListUsers
      description: Returns summaries of the organization's users.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListUsersResponse"
        "480":
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterException"
        "481":
          description: OrganizationNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OrganizationNotFoundException"
        "482":
          description: OrganizationStateException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OrganizationStateException"
      parameters:
        - name: MaxResults
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: NextToken
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - WorkMailService.ListUsers
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ListUsersRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=WorkMailService.PutMailboxPermissions:
    post:
      operationId: PutMailboxPermissions
      description: Sets permissions for a user, group, or resource. This replaces any
        pre-existing permissions.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PutMailboxPermissionsResponse"
        "480":
          description: EntityNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EntityNotFoundException"
        "481":
          description: EntityStateException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EntityStateException"
        "482":
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterException"
        "483":
          description: OrganizationNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OrganizationNotFoundException"
        "484":
          description: OrganizationStateException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OrganizationStateException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - WorkMailService.PutMailboxPermissions
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PutMailboxPermissionsRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=WorkMailService.RegisterToWorkMail:
    post:
      operationId: RegisterToWorkMail
      description: <p>Registers an existing and disabled user, group, or resource for
        Amazon WorkMail use by associating a mailbox and calendaring
        capabilities. It performs no change if the user, group, or resource is
        enabled and fails if the user, group, or resource is deleted. This
        operation results in the accumulation of costs. For more information,
        see <a href="https://aws.amazon.com//workmail/pricing">Pricing</a>. The
        equivalent console functionality for this operation is <i>Enable</i>.
        </p> <p>Users can either be created by calling the <a>CreateUser</a> API
        operation or they can be synchronized from your directory. For more
        information, see <a>DeregisterFromWorkMail</a>.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RegisterToWorkMailResponse"
        "480":
          description: DirectoryServiceAuthenticationFailedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DirectoryServiceAuthenticationFailedExc\
                  eption"
        "481":
          description: DirectoryUnavailableException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DirectoryUnavailableException"
        "482":
          description: EmailAddressInUseException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EmailAddressInUseException"
        "483":
          description: EntityNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EntityNotFoundException"
        "484":
          description: EntityStateException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EntityStateException"
        "485":
          description: EntityAlreadyRegisteredException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EntityAlreadyRegisteredException"
        "486":
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterException"
        "487":
          description: MailDomainNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MailDomainNotFoundException"
        "488":
          description: MailDomainStateException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MailDomainStateException"
        "489":
          description: OrganizationNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OrganizationNotFoundException"
        "490":
          description: OrganizationStateException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OrganizationStateException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - WorkMailService.RegisterToWorkMail
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RegisterToWorkMailRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=WorkMailService.ResetPassword:
    post:
      operationId: ResetPassword
      description: Allows the administrator to reset the password for a user.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResetPasswordResponse"
        "480":
          description: DirectoryServiceAuthenticationFailedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DirectoryServiceAuthenticationFailedExc\
                  eption"
        "481":
          description: DirectoryUnavailableException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DirectoryUnavailableException"
        "482":
          description: EntityNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EntityNotFoundException"
        "483":
          description: EntityStateException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EntityStateException"
        "484":
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterException"
        "485":
          description: InvalidPasswordException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidPasswordException"
        "486":
          description: OrganizationNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OrganizationNotFoundException"
        "487":
          description: OrganizationStateException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OrganizationStateException"
        "488":
          description: UnsupportedOperationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnsupportedOperationException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - WorkMailService.ResetPassword
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ResetPasswordRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=WorkMailService.UpdateMailboxQuota:
    post:
      operationId: UpdateMailboxQuota
      description: Updates a user's current mailbox quota for a specified organization and
        user.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateMailboxQuotaResponse"
        "480":
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterException"
        "481":
          description: OrganizationNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OrganizationNotFoundException"
        "482":
          description: OrganizationStateException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OrganizationStateException"
        "483":
          description: EntityNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EntityNotFoundException"
        "484":
          description: EntityStateException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EntityStateException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - WorkMailService.UpdateMailboxQuota
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateMailboxQuotaRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=WorkMailService.UpdatePrimaryEmailAddress:
    post:
      operationId: UpdatePrimaryEmailAddress
      description: Updates the primary email for a user, group, or resource. The current
        email is moved into the list of aliases (or swapped between an existing
        alias and the current primary email), and the email provided in the
        input is promoted as the primary.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdatePrimaryEmailAddressResponse"
        "480":
          description: DirectoryServiceAuthenticationFailedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DirectoryServiceAuthenticationFailedExc\
                  eption"
        "481":
          description: DirectoryUnavailableException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DirectoryUnavailableException"
        "482":
          description: EmailAddressInUseException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EmailAddressInUseException"
        "483":
          description: EntityNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EntityNotFoundException"
        "484":
          description: EntityStateException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EntityStateException"
        "485":
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterException"
        "486":
          description: MailDomainNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MailDomainNotFoundException"
        "487":
          description: MailDomainStateException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MailDomainStateException"
        "488":
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterException"
        "489":
          description: OrganizationNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OrganizationNotFoundException"
        "490":
          description: OrganizationStateException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OrganizationStateException"
        "491":
          description: UnsupportedOperationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnsupportedOperationException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - WorkMailService.UpdatePrimaryEmailAddress
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdatePrimaryEmailAddressRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=WorkMailService.UpdateResource:
    post:
      operationId: UpdateResource
      description: Updates data for the resource. To have the latest information, it must
        be preceded by a <a>DescribeResource</a> call. The dataset in the
        request should be the one expected when performing another
        <code>DescribeResource</code> call.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateResourceResponse"
        "480":
          description: DirectoryUnavailableException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DirectoryUnavailableException"
        "481":
          description: EntityNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EntityNotFoundException"
        "482":
          description: EntityStateException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EntityStateException"
        "483":
          description: InvalidConfigurationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidConfigurationException"
        "484":
          description: EmailAddressInUseException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EmailAddressInUseException"
        "485":
          description: MailDomainNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MailDomainNotFoundException"
        "486":
          description: MailDomainStateException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MailDomainStateException"
        "487":
          description: NameAvailabilityException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NameAvailabilityException"
        "488":
          description: OrganizationNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OrganizationNotFoundException"
        "489":
          description: OrganizationStateException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OrganizationStateException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - WorkMailService.UpdateResource
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateResourceRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
servers:
  - url: http://workmail.{region}.amazonaws.com
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-south-1
          - sa-east-1
        default: us-east-1
    description: The Amazon WorkMail multi-region endpoint
  - url: https://workmail.{region}.amazonaws.com
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-south-1
          - sa-east-1
        default: us-east-1
    description: The Amazon WorkMail multi-region endpoint
  - url: http://workmail.{region}.amazonaws.com.cn
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The Amazon WorkMail endpoint for China (Beijing) and China (Ningxia)
  - url: https://workmail.{region}.amazonaws.com.cn
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The Amazon WorkMail endpoint for China (Beijing) and China (Ningxia)
components:
  parameters:
    X-Amz-Content-Sha256:
      name: X-Amz-Content-Sha256
      in: header
      required: false
      schema:
        type: string
    X-Amz-Date:
      name: X-Amz-Date
      in: header
      required: false
      schema:
        type: string
    X-Amz-Algorithm:
      name: X-Amz-Algorithm
      in: header
      required: false
      schema:
        type: string
    X-Amz-Credential:
      name: X-Amz-Credential
      in: header
      required: false
      schema:
        type: string
    X-Amz-Security-Token:
      name: X-Amz-Security-Token
      in: header
      required: false
      schema:
        type: string
    X-Amz-Signature:
      name: X-Amz-Signature
      in: header
      required: false
      schema:
        type: string
    X-Amz-SignedHeaders:
      name: X-Amz-SignedHeaders
      in: header
      required: false
      schema:
        type: string
  securitySchemes:
    hmac:
      type: apiKey
      name: Authorization
      in: header
      description: Amazon Signature authorization v4
      x-amazon-apigateway-authtype: awsSigv4
  schemas:
    AssociateDelegateToResourceResponse:
      type: object
      properties: {}
    AssociateDelegateToResourceRequest:
      type: object
      required:
        - OrganizationId
        - ResourceId
        - EntityId
      properties:
        OrganizationId:
          $ref: "#/components/schemas/OrganizationId"
        ResourceId:
          $ref: "#/components/schemas/ResourceId"
        EntityId:
          $ref: "#/components/schemas/WorkMailIdentifier"
    EntityNotFoundException: {}
    EntityStateException: {}
    InvalidParameterException: {}
    OrganizationNotFoundException: {}
    OrganizationStateException: {}
    AssociateMemberToGroupResponse:
      type: object
      properties: {}
    AssociateMemberToGroupRequest:
      type: object
      required:
        - OrganizationId
        - GroupId
        - MemberId
      properties:
        OrganizationId:
          $ref: "#/components/schemas/OrganizationId"
        GroupId:
          $ref: "#/components/schemas/WorkMailIdentifier"
        MemberId:
          $ref: "#/components/schemas/WorkMailIdentifier"
    DirectoryServiceAuthenticationFailedException: {}
    DirectoryUnavailableException: {}
    UnsupportedOperationException: {}
    CreateAliasResponse:
      type: object
      properties: {}
    CreateAliasRequest:
      type: object
      required:
        - OrganizationId
        - EntityId
        - Alias
      properties:
        OrganizationId:
          $ref: "#/components/schemas/OrganizationId"
        EntityId:
          $ref: "#/components/schemas/WorkMailIdentifier"
        Alias:
          $ref: "#/components/schemas/EmailAddress"
    EmailAddressInUseException: {}
    MailDomainNotFoundException: {}
    MailDomainStateException: {}
    CreateGroupResponse:
      type: object
      properties:
        GroupId:
          $ref: "#/components/schemas/WorkMailIdentifier"
    CreateGroupRequest:
      type: object
      required:
        - OrganizationId
        - Name
      properties:
        OrganizationId:
          $ref: "#/components/schemas/OrganizationId"
        Name:
          $ref: "#/components/schemas/GroupName"
    NameAvailabilityException: {}
    ReservedNameException: {}
    CreateResourceResponse:
      type: object
      properties:
        ResourceId:
          $ref: "#/components/schemas/ResourceId"
    CreateResourceRequest:
      type: object
      required:
        - OrganizationId
        - Name
        - Type
      properties:
        OrganizationId:
          $ref: "#/components/schemas/OrganizationId"
        Name:
          $ref: "#/components/schemas/ResourceName"
        Type:
          $ref: "#/components/schemas/ResourceType"
    CreateUserResponse:
      type: object
      properties:
        UserId:
          $ref: "#/components/schemas/WorkMailIdentifier"
    CreateUserRequest:
      type: object
      required:
        - OrganizationId
        - Name
        - DisplayName
        - Password
      properties:
        OrganizationId:
          $ref: "#/components/schemas/OrganizationId"
        Name:
          $ref: "#/components/schemas/UserName"
        DisplayName:
          $ref: "#/components/schemas/String"
        Password:
          $ref: "#/components/schemas/Password"
    InvalidPasswordException: {}
    DeleteAliasResponse:
      type: object
      properties: {}
    DeleteAliasRequest:
      type: object
      required:
        - OrganizationId
        - EntityId
        - Alias
      properties:
        OrganizationId:
          $ref: "#/components/schemas/OrganizationId"
        EntityId:
          $ref: "#/components/schemas/WorkMailIdentifier"
        Alias:
          $ref: "#/components/schemas/EmailAddress"
    DeleteGroupResponse:
      type: object
      properties: {}
    DeleteGroupRequest:
      type: object
      required:
        - OrganizationId
        - GroupId
      properties:
        OrganizationId:
          $ref: "#/components/schemas/OrganizationId"
        GroupId:
          $ref: "#/components/schemas/WorkMailIdentifier"
    DeleteMailboxPermissionsResponse:
      type: object
      properties: {}
    DeleteMailboxPermissionsRequest:
      type: object
      required:
        - OrganizationId
        - EntityId
        - GranteeId
      properties:
        OrganizationId:
          $ref: "#/components/schemas/OrganizationId"
        EntityId:
          $ref: "#/components/schemas/WorkMailIdentifier"
        GranteeId:
          $ref: "#/components/schemas/WorkMailIdentifier"
    DeleteResourceResponse:
      type: object
      properties: {}
    DeleteResourceRequest:
      type: object
      required:
        - OrganizationId
        - ResourceId
      properties:
        OrganizationId:
          $ref: "#/components/schemas/OrganizationId"
        ResourceId:
          $ref: "#/components/schemas/ResourceId"
    DeleteUserResponse:
      type: object
      properties: {}
    DeleteUserRequest:
      type: object
      required:
        - OrganizationId
        - UserId
      properties:
        OrganizationId:
          $ref: "#/components/schemas/OrganizationId"
        UserId:
          $ref: "#/components/schemas/WorkMailIdentifier"
    DeregisterFromWorkMailResponse:
      type: object
      properties: {}
    DeregisterFromWorkMailRequest:
      type: object
      required:
        - OrganizationId
        - EntityId
      properties:
        OrganizationId:
          $ref: "#/components/schemas/OrganizationId"
        EntityId:
          $ref: "#/components/schemas/WorkMailIdentifier"
    DescribeGroupResponse:
      type: object
      properties:
        GroupId:
          $ref: "#/components/schemas/WorkMailIdentifier"
        Name:
          $ref: "#/components/schemas/GroupName"
        Email:
          $ref: "#/components/schemas/EmailAddress"
        State:
          $ref: "#/components/schemas/EntityState"
        EnabledDate:
          $ref: "#/components/schemas/Timestamp"
        DisabledDate:
          $ref: "#/components/schemas/Timestamp"
    DescribeGroupRequest:
      type: object
      required:
        - OrganizationId
        - GroupId
      properties:
        OrganizationId:
          $ref: "#/components/schemas/OrganizationId"
        GroupId:
          $ref: "#/components/schemas/WorkMailIdentifier"
    DescribeOrganizationResponse:
      type: object
      properties:
        OrganizationId:
          $ref: "#/components/schemas/OrganizationId"
        Alias:
          $ref: "#/components/schemas/OrganizationName"
        State:
          $ref: "#/components/schemas/String"
        DirectoryId:
          $ref: "#/components/schemas/String"
        DirectoryType:
          $ref: "#/components/schemas/String"
        DefaultMailDomain:
          $ref: "#/components/schemas/String"
        CompletedDate:
          $ref: "#/components/schemas/Timestamp"
        ErrorMessage:
          $ref: "#/components/schemas/String"
    DescribeOrganizationRequest:
      type: object
      required:
        - OrganizationId
      properties:
        OrganizationId:
          $ref: "#/components/schemas/OrganizationId"
    DescribeResourceResponse:
      type: object
      properties:
        ResourceId:
          $ref: "#/components/schemas/ResourceId"
        Email:
          $ref: "#/components/schemas/EmailAddress"
        Name:
          $ref: "#/components/schemas/ResourceName"
        Type:
          $ref: "#/components/schemas/ResourceType"
        BookingOptions:
          $ref: "#/components/schemas/BookingOptions"
        State:
          $ref: "#/components/schemas/EntityState"
        EnabledDate:
          $ref: "#/components/schemas/Timestamp"
        DisabledDate:
          $ref: "#/components/schemas/Timestamp"
    DescribeResourceRequest:
      type: object
      required:
        - OrganizationId
        - ResourceId
      properties:
        OrganizationId:
          $ref: "#/components/schemas/OrganizationId"
        ResourceId:
          $ref: "#/components/schemas/ResourceId"
    DescribeUserResponse:
      type: object
      properties:
        UserId:
          $ref: "#/components/schemas/WorkMailIdentifier"
        Name:
          $ref: "#/components/schemas/UserName"
        Email:
          $ref: "#/components/schemas/EmailAddress"
        DisplayName:
          $ref: "#/components/schemas/String"
        State:
          $ref: "#/components/schemas/EntityState"
        UserRole:
          $ref: "#/components/schemas/UserRole"
        EnabledDate:
          $ref: "#/components/schemas/Timestamp"
        DisabledDate:
          $ref: "#/components/schemas/Timestamp"
    DescribeUserRequest:
      type: object
      required:
        - OrganizationId
        - UserId
      properties:
        OrganizationId:
          $ref: "#/components/schemas/OrganizationId"
        UserId:
          $ref: "#/components/schemas/WorkMailIdentifier"
    DisassociateDelegateFromResourceResponse:
      type: object
      properties: {}
    DisassociateDelegateFromResourceRequest:
      type: object
      required:
        - OrganizationId
        - ResourceId
        - EntityId
      properties:
        OrganizationId:
          $ref: "#/components/schemas/OrganizationId"
        ResourceId:
          $ref: "#/components/schemas/ResourceId"
        EntityId:
          $ref: "#/components/schemas/WorkMailIdentifier"
    DisassociateMemberFromGroupResponse:
      type: object
      properties: {}
    DisassociateMemberFromGroupRequest:
      type: object
      required:
        - OrganizationId
        - GroupId
        - MemberId
      properties:
        OrganizationId:
          $ref: "#/components/schemas/OrganizationId"
        GroupId:
          $ref: "#/components/schemas/WorkMailIdentifier"
        MemberId:
          $ref: "#/components/schemas/WorkMailIdentifier"
    GetMailboxDetailsResponse:
      type: object
      properties:
        MailboxQuota:
          $ref: "#/components/schemas/MailboxQuota"
        MailboxSize:
          $ref: "#/components/schemas/MailboxSize"
    GetMailboxDetailsRequest:
      type: object
      required:
        - OrganizationId
        - UserId
      properties:
        OrganizationId:
          $ref: "#/components/schemas/OrganizationId"
        UserId:
          $ref: "#/components/schemas/WorkMailIdentifier"
    ListAliasesResponse:
      type: object
      properties:
        Aliases:
          $ref: "#/components/schemas/Aliases"
        NextToken:
          $ref: "#/components/schemas/NextToken"
    ListAliasesRequest:
      type: object
      required:
        - OrganizationId
        - EntityId
      properties:
        OrganizationId:
          $ref: "#/components/schemas/OrganizationId"
        EntityId:
          $ref: "#/components/schemas/WorkMailIdentifier"
        NextToken:
          $ref: "#/components/schemas/NextToken"
        MaxResults:
          $ref: "#/components/schemas/MaxResults"
    ListGroupMembersResponse:
      type: object
      properties:
        Members:
          $ref: "#/components/schemas/Members"
        NextToken:
          $ref: "#/components/schemas/NextToken"
    ListGroupMembersRequest:
      type: object
      required:
        - OrganizationId
        - GroupId
      properties:
        OrganizationId:
          $ref: "#/components/schemas/OrganizationId"
        GroupId:
          $ref: "#/components/schemas/WorkMailIdentifier"
        NextToken:
          $ref: "#/components/schemas/NextToken"
        MaxResults:
          $ref: "#/components/schemas/MaxResults"
    ListGroupsResponse:
      type: object
      properties:
        Groups:
          $ref: "#/components/schemas/Groups"
        NextToken:
          $ref: "#/components/schemas/NextToken"
    ListGroupsRequest:
      type: object
      required:
        - OrganizationId
      properties:
        OrganizationId:
          $ref: "#/components/schemas/OrganizationId"
        NextToken:
          $ref: "#/components/schemas/NextToken"
        MaxResults:
          $ref: "#/components/schemas/MaxResults"
    ListMailboxPermissionsResponse:
      type: object
      properties:
        Permissions:
          $ref: "#/components/schemas/Permissions"
        NextToken:
          $ref: "#/components/schemas/NextToken"
    ListMailboxPermissionsRequest:
      type: object
      required:
        - OrganizationId
        - EntityId
      properties:
        OrganizationId:
          $ref: "#/components/schemas/OrganizationId"
        EntityId:
          $ref: "#/components/schemas/WorkMailIdentifier"
        NextToken:
          $ref: "#/components/schemas/NextToken"
        MaxResults:
          $ref: "#/components/schemas/MaxResults"
    ListOrganizationsResponse:
      type: object
      properties:
        OrganizationSummaries:
          $ref: "#/components/schemas/OrganizationSummaries"
        NextToken:
          $ref: "#/components/schemas/NextToken"
    ListOrganizationsRequest:
      type: object
      properties:
        NextToken:
          $ref: "#/components/schemas/NextToken"
        MaxResults:
          $ref: "#/components/schemas/MaxResults"
    ListResourceDelegatesResponse:
      type: object
      properties:
        Delegates:
          $ref: "#/components/schemas/ResourceDelegates"
        NextToken:
          $ref: "#/components/schemas/NextToken"
    ListResourceDelegatesRequest:
      type: object
      required:
        - OrganizationId
        - ResourceId
      properties:
        OrganizationId:
          $ref: "#/components/schemas/OrganizationId"
        ResourceId:
          $ref: "#/components/schemas/WorkMailIdentifier"
        NextToken:
          $ref: "#/components/schemas/NextToken"
        MaxResults:
          $ref: "#/components/schemas/MaxResults"
    ListResourcesResponse:
      type: object
      properties:
        Resources:
          $ref: "#/components/schemas/Resources"
        NextToken:
          $ref: "#/components/schemas/NextToken"
    ListResourcesRequest:
      type: object
      required:
        - OrganizationId
      properties:
        OrganizationId:
          $ref: "#/components/schemas/OrganizationId"
        NextToken:
          $ref: "#/components/schemas/NextToken"
        MaxResults:
          $ref: "#/components/schemas/MaxResults"
    ListUsersResponse:
      type: object
      properties:
        Users:
          $ref: "#/components/schemas/Users"
        NextToken:
          $ref: "#/components/schemas/NextToken"
    ListUsersRequest:
      type: object
      required:
        - OrganizationId
      properties:
        OrganizationId:
          $ref: "#/components/schemas/OrganizationId"
        NextToken:
          $ref: "#/components/schemas/NextToken"
        MaxResults:
          $ref: "#/components/schemas/MaxResults"
    PutMailboxPermissionsResponse:
      type: object
      properties: {}
    PutMailboxPermissionsRequest:
      type: object
      required:
        - OrganizationId
        - EntityId
        - GranteeId
        - PermissionValues
      properties:
        OrganizationId:
          $ref: "#/components/schemas/OrganizationId"
        EntityId:
          $ref: "#/components/schemas/WorkMailIdentifier"
        GranteeId:
          $ref: "#/components/schemas/WorkMailIdentifier"
        PermissionValues:
          $ref: "#/components/schemas/PermissionValues"
    RegisterToWorkMailResponse:
      type: object
      properties: {}
    RegisterToWorkMailRequest:
      type: object
      required:
        - OrganizationId
        - EntityId
        - Email
      properties:
        OrganizationId:
          $ref: "#/components/schemas/OrganizationId"
        EntityId:
          $ref: "#/components/schemas/WorkMailIdentifier"
        Email:
          $ref: "#/components/schemas/EmailAddress"
    EntityAlreadyRegisteredException: {}
    ResetPasswordResponse:
      type: object
      properties: {}
    ResetPasswordRequest:
      type: object
      required:
        - OrganizationId
        - UserId
        - Password
      properties:
        OrganizationId:
          $ref: "#/components/schemas/OrganizationId"
        UserId:
          $ref: "#/components/schemas/WorkMailIdentifier"
        Password:
          $ref: "#/components/schemas/Password"
    UpdateMailboxQuotaResponse:
      type: object
      properties: {}
    UpdateMailboxQuotaRequest:
      type: object
      required:
        - OrganizationId
        - UserId
        - MailboxQuota
      properties:
        OrganizationId:
          $ref: "#/components/schemas/OrganizationId"
        UserId:
          $ref: "#/components/schemas/WorkMailIdentifier"
        MailboxQuota:
          $ref: "#/components/schemas/MailboxQuota"
    UpdatePrimaryEmailAddressResponse:
      type: object
      properties: {}
    UpdatePrimaryEmailAddressRequest:
      type: object
      required:
        - OrganizationId
        - EntityId
        - Email
      properties:
        OrganizationId:
          $ref: "#/components/schemas/OrganizationId"
        EntityId:
          $ref: "#/components/schemas/WorkMailIdentifier"
        Email:
          $ref: "#/components/schemas/EmailAddress"
    UpdateResourceResponse:
      type: object
      properties: {}
    UpdateResourceRequest:
      type: object
      required:
        - OrganizationId
        - ResourceId
      properties:
        OrganizationId:
          $ref: "#/components/schemas/OrganizationId"
        ResourceId:
          $ref: "#/components/schemas/ResourceId"
        Name:
          $ref: "#/components/schemas/ResourceName"
        BookingOptions:
          $ref: "#/components/schemas/BookingOptions"
    InvalidConfigurationException: {}
    EmailAddress:
      type: string
      pattern: "[a-zA-Z0-9._%+-]{1,64}@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}"
      minLength: 1
      maxLength: 254
    Aliases:
      type: array
      items:
        $ref: "#/components/schemas/EmailAddress"
    OrganizationId:
      type: string
      pattern: ^m-[0-9a-f]{32}$
    ResourceId:
      type: string
      pattern: ^r-[0-9a-f]{32}$
    WorkMailIdentifier:
      type: string
      minLength: 12
      maxLength: 256
    Boolean:
      type: boolean
    BookingOptions:
      type: object
      properties:
        AutoAcceptRequests:
          $ref: "#/components/schemas/Boolean"
        AutoDeclineRecurringRequests:
          $ref: "#/components/schemas/Boolean"
        AutoDeclineConflictingRequests:
          $ref: "#/components/schemas/Boolean"
      description: At least one delegate must be associated to the resource to disable
        automatic replies from the resource.
    GroupName:
      type: string
      pattern: "[\\u0020-\\u00FF]+"
      minLength: 1
      maxLength: 256
    ResourceName:
      type: string
      pattern: "[\\w\\-.]+(@[a-zA-Z0-9.\\-]+\\.[a-zA-Z0-9]{2,})?"
      minLength: 1
      maxLength: 20
    ResourceType:
      type: string
      enum:
        - ROOM
        - EQUIPMENT
    UserName:
      type: string
      pattern: "[\\w\\-.]+(@[a-zA-Z0-9.\\-]+\\.[a-zA-Z0-9]{2,})?"
      minLength: 1
      maxLength: 64
    String:
      type: string
      maxLength: 256
    Password:
      type: string
      pattern: "[\\u0020-\\u00FF]+"
      maxLength: 256
      format: password
    MemberType:
      type: string
      enum:
        - GROUP
        - USER
    Delegate:
      type: object
      required:
        - Id
        - Type
      properties:
        Id:
          $ref: "#/components/schemas/String"
        Type:
          $ref: "#/components/schemas/MemberType"
      description: The name of the attribute, which is one of the values defined in the
        UserAttribute enumeration.
    EntityState:
      type: string
      enum:
        - ENABLED
        - DISABLED
        - DELETED
    Timestamp:
      type: string
      format: date-time
    OrganizationName:
      type: string
      pattern: ^(?!d-)([\da-zA-Z]+)([-]*[\da-zA-Z])*
      minLength: 1
      maxLength: 62
    UserRole:
      type: string
      enum:
        - USER
        - RESOURCE
        - SYSTEM_USER
    MailboxQuota:
      type: integer
      minimum: 1
    MailboxSize:
      type: number
      format: double
      minimum: 0
    Group:
      type: object
      properties:
        Id:
          $ref: "#/components/schemas/WorkMailIdentifier"
        Email:
          $ref: "#/components/schemas/EmailAddress"
        Name:
          $ref: "#/components/schemas/GroupName"
        State:
          $ref: "#/components/schemas/EntityState"
        EnabledDate:
          $ref: "#/components/schemas/Timestamp"
        DisabledDate:
          $ref: "#/components/schemas/Timestamp"
      description: The representation of an Amazon WorkMail group.
    Groups:
      type: array
      items:
        $ref: "#/components/schemas/Group"
    NextToken:
      type: string
      minLength: 1
      maxLength: 1024
    MaxResults:
      type: integer
      minimum: 1
      maximum: 100
    Members:
      type: array
      items:
        $ref: "#/components/schemas/Member"
    Permissions:
      type: array
      items:
        $ref: "#/components/schemas/Permission"
    OrganizationSummaries:
      type: array
      items:
        $ref: "#/components/schemas/OrganizationSummary"
    ResourceDelegates:
      type: array
      items:
        $ref: "#/components/schemas/Delegate"
    Resources:
      type: array
      items:
        $ref: "#/components/schemas/Resource"
    Users:
      type: array
      items:
        $ref: "#/components/schemas/User"
    Member:
      type: object
      properties:
        Id:
          $ref: "#/components/schemas/String"
        Name:
          $ref: "#/components/schemas/String"
        Type:
          $ref: "#/components/schemas/MemberType"
        State:
          $ref: "#/components/schemas/EntityState"
        EnabledDate:
          $ref: "#/components/schemas/Timestamp"
        DisabledDate:
          $ref: "#/components/schemas/Timestamp"
      description: The representation of a user or group.
    OrganizationSummary:
      type: object
      properties:
        OrganizationId:
          $ref: "#/components/schemas/OrganizationId"
        Alias:
          $ref: "#/components/schemas/OrganizationName"
        ErrorMessage:
          $ref: "#/components/schemas/String"
        State:
          $ref: "#/components/schemas/String"
      description: The representation of an organization.
    PermissionValues:
      type: array
      items:
        $ref: "#/components/schemas/PermissionType"
    Permission:
      type: object
      required:
        - GranteeId
        - GranteeType
        - PermissionValues
      properties:
        GranteeId:
          $ref: "#/components/schemas/WorkMailIdentifier"
        GranteeType:
          $ref: "#/components/schemas/MemberType"
        PermissionValues:
          $ref: "#/components/schemas/PermissionValues"
      description: Permission granted to a user, group, or resource to access a certain
        aspect of another user, group, or resource mailbox.
    PermissionType:
      type: string
      enum:
        - FULL_ACCESS
        - SEND_AS
        - SEND_ON_BEHALF
    Resource:
      type: object
      properties:
        Id:
          $ref: "#/components/schemas/WorkMailIdentifier"
        Email:
          $ref: "#/components/schemas/EmailAddress"
        Name:
          $ref: "#/components/schemas/ResourceName"
        Type:
          $ref: "#/components/schemas/ResourceType"
        State:
          $ref: "#/components/schemas/EntityState"
        EnabledDate:
          $ref: "#/components/schemas/Timestamp"
        DisabledDate:
          $ref: "#/components/schemas/Timestamp"
      description: The representation of a resource.
    User:
      type: object
      properties:
        Id:
          $ref: "#/components/schemas/WorkMailIdentifier"
        Email:
          $ref: "#/components/schemas/EmailAddress"
        Name:
          $ref: "#/components/schemas/UserName"
        DisplayName:
          $ref: "#/components/schemas/String"
        State:
          $ref: "#/components/schemas/EntityState"
        UserRole:
          $ref: "#/components/schemas/UserRole"
        EnabledDate:
          $ref: "#/components/schemas/Timestamp"
        DisabledDate:
          $ref: "#/components/schemas/Timestamp"
      description: The representation of an Amazon WorkMail user.
