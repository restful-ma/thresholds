openapi: 3.0.0
info:
  contact:
    name: apiteam@taxrates.io
  description: Taxrates.io API - the successfully streamlined tax rates monitoring process.
    We recommend using <a href='https://www.getpostman.com/'
    target=_new>Postman</a> when discovering our API. Happy using!
  license:
    name: Private licence - only for using by authorized Members of taxrates.io
    url: http://taxrates.io/license/
  termsOfService: http://taxrates.io/terms/
  title: Taxrates.io
  version: "3.0"
  x-apisguru-categories:
    - financial
  x-logo:
    url: https://pbs.twimg.com/profile_images/919999226955927553/lLFntE3W_400x400.jpg
  x-origin:
    - format: swagger
      url: https://api.taxrates.io/taxrates_io_API.yaml
      version: "2.0"
  x-providerName: taxrates.io
paths:
  /v1/tax/byaddress:
    post:
      description: >
        This endpoint returns tax rates for the country based on the address
        provided <pre><code class="js">var taxrates_endpoint = 'tax/address';
          var taxrates_params = '?domain=api.taxrates.io';
          var taxrates_url = '/api/v1/';
          var taxrates_body = '{
            "street":"MyStreetName",
            "street_number":"107",
            "apartment_number":"d34",
            "city":"Dublin",
            "zip":"84534"
            "state":"",
            "country":"Ireland"
          }';
          if ( localStorage.getItem("Taxrates_API_Client_Secret") ){
          jQuery.support.cors = true;
          jQuery.ajax({
              url: taxrates_url+taxrates_endpoint+taxrates_params,
              type: 'post',
              method: 'post',
              dataType: "json",
              data: taxrates_body,
              beforeSend: function (request) {
                      request.withCredentials = true;
                      request.setRequestHeader("Authorization", "Apikey " + localStorage.getItem("Taxrates_API_Client_Secret"));
              },
              headers: {
                "accept": "application/json"
              },
              contentType: 'application/json; charset=utf-8',
              success: function (data) {
                //Maintain errors inside success because the API may return 200 in general, but different code inside
                  if(data.ErrorCode=='404' || data.ErrorCode=='500'){
                    //Maintain errors here
                    console.log(data.ErrorMessage);
                    return false;
                  }else{
                    var rates = [];
                    var i=0;
                    jQuery.each(data.Rates, function(k, v) {
                        if(v.hasOwnProperty("taxes")){
                            jQuery.each(v.taxes, function(m, w) {
                                rates[i] = [];
                                //Only showing standard rate type
                                if( w.Type == "standard" ){
                                    rates[i][0] = w.Country;
                                    rates[i][1] = w.Type;
                                    rates[i][2] = w.data_value;
                                    i++;
                                }
                            });
                        }
                    //Now you have all your rates inside rates variable.
                    }).fail(function(xhr) {
                            //Maintain your errors here
                            return false;
                    });
                    return true;
          }else{
            //Not logged into taxrates.io
            //Maintain your errors here
            return false;
          }</code></pre>
      parameters:
        - description: "Domain name: api.taxrates.io"
          in: query
          name: domain
          required: true
          schema:
            type: string
        - description: "You can filter your taxes by one of following types: 'standard',
            'reduced', 'second reduced', 'third reduced' and 'super reduced'."
          in: query
          name: filter
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Address"
        description: Address
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Rates"
        "404":
          description: Country not found. Please check you address and make sure it is
            valid.
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      security:
        - Apikey: []
      summary: Get tax rates by address
      tags:
        - Tax service
  /v1/tax/countrycode:
    get:
      description: >
        This endpoint returns all available tax rates for selected country
        <pre><code class="js">var taxrates_endpoint = 'tax/countrycode';
          var taxrates_params = {'domain':'api.taxrates.io', 'country_code':'IE'};
          var taxrates_url = '/api/v1/';
          if ( localStorage.getItem("Taxrates_API_Client_Secret") ){
          jQuery.support.cors = true;
          jQuery.ajax({
              url: taxrates_url+taxrates_endpoint,
              type: 'get',
              method: 'get',
              dataType: "json",
              data: taxrates_params,
              beforeSend: function (request) {
                      request.withCredentials = true;
                      request.setRequestHeader("Authorization", "Apikey " + localStorage.getItem("Taxrates_API_Client_Secret"));
              },
              headers: {
                "accept": "application/json"
              },
              contentType: 'application/json; charset=utf-8',
              success: function (data) {
                //Maintain errors inside success because the API may return 200 in general, but different code inside
                  if(data.ErrorCode=='404' || data.ErrorCode=='500'){
                    //Maintain errors here
                    console.log(data.ErrorMessage);
                    return false;
                  }else{
                    var rates = [];
                    var i=0;
                    jQuery.each(data.Rates, function(k, v) {
                        if(v.hasOwnProperty("taxes")){
                            jQuery.each(v.taxes, function(m, w) {
                                rates[i] = [];
                                //Only showing standard rate type
                                if( w.Type == "standard" ){
                                    rates[i][0] = w.Country;
                                    rates[i][1] = w.Type;
                                    rates[i][2] = w.data_value;
                                    i++;
                                }
                            });
                        }
                    //Now you have all your rates inside rates variable.
                    }).fail(function(xhr) {
                            //Maintain your errors here
                            return false;
                    });
                    return true;
          }else{
            //Not logged into taxrates.io
            //Maintain your errors here
            return false;
          }</code></pre>
      parameters:
        - description: "Domain name: api.taxrates.io"
          in: query
          name: domain
          required: true
          schema:
            type: string
        - description: Country code alpha 2
          in: query
          name: country_code
          required: true
          schema:
            type: string
        - description: "You can filter your taxes by one of following types: 'standard',
            'reduced', 'second reduced', 'third reduced' and 'super reduced'."
          in: query
          name: filter
          required: false
          schema:
            type: string
        - description: You must provide a zip code if one of your selected countries is
            United States and you've had selected a state on your Taxrates.io
            member's dashboard.
          in: query
          name: zip
          required: false
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Rates"
        "404":
          description: Country not found. Have you provided correct alpha-2 country code?
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      security:
        - Apikey: []
      summary: Returns tax rate for selected country
      tags:
        - Tax service
  /v1/tax/ip:
    get:
      description: >
        This endpoint will return tax rates for country discovered based on
        Customer's IP address <pre><code class="js">var taxrates_endpoint =
        'tax/ip';
          var taxrates_params = {'domain':'api.taxrates.io', 'ip':'208.80.152.201'};
          var taxrates_url = '/api/v1/';
          if ( localStorage.getItem("Taxrates_API_Client_Secret") ){
          jQuery.support.cors = true;
          jQuery.ajax({
              url: taxrates_url+taxrates_endpoint,
              type: 'get',
              method: 'get',
              dataType: "json",
              data: taxrates_params,
              beforeSend: function (request) {
                      request.withCredentials = true;
                      request.setRequestHeader("Authorization", "Apikey " + localStorage.getItem("Taxrates_API_Client_Secret"));
              },
              headers: {
                "accept": "application/json"
              },
              contentType: 'application/json; charset=utf-8',
              success: function (data) {
                //Maintain errors inside success because the API may return 200 in general, but different code inside
                  if(data.ErrorCode=='404' || data.ErrorCode=='500'){
                    //Maintain errors here
                    console.log(data.ErrorMessage);
                    return false;
                  }else{
                    var rates = [];
                    var i=0;
                    jQuery.each(data.Rates, function(k, v) {
                        if(v.hasOwnProperty("taxes")){
                            jQuery.each(v.taxes, function(m, w) {
                                rates[i] = [];
                                //Only showing standard rate type
                                if( w.Type == "standard" ){
                                    rates[i][0] = w.Country;
                                    rates[i][1] = w.Type;
                                    rates[i][2] = w.data_value;
                                    i++;
                                }
                            });
                        }
                    //Now you have all your rates inside rates variable.
                    }).fail(function(xhr) {
                            //Maintain your errors here
                            return false;
                    });
                    return true;
          }else{
            //Not logged into taxrates.io
            //Maintain your errors here
            return false;
          }</code></pre>
      parameters:
        - description: "Domain name: api.taxrates.io"
          in: query
          name: domain
          required: true
          schema:
            type: string
        - description: Customer's IP address
          in: query
          name: ip
          required: true
          schema:
            type: string
        - description: "You can filter your taxes by one of following types: 'standard',
            'reduced', 'second reduced', 'third reduced' and 'super reduced'."
          in: query
          name: filter
          required: false
          schema:
            type: string
        - description: You must provide a zip code if one of your selected countries is
            United States and you've had selected a state on your Taxrates.io
            member's dashboard.
          in: query
          name: zip
          required: false
          schema:
            type: string
      responses:
        "200":
          description: An array of tax rates for VAT, GST & TAX
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/Rates"
                type: array
        "404":
          description: Geolocation can not be processed/No matching country found
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      security:
        - Apikey: []
      summary: Tax rates by geolocation based on Customer IP address
      tags:
        - Tax service
  /v3/tax/rates:
    get:
      description: >
        This method returns all tax rates configured on Member's account using
        cursor. Use X-Cursor-Next header to recursively read all rates. Max
        limit is 500 records per request. <pre><code class="js">
          var taxrates_endpoint = 'tax/rates';
          var taxrates_params = {'domain':'api.taxrates.io'};
          var taxrates_url = '/api/v3/';
          if ( localStorage.getItem("Taxrates_API_Client_Secret") ){
          jQuery.support.cors = true;
          jQuery.ajax({
              url: taxrates_url+taxrates_endpoint,
              type: 'get',
              method: 'get',
              dataType: "json",
              data: taxrates_params,
              beforeSend: function (request) {
                      request.withCredentials = true;
                      request.setRequestHeader("Authorization", "Apikey " + localStorage.getItem("Taxrates_API_Client_Secret"));
              },
              headers: {
                "accept": "application/json"
              },
              contentType: 'application/json; charset=utf-8',
              success: function (data) {
                //Maintain errors inside success because the API may return 200 in general, but different code inside
                  if(data.ErrorCode=='404' || data.ErrorCode=='500'){
                    //Maintain errors here
                    console.log(data.ErrorMessage);
                    return false;
                  }else{
                    var rates = [];
                    var i=0;
                    var taxrates_range = '';
                    jQuery.each(data, function(k, v) {
                        if(v.hasOwnProperty("rates")){
                            jQuery.each(v.rates, function(m, w) {
                                rates[i] = [];
                                //Only showing standard rate type
                                if( w.Type == "standard" ){
                                    rates[i][0] = w.Type;
                                    rates[i][1] = w.data_value;
                                    i++;
                                }
                            });
                        }
                    //Now you have all your rates inside rates variable.
                    }).fail(function(xhr) {
                            //Maintain your errors here
                            return false;
                    });
                    return true;
          }else{
            //Not logged into taxrates.io
            //Maintain your errors here
            return false;
          }</code></pre>
      parameters:
        - description: "Domain name: api.taxrates.io"
          in: query
          name: domain
          required: true
          schema:
            type: string
        - description: "You can filter your taxes by one of following types: 'standard',
            'reduced', 'second reduced', 'third reduced' and 'super reduced'."
          in: query
          name: filter
          required: false
          schema:
            type: string
        - description: Cursor shows from which record you want to get information. Default
            value is 0, next value can be retrieved from X-Cursor-Next header.
          in: query
          name: cursor
          required: false
          schema:
            type: string
      responses:
        "200":
          description: An array of locations with tax rates
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/Location"
                type: array
        "404":
          description: No configured tax rates found. Have you added any country to your
            account?
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      security:
        - Apikey: []
      summary: Get all tax rates
      tags:
        - Tax service
servers:
  - url: https://api.taxrates.io/api
components:
  securitySchemes:
    Apikey:
      in: header
      name: Authorization
      type: apiKey
  schemas:
    Address:
      properties:
        apartment_number:
          description: Apartment number if any
          type: string
        city:
          description: City name
          type: string
        country:
          description: Country name
          type: string
        postal_code:
          description: City zip code
          type: string
        state:
          description: Province or state
          type: string
        street:
          description: Street
          type: string
        street_number:
          description: Street number
          type: string
      type: object
    Error:
      properties:
        code:
          format: int32
          type: integer
        fields:
          type: string
        message:
          type: string
      type: object
    Location:
      properties:
        id:
          type: integer
        name:
          description: Country name
          type: string
        rates:
          items:
            $ref: "#/components/schemas/TaxRate"
          type: array
        state:
          description: State/province name if exists
          type: string
        zip:
          description: Zipcode
          type: string
      type: object
    Rates:
      properties:
        country_name:
          description: The country name
          type: string
        taxes:
          items:
            $ref: "#/components/schemas/Tax"
          type: array
      type: object
    Tax:
      properties:
        Country:
          description: The country name
          type: string
        Type:
          description: The tax type
          type: string
        data_name:
          description: The tax name and description (VAT, GST, PIT, CIT etc)
          type: string
        data_value:
          description: The tax value in percents
          type: string
      type: object
    TaxRate:
      properties:
        data_name:
          description: The tax name and description (VAT, GST, PIT, CIT etc)
          type: string
        data_value:
          description: The tax value in percents
          type: string
        type:
          description: The tax type
          type: string
      type: object
