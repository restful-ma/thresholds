openapi: 3.0.0
info:
  description: The Storage Management Client.
  title: StorageManagementClient
  version: 2015-05-01-preview
  x-apisguru-categories:
    - cloud
  x-logo:
    url: https://assets.onestore.ms/cdnfiles/onestorerolling-1606-01000/shell/v3/images/logo/microsoft.png
  x-origin:
    - format: swagger
      url: https://raw.githubusercontent.com/Azure/azure-rest-api-specs/master/specification/storage/resource-manager/Microsoft.Storage/preview/2015-05-01-preview/storage.json
      version: "2.0"
  x-preferred: false
  x-providerName: azure.com
  x-serviceName: storage
  x-tags:
    - Azure
    - Microsoft
security:
  - azure_auth:
      - user_impersonation
paths:
  "/subscriptions/{subscriptionId}/providers/Microsoft.Storage/checkNameAvailability":
    post:
      description: Checks that account name is valid and is not in use.
      operationId: StorageAccounts_CheckNameAvailability
      parameters:
        - $ref: "#/components/parameters/ApiVersionParameter"
        - $ref: "#/components/parameters/SubscriptionIdParameter"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/StorageAccountCheckNameAvailabilityParame\
                ters"
          text/json:
            schema:
              $ref: "#/components/schemas/StorageAccountCheckNameAvailabilityParame\
                ters"
        description: "The name of the storage account within the specified resource group.
          Storage account names must be between 3 and 24 characters in length
          and use numbers and lower-case letters only.  "
        required: true
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CheckNameAvailabilityResult"
            text/json:
              schema:
                $ref: "#/components/schemas/CheckNameAvailabilityResult"
      tags:
        - StorageAccounts
  "/subscriptions/{subscriptionId}/providers/Microsoft.Storage/storageAccounts":
    get:
      description: Lists all the storage accounts available under the subscription. Note
        that storage keys are not returned; use the ListKeys operation for this.
      operationId: StorageAccounts_List
      parameters:
        - $ref: "#/components/parameters/ApiVersionParameter"
        - $ref: "#/components/parameters/SubscriptionIdParameter"
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StorageAccountListResult"
            text/json:
              schema:
                $ref: "#/components/schemas/StorageAccountListResult"
      tags:
        - StorageAccounts
      x-ms-pageable:
        nextLinkName: nextLink
  "/subscriptions/{subscriptionId}/providers/Microsoft.Storage/usages":
    get:
      description: Gets the current usage count and the limit for the resources under the
        subscription.
      operationId: Usage_List
      parameters:
        - $ref: "#/components/parameters/ApiVersionParameter"
        - $ref: "#/components/parameters/SubscriptionIdParameter"
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UsageListResult"
            text/json:
              schema:
                $ref: "#/components/schemas/UsageListResult"
      tags:
        - Usage
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts":
    get:
      description: Lists all the storage accounts available under the given resource group.
        Note that storage keys are not returned; use the ListKeys operation for
        this.
      operationId: StorageAccounts_ListByResourceGroup
      parameters:
        - description: The name of the resource group within the user's subscription.
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/ApiVersionParameter"
        - $ref: "#/components/parameters/SubscriptionIdParameter"
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StorageAccountListResult"
            text/json:
              schema:
                $ref: "#/components/schemas/StorageAccountListResult"
      tags:
        - StorageAccounts
      x-ms-pageable:
        nextLinkName: nextLink
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}":
    delete:
      description: Deletes a storage account in Microsoft Azure.
      operationId: StorageAccounts_Delete
      parameters:
        - description: The name of the resource group within the user's subscription.
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: "The name of the storage account within the specified resource
            group. Storage account names must be between 3 and 24 characters in
            length and use numbers and lower-case letters only.  "
          in: path
          name: accountName
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/ApiVersionParameter"
        - $ref: "#/components/parameters/SubscriptionIdParameter"
      responses:
        "200":
          description: ""
        "204":
          description: ""
      tags:
        - StorageAccounts
    get:
      description: Returns the properties for the specified storage account including but
        not limited to name, account type, location, and account status. The
        ListKeys operation should be used to retrieve storage keys.
      operationId: StorageAccounts_GetProperties
      parameters:
        - description: The name of the resource group within the user's subscription.
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: "The name of the storage account within the specified resource
            group. Storage account names must be between 3 and 24 characters in
            length and use numbers and lower-case letters only.  "
          in: path
          name: accountName
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/ApiVersionParameter"
        - $ref: "#/components/parameters/SubscriptionIdParameter"
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StorageAccount"
            text/json:
              schema:
                $ref: "#/components/schemas/StorageAccount"
      tags:
        - StorageAccounts
    patch:
      description: Updates the account type or tags for a storage account. It can also be
        used to add a custom domain (note that custom domains cannot be added
        via the Create operation). Only one custom domain is supported per
        storage account. This API can only be used to update one of tags,
        accountType, or customDomain per call. To update multiple of these
        properties, call the API multiple times with one change per call. This
        call does not change the storage keys for the account. If you want to
        change storage account keys, use the RegenerateKey operation. The
        location and name of the storage account cannot be changed after
        creation.
      operationId: StorageAccounts_Update
      parameters:
        - description: The name of the resource group within the user's subscription.
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: "The name of the storage account within the specified resource
            group. Storage account names must be between 3 and 24 characters in
            length and use numbers and lower-case letters only.  "
          in: path
          name: accountName
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/ApiVersionParameter"
        - $ref: "#/components/parameters/SubscriptionIdParameter"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/StorageAccountUpdateParameters"
          text/json:
            schema:
              $ref: "#/components/schemas/StorageAccountUpdateParameters"
        description: "The parameters to update on the account. Note that only one property
          can be changed at a time using this API. "
        required: true
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StorageAccount"
            text/json:
              schema:
                $ref: "#/components/schemas/StorageAccount"
      tags:
        - StorageAccounts
    put:
      description: "Asynchronously creates a new storage account with the specified
        parameters. Existing accounts cannot be updated with this API and should
        instead use the Update Storage Account API. If an account is already
        created and subsequent PUT request is issued with exact same set of
        properties, then HTTP 200 would be returned. "
      operationId: StorageAccounts_Create
      parameters:
        - description: The name of the resource group within the user's subscription.
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: "The name of the storage account within the specified resource
            group. Storage account names must be between 3 and 24 characters in
            length and use numbers and lower-case letters only.  "
          in: path
          name: accountName
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/ApiVersionParameter"
        - $ref: "#/components/parameters/SubscriptionIdParameter"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/StorageAccountCreateParameters"
          text/json:
            schema:
              $ref: "#/components/schemas/StorageAccountCreateParameters"
        description: The parameters to provide for the created account.
        required: true
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StorageAccount"
            text/json:
              schema:
                $ref: "#/components/schemas/StorageAccount"
        "202":
          description: ""
      tags:
        - StorageAccounts
      x-ms-long-running-operation: true
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/listKeys":
    post:
      description: Lists the access keys for the specified storage account.
      operationId: StorageAccounts_ListKeys
      parameters:
        - description: The name of the resource group.
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: The name of the storage account.
          in: path
          name: accountName
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/ApiVersionParameter"
        - $ref: "#/components/parameters/SubscriptionIdParameter"
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StorageAccountKeys"
            text/json:
              schema:
                $ref: "#/components/schemas/StorageAccountKeys"
      tags:
        - StorageAccounts
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/regenerateKey":
    post:
      description: Regenerates the access keys for the specified storage account.
      operationId: StorageAccounts_RegenerateKey
      parameters:
        - description: The name of the resource group within the user's subscription.
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: "The name of the storage account within the specified resource
            group. Storage account names must be between 3 and 24 characters in
            length and use numbers and lower-case letters only.  "
          in: path
          name: accountName
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/ApiVersionParameter"
        - $ref: "#/components/parameters/SubscriptionIdParameter"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/StorageAccountRegenerateKeyParameters"
          text/json:
            schema:
              $ref: "#/components/schemas/StorageAccountRegenerateKeyParameters"
        description: Specifies name of the key which should be regenerated.
        required: true
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StorageAccountKeys"
            text/json:
              schema:
                $ref: "#/components/schemas/StorageAccountKeys"
      tags:
        - StorageAccounts
servers:
  - url: https://management.azure.com
components:
  parameters:
    ApiVersionParameter:
      description: Client Api Version.
      in: query
      name: api-version
      required: true
      schema:
        type: string
    SubscriptionIdParameter:
      description: Gets subscription credentials which uniquely identify Microsoft Azure
        subscription. The subscription ID forms part of the URI for every
        service call.
      in: path
      name: subscriptionId
      required: true
      schema:
        type: string
  securitySchemes:
    azure_auth:
      description: Azure Active Directory OAuth2 Flow
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
          scopes:
            user_impersonation: impersonate your user account
  schemas:
    CheckNameAvailabilityResult:
      description: The CheckNameAvailability operation response.
      properties:
        message:
          description: Gets an error message explaining the Reason value in more detail.
          type: string
        nameAvailable:
          description: Gets a boolean value that indicates whether the name is available
            for you to use. If true, the name is available. If false, the name
            has already been taken or invalid and cannot be used.
          type: boolean
        reason:
          description: Gets the reason that a storage account name could not be used. The
            Reason element is only returned if NameAvailable is false.
          enum:
            - AccountNameInvalid
            - AlreadyExists
          type: string
          x-ms-enum:
            modelAsString: false
            name: Reason
    CustomDomain:
      description: The custom domain assigned to this storage account. This can be set via
        Update.
      properties:
        name:
          description: Gets or sets the custom domain name. Name is the CNAME source.
          type: string
        useSubDomainName:
          description: Indicates whether indirect CName validation is enabled. Default
            value is false. This should only be set on updates
          type: boolean
    Endpoints:
      description: The URIs that are used to perform a retrieval of a public blob, queue or
        table object.
      properties:
        blob:
          description: Gets the blob endpoint.
          type: string
        queue:
          description: Gets the queue endpoint.
          type: string
        table:
          description: Gets the table endpoint.
          type: string
    Resource:
      properties:
        id:
          description: Resource Id
          readOnly: true
          type: string
        location:
          description: Resource location
          type: string
        name:
          description: Resource name
          readOnly: true
          type: string
        tags:
          additionalProperties:
            type: string
          description: Resource tags
          type: object
        type:
          description: Resource type
          readOnly: true
          type: string
      required:
        - location
      x-ms-azure-resource: true
    StorageAccount:
      allOf:
        - $ref: "#/components/schemas/Resource"
      description: The storage account.
      properties:
        properties:
          $ref: "#/components/schemas/StorageAccountProperties"
    StorageAccountCheckNameAvailabilityParameters:
      properties:
        name:
          type: string
        type:
          type: string
    StorageAccountCreateParameters:
      allOf:
        - $ref: "#/components/schemas/Resource"
      description: The parameters to provide for the account.
      properties:
        properties:
          $ref: "#/components/schemas/StorageAccountPropertiesCreateParameters"
    StorageAccountKeys:
      description: The access keys for the storage account.
      properties:
        key1:
          description: Gets the value of key 1.
          type: string
        key2:
          description: Gets the value of key 2.
          type: string
    StorageAccountListResult:
      description: The list storage accounts operation response.
      properties:
        nextLink:
          description: Gets the link to the next set of results. Currently this will always
            be empty as the API does not support pagination.
          type: string
        value:
          description: Gets the list of storage accounts and their properties.
          items:
            $ref: "#/components/schemas/StorageAccount"
          type: array
    StorageAccountProperties:
      properties:
        accountType:
          description: Gets the type of the storage account.
          enum:
            - Standard_LRS
            - Standard_ZRS
            - Standard_GRS
            - Standard_RAGRS
            - Premium_LRS
          type: string
          x-ms-enum:
            modelAsString: false
            name: AccountType
        creationTime:
          description: Gets the creation date and time of the storage account in UTC.
          format: date-time
          type: string
        customDomain:
          $ref: "#/components/schemas/CustomDomain"
        lastGeoFailoverTime:
          description: Gets the timestamp of the most recent instance of a failover to the
            secondary location. Only the most recent timestamp is retained. This
            element is not returned if there has never been a failover instance.
            Only available if the accountType is StandardGRS or StandardRAGRS.
          format: date-time
          type: string
        primaryEndpoints:
          $ref: "#/components/schemas/Endpoints"
        primaryLocation:
          description: Gets the location of the primary for the storage account.
          type: string
        provisioningState:
          description: Gets the status of the storage account at the time the operation was
            called.
          enum:
            - Creating
            - ResolvingDNS
            - Succeeded
          type: string
          x-ms-enum:
            modelAsString: false
            name: ProvisioningState
        secondaryEndpoints:
          $ref: "#/components/schemas/Endpoints"
        secondaryLocation:
          description: Gets the location of the geo replicated secondary for the storage
            account. Only available if the accountType is StandardGRS or
            StandardRAGRS.
          type: string
        statusOfPrimary:
          description: Gets the status indicating whether the primary location of the
            storage account is available or unavailable.
          enum:
            - Available
            - Unavailable
          type: string
          x-ms-enum:
            modelAsString: false
            name: AccountStatus
        statusOfSecondary:
          description: Gets the status indicating whether the secondary location of the
            storage account is available or unavailable. Only available if the
            accountType is StandardGRS or StandardRAGRS.
          enum:
            - Available
            - Unavailable
          type: string
          x-ms-enum:
            modelAsString: false
            name: AccountStatus
    StorageAccountPropertiesCreateParameters:
      properties:
        accountType:
          description: Gets or sets the account type.
          enum:
            - Standard_LRS
            - Standard_ZRS
            - Standard_GRS
            - Standard_RAGRS
            - Premium_LRS
          type: string
          x-ms-enum:
            modelAsString: false
            name: AccountType
    StorageAccountPropertiesUpdateParameters:
      properties:
        accountType:
          description: Gets or sets the account type. Note that StandardZRS and PremiumLRS
            accounts cannot be changed to other account types, and other account
            types cannot be changed to StandardZRS or PremiumLRS.
          enum:
            - Standard_LRS
            - Standard_ZRS
            - Standard_GRS
            - Standard_RAGRS
            - Premium_LRS
          type: string
          x-ms-enum:
            modelAsString: false
            name: AccountType
        customDomain:
          $ref: "#/components/schemas/CustomDomain"
    StorageAccountRegenerateKeyParameters:
      properties:
        keyName:
          enum:
            - key1
            - key2
          type: string
          x-ms-enum:
            modelAsString: false
            name: KeyName
    StorageAccountUpdateParameters:
      allOf:
        - $ref: "#/components/schemas/Resource"
      description: The parameters to update on the account.
      properties:
        properties:
          $ref: "#/components/schemas/StorageAccountPropertiesUpdateParameters"
    SubResource:
      properties:
        id:
          description: Resource Id
          type: string
      x-ms-azure-resource: true
    Usage:
      description: Describes Storage Resource Usage.
      properties:
        currentValue:
          description: Gets the current count of the allocated resources in the
            subscription.
          format: int32
          type: integer
        limit:
          description: Gets the maximum count of the resources that can be allocated in the
            subscription.
          format: int32
          type: integer
        name:
          $ref: "#/components/schemas/UsageName"
        unit:
          description: Gets the unit of measurement.
          enum:
            - Count
            - Bytes
            - Seconds
            - Percent
            - CountsPerSecond
            - BytesPerSecond
          type: string
          x-ms-enum:
            modelAsString: false
            name: UsageUnit
    UsageListResult:
      description: The List Usages operation response.
      properties:
        value:
          description: Gets or sets the list Storage Resource Usages.
          items:
            $ref: "#/components/schemas/Usage"
          type: array
    UsageName:
      description: The Usage Names.
      properties:
        localizedValue:
          description: Gets a localized string describing the resource name.
          type: string
        value:
          description: Gets a string describing the resource name.
          type: string
