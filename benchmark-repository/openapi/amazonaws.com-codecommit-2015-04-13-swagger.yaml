openapi: 3.0.0
info:
  version: 2015-04-13
  x-release: v4
  title: AWS CodeCommit
  description: <fullname>AWS CodeCommit</fullname> <p>This is the <i>AWS CodeCommit API
    Reference</i>. This reference provides descriptions of the operations and
    data types for AWS CodeCommit API along with usage examples.</p> <p>You can
    use the AWS CodeCommit API to work with the following objects:</p>
    <p>Repositories, by calling the following:</p> <ul> <li> <p>
    <a>BatchGetRepositories</a>, which returns information about one or more
    repositories associated with your AWS account.</p> </li> <li> <p>
    <a>CreateRepository</a>, which creates an AWS CodeCommit repository.</p>
    </li> <li> <p> <a>DeleteRepository</a>, which deletes an AWS CodeCommit
    repository.</p> </li> <li> <p> <a>GetRepository</a>, which returns
    information about a specified repository.</p> </li> <li> <p>
    <a>ListRepositories</a>, which lists all AWS CodeCommit repositories
    associated with your AWS account.</p> </li> <li> <p>
    <a>UpdateRepositoryDescription</a>, which sets or updates the description of
    the repository.</p> </li> <li> <p> <a>UpdateRepositoryName</a>, which
    changes the name of the repository. If you change the name of a repository,
    no other users of that repository will be able to access it until you send
    them the new HTTPS or SSH URL to use.</p> </li> </ul> <p>Branches, by
    calling the following:</p> <ul> <li> <p> <a>CreateBranch</a>, which creates
    a new branch in a specified repository.</p> </li> <li> <p>
    <a>DeleteBranch</a>, which deletes the specified branch in a repository
    unless it is the default branch.</p> </li> <li> <p> <a>GetBranch</a>, which
    returns information about a specified branch.</p> </li> <li> <p>
    <a>ListBranches</a>, which lists all branches for a specified
    repository.</p> </li> <li> <p> <a>UpdateDefaultBranch</a>, which changes the
    default branch for a repository.</p> </li> </ul> <p>Files, by calling the
    following:</p> <ul> <li> <p> <a>DeleteFile</a>, which deletes the content of
    a specified file from a specified branch.</p> </li> <li> <p> <a>GetBlob</a>,
    which returns the base-64 encoded content of an individual Git blob object
    within a repository.</p> </li> <li> <p> <a>GetFile</a>, which returns the
    base-64 encoded content of a specified file.</p> </li> <li> <p>
    <a>GetFolder</a>, which returns the contents of a specified folder or
    directory.</p> </li> <li> <p> <a>PutFile</a>, which adds or modifies a
    single file in a specified repository and branch.</p> </li> </ul>
    <p>Commits, by calling the following:</p> <ul> <li> <p>
    <a>BatchGetCommits</a>, which returns information about one or more commits
    in a repository</p> </li> <li> <p> <a>CreateCommit</a>, which creates a
    commit for changes to a repository.</p> </li> <li> <p> <a>GetCommit</a>,
    which returns information about a commit, including commit messages and
    author and committer information.</p> </li> <li> <p> <a>GetDifferences</a>,
    which returns information about the differences in a valid commit specifier
    (such as a branch, tag, HEAD, commit ID or other fully qualified
    reference).</p> </li> </ul> <p>Merges, by calling the following:</p> <ul>
    <li> <p> <a>BatchDescribeMergeConflicts</a>, which returns information about
    conflicts in a merge between commits in a repository.</p> </li> <li> <p>
    <a>CreateUnreferencedMergeCommit</a>, which creates an unreferenced commit
    between two branches or commits for the purpose of comparing them and
    identifying any potential conflicts.</p> </li> <li> <p>
    <a>DescribeMergeConflicts</a>, which returns information about merge
    conflicts between the base, source, and destination versions of a file in a
    potential merge.</p> </li> <li> <p> <a>GetMergeCommit</a>, which returns
    information about the merge between a source and destination commit. </p>
    </li> <li> <p> <a>GetMergeConflicts</a>, which returns information about
    merge conflicts between the source and destination branch in a pull
    request.</p> </li> <li> <p> <a>GetMergeOptions</a>, which returns
    information about the available merge options between two branches or commit
    specifiers.</p> </li> <li> <p> <a>MergeBranchesByFastForward</a>, which
    merges two branches using the fast-forward merge option.</p> </li> <li> <p>
    <a>MergeBranchesBySquash</a>, which merges two branches using the squash
    merge option.</p> </li> <li> <p> <a>MergeBranchesByThreeWay</a>, which
    merges two branches using the three-way merge option.</p> </li> </ul>
    <p>Pull requests, by calling the following:</p> <ul> <li> <p>
    <a>CreatePullRequest</a>, which creates a pull request in a specified
    repository.</p> </li> <li> <p> <a>DescribePullRequestEvents</a>, which
    returns information about one or more pull request events.</p> </li> <li>
    <p> <a>GetCommentsForPullRequest</a>, which returns information about
    comments on a specified pull request.</p> </li> <li> <p>
    <a>GetPullRequest</a>, which returns information about a specified pull
    request.</p> </li> <li> <p> <a>ListPullRequests</a>, which lists all pull
    requests for a repository.</p> </li> <li> <p>
    <a>MergePullRequestByFastForward</a>, which merges the source destination
    branch of a pull request into the specified destination branch for that pull
    request using the fast-forward merge option.</p> </li> <li> <p>
    <a>MergePullRequestBySquash</a>, which merges the source destination branch
    of a pull request into the specified destination branch for that pull
    request using the squash merge option.</p> </li> <li> <p>
    <a>MergePullRequestByThreeWay</a>. which merges the source destination
    branch of a pull request into the specified destination branch for that pull
    request using the three-way merge option.</p> </li> <li> <p>
    <a>PostCommentForPullRequest</a>, which posts a comment to a pull request at
    the specified line, file, or request.</p> </li> <li> <p>
    <a>UpdatePullRequestDescription</a>, which updates the description of a pull
    request.</p> </li> <li> <p> <a>UpdatePullRequestStatus</a>, which updates
    the status of a pull request.</p> </li> <li> <p>
    <a>UpdatePullRequestTitle</a>, which updates the title of a pull
    request.</p> </li> </ul> <p>Comments in a repository, by calling the
    following:</p> <ul> <li> <p> <a>DeleteCommentContent</a>, which deletes the
    content of a comment on a commit in a repository.</p> </li> <li> <p>
    <a>GetComment</a>, which returns information about a comment on a
    commit.</p> </li> <li> <p> <a>GetCommentsForComparedCommit</a>, which
    returns information about comments on the comparison between two commit
    specifiers in a repository.</p> </li> <li> <p>
    <a>PostCommentForComparedCommit</a>, which creates a comment on the
    comparison between two commit specifiers in a repository.</p> </li> <li> <p>
    <a>PostCommentReply</a>, which creates a reply to a comment.</p> </li> <li>
    <p> <a>UpdateComment</a>, which updates the content of a comment on a commit
    in a repository.</p> </li> </ul> <p>Tags used to tag resources in AWS
    CodeCommit (not Git tags), by calling the following:</p> <ul> <li> <p>
    <a>ListTagsForResource</a>, which gets information about AWS tags for a
    specified Amazon Resource Name (ARN) in AWS CodeCommit.</p> </li> <li> <p>
    <a>TagResource</a>, which adds or updates tags for a resource in AWS
    CodeCommit.</p> </li> <li> <p> <a>UntagResource</a>, which removes tags for
    a resource in AWS CodeCommit.</p> </li> </ul> <p>Triggers, by calling the
    following:</p> <ul> <li> <p> <a>GetRepositoryTriggers</a>, which returns
    information about triggers configured for a repository.</p> </li> <li> <p>
    <a>PutRepositoryTriggers</a>, which replaces all triggers for a repository
    and can be used to create or delete triggers.</p> </li> <li> <p>
    <a>TestRepositoryTriggers</a>, which tests the functionality of a repository
    trigger by sending data to the trigger target.</p> </li> </ul> <p>For
    information about how to use AWS CodeCommit, see the <a
    href="https://docs.aws.amazon.com/codecommit/latest/userguide/welcome.html">AWS
    CodeCommit User Guide</a>.</p>
  x-logo:
    url: https://twitter.com/awscloud/profile_image?size=original
    backgroundColor: "#FFFFFF"
  termsOfService: https://aws.amazon.com/service-terms/
  contact:
    name: Mike Ralphson
    email: mike.ralphson@gmail.com
    url: https://github.com/mermade/aws2openapi
    x-twitter: PermittedSoc
  license:
    name: Apache 2.0 License
    url: http://www.apache.org/licenses/
  x-providerName: amazonaws.com
  x-serviceName: codecommit
  x-origin:
    - contentType: application/json
      url: https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/codecommit-2015-04-13.normal.json
      converter:
        url: https://github.com/mermade/aws2openapi
        version: 1.0.0
      x-apisguru-direct: true
  x-apiClientRegistration:
    url: https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct
  x-apisguru-categories:
    - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: https://docs.aws.amazon.com/codecommit/
x-hasEquivalentPaths: true
security:
  - hmac: []
paths:
  /#X-Amz-Target=CodeCommit_20150413.BatchDescribeMergeConflicts:
    post:
      operationId: BatchDescribeMergeConflicts
      description: Returns information about one or more merge conflicts in the attempted
        merge of two commit specifiers using the squash or three-way merge
        strategy.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BatchDescribeMergeConflictsOutput"
        "480":
          description: RepositoryNameRequiredException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RepositoryNameRequiredException"
        "481":
          description: InvalidRepositoryNameException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRepositoryNameException"
        "482":
          description: RepositoryDoesNotExistException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RepositoryDoesNotExistException"
        "483":
          description: MergeOptionRequiredException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MergeOptionRequiredException"
        "484":
          description: InvalidMergeOptionException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidMergeOptionException"
        "485":
          description: InvalidContinuationTokenException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidContinuationTokenException"
        "486":
          description: CommitRequiredException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CommitRequiredException"
        "487":
          description: CommitDoesNotExistException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CommitDoesNotExistException"
        "488":
          description: InvalidCommitException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidCommitException"
        "489":
          description: TipsDivergenceExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TipsDivergenceExceededException"
        "490":
          description: InvalidMaxConflictFilesException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidMaxConflictFilesException"
        "491":
          description: InvalidMaxMergeHunksException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidMaxMergeHunksException"
        "492":
          description: InvalidConflictDetailLevelException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidConflictDetailLevelException"
        "493":
          description: InvalidConflictResolutionStrategyException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidConflictResolutionStrategyExcept\
                  ion"
        "494":
          description: MaximumFileContentToLoadExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MaximumFileContentToLoadExceededExcepti\
                  on"
        "495":
          description: MaximumItemsToCompareExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MaximumItemsToCompareExceededException"
        "496":
          description: EncryptionIntegrityChecksFailedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EncryptionIntegrityChecksFailedException"
        "497":
          description: EncryptionKeyAccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EncryptionKeyAccessDeniedException"
        "498":
          description: EncryptionKeyDisabledException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EncryptionKeyDisabledException"
        "499":
          description: EncryptionKeyNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EncryptionKeyNotFoundException"
        "500":
          description: EncryptionKeyUnavailableException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EncryptionKeyUnavailableException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - CodeCommit_20150413.BatchDescribeMergeConflicts
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BatchDescribeMergeConflictsInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=CodeCommit_20150413.BatchGetCommits:
    post:
      operationId: BatchGetCommits
      description: Returns information about the contents of one or more commits in a
        repository.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BatchGetCommitsOutput"
        "480":
          description: CommitIdsListRequiredException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CommitIdsListRequiredException"
        "481":
          description: CommitIdsLimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CommitIdsLimitExceededException"
        "482":
          description: RepositoryNameRequiredException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RepositoryNameRequiredException"
        "483":
          description: InvalidRepositoryNameException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRepositoryNameException"
        "484":
          description: RepositoryDoesNotExistException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RepositoryDoesNotExistException"
        "485":
          description: EncryptionIntegrityChecksFailedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EncryptionIntegrityChecksFailedException"
        "486":
          description: EncryptionKeyAccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EncryptionKeyAccessDeniedException"
        "487":
          description: EncryptionKeyDisabledException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EncryptionKeyDisabledException"
        "488":
          description: EncryptionKeyNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EncryptionKeyNotFoundException"
        "489":
          description: EncryptionKeyUnavailableException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EncryptionKeyUnavailableException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - CodeCommit_20150413.BatchGetCommits
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BatchGetCommitsInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=CodeCommit_20150413.BatchGetRepositories:
    post:
      operationId: BatchGetRepositories
      description: <p>Returns information about one or more repositories.</p> <note> <p>The
        description field for a repository accepts all HTML characters and all
        valid Unicode characters. Applications that do not HTML-encode the
        description and display it in a web page could expose users to
        potentially malicious code. Make sure that you HTML-encode the
        description field in any application that uses this API to display the
        repository description on a web page.</p> </note>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BatchGetRepositoriesOutput"
        "480":
          description: RepositoryNamesRequiredException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RepositoryNamesRequiredException"
        "481":
          description: MaximumRepositoryNamesExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MaximumRepositoryNamesExceededException"
        "482":
          description: InvalidRepositoryNameException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRepositoryNameException"
        "483":
          description: EncryptionIntegrityChecksFailedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EncryptionIntegrityChecksFailedException"
        "484":
          description: EncryptionKeyAccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EncryptionKeyAccessDeniedException"
        "485":
          description: EncryptionKeyDisabledException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EncryptionKeyDisabledException"
        "486":
          description: EncryptionKeyNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EncryptionKeyNotFoundException"
        "487":
          description: EncryptionKeyUnavailableException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EncryptionKeyUnavailableException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - CodeCommit_20150413.BatchGetRepositories
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BatchGetRepositoriesInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=CodeCommit_20150413.CreateBranch:
    post:
      operationId: CreateBranch
      description: <p>Creates a new branch in a repository and points the branch to a
        commit.</p> <note> <p>Calling the create branch operation does not set a
        repository's default branch. To do this, call the update default branch
        operation.</p> </note>
      responses:
        "200":
          description: Success
        "480":
          description: RepositoryNameRequiredException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RepositoryNameRequiredException"
        "481":
          description: InvalidRepositoryNameException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRepositoryNameException"
        "482":
          description: RepositoryDoesNotExistException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RepositoryDoesNotExistException"
        "483":
          description: BranchNameRequiredException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BranchNameRequiredException"
        "484":
          description: BranchNameExistsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BranchNameExistsException"
        "485":
          description: InvalidBranchNameException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidBranchNameException"
        "486":
          description: CommitIdRequiredException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CommitIdRequiredException"
        "487":
          description: CommitDoesNotExistException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CommitDoesNotExistException"
        "488":
          description: InvalidCommitIdException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidCommitIdException"
        "489":
          description: EncryptionIntegrityChecksFailedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EncryptionIntegrityChecksFailedException"
        "490":
          description: EncryptionKeyAccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EncryptionKeyAccessDeniedException"
        "491":
          description: EncryptionKeyDisabledException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EncryptionKeyDisabledException"
        "492":
          description: EncryptionKeyNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EncryptionKeyNotFoundException"
        "493":
          description: EncryptionKeyUnavailableException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EncryptionKeyUnavailableException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - CodeCommit_20150413.CreateBranch
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateBranchInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=CodeCommit_20150413.CreateCommit:
    post:
      operationId: CreateCommit
      description: Creates a commit for a repository on the tip of a specified branch.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateCommitOutput"
        "480":
          description: RepositoryNameRequiredException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RepositoryNameRequiredException"
        "481":
          description: InvalidRepositoryNameException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRepositoryNameException"
        "482":
          description: RepositoryDoesNotExistException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RepositoryDoesNotExistException"
        "483":
          description: ParentCommitIdRequiredException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ParentCommitIdRequiredException"
        "484":
          description: InvalidParentCommitIdException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParentCommitIdException"
        "485":
          description: ParentCommitDoesNotExistException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ParentCommitDoesNotExistException"
        "486":
          description: ParentCommitIdOutdatedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ParentCommitIdOutdatedException"
        "487":
          description: BranchNameRequiredException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BranchNameRequiredException"
        "488":
          description: InvalidBranchNameException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidBranchNameException"
        "489":
          description: BranchDoesNotExistException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BranchDoesNotExistException"
        "490":
          description: BranchNameIsTagNameException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BranchNameIsTagNameException"
        "491":
          description: FileEntryRequiredException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FileEntryRequiredException"
        "492":
          description: MaximumFileEntriesExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MaximumFileEntriesExceededException"
        "493":
          description: PutFileEntryConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PutFileEntryConflictException"
        "494":
          description: SourceFileOrContentRequiredException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SourceFileOrContentRequiredException"
        "495":
          description: FileContentAndSourceFileSpecifiedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FileContentAndSourceFileSpecifiedExcept\
                  ion"
        "496":
          description: PathRequiredException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PathRequiredException"
        "497":
          description: InvalidPathException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidPathException"
        "498":
          description: SamePathRequestException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SamePathRequestException"
        "499":
          description: FileDoesNotExistException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FileDoesNotExistException"
        "500":
          description: FileContentSizeLimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FileContentSizeLimitExceededException"
        "501":
          description: FolderContentSizeLimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FolderContentSizeLimitExceededException"
        "502":
          description: InvalidDeletionParameterException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidDeletionParameterException"
        "503":
          description: RestrictedSourceFileException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestrictedSourceFileException"
        "504":
          description: FileModeRequiredException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FileModeRequiredException"
        "505":
          description: InvalidFileModeException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidFileModeException"
        "506":
          description: NameLengthExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NameLengthExceededException"
        "507":
          description: InvalidEmailException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidEmailException"
        "508":
          description: CommitMessageLengthExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CommitMessageLengthExceededException"
        "509":
          description: EncryptionIntegrityChecksFailedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EncryptionIntegrityChecksFailedException"
        "510":
          description: EncryptionKeyAccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EncryptionKeyAccessDeniedException"
        "511":
          description: EncryptionKeyDisabledException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EncryptionKeyDisabledException"
        "512":
          description: EncryptionKeyNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EncryptionKeyNotFoundException"
        "513":
          description: EncryptionKeyUnavailableException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EncryptionKeyUnavailableException"
        "514":
          description: NoChangeException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NoChangeException"
        "515":
          description: FileNameConflictsWithDirectoryNameException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FileNameConflictsWithDirectoryNameExcep\
                  tion"
        "516":
          description: DirectoryNameConflictsWithFileNameException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DirectoryNameConflictsWithFileNameExcep\
                  tion"
        "517":
          description: FilePathConflictsWithSubmodulePathException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FilePathConflictsWithSubmodulePathExcep\
                  tion"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - CodeCommit_20150413.CreateCommit
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateCommitInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=CodeCommit_20150413.CreatePullRequest:
    post:
      operationId: CreatePullRequest
      description: Creates a pull request in the specified repository.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreatePullRequestOutput"
        "480":
          description: RepositoryNameRequiredException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RepositoryNameRequiredException"
        "481":
          description: InvalidRepositoryNameException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRepositoryNameException"
        "482":
          description: RepositoryDoesNotExistException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RepositoryDoesNotExistException"
        "483":
          description: EncryptionIntegrityChecksFailedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EncryptionIntegrityChecksFailedException"
        "484":
          description: EncryptionKeyAccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EncryptionKeyAccessDeniedException"
        "485":
          description: EncryptionKeyDisabledException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EncryptionKeyDisabledException"
        "486":
          description: EncryptionKeyNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EncryptionKeyNotFoundException"
        "487":
          description: EncryptionKeyUnavailableException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EncryptionKeyUnavailableException"
        "488":
          description: ClientRequestTokenRequiredException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ClientRequestTokenRequiredException"
        "489":
          description: InvalidClientRequestTokenException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidClientRequestTokenException"
        "490":
          description: IdempotencyParameterMismatchException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/IdempotencyParameterMismatchException"
        "491":
          description: ReferenceNameRequiredException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ReferenceNameRequiredException"
        "492":
          description: InvalidReferenceNameException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidReferenceNameException"
        "493":
          description: ReferenceDoesNotExistException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ReferenceDoesNotExistException"
        "494":
          description: ReferenceTypeNotSupportedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ReferenceTypeNotSupportedException"
        "495":
          description: TitleRequiredException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TitleRequiredException"
        "496":
          description: InvalidTitleException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidTitleException"
        "497":
          description: InvalidDescriptionException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidDescriptionException"
        "498":
          description: TargetsRequiredException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TargetsRequiredException"
        "499":
          description: InvalidTargetsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidTargetsException"
        "500":
          description: TargetRequiredException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TargetRequiredException"
        "501":
          description: InvalidTargetException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidTargetException"
        "502":
          description: MultipleRepositoriesInPullRequestException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MultipleRepositoriesInPullRequestExcept\
                  ion"
        "503":
          description: MaximumOpenPullRequestsExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MaximumOpenPullRequestsExceededException"
        "504":
          description: SourceAndDestinationAreSameException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SourceAndDestinationAreSameException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - CodeCommit_20150413.CreatePullRequest
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreatePullRequestInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=CodeCommit_20150413.CreateRepository:
    post:
      operationId: CreateRepository
      description: Creates a new, empty repository.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateRepositoryOutput"
        "480":
          description: RepositoryNameExistsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RepositoryNameExistsException"
        "481":
          description: RepositoryNameRequiredException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RepositoryNameRequiredException"
        "482":
          description: InvalidRepositoryNameException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRepositoryNameException"
        "483":
          description: InvalidRepositoryDescriptionException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRepositoryDescriptionException"
        "484":
          description: RepositoryLimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RepositoryLimitExceededException"
        "485":
          description: EncryptionIntegrityChecksFailedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EncryptionIntegrityChecksFailedException"
        "486":
          description: EncryptionKeyAccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EncryptionKeyAccessDeniedException"
        "487":
          description: EncryptionKeyDisabledException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EncryptionKeyDisabledException"
        "488":
          description: EncryptionKeyNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EncryptionKeyNotFoundException"
        "489":
          description: EncryptionKeyUnavailableException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EncryptionKeyUnavailableException"
        "490":
          description: InvalidTagsMapException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidTagsMapException"
        "491":
          description: TooManyTagsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TooManyTagsException"
        "492":
          description: InvalidSystemTagUsageException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidSystemTagUsageException"
        "493":
          description: TagPolicyException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TagPolicyException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - CodeCommit_20150413.CreateRepository
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateRepositoryInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=CodeCommit_20150413.CreateUnreferencedMergeCommit:
    post:
      operationId: CreateUnreferencedMergeCommit
      description: <p>Creates an unreferenced commit that represents the result of merging
        two branches using a specified merge strategy. This can help you
        determine the outcome of a potential merge. This API cannot be used with
        the fast-forward merge strategy, as that strategy does not create a
        merge commit.</p> <note> <p>This unreferenced merge commit can only be
        accessed using the GetCommit API or through git commands such as git
        fetch. To retrieve this commit, you must specify its commit ID or
        otherwise reference it.</p> </note>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateUnreferencedMergeCommitOutput"
        "480":
          description: RepositoryNameRequiredException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RepositoryNameRequiredException"
        "481":
          description: InvalidRepositoryNameException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRepositoryNameException"
        "482":
          description: RepositoryDoesNotExistException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RepositoryDoesNotExistException"
        "483":
          description: TipsDivergenceExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TipsDivergenceExceededException"
        "484":
          description: CommitRequiredException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CommitRequiredException"
        "485":
          description: InvalidCommitException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidCommitException"
        "486":
          description: CommitDoesNotExistException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CommitDoesNotExistException"
        "487":
          description: MergeOptionRequiredException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MergeOptionRequiredException"
        "488":
          description: InvalidMergeOptionException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidMergeOptionException"
        "489":
          description: InvalidConflictDetailLevelException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidConflictDetailLevelException"
        "490":
          description: InvalidConflictResolutionStrategyException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidConflictResolutionStrategyExcept\
                  ion"
        "491":
          description: InvalidConflictResolutionException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidConflictResolutionException"
        "492":
          description: ManualMergeRequiredException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ManualMergeRequiredException"
        "493":
          description: MaximumConflictResolutionEntriesExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MaximumConflictResolutionEntriesExceede\
                  dException"
        "494":
          description: MultipleConflictResolutionEntriesException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MultipleConflictResolutionEntriesExcept\
                  ion"
        "495":
          description: ReplacementTypeRequiredException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ReplacementTypeRequiredException"
        "496":
          description: InvalidReplacementTypeException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidReplacementTypeException"
        "497":
          description: ReplacementContentRequiredException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ReplacementContentRequiredException"
        "498":
          description: InvalidReplacementContentException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidReplacementContentException"
        "499":
          description: PathRequiredException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PathRequiredException"
        "500":
          description: InvalidPathException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidPathException"
        "501":
          description: FileContentSizeLimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FileContentSizeLimitExceededException"
        "502":
          description: FolderContentSizeLimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FolderContentSizeLimitExceededException"
        "503":
          description: MaximumFileContentToLoadExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MaximumFileContentToLoadExceededExcepti\
                  on"
        "504":
          description: MaximumItemsToCompareExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MaximumItemsToCompareExceededException"
        "505":
          description: ConcurrentReferenceUpdateException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConcurrentReferenceUpdateException"
        "506":
          description: FileModeRequiredException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FileModeRequiredException"
        "507":
          description: InvalidFileModeException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidFileModeException"
        "508":
          description: NameLengthExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NameLengthExceededException"
        "509":
          description: InvalidEmailException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidEmailException"
        "510":
          description: CommitMessageLengthExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CommitMessageLengthExceededException"
        "511":
          description: EncryptionIntegrityChecksFailedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EncryptionIntegrityChecksFailedException"
        "512":
          description: EncryptionKeyAccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EncryptionKeyAccessDeniedException"
        "513":
          description: EncryptionKeyDisabledException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EncryptionKeyDisabledException"
        "514":
          description: EncryptionKeyNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EncryptionKeyNotFoundException"
        "515":
          description: EncryptionKeyUnavailableException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EncryptionKeyUnavailableException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - CodeCommit_20150413.CreateUnreferencedMergeCommit
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateUnreferencedMergeCommitInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=CodeCommit_20150413.DeleteBranch:
    post:
      operationId: DeleteBranch
      description: "Deletes a branch from a repository, unless that branch is the default
        branch for the repository. "
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteBranchOutput"
        "480":
          description: RepositoryNameRequiredException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RepositoryNameRequiredException"
        "481":
          description: RepositoryDoesNotExistException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RepositoryDoesNotExistException"
        "482":
          description: InvalidRepositoryNameException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRepositoryNameException"
        "483":
          description: BranchNameRequiredException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BranchNameRequiredException"
        "484":
          description: InvalidBranchNameException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidBranchNameException"
        "485":
          description: DefaultBranchCannotBeDeletedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DefaultBranchCannotBeDeletedException"
        "486":
          description: EncryptionIntegrityChecksFailedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EncryptionIntegrityChecksFailedException"
        "487":
          description: EncryptionKeyAccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EncryptionKeyAccessDeniedException"
        "488":
          description: EncryptionKeyDisabledException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EncryptionKeyDisabledException"
        "489":
          description: EncryptionKeyNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EncryptionKeyNotFoundException"
        "490":
          description: EncryptionKeyUnavailableException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EncryptionKeyUnavailableException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - CodeCommit_20150413.DeleteBranch
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeleteBranchInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=CodeCommit_20150413.DeleteCommentContent:
    post:
      operationId: DeleteCommentContent
      description: Deletes the content of a comment made on a change, file, or commit in a
        repository.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteCommentContentOutput"
        "480":
          description: CommentDoesNotExistException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CommentDoesNotExistException"
        "481":
          description: CommentIdRequiredException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CommentIdRequiredException"
        "482":
          description: InvalidCommentIdException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidCommentIdException"
        "483":
          description: CommentDeletedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CommentDeletedException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - CodeCommit_20150413.DeleteCommentContent
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeleteCommentContentInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=CodeCommit_20150413.DeleteFile:
    post:
      operationId: DeleteFile
      description: Deletes a specified file from a specified branch. A commit is created on
        the branch that contains the revision. The file will still exist in the
        commits prior to the commit that contains the deletion.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteFileOutput"
        "480":
          description: RepositoryNameRequiredException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RepositoryNameRequiredException"
        "481":
          description: InvalidRepositoryNameException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRepositoryNameException"
        "482":
          description: RepositoryDoesNotExistException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RepositoryDoesNotExistException"
        "483":
          description: ParentCommitIdRequiredException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ParentCommitIdRequiredException"
        "484":
          description: InvalidParentCommitIdException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParentCommitIdException"
        "485":
          description: ParentCommitDoesNotExistException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ParentCommitDoesNotExistException"
        "486":
          description: ParentCommitIdOutdatedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ParentCommitIdOutdatedException"
        "487":
          description: PathRequiredException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PathRequiredException"
        "488":
          description: InvalidPathException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidPathException"
        "489":
          description: FileDoesNotExistException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FileDoesNotExistException"
        "490":
          description: BranchNameRequiredException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BranchNameRequiredException"
        "491":
          description: InvalidBranchNameException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidBranchNameException"
        "492":
          description: BranchDoesNotExistException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BranchDoesNotExistException"
        "493":
          description: BranchNameIsTagNameException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BranchNameIsTagNameException"
        "494":
          description: NameLengthExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NameLengthExceededException"
        "495":
          description: InvalidEmailException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidEmailException"
        "496":
          description: CommitMessageLengthExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CommitMessageLengthExceededException"
        "497":
          description: EncryptionIntegrityChecksFailedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EncryptionIntegrityChecksFailedException"
        "498":
          description: EncryptionKeyAccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EncryptionKeyAccessDeniedException"
        "499":
          description: EncryptionKeyDisabledException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EncryptionKeyDisabledException"
        "500":
          description: EncryptionKeyNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EncryptionKeyNotFoundException"
        "501":
          description: EncryptionKeyUnavailableException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EncryptionKeyUnavailableException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - CodeCommit_20150413.DeleteFile
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeleteFileInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=CodeCommit_20150413.DeleteRepository:
    post:
      operationId: DeleteRepository
      description: <p>Deletes a repository. If a specified repository was already deleted,
        a null repository ID will be returned.</p> <important> <p>Deleting a
        repository also deletes all associated objects and metadata. After a
        repository is deleted, all future push calls to the deleted repository
        will fail.</p> </important>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteRepositoryOutput"
        "480":
          description: RepositoryNameRequiredException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RepositoryNameRequiredException"
        "481":
          description: InvalidRepositoryNameException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRepositoryNameException"
        "482":
          description: EncryptionIntegrityChecksFailedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EncryptionIntegrityChecksFailedException"
        "483":
          description: EncryptionKeyAccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EncryptionKeyAccessDeniedException"
        "484":
          description: EncryptionKeyDisabledException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EncryptionKeyDisabledException"
        "485":
          description: EncryptionKeyNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EncryptionKeyNotFoundException"
        "486":
          description: EncryptionKeyUnavailableException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EncryptionKeyUnavailableException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - CodeCommit_20150413.DeleteRepository
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeleteRepositoryInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=CodeCommit_20150413.DescribeMergeConflicts:
    post:
      operationId: DescribeMergeConflicts
      description: Returns information about one or more merge conflicts in the attempted
        merge of two commit specifiers using the squash or three-way merge
        strategy. If the merge option for the attempted merge is specified as
        FAST_FORWARD_MERGE, an exception will be thrown.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeMergeConflictsOutput"
        "480":
          description: RepositoryNameRequiredException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RepositoryNameRequiredException"
        "481":
          description: InvalidRepositoryNameException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRepositoryNameException"
        "482":
          description: RepositoryDoesNotExistException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RepositoryDoesNotExistException"
        "483":
          description: MergeOptionRequiredException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MergeOptionRequiredException"
        "484":
          description: InvalidMergeOptionException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidMergeOptionException"
        "485":
          description: InvalidContinuationTokenException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidContinuationTokenException"
        "486":
          description: CommitRequiredException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CommitRequiredException"
        "487":
          description: CommitDoesNotExistException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CommitDoesNotExistException"
        "488":
          description: InvalidCommitException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidCommitException"
        "489":
          description: TipsDivergenceExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TipsDivergenceExceededException"
        "490":
          description: PathRequiredException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PathRequiredException"
        "491":
          description: InvalidPathException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidPathException"
        "492":
          description: FileDoesNotExistException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FileDoesNotExistException"
        "493":
          description: InvalidMaxMergeHunksException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidMaxMergeHunksException"
        "494":
          description: InvalidConflictDetailLevelException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidConflictDetailLevelException"
        "495":
          description: InvalidConflictResolutionStrategyException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidConflictResolutionStrategyExcept\
                  ion"
        "496":
          description: MaximumFileContentToLoadExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MaximumFileContentToLoadExceededExcepti\
                  on"
        "497":
          description: MaximumItemsToCompareExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MaximumItemsToCompareExceededException"
        "498":
          description: EncryptionIntegrityChecksFailedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EncryptionIntegrityChecksFailedException"
        "499":
          description: EncryptionKeyAccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EncryptionKeyAccessDeniedException"
        "500":
          description: EncryptionKeyDisabledException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EncryptionKeyDisabledException"
        "501":
          description: EncryptionKeyNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EncryptionKeyNotFoundException"
        "502":
          description: EncryptionKeyUnavailableException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EncryptionKeyUnavailableException"
      parameters:
        - name: maxMergeHunks
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: nextToken
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - CodeCommit_20150413.DescribeMergeConflicts
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DescribeMergeConflictsInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=CodeCommit_20150413.DescribePullRequestEvents:
    post:
      operationId: DescribePullRequestEvents
      description: Returns information about one or more pull request events.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribePullRequestEventsOutput"
        "480":
          description: PullRequestDoesNotExistException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PullRequestDoesNotExistException"
        "481":
          description: InvalidPullRequestIdException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidPullRequestIdException"
        "482":
          description: PullRequestIdRequiredException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PullRequestIdRequiredException"
        "483":
          description: InvalidPullRequestEventTypeException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidPullRequestEventTypeException"
        "484":
          description: InvalidActorArnException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidActorArnException"
        "485":
          description: ActorDoesNotExistException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ActorDoesNotExistException"
        "486":
          description: InvalidMaxResultsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidMaxResultsException"
        "487":
          description: InvalidContinuationTokenException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidContinuationTokenException"
        "488":
          description: EncryptionIntegrityChecksFailedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EncryptionIntegrityChecksFailedException"
        "489":
          description: EncryptionKeyAccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EncryptionKeyAccessDeniedException"
        "490":
          description: EncryptionKeyDisabledException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EncryptionKeyDisabledException"
        "491":
          description: EncryptionKeyNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EncryptionKeyNotFoundException"
        "492":
          description: EncryptionKeyUnavailableException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EncryptionKeyUnavailableException"
      parameters:
        - name: maxResults
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: nextToken
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - CodeCommit_20150413.DescribePullRequestEvents
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DescribePullRequestEventsInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=CodeCommit_20150413.GetBlob:
    post:
      operationId: GetBlob
      description: Returns the base-64 encoded content of an individual blob within a
        repository.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetBlobOutput"
        "480":
          description: RepositoryNameRequiredException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RepositoryNameRequiredException"
        "481":
          description: InvalidRepositoryNameException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRepositoryNameException"
        "482":
          description: RepositoryDoesNotExistException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RepositoryDoesNotExistException"
        "483":
          description: BlobIdRequiredException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BlobIdRequiredException"
        "484":
          description: InvalidBlobIdException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidBlobIdException"
        "485":
          description: BlobIdDoesNotExistException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BlobIdDoesNotExistException"
        "486":
          description: EncryptionIntegrityChecksFailedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EncryptionIntegrityChecksFailedException"
        "487":
          description: EncryptionKeyAccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EncryptionKeyAccessDeniedException"
        "488":
          description: EncryptionKeyDisabledException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EncryptionKeyDisabledException"
        "489":
          description: EncryptionKeyNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EncryptionKeyNotFoundException"
        "490":
          description: EncryptionKeyUnavailableException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EncryptionKeyUnavailableException"
        "491":
          description: FileTooLargeException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FileTooLargeException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - CodeCommit_20150413.GetBlob
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GetBlobInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=CodeCommit_20150413.GetBranch:
    post:
      operationId: GetBranch
      description: Returns information about a repository branch, including its name and
        the last commit ID.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetBranchOutput"
        "480":
          description: RepositoryNameRequiredException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RepositoryNameRequiredException"
        "481":
          description: RepositoryDoesNotExistException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RepositoryDoesNotExistException"
        "482":
          description: InvalidRepositoryNameException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRepositoryNameException"
        "483":
          description: BranchNameRequiredException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BranchNameRequiredException"
        "484":
          description: InvalidBranchNameException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidBranchNameException"
        "485":
          description: BranchDoesNotExistException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BranchDoesNotExistException"
        "486":
          description: EncryptionIntegrityChecksFailedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EncryptionIntegrityChecksFailedException"
        "487":
          description: EncryptionKeyAccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EncryptionKeyAccessDeniedException"
        "488":
          description: EncryptionKeyDisabledException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EncryptionKeyDisabledException"
        "489":
          description: EncryptionKeyNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EncryptionKeyNotFoundException"
        "490":
          description: EncryptionKeyUnavailableException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EncryptionKeyUnavailableException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - CodeCommit_20150413.GetBranch
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GetBranchInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=CodeCommit_20150413.GetComment:
    post:
      operationId: GetComment
      description: Returns the content of a comment made on a change, file, or commit in a
        repository.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetCommentOutput"
        "480":
          description: CommentDoesNotExistException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CommentDoesNotExistException"
        "481":
          description: CommentIdRequiredException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CommentIdRequiredException"
        "482":
          description: InvalidCommentIdException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidCommentIdException"
        "483":
          description: CommentDeletedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CommentDeletedException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - CodeCommit_20150413.GetComment
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GetCommentInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=CodeCommit_20150413.GetCommentsForComparedCommit:
    post:
      operationId: GetCommentsForComparedCommit
      description: Returns information about comments made on the comparison between two
        commits.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetCommentsForComparedCommitOutput"
        "480":
          description: RepositoryNameRequiredException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RepositoryNameRequiredException"
        "481":
          description: RepositoryDoesNotExistException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RepositoryDoesNotExistException"
        "482":
          description: InvalidRepositoryNameException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRepositoryNameException"
        "483":
          description: CommitIdRequiredException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CommitIdRequiredException"
        "484":
          description: InvalidCommitIdException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidCommitIdException"
        "485":
          description: CommitDoesNotExistException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CommitDoesNotExistException"
        "486":
          description: InvalidMaxResultsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidMaxResultsException"
        "487":
          description: InvalidContinuationTokenException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidContinuationTokenException"
        "488":
          description: EncryptionIntegrityChecksFailedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EncryptionIntegrityChecksFailedException"
        "489":
          description: EncryptionKeyAccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EncryptionKeyAccessDeniedException"
        "490":
          description: EncryptionKeyDisabledException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EncryptionKeyDisabledException"
        "491":
          description: EncryptionKeyNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EncryptionKeyNotFoundException"
        "492":
          description: EncryptionKeyUnavailableException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EncryptionKeyUnavailableException"
      parameters:
        - name: maxResults
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: nextToken
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - CodeCommit_20150413.GetCommentsForComparedCommit
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GetCommentsForComparedCommitInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=CodeCommit_20150413.GetCommentsForPullRequest:
    post:
      operationId: GetCommentsForPullRequest
      description: Returns comments made on a pull request.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetCommentsForPullRequestOutput"
        "480":
          description: PullRequestIdRequiredException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PullRequestIdRequiredException"
        "481":
          description: PullRequestDoesNotExistException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PullRequestDoesNotExistException"
        "482":
          description: InvalidPullRequestIdException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidPullRequestIdException"
        "483":
          description: RepositoryNameRequiredException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RepositoryNameRequiredException"
        "484":
          description: RepositoryDoesNotExistException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RepositoryDoesNotExistException"
        "485":
          description: InvalidRepositoryNameException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRepositoryNameException"
        "486":
          description: CommitIdRequiredException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CommitIdRequiredException"
        "487":
          description: InvalidCommitIdException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidCommitIdException"
        "488":
          description: CommitDoesNotExistException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CommitDoesNotExistException"
        "489":
          description: InvalidMaxResultsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidMaxResultsException"
        "490":
          description: InvalidContinuationTokenException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidContinuationTokenException"
        "491":
          description: RepositoryNotAssociatedWithPullRequestException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RepositoryNotAssociatedWithPullRequestE\
                  xception"
        "492":
          description: EncryptionIntegrityChecksFailedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EncryptionIntegrityChecksFailedException"
        "493":
          description: EncryptionKeyAccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EncryptionKeyAccessDeniedException"
        "494":
          description: EncryptionKeyDisabledException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EncryptionKeyDisabledException"
        "495":
          description: EncryptionKeyNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EncryptionKeyNotFoundException"
        "496":
          description: EncryptionKeyUnavailableException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EncryptionKeyUnavailableException"
      parameters:
        - name: maxResults
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: nextToken
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - CodeCommit_20150413.GetCommentsForPullRequest
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GetCommentsForPullRequestInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=CodeCommit_20150413.GetCommit:
    post:
      operationId: GetCommit
      description: Returns information about a commit, including commit message and
        committer information.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetCommitOutput"
        "480":
          description: RepositoryNameRequiredException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RepositoryNameRequiredException"
        "481":
          description: InvalidRepositoryNameException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRepositoryNameException"
        "482":
          description: RepositoryDoesNotExistException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RepositoryDoesNotExistException"
        "483":
          description: CommitIdRequiredException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CommitIdRequiredException"
        "484":
          description: InvalidCommitIdException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidCommitIdException"
        "485":
          description: CommitIdDoesNotExistException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CommitIdDoesNotExistException"
        "486":
          description: EncryptionIntegrityChecksFailedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EncryptionIntegrityChecksFailedException"
        "487":
          description: EncryptionKeyAccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EncryptionKeyAccessDeniedException"
        "488":
          description: EncryptionKeyDisabledException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EncryptionKeyDisabledException"
        "489":
          description: EncryptionKeyNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EncryptionKeyNotFoundException"
        "490":
          description: EncryptionKeyUnavailableException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EncryptionKeyUnavailableException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - CodeCommit_20150413.GetCommit
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GetCommitInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=CodeCommit_20150413.GetDifferences:
    post:
      operationId: GetDifferences
      description: Returns information about the differences in a valid commit specifier
        (such as a branch, tag, HEAD, commit ID or other fully qualified
        reference). Results can be limited to a specified path.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetDifferencesOutput"
        "480":
          description: RepositoryNameRequiredException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RepositoryNameRequiredException"
        "481":
          description: RepositoryDoesNotExistException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RepositoryDoesNotExistException"
        "482":
          description: InvalidRepositoryNameException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRepositoryNameException"
        "483":
          description: InvalidContinuationTokenException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidContinuationTokenException"
        "484":
          description: InvalidMaxResultsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidMaxResultsException"
        "485":
          description: InvalidCommitIdException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidCommitIdException"
        "486":
          description: CommitRequiredException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CommitRequiredException"
        "487":
          description: InvalidCommitException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidCommitException"
        "488":
          description: CommitDoesNotExistException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CommitDoesNotExistException"
        "489":
          description: InvalidPathException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidPathException"
        "490":
          description: PathDoesNotExistException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PathDoesNotExistException"
        "491":
          description: EncryptionIntegrityChecksFailedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EncryptionIntegrityChecksFailedException"
        "492":
          description: EncryptionKeyAccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EncryptionKeyAccessDeniedException"
        "493":
          description: EncryptionKeyDisabledException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EncryptionKeyDisabledException"
        "494":
          description: EncryptionKeyNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EncryptionKeyNotFoundException"
        "495":
          description: EncryptionKeyUnavailableException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EncryptionKeyUnavailableException"
      parameters:
        - name: MaxResults
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: NextToken
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - CodeCommit_20150413.GetDifferences
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GetDifferencesInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=CodeCommit_20150413.GetFile:
    post:
      operationId: GetFile
      description: Returns the base-64 encoded contents of a specified file and its
        metadata.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetFileOutput"
        "480":
          description: RepositoryNameRequiredException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RepositoryNameRequiredException"
        "481":
          description: InvalidRepositoryNameException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRepositoryNameException"
        "482":
          description: RepositoryDoesNotExistException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RepositoryDoesNotExistException"
        "483":
          description: InvalidCommitException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidCommitException"
        "484":
          description: CommitDoesNotExistException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CommitDoesNotExistException"
        "485":
          description: PathRequiredException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PathRequiredException"
        "486":
          description: InvalidPathException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidPathException"
        "487":
          description: FileDoesNotExistException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FileDoesNotExistException"
        "488":
          description: EncryptionIntegrityChecksFailedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EncryptionIntegrityChecksFailedException"
        "489":
          description: EncryptionKeyAccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EncryptionKeyAccessDeniedException"
        "490":
          description: EncryptionKeyDisabledException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EncryptionKeyDisabledException"
        "491":
          description: EncryptionKeyNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EncryptionKeyNotFoundException"
        "492":
          description: EncryptionKeyUnavailableException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EncryptionKeyUnavailableException"
        "493":
          description: FileTooLargeException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FileTooLargeException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - CodeCommit_20150413.GetFile
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GetFileInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=CodeCommit_20150413.GetFolder:
    post:
      operationId: GetFolder
      description: Returns the contents of a specified folder in a repository.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetFolderOutput"
        "480":
          description: RepositoryNameRequiredException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RepositoryNameRequiredException"
        "481":
          description: InvalidRepositoryNameException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRepositoryNameException"
        "482":
          description: RepositoryDoesNotExistException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RepositoryDoesNotExistException"
        "483":
          description: InvalidCommitException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidCommitException"
        "484":
          description: CommitDoesNotExistException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CommitDoesNotExistException"
        "485":
          description: PathRequiredException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PathRequiredException"
        "486":
          description: InvalidPathException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidPathException"
        "487":
          description: FolderDoesNotExistException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FolderDoesNotExistException"
        "488":
          description: EncryptionIntegrityChecksFailedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EncryptionIntegrityChecksFailedException"
        "489":
          description: EncryptionKeyAccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EncryptionKeyAccessDeniedException"
        "490":
          description: EncryptionKeyDisabledException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EncryptionKeyDisabledException"
        "491":
          description: EncryptionKeyNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EncryptionKeyNotFoundException"
        "492":
          description: EncryptionKeyUnavailableException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EncryptionKeyUnavailableException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - CodeCommit_20150413.GetFolder
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GetFolderInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=CodeCommit_20150413.GetMergeCommit:
    post:
      operationId: GetMergeCommit
      description: Returns information about a specified merge commit.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetMergeCommitOutput"
        "480":
          description: RepositoryNameRequiredException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RepositoryNameRequiredException"
        "481":
          description: InvalidRepositoryNameException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRepositoryNameException"
        "482":
          description: RepositoryDoesNotExistException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RepositoryDoesNotExistException"
        "483":
          description: CommitRequiredException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CommitRequiredException"
        "484":
          description: InvalidCommitException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidCommitException"
        "485":
          description: CommitDoesNotExistException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CommitDoesNotExistException"
        "486":
          description: InvalidConflictDetailLevelException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidConflictDetailLevelException"
        "487":
          description: InvalidConflictResolutionStrategyException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidConflictResolutionStrategyExcept\
                  ion"
        "488":
          description: EncryptionIntegrityChecksFailedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EncryptionIntegrityChecksFailedException"
        "489":
          description: EncryptionKeyAccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EncryptionKeyAccessDeniedException"
        "490":
          description: EncryptionKeyDisabledException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EncryptionKeyDisabledException"
        "491":
          description: EncryptionKeyNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EncryptionKeyNotFoundException"
        "492":
          description: EncryptionKeyUnavailableException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EncryptionKeyUnavailableException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - CodeCommit_20150413.GetMergeCommit
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GetMergeCommitInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=CodeCommit_20150413.GetMergeConflicts:
    post:
      operationId: GetMergeConflicts
      description: Returns information about merge conflicts between the before and after
        commit IDs for a pull request in a repository.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetMergeConflictsOutput"
        "480":
          description: RepositoryNameRequiredException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RepositoryNameRequiredException"
        "481":
          description: InvalidRepositoryNameException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRepositoryNameException"
        "482":
          description: RepositoryDoesNotExistException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RepositoryDoesNotExistException"
        "483":
          description: MergeOptionRequiredException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MergeOptionRequiredException"
        "484":
          description: InvalidMergeOptionException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidMergeOptionException"
        "485":
          description: InvalidContinuationTokenException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidContinuationTokenException"
        "486":
          description: CommitRequiredException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CommitRequiredException"
        "487":
          description: CommitDoesNotExistException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CommitDoesNotExistException"
        "488":
          description: InvalidCommitException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidCommitException"
        "489":
          description: TipsDivergenceExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TipsDivergenceExceededException"
        "490":
          description: InvalidMaxConflictFilesException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidMaxConflictFilesException"
        "491":
          description: InvalidConflictDetailLevelException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidConflictDetailLevelException"
        "492":
          description: InvalidDestinationCommitSpecifierException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidDestinationCommitSpecifierExcept\
                  ion"
        "493":
          description: InvalidSourceCommitSpecifierException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidSourceCommitSpecifierException"
        "494":
          description: InvalidConflictResolutionStrategyException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidConflictResolutionStrategyExcept\
                  ion"
        "495":
          description: MaximumFileContentToLoadExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MaximumFileContentToLoadExceededExcepti\
                  on"
        "496":
          description: MaximumItemsToCompareExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MaximumItemsToCompareExceededException"
        "497":
          description: EncryptionIntegrityChecksFailedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EncryptionIntegrityChecksFailedException"
        "498":
          description: EncryptionKeyAccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EncryptionKeyAccessDeniedException"
        "499":
          description: EncryptionKeyDisabledException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EncryptionKeyDisabledException"
        "500":
          description: EncryptionKeyNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EncryptionKeyNotFoundException"
        "501":
          description: EncryptionKeyUnavailableException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EncryptionKeyUnavailableException"
      parameters:
        - name: maxConflictFiles
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: nextToken
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - CodeCommit_20150413.GetMergeConflicts
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GetMergeConflictsInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=CodeCommit_20150413.GetMergeOptions:
    post:
      operationId: GetMergeOptions
      description: Returns information about the merge options available for merging two
        specified branches. For details about why a particular merge option is
        not available, use GetMergeConflicts or DescribeMergeConflicts.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetMergeOptionsOutput"
        "480":
          description: RepositoryNameRequiredException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RepositoryNameRequiredException"
        "481":
          description: InvalidRepositoryNameException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRepositoryNameException"
        "482":
          description: RepositoryDoesNotExistException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RepositoryDoesNotExistException"
        "483":
          description: CommitRequiredException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CommitRequiredException"
        "484":
          description: CommitDoesNotExistException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CommitDoesNotExistException"
        "485":
          description: InvalidCommitException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidCommitException"
        "486":
          description: TipsDivergenceExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TipsDivergenceExceededException"
        "487":
          description: InvalidConflictDetailLevelException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidConflictDetailLevelException"
        "488":
          description: InvalidConflictResolutionStrategyException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidConflictResolutionStrategyExcept\
                  ion"
        "489":
          description: MaximumFileContentToLoadExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MaximumFileContentToLoadExceededExcepti\
                  on"
        "490":
          description: MaximumItemsToCompareExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MaximumItemsToCompareExceededException"
        "491":
          description: EncryptionIntegrityChecksFailedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EncryptionIntegrityChecksFailedException"
        "492":
          description: EncryptionKeyAccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EncryptionKeyAccessDeniedException"
        "493":
          description: EncryptionKeyDisabledException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EncryptionKeyDisabledException"
        "494":
          description: EncryptionKeyNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EncryptionKeyNotFoundException"
        "495":
          description: EncryptionKeyUnavailableException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EncryptionKeyUnavailableException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - CodeCommit_20150413.GetMergeOptions
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GetMergeOptionsInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=CodeCommit_20150413.GetPullRequest:
    post:
      operationId: GetPullRequest
      description: Gets information about a pull request in a specified repository.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetPullRequestOutput"
        "480":
          description: PullRequestDoesNotExistException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PullRequestDoesNotExistException"
        "481":
          description: InvalidPullRequestIdException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidPullRequestIdException"
        "482":
          description: PullRequestIdRequiredException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PullRequestIdRequiredException"
        "483":
          description: EncryptionIntegrityChecksFailedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EncryptionIntegrityChecksFailedException"
        "484":
          description: EncryptionKeyAccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EncryptionKeyAccessDeniedException"
        "485":
          description: EncryptionKeyDisabledException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EncryptionKeyDisabledException"
        "486":
          description: EncryptionKeyNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EncryptionKeyNotFoundException"
        "487":
          description: EncryptionKeyUnavailableException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EncryptionKeyUnavailableException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - CodeCommit_20150413.GetPullRequest
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GetPullRequestInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=CodeCommit_20150413.GetRepository:
    post:
      operationId: GetRepository
      description: <p>Returns information about a repository.</p> <note> <p>The description
        field for a repository accepts all HTML characters and all valid Unicode
        characters. Applications that do not HTML-encode the description and
        display it in a web page could expose users to potentially malicious
        code. Make sure that you HTML-encode the description field in any
        application that uses this API to display the repository description on
        a web page.</p> </note>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetRepositoryOutput"
        "480":
          description: RepositoryNameRequiredException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RepositoryNameRequiredException"
        "481":
          description: RepositoryDoesNotExistException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RepositoryDoesNotExistException"
        "482":
          description: InvalidRepositoryNameException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRepositoryNameException"
        "483":
          description: EncryptionIntegrityChecksFailedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EncryptionIntegrityChecksFailedException"
        "484":
          description: EncryptionKeyAccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EncryptionKeyAccessDeniedException"
        "485":
          description: EncryptionKeyDisabledException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EncryptionKeyDisabledException"
        "486":
          description: EncryptionKeyNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EncryptionKeyNotFoundException"
        "487":
          description: EncryptionKeyUnavailableException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EncryptionKeyUnavailableException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - CodeCommit_20150413.GetRepository
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GetRepositoryInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=CodeCommit_20150413.GetRepositoryTriggers:
    post:
      operationId: GetRepositoryTriggers
      description: Gets information about triggers configured for a repository.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetRepositoryTriggersOutput"
        "480":
          description: RepositoryNameRequiredException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RepositoryNameRequiredException"
        "481":
          description: InvalidRepositoryNameException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRepositoryNameException"
        "482":
          description: RepositoryDoesNotExistException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RepositoryDoesNotExistException"
        "483":
          description: EncryptionIntegrityChecksFailedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EncryptionIntegrityChecksFailedException"
        "484":
          description: EncryptionKeyAccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EncryptionKeyAccessDeniedException"
        "485":
          description: EncryptionKeyDisabledException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EncryptionKeyDisabledException"
        "486":
          description: EncryptionKeyNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EncryptionKeyNotFoundException"
        "487":
          description: EncryptionKeyUnavailableException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EncryptionKeyUnavailableException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - CodeCommit_20150413.GetRepositoryTriggers
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GetRepositoryTriggersInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=CodeCommit_20150413.ListBranches:
    post:
      operationId: ListBranches
      description: Gets information about one or more branches in a repository.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListBranchesOutput"
        "480":
          description: RepositoryNameRequiredException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RepositoryNameRequiredException"
        "481":
          description: RepositoryDoesNotExistException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RepositoryDoesNotExistException"
        "482":
          description: InvalidRepositoryNameException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRepositoryNameException"
        "483":
          description: EncryptionIntegrityChecksFailedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EncryptionIntegrityChecksFailedException"
        "484":
          description: EncryptionKeyAccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EncryptionKeyAccessDeniedException"
        "485":
          description: EncryptionKeyDisabledException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EncryptionKeyDisabledException"
        "486":
          description: EncryptionKeyNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EncryptionKeyNotFoundException"
        "487":
          description: EncryptionKeyUnavailableException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EncryptionKeyUnavailableException"
        "488":
          description: InvalidContinuationTokenException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidContinuationTokenException"
      parameters:
        - name: nextToken
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - CodeCommit_20150413.ListBranches
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ListBranchesInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=CodeCommit_20150413.ListPullRequests:
    post:
      operationId: ListPullRequests
      description: Returns a list of pull requests for a specified repository. The return
        list can be refined by pull request status or pull request author ARN.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListPullRequestsOutput"
        "480":
          description: InvalidPullRequestStatusException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidPullRequestStatusException"
        "481":
          description: InvalidAuthorArnException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidAuthorArnException"
        "482":
          description: AuthorDoesNotExistException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthorDoesNotExistException"
        "483":
          description: RepositoryNameRequiredException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RepositoryNameRequiredException"
        "484":
          description: InvalidRepositoryNameException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRepositoryNameException"
        "485":
          description: RepositoryDoesNotExistException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RepositoryDoesNotExistException"
        "486":
          description: InvalidMaxResultsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidMaxResultsException"
        "487":
          description: InvalidContinuationTokenException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidContinuationTokenException"
        "488":
          description: EncryptionIntegrityChecksFailedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EncryptionIntegrityChecksFailedException"
        "489":
          description: EncryptionKeyAccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EncryptionKeyAccessDeniedException"
        "490":
          description: EncryptionKeyDisabledException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EncryptionKeyDisabledException"
        "491":
          description: EncryptionKeyNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EncryptionKeyNotFoundException"
        "492":
          description: EncryptionKeyUnavailableException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EncryptionKeyUnavailableException"
      parameters:
        - name: maxResults
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: nextToken
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - CodeCommit_20150413.ListPullRequests
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ListPullRequestsInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=CodeCommit_20150413.ListRepositories:
    post:
      operationId: ListRepositories
      description: Gets information about one or more repositories.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListRepositoriesOutput"
        "480":
          description: InvalidSortByException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidSortByException"
        "481":
          description: InvalidOrderException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidOrderException"
        "482":
          description: InvalidContinuationTokenException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidContinuationTokenException"
      parameters:
        - name: nextToken
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - CodeCommit_20150413.ListRepositories
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ListRepositoriesInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=CodeCommit_20150413.ListTagsForResource:
    post:
      operationId: ListTagsForResource
      description: Gets information about AWS tags for a specified Amazon Resource Name
        (ARN) in AWS CodeCommit. For a list of valid resources in AWS
        CodeCommit, see <a
        href="https://docs.aws.amazon.com/codecommit/latest/userguide/auth-and-access-control-iam-access-control-identity-based.html#arn-formats">CodeCommit
        Resources and Operations</a> in the AWS CodeCommit User Guide.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListTagsForResourceOutput"
        "480":
          description: RepositoryDoesNotExistException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RepositoryDoesNotExistException"
        "481":
          description: InvalidRepositoryNameException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRepositoryNameException"
        "482":
          description: ResourceArnRequiredException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceArnRequiredException"
        "483":
          description: InvalidResourceArnException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidResourceArnException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - CodeCommit_20150413.ListTagsForResource
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ListTagsForResourceInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=CodeCommit_20150413.MergeBranchesByFastForward:
    post:
      operationId: MergeBranchesByFastForward
      description: Merges two branches using the fast-forward merge strategy.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MergeBranchesByFastForwardOutput"
        "480":
          description: RepositoryNameRequiredException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RepositoryNameRequiredException"
        "481":
          description: InvalidRepositoryNameException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRepositoryNameException"
        "482":
          description: RepositoryDoesNotExistException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RepositoryDoesNotExistException"
        "483":
          description: TipsDivergenceExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TipsDivergenceExceededException"
        "484":
          description: CommitRequiredException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CommitRequiredException"
        "485":
          description: InvalidCommitException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidCommitException"
        "486":
          description: CommitDoesNotExistException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CommitDoesNotExistException"
        "487":
          description: InvalidTargetBranchException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidTargetBranchException"
        "488":
          description: InvalidBranchNameException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidBranchNameException"
        "489":
          description: BranchNameRequiredException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BranchNameRequiredException"
        "490":
          description: BranchNameIsTagNameException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BranchNameIsTagNameException"
        "491":
          description: BranchDoesNotExistException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BranchDoesNotExistException"
        "492":
          description: ManualMergeRequiredException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ManualMergeRequiredException"
        "493":
          description: ConcurrentReferenceUpdateException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConcurrentReferenceUpdateException"
        "494":
          description: EncryptionIntegrityChecksFailedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EncryptionIntegrityChecksFailedException"
        "495":
          description: EncryptionKeyAccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EncryptionKeyAccessDeniedException"
        "496":
          description: EncryptionKeyDisabledException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EncryptionKeyDisabledException"
        "497":
          description: EncryptionKeyNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EncryptionKeyNotFoundException"
        "498":
          description: EncryptionKeyUnavailableException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EncryptionKeyUnavailableException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - CodeCommit_20150413.MergeBranchesByFastForward
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MergeBranchesByFastForwardInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=CodeCommit_20150413.MergeBranchesBySquash:
    post:
      operationId: MergeBranchesBySquash
      description: Merges two branches using the squash merge strategy.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MergeBranchesBySquashOutput"
        "480":
          description: RepositoryNameRequiredException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RepositoryNameRequiredException"
        "481":
          description: InvalidRepositoryNameException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRepositoryNameException"
        "482":
          description: RepositoryDoesNotExistException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RepositoryDoesNotExistException"
        "483":
          description: TipsDivergenceExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TipsDivergenceExceededException"
        "484":
          description: CommitRequiredException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CommitRequiredException"
        "485":
          description: InvalidCommitException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidCommitException"
        "486":
          description: CommitDoesNotExistException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CommitDoesNotExistException"
        "487":
          description: InvalidTargetBranchException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidTargetBranchException"
        "488":
          description: InvalidBranchNameException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidBranchNameException"
        "489":
          description: BranchNameRequiredException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BranchNameRequiredException"
        "490":
          description: BranchNameIsTagNameException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BranchNameIsTagNameException"
        "491":
          description: BranchDoesNotExistException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BranchDoesNotExistException"
        "492":
          description: ManualMergeRequiredException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ManualMergeRequiredException"
        "493":
          description: InvalidConflictDetailLevelException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidConflictDetailLevelException"
        "494":
          description: InvalidConflictResolutionStrategyException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidConflictResolutionStrategyExcept\
                  ion"
        "495":
          description: InvalidConflictResolutionException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidConflictResolutionException"
        "496":
          description: MaximumConflictResolutionEntriesExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MaximumConflictResolutionEntriesExceede\
                  dException"
        "497":
          description: MultipleConflictResolutionEntriesException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MultipleConflictResolutionEntriesExcept\
                  ion"
        "498":
          description: ReplacementTypeRequiredException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ReplacementTypeRequiredException"
        "499":
          description: InvalidReplacementTypeException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidReplacementTypeException"
        "500":
          description: ReplacementContentRequiredException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ReplacementContentRequiredException"
        "501":
          description: InvalidReplacementContentException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidReplacementContentException"
        "502":
          description: PathRequiredException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PathRequiredException"
        "503":
          description: InvalidPathException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidPathException"
        "504":
          description: FileContentSizeLimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FileContentSizeLimitExceededException"
        "505":
          description: FolderContentSizeLimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FolderContentSizeLimitExceededException"
        "506":
          description: MaximumFileContentToLoadExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MaximumFileContentToLoadExceededExcepti\
                  on"
        "507":
          description: MaximumItemsToCompareExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MaximumItemsToCompareExceededException"
        "508":
          description: FileModeRequiredException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FileModeRequiredException"
        "509":
          description: InvalidFileModeException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidFileModeException"
        "510":
          description: NameLengthExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NameLengthExceededException"
        "511":
          description: InvalidEmailException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidEmailException"
        "512":
          description: CommitMessageLengthExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CommitMessageLengthExceededException"
        "513":
          description: ConcurrentReferenceUpdateException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConcurrentReferenceUpdateException"
        "514":
          description: EncryptionIntegrityChecksFailedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EncryptionIntegrityChecksFailedException"
        "515":
          description: EncryptionKeyAccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EncryptionKeyAccessDeniedException"
        "516":
          description: EncryptionKeyDisabledException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EncryptionKeyDisabledException"
        "517":
          description: EncryptionKeyNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EncryptionKeyNotFoundException"
        "518":
          description: EncryptionKeyUnavailableException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EncryptionKeyUnavailableException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - CodeCommit_20150413.MergeBranchesBySquash
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MergeBranchesBySquashInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=CodeCommit_20150413.MergeBranchesByThreeWay:
    post:
      operationId: MergeBranchesByThreeWay
      description: Merges two specified branches using the three-way merge strategy.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MergeBranchesByThreeWayOutput"
        "480":
          description: RepositoryNameRequiredException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RepositoryNameRequiredException"
        "481":
          description: InvalidRepositoryNameException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRepositoryNameException"
        "482":
          description: RepositoryDoesNotExistException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RepositoryDoesNotExistException"
        "483":
          description: TipsDivergenceExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TipsDivergenceExceededException"
        "484":
          description: CommitRequiredException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CommitRequiredException"
        "485":
          description: InvalidCommitException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidCommitException"
        "486":
          description: CommitDoesNotExistException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CommitDoesNotExistException"
        "487":
          description: InvalidTargetBranchException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidTargetBranchException"
        "488":
          description: InvalidBranchNameException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidBranchNameException"
        "489":
          description: BranchNameRequiredException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BranchNameRequiredException"
        "490":
          description: BranchNameIsTagNameException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BranchNameIsTagNameException"
        "491":
          description: BranchDoesNotExistException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BranchDoesNotExistException"
        "492":
          description: ManualMergeRequiredException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ManualMergeRequiredException"
        "493":
          description: ConcurrentReferenceUpdateException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConcurrentReferenceUpdateException"
        "494":
          description: InvalidConflictDetailLevelException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidConflictDetailLevelException"
        "495":
          description: InvalidConflictResolutionStrategyException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidConflictResolutionStrategyExcept\
                  ion"
        "496":
          description: InvalidConflictResolutionException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidConflictResolutionException"
        "497":
          description: MaximumConflictResolutionEntriesExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MaximumConflictResolutionEntriesExceede\
                  dException"
        "498":
          description: MultipleConflictResolutionEntriesException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MultipleConflictResolutionEntriesExcept\
                  ion"
        "499":
          description: ReplacementTypeRequiredException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ReplacementTypeRequiredException"
        "500":
          description: InvalidReplacementTypeException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidReplacementTypeException"
        "501":
          description: ReplacementContentRequiredException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ReplacementContentRequiredException"
        "502":
          description: InvalidReplacementContentException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidReplacementContentException"
        "503":
          description: PathRequiredException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PathRequiredException"
        "504":
          description: InvalidPathException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidPathException"
        "505":
          description: FileContentSizeLimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FileContentSizeLimitExceededException"
        "506":
          description: FolderContentSizeLimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FolderContentSizeLimitExceededException"
        "507":
          description: MaximumFileContentToLoadExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MaximumFileContentToLoadExceededExcepti\
                  on"
        "508":
          description: MaximumItemsToCompareExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MaximumItemsToCompareExceededException"
        "509":
          description: FileModeRequiredException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FileModeRequiredException"
        "510":
          description: InvalidFileModeException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidFileModeException"
        "511":
          description: NameLengthExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NameLengthExceededException"
        "512":
          description: InvalidEmailException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidEmailException"
        "513":
          description: CommitMessageLengthExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CommitMessageLengthExceededException"
        "514":
          description: EncryptionIntegrityChecksFailedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EncryptionIntegrityChecksFailedException"
        "515":
          description: EncryptionKeyAccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EncryptionKeyAccessDeniedException"
        "516":
          description: EncryptionKeyDisabledException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EncryptionKeyDisabledException"
        "517":
          description: EncryptionKeyNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EncryptionKeyNotFoundException"
        "518":
          description: EncryptionKeyUnavailableException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EncryptionKeyUnavailableException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - CodeCommit_20150413.MergeBranchesByThreeWay
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MergeBranchesByThreeWayInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=CodeCommit_20150413.MergePullRequestByFastForward:
    post:
      operationId: MergePullRequestByFastForward
      description: Attempts to merge the source commit of a pull request into the specified
        destination branch for that pull request at the specified commit using
        the fast-forward merge strategy. If the merge is successful, it closes
        the pull request.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MergePullRequestByFastForwardOutput"
        "480":
          description: ManualMergeRequiredException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ManualMergeRequiredException"
        "481":
          description: PullRequestAlreadyClosedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PullRequestAlreadyClosedException"
        "482":
          description: PullRequestDoesNotExistException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PullRequestDoesNotExistException"
        "483":
          description: InvalidPullRequestIdException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidPullRequestIdException"
        "484":
          description: PullRequestIdRequiredException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PullRequestIdRequiredException"
        "485":
          description: TipOfSourceReferenceIsDifferentException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TipOfSourceReferenceIsDifferentException"
        "486":
          description: ReferenceDoesNotExistException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ReferenceDoesNotExistException"
        "487":
          description: InvalidCommitIdException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidCommitIdException"
        "488":
          description: RepositoryNotAssociatedWithPullRequestException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RepositoryNotAssociatedWithPullRequestE\
                  xception"
        "489":
          description: RepositoryNameRequiredException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RepositoryNameRequiredException"
        "490":
          description: InvalidRepositoryNameException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRepositoryNameException"
        "491":
          description: RepositoryDoesNotExistException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RepositoryDoesNotExistException"
        "492":
          description: ConcurrentReferenceUpdateException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConcurrentReferenceUpdateException"
        "493":
          description: EncryptionIntegrityChecksFailedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EncryptionIntegrityChecksFailedException"
        "494":
          description: EncryptionKeyAccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EncryptionKeyAccessDeniedException"
        "495":
          description: EncryptionKeyDisabledException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EncryptionKeyDisabledException"
        "496":
          description: EncryptionKeyNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EncryptionKeyNotFoundException"
        "497":
          description: EncryptionKeyUnavailableException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EncryptionKeyUnavailableException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - CodeCommit_20150413.MergePullRequestByFastForward
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MergePullRequestByFastForwardInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=CodeCommit_20150413.MergePullRequestBySquash:
    post:
      operationId: MergePullRequestBySquash
      description: Attempts to merge the source commit of a pull request into the specified
        destination branch for that pull request at the specified commit using
        the squash merge strategy. If the merge is successful, it closes the
        pull request.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MergePullRequestBySquashOutput"
        "480":
          description: PullRequestAlreadyClosedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PullRequestAlreadyClosedException"
        "481":
          description: PullRequestDoesNotExistException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PullRequestDoesNotExistException"
        "482":
          description: PullRequestIdRequiredException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PullRequestIdRequiredException"
        "483":
          description: InvalidPullRequestIdException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidPullRequestIdException"
        "484":
          description: InvalidCommitIdException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidCommitIdException"
        "485":
          description: ManualMergeRequiredException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ManualMergeRequiredException"
        "486":
          description: TipOfSourceReferenceIsDifferentException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TipOfSourceReferenceIsDifferentException"
        "487":
          description: TipsDivergenceExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TipsDivergenceExceededException"
        "488":
          description: NameLengthExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NameLengthExceededException"
        "489":
          description: InvalidEmailException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidEmailException"
        "490":
          description: CommitMessageLengthExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CommitMessageLengthExceededException"
        "491":
          description: InvalidConflictDetailLevelException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidConflictDetailLevelException"
        "492":
          description: InvalidConflictResolutionStrategyException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidConflictResolutionStrategyExcept\
                  ion"
        "493":
          description: InvalidConflictResolutionException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidConflictResolutionException"
        "494":
          description: ReplacementTypeRequiredException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ReplacementTypeRequiredException"
        "495":
          description: InvalidReplacementTypeException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidReplacementTypeException"
        "496":
          description: MultipleConflictResolutionEntriesException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MultipleConflictResolutionEntriesExcept\
                  ion"
        "497":
          description: ReplacementContentRequiredException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ReplacementContentRequiredException"
        "498":
          description: MaximumConflictResolutionEntriesExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MaximumConflictResolutionEntriesExceede\
                  dException"
        "499":
          description: ConcurrentReferenceUpdateException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConcurrentReferenceUpdateException"
        "500":
          description: PathRequiredException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PathRequiredException"
        "501":
          description: InvalidPathException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidPathException"
        "502":
          description: InvalidFileModeException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidFileModeException"
        "503":
          description: InvalidReplacementContentException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidReplacementContentException"
        "504":
          description: FileContentSizeLimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FileContentSizeLimitExceededException"
        "505":
          description: FolderContentSizeLimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FolderContentSizeLimitExceededException"
        "506":
          description: MaximumFileContentToLoadExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MaximumFileContentToLoadExceededExcepti\
                  on"
        "507":
          description: MaximumItemsToCompareExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MaximumItemsToCompareExceededException"
        "508":
          description: RepositoryNameRequiredException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RepositoryNameRequiredException"
        "509":
          description: InvalidRepositoryNameException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRepositoryNameException"
        "510":
          description: RepositoryDoesNotExistException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RepositoryDoesNotExistException"
        "511":
          description: RepositoryNotAssociatedWithPullRequestException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RepositoryNotAssociatedWithPullRequestE\
                  xception"
        "512":
          description: EncryptionIntegrityChecksFailedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EncryptionIntegrityChecksFailedException"
        "513":
          description: EncryptionKeyAccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EncryptionKeyAccessDeniedException"
        "514":
          description: EncryptionKeyDisabledException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EncryptionKeyDisabledException"
        "515":
          description: EncryptionKeyNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EncryptionKeyNotFoundException"
        "516":
          description: EncryptionKeyUnavailableException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EncryptionKeyUnavailableException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - CodeCommit_20150413.MergePullRequestBySquash
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MergePullRequestBySquashInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=CodeCommit_20150413.MergePullRequestByThreeWay:
    post:
      operationId: MergePullRequestByThreeWay
      description: Attempts to merge the source commit of a pull request into the specified
        destination branch for that pull request at the specified commit using
        the three-way merge strategy. If the merge is successful, it closes the
        pull request.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MergePullRequestByThreeWayOutput"
        "480":
          description: PullRequestAlreadyClosedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PullRequestAlreadyClosedException"
        "481":
          description: PullRequestDoesNotExistException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PullRequestDoesNotExistException"
        "482":
          description: PullRequestIdRequiredException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PullRequestIdRequiredException"
        "483":
          description: InvalidPullRequestIdException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidPullRequestIdException"
        "484":
          description: InvalidCommitIdException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidCommitIdException"
        "485":
          description: ManualMergeRequiredException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ManualMergeRequiredException"
        "486":
          description: TipOfSourceReferenceIsDifferentException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TipOfSourceReferenceIsDifferentException"
        "487":
          description: TipsDivergenceExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TipsDivergenceExceededException"
        "488":
          description: NameLengthExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NameLengthExceededException"
        "489":
          description: InvalidEmailException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidEmailException"
        "490":
          description: CommitMessageLengthExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CommitMessageLengthExceededException"
        "491":
          description: InvalidConflictDetailLevelException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidConflictDetailLevelException"
        "492":
          description: InvalidConflictResolutionStrategyException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidConflictResolutionStrategyExcept\
                  ion"
        "493":
          description: InvalidConflictResolutionException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidConflictResolutionException"
        "494":
          description: ReplacementTypeRequiredException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ReplacementTypeRequiredException"
        "495":
          description: InvalidReplacementTypeException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidReplacementTypeException"
        "496":
          description: MultipleConflictResolutionEntriesException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MultipleConflictResolutionEntriesExcept\
                  ion"
        "497":
          description: ReplacementContentRequiredException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ReplacementContentRequiredException"
        "498":
          description: MaximumConflictResolutionEntriesExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MaximumConflictResolutionEntriesExceede\
                  dException"
        "499":
          description: PathRequiredException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PathRequiredException"
        "500":
          description: InvalidPathException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidPathException"
        "501":
          description: InvalidFileModeException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidFileModeException"
        "502":
          description: InvalidReplacementContentException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidReplacementContentException"
        "503":
          description: FileContentSizeLimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FileContentSizeLimitExceededException"
        "504":
          description: FolderContentSizeLimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FolderContentSizeLimitExceededException"
        "505":
          description: MaximumFileContentToLoadExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MaximumFileContentToLoadExceededExcepti\
                  on"
        "506":
          description: MaximumItemsToCompareExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MaximumItemsToCompareExceededException"
        "507":
          description: RepositoryNameRequiredException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RepositoryNameRequiredException"
        "508":
          description: InvalidRepositoryNameException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRepositoryNameException"
        "509":
          description: RepositoryDoesNotExistException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RepositoryDoesNotExistException"
        "510":
          description: RepositoryNotAssociatedWithPullRequestException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RepositoryNotAssociatedWithPullRequestE\
                  xception"
        "511":
          description: ConcurrentReferenceUpdateException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConcurrentReferenceUpdateException"
        "512":
          description: EncryptionIntegrityChecksFailedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EncryptionIntegrityChecksFailedException"
        "513":
          description: EncryptionKeyAccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EncryptionKeyAccessDeniedException"
        "514":
          description: EncryptionKeyDisabledException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EncryptionKeyDisabledException"
        "515":
          description: EncryptionKeyNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EncryptionKeyNotFoundException"
        "516":
          description: EncryptionKeyUnavailableException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EncryptionKeyUnavailableException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - CodeCommit_20150413.MergePullRequestByThreeWay
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MergePullRequestByThreeWayInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=CodeCommit_20150413.PostCommentForComparedCommit:
    post:
      operationId: PostCommentForComparedCommit
      description: Posts a comment on the comparison between two commits.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PostCommentForComparedCommitOutput"
        "480":
          description: RepositoryNameRequiredException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RepositoryNameRequiredException"
        "481":
          description: RepositoryDoesNotExistException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RepositoryDoesNotExistException"
        "482":
          description: InvalidRepositoryNameException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRepositoryNameException"
        "483":
          description: ClientRequestTokenRequiredException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ClientRequestTokenRequiredException"
        "484":
          description: InvalidClientRequestTokenException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidClientRequestTokenException"
        "485":
          description: IdempotencyParameterMismatchException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/IdempotencyParameterMismatchException"
        "486":
          description: CommentContentRequiredException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CommentContentRequiredException"
        "487":
          description: CommentContentSizeLimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CommentContentSizeLimitExceededException"
        "488":
          description: InvalidFileLocationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidFileLocationException"
        "489":
          description: InvalidRelativeFileVersionEnumException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRelativeFileVersionEnumException"
        "490":
          description: PathRequiredException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PathRequiredException"
        "491":
          description: InvalidFilePositionException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidFilePositionException"
        "492":
          description: CommitIdRequiredException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CommitIdRequiredException"
        "493":
          description: InvalidCommitIdException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidCommitIdException"
        "494":
          description: EncryptionIntegrityChecksFailedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EncryptionIntegrityChecksFailedException"
        "495":
          description: EncryptionKeyAccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EncryptionKeyAccessDeniedException"
        "496":
          description: EncryptionKeyDisabledException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EncryptionKeyDisabledException"
        "497":
          description: EncryptionKeyNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EncryptionKeyNotFoundException"
        "498":
          description: EncryptionKeyUnavailableException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EncryptionKeyUnavailableException"
        "499":
          description: BeforeCommitIdAndAfterCommitIdAreSameException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BeforeCommitIdAndAfterCommitIdAreSameEx\
                  ception"
        "500":
          description: CommitDoesNotExistException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CommitDoesNotExistException"
        "501":
          description: InvalidPathException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidPathException"
        "502":
          description: PathDoesNotExistException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PathDoesNotExistException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - CodeCommit_20150413.PostCommentForComparedCommit
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PostCommentForComparedCommitInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=CodeCommit_20150413.PostCommentForPullRequest:
    post:
      operationId: PostCommentForPullRequest
      description: Posts a comment on a pull request.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PostCommentForPullRequestOutput"
        "480":
          description: PullRequestDoesNotExistException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PullRequestDoesNotExistException"
        "481":
          description: InvalidPullRequestIdException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidPullRequestIdException"
        "482":
          description: PullRequestIdRequiredException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PullRequestIdRequiredException"
        "483":
          description: RepositoryNotAssociatedWithPullRequestException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RepositoryNotAssociatedWithPullRequestE\
                  xception"
        "484":
          description: RepositoryNameRequiredException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RepositoryNameRequiredException"
        "485":
          description: RepositoryDoesNotExistException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RepositoryDoesNotExistException"
        "486":
          description: InvalidRepositoryNameException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRepositoryNameException"
        "487":
          description: ClientRequestTokenRequiredException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ClientRequestTokenRequiredException"
        "488":
          description: InvalidClientRequestTokenException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidClientRequestTokenException"
        "489":
          description: IdempotencyParameterMismatchException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/IdempotencyParameterMismatchException"
        "490":
          description: CommentContentRequiredException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CommentContentRequiredException"
        "491":
          description: CommentContentSizeLimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CommentContentSizeLimitExceededException"
        "492":
          description: InvalidFileLocationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidFileLocationException"
        "493":
          description: InvalidRelativeFileVersionEnumException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRelativeFileVersionEnumException"
        "494":
          description: PathRequiredException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PathRequiredException"
        "495":
          description: InvalidFilePositionException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidFilePositionException"
        "496":
          description: CommitIdRequiredException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CommitIdRequiredException"
        "497":
          description: InvalidCommitIdException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidCommitIdException"
        "498":
          description: EncryptionIntegrityChecksFailedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EncryptionIntegrityChecksFailedException"
        "499":
          description: EncryptionKeyAccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EncryptionKeyAccessDeniedException"
        "500":
          description: EncryptionKeyDisabledException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EncryptionKeyDisabledException"
        "501":
          description: EncryptionKeyNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EncryptionKeyNotFoundException"
        "502":
          description: EncryptionKeyUnavailableException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EncryptionKeyUnavailableException"
        "503":
          description: CommitDoesNotExistException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CommitDoesNotExistException"
        "504":
          description: InvalidPathException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidPathException"
        "505":
          description: PathDoesNotExistException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PathDoesNotExistException"
        "506":
          description: PathRequiredException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PathRequiredException"
        "507":
          description: BeforeCommitIdAndAfterCommitIdAreSameException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BeforeCommitIdAndAfterCommitIdAreSameEx\
                  ception"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - CodeCommit_20150413.PostCommentForPullRequest
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PostCommentForPullRequestInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=CodeCommit_20150413.PostCommentReply:
    post:
      operationId: PostCommentReply
      description: Posts a comment in reply to an existing comment on a comparison between
        commits or a pull request.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PostCommentReplyOutput"
        "480":
          description: ClientRequestTokenRequiredException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ClientRequestTokenRequiredException"
        "481":
          description: InvalidClientRequestTokenException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidClientRequestTokenException"
        "482":
          description: IdempotencyParameterMismatchException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/IdempotencyParameterMismatchException"
        "483":
          description: CommentContentRequiredException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CommentContentRequiredException"
        "484":
          description: CommentContentSizeLimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CommentContentSizeLimitExceededException"
        "485":
          description: CommentDoesNotExistException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CommentDoesNotExistException"
        "486":
          description: CommentIdRequiredException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CommentIdRequiredException"
        "487":
          description: InvalidCommentIdException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidCommentIdException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - CodeCommit_20150413.PostCommentReply
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PostCommentReplyInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=CodeCommit_20150413.PutFile:
    post:
      operationId: PutFile
      description: Adds or updates a file in a branch in an AWS CodeCommit repository, and
        generates a commit for the addition in the specified branch.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PutFileOutput"
        "480":
          description: RepositoryNameRequiredException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RepositoryNameRequiredException"
        "481":
          description: InvalidRepositoryNameException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRepositoryNameException"
        "482":
          description: RepositoryDoesNotExistException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RepositoryDoesNotExistException"
        "483":
          description: ParentCommitIdRequiredException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ParentCommitIdRequiredException"
        "484":
          description: InvalidParentCommitIdException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParentCommitIdException"
        "485":
          description: ParentCommitDoesNotExistException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ParentCommitDoesNotExistException"
        "486":
          description: ParentCommitIdOutdatedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ParentCommitIdOutdatedException"
        "487":
          description: FileContentRequiredException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FileContentRequiredException"
        "488":
          description: FileContentSizeLimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FileContentSizeLimitExceededException"
        "489":
          description: FolderContentSizeLimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FolderContentSizeLimitExceededException"
        "490":
          description: PathRequiredException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PathRequiredException"
        "491":
          description: InvalidPathException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidPathException"
        "492":
          description: BranchNameRequiredException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BranchNameRequiredException"
        "493":
          description: InvalidBranchNameException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidBranchNameException"
        "494":
          description: BranchDoesNotExistException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BranchDoesNotExistException"
        "495":
          description: BranchNameIsTagNameException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BranchNameIsTagNameException"
        "496":
          description: InvalidFileModeException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidFileModeException"
        "497":
          description: NameLengthExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NameLengthExceededException"
        "498":
          description: InvalidEmailException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidEmailException"
        "499":
          description: CommitMessageLengthExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CommitMessageLengthExceededException"
        "500":
          description: InvalidDeletionParameterException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidDeletionParameterException"
        "501":
          description: EncryptionIntegrityChecksFailedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EncryptionIntegrityChecksFailedException"
        "502":
          description: EncryptionKeyAccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EncryptionKeyAccessDeniedException"
        "503":
          description: EncryptionKeyDisabledException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EncryptionKeyDisabledException"
        "504":
          description: EncryptionKeyNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EncryptionKeyNotFoundException"
        "505":
          description: EncryptionKeyUnavailableException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EncryptionKeyUnavailableException"
        "506":
          description: SameFileContentException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SameFileContentException"
        "507":
          description: FileNameConflictsWithDirectoryNameException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FileNameConflictsWithDirectoryNameExcep\
                  tion"
        "508":
          description: DirectoryNameConflictsWithFileNameException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DirectoryNameConflictsWithFileNameExcep\
                  tion"
        "509":
          description: FilePathConflictsWithSubmodulePathException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FilePathConflictsWithSubmodulePathExcep\
                  tion"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - CodeCommit_20150413.PutFile
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PutFileInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=CodeCommit_20150413.PutRepositoryTriggers:
    post:
      operationId: PutRepositoryTriggers
      description: Replaces all triggers for a repository. This can be used to create or
        delete triggers.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PutRepositoryTriggersOutput"
        "480":
          description: RepositoryDoesNotExistException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RepositoryDoesNotExistException"
        "481":
          description: RepositoryNameRequiredException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RepositoryNameRequiredException"
        "482":
          description: InvalidRepositoryNameException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRepositoryNameException"
        "483":
          description: RepositoryTriggersListRequiredException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RepositoryTriggersListRequiredException"
        "484":
          description: MaximumRepositoryTriggersExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MaximumRepositoryTriggersExceededExcept\
                  ion"
        "485":
          description: InvalidRepositoryTriggerNameException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRepositoryTriggerNameException"
        "486":
          description: InvalidRepositoryTriggerDestinationArnException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRepositoryTriggerDestinationArnE\
                  xception"
        "487":
          description: InvalidRepositoryTriggerRegionException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRepositoryTriggerRegionException"
        "488":
          description: InvalidRepositoryTriggerCustomDataException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRepositoryTriggerCustomDataExcep\
                  tion"
        "489":
          description: MaximumBranchesExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MaximumBranchesExceededException"
        "490":
          description: InvalidRepositoryTriggerBranchNameException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRepositoryTriggerBranchNameExcep\
                  tion"
        "491":
          description: InvalidRepositoryTriggerEventsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRepositoryTriggerEventsException"
        "492":
          description: RepositoryTriggerNameRequiredException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RepositoryTriggerNameRequiredException"
        "493":
          description: RepositoryTriggerDestinationArnRequiredException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RepositoryTriggerDestinationArnRequired\
                  Exception"
        "494":
          description: RepositoryTriggerBranchNameListRequiredException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RepositoryTriggerBranchNameListRequired\
                  Exception"
        "495":
          description: RepositoryTriggerEventsListRequiredException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RepositoryTriggerEventsListRequiredExce\
                  ption"
        "496":
          description: EncryptionIntegrityChecksFailedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EncryptionIntegrityChecksFailedException"
        "497":
          description: EncryptionKeyAccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EncryptionKeyAccessDeniedException"
        "498":
          description: EncryptionKeyDisabledException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EncryptionKeyDisabledException"
        "499":
          description: EncryptionKeyNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EncryptionKeyNotFoundException"
        "500":
          description: EncryptionKeyUnavailableException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EncryptionKeyUnavailableException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - CodeCommit_20150413.PutRepositoryTriggers
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PutRepositoryTriggersInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=CodeCommit_20150413.TagResource:
    post:
      operationId: TagResource
      description: Adds or updates tags for a resource in AWS CodeCommit. For a list of
        valid resources in AWS CodeCommit, see <a
        href="https://docs.aws.amazon.com/codecommit/latest/userguide/auth-and-access-control-iam-access-control-identity-based.html#arn-formats">CodeCommit
        Resources and Operations</a> in the AWS CodeCommit User Guide.
      responses:
        "200":
          description: Success
        "480":
          description: RepositoryDoesNotExistException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RepositoryDoesNotExistException"
        "481":
          description: InvalidRepositoryNameException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRepositoryNameException"
        "482":
          description: ResourceArnRequiredException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceArnRequiredException"
        "483":
          description: InvalidResourceArnException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidResourceArnException"
        "484":
          description: TagsMapRequiredException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TagsMapRequiredException"
        "485":
          description: InvalidTagsMapException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidTagsMapException"
        "486":
          description: TooManyTagsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TooManyTagsException"
        "487":
          description: InvalidSystemTagUsageException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidSystemTagUsageException"
        "488":
          description: TagPolicyException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TagPolicyException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - CodeCommit_20150413.TagResource
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TagResourceInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=CodeCommit_20150413.TestRepositoryTriggers:
    post:
      operationId: TestRepositoryTriggers
      description: Tests the functionality of repository triggers by sending information to
        the trigger target. If real data is available in the repository, the
        test will send data from the last commit. If no data is available,
        sample data will be generated.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TestRepositoryTriggersOutput"
        "480":
          description: RepositoryDoesNotExistException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RepositoryDoesNotExistException"
        "481":
          description: RepositoryNameRequiredException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RepositoryNameRequiredException"
        "482":
          description: InvalidRepositoryNameException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRepositoryNameException"
        "483":
          description: RepositoryTriggersListRequiredException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RepositoryTriggersListRequiredException"
        "484":
          description: MaximumRepositoryTriggersExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MaximumRepositoryTriggersExceededExcept\
                  ion"
        "485":
          description: InvalidRepositoryTriggerNameException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRepositoryTriggerNameException"
        "486":
          description: InvalidRepositoryTriggerDestinationArnException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRepositoryTriggerDestinationArnE\
                  xception"
        "487":
          description: InvalidRepositoryTriggerRegionException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRepositoryTriggerRegionException"
        "488":
          description: InvalidRepositoryTriggerCustomDataException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRepositoryTriggerCustomDataExcep\
                  tion"
        "489":
          description: MaximumBranchesExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MaximumBranchesExceededException"
        "490":
          description: InvalidRepositoryTriggerBranchNameException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRepositoryTriggerBranchNameExcep\
                  tion"
        "491":
          description: InvalidRepositoryTriggerEventsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRepositoryTriggerEventsException"
        "492":
          description: RepositoryTriggerNameRequiredException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RepositoryTriggerNameRequiredException"
        "493":
          description: RepositoryTriggerDestinationArnRequiredException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RepositoryTriggerDestinationArnRequired\
                  Exception"
        "494":
          description: RepositoryTriggerBranchNameListRequiredException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RepositoryTriggerBranchNameListRequired\
                  Exception"
        "495":
          description: RepositoryTriggerEventsListRequiredException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RepositoryTriggerEventsListRequiredExce\
                  ption"
        "496":
          description: EncryptionIntegrityChecksFailedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EncryptionIntegrityChecksFailedException"
        "497":
          description: EncryptionKeyAccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EncryptionKeyAccessDeniedException"
        "498":
          description: EncryptionKeyDisabledException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EncryptionKeyDisabledException"
        "499":
          description: EncryptionKeyNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EncryptionKeyNotFoundException"
        "500":
          description: EncryptionKeyUnavailableException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EncryptionKeyUnavailableException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - CodeCommit_20150413.TestRepositoryTriggers
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TestRepositoryTriggersInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=CodeCommit_20150413.UntagResource:
    post:
      operationId: UntagResource
      description: Removes tags for a resource in AWS CodeCommit. For a list of valid
        resources in AWS CodeCommit, see <a
        href="https://docs.aws.amazon.com/codecommit/latest/userguide/auth-and-access-control-iam-access-control-identity-based.html#arn-formats">CodeCommit
        Resources and Operations</a> in the AWS CodeCommit User Guide.
      responses:
        "200":
          description: Success
        "480":
          description: RepositoryDoesNotExistException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RepositoryDoesNotExistException"
        "481":
          description: InvalidRepositoryNameException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRepositoryNameException"
        "482":
          description: ResourceArnRequiredException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceArnRequiredException"
        "483":
          description: InvalidResourceArnException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidResourceArnException"
        "484":
          description: TagKeysListRequiredException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TagKeysListRequiredException"
        "485":
          description: InvalidTagKeysListException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidTagKeysListException"
        "486":
          description: TooManyTagsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TooManyTagsException"
        "487":
          description: InvalidSystemTagUsageException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidSystemTagUsageException"
        "488":
          description: TagPolicyException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TagPolicyException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - CodeCommit_20150413.UntagResource
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UntagResourceInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=CodeCommit_20150413.UpdateComment:
    post:
      operationId: UpdateComment
      description: Replaces the contents of a comment.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateCommentOutput"
        "480":
          description: CommentContentRequiredException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CommentContentRequiredException"
        "481":
          description: CommentContentSizeLimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CommentContentSizeLimitExceededException"
        "482":
          description: CommentDoesNotExistException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CommentDoesNotExistException"
        "483":
          description: CommentIdRequiredException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CommentIdRequiredException"
        "484":
          description: InvalidCommentIdException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidCommentIdException"
        "485":
          description: CommentNotCreatedByCallerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CommentNotCreatedByCallerException"
        "486":
          description: CommentDeletedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CommentDeletedException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - CodeCommit_20150413.UpdateComment
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateCommentInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=CodeCommit_20150413.UpdateDefaultBranch:
    post:
      operationId: UpdateDefaultBranch
      description: <p>Sets or changes the default branch name for the specified
        repository.</p> <note> <p>If you use this operation to change the
        default branch name to the current default branch name, a success
        message is returned even though the default branch did not change.</p>
        </note>
      responses:
        "200":
          description: Success
        "480":
          description: RepositoryNameRequiredException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RepositoryNameRequiredException"
        "481":
          description: RepositoryDoesNotExistException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RepositoryDoesNotExistException"
        "482":
          description: InvalidRepositoryNameException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRepositoryNameException"
        "483":
          description: BranchNameRequiredException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BranchNameRequiredException"
        "484":
          description: InvalidBranchNameException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidBranchNameException"
        "485":
          description: BranchDoesNotExistException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BranchDoesNotExistException"
        "486":
          description: EncryptionIntegrityChecksFailedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EncryptionIntegrityChecksFailedException"
        "487":
          description: EncryptionKeyAccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EncryptionKeyAccessDeniedException"
        "488":
          description: EncryptionKeyDisabledException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EncryptionKeyDisabledException"
        "489":
          description: EncryptionKeyNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EncryptionKeyNotFoundException"
        "490":
          description: EncryptionKeyUnavailableException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EncryptionKeyUnavailableException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - CodeCommit_20150413.UpdateDefaultBranch
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateDefaultBranchInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=CodeCommit_20150413.UpdatePullRequestDescription:
    post:
      operationId: UpdatePullRequestDescription
      description: Replaces the contents of the description of a pull request.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdatePullRequestDescriptionOutput"
        "480":
          description: PullRequestDoesNotExistException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PullRequestDoesNotExistException"
        "481":
          description: InvalidPullRequestIdException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidPullRequestIdException"
        "482":
          description: PullRequestIdRequiredException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PullRequestIdRequiredException"
        "483":
          description: InvalidDescriptionException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidDescriptionException"
        "484":
          description: PullRequestAlreadyClosedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PullRequestAlreadyClosedException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - CodeCommit_20150413.UpdatePullRequestDescription
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdatePullRequestDescriptionInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=CodeCommit_20150413.UpdatePullRequestStatus:
    post:
      operationId: UpdatePullRequestStatus
      description: "Updates the status of a pull request. "
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdatePullRequestStatusOutput"
        "480":
          description: PullRequestDoesNotExistException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PullRequestDoesNotExistException"
        "481":
          description: InvalidPullRequestIdException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidPullRequestIdException"
        "482":
          description: PullRequestIdRequiredException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PullRequestIdRequiredException"
        "483":
          description: InvalidPullRequestStatusUpdateException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidPullRequestStatusUpdateException"
        "484":
          description: InvalidPullRequestStatusException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidPullRequestStatusException"
        "485":
          description: PullRequestStatusRequiredException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PullRequestStatusRequiredException"
        "486":
          description: EncryptionIntegrityChecksFailedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EncryptionIntegrityChecksFailedException"
        "487":
          description: EncryptionKeyAccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EncryptionKeyAccessDeniedException"
        "488":
          description: EncryptionKeyDisabledException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EncryptionKeyDisabledException"
        "489":
          description: EncryptionKeyNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EncryptionKeyNotFoundException"
        "490":
          description: EncryptionKeyUnavailableException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EncryptionKeyUnavailableException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - CodeCommit_20150413.UpdatePullRequestStatus
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdatePullRequestStatusInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=CodeCommit_20150413.UpdatePullRequestTitle:
    post:
      operationId: UpdatePullRequestTitle
      description: Replaces the title of a pull request.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdatePullRequestTitleOutput"
        "480":
          description: PullRequestDoesNotExistException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PullRequestDoesNotExistException"
        "481":
          description: InvalidPullRequestIdException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidPullRequestIdException"
        "482":
          description: PullRequestIdRequiredException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PullRequestIdRequiredException"
        "483":
          description: TitleRequiredException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TitleRequiredException"
        "484":
          description: InvalidTitleException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidTitleException"
        "485":
          description: PullRequestAlreadyClosedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PullRequestAlreadyClosedException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - CodeCommit_20150413.UpdatePullRequestTitle
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdatePullRequestTitleInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=CodeCommit_20150413.UpdateRepositoryDescription:
    post:
      operationId: UpdateRepositoryDescription
      description: <p>Sets or changes the comment or description for a repository.</p>
        <note> <p>The description field for a repository accepts all HTML
        characters and all valid Unicode characters. Applications that do not
        HTML-encode the description and display it in a web page could expose
        users to potentially malicious code. Make sure that you HTML-encode the
        description field in any application that uses this API to display the
        repository description on a web page.</p> </note>
      responses:
        "200":
          description: Success
        "480":
          description: RepositoryNameRequiredException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RepositoryNameRequiredException"
        "481":
          description: RepositoryDoesNotExistException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RepositoryDoesNotExistException"
        "482":
          description: InvalidRepositoryNameException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRepositoryNameException"
        "483":
          description: InvalidRepositoryDescriptionException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRepositoryDescriptionException"
        "484":
          description: EncryptionIntegrityChecksFailedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EncryptionIntegrityChecksFailedException"
        "485":
          description: EncryptionKeyAccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EncryptionKeyAccessDeniedException"
        "486":
          description: EncryptionKeyDisabledException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EncryptionKeyDisabledException"
        "487":
          description: EncryptionKeyNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EncryptionKeyNotFoundException"
        "488":
          description: EncryptionKeyUnavailableException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EncryptionKeyUnavailableException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - CodeCommit_20150413.UpdateRepositoryDescription
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateRepositoryDescriptionInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=CodeCommit_20150413.UpdateRepositoryName:
    post:
      operationId: UpdateRepositoryName
      description: Renames a repository. The repository name must be unique across the
        calling AWS account. In addition, repository names are limited to 100
        alphanumeric, dash, and underscore characters, and cannot include
        certain characters. The suffix ".git" is prohibited. For a full
        description of the limits on repository names, see <a
        href="https://docs.aws.amazon.com/codecommit/latest/userguide/limits.html">Limits</a>
        in the AWS CodeCommit User Guide.
      responses:
        "200":
          description: Success
        "480":
          description: RepositoryDoesNotExistException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RepositoryDoesNotExistException"
        "481":
          description: RepositoryNameExistsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RepositoryNameExistsException"
        "482":
          description: RepositoryNameRequiredException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RepositoryNameRequiredException"
        "483":
          description: InvalidRepositoryNameException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRepositoryNameException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - CodeCommit_20150413.UpdateRepositoryName
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateRepositoryNameInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
servers:
  - url: http://codecommit.{region}.amazonaws.com
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-south-1
          - sa-east-1
        default: us-east-1
    description: The CodeCommit multi-region endpoint
  - url: https://codecommit.{region}.amazonaws.com
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-south-1
          - sa-east-1
        default: us-east-1
    description: The CodeCommit multi-region endpoint
  - url: http://codecommit.{region}.amazonaws.com.cn
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The CodeCommit endpoint for China (Beijing) and China (Ningxia)
  - url: https://codecommit.{region}.amazonaws.com.cn
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The CodeCommit endpoint for China (Beijing) and China (Ningxia)
components:
  parameters:
    X-Amz-Content-Sha256:
      name: X-Amz-Content-Sha256
      in: header
      required: false
      schema:
        type: string
    X-Amz-Date:
      name: X-Amz-Date
      in: header
      required: false
      schema:
        type: string
    X-Amz-Algorithm:
      name: X-Amz-Algorithm
      in: header
      required: false
      schema:
        type: string
    X-Amz-Credential:
      name: X-Amz-Credential
      in: header
      required: false
      schema:
        type: string
    X-Amz-Security-Token:
      name: X-Amz-Security-Token
      in: header
      required: false
      schema:
        type: string
    X-Amz-Signature:
      name: X-Amz-Signature
      in: header
      required: false
      schema:
        type: string
    X-Amz-SignedHeaders:
      name: X-Amz-SignedHeaders
      in: header
      required: false
      schema:
        type: string
  securitySchemes:
    hmac:
      type: apiKey
      name: Authorization
      in: header
      description: Amazon Signature authorization v4
      x-amazon-apigateway-authtype: awsSigv4
  schemas:
    BatchDescribeMergeConflictsOutput:
      type: object
      required:
        - conflicts
        - destinationCommitId
        - sourceCommitId
      properties:
        conflicts:
          $ref: "#/components/schemas/Conflicts"
        nextToken:
          $ref: "#/components/schemas/NextToken"
        errors:
          $ref: "#/components/schemas/BatchDescribeMergeConflictsErrors"
        destinationCommitId:
          $ref: "#/components/schemas/ObjectId"
        sourceCommitId:
          $ref: "#/components/schemas/ObjectId"
        baseCommitId:
          $ref: "#/components/schemas/ObjectId"
    BatchDescribeMergeConflictsInput:
      type: object
      required:
        - repositoryName
        - destinationCommitSpecifier
        - sourceCommitSpecifier
        - mergeOption
      properties:
        repositoryName:
          $ref: "#/components/schemas/RepositoryName"
        destinationCommitSpecifier:
          $ref: "#/components/schemas/CommitName"
        sourceCommitSpecifier:
          $ref: "#/components/schemas/CommitName"
        mergeOption:
          $ref: "#/components/schemas/MergeOptionTypeEnum"
        maxMergeHunks:
          $ref: "#/components/schemas/MaxResults"
        maxConflictFiles:
          $ref: "#/components/schemas/MaxResults"
        filePaths:
          $ref: "#/components/schemas/FilePaths"
        conflictDetailLevel:
          $ref: "#/components/schemas/ConflictDetailLevelTypeEnum"
        conflictResolutionStrategy:
          $ref: "#/components/schemas/ConflictResolutionStrategyTypeEnum"
        nextToken:
          $ref: "#/components/schemas/NextToken"
    RepositoryNameRequiredException: {}
    InvalidRepositoryNameException: {}
    RepositoryDoesNotExistException: {}
    MergeOptionRequiredException: {}
    InvalidMergeOptionException: {}
    InvalidContinuationTokenException: {}
    CommitRequiredException: {}
    CommitDoesNotExistException: {}
    InvalidCommitException: {}
    TipsDivergenceExceededException: {}
    InvalidMaxConflictFilesException: {}
    InvalidMaxMergeHunksException: {}
    InvalidConflictDetailLevelException: {}
    InvalidConflictResolutionStrategyException: {}
    MaximumFileContentToLoadExceededException: {}
    MaximumItemsToCompareExceededException: {}
    EncryptionIntegrityChecksFailedException: {}
    EncryptionKeyAccessDeniedException: {}
    EncryptionKeyDisabledException: {}
    EncryptionKeyNotFoundException: {}
    EncryptionKeyUnavailableException: {}
    BatchGetCommitsOutput:
      type: object
      properties:
        commits:
          $ref: "#/components/schemas/CommitObjectsList"
        errors:
          $ref: "#/components/schemas/BatchGetCommitsErrorsList"
    BatchGetCommitsInput:
      type: object
      required:
        - commitIds
        - repositoryName
      properties:
        commitIds:
          $ref: "#/components/schemas/CommitIdsInputList"
        repositoryName:
          $ref: "#/components/schemas/RepositoryName"
    CommitIdsListRequiredException: {}
    CommitIdsLimitExceededException: {}
    BatchGetRepositoriesOutput:
      type: object
      properties:
        repositories:
          $ref: "#/components/schemas/RepositoryMetadataList"
        repositoriesNotFound:
          $ref: "#/components/schemas/RepositoryNotFoundList"
      description: Represents the output of a batch get repositories operation.
    BatchGetRepositoriesInput:
      type: object
      required:
        - repositoryNames
      properties:
        repositoryNames:
          $ref: "#/components/schemas/RepositoryNameList"
      description: Represents the input of a batch get repositories operation.
    RepositoryNamesRequiredException: {}
    MaximumRepositoryNamesExceededException: {}
    CreateBranchInput:
      type: object
      required:
        - repositoryName
        - branchName
        - commitId
      properties:
        repositoryName:
          $ref: "#/components/schemas/RepositoryName"
        branchName:
          $ref: "#/components/schemas/BranchName"
        commitId:
          $ref: "#/components/schemas/CommitId"
      description: Represents the input of a create branch operation.
    BranchNameRequiredException: {}
    BranchNameExistsException: {}
    InvalidBranchNameException: {}
    CommitIdRequiredException: {}
    InvalidCommitIdException: {}
    CreateCommitOutput:
      type: object
      properties:
        commitId:
          $ref: "#/components/schemas/ObjectId"
        treeId:
          $ref: "#/components/schemas/ObjectId"
        filesAdded:
          $ref: "#/components/schemas/FilesMetadata"
        filesUpdated:
          $ref: "#/components/schemas/FilesMetadata"
        filesDeleted:
          $ref: "#/components/schemas/FilesMetadata"
    CreateCommitInput:
      type: object
      required:
        - repositoryName
        - branchName
      properties:
        repositoryName:
          $ref: "#/components/schemas/RepositoryName"
        branchName:
          $ref: "#/components/schemas/BranchName"
        parentCommitId:
          $ref: "#/components/schemas/CommitId"
        authorName:
          $ref: "#/components/schemas/Name"
        email:
          $ref: "#/components/schemas/Email"
        commitMessage:
          $ref: "#/components/schemas/Message"
        keepEmptyFolders:
          $ref: "#/components/schemas/KeepEmptyFolders"
        putFiles:
          $ref: "#/components/schemas/PutFileEntries"
        deleteFiles:
          $ref: "#/components/schemas/DeleteFileEntries"
        setFileModes:
          $ref: "#/components/schemas/SetFileModeEntries"
    ParentCommitIdRequiredException: {}
    InvalidParentCommitIdException: {}
    ParentCommitDoesNotExistException: {}
    ParentCommitIdOutdatedException: {}
    BranchDoesNotExistException: {}
    BranchNameIsTagNameException: {}
    FileEntryRequiredException: {}
    MaximumFileEntriesExceededException: {}
    PutFileEntryConflictException: {}
    SourceFileOrContentRequiredException: {}
    FileContentAndSourceFileSpecifiedException: {}
    PathRequiredException: {}
    InvalidPathException: {}
    SamePathRequestException: {}
    FileDoesNotExistException: {}
    FileContentSizeLimitExceededException: {}
    FolderContentSizeLimitExceededException: {}
    InvalidDeletionParameterException: {}
    RestrictedSourceFileException: {}
    FileModeRequiredException: {}
    InvalidFileModeException: {}
    NameLengthExceededException: {}
    InvalidEmailException: {}
    CommitMessageLengthExceededException: {}
    NoChangeException: {}
    FileNameConflictsWithDirectoryNameException: {}
    DirectoryNameConflictsWithFileNameException: {}
    FilePathConflictsWithSubmodulePathException: {}
    CreatePullRequestOutput:
      type: object
      required:
        - pullRequest
      properties:
        pullRequest:
          $ref: "#/components/schemas/PullRequest"
    CreatePullRequestInput:
      type: object
      required:
        - title
        - targets
      properties:
        title:
          $ref: "#/components/schemas/Title"
        description:
          $ref: "#/components/schemas/Description"
        targets:
          $ref: "#/components/schemas/TargetList"
        clientRequestToken:
          $ref: "#/components/schemas/ClientRequestToken"
    ClientRequestTokenRequiredException: {}
    InvalidClientRequestTokenException: {}
    IdempotencyParameterMismatchException: {}
    ReferenceNameRequiredException: {}
    InvalidReferenceNameException: {}
    ReferenceDoesNotExistException: {}
    ReferenceTypeNotSupportedException: {}
    TitleRequiredException: {}
    InvalidTitleException: {}
    InvalidDescriptionException: {}
    TargetsRequiredException: {}
    InvalidTargetsException: {}
    TargetRequiredException: {}
    InvalidTargetException: {}
    MultipleRepositoriesInPullRequestException: {}
    MaximumOpenPullRequestsExceededException: {}
    SourceAndDestinationAreSameException: {}
    CreateRepositoryOutput:
      type: object
      properties:
        repositoryMetadata:
          $ref: "#/components/schemas/RepositoryMetadata"
      description: Represents the output of a create repository operation.
    CreateRepositoryInput:
      type: object
      required:
        - repositoryName
      properties:
        repositoryName:
          $ref: "#/components/schemas/RepositoryName"
        repositoryDescription:
          $ref: "#/components/schemas/RepositoryDescription"
        tags:
          $ref: "#/components/schemas/TagsMap"
      description: Represents the input of a create repository operation.
    RepositoryNameExistsException: {}
    InvalidRepositoryDescriptionException: {}
    RepositoryLimitExceededException: {}
    InvalidTagsMapException: {}
    TooManyTagsException: {}
    InvalidSystemTagUsageException: {}
    TagPolicyException: {}
    CreateUnreferencedMergeCommitOutput:
      type: object
      properties:
        commitId:
          $ref: "#/components/schemas/ObjectId"
        treeId:
          $ref: "#/components/schemas/ObjectId"
    CreateUnreferencedMergeCommitInput:
      type: object
      required:
        - repositoryName
        - sourceCommitSpecifier
        - destinationCommitSpecifier
        - mergeOption
      properties:
        repositoryName:
          $ref: "#/components/schemas/RepositoryName"
        sourceCommitSpecifier:
          $ref: "#/components/schemas/CommitName"
        destinationCommitSpecifier:
          $ref: "#/components/schemas/CommitName"
        mergeOption:
          $ref: "#/components/schemas/MergeOptionTypeEnum"
        conflictDetailLevel:
          $ref: "#/components/schemas/ConflictDetailLevelTypeEnum"
        conflictResolutionStrategy:
          $ref: "#/components/schemas/ConflictResolutionStrategyTypeEnum"
        authorName:
          $ref: "#/components/schemas/Name"
        email:
          $ref: "#/components/schemas/Email"
        commitMessage:
          $ref: "#/components/schemas/Message"
        keepEmptyFolders:
          $ref: "#/components/schemas/KeepEmptyFolders"
        conflictResolution:
          $ref: "#/components/schemas/ConflictResolution"
    InvalidConflictResolutionException: {}
    ManualMergeRequiredException: {}
    MaximumConflictResolutionEntriesExceededException: {}
    MultipleConflictResolutionEntriesException: {}
    ReplacementTypeRequiredException: {}
    InvalidReplacementTypeException: {}
    ReplacementContentRequiredException: {}
    InvalidReplacementContentException: {}
    ConcurrentReferenceUpdateException: {}
    DeleteBranchOutput:
      type: object
      properties:
        deletedBranch:
          $ref: "#/components/schemas/BranchInfo"
      description: Represents the output of a delete branch operation.
    DeleteBranchInput:
      type: object
      required:
        - repositoryName
        - branchName
      properties:
        repositoryName:
          $ref: "#/components/schemas/RepositoryName"
        branchName:
          $ref: "#/components/schemas/BranchName"
      description: Represents the input of a delete branch operation.
    DefaultBranchCannotBeDeletedException: {}
    DeleteCommentContentOutput:
      type: object
      properties:
        comment:
          $ref: "#/components/schemas/Comment"
    DeleteCommentContentInput:
      type: object
      required:
        - commentId
      properties:
        commentId:
          $ref: "#/components/schemas/CommentId"
    CommentDoesNotExistException: {}
    CommentIdRequiredException: {}
    InvalidCommentIdException: {}
    CommentDeletedException: {}
    DeleteFileOutput:
      type: object
      required:
        - commitId
        - blobId
        - treeId
        - filePath
      properties:
        commitId:
          $ref: "#/components/schemas/ObjectId"
        blobId:
          $ref: "#/components/schemas/ObjectId"
        treeId:
          $ref: "#/components/schemas/ObjectId"
        filePath:
          $ref: "#/components/schemas/Path"
    DeleteFileInput:
      type: object
      required:
        - repositoryName
        - branchName
        - filePath
        - parentCommitId
      properties:
        repositoryName:
          $ref: "#/components/schemas/RepositoryName"
        branchName:
          $ref: "#/components/schemas/BranchName"
        filePath:
          $ref: "#/components/schemas/Path"
        parentCommitId:
          $ref: "#/components/schemas/CommitId"
        keepEmptyFolders:
          $ref: "#/components/schemas/KeepEmptyFolders"
        commitMessage:
          $ref: "#/components/schemas/Message"
        name:
          $ref: "#/components/schemas/Name"
        email:
          $ref: "#/components/schemas/Email"
    DeleteRepositoryOutput:
      type: object
      properties:
        repositoryId:
          $ref: "#/components/schemas/RepositoryId"
      description: Represents the output of a delete repository operation.
    DeleteRepositoryInput:
      type: object
      required:
        - repositoryName
      properties:
        repositoryName:
          $ref: "#/components/schemas/RepositoryName"
      description: Represents the input of a delete repository operation.
    DescribeMergeConflictsOutput:
      type: object
      required:
        - conflictMetadata
        - mergeHunks
        - destinationCommitId
        - sourceCommitId
      properties:
        conflictMetadata:
          $ref: "#/components/schemas/ConflictMetadata"
        mergeHunks:
          $ref: "#/components/schemas/MergeHunks"
        nextToken:
          $ref: "#/components/schemas/NextToken"
        destinationCommitId:
          $ref: "#/components/schemas/ObjectId"
        sourceCommitId:
          $ref: "#/components/schemas/ObjectId"
        baseCommitId:
          $ref: "#/components/schemas/ObjectId"
    DescribeMergeConflictsInput:
      type: object
      required:
        - repositoryName
        - destinationCommitSpecifier
        - sourceCommitSpecifier
        - mergeOption
        - filePath
      properties:
        repositoryName:
          $ref: "#/components/schemas/RepositoryName"
        destinationCommitSpecifier:
          $ref: "#/components/schemas/CommitName"
        sourceCommitSpecifier:
          $ref: "#/components/schemas/CommitName"
        mergeOption:
          $ref: "#/components/schemas/MergeOptionTypeEnum"
        maxMergeHunks:
          $ref: "#/components/schemas/MaxResults"
        filePath:
          $ref: "#/components/schemas/Path"
        conflictDetailLevel:
          $ref: "#/components/schemas/ConflictDetailLevelTypeEnum"
        conflictResolutionStrategy:
          $ref: "#/components/schemas/ConflictResolutionStrategyTypeEnum"
        nextToken:
          $ref: "#/components/schemas/NextToken"
    DescribePullRequestEventsOutput:
      type: object
      required:
        - pullRequestEvents
      properties:
        pullRequestEvents:
          $ref: "#/components/schemas/PullRequestEventList"
        nextToken:
          $ref: "#/components/schemas/NextToken"
    DescribePullRequestEventsInput:
      type: object
      required:
        - pullRequestId
      properties:
        pullRequestId:
          $ref: "#/components/schemas/PullRequestId"
        pullRequestEventType:
          $ref: "#/components/schemas/PullRequestEventType"
        actorArn:
          $ref: "#/components/schemas/Arn"
        nextToken:
          $ref: "#/components/schemas/NextToken"
        maxResults:
          $ref: "#/components/schemas/MaxResults"
    PullRequestDoesNotExistException: {}
    InvalidPullRequestIdException: {}
    PullRequestIdRequiredException: {}
    InvalidPullRequestEventTypeException: {}
    InvalidActorArnException: {}
    ActorDoesNotExistException: {}
    InvalidMaxResultsException: {}
    GetBlobOutput:
      type: object
      required:
        - content
      properties:
        content:
          $ref: "#/components/schemas/blob"
      description: Represents the output of a get blob operation.
    GetBlobInput:
      type: object
      required:
        - repositoryName
        - blobId
      properties:
        repositoryName:
          $ref: "#/components/schemas/RepositoryName"
        blobId:
          $ref: "#/components/schemas/ObjectId"
      description: Represents the input of a get blob operation.
    BlobIdRequiredException: {}
    InvalidBlobIdException: {}
    BlobIdDoesNotExistException: {}
    FileTooLargeException: {}
    GetBranchOutput:
      type: object
      properties:
        branch:
          $ref: "#/components/schemas/BranchInfo"
      description: Represents the output of a get branch operation.
    GetBranchInput:
      type: object
      properties:
        repositoryName:
          $ref: "#/components/schemas/RepositoryName"
        branchName:
          $ref: "#/components/schemas/BranchName"
      description: Represents the input of a get branch operation.
    GetCommentOutput:
      type: object
      properties:
        comment:
          $ref: "#/components/schemas/Comment"
    GetCommentInput:
      type: object
      required:
        - commentId
      properties:
        commentId:
          $ref: "#/components/schemas/CommentId"
    GetCommentsForComparedCommitOutput:
      type: object
      properties:
        commentsForComparedCommitData:
          $ref: "#/components/schemas/CommentsForComparedCommitData"
        nextToken:
          $ref: "#/components/schemas/NextToken"
    GetCommentsForComparedCommitInput:
      type: object
      required:
        - repositoryName
        - afterCommitId
      properties:
        repositoryName:
          $ref: "#/components/schemas/RepositoryName"
        beforeCommitId:
          $ref: "#/components/schemas/CommitId"
        afterCommitId:
          $ref: "#/components/schemas/CommitId"
        nextToken:
          $ref: "#/components/schemas/NextToken"
        maxResults:
          $ref: "#/components/schemas/MaxResults"
    GetCommentsForPullRequestOutput:
      type: object
      properties:
        commentsForPullRequestData:
          $ref: "#/components/schemas/CommentsForPullRequestData"
        nextToken:
          $ref: "#/components/schemas/NextToken"
    GetCommentsForPullRequestInput:
      type: object
      required:
        - pullRequestId
      properties:
        pullRequestId:
          $ref: "#/components/schemas/PullRequestId"
        repositoryName:
          $ref: "#/components/schemas/RepositoryName"
        beforeCommitId:
          $ref: "#/components/schemas/CommitId"
        afterCommitId:
          $ref: "#/components/schemas/CommitId"
        nextToken:
          $ref: "#/components/schemas/NextToken"
        maxResults:
          $ref: "#/components/schemas/MaxResults"
    RepositoryNotAssociatedWithPullRequestException: {}
    GetCommitOutput:
      type: object
      required:
        - commit
      properties:
        commit:
          $ref: "#/components/schemas/Commit"
      description: Represents the output of a get commit operation.
    GetCommitInput:
      type: object
      required:
        - repositoryName
        - commitId
      properties:
        repositoryName:
          $ref: "#/components/schemas/RepositoryName"
        commitId:
          $ref: "#/components/schemas/ObjectId"
      description: Represents the input of a get commit operation.
    CommitIdDoesNotExistException: {}
    GetDifferencesOutput:
      type: object
      properties:
        differences:
          $ref: "#/components/schemas/DifferenceList"
        NextToken:
          $ref: "#/components/schemas/NextToken"
    GetDifferencesInput:
      type: object
      required:
        - repositoryName
        - afterCommitSpecifier
      properties:
        repositoryName:
          $ref: "#/components/schemas/RepositoryName"
        beforeCommitSpecifier:
          $ref: "#/components/schemas/CommitName"
        afterCommitSpecifier:
          $ref: "#/components/schemas/CommitName"
        beforePath:
          $ref: "#/components/schemas/Path"
        afterPath:
          $ref: "#/components/schemas/Path"
        MaxResults:
          $ref: "#/components/schemas/Limit"
        NextToken:
          $ref: "#/components/schemas/NextToken"
    PathDoesNotExistException: {}
    GetFileOutput:
      type: object
      required:
        - commitId
        - blobId
        - filePath
        - fileMode
        - fileSize
        - fileContent
      properties:
        commitId:
          $ref: "#/components/schemas/ObjectId"
        blobId:
          $ref: "#/components/schemas/ObjectId"
        filePath:
          $ref: "#/components/schemas/Path"
        fileMode:
          $ref: "#/components/schemas/FileModeTypeEnum"
        fileSize:
          $ref: "#/components/schemas/ObjectSize"
        fileContent:
          $ref: "#/components/schemas/FileContent"
    GetFileInput:
      type: object
      required:
        - repositoryName
        - filePath
      properties:
        repositoryName:
          $ref: "#/components/schemas/RepositoryName"
        commitSpecifier:
          $ref: "#/components/schemas/CommitName"
        filePath:
          $ref: "#/components/schemas/Path"
    GetFolderOutput:
      type: object
      required:
        - commitId
        - folderPath
      properties:
        commitId:
          $ref: "#/components/schemas/ObjectId"
        folderPath:
          $ref: "#/components/schemas/Path"
        treeId:
          $ref: "#/components/schemas/ObjectId"
        subFolders:
          $ref: "#/components/schemas/FolderList"
        files:
          $ref: "#/components/schemas/FileList"
        symbolicLinks:
          $ref: "#/components/schemas/SymbolicLinkList"
        subModules:
          $ref: "#/components/schemas/SubModuleList"
    GetFolderInput:
      type: object
      required:
        - repositoryName
        - folderPath
      properties:
        repositoryName:
          $ref: "#/components/schemas/RepositoryName"
        commitSpecifier:
          $ref: "#/components/schemas/CommitName"
        folderPath:
          $ref: "#/components/schemas/Path"
    FolderDoesNotExistException: {}
    GetMergeCommitOutput:
      type: object
      properties:
        sourceCommitId:
          $ref: "#/components/schemas/ObjectId"
        destinationCommitId:
          $ref: "#/components/schemas/ObjectId"
        baseCommitId:
          $ref: "#/components/schemas/ObjectId"
        mergedCommitId:
          $ref: "#/components/schemas/ObjectId"
    GetMergeCommitInput:
      type: object
      required:
        - repositoryName
        - sourceCommitSpecifier
        - destinationCommitSpecifier
      properties:
        repositoryName:
          $ref: "#/components/schemas/RepositoryName"
        sourceCommitSpecifier:
          $ref: "#/components/schemas/CommitName"
        destinationCommitSpecifier:
          $ref: "#/components/schemas/CommitName"
        conflictDetailLevel:
          $ref: "#/components/schemas/ConflictDetailLevelTypeEnum"
        conflictResolutionStrategy:
          $ref: "#/components/schemas/ConflictResolutionStrategyTypeEnum"
    GetMergeConflictsOutput:
      type: object
      required:
        - mergeable
        - destinationCommitId
        - sourceCommitId
        - conflictMetadataList
      properties:
        mergeable:
          $ref: "#/components/schemas/IsMergeable"
        destinationCommitId:
          $ref: "#/components/schemas/ObjectId"
        sourceCommitId:
          $ref: "#/components/schemas/ObjectId"
        baseCommitId:
          $ref: "#/components/schemas/ObjectId"
        conflictMetadataList:
          $ref: "#/components/schemas/ConflictMetadataList"
        nextToken:
          $ref: "#/components/schemas/NextToken"
    GetMergeConflictsInput:
      type: object
      required:
        - repositoryName
        - destinationCommitSpecifier
        - sourceCommitSpecifier
        - mergeOption
      properties:
        repositoryName:
          $ref: "#/components/schemas/RepositoryName"
        destinationCommitSpecifier:
          $ref: "#/components/schemas/CommitName"
        sourceCommitSpecifier:
          $ref: "#/components/schemas/CommitName"
        mergeOption:
          $ref: "#/components/schemas/MergeOptionTypeEnum"
        conflictDetailLevel:
          $ref: "#/components/schemas/ConflictDetailLevelTypeEnum"
        maxConflictFiles:
          $ref: "#/components/schemas/MaxResults"
        conflictResolutionStrategy:
          $ref: "#/components/schemas/ConflictResolutionStrategyTypeEnum"
        nextToken:
          $ref: "#/components/schemas/NextToken"
    InvalidDestinationCommitSpecifierException: {}
    InvalidSourceCommitSpecifierException: {}
    GetMergeOptionsOutput:
      type: object
      required:
        - mergeOptions
        - sourceCommitId
        - destinationCommitId
        - baseCommitId
      properties:
        mergeOptions:
          $ref: "#/components/schemas/MergeOptions"
        sourceCommitId:
          $ref: "#/components/schemas/ObjectId"
        destinationCommitId:
          $ref: "#/components/schemas/ObjectId"
        baseCommitId:
          $ref: "#/components/schemas/ObjectId"
    GetMergeOptionsInput:
      type: object
      required:
        - repositoryName
        - sourceCommitSpecifier
        - destinationCommitSpecifier
      properties:
        repositoryName:
          $ref: "#/components/schemas/RepositoryName"
        sourceCommitSpecifier:
          $ref: "#/components/schemas/CommitName"
        destinationCommitSpecifier:
          $ref: "#/components/schemas/CommitName"
        conflictDetailLevel:
          $ref: "#/components/schemas/ConflictDetailLevelTypeEnum"
        conflictResolutionStrategy:
          $ref: "#/components/schemas/ConflictResolutionStrategyTypeEnum"
    GetPullRequestOutput:
      type: object
      required:
        - pullRequest
      properties:
        pullRequest:
          $ref: "#/components/schemas/PullRequest"
    GetPullRequestInput:
      type: object
      required:
        - pullRequestId
      properties:
        pullRequestId:
          $ref: "#/components/schemas/PullRequestId"
    GetRepositoryOutput:
      type: object
      properties:
        repositoryMetadata:
          $ref: "#/components/schemas/RepositoryMetadata"
      description: Represents the output of a get repository operation.
    GetRepositoryInput:
      type: object
      required:
        - repositoryName
      properties:
        repositoryName:
          $ref: "#/components/schemas/RepositoryName"
      description: Represents the input of a get repository operation.
    GetRepositoryTriggersOutput:
      type: object
      properties:
        configurationId:
          $ref: "#/components/schemas/RepositoryTriggersConfigurationId"
        triggers:
          $ref: "#/components/schemas/RepositoryTriggersList"
      description: Represents the output of a get repository triggers operation.
    GetRepositoryTriggersInput:
      type: object
      required:
        - repositoryName
      properties:
        repositoryName:
          $ref: "#/components/schemas/RepositoryName"
      description: Represents the input of a get repository triggers operation.
    ListBranchesOutput:
      type: object
      properties:
        branches:
          $ref: "#/components/schemas/BranchNameList"
        nextToken:
          $ref: "#/components/schemas/NextToken"
      description: Represents the output of a list branches operation.
    ListBranchesInput:
      type: object
      required:
        - repositoryName
      properties:
        repositoryName:
          $ref: "#/components/schemas/RepositoryName"
        nextToken:
          $ref: "#/components/schemas/NextToken"
      description: Represents the input of a list branches operation.
    ListPullRequestsOutput:
      type: object
      required:
        - pullRequestIds
      properties:
        pullRequestIds:
          $ref: "#/components/schemas/PullRequestIdList"
        nextToken:
          $ref: "#/components/schemas/NextToken"
    ListPullRequestsInput:
      type: object
      required:
        - repositoryName
      properties:
        repositoryName:
          $ref: "#/components/schemas/RepositoryName"
        authorArn:
          $ref: "#/components/schemas/Arn"
        pullRequestStatus:
          $ref: "#/components/schemas/PullRequestStatusEnum"
        nextToken:
          $ref: "#/components/schemas/NextToken"
        maxResults:
          $ref: "#/components/schemas/MaxResults"
    InvalidPullRequestStatusException: {}
    InvalidAuthorArnException: {}
    AuthorDoesNotExistException: {}
    ListRepositoriesOutput:
      type: object
      properties:
        repositories:
          $ref: "#/components/schemas/RepositoryNameIdPairList"
        nextToken:
          $ref: "#/components/schemas/NextToken"
      description: Represents the output of a list repositories operation.
    ListRepositoriesInput:
      type: object
      properties:
        nextToken:
          $ref: "#/components/schemas/NextToken"
        sortBy:
          $ref: "#/components/schemas/SortByEnum"
        order:
          $ref: "#/components/schemas/OrderEnum"
      description: Represents the input of a list repositories operation.
    InvalidSortByException: {}
    InvalidOrderException: {}
    ListTagsForResourceOutput:
      type: object
      properties:
        tags:
          $ref: "#/components/schemas/TagsMap"
        nextToken:
          $ref: "#/components/schemas/NextToken"
    ListTagsForResourceInput:
      type: object
      required:
        - resourceArn
      properties:
        resourceArn:
          $ref: "#/components/schemas/ResourceArn"
        nextToken:
          $ref: "#/components/schemas/NextToken"
    ResourceArnRequiredException: {}
    InvalidResourceArnException: {}
    MergeBranchesByFastForwardOutput:
      type: object
      properties:
        commitId:
          $ref: "#/components/schemas/ObjectId"
        treeId:
          $ref: "#/components/schemas/ObjectId"
    MergeBranchesByFastForwardInput:
      type: object
      required:
        - repositoryName
        - sourceCommitSpecifier
        - destinationCommitSpecifier
      properties:
        repositoryName:
          $ref: "#/components/schemas/RepositoryName"
        sourceCommitSpecifier:
          $ref: "#/components/schemas/CommitName"
        destinationCommitSpecifier:
          $ref: "#/components/schemas/CommitName"
        targetBranch:
          $ref: "#/components/schemas/BranchName"
    InvalidTargetBranchException: {}
    MergeBranchesBySquashOutput:
      type: object
      properties:
        commitId:
          $ref: "#/components/schemas/ObjectId"
        treeId:
          $ref: "#/components/schemas/ObjectId"
    MergeBranchesBySquashInput:
      type: object
      required:
        - repositoryName
        - sourceCommitSpecifier
        - destinationCommitSpecifier
      properties:
        repositoryName:
          $ref: "#/components/schemas/RepositoryName"
        sourceCommitSpecifier:
          $ref: "#/components/schemas/CommitName"
        destinationCommitSpecifier:
          $ref: "#/components/schemas/CommitName"
        targetBranch:
          $ref: "#/components/schemas/BranchName"
        conflictDetailLevel:
          $ref: "#/components/schemas/ConflictDetailLevelTypeEnum"
        conflictResolutionStrategy:
          $ref: "#/components/schemas/ConflictResolutionStrategyTypeEnum"
        authorName:
          $ref: "#/components/schemas/Name"
        email:
          $ref: "#/components/schemas/Email"
        commitMessage:
          $ref: "#/components/schemas/Message"
        keepEmptyFolders:
          $ref: "#/components/schemas/KeepEmptyFolders"
        conflictResolution:
          $ref: "#/components/schemas/ConflictResolution"
    MergeBranchesByThreeWayOutput:
      type: object
      properties:
        commitId:
          $ref: "#/components/schemas/ObjectId"
        treeId:
          $ref: "#/components/schemas/ObjectId"
    MergeBranchesByThreeWayInput:
      type: object
      required:
        - repositoryName
        - sourceCommitSpecifier
        - destinationCommitSpecifier
      properties:
        repositoryName:
          $ref: "#/components/schemas/RepositoryName"
        sourceCommitSpecifier:
          $ref: "#/components/schemas/CommitName"
        destinationCommitSpecifier:
          $ref: "#/components/schemas/CommitName"
        targetBranch:
          $ref: "#/components/schemas/BranchName"
        conflictDetailLevel:
          $ref: "#/components/schemas/ConflictDetailLevelTypeEnum"
        conflictResolutionStrategy:
          $ref: "#/components/schemas/ConflictResolutionStrategyTypeEnum"
        authorName:
          $ref: "#/components/schemas/Name"
        email:
          $ref: "#/components/schemas/Email"
        commitMessage:
          $ref: "#/components/schemas/Message"
        keepEmptyFolders:
          $ref: "#/components/schemas/KeepEmptyFolders"
        conflictResolution:
          $ref: "#/components/schemas/ConflictResolution"
    MergePullRequestByFastForwardOutput:
      type: object
      properties:
        pullRequest:
          $ref: "#/components/schemas/PullRequest"
    MergePullRequestByFastForwardInput:
      type: object
      required:
        - pullRequestId
        - repositoryName
      properties:
        pullRequestId:
          $ref: "#/components/schemas/PullRequestId"
        repositoryName:
          $ref: "#/components/schemas/RepositoryName"
        sourceCommitId:
          $ref: "#/components/schemas/ObjectId"
    PullRequestAlreadyClosedException: {}
    TipOfSourceReferenceIsDifferentException: {}
    MergePullRequestBySquashOutput:
      type: object
      properties:
        pullRequest:
          $ref: "#/components/schemas/PullRequest"
    MergePullRequestBySquashInput:
      type: object
      required:
        - pullRequestId
        - repositoryName
      properties:
        pullRequestId:
          $ref: "#/components/schemas/PullRequestId"
        repositoryName:
          $ref: "#/components/schemas/RepositoryName"
        sourceCommitId:
          $ref: "#/components/schemas/ObjectId"
        conflictDetailLevel:
          $ref: "#/components/schemas/ConflictDetailLevelTypeEnum"
        conflictResolutionStrategy:
          $ref: "#/components/schemas/ConflictResolutionStrategyTypeEnum"
        commitMessage:
          $ref: "#/components/schemas/Message"
        authorName:
          $ref: "#/components/schemas/Name"
        email:
          $ref: "#/components/schemas/Email"
        keepEmptyFolders:
          $ref: "#/components/schemas/KeepEmptyFolders"
        conflictResolution:
          $ref: "#/components/schemas/ConflictResolution"
    MergePullRequestByThreeWayOutput:
      type: object
      properties:
        pullRequest:
          $ref: "#/components/schemas/PullRequest"
    MergePullRequestByThreeWayInput:
      type: object
      required:
        - pullRequestId
        - repositoryName
      properties:
        pullRequestId:
          $ref: "#/components/schemas/PullRequestId"
        repositoryName:
          $ref: "#/components/schemas/RepositoryName"
        sourceCommitId:
          $ref: "#/components/schemas/ObjectId"
        conflictDetailLevel:
          $ref: "#/components/schemas/ConflictDetailLevelTypeEnum"
        conflictResolutionStrategy:
          $ref: "#/components/schemas/ConflictResolutionStrategyTypeEnum"
        commitMessage:
          $ref: "#/components/schemas/Message"
        authorName:
          $ref: "#/components/schemas/Name"
        email:
          $ref: "#/components/schemas/Email"
        keepEmptyFolders:
          $ref: "#/components/schemas/KeepEmptyFolders"
        conflictResolution:
          $ref: "#/components/schemas/ConflictResolution"
    PostCommentForComparedCommitOutput:
      type: object
      properties:
        repositoryName:
          $ref: "#/components/schemas/RepositoryName"
        beforeCommitId:
          $ref: "#/components/schemas/CommitId"
        afterCommitId:
          $ref: "#/components/schemas/CommitId"
        beforeBlobId:
          $ref: "#/components/schemas/ObjectId"
        afterBlobId:
          $ref: "#/components/schemas/ObjectId"
        location:
          $ref: "#/components/schemas/Location"
        comment:
          $ref: "#/components/schemas/Comment"
    PostCommentForComparedCommitInput:
      type: object
      required:
        - repositoryName
        - afterCommitId
        - content
      properties:
        repositoryName:
          $ref: "#/components/schemas/RepositoryName"
        beforeCommitId:
          $ref: "#/components/schemas/CommitId"
        afterCommitId:
          $ref: "#/components/schemas/CommitId"
        location:
          $ref: "#/components/schemas/Location"
        content:
          $ref: "#/components/schemas/Content"
        clientRequestToken:
          $ref: "#/components/schemas/ClientRequestToken"
    CommentContentRequiredException: {}
    CommentContentSizeLimitExceededException: {}
    InvalidFileLocationException: {}
    InvalidRelativeFileVersionEnumException: {}
    InvalidFilePositionException: {}
    BeforeCommitIdAndAfterCommitIdAreSameException: {}
    PostCommentForPullRequestOutput:
      type: object
      properties:
        repositoryName:
          $ref: "#/components/schemas/RepositoryName"
        pullRequestId:
          $ref: "#/components/schemas/PullRequestId"
        beforeCommitId:
          $ref: "#/components/schemas/CommitId"
        afterCommitId:
          $ref: "#/components/schemas/CommitId"
        beforeBlobId:
          $ref: "#/components/schemas/ObjectId"
        afterBlobId:
          $ref: "#/components/schemas/ObjectId"
        location:
          $ref: "#/components/schemas/Location"
        comment:
          $ref: "#/components/schemas/Comment"
    PostCommentForPullRequestInput:
      type: object
      required:
        - pullRequestId
        - repositoryName
        - beforeCommitId
        - afterCommitId
        - content
      properties:
        pullRequestId:
          $ref: "#/components/schemas/PullRequestId"
        repositoryName:
          $ref: "#/components/schemas/RepositoryName"
        beforeCommitId:
          $ref: "#/components/schemas/CommitId"
        afterCommitId:
          $ref: "#/components/schemas/CommitId"
        location:
          $ref: "#/components/schemas/Location"
        content:
          $ref: "#/components/schemas/Content"
        clientRequestToken:
          $ref: "#/components/schemas/ClientRequestToken"
    PostCommentReplyOutput:
      type: object
      properties:
        comment:
          $ref: "#/components/schemas/Comment"
    PostCommentReplyInput:
      type: object
      required:
        - inReplyTo
        - content
      properties:
        inReplyTo:
          $ref: "#/components/schemas/CommentId"
        clientRequestToken:
          $ref: "#/components/schemas/ClientRequestToken"
        content:
          $ref: "#/components/schemas/Content"
    PutFileOutput:
      type: object
      required:
        - commitId
        - blobId
        - treeId
      properties:
        commitId:
          $ref: "#/components/schemas/ObjectId"
        blobId:
          $ref: "#/components/schemas/ObjectId"
        treeId:
          $ref: "#/components/schemas/ObjectId"
    PutFileInput:
      type: object
      required:
        - repositoryName
        - branchName
        - fileContent
        - filePath
      properties:
        repositoryName:
          $ref: "#/components/schemas/RepositoryName"
        branchName:
          $ref: "#/components/schemas/BranchName"
        fileContent:
          $ref: "#/components/schemas/FileContent"
        filePath:
          $ref: "#/components/schemas/Path"
        fileMode:
          $ref: "#/components/schemas/FileModeTypeEnum"
        parentCommitId:
          $ref: "#/components/schemas/CommitId"
        commitMessage:
          $ref: "#/components/schemas/Message"
        name:
          $ref: "#/components/schemas/Name"
        email:
          $ref: "#/components/schemas/Email"
    FileContentRequiredException: {}
    SameFileContentException: {}
    PutRepositoryTriggersOutput:
      type: object
      properties:
        configurationId:
          $ref: "#/components/schemas/RepositoryTriggersConfigurationId"
      description: Represents the output of a put repository triggers operation.
    PutRepositoryTriggersInput:
      type: object
      required:
        - repositoryName
        - triggers
      properties:
        repositoryName:
          $ref: "#/components/schemas/RepositoryName"
        triggers:
          $ref: "#/components/schemas/RepositoryTriggersList"
      description: Represents the input ofa put repository triggers operation.
    RepositoryTriggersListRequiredException: {}
    MaximumRepositoryTriggersExceededException: {}
    InvalidRepositoryTriggerNameException: {}
    InvalidRepositoryTriggerDestinationArnException: {}
    InvalidRepositoryTriggerRegionException: {}
    InvalidRepositoryTriggerCustomDataException: {}
    MaximumBranchesExceededException: {}
    InvalidRepositoryTriggerBranchNameException: {}
    InvalidRepositoryTriggerEventsException: {}
    RepositoryTriggerNameRequiredException: {}
    RepositoryTriggerDestinationArnRequiredException: {}
    RepositoryTriggerBranchNameListRequiredException: {}
    RepositoryTriggerEventsListRequiredException: {}
    TagResourceInput:
      type: object
      required:
        - resourceArn
        - tags
      properties:
        resourceArn:
          $ref: "#/components/schemas/ResourceArn"
        tags:
          $ref: "#/components/schemas/TagsMap"
    TagsMapRequiredException: {}
    TestRepositoryTriggersOutput:
      type: object
      properties:
        successfulExecutions:
          $ref: "#/components/schemas/RepositoryTriggerNameList"
        failedExecutions:
          $ref: "#/components/schemas/RepositoryTriggerExecutionFailureList"
      description: Represents the output of a test repository triggers operation.
    TestRepositoryTriggersInput:
      type: object
      required:
        - repositoryName
        - triggers
      properties:
        repositoryName:
          $ref: "#/components/schemas/RepositoryName"
        triggers:
          $ref: "#/components/schemas/RepositoryTriggersList"
      description: Represents the input of a test repository triggers operation.
    UntagResourceInput:
      type: object
      required:
        - resourceArn
        - tagKeys
      properties:
        resourceArn:
          $ref: "#/components/schemas/ResourceArn"
        tagKeys:
          $ref: "#/components/schemas/TagKeysList"
    TagKeysListRequiredException: {}
    InvalidTagKeysListException: {}
    UpdateCommentOutput:
      type: object
      properties:
        comment:
          $ref: "#/components/schemas/Comment"
    UpdateCommentInput:
      type: object
      required:
        - commentId
        - content
      properties:
        commentId:
          $ref: "#/components/schemas/CommentId"
        content:
          $ref: "#/components/schemas/Content"
    CommentNotCreatedByCallerException: {}
    UpdateDefaultBranchInput:
      type: object
      required:
        - repositoryName
        - defaultBranchName
      properties:
        repositoryName:
          $ref: "#/components/schemas/RepositoryName"
        defaultBranchName:
          $ref: "#/components/schemas/BranchName"
      description: Represents the input of an update default branch operation.
    UpdatePullRequestDescriptionOutput:
      type: object
      required:
        - pullRequest
      properties:
        pullRequest:
          $ref: "#/components/schemas/PullRequest"
    UpdatePullRequestDescriptionInput:
      type: object
      required:
        - pullRequestId
        - description
      properties:
        pullRequestId:
          $ref: "#/components/schemas/PullRequestId"
        description:
          $ref: "#/components/schemas/Description"
    UpdatePullRequestStatusOutput:
      type: object
      required:
        - pullRequest
      properties:
        pullRequest:
          $ref: "#/components/schemas/PullRequest"
    UpdatePullRequestStatusInput:
      type: object
      required:
        - pullRequestId
        - pullRequestStatus
      properties:
        pullRequestId:
          $ref: "#/components/schemas/PullRequestId"
        pullRequestStatus:
          $ref: "#/components/schemas/PullRequestStatusEnum"
    InvalidPullRequestStatusUpdateException: {}
    PullRequestStatusRequiredException: {}
    UpdatePullRequestTitleOutput:
      type: object
      required:
        - pullRequest
      properties:
        pullRequest:
          $ref: "#/components/schemas/PullRequest"
    UpdatePullRequestTitleInput:
      type: object
      required:
        - pullRequestId
        - title
      properties:
        pullRequestId:
          $ref: "#/components/schemas/PullRequestId"
        title:
          $ref: "#/components/schemas/Title"
    UpdateRepositoryDescriptionInput:
      type: object
      required:
        - repositoryName
      properties:
        repositoryName:
          $ref: "#/components/schemas/RepositoryName"
        repositoryDescription:
          $ref: "#/components/schemas/RepositoryDescription"
      description: Represents the input of an update repository description operation.
    UpdateRepositoryNameInput:
      type: object
      required:
        - oldName
        - newName
      properties:
        oldName:
          $ref: "#/components/schemas/RepositoryName"
        newName:
          $ref: "#/components/schemas/RepositoryName"
      description: Represents the input of an update repository description operation.
    AccountId:
      type: string
    AdditionalData:
      type: string
    Arn:
      type: string
    Path:
      type: string
    ExceptionName:
      type: string
    Message:
      type: string
    BatchDescribeMergeConflictsError:
      type: object
      required:
        - filePath
        - exceptionName
        - message
      properties:
        filePath:
          $ref: "#/components/schemas/Path"
        exceptionName:
          $ref: "#/components/schemas/ExceptionName"
        message:
          $ref: "#/components/schemas/Message"
      description: Information about errors in a BatchDescribeMergeConflicts operation.
    BatchDescribeMergeConflictsErrors:
      type: array
      items:
        $ref: "#/components/schemas/BatchDescribeMergeConflictsError"
    RepositoryName:
      type: string
      pattern: "[\\w\\.-]+"
      minLength: 1
      maxLength: 100
    CommitName:
      type: string
    MergeOptionTypeEnum:
      type: string
      enum:
        - FAST_FORWARD_MERGE
        - SQUASH_MERGE
        - THREE_WAY_MERGE
    MaxResults:
      type: integer
    FilePaths:
      type: array
      items:
        $ref: "#/components/schemas/Path"
    ConflictDetailLevelTypeEnum:
      type: string
      enum:
        - FILE_LEVEL
        - LINE_LEVEL
    ConflictResolutionStrategyTypeEnum:
      type: string
      enum:
        - NONE
        - ACCEPT_SOURCE
        - ACCEPT_DESTINATION
        - AUTOMERGE
    NextToken:
      type: string
    Conflicts:
      type: array
      items:
        $ref: "#/components/schemas/Conflict"
    ObjectId:
      type: string
    ErrorCode:
      type: string
    ErrorMessage:
      type: string
    BatchGetCommitsError:
      type: object
      properties:
        commitId:
          $ref: "#/components/schemas/ObjectId"
        errorCode:
          $ref: "#/components/schemas/ErrorCode"
        errorMessage:
          $ref: "#/components/schemas/ErrorMessage"
      description: Returns information about errors in a BatchGetCommits operation.
    BatchGetCommitsErrorsList:
      type: array
      items:
        $ref: "#/components/schemas/BatchGetCommitsError"
    CommitIdsInputList:
      type: array
      items:
        $ref: "#/components/schemas/ObjectId"
    CommitObjectsList:
      type: array
      items:
        $ref: "#/components/schemas/Commit"
    RepositoryNameList:
      type: array
      items:
        $ref: "#/components/schemas/RepositoryName"
    RepositoryMetadataList:
      type: array
      items:
        $ref: "#/components/schemas/RepositoryMetadata"
    RepositoryNotFoundList:
      type: array
      items:
        $ref: "#/components/schemas/RepositoryName"
    Mode:
      type: string
    BlobMetadata:
      type: object
      properties:
        blobId:
          $ref: "#/components/schemas/ObjectId"
        path:
          $ref: "#/components/schemas/Path"
        mode:
          $ref: "#/components/schemas/Mode"
      description: Returns information about a specific Git blob object.
    BranchName:
      type: string
      minLength: 1
      maxLength: 256
    CommitId:
      type: string
    BranchInfo:
      type: object
      properties:
        branchName:
          $ref: "#/components/schemas/BranchName"
        commitId:
          $ref: "#/components/schemas/CommitId"
      description: Returns information about a branch.
    BranchNameList:
      type: array
      items:
        $ref: "#/components/schemas/BranchName"
    CapitalBoolean:
      type: boolean
    ChangeTypeEnum:
      type: string
      enum:
        - A
        - M
        - D
    ClientRequestToken:
      type: string
    CloneUrlHttp:
      type: string
    CloneUrlSsh:
      type: string
    CommentId:
      type: string
    Content:
      type: string
    CreationDate:
      type: string
      format: date-time
    LastModifiedDate:
      type: string
      format: date-time
    IsCommentDeleted:
      type: boolean
    Comment:
      type: object
      properties:
        commentId:
          $ref: "#/components/schemas/CommentId"
        content:
          $ref: "#/components/schemas/Content"
        inReplyTo:
          $ref: "#/components/schemas/CommentId"
        creationDate:
          $ref: "#/components/schemas/CreationDate"
        lastModifiedDate:
          $ref: "#/components/schemas/LastModifiedDate"
        authorArn:
          $ref: "#/components/schemas/Arn"
        deleted:
          $ref: "#/components/schemas/IsCommentDeleted"
        clientRequestToken:
          $ref: "#/components/schemas/ClientRequestToken"
      description: Returns information about a specific comment.
    Comments:
      type: array
      items:
        $ref: "#/components/schemas/Comment"
    Location:
      type: object
      properties:
        filePath:
          $ref: "#/components/schemas/Path"
        filePosition:
          $ref: "#/components/schemas/Position"
        relativeFileVersion:
          $ref: "#/components/schemas/RelativeFileVersionEnum"
      description: Returns information about the location of a change or comment in the
        comparison between two commits or a pull request.
    CommentsForComparedCommit:
      type: object
      properties:
        repositoryName:
          $ref: "#/components/schemas/RepositoryName"
        beforeCommitId:
          $ref: "#/components/schemas/CommitId"
        afterCommitId:
          $ref: "#/components/schemas/CommitId"
        beforeBlobId:
          $ref: "#/components/schemas/ObjectId"
        afterBlobId:
          $ref: "#/components/schemas/ObjectId"
        location:
          $ref: "#/components/schemas/Location"
        comments:
          $ref: "#/components/schemas/Comments"
      description: Returns information about comments on the comparison between two commits.
    CommentsForComparedCommitData:
      type: array
      items:
        $ref: "#/components/schemas/CommentsForComparedCommit"
    PullRequestId:
      type: string
    CommentsForPullRequest:
      type: object
      properties:
        pullRequestId:
          $ref: "#/components/schemas/PullRequestId"
        repositoryName:
          $ref: "#/components/schemas/RepositoryName"
        beforeCommitId:
          $ref: "#/components/schemas/CommitId"
        afterCommitId:
          $ref: "#/components/schemas/CommitId"
        beforeBlobId:
          $ref: "#/components/schemas/ObjectId"
        afterBlobId:
          $ref: "#/components/schemas/ObjectId"
        location:
          $ref: "#/components/schemas/Location"
        comments:
          $ref: "#/components/schemas/Comments"
      description: Returns information about comments on a pull request.
    CommentsForPullRequestData:
      type: array
      items:
        $ref: "#/components/schemas/CommentsForPullRequest"
    ParentList:
      type: array
      items:
        $ref: "#/components/schemas/ObjectId"
    UserInfo:
      type: object
      properties:
        name:
          $ref: "#/components/schemas/Name"
        email:
          $ref: "#/components/schemas/Email"
        date:
          $ref: "#/components/schemas/Date"
      description: Information about the user who made a specified commit.
    Commit:
      type: object
      properties:
        commitId:
          $ref: "#/components/schemas/ObjectId"
        treeId:
          $ref: "#/components/schemas/ObjectId"
        parents:
          $ref: "#/components/schemas/ParentList"
        message:
          $ref: "#/components/schemas/Message"
        author:
          $ref: "#/components/schemas/UserInfo"
        committer:
          $ref: "#/components/schemas/UserInfo"
        additionalData:
          $ref: "#/components/schemas/AdditionalData"
      description: Returns information about a specific commit.
    ConflictMetadata:
      type: object
      properties:
        filePath:
          $ref: "#/components/schemas/Path"
        fileSizes:
          $ref: "#/components/schemas/FileSizes"
        fileModes:
          $ref: "#/components/schemas/FileModes"
        objectTypes:
          $ref: "#/components/schemas/ObjectTypes"
        numberOfConflicts:
          $ref: "#/components/schemas/NumberOfConflicts"
        isBinaryFile:
          $ref: "#/components/schemas/IsBinaryFile"
        contentConflict:
          $ref: "#/components/schemas/IsContentConflict"
        fileModeConflict:
          $ref: "#/components/schemas/IsFileModeConflict"
        objectTypeConflict:
          $ref: "#/components/schemas/IsObjectTypeConflict"
        mergeOperations:
          $ref: "#/components/schemas/MergeOperations"
      description: Information about the metadata for a conflict in a merge operation.
    MergeHunks:
      type: array
      items:
        $ref: "#/components/schemas/MergeHunk"
    Conflict:
      type: object
      properties:
        conflictMetadata:
          $ref: "#/components/schemas/ConflictMetadata"
        mergeHunks:
          $ref: "#/components/schemas/MergeHunks"
      description: Information about conflicts in a merge operation.
    FileSizes:
      type: object
      properties:
        source:
          $ref: "#/components/schemas/FileSize"
        destination:
          $ref: "#/components/schemas/FileSize"
        base:
          $ref: "#/components/schemas/FileSize"
      description: Information about the size of files in a merge or pull request.
    FileModes:
      type: object
      properties:
        source:
          $ref: "#/components/schemas/FileModeTypeEnum"
        destination:
          $ref: "#/components/schemas/FileModeTypeEnum"
        base:
          $ref: "#/components/schemas/FileModeTypeEnum"
      description: Information about file modes in a merge or pull request.
    ObjectTypes:
      type: object
      properties:
        source:
          $ref: "#/components/schemas/ObjectTypeEnum"
        destination:
          $ref: "#/components/schemas/ObjectTypeEnum"
        base:
          $ref: "#/components/schemas/ObjectTypeEnum"
      description: Information about the type of an object in a merge operation.
    NumberOfConflicts:
      type: integer
    IsBinaryFile:
      type: object
      properties:
        source:
          $ref: "#/components/schemas/CapitalBoolean"
        destination:
          $ref: "#/components/schemas/CapitalBoolean"
        base:
          $ref: "#/components/schemas/CapitalBoolean"
      description: Information about whether a file is binary or textual in a merge or pull
        request operation.
    IsContentConflict:
      type: boolean
    IsFileModeConflict:
      type: boolean
    IsObjectTypeConflict:
      type: boolean
    MergeOperations:
      type: object
      properties:
        source:
          $ref: "#/components/schemas/ChangeTypeEnum"
        destination:
          $ref: "#/components/schemas/ChangeTypeEnum"
      description: Information about the file operation conflicts in a merge operation.
    ConflictMetadataList:
      type: array
      items:
        $ref: "#/components/schemas/ConflictMetadata"
    ReplaceContentEntries:
      type: array
      items:
        $ref: "#/components/schemas/ReplaceContentEntry"
    DeleteFileEntries:
      type: array
      items:
        $ref: "#/components/schemas/DeleteFileEntry"
    SetFileModeEntries:
      type: array
      items:
        $ref: "#/components/schemas/SetFileModeEntry"
    ConflictResolution:
      type: object
      properties:
        replaceContents:
          $ref: "#/components/schemas/ReplaceContentEntries"
        deleteFiles:
          $ref: "#/components/schemas/DeleteFileEntries"
        setFileModes:
          $ref: "#/components/schemas/SetFileModeEntries"
      description: A list of inputs to use when resolving conflicts during a merge if
        AUTOMERGE is chosen as the conflict resolution strategy.
    Name:
      type: string
    Email:
      type: string
    KeepEmptyFolders:
      type: boolean
    PutFileEntries:
      type: array
      items:
        $ref: "#/components/schemas/PutFileEntry"
    FilesMetadata:
      type: array
      items:
        $ref: "#/components/schemas/FileMetadata"
    Title:
      type: string
      maxLength: 150
    Description:
      type: string
      maxLength: 10240
    TargetList:
      type: array
      items:
        $ref: "#/components/schemas/Target"
    PullRequest:
      type: object
      properties:
        pullRequestId:
          $ref: "#/components/schemas/PullRequestId"
        title:
          $ref: "#/components/schemas/Title"
        description:
          $ref: "#/components/schemas/Description"
        lastActivityDate:
          $ref: "#/components/schemas/LastModifiedDate"
        creationDate:
          $ref: "#/components/schemas/CreationDate"
        pullRequestStatus:
          $ref: "#/components/schemas/PullRequestStatusEnum"
        authorArn:
          $ref: "#/components/schemas/Arn"
        pullRequestTargets:
          $ref: "#/components/schemas/PullRequestTargetList"
        clientRequestToken:
          $ref: "#/components/schemas/ClientRequestToken"
      description: Returns information about a pull request.
    RepositoryDescription:
      type: string
      maxLength: 1000
    TagsMap:
      type: object
      additionalProperties:
        $ref: "#/components/schemas/TagValue"
    RepositoryMetadata:
      type: object
      properties:
        accountId:
          $ref: "#/components/schemas/AccountId"
        repositoryId:
          $ref: "#/components/schemas/RepositoryId"
        repositoryName:
          $ref: "#/components/schemas/RepositoryName"
        repositoryDescription:
          $ref: "#/components/schemas/RepositoryDescription"
        defaultBranch:
          $ref: "#/components/schemas/BranchName"
        lastModifiedDate:
          $ref: "#/components/schemas/LastModifiedDate"
        creationDate:
          $ref: "#/components/schemas/CreationDate"
        cloneUrlHttp:
          $ref: "#/components/schemas/CloneUrlHttp"
        cloneUrlSsh:
          $ref: "#/components/schemas/CloneUrlSsh"
        Arn:
          $ref: "#/components/schemas/Arn"
      description: Information about a repository.
    Date:
      type: string
    DeleteFileEntry:
      type: object
      required:
        - filePath
      properties:
        filePath:
          $ref: "#/components/schemas/Path"
      description: A file that will be deleted as part of a commit.
    RepositoryId:
      type: string
    PullRequestEventType:
      type: string
      enum:
        - PULL_REQUEST_CREATED
        - PULL_REQUEST_STATUS_CHANGED
        - PULL_REQUEST_SOURCE_REFERENCE_UPDATED
        - PULL_REQUEST_MERGE_STATE_CHANGED
    PullRequestEventList:
      type: array
      items:
        $ref: "#/components/schemas/PullRequestEvent"
    Difference:
      type: object
      properties:
        beforeBlob:
          $ref: "#/components/schemas/BlobMetadata"
        afterBlob:
          $ref: "#/components/schemas/BlobMetadata"
        changeType:
          $ref: "#/components/schemas/ChangeTypeEnum"
      description: Returns information about a set of differences for a commit specifier.
    DifferenceList:
      type: array
      items:
        $ref: "#/components/schemas/Difference"
    EventDate:
      type: string
      format: date-time
    FileModeTypeEnum:
      type: string
      enum:
        - EXECUTABLE
        - NORMAL
        - SYMLINK
    File:
      type: object
      properties:
        blobId:
          $ref: "#/components/schemas/ObjectId"
        absolutePath:
          $ref: "#/components/schemas/Path"
        relativePath:
          $ref: "#/components/schemas/Path"
        fileMode:
          $ref: "#/components/schemas/FileModeTypeEnum"
      description: Returns information about a file in a repository.
    FileContent:
      type: string
      maxLength: 6291456
    FileList:
      type: array
      items:
        $ref: "#/components/schemas/File"
    FileMetadata:
      type: object
      properties:
        absolutePath:
          $ref: "#/components/schemas/Path"
        blobId:
          $ref: "#/components/schemas/ObjectId"
        fileMode:
          $ref: "#/components/schemas/FileModeTypeEnum"
      description: A file that will be added, updated, or deleted as part of a commit.
    FileSize:
      type: integer
    Folder:
      type: object
      properties:
        treeId:
          $ref: "#/components/schemas/ObjectId"
        absolutePath:
          $ref: "#/components/schemas/Path"
        relativePath:
          $ref: "#/components/schemas/Path"
      description: Returns information about a folder in a repository.
    FolderList:
      type: array
      items:
        $ref: "#/components/schemas/Folder"
    blob:
      type: string
    Limit:
      type: integer
    ObjectSize:
      type: integer
    SymbolicLinkList:
      type: array
      items:
        $ref: "#/components/schemas/SymbolicLink"
    SubModuleList:
      type: array
      items:
        $ref: "#/components/schemas/SubModule"
    IsMergeable:
      type: boolean
    MergeOptions:
      type: array
      items:
        $ref: "#/components/schemas/MergeOptionTypeEnum"
    RepositoryTriggersConfigurationId:
      type: string
    RepositoryTriggersList:
      type: array
      items:
        $ref: "#/components/schemas/RepositoryTrigger"
    HunkContent:
      type: string
    IsHunkConflict:
      type: boolean
    IsMerged:
      type: boolean
    IsMove:
      type: boolean
    LineNumber:
      type: integer
    PullRequestStatusEnum:
      type: string
      enum:
        - OPEN
        - CLOSED
    PullRequestIdList:
      type: array
      items:
        $ref: "#/components/schemas/PullRequestId"
    SortByEnum:
      type: string
      enum:
        - repositoryName
        - lastModifiedDate
    OrderEnum:
      type: string
      enum:
        - ascending
        - descending
    RepositoryNameIdPairList:
      type: array
      items:
        $ref: "#/components/schemas/RepositoryNameIdPair"
    ResourceArn:
      type: string
    Position:
      type: integer
    RelativeFileVersionEnum:
      type: string
      enum:
        - BEFORE
        - AFTER
    MergeHunkDetail:
      type: object
      properties:
        startLine:
          $ref: "#/components/schemas/LineNumber"
        endLine:
          $ref: "#/components/schemas/LineNumber"
        hunkContent:
          $ref: "#/components/schemas/HunkContent"
      description: Information about the details of a merge hunk that contains a conflict
        in a merge or pull request operation.
    MergeHunk:
      type: object
      properties:
        isConflict:
          $ref: "#/components/schemas/IsHunkConflict"
        source:
          $ref: "#/components/schemas/MergeHunkDetail"
        destination:
          $ref: "#/components/schemas/MergeHunkDetail"
        base:
          $ref: "#/components/schemas/MergeHunkDetail"
      description: Information about merge hunks in a merge or pull request operation.
    MergeMetadata:
      type: object
      properties:
        isMerged:
          $ref: "#/components/schemas/IsMerged"
        mergedBy:
          $ref: "#/components/schemas/Arn"
        mergeCommitId:
          $ref: "#/components/schemas/CommitId"
        mergeOption:
          $ref: "#/components/schemas/MergeOptionTypeEnum"
      description: Returns information about a merge or potential merge between a source
        reference and a destination reference in a pull request.
    ObjectTypeEnum:
      type: string
      enum:
        - FILE
        - DIRECTORY
        - GIT_LINK
        - SYMBOLIC_LINK
    PullRequestTargetList:
      type: array
      items:
        $ref: "#/components/schemas/PullRequestTarget"
    PullRequestCreatedEventMetadata:
      type: object
      properties:
        repositoryName:
          $ref: "#/components/schemas/RepositoryName"
        sourceCommitId:
          $ref: "#/components/schemas/CommitId"
        destinationCommitId:
          $ref: "#/components/schemas/CommitId"
        mergeBase:
          $ref: "#/components/schemas/CommitId"
      description: Metadata about the pull request that is used when comparing the pull
        request source with its destination.
    PullRequestStatusChangedEventMetadata:
      type: object
      properties:
        pullRequestStatus:
          $ref: "#/components/schemas/PullRequestStatusEnum"
      description: Information about a change to the status of a pull request.
    PullRequestSourceReferenceUpdatedEventMetadata:
      type: object
      properties:
        repositoryName:
          $ref: "#/components/schemas/RepositoryName"
        beforeCommitId:
          $ref: "#/components/schemas/CommitId"
        afterCommitId:
          $ref: "#/components/schemas/CommitId"
        mergeBase:
          $ref: "#/components/schemas/CommitId"
      description: Information about an update to the source branch of a pull request.
    PullRequestMergedStateChangedEventMetadata:
      type: object
      properties:
        repositoryName:
          $ref: "#/components/schemas/RepositoryName"
        destinationReference:
          $ref: "#/components/schemas/ReferenceName"
        mergeMetadata:
          $ref: "#/components/schemas/MergeMetadata"
      description: "Returns information about the change in the merge state for a pull
        request event. "
    PullRequestEvent:
      type: object
      properties:
        pullRequestId:
          $ref: "#/components/schemas/PullRequestId"
        eventDate:
          $ref: "#/components/schemas/EventDate"
        pullRequestEventType:
          $ref: "#/components/schemas/PullRequestEventType"
        actorArn:
          $ref: "#/components/schemas/Arn"
        pullRequestCreatedEventMetadata:
          $ref: "#/components/schemas/PullRequestCreatedEventMetadata"
        pullRequestStatusChangedEventMetadata:
          $ref: "#/components/schemas/PullRequestStatusChangedEventMetadata"
        pullRequestSourceReferenceUpdatedEventMetadata:
          $ref: "#/components/schemas/PullRequestSourceReferenceUpdatedEventMetadata"
        pullRequestMergedStateChangedEventMetadata:
          $ref: "#/components/schemas/PullRequestMergedStateChangedEventMetadata"
      description: Returns information about a pull request event.
    ReferenceName:
      type: string
    PullRequestTarget:
      type: object
      properties:
        repositoryName:
          $ref: "#/components/schemas/RepositoryName"
        sourceReference:
          $ref: "#/components/schemas/ReferenceName"
        destinationReference:
          $ref: "#/components/schemas/ReferenceName"
        destinationCommit:
          $ref: "#/components/schemas/CommitId"
        sourceCommit:
          $ref: "#/components/schemas/CommitId"
        mergeBase:
          $ref: "#/components/schemas/CommitId"
        mergeMetadata:
          $ref: "#/components/schemas/MergeMetadata"
      description: Returns information about a pull request target.
    PutFileEntry:
      type: object
      required:
        - filePath
      properties:
        filePath:
          $ref: "#/components/schemas/Path"
        fileMode:
          $ref: "#/components/schemas/FileModeTypeEnum"
        fileContent:
          $ref: "#/components/schemas/FileContent"
        sourceFile:
          $ref: "#/components/schemas/SourceFileSpecifier"
      description: Information about a file that will be added or updated as part of a
        commit.
    SourceFileSpecifier:
      type: object
      required:
        - filePath
      properties:
        filePath:
          $ref: "#/components/schemas/Path"
        isMove:
          $ref: "#/components/schemas/IsMove"
      description: Information about a source file that is part of changes made in a commit.
    ReplaceContentEntry:
      type: object
      required:
        - filePath
        - replacementType
      properties:
        filePath:
          $ref: "#/components/schemas/Path"
        replacementType:
          $ref: "#/components/schemas/ReplacementTypeEnum"
        content:
          $ref: "#/components/schemas/FileContent"
        fileMode:
          $ref: "#/components/schemas/FileModeTypeEnum"
      description: Information about a replacement content entry in the conflict of a merge
        or pull request operation.
    ReplacementTypeEnum:
      type: string
      enum:
        - KEEP_BASE
        - KEEP_SOURCE
        - KEEP_DESTINATION
        - USE_NEW_CONTENT
    RepositoryNameIdPair:
      type: object
      properties:
        repositoryName:
          $ref: "#/components/schemas/RepositoryName"
        repositoryId:
          $ref: "#/components/schemas/RepositoryId"
      description: Information about a repository name and ID.
    RepositoryTriggerName:
      type: string
    RepositoryTriggerCustomData:
      type: string
    RepositoryTriggerEventList:
      type: array
      items:
        $ref: "#/components/schemas/RepositoryTriggerEventEnum"
    RepositoryTrigger:
      type: object
      required:
        - name
        - destinationArn
        - events
      properties:
        name:
          $ref: "#/components/schemas/RepositoryTriggerName"
        destinationArn:
          $ref: "#/components/schemas/Arn"
        customData:
          $ref: "#/components/schemas/RepositoryTriggerCustomData"
        branches:
          $ref: "#/components/schemas/BranchNameList"
        events:
          $ref: "#/components/schemas/RepositoryTriggerEventList"
      description: Information about a trigger for a repository.
    RepositoryTriggerEventEnum:
      type: string
      enum:
        - all
        - updateReference
        - createReference
        - deleteReference
    RepositoryTriggerExecutionFailureMessage:
      type: string
    RepositoryTriggerExecutionFailure:
      type: object
      properties:
        trigger:
          $ref: "#/components/schemas/RepositoryTriggerName"
        failureMessage:
          $ref: "#/components/schemas/RepositoryTriggerExecutionFailureMessage"
      description: A trigger failed to run.
    RepositoryTriggerExecutionFailureList:
      type: array
      items:
        $ref: "#/components/schemas/RepositoryTriggerExecutionFailure"
    RepositoryTriggerNameList:
      type: array
      items:
        $ref: "#/components/schemas/RepositoryTriggerName"
    SetFileModeEntry:
      type: object
      required:
        - filePath
        - fileMode
      properties:
        filePath:
          $ref: "#/components/schemas/Path"
        fileMode:
          $ref: "#/components/schemas/FileModeTypeEnum"
      description: Information about the file mode changes.
    SubModule:
      type: object
      properties:
        commitId:
          $ref: "#/components/schemas/ObjectId"
        absolutePath:
          $ref: "#/components/schemas/Path"
        relativePath:
          $ref: "#/components/schemas/Path"
      description: Returns information about a submodule reference in a repository folder.
    SymbolicLink:
      type: object
      properties:
        blobId:
          $ref: "#/components/schemas/ObjectId"
        absolutePath:
          $ref: "#/components/schemas/Path"
        relativePath:
          $ref: "#/components/schemas/Path"
        fileMode:
          $ref: "#/components/schemas/FileModeTypeEnum"
      description: Returns information about a symbolic link in a repository folder.
    TagKey:
      type: string
      minLength: 1
      maxLength: 128
    TagKeysList:
      type: array
      items:
        $ref: "#/components/schemas/TagKey"
    TagValue:
      type: string
      minLength: 0
      maxLength: 256
    Target:
      type: object
      required:
        - repositoryName
        - sourceReference
      properties:
        repositoryName:
          $ref: "#/components/schemas/RepositoryName"
        sourceReference:
          $ref: "#/components/schemas/ReferenceName"
        destinationReference:
          $ref: "#/components/schemas/ReferenceName"
      description: Returns information about a target for a pull request.
