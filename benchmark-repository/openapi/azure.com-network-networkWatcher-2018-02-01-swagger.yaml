openapi: 3.0.0
info:
  description: The Microsoft Azure Network management API provides a RESTful set of web
    services that interact with Microsoft Azure Networks service to manage your
    network resources. The API has entities that capture the relationship
    between an end user and the Microsoft Azure Networks service.
  title: NetworkManagementClient
  version: 2018-02-01
  x-apisguru-categories:
    - cloud
  x-logo:
    url: https://assets.onestore.ms/cdnfiles/onestorerolling-1606-01000/shell/v3/images/logo/microsoft.png
  x-origin:
    - format: swagger
      url: https://raw.githubusercontent.com/Azure/azure-rest-api-specs/master/specification/network/resource-manager/Microsoft.Network/stable/2018-02-01/networkWatcher.json
      version: "2.0"
  x-preferred: false
  x-providerName: azure.com
  x-serviceName: network-networkWatcher
  x-tags:
    - Azure
    - Microsoft
security:
  - azure_auth:
      - user_impersonation
paths:
  "/subscriptions/{subscriptionId}/providers/Microsoft.Network/networkWatchers":
    get:
      description: Gets all network watchers by subscription.
      operationId: NetworkWatchers_ListAll
      parameters:
        - $ref: "#/components/parameters/ApiVersionParameter"
        - $ref: "#/components/parameters/SubscriptionIdParameter"
      responses:
        "200":
          description: Request successful. The operation returns a list of network watcher
            resources.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NetworkWatcherListResult"
              examples:
                List all network watchers:
                  $ref: "#/components/examples/List_all_network_watchers"
            text/json:
              schema:
                $ref: "#/components/schemas/NetworkWatcherListResult"
              examples:
                List all network watchers:
                  $ref: "#/components/examples/List_all_network_watchers"
      tags:
        - NetworkWatchers
      x-ms-pageable: {}
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers":
    get:
      description: Gets all network watchers by resource group.
      operationId: NetworkWatchers_List
      parameters:
        - description: The name of the resource group.
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
          examples:
            List network watchers:
              value: rg1
        - $ref: "#/components/parameters/ApiVersionParameter"
        - $ref: "#/components/parameters/SubscriptionIdParameter"
      responses:
        "200":
          description: Request successful. The operation returns a list of network watcher
            resources.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NetworkWatcherListResult"
              examples:
                List network watchers:
                  $ref: "#/components/examples/List_network_watchers"
            text/json:
              schema:
                $ref: "#/components/schemas/NetworkWatcherListResult"
              examples:
                List network watchers:
                  $ref: "#/components/examples/List_network_watchers"
      tags:
        - NetworkWatchers
      x-ms-pageable: {}
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}":
    delete:
      description: Deletes the specified network watcher resource.
      operationId: NetworkWatchers_Delete
      parameters:
        - description: The name of the resource group.
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
          examples:
            Delete network watcher:
              value: rg1
        - description: The name of the network watcher.
          in: path
          name: networkWatcherName
          required: true
          schema:
            type: string
          examples:
            Delete network watcher:
              value: nw1
        - $ref: "#/components/parameters/ApiVersionParameter"
        - $ref: "#/components/parameters/SubscriptionIdParameter"
      responses:
        "202":
          description: Accepted and the operation will complete asynchronously.
        "204":
          description: Delete successful.
      tags:
        - NetworkWatchers
      x-ms-long-running-operation: true
    get:
      description: Gets the specified network watcher by resource group.
      operationId: NetworkWatchers_Get
      parameters:
        - description: The name of the resource group.
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
          examples:
            Get network watcher:
              value: rg1
        - description: The name of the network watcher.
          in: path
          name: networkWatcherName
          required: true
          schema:
            type: string
          examples:
            Get network watcher:
              value: nw1
        - $ref: "#/components/parameters/ApiVersionParameter"
        - $ref: "#/components/parameters/SubscriptionIdParameter"
      responses:
        "200":
          description: Request successful. The operation returns a network watcher resource.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NetworkWatcher"
              examples:
                Get network watcher:
                  $ref: "#/components/examples/Get_network_watcher"
            text/json:
              schema:
                $ref: "#/components/schemas/NetworkWatcher"
              examples:
                Get network watcher:
                  $ref: "#/components/examples/Get_network_watcher"
      tags:
        - NetworkWatchers
    patch:
      description: Updates a network watcher tags.
      operationId: NetworkWatchers_UpdateTags
      parameters:
        - description: The name of the resource group.
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
          examples:
            Update network watcher tags:
              value: rg1
        - description: The name of the network watcher.
          in: path
          name: networkWatcherName
          required: true
          schema:
            type: string
          examples:
            Update network watcher tags:
              value: nw1
        - $ref: "#/components/parameters/ApiVersionParameter"
        - $ref: "#/components/parameters/SubscriptionIdParameter"
      requestBody:
        content:
          application/json:
            schema:
              description: Tags object for patch operations.
              properties:
                tags:
                  additionalProperties:
                    type: string
                  description: Resource tags.
                  type: object
          text/json:
            schema:
              description: Tags object for patch operations.
              properties:
                tags:
                  additionalProperties:
                    type: string
                  description: Resource tags.
                  type: object
        description: Parameters supplied to update network watcher tags.
        required: true
      responses:
        "200":
          description: Update successful. The operation returns the resulting network
            watcher resource.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NetworkWatcher"
              examples:
                Update network watcher tags:
                  $ref: "#/components/examples/Update_network_watcher_tags"
            text/json:
              schema:
                $ref: "#/components/schemas/NetworkWatcher"
              examples:
                Update network watcher tags:
                  $ref: "#/components/examples/Update_network_watcher_tags"
      tags:
        - NetworkWatchers
    put:
      description: Creates or updates a network watcher in the specified resource group.
      operationId: NetworkWatchers_CreateOrUpdate
      parameters:
        - description: The name of the resource group.
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
          examples:
            Create network watcher:
              value: rg1
        - description: The name of the network watcher.
          in: path
          name: networkWatcherName
          required: true
          schema:
            type: string
          examples:
            Create network watcher:
              value: nw1
        - $ref: "#/components/parameters/ApiVersionParameter"
        - $ref: "#/components/parameters/SubscriptionIdParameter"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NetworkWatcher"
          text/json:
            schema:
              $ref: "#/components/schemas/NetworkWatcher"
        description: Parameters that define the network watcher resource.
        required: true
      responses:
        "200":
          description: Update successful. The operation returns the resulting network
            watcher resource.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NetworkWatcher"
              examples:
                Create network watcher:
                  $ref: "#/components/examples/Create_network_watcher"
            text/json:
              schema:
                $ref: "#/components/schemas/NetworkWatcher"
              examples:
                Create network watcher:
                  $ref: "#/components/examples/Create_network_watcher"
        "201":
          description: Create successful. The operation returns the resulting network
            watcher resource.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NetworkWatcher"
              examples:
                Create network watcher:
                  $ref: "#/components/examples/Create_network_watcher"
            text/json:
              schema:
                $ref: "#/components/schemas/NetworkWatcher"
              examples:
                Create network watcher:
                  $ref: "#/components/examples/Create_network_watcher"
      tags:
        - NetworkWatchers
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/availableProvidersList":
    post:
      description: Lists all available internet service providers for a specified Azure
        region.
      operationId: NetworkWatchers_ListAvailableProviders
      parameters:
        - description: The name of the network watcher resource group.
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
          examples:
            Get Azure Reachability Report:
              value: rg1
        - description: The name of the network watcher resource.
          in: path
          name: networkWatcherName
          required: true
          schema:
            type: string
          examples:
            Get Azure Reachability Report:
              value: nw1
        - $ref: "#/components/parameters/ApiVersionParameter"
        - $ref: "#/components/parameters/SubscriptionIdParameter"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AvailableProvidersListParameters"
          text/json:
            schema:
              $ref: "#/components/schemas/AvailableProvidersListParameters"
        description: Parameters that scope the list of available providers.
        required: true
      responses:
        "200":
          description: Successful request for list of available providers.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AvailableProvidersList"
              examples:
                Get Azure Reachability Report:
                  $ref: "#/components/examples/Get_Azure_Reachability_Report"
            text/json:
              schema:
                $ref: "#/components/schemas/AvailableProvidersList"
              examples:
                Get Azure Reachability Report:
                  $ref: "#/components/examples/Get_Azure_Reachability_Report"
        "202":
          description: Accepted and the operation will complete asynchronously.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AvailableProvidersList"
              examples:
                Get Azure Reachability Report:
                  $ref: "#/components/examples/Get_Azure_Reachability_Report"
            text/json:
              schema:
                $ref: "#/components/schemas/AvailableProvidersList"
              examples:
                Get Azure Reachability Report:
                  $ref: "#/components/examples/Get_Azure_Reachability_Report"
      tags:
        - NetworkWatchers
      x-ms-long-running-operation: true
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/azureReachabilityReport":
    post:
      description: Gets the relative latency score for internet service providers from a
        specified location to Azure regions.
      operationId: NetworkWatchers_GetAzureReachabilityReport
      parameters:
        - description: The name of the network watcher resource group.
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
          examples:
            Get Azure Reachability Report:
              value: rg1
        - description: The name of the network watcher resource.
          in: path
          name: networkWatcherName
          required: true
          schema:
            type: string
          examples:
            Get Azure Reachability Report:
              value: nw1
        - $ref: "#/components/parameters/ApiVersionParameter"
        - $ref: "#/components/parameters/SubscriptionIdParameter"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AzureReachabilityReportParameters"
          text/json:
            schema:
              $ref: "#/components/schemas/AzureReachabilityReportParameters"
        description: Parameters that determine Azure reachability report configuration.
        required: true
      responses:
        "200":
          description: Successful request for Azure reachability report.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AzureReachabilityReport"
              examples:
                Get Azure Reachability Report:
                  $ref: "#/components/examples/Get_Azure_Reachability_Report"
            text/json:
              schema:
                $ref: "#/components/schemas/AzureReachabilityReport"
              examples:
                Get Azure Reachability Report:
                  $ref: "#/components/examples/Get_Azure_Reachability_Report"
        "202":
          description: Accepted and the operation will complete asynchronously.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AzureReachabilityReport"
              examples:
                Get Azure Reachability Report:
                  $ref: "#/components/examples/Get_Azure_Reachability_Report"
            text/json:
              schema:
                $ref: "#/components/schemas/AzureReachabilityReport"
              examples:
                Get Azure Reachability Report:
                  $ref: "#/components/examples/Get_Azure_Reachability_Report"
      tags:
        - NetworkWatchers
      x-ms-long-running-operation: true
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/configureFlowLog":
    post:
      description: Configures flow log on a specified resource.
      operationId: NetworkWatchers_SetFlowLogConfiguration
      parameters:
        - description: The name of the network watcher resource group.
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
          examples:
            Configure flow log:
              value: rg1
        - description: The name of the network watcher resource.
          in: path
          name: networkWatcherName
          required: true
          schema:
            type: string
          examples:
            Configure flow log:
              value: nw1
        - $ref: "#/components/parameters/ApiVersionParameter"
        - $ref: "#/components/parameters/SubscriptionIdParameter"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/FlowLogInformation"
          text/json:
            schema:
              $ref: "#/components/schemas/FlowLogInformation"
        description: Parameters that define the configuration of flow log.
        required: true
      responses:
        "200":
          description: Successful request for setting flow log configuration.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FlowLogInformation"
              examples:
                Configure flow log:
                  $ref: "#/components/examples/Configure_flow_log"
            text/json:
              schema:
                $ref: "#/components/schemas/FlowLogInformation"
              examples:
                Configure flow log:
                  $ref: "#/components/examples/Configure_flow_log"
        "202":
          description: Accepted and the operation will complete asynchronously.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FlowLogInformation"
              examples:
                Configure flow log:
                  $ref: "#/components/examples/Configure_flow_log"
            text/json:
              schema:
                $ref: "#/components/schemas/FlowLogInformation"
              examples:
                Configure flow log:
                  $ref: "#/components/examples/Configure_flow_log"
      tags:
        - NetworkWatchers
      x-ms-long-running-operation: true
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/connectionMonitors":
    get:
      description: Lists all connection monitors for the specified Network Watcher.
      operationId: ConnectionMonitors_List
      parameters:
        - description: The name of the resource group containing Network Watcher.
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
          examples:
            List connection monitors:
              value: rg1
        - description: The name of the Network Watcher resource.
          in: path
          name: networkWatcherName
          required: true
          schema:
            type: string
          examples:
            List connection monitors:
              value: nw1
        - $ref: "#/components/parameters/ApiVersionParameter"
        - $ref: "#/components/parameters/SubscriptionIdParameter"
      responses:
        "200":
          description: Successful connection monitor enumeration request.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConnectionMonitorListResult"
              examples:
                List connection monitors:
                  $ref: "#/components/examples/List_connection_monitors"
            text/json:
              schema:
                $ref: "#/components/schemas/ConnectionMonitorListResult"
              examples:
                List connection monitors:
                  $ref: "#/components/examples/List_connection_monitors"
      tags:
        - ConnectionMonitors
      x-ms-pageable: {}
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/connectionMonitors/{connectionMonitorName}":
    delete:
      description: Deletes the specified connection monitor.
      operationId: ConnectionMonitors_Delete
      parameters:
        - description: The name of the resource group containing Network Watcher.
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
          examples:
            Delete connection monitor:
              value: rg1
        - description: The name of the Network Watcher resource.
          in: path
          name: networkWatcherName
          required: true
          schema:
            type: string
          examples:
            Delete connection monitor:
              value: nw1
        - description: The name of the connection monitor.
          in: path
          name: connectionMonitorName
          required: true
          schema:
            type: string
          examples:
            Delete connection monitor:
              value: cm1
        - $ref: "#/components/parameters/ApiVersionParameter"
        - $ref: "#/components/parameters/SubscriptionIdParameter"
      responses:
        "202":
          description: Accepted. The operation will complete asynchronously.
        "204":
          description: Delete successful.
      tags:
        - ConnectionMonitors
      x-ms-long-running-operation: true
    get:
      description: Gets a connection monitor by name.
      operationId: ConnectionMonitors_Get
      parameters:
        - description: The name of the resource group containing Network Watcher.
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
          examples:
            Get connection monitor:
              value: rg1
        - description: The name of the Network Watcher resource.
          in: path
          name: networkWatcherName
          required: true
          schema:
            type: string
          examples:
            Get connection monitor:
              value: nw1
        - description: The name of the connection monitor.
          in: path
          name: connectionMonitorName
          required: true
          schema:
            type: string
          examples:
            Get connection monitor:
              value: cm1
        - $ref: "#/components/parameters/ApiVersionParameter"
        - $ref: "#/components/parameters/SubscriptionIdParameter"
      responses:
        "200":
          description: Request successful. The operation returns a connection monitor.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConnectionMonitorResult"
              examples:
                Get connection monitor:
                  $ref: "#/components/examples/Get_connection_monitor"
            text/json:
              schema:
                $ref: "#/components/schemas/ConnectionMonitorResult"
              examples:
                Get connection monitor:
                  $ref: "#/components/examples/Get_connection_monitor"
      tags:
        - ConnectionMonitors
    put:
      description: Create or update a connection monitor.
      operationId: ConnectionMonitors_CreateOrUpdate
      parameters:
        - description: The name of the resource group containing Network Watcher.
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
          examples:
            Create connection monitor:
              value: rg1
        - description: The name of the Network Watcher resource.
          in: path
          name: networkWatcherName
          required: true
          schema:
            type: string
          examples:
            Create connection monitor:
              value: nw1
        - description: The name of the connection monitor.
          in: path
          name: connectionMonitorName
          required: true
          schema:
            type: string
          examples:
            Create connection monitor:
              value: cm1
        - $ref: "#/components/parameters/ApiVersionParameter"
        - $ref: "#/components/parameters/SubscriptionIdParameter"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ConnectionMonitor"
          text/json:
            schema:
              $ref: "#/components/schemas/ConnectionMonitor"
        description: Parameters that define the operation to create a connection monitor.
        required: true
      responses:
        "200":
          description: Update successful. The operation returns the resulting network
            watcher resource.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConnectionMonitorResult"
              examples:
                Create connection monitor:
                  $ref: "#/components/examples/Create_connection_monitor"
            text/json:
              schema:
                $ref: "#/components/schemas/ConnectionMonitorResult"
              examples:
                Create connection monitor:
                  $ref: "#/components/examples/Create_connection_monitor"
        "201":
          description: Create successful. The operation returns the resulting network
            watcher resource.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConnectionMonitorResult"
              examples:
                Create connection monitor:
                  $ref: "#/components/examples/Create_connection_monitor"
            text/json:
              schema:
                $ref: "#/components/schemas/ConnectionMonitorResult"
              examples:
                Create connection monitor:
                  $ref: "#/components/examples/Create_connection_monitor"
      tags:
        - ConnectionMonitors
      x-ms-long-running-operation: true
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/connectionMonitors/{connectionMonitorName}/query":
    post:
      description: Query a snapshot of the most recent connection states.
      operationId: ConnectionMonitors_Query
      parameters:
        - description: The name of the resource group containing Network Watcher.
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
          examples:
            Query connection monitor:
              value: rg1
        - description: The name of the Network Watcher resource.
          in: path
          name: networkWatcherName
          required: true
          schema:
            type: string
          examples:
            Query connection monitor:
              value: nw1
        - description: The name given to the connection monitor.
          in: path
          name: connectionMonitorName
          required: true
          schema:
            type: string
          examples:
            Query connection monitor:
              value: cm1
        - $ref: "#/components/parameters/ApiVersionParameter"
        - $ref: "#/components/parameters/SubscriptionIdParameter"
      responses:
        "200":
          description: Successful query of connection states.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConnectionMonitorQueryResult"
              examples:
                Query connection monitor:
                  $ref: "#/components/examples/Query_connection_monitor"
            text/json:
              schema:
                $ref: "#/components/schemas/ConnectionMonitorQueryResult"
              examples:
                Query connection monitor:
                  $ref: "#/components/examples/Query_connection_monitor"
        "202":
          description: Accepted query of connection states.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConnectionMonitorQueryResult"
              examples:
                Query connection monitor:
                  $ref: "#/components/examples/Query_connection_monitor"
            text/json:
              schema:
                $ref: "#/components/schemas/ConnectionMonitorQueryResult"
              examples:
                Query connection monitor:
                  $ref: "#/components/examples/Query_connection_monitor"
      tags:
        - ConnectionMonitors
      x-ms-long-running-operation: true
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/connectionMonitors/{connectionMonitorName}/start":
    post:
      description: Starts the specified connection monitor.
      operationId: ConnectionMonitors_Start
      parameters:
        - description: The name of the resource group containing Network Watcher.
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
          examples:
            Start connection monitor:
              value: rg1
        - description: The name of the Network Watcher resource.
          in: path
          name: networkWatcherName
          required: true
          schema:
            type: string
          examples:
            Start connection monitor:
              value: nw1
        - description: The name of the connection monitor.
          in: path
          name: connectionMonitorName
          required: true
          schema:
            type: string
          examples:
            Start connection monitor:
              value: cm1
        - $ref: "#/components/parameters/ApiVersionParameter"
        - $ref: "#/components/parameters/SubscriptionIdParameter"
      responses:
        "200":
          description: Request successful. The operation starts the connection monitor.
        "202":
          description: Accepted. The operation will complete asynchronously.
      tags:
        - ConnectionMonitors
      x-ms-long-running-operation: true
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/connectionMonitors/{connectionMonitorName}/stop":
    post:
      description: Stops the specified connection monitor.
      operationId: ConnectionMonitors_Stop
      parameters:
        - description: The name of the resource group containing Network Watcher.
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
          examples:
            Stop connection monitor:
              value: rg1
        - description: The name of the Network Watcher resource.
          in: path
          name: networkWatcherName
          required: true
          schema:
            type: string
          examples:
            Stop connection monitor:
              value: nw1
        - description: The name of the connection monitor.
          in: path
          name: connectionMonitorName
          required: true
          schema:
            type: string
          examples:
            Stop connection monitor:
              value: cm1
        - $ref: "#/components/parameters/ApiVersionParameter"
        - $ref: "#/components/parameters/SubscriptionIdParameter"
      responses:
        "200":
          description: Request successful. The operation stops the connection monitor.
        "202":
          description: Accepted. The operation will complete asynchronously.
      tags:
        - ConnectionMonitors
      x-ms-long-running-operation: true
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/connectivityCheck":
    post:
      description: Verifies the possibility of establishing a direct TCP connection from a
        virtual machine to a given endpoint including another VM or an arbitrary
        remote server.
      operationId: NetworkWatchers_CheckConnectivity
      parameters:
        - description: The name of the network watcher resource group.
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
          examples:
            Check connectivity:
              value: rg1
        - description: The name of the network watcher resource.
          in: path
          name: networkWatcherName
          required: true
          schema:
            type: string
          examples:
            Check connectivity:
              value: nw1
        - $ref: "#/components/parameters/ApiVersionParameter"
        - $ref: "#/components/parameters/SubscriptionIdParameter"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ConnectivityParameters"
          text/json:
            schema:
              $ref: "#/components/schemas/ConnectivityParameters"
        description: Parameters that determine how the connectivity check will be performed.
        required: true
      responses:
        "200":
          description: Successful request for checking connectivity.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConnectivityInformation"
              examples:
                Check connectivity:
                  $ref: "#/components/examples/Check_connectivity"
            text/json:
              schema:
                $ref: "#/components/schemas/ConnectivityInformation"
              examples:
                Check connectivity:
                  $ref: "#/components/examples/Check_connectivity"
        "202":
          description: Accepted and the operation will complete asynchronously.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConnectivityInformation"
              examples:
                Check connectivity:
                  $ref: "#/components/examples/Check_connectivity"
            text/json:
              schema:
                $ref: "#/components/schemas/ConnectivityInformation"
              examples:
                Check connectivity:
                  $ref: "#/components/examples/Check_connectivity"
      tags:
        - NetworkWatchers
      x-ms-long-running-operation: true
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/ipFlowVerify":
    post:
      description: Verify IP flow from the specified VM to a location given the currently
        configured NSG rules.
      operationId: NetworkWatchers_VerifyIPFlow
      parameters:
        - description: The name of the resource group.
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
          examples:
            Ip flow verify:
              value: rg1
        - description: The name of the network watcher.
          in: path
          name: networkWatcherName
          required: true
          schema:
            type: string
          examples:
            Ip flow verify:
              value: nw1
        - $ref: "#/components/parameters/ApiVersionParameter"
        - $ref: "#/components/parameters/SubscriptionIdParameter"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/VerificationIPFlowParameters"
          text/json:
            schema:
              $ref: "#/components/schemas/VerificationIPFlowParameters"
        description: Parameters that define the IP flow to be verified.
        required: true
      responses:
        "200":
          description: Request successful. The operation returns the result of IP flow
            verification.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/VerificationIPFlowResult"
              examples:
                Ip flow verify:
                  $ref: "#/components/examples/Ip_flow_verify"
            text/json:
              schema:
                $ref: "#/components/schemas/VerificationIPFlowResult"
              examples:
                Ip flow verify:
                  $ref: "#/components/examples/Ip_flow_verify"
        "202":
          description: Accepted and the operation will complete asynchronously.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/VerificationIPFlowResult"
              examples:
                Ip flow verify:
                  $ref: "#/components/examples/Ip_flow_verify"
            text/json:
              schema:
                $ref: "#/components/schemas/VerificationIPFlowResult"
              examples:
                Ip flow verify:
                  $ref: "#/components/examples/Ip_flow_verify"
      tags:
        - NetworkWatchers
      x-ms-long-running-operation: true
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/nextHop":
    post:
      description: Gets the next hop from the specified VM.
      operationId: NetworkWatchers_GetNextHop
      parameters:
        - description: The name of the resource group.
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
          examples:
            Get next hop:
              value: rg1
        - description: The name of the network watcher.
          in: path
          name: networkWatcherName
          required: true
          schema:
            type: string
          examples:
            Get next hop:
              value: nw1
        - $ref: "#/components/parameters/ApiVersionParameter"
        - $ref: "#/components/parameters/SubscriptionIdParameter"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NextHopParameters"
          text/json:
            schema:
              $ref: "#/components/schemas/NextHopParameters"
        description: Parameters that define the source and destination endpoint.
        required: true
      responses:
        "200":
          description: Request successful. The operation returns the next hop from the VM.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NextHopResult"
              examples:
                Get next hop:
                  $ref: "#/components/examples/Get_next_hop"
            text/json:
              schema:
                $ref: "#/components/schemas/NextHopResult"
              examples:
                Get next hop:
                  $ref: "#/components/examples/Get_next_hop"
        "202":
          description: Accepted and the operation will complete asynchronously.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NextHopResult"
              examples:
                Get next hop:
                  $ref: "#/components/examples/Get_next_hop"
            text/json:
              schema:
                $ref: "#/components/schemas/NextHopResult"
              examples:
                Get next hop:
                  $ref: "#/components/examples/Get_next_hop"
      tags:
        - NetworkWatchers
      x-ms-long-running-operation: true
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/packetCaptures":
    get:
      description: Lists all packet capture sessions within the specified resource group.
      operationId: PacketCaptures_List
      parameters:
        - description: The name of the resource group.
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
          examples:
            List packet captures:
              value: rg1
        - description: The name of the Network Watcher resource.
          in: path
          name: networkWatcherName
          required: true
          schema:
            type: string
          examples:
            List packet captures:
              value: nw1
        - $ref: "#/components/parameters/ApiVersionParameter"
        - $ref: "#/components/parameters/SubscriptionIdParameter"
      responses:
        "200":
          description: Successful packet capture enumeration request.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PacketCaptureListResult"
              examples:
                List packet captures:
                  $ref: "#/components/examples/List_packet_captures"
            text/json:
              schema:
                $ref: "#/components/schemas/PacketCaptureListResult"
              examples:
                List packet captures:
                  $ref: "#/components/examples/List_packet_captures"
      tags:
        - PacketCaptures
      x-ms-pageable: {}
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/packetCaptures/{packetCaptureName}":
    delete:
      description: Deletes the specified packet capture session.
      operationId: PacketCaptures_Delete
      parameters:
        - description: The name of the resource group.
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
          examples:
            Delete packet capture:
              value: rg1
        - description: The name of the network watcher.
          in: path
          name: networkWatcherName
          required: true
          schema:
            type: string
          examples:
            Delete packet capture:
              value: nw1
        - description: The name of the packet capture session.
          in: path
          name: packetCaptureName
          required: true
          schema:
            type: string
          examples:
            Delete packet capture:
              value: pc1
        - $ref: "#/components/parameters/ApiVersionParameter"
        - $ref: "#/components/parameters/SubscriptionIdParameter"
      responses:
        "202":
          description: Accepted and the operation will complete asynchronously.
        "204":
          description: Delete successful.
      tags:
        - PacketCaptures
      x-ms-long-running-operation: true
    get:
      description: Gets a packet capture session by name.
      operationId: PacketCaptures_Get
      parameters:
        - description: The name of the resource group.
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
          examples:
            Get packet capture:
              value: rg1
        - description: The name of the network watcher.
          in: path
          name: networkWatcherName
          required: true
          schema:
            type: string
          examples:
            Get packet capture:
              value: nw1
        - description: The name of the packet capture session.
          in: path
          name: packetCaptureName
          required: true
          schema:
            type: string
          examples:
            Get packet capture:
              value: pc1
        - $ref: "#/components/parameters/ApiVersionParameter"
        - $ref: "#/components/parameters/SubscriptionIdParameter"
      responses:
        "200":
          description: Request successful. The operation returns a packet capture session.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PacketCaptureResult"
              examples:
                Get packet capture:
                  $ref: "#/components/examples/Get_packet_capture"
            text/json:
              schema:
                $ref: "#/components/schemas/PacketCaptureResult"
              examples:
                Get packet capture:
                  $ref: "#/components/examples/Get_packet_capture"
      tags:
        - PacketCaptures
    put:
      description: Create and start a packet capture on the specified VM.
      operationId: PacketCaptures_Create
      parameters:
        - description: The name of the resource group.
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
          examples:
            Create packet capture:
              value: rg1
        - description: The name of the network watcher.
          in: path
          name: networkWatcherName
          required: true
          schema:
            type: string
          examples:
            Create packet capture:
              value: nw1
        - description: The name of the packet capture session.
          in: path
          name: packetCaptureName
          required: true
          schema:
            type: string
          examples:
            Create packet capture:
              value: pc1
        - $ref: "#/components/parameters/ApiVersionParameter"
        - $ref: "#/components/parameters/SubscriptionIdParameter"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PacketCapture"
          text/json:
            schema:
              $ref: "#/components/schemas/PacketCapture"
        description: Parameters that define the create packet capture operation.
        required: true
      responses:
        "201":
          description: Request successful. The operation returns the resulting packet
            capture session.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PacketCaptureResult"
              examples:
                Create packet capture:
                  $ref: "#/components/examples/Create_packet_capture"
            text/json:
              schema:
                $ref: "#/components/schemas/PacketCaptureResult"
              examples:
                Create packet capture:
                  $ref: "#/components/examples/Create_packet_capture"
      tags:
        - PacketCaptures
      x-ms-long-running-operation: true
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/packetCaptures/{packetCaptureName}/queryStatus":
    post:
      description: Query the status of a running packet capture session.
      operationId: PacketCaptures_GetStatus
      parameters:
        - description: The name of the resource group.
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
          examples:
            Query packet capture status:
              value: rg1
        - description: The name of the Network Watcher resource.
          in: path
          name: networkWatcherName
          required: true
          schema:
            type: string
          examples:
            Query packet capture status:
              value: nw1
        - description: The name given to the packet capture session.
          in: path
          name: packetCaptureName
          required: true
          schema:
            type: string
          examples:
            Query packet capture status:
              value: pc1
        - $ref: "#/components/parameters/ApiVersionParameter"
        - $ref: "#/components/parameters/SubscriptionIdParameter"
      responses:
        "200":
          description: Successful query of packet capture status.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PacketCaptureQueryStatusResult"
              examples:
                Query packet capture status:
                  $ref: "#/components/examples/Query_packet_capture_status"
            text/json:
              schema:
                $ref: "#/components/schemas/PacketCaptureQueryStatusResult"
              examples:
                Query packet capture status:
                  $ref: "#/components/examples/Query_packet_capture_status"
        "202":
          description: Accepted query status of packet capture.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PacketCaptureQueryStatusResult"
              examples:
                Query packet capture status:
                  $ref: "#/components/examples/Query_packet_capture_status"
            text/json:
              schema:
                $ref: "#/components/schemas/PacketCaptureQueryStatusResult"
              examples:
                Query packet capture status:
                  $ref: "#/components/examples/Query_packet_capture_status"
      tags:
        - PacketCaptures
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/packetCaptures/{packetCaptureName}/stop":
    post:
      description: Stops a specified packet capture session.
      operationId: PacketCaptures_Stop
      parameters:
        - description: The name of the resource group.
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
          examples:
            Stop packet capture:
              value: rg1
        - description: The name of the network watcher.
          in: path
          name: networkWatcherName
          required: true
          schema:
            type: string
          examples:
            Stop packet capture:
              value: nw1
        - description: The name of the packet capture session.
          in: path
          name: packetCaptureName
          required: true
          schema:
            type: string
          examples:
            Stop packet capture:
              value: pc1
        - $ref: "#/components/parameters/ApiVersionParameter"
        - $ref: "#/components/parameters/SubscriptionIdParameter"
      responses:
        "200":
          description: Request successful. The operation stops the packet capture session.
        "202":
          description: Accepted and the operation will complete asynchronously.
      tags:
        - PacketCaptures
      x-ms-long-running-operation: true
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/queryFlowLogStatus":
    post:
      description: Queries status of flow log on a specified resource.
      operationId: NetworkWatchers_GetFlowLogStatus
      parameters:
        - description: The name of the network watcher resource group.
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
          examples:
            Get flow log status:
              value: rg1
        - description: The name of the network watcher resource.
          in: path
          name: networkWatcherName
          required: true
          schema:
            type: string
          examples:
            Get flow log status:
              value: nw1
        - $ref: "#/components/parameters/ApiVersionParameter"
        - $ref: "#/components/parameters/SubscriptionIdParameter"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/FlowLogStatusParameters"
          text/json:
            schema:
              $ref: "#/components/schemas/FlowLogStatusParameters"
        description: Parameters that define a resource to query flow log status.
        required: true
      responses:
        "200":
          description: Successful request for query flow log status.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FlowLogInformation"
              examples:
                Get flow log status:
                  $ref: "#/components/examples/Get_flow_log_status"
            text/json:
              schema:
                $ref: "#/components/schemas/FlowLogInformation"
              examples:
                Get flow log status:
                  $ref: "#/components/examples/Get_flow_log_status"
        "202":
          description: Accepted and the operation will complete asynchronously.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FlowLogInformation"
              examples:
                Get flow log status:
                  $ref: "#/components/examples/Get_flow_log_status"
            text/json:
              schema:
                $ref: "#/components/schemas/FlowLogInformation"
              examples:
                Get flow log status:
                  $ref: "#/components/examples/Get_flow_log_status"
      tags:
        - NetworkWatchers
      x-ms-long-running-operation: true
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/queryTroubleshootResult":
    post:
      description: Get the last completed troubleshooting result on a specified resource
      operationId: NetworkWatchers_GetTroubleshootingResult
      parameters:
        - description: The name of the resource group.
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
          examples:
            Get troubleshoot result:
              value: rg1
        - description: The name of the network watcher resource.
          in: path
          name: networkWatcherName
          required: true
          schema:
            type: string
          examples:
            Get troubleshoot result:
              value: nw1
        - $ref: "#/components/parameters/ApiVersionParameter"
        - $ref: "#/components/parameters/SubscriptionIdParameter"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/QueryTroubleshootingParameters"
          text/json:
            schema:
              $ref: "#/components/schemas/QueryTroubleshootingParameters"
        description: Parameters that define the resource to query the troubleshooting
          result.
        required: true
      responses:
        "200":
          description: Successful get troubleshooting result request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TroubleshootingResult"
              examples:
                Get troubleshoot result:
                  $ref: "#/components/examples/Get_troubleshoot_result"
            text/json:
              schema:
                $ref: "#/components/schemas/TroubleshootingResult"
              examples:
                Get troubleshoot result:
                  $ref: "#/components/examples/Get_troubleshoot_result"
        "202":
          description: Accepted get troubleshooting result request.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TroubleshootingResult"
              examples:
                Get troubleshoot result:
                  $ref: "#/components/examples/Get_troubleshoot_result"
            text/json:
              schema:
                $ref: "#/components/schemas/TroubleshootingResult"
              examples:
                Get troubleshoot result:
                  $ref: "#/components/examples/Get_troubleshoot_result"
      tags:
        - NetworkWatchers
      x-ms-long-running-operation: true
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/securityGroupView":
    post:
      description: Gets the configured and effective security group rules on the specified
        VM.
      operationId: NetworkWatchers_GetVMSecurityRules
      parameters:
        - description: The name of the resource group.
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
          examples:
            Get security group view:
              value: rg1
        - description: The name of the network watcher.
          in: path
          name: networkWatcherName
          required: true
          schema:
            type: string
          examples:
            Get security group view:
              value: nw1
        - $ref: "#/components/parameters/ApiVersionParameter"
        - $ref: "#/components/parameters/SubscriptionIdParameter"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SecurityGroupViewParameters"
          text/json:
            schema:
              $ref: "#/components/schemas/SecurityGroupViewParameters"
        description: Parameters that define the VM to check security groups for.
        required: true
      responses:
        "200":
          description: Request successful. The operation returns security group rules on
            the VM.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SecurityGroupViewResult"
              examples:
                Get security group view:
                  $ref: "#/components/examples/Get_security_group_view"
            text/json:
              schema:
                $ref: "#/components/schemas/SecurityGroupViewResult"
              examples:
                Get security group view:
                  $ref: "#/components/examples/Get_security_group_view"
        "202":
          description: Accepted and the operation will complete asynchronously.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SecurityGroupViewResult"
              examples:
                Get security group view:
                  $ref: "#/components/examples/Get_security_group_view"
            text/json:
              schema:
                $ref: "#/components/schemas/SecurityGroupViewResult"
              examples:
                Get security group view:
                  $ref: "#/components/examples/Get_security_group_view"
      tags:
        - NetworkWatchers
      x-ms-long-running-operation: true
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/topology":
    post:
      description: Gets the current network topology by resource group.
      operationId: NetworkWatchers_GetTopology
      parameters:
        - description: The name of the resource group.
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
          examples:
            Get Topology:
              value: rg1
        - description: The name of the network watcher.
          in: path
          name: networkWatcherName
          required: true
          schema:
            type: string
          examples:
            Get Topology:
              value: nw1
        - $ref: "#/components/parameters/ApiVersionParameter"
        - $ref: "#/components/parameters/SubscriptionIdParameter"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TopologyParameters"
          text/json:
            schema:
              $ref: "#/components/schemas/TopologyParameters"
        description: Parameters that define the representation of topology.
        required: true
      responses:
        "200":
          description: Request successful. The operation returns the topology of resource
            group.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Topology"
              examples:
                Get Topology:
                  $ref: "#/components/examples/Get_Topology"
            text/json:
              schema:
                $ref: "#/components/schemas/Topology"
              examples:
                Get Topology:
                  $ref: "#/components/examples/Get_Topology"
      tags:
        - NetworkWatchers
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/troubleshoot":
    post:
      description: Initiate troubleshooting on a specified resource
      operationId: NetworkWatchers_GetTroubleshooting
      parameters:
        - description: The name of the resource group.
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
          examples:
            Get troubleshooting:
              value: rg1
        - description: The name of the network watcher resource.
          in: path
          name: networkWatcherName
          required: true
          schema:
            type: string
          examples:
            Get troubleshooting:
              value: nw1
        - $ref: "#/components/parameters/ApiVersionParameter"
        - $ref: "#/components/parameters/SubscriptionIdParameter"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TroubleshootingParameters"
          text/json:
            schema:
              $ref: "#/components/schemas/TroubleshootingParameters"
        description: Parameters that define the resource to troubleshoot.
        required: true
      responses:
        "200":
          description: Successful troubleshooting request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TroubleshootingResult"
              examples:
                Get troubleshooting:
                  $ref: "#/components/examples/Get_troubleshooting"
            text/json:
              schema:
                $ref: "#/components/schemas/TroubleshootingResult"
              examples:
                Get troubleshooting:
                  $ref: "#/components/examples/Get_troubleshooting"
        "202":
          description: Accepted get troubleshooting request.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TroubleshootingResult"
              examples:
                Get troubleshooting:
                  $ref: "#/components/examples/Get_troubleshooting"
            text/json:
              schema:
                $ref: "#/components/schemas/TroubleshootingResult"
              examples:
                Get troubleshooting:
                  $ref: "#/components/examples/Get_troubleshooting"
      tags:
        - NetworkWatchers
      x-ms-long-running-operation: true
servers:
  - url: https://management.azure.com
components:
  examples:
    List_all_network_watchers:
      value:
        value:
          - etag: W/"00000000-0000-0000-0000-000000000000"
            id: /subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/networkWatchers/nw1
            location: eastus
            name: nw1
            properties:
              provisioningState: Succeeded
            tags: {}
            type: Microsoft.Network/networkWatchers
          - etag: W/"00000000-0000-0000-0000-000000000000"
            id: /subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/networkWatchers/nw2
            location: westus
            name: nw2
            properties:
              provisioningState: Succeeded
            tags: {}
            type: Microsoft.Network/networkWatchers
    List_network_watchers:
      value:
        value:
          - etag: W/"00000000-0000-0000-0000-000000000000"
            id: /subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/networkWatchers/nw1
            location: eastus
            name: nw1
            properties:
              provisioningState: Succeeded
            tags: {}
            type: Microsoft.Network/networkWatchers
          - etag: W/"00000000-0000-0000-0000-000000000000"
            id: /subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/networkWatchers/nw2
            location: eastus
            name: nw2
            properties:
              provisioningState: Succeeded
            tags: {}
            type: Microsoft.Network/networkWatchers
    Get_network_watcher:
      value:
        etag: W/"00000000-0000-0000-0000-000000000000"
        id: /subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/networkWatchers/nw1
        location: eastus
        name: nw1
        properties:
          provisioningState: Succeeded
        tags: {}
        type: Microsoft.Network/networkWatchers
    Update_network_watcher_tags:
      value:
        etag: W/"00000000-0000-0000-0000-000000000000"
        id: /subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/networkWatchers/nw1
        location: eastus
        name: nw1
        properties:
          provisioningState: Succeeded
        tags:
          tag1: value1
          tag2: value2
        type: Microsoft.Network/networkWatchers
    Create_network_watcher:
      value:
        etag: W/"00000000-0000-0000-0000-000000000000"
        id: /subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/networkWatchers/nw1
        location: eastus
        name: nw1
        properties:
          provisioningState: Succeeded
        tags: {}
        type: Microsoft.Network/networkWatchers
    Get_Azure_Reachability_Report:
      value:
        aggregationLevel: State
        providerLocation:
          country: United States
          state: washington
        reachabilityReport:
          - azureLocation: West US
            latencies:
              - score: 94
                timeStamp: 2017-09-07T00:00:00Z
              - score: 94
                timeStamp: 2017-09-08T00:00:00Z
              - score: 94
                timeStamp: 2017-09-09T00:00:00Z
            provider: Frontier Communications of America, Inc. - ASN 5650
    Configure_flow_log:
      value:
        properties:
          enabled: true
          storageId: /subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Storage/storageAccounts/st1
        targetResourceId: /subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/networkSecurityGroups/nsg1
    List_connection_monitors:
      value:
        value:
          - etag: W/"00000000-0000-0000-0000-000000000000"
            id: /subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/networkWatchers/nw1/connectionMonitors/cm1
            location: centraluseuap
            name: cm1
            properties:
              autoStart: true
              destination:
                address: bing.com
                port: 80
              monitoringIntervalInSeconds: 60
              monitoringStatus: Running
              provisioningState: Succeeded
              source:
                port: 0
                resourceId: /subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Compute/virtualMachines/vm1
              startTime: 2018-01-08T03:42:33.3387305Z
            type: Microsoft.Network/networkWatchers/connectionMonitors
          - etag: W/"00000000-0000-0000-0000-000000000000"
            id: /subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/networkWatchers/nw1/connectionMonitors/cm2
            location: centraluseuap
            name: cm2
            properties:
              autoStart: true
              destination:
                address: google.com
                port: 80
              monitoringIntervalInSeconds: 30
              monitoringStatus: Running
              provisioningState: Succeeded
              source:
                port: 0
                resourceId: /subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Compute/virtualMachines/vm2
              startTime: 2018-01-08T05:42:33.3387305Z
            type: Microsoft.Network/networkWatchers/connectionMonitors
    Get_connection_monitor:
      value:
        etag: W/"00000000-0000-0000-0000-000000000000"
        id: /subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/networkWatchers/nw1/connectionMonitors/cm1
        location: centraluseuap
        name: cm1
        properties:
          autoStart: true
          destination:
            address: bing.com
            port: 80
          monitoringIntervalInSeconds: 60
          monitoringStatus: Running
          provisioningState: Succeeded
          source:
            port: 0
            resourceId: /subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Compute/virtualMachines/vm1
          startTime: 2018-01-08T03:42:33.3387305Z
        type: Microsoft.Network/networkWatchers/connectionMonitors
    Create_connection_monitor:
      value:
        etag: W/"e7497f26-5f09-4559-900b-fe98f3dedb6f"
        id: /subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/networkWatchers/nw1/connectionMonitors/cm1
        location: centraluseuap
        name: cm1
        properties:
          autoStart: true
          destination:
            address: bing.com
            port: 80
          monitoringIntervalInSeconds: 60
          monitoringStatus: NotStarted
          provisioningState: Updating
          source:
            port: 0
            resourceId: /subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Compute/virtualMachines/vm1
        type: Microsoft.Network/networkWatchers/connectionMonitors
    Query_connection_monitor:
      value:
        sourceStatus: Active
        states:
          - connectionState: Reachable
            endTime: 2018-01-08T05:12:41.5265438Z
            evaluationState: Completed
            hops:
              - address: 10.1.1.4
                id: 7dbbe7aa-60ba-4650-831e-63d775d38e9e
                issues: []
                nextHopIds:
                  - 75c8d819-b208-4584-a311-1aa45ce753f9
                resourceId: subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/networkInterfaces/nic0/ipConfigurations/ipconfig1
                type: Source
              - address: 192.168.100.4
                id: 75c8d819-b208-4584-a311-1aa45ce753f9
                issues: []
                nextHopIds: []
                resourceId: subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/networkInterfaces/nic1/ipConfigurations/ipconfig1
                type: VirtualNetwork
            startTime: 2018-01-08T03:42:33.3387305Z
    Check_connectivity:
      value:
        avgLatencyInMs: 1
        connectionStatus: Connected
        hops:
          - address: 10.1.1.4
            id: 7dbbe7aa-60ba-4650-831e-63d775d38e9e
            issues: []
            nextHopIds:
              - 75c8d819-b208-4584-a311-1aa45ce753f9
            resourceId: subscriptions/subid/resourceGroups/rg2/providers/Microsoft.Network/networkInterfaces/nic0/ipConfigurations/ipconfig1
            type: Source
          - address: 192.168.100.4
            id: 75c8d819-b208-4584-a311-1aa45ce753f9
            issues: []
            nextHopIds: []
            resourceId: subscriptions/subid/resourceGroups/rg2/providers/Microsoft.Network/networkInterfaces/nic1/ipConfigurations/ipconfig1
            type: VirtualNetwork
        maxLatencyInMs: 4
        minLatencyInMs: 1
        probesFailed: 0
        probesSent: 100
    Ip_flow_verify:
      value:
        access: Allow
        ruleName: Rule1
    Get_next_hop:
      value:
        nextHopIpAddress: 10.0.0.1
        nextHopType: VnetLocal
        routeTableId: /subscriptions/subid/resourceGroups/rg2/providers/Microsoft.Network/routeTables/rt1
    List_packet_captures:
      value:
        value:
          - etag: W/"00000000-0000-0000-0000-000000000000"
            id: /subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/networkWatchers/nw1/packetCaptures/pc1
            name: pc1
            properties:
              bytesToCapturePerPacket: 10000
              filters:
                - localIPAddress: 10.0.0.4
                  localPort: "80"
                  protocol: TCP
              provisioningState: Updating
              storageLocation:
                filePath: D:\capture\pc1.cap
                storageId: /subscriptions/subid/resourceGroups/rg2/providers/Microsoft.Storage/storageAccounts/pcstore
                storagePath: https://mytestaccountname.blob.core.windows.net/capture/pc1.cap
              target: /subscriptions/subid/resourceGroups/rg2/providers/Microsoft.Compute/virtualMachines/vm1
              timeLimitInSeconds: 100
              totalBytesPerSession: 100000
          - etag: W/"00000000-0000-0000-0000-000000000000"
            id: /subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/networkWatchers/nw1/packetCaptures/pc2
            name: pc2
            properties:
              bytesToCapturePerPacket: 10000
              filters: []
              provisioningState: Succeeded
              storageLocation:
                filePath: D:\capture\pc2.cap
                storageId: /subscriptions/subid/resourceGroups/rg2/providers/Microsoft.Storage/storageAccounts/pcstore
                storagePath: https://mytestaccountname.blob.core.windows.net/capture/pc2.cap
              target: /subscriptions/subid/resourceGroups/rg2/providers/Microsoft.Compute/virtualMachines/vm1
              timeLimitInSeconds: 100
              totalBytesPerSession: 100000
    Get_packet_capture:
      value:
        etag: W/"00000000-0000-0000-0000-000000000000"
        id: /subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/networkWatchers/nw1/packetCaptures/pc1
        name: pc1
        properties:
          bytesToCapturePerPacket: 10000
          filters:
            - localIPAddress: 10.0.0.4
              localPort: "80"
              protocol: TCP
          provisioningState: Updating
          storageLocation:
            filePath: D:\capture\pc1.cap
            storageId: /subscriptions/subid/resourceGroups/rg2/providers/Microsoft.Storage/storageAccounts/pcstore
            storagePath: https://mytestaccountname.blob.core.windows.net/capture/pc1.cap
          target: /subscriptions/subid/resourceGroups/rg2/providers/Microsoft.Compute/virtualMachines/vm1
          timeLimitInSeconds: 100
          totalBytesPerSession: 100000
    Create_packet_capture:
      value:
        id: /subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/networkWatchers/nw1/packetCaptures/pc1
        name: pc1
        properties:
          bytesToCapturePerPacket: 10000
          filters:
            - localIPAddress: 10.0.0.4
              localPort: "80"
              protocol: TCP
          provisioningState: Updating
          storageLocation:
            filePath: D:\capture\pc1.cap
            storageId: /subscriptions/subid/resourceGroups/rg2/providers/Microsoft.Storage/storageAccounts/pcstore
            storagePath: https://mytestaccountname.blob.core.windows.net/capture/pc1.cap
          target: /subscriptions/subid/resourceGroups/rg2/providers/Microsoft.Compute/virtualMachines/vm1
          timeLimitInSeconds: 100
          totalBytesPerSession: 100000
    Query_packet_capture_status:
      value:
        captureStartTime: 2016-09-07T12:35:24Z
        id: /subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/networkWatchers/nw1/packetCaptures/pc1
        name: pc1
        packetCaptureError: []
        packetCaptureStatus: Stopped
        stopReason: TimeExceeded
    Get_flow_log_status:
      value:
        properties:
          enabled: true
          storageId: /subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Storage/storageAccounts/st1
        targetResourceId: /subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/networkSecurityGroups/nsg1
    Get_troubleshoot_result:
      value:
        code: UnHealthy
        endTime: 2017-01-12T00:20:09.914Z
        results:
          - detail: During this time S2S VPN tunnels to on premises sites or other
              Azure virtual networks will be disconnected
            id: "000000"
            reasonType: VipUnResponsive
            recommendedActions:
              - actionText: Verify if there is a network security group (NSG) applied to
                  the GatewaySubnet
                actionUri: https://docs.microsoft.com/en-us/azure/virtual-network/virtual-networks-create-nsg-arm-pportal
                actionUriText: Verify
              - actionText: If your VPN gateway isn't up and running by the expected
                  resolution time, contact support
                actionUri: http://azure.microsoft.com/support
                actionUriText: contact support
            summary: We are sorry, your VPN gateway is unreachable from the Internet
        startTime: 2017-01-12T00:19:47.0442834Z
    Get_security_group_view:
      value:
        networkInterfaces:
          - id: /subscriptions/subid/resourceGroups/rg2/providers/Microsoft.Network/networkInterfaces/nic1
            securityRuleAssociations:
              subnetAssociation:
                id: /subscriptions/subid/resourceGroups/rg2/providers/Microsoft.Network/virtualNetworks/vnet1/subnets/subnet1
                securityRules:
                  - etag: W/"00000000-0000-0000-0000-000000000000"
                    id: /subscriptions/subid/resourceGroups/rg2/providers/Microsoft.Network/networkSecurityGroups/AppNSG/securityRules/fe_rule
                    name: fe_rule
                    properties:
                      access: Allow
                      description: Allow Frontend
                      destinationAddressPrefix: "*"
                      destinationPortRange: "*"
                      direction: Inbound
                      priority: 100
                      protocol: Tcp
                      provisioningState: Succeeded
                      sourceAddressPrefix: 10.1.0.0/24
                      sourcePortRange: "*"
    Get_Topology:
      value:
        createdDateTime: 2017-08-02T19:31:55.9461781Z
        id: ce592f46-8164-4bf2-ad36-b8e4acf6fb68
        lastModified: 2017-05-27T00:00:13.2005337Z
        resources:
          - associations:
              - associationType: Contains
                name: appNic0
                resourceId: /subscriptions/subid/resourceGroups/rg2/providers/Microsoft.Network/networkInterfaces/appNic0
              - associationType: Contains
                name: appNic10
                resourceId: /subscriptions/subid/resourceGroups/rg2/providers/Microsoft.Network/networkInterfaces/appNic10
            id: /subscriptions/subid/resourceGroups/rg2/providers/Microsoft.Compute/virtualMachines/MultiTierApp0
            location: westus
            name: MultiTierApp0
    Get_troubleshooting:
      value:
        code: UnHealthy
        endTime: 2017-01-12T00:20:09.914Z
        results:
          - detail: During this time S2S VPN tunnels to on premises sites or other
              Azure virtual networks will be disconnected
            id: "000000"
            reasonType: VipUnResponsive
            recommendedActions:
              - actionText: Verify if there is a network security group (NSG) applied to
                  the GatewaySubnet
                actionUri: https://docs.microsoft.com/en-us/azure/virtual-network/virtual-networks-create-nsg-arm-pportal
                actionUriText: Verify
              - actionText: If your VPN gateway isn't up and running by the expected
                  resolution time, contact support
                actionUri: http://azure.microsoft.com/support
                actionUriText: contact support
            summary: We are sorry, your VPN gateway is unreachable from the Internet
        startTime: 2017-01-12T00:19:47.0442834Z
  parameters:
    ApiVersionParameter:
      description: Client API version.
      in: query
      name: api-version
      required: true
      schema:
        type: string
      examples:
        List all network watchers:
          value: 2018-02-01
        List network watchers:
          value: 2018-02-01
        Delete network watcher:
          value: 2018-02-01
        Get network watcher:
          value: 2018-02-01
        Update network watcher tags:
          value: 2018-02-01
        Create network watcher:
          value: 2018-02-01
        Get Azure Reachability Report:
          value: 2018-02-01
        Configure flow log:
          value: 2018-02-01
        List connection monitors:
          value: 2018-02-01
        Delete connection monitor:
          value: 2018-02-01
        Get connection monitor:
          value: 2018-02-01
        Create connection monitor:
          value: 2018-02-01
        Query connection monitor:
          value: 2018-02-01
        Start connection monitor:
          value: 2018-02-01
        Stop connection monitor:
          value: 2018-02-01
        Check connectivity:
          value: 2018-02-01
        Ip flow verify:
          value: 2018-02-01
        Get next hop:
          value: 2018-02-01
        List packet captures:
          value: 2018-02-01
        Delete packet capture:
          value: 2018-02-01
        Get packet capture:
          value: 2018-02-01
        Create packet capture:
          value: 2018-02-01
        Query packet capture status:
          value: 2018-02-01
        Stop packet capture:
          value: 2018-02-01
        Get flow log status:
          value: 2018-02-01
        Get troubleshoot result:
          value: 2018-02-01
        Get security group view:
          value: 2018-02-01
        Get Topology:
          value: 2018-02-01
        Get troubleshooting:
          value: 2018-02-01
    SubscriptionIdParameter:
      description: The subscription credentials which uniquely identify the Microsoft Azure
        subscription. The subscription ID forms part of the URI for every
        service call.
      in: path
      name: subscriptionId
      required: true
      schema:
        type: string
      examples:
        List all network watchers:
          value: subid
        List network watchers:
          value: subid
        Delete network watcher:
          value: subid
        Get network watcher:
          value: subid
        Update network watcher tags:
          value: subid
        Create network watcher:
          value: subid
        Get Azure Reachability Report:
          value: subid
        Configure flow log:
          value: subid
        List connection monitors:
          value: subid
        Delete connection monitor:
          value: subid
        Get connection monitor:
          value: subid
        Create connection monitor:
          value: subid
        Query connection monitor:
          value: subid
        Start connection monitor:
          value: subid
        Stop connection monitor:
          value: subid
        Check connectivity:
          value: subid
        Ip flow verify:
          value: subid
        Get next hop:
          value: subid
        List packet captures:
          value: subid
        Delete packet capture:
          value: subid
        Get packet capture:
          value: subid
        Create packet capture:
          value: subid
        Query packet capture status:
          value: subid
        Stop packet capture:
          value: subid
        Get flow log status:
          value: subid
        Get troubleshoot result:
          value: subid
        Get security group view:
          value: subid
        Get Topology:
          value: subid
        Get troubleshooting:
          value: subid
  securitySchemes:
    azure_auth:
      description: Azure Active Directory OAuth2 Flow
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
          scopes:
            user_impersonation: impersonate your user account
  schemas:
    AvailableProvidersList:
      description: List of available countries with details.
      properties:
        countries:
          description: List of available countries.
          items:
            $ref: "#/components/schemas/AvailableProvidersListCountry"
          type: array
      required:
        - countries
    AvailableProvidersListCity:
      description: City or town details.
      properties:
        cityName:
          description: The city or town name.
          type: string
        providers:
          description: A list of Internet service providers.
          items:
            type: string
          type: array
    AvailableProvidersListCountry:
      description: Country details.
      properties:
        countryName:
          description: The country name.
          type: string
        providers:
          description: A list of Internet service providers.
          items:
            type: string
          type: array
        states:
          description: List of available states in the country.
          items:
            $ref: "#/components/schemas/AvailableProvidersListState"
          type: array
    AvailableProvidersListParameters:
      description: Constraints that determine the list of available Internet service
        providers.
      properties:
        azureLocations:
          description: A list of Azure regions.
          items:
            type: string
          type: array
        city:
          description: The city or town for available providers list.
          type: string
        country:
          description: The country for available providers list.
          type: string
        state:
          description: The state for available providers list.
          type: string
    AvailableProvidersListState:
      description: State details.
      properties:
        cities:
          description: List of available cities or towns in the state.
          items:
            $ref: "#/components/schemas/AvailableProvidersListCity"
          type: array
        providers:
          description: A list of Internet service providers.
          items:
            type: string
          type: array
        stateName:
          description: The state name.
          type: string
    AzureReachabilityReport:
      description: Azure reachability report details.
      properties:
        aggregationLevel:
          description: The aggregation level of Azure reachability report. Can be Country,
            State or City.
          type: string
        providerLocation:
          $ref: "#/components/schemas/AzureReachabilityReportLocation"
        reachabilityReport:
          description: List of Azure reachability report items.
          items:
            $ref: "#/components/schemas/AzureReachabilityReportItem"
          type: array
      required:
        - aggregationLevel
        - providerLocation
        - reachabilityReport
    AzureReachabilityReportItem:
      description: Azure reachability report details for a given provider location.
      properties:
        azureLocation:
          description: The Azure region.
          type: string
        latencies:
          description: List of latency details for each of the time series.
          items:
            $ref: "#/components/schemas/AzureReachabilityReportLatencyInfo"
          type: array
        provider:
          description: The Internet service provider.
          type: string
    AzureReachabilityReportLatencyInfo:
      description: Details on latency for a time series.
      properties:
        score:
          description: The relative latency score between 1 and 100, higher values
            indicating a faster connection.
          maximum: 100
          minimum: 1
          type: integer
        timeStamp:
          description: The time stamp.
          format: date-time
          type: string
    AzureReachabilityReportLocation:
      description: Parameters that define a geographic location.
      properties:
        city:
          description: The name of the city or town.
          type: string
        country:
          description: The name of the country.
          type: string
        state:
          description: The name of the state.
          type: string
      required:
        - country
    AzureReachabilityReportParameters:
      description: Geographic and time constraints for Azure reachability report.
      properties:
        azureLocations:
          description: Optional Azure regions to scope the query to.
          items:
            type: string
          type: array
        endTime:
          description: The end time for the Azure reachability report.
          format: date-time
          type: string
        providerLocation:
          $ref: "#/components/schemas/AzureReachabilityReportLocation"
        providers:
          description: List of Internet service providers.
          items:
            type: string
          type: array
        startTime:
          description: The start time for the Azure reachability report.
          format: date-time
          type: string
      required:
        - providerLocation
        - startTime
        - endTime
    ConnectionMonitor:
      description: Parameters that define the operation to create a connection monitor.
      properties:
        location:
          description: Connection monitor location.
          type: string
        properties:
          $ref: "#/components/schemas/ConnectionMonitorParameters"
        tags:
          additionalProperties:
            type: string
          description: Connection monitor tags.
          type: object
      required:
        - properties
    ConnectionMonitorDestination:
      description: Describes the destination of connection monitor.
      properties:
        address:
          description: Address of the connection monitor destination (IP or domain name).
          type: string
        port:
          description: The destination port used by connection monitor.
          type: integer
        resourceId:
          description: The ID of the resource used as the destination by connection monitor.
          type: string
    ConnectionMonitorListResult:
      description: List of connection monitors.
      properties:
        value:
          description: Information about connection monitors.
          items:
            $ref: "#/components/schemas/ConnectionMonitorResult"
          type: array
    ConnectionMonitorParameters:
      description: Parameters that define the operation to create a connection monitor.
      properties:
        autoStart:
          default: true
          description: Determines if the connection monitor will start automatically once
            created.
          type: boolean
        destination:
          $ref: "#/components/schemas/ConnectionMonitorDestination"
        monitoringIntervalInSeconds:
          default: 60
          description: Monitoring interval in seconds.
          type: integer
        source:
          $ref: "#/components/schemas/ConnectionMonitorSource"
      required:
        - source
        - destination
    ConnectionMonitorQueryResult:
      description: List of connection states snapshots.
      properties:
        sourceStatus:
          description: Status of connection monitor source.
          enum:
            - Uknown
            - Active
            - Inactive
          type: string
          x-ms-enum:
            modelAsString: true
            name: ConnectionMonitorSourceStatus
        states:
          description: Information about connection states.
          items:
            $ref: "#/components/schemas/ConnectionStateSnapshot"
          type: array
    ConnectionMonitorResult:
      description: Information about the connection monitor.
      properties:
        etag:
          default: A unique read-only string that changes whenever the resource is
            updated.
          type: string
        id:
          description: ID of the connection monitor.
          readOnly: true
          type: string
        location:
          description: Connection monitor location.
          type: string
        name:
          description: Name of the connection monitor.
          readOnly: true
          type: string
        properties:
          $ref: "#/components/schemas/ConnectionMonitorResultProperties"
        tags:
          additionalProperties:
            type: string
          description: Connection monitor tags.
          type: object
        type:
          description: Connection monitor type.
          readOnly: true
          type: string
      x-ms-azure-resource: true
    ConnectionMonitorResultProperties:
      allOf:
        - $ref: "#/components/schemas/ConnectionMonitorParameters"
      description: Describes the properties of a connection monitor.
      properties:
        monitoringStatus:
          description: The monitoring status of the connection monitor.
          type: string
        provisioningState:
          description: The provisioning state of the connection monitor.
          enum:
            - Succeeded
            - Updating
            - Deleting
            - Failed
          type: string
          x-ms-enum:
            modelAsString: true
            name: ProvisioningState
        startTime:
          description: The date and time when the connection monitor was started.
          format: date-time
          type: string
    ConnectionMonitorSource:
      description: Describes the source of connection monitor.
      properties:
        port:
          description: The source port used by connection monitor.
          type: integer
        resourceId:
          description: The ID of the resource used as the source by connection monitor.
          type: string
      required:
        - resourceId
    ConnectionStateSnapshot:
      description: Connection state snapshot.
      properties:
        connectionState:
          description: The connection state.
          enum:
            - Reachable
            - Unreachable
            - Unknown
          type: string
          x-ms-enum:
            modelAsString: true
            name: ConnectionState
        endTime:
          description: The end time of the connection snapshot.
          format: date-time
          type: string
        evaluationState:
          description: Connectivity analysis evaluation state.
          enum:
            - NotStarted
            - InProgress
            - Completed
          type: string
          x-ms-enum:
            modelAsString: true
            name: EvaluationState
        hops:
          description: List of hops between the source and the destination.
          items:
            $ref: "#/components/schemas/ConnectivityHop"
          readOnly: true
          type: array
        startTime:
          description: The start time of the connection snapshot.
          format: date-time
          type: string
    ConnectivityDestination:
      description: Parameters that define destination of connection.
      properties:
        address:
          description: The IP address or URI the resource to which a connection attempt
            will be made.
          type: string
        port:
          description: Port on which check connectivity will be performed.
          type: integer
        resourceId:
          description: The ID of the resource to which a connection attempt will be made.
          type: string
    ConnectivityHop:
      description: Information about a hop between the source and the destination.
      properties:
        address:
          description: The IP address of the hop.
          readOnly: true
          type: string
        id:
          description: The ID of the hop.
          readOnly: true
          type: string
        issues:
          description: List of issues.
          items:
            $ref: "#/components/schemas/ConnectivityIssue"
          readOnly: true
          type: array
        nextHopIds:
          description: List of next hop identifiers.
          items:
            type: string
          readOnly: true
          type: array
        resourceId:
          description: The ID of the resource corresponding to this hop.
          readOnly: true
          type: string
        type:
          description: The type of the hop.
          readOnly: true
          type: string
    ConnectivityInformation:
      description: Information on the connectivity status.
      properties:
        avgLatencyInMs:
          description: Average latency in milliseconds.
          readOnly: true
          type: integer
        connectionStatus:
          description: The connection status.
          enum:
            - Unknown
            - Connected
            - Disconnected
            - Degraded
          readOnly: true
          type: string
          x-ms-enum:
            modelAsString: true
            name: ConnectionStatus
        hops:
          description: List of hops between the source and the destination.
          items:
            $ref: "#/components/schemas/ConnectivityHop"
          readOnly: true
          type: array
        maxLatencyInMs:
          description: Maximum latency in milliseconds.
          readOnly: true
          type: integer
        minLatencyInMs:
          description: Minimum latency in milliseconds.
          readOnly: true
          type: integer
        probesFailed:
          description: Number of failed probes.
          readOnly: true
          type: integer
        probesSent:
          description: Total number of probes sent.
          readOnly: true
          type: integer
    ConnectivityIssue:
      description: Information about an issue encountered in the process of checking for
        connectivity.
      properties:
        context:
          description: Provides additional context on the issue.
          items:
            $ref: "#/components/schemas/IssueContext"
          readOnly: true
          type: array
        origin:
          description: The origin of the issue.
          enum:
            - Local
            - Inbound
            - Outbound
          readOnly: true
          type: string
          x-ms-enum:
            modelAsString: true
            name: Origin
        severity:
          description: The severity of the issue.
          enum:
            - Error
            - Warning
          readOnly: true
          type: string
          x-ms-enum:
            modelAsString: true
            name: Severity
        type:
          description: The type of issue.
          enum:
            - Unknown
            - AgentStopped
            - GuestFirewall
            - DnsResolution
            - SocketBind
            - NetworkSecurityRule
            - UserDefinedRoute
            - PortThrottled
            - Platform
          readOnly: true
          type: string
          x-ms-enum:
            modelAsString: true
            name: IssueType
    ConnectivityParameters:
      description: Parameters that determine how the connectivity check will be performed.
      properties:
        destination:
          $ref: "#/components/schemas/ConnectivityDestination"
        protocol:
          description: Network protocol.
          enum:
            - Tcp
            - Http
            - Https
            - Icmp
          type: string
          x-ms-enum:
            modelAsString: true
            name: Protocol
        protocolConfiguration:
          $ref: "#/components/schemas/ProtocolConfiguration"
        source:
          $ref: "#/components/schemas/ConnectivitySource"
      required:
        - source
        - destination
    ConnectivitySource:
      description: Parameters that define the source of the connection.
      properties:
        port:
          description: The source port from which a connectivity check will be performed.
          type: integer
        resourceId:
          description: The ID of the resource from which a connectivity check will be
            initiated.
          type: string
      required:
        - resourceId
    FlowLogInformation:
      description: Information on the configuration of flow log.
      properties:
        properties:
          $ref: "#/components/schemas/FlowLogProperties"
        targetResourceId:
          description: The ID of the resource to configure for flow logging.
          type: string
      required:
        - targetResourceId
        - properties
    FlowLogProperties:
      description: Parameters that define the configuration of flow log.
      properties:
        enabled:
          description: Flag to enable/disable flow logging.
          type: boolean
        retentionPolicy:
          $ref: "#/components/schemas/RetentionPolicyParameters"
        storageId:
          description: ID of the storage account which is used to store the flow log.
          type: string
      required:
        - storageId
        - enabled
    FlowLogStatusParameters:
      description: Parameters that define a resource to query flow log status.
      properties:
        targetResourceId:
          description: The target resource where getting the flow logging status.
          type: string
      required:
        - targetResourceId
    HTTPConfiguration:
      description: HTTP configuration of the connectivity check.
      properties:
        headers:
          description: List of HTTP headers.
          items:
            $ref: "#/components/schemas/HTTPHeader"
          type: array
        method:
          description: HTTP method.
          enum:
            - Get
          type: string
          x-ms-enum:
            modelAsString: true
            name: HTTPMethod
        validStatusCodes:
          description: Valid status codes.
          items:
            type: integer
          type: array
    HTTPHeader:
      description: Describes the HTTP header.
      properties:
        name:
          description: The name in HTTP header.
          type: string
        value:
          description: The value in HTTP header.
          type: string
    IssueContext:
      additionalProperties:
        type: string
      description: A key-value pair that provides additional context on the issue.
      type: object
    NetworkInterfaceAssociation:
      description: Network interface and its custom security rules.
      properties:
        id:
          description: Network interface ID.
          readOnly: true
          type: string
        securityRules:
          description: Collection of custom security rules.
          items:
            allOf:
              - description: Reference to another subresource.
                properties:
                  id:
                    description: Resource ID.
                    type: string
                x-ms-azure-resource: true
            description: Network security rule.
            properties:
              etag:
                description: A unique read-only string that changes whenever the resource
                  is updated.
                type: string
              name:
                description: The name of the resource that is unique within a resource
                  group. This name can be used to access the resource.
                type: string
              properties:
                description: Security rule resource.
                properties:
                  access:
                    description: "The network traffic is allowed or denied. Possible values
                      are: 'Allow' and 'Deny'."
                    enum:
                      - Allow
                      - Deny
                    type: string
                    x-ms-enum:
                      modelAsString: true
                      name: SecurityRuleAccess
                  description:
                    description: A description for this rule. Restricted to 140 chars.
                    type: string
                  destinationAddressPrefix:
                    description: The destination address prefix. CIDR or destination IP
                      range. Asterisk '*' can also be used to match all source
                      IPs. Default tags such as 'VirtualNetwork',
                      'AzureLoadBalancer' and 'Internet' can also be used.
                    type: string
                  destinationAddressPrefixes:
                    description: The destination address prefixes. CIDR or destination IP
                      ranges.
                    items:
                      type: string
                    type: array
                  destinationApplicationSecurityGroups:
                    description: The application security group specified as destination.
                    items:
                      allOf:
                        - description: Common resource representation.
                          properties:
                            id:
                              description: Resource ID.
                              type: string
                            location:
                              description: Resource location.
                              type: string
                            name:
                              description: Resource name.
                              readOnly: true
                              type: string
                            tags:
                              additionalProperties:
                                type: string
                              description: Resource tags.
                              type: object
                            type:
                              description: Resource type.
                              readOnly: true
                              type: string
                          x-ms-azure-resource: true
                      description: An application security group in a resource group.
                      properties:
                        etag:
                          description: A unique read-only string that changes whenever the
                            resource is updated.
                          readOnly: true
                          type: string
                        properties:
                          description: Application security group properties.
                          properties:
                            provisioningState:
                              description: "The provisioning state of the application
                                security group resource. Possible values are:
                                'Succeeded', 'Updating', 'Deleting', and
                                'Failed'."
                              readOnly: true
                              type: string
                            resourceGuid:
                              description: The resource GUID property of the application
                                security group resource. It uniquely identifies
                                a resource, even if the user changes its name or
                                migrate the resource across subscriptions or
                                resource groups.
                              readOnly: true
                              type: string
                    type: array
                  destinationPortRange:
                    description: The destination port or range. Integer or range between 0
                      and 65535. Asterisk '*' can also be used to match all
                      ports.
                    type: string
                  destinationPortRanges:
                    description: The destination port ranges.
                    items:
                      description: The destination port.
                      type: string
                    type: array
                  direction:
                    description: "The direction of the rule. The direction specifies if
                      rule will be evaluated on incoming or outgoing traffic.
                      Possible values are: 'Inbound' and 'Outbound'."
                    enum:
                      - Inbound
                      - Outbound
                    type: string
                    x-ms-enum:
                      modelAsString: true
                      name: SecurityRuleDirection
                  priority:
                    description: The priority of the rule. The value can be between 100 and
                      4096. The priority number must be unique for each rule in
                      the collection. The lower the priority number, the higher
                      the priority of the rule.
                    format: int32
                    type: integer
                  protocol:
                    description: Network protocol this rule applies to. Possible values are
                      'Tcp', 'Udp', and '*'.
                    enum:
                      - Tcp
                      - Udp
                      - "*"
                    type: string
                    x-ms-enum:
                      modelAsString: true
                      name: SecurityRuleProtocol
                  provisioningState:
                    description: "The provisioning state of the public IP resource.
                      Possible values are: 'Updating', 'Deleting', and
                      'Failed'."
                    type: string
                  sourceAddressPrefix:
                    description: "The CIDR or source IP range. Asterisk '*' can also be
                      used to match all source IPs. Default tags such as
                      'VirtualNetwork', 'AzureLoadBalancer' and 'Internet' can
                      also be used. If this is an ingress rule, specifies where
                      network traffic originates from. "
                    type: string
                  sourceAddressPrefixes:
                    description: The CIDR or source IP ranges.
                    items:
                      type: string
                    type: array
                  sourceApplicationSecurityGroups:
                    description: The application security group specified as source.
                    items:
                      allOf:
                        - description: Common resource representation.
                          properties:
                            id:
                              description: Resource ID.
                              type: string
                            location:
                              description: Resource location.
                              type: string
                            name:
                              description: Resource name.
                              readOnly: true
                              type: string
                            tags:
                              additionalProperties:
                                type: string
                              description: Resource tags.
                              type: object
                            type:
                              description: Resource type.
                              readOnly: true
                              type: string
                          x-ms-azure-resource: true
                      description: An application security group in a resource group.
                      properties:
                        etag:
                          description: A unique read-only string that changes whenever the
                            resource is updated.
                          readOnly: true
                          type: string
                        properties:
                          description: Application security group properties.
                          properties:
                            provisioningState:
                              description: "The provisioning state of the application
                                security group resource. Possible values are:
                                'Succeeded', 'Updating', 'Deleting', and
                                'Failed'."
                              readOnly: true
                              type: string
                            resourceGuid:
                              description: The resource GUID property of the application
                                security group resource. It uniquely identifies
                                a resource, even if the user changes its name or
                                migrate the resource across subscriptions or
                                resource groups.
                              readOnly: true
                              type: string
                    type: array
                  sourcePortRange:
                    description: The source port or range. Integer or range between 0 and
                      65535. Asterisk '*' can also be used to match all ports.
                    type: string
                  sourcePortRanges:
                    description: The source port ranges.
                    items:
                      description: The source port.
                      type: string
                    type: array
                required:
                  - protocol
                  - access
                  - direction
          type: array
    NetworkWatcher:
      allOf:
        - description: Common resource representation.
          properties:
            id:
              description: Resource ID.
              type: string
            location:
              description: Resource location.
              type: string
            name:
              description: Resource name.
              readOnly: true
              type: string
            tags:
              additionalProperties:
                type: string
              description: Resource tags.
              type: object
            type:
              description: Resource type.
              readOnly: true
              type: string
          x-ms-azure-resource: true
      description: Network watcher in a resource group.
      properties:
        etag:
          description: A unique read-only string that changes whenever the resource is
            updated.
          type: string
        properties:
          $ref: "#/components/schemas/NetworkWatcherPropertiesFormat"
    NetworkWatcherListResult:
      description: List of network watcher resources.
      properties:
        value:
          items:
            $ref: "#/components/schemas/NetworkWatcher"
          type: array
    NetworkWatcherPropertiesFormat:
      description: The network watcher properties.
      properties:
        provisioningState:
          description: The provisioning state of the resource.
          enum:
            - Succeeded
            - Updating
            - Deleting
            - Failed
          readOnly: true
          type: string
          x-ms-enum:
            modelAsString: true
            name: ProvisioningState
    NextHopParameters:
      description: Parameters that define the source and destination endpoint.
      properties:
        destinationIPAddress:
          description: The destination IP address.
          type: string
        sourceIPAddress:
          description: The source IP address.
          type: string
        targetNicResourceId:
          description: The NIC ID. (If VM has multiple NICs and IP forwarding is enabled on
            any of the nics, then this parameter must be specified. Otherwise
            optional).
          type: string
        targetResourceId:
          description: The resource identifier of the target resource against which the
            action is to be performed.
          type: string
      required:
        - targetResourceId
        - sourceIPAddress
        - destinationIPAddress
    NextHopResult:
      description: The information about next hop from the specified VM.
      properties:
        nextHopIpAddress:
          description: Next hop IP Address
          type: string
        nextHopType:
          description: Next hop type.
          enum:
            - Internet
            - VirtualAppliance
            - VirtualNetworkGateway
            - VnetLocal
            - HyperNetGateway
            - None
          type: string
          x-ms-enum:
            modelAsString: true
            name: NextHopType
        routeTableId:
          description: The resource identifier for the route table associated with the
            route being returned. If the route being returned does not
            correspond to any user created routes then this field will be the
            string 'System Route'.
          type: string
    PacketCapture:
      description: Parameters that define the create packet capture operation.
      properties:
        properties:
          $ref: "#/components/schemas/PacketCaptureParameters"
      required:
        - properties
    PacketCaptureFilter:
      description: Filter that is applied to packet capture request. Multiple filters can
        be applied.
      properties:
        localIPAddress:
          description: 'Local IP Address to be filtered on. Notation: "127.0.0.1" for
            single address entry. "127.0.0.1-127.0.0.255" for range.
            "127.0.0.1;127.0.0.5"? for multiple entries. Multiple ranges not
            currently supported. Mixing ranges with multiple entries not
            currently supported. Default = null.'
          type: string
        localPort:
          description: 'Local port to be filtered on. Notation: "80" for single port
            entry."80-85" for range. "80;443;" for multiple entries. Multiple
            ranges not currently supported. Mixing ranges with multiple entries
            not currently supported. Default = null.'
          type: string
        protocol:
          default: Any
          description: Protocol to be filtered on.
          enum:
            - TCP
            - UDP
            - Any
          type: string
          x-ms-enum:
            modelAsString: true
            name: PcProtocol
        remoteIPAddress:
          description: 'Local IP Address to be filtered on. Notation: "127.0.0.1" for
            single address entry. "127.0.0.1-127.0.0.255" for range.
            "127.0.0.1;127.0.0.5;" for multiple entries. Multiple ranges not
            currently supported. Mixing ranges with multiple entries not
            currently supported. Default = null.'
          type: string
        remotePort:
          description: 'Remote port to be filtered on. Notation: "80" for single port
            entry."80-85" for range. "80;443;" for multiple entries. Multiple
            ranges not currently supported. Mixing ranges with multiple entries
            not currently supported. Default = null.'
          type: string
    PacketCaptureListResult:
      description: List of packet capture sessions.
      properties:
        value:
          description: Information about packet capture sessions.
          items:
            $ref: "#/components/schemas/PacketCaptureResult"
          type: array
    PacketCaptureParameters:
      description: Parameters that define the create packet capture operation.
      properties:
        bytesToCapturePerPacket:
          default: 0
          description: Number of bytes captured per packet, the remaining bytes are
            truncated.
          type: integer
        filters:
          items:
            $ref: "#/components/schemas/PacketCaptureFilter"
          type: array
        storageLocation:
          $ref: "#/components/schemas/PacketCaptureStorageLocation"
        target:
          description: The ID of the targeted resource, only VM is currently supported.
          type: string
        timeLimitInSeconds:
          default: 18000
          description: Maximum duration of the capture session in seconds.
          type: integer
        totalBytesPerSession:
          default: 1073741824
          description: Maximum size of the capture output.
          type: integer
      required:
        - target
        - storageLocation
    PacketCaptureQueryStatusResult:
      description: Status of packet capture session.
      properties:
        captureStartTime:
          description: The start time of the packet capture session.
          format: date-time
          type: string
        id:
          description: The ID of the packet capture resource.
          type: string
        name:
          description: The name of the packet capture resource.
          type: string
        packetCaptureError:
          description: List of errors of packet capture session.
          items:
            enum:
              - InternalError
              - AgentStopped
              - CaptureFailed
              - LocalFileFailed
              - StorageFailed
            type: string
            x-ms-enum:
              modelAsString: true
              name: PcError
          type: array
        packetCaptureStatus:
          description: The status of the packet capture session.
          enum:
            - NotStarted
            - Running
            - Stopped
            - Error
            - Unknown
          type: string
          x-ms-enum:
            modelAsString: true
            name: PcStatus
        stopReason:
          description: The reason the current packet capture session was stopped.
          type: string
    PacketCaptureResult:
      description: Information about packet capture session.
      properties:
        etag:
          default: A unique read-only string that changes whenever the resource is
            updated.
          type: string
        id:
          description: ID of the packet capture operation.
          readOnly: true
          type: string
        name:
          description: Name of the packet capture session.
          readOnly: true
          type: string
        properties:
          $ref: "#/components/schemas/PacketCaptureResultProperties"
    PacketCaptureResultProperties:
      allOf:
        - $ref: "#/components/schemas/PacketCaptureParameters"
      description: Describes the properties of a packet capture session.
      properties:
        provisioningState:
          description: The provisioning state of the packet capture session.
          enum:
            - Succeeded
            - Updating
            - Deleting
            - Failed
          type: string
          x-ms-enum:
            modelAsString: true
            name: ProvisioningState
    PacketCaptureStorageLocation:
      description: Describes the storage location for a packet capture session.
      properties:
        filePath:
          description: A valid local path on the targeting VM. Must include the name of the
            capture file (*.cap). For linux virtual machine it must start with
            /var/captures. Required if no storage ID is provided, otherwise
            optional.
          type: string
        storageId:
          description: The ID of the storage account to save the packet capture session.
            Required if no local file path is provided.
          type: string
        storagePath:
          description: The URI of the storage path to save the packet capture. Must be a
            well-formed URI describing the location to save the packet capture.
          type: string
    ProtocolConfiguration:
      description: Configuration of the protocol.
      properties:
        HTTPConfiguration:
          $ref: "#/components/schemas/HTTPConfiguration"
    QueryTroubleshootingParameters:
      description: Parameters that define the resource to query the troubleshooting result.
      properties:
        targetResourceId:
          description: The target resource ID to query the troubleshooting result.
          type: string
      required:
        - targetResourceId
    RetentionPolicyParameters:
      description: Parameters that define the retention policy for flow log.
      properties:
        days:
          default: 0
          description: Number of days to retain flow log records.
          type: integer
        enabled:
          default: false
          description: Flag to enable/disable retention.
          type: boolean
    SecurityGroupNetworkInterface:
      description: Network interface and all its associated security rules.
      properties:
        id:
          description: ID of the network interface.
          type: string
        securityRuleAssociations:
          $ref: "#/components/schemas/SecurityRuleAssociations"
    SecurityGroupViewParameters:
      description: Parameters that define the VM to check security groups for.
      properties:
        targetResourceId:
          description: ID of the target VM.
          type: string
      required:
        - targetResourceId
    SecurityGroupViewResult:
      description: The information about security rules applied to the specified VM.
      properties:
        networkInterfaces:
          description: List of network interfaces on the specified VM.
          items:
            $ref: "#/components/schemas/SecurityGroupNetworkInterface"
          type: array
    SecurityRuleAssociations:
      description: All security rules associated with the network interface.
      properties:
        defaultSecurityRules:
          description: Collection of default security rules of the network security group.
          items:
            allOf:
              - description: Reference to another subresource.
                properties:
                  id:
                    description: Resource ID.
                    type: string
                x-ms-azure-resource: true
            description: Network security rule.
            properties:
              etag:
                description: A unique read-only string that changes whenever the resource
                  is updated.
                type: string
              name:
                description: The name of the resource that is unique within a resource
                  group. This name can be used to access the resource.
                type: string
              properties:
                description: Security rule resource.
                properties:
                  access:
                    description: "The network traffic is allowed or denied. Possible values
                      are: 'Allow' and 'Deny'."
                    enum:
                      - Allow
                      - Deny
                    type: string
                    x-ms-enum:
                      modelAsString: true
                      name: SecurityRuleAccess
                  description:
                    description: A description for this rule. Restricted to 140 chars.
                    type: string
                  destinationAddressPrefix:
                    description: The destination address prefix. CIDR or destination IP
                      range. Asterisk '*' can also be used to match all source
                      IPs. Default tags such as 'VirtualNetwork',
                      'AzureLoadBalancer' and 'Internet' can also be used.
                    type: string
                  destinationAddressPrefixes:
                    description: The destination address prefixes. CIDR or destination IP
                      ranges.
                    items:
                      type: string
                    type: array
                  destinationApplicationSecurityGroups:
                    description: The application security group specified as destination.
                    items:
                      allOf:
                        - description: Common resource representation.
                          properties:
                            id:
                              description: Resource ID.
                              type: string
                            location:
                              description: Resource location.
                              type: string
                            name:
                              description: Resource name.
                              readOnly: true
                              type: string
                            tags:
                              additionalProperties:
                                type: string
                              description: Resource tags.
                              type: object
                            type:
                              description: Resource type.
                              readOnly: true
                              type: string
                          x-ms-azure-resource: true
                      description: An application security group in a resource group.
                      properties:
                        etag:
                          description: A unique read-only string that changes whenever the
                            resource is updated.
                          readOnly: true
                          type: string
                        properties:
                          description: Application security group properties.
                          properties:
                            provisioningState:
                              description: "The provisioning state of the application
                                security group resource. Possible values are:
                                'Succeeded', 'Updating', 'Deleting', and
                                'Failed'."
                              readOnly: true
                              type: string
                            resourceGuid:
                              description: The resource GUID property of the application
                                security group resource. It uniquely identifies
                                a resource, even if the user changes its name or
                                migrate the resource across subscriptions or
                                resource groups.
                              readOnly: true
                              type: string
                    type: array
                  destinationPortRange:
                    description: The destination port or range. Integer or range between 0
                      and 65535. Asterisk '*' can also be used to match all
                      ports.
                    type: string
                  destinationPortRanges:
                    description: The destination port ranges.
                    items:
                      description: The destination port.
                      type: string
                    type: array
                  direction:
                    description: "The direction of the rule. The direction specifies if
                      rule will be evaluated on incoming or outgoing traffic.
                      Possible values are: 'Inbound' and 'Outbound'."
                    enum:
                      - Inbound
                      - Outbound
                    type: string
                    x-ms-enum:
                      modelAsString: true
                      name: SecurityRuleDirection
                  priority:
                    description: The priority of the rule. The value can be between 100 and
                      4096. The priority number must be unique for each rule in
                      the collection. The lower the priority number, the higher
                      the priority of the rule.
                    format: int32
                    type: integer
                  protocol:
                    description: Network protocol this rule applies to. Possible values are
                      'Tcp', 'Udp', and '*'.
                    enum:
                      - Tcp
                      - Udp
                      - "*"
                    type: string
                    x-ms-enum:
                      modelAsString: true
                      name: SecurityRuleProtocol
                  provisioningState:
                    description: "The provisioning state of the public IP resource.
                      Possible values are: 'Updating', 'Deleting', and
                      'Failed'."
                    type: string
                  sourceAddressPrefix:
                    description: "The CIDR or source IP range. Asterisk '*' can also be
                      used to match all source IPs. Default tags such as
                      'VirtualNetwork', 'AzureLoadBalancer' and 'Internet' can
                      also be used. If this is an ingress rule, specifies where
                      network traffic originates from. "
                    type: string
                  sourceAddressPrefixes:
                    description: The CIDR or source IP ranges.
                    items:
                      type: string
                    type: array
                  sourceApplicationSecurityGroups:
                    description: The application security group specified as source.
                    items:
                      allOf:
                        - description: Common resource representation.
                          properties:
                            id:
                              description: Resource ID.
                              type: string
                            location:
                              description: Resource location.
                              type: string
                            name:
                              description: Resource name.
                              readOnly: true
                              type: string
                            tags:
                              additionalProperties:
                                type: string
                              description: Resource tags.
                              type: object
                            type:
                              description: Resource type.
                              readOnly: true
                              type: string
                          x-ms-azure-resource: true
                      description: An application security group in a resource group.
                      properties:
                        etag:
                          description: A unique read-only string that changes whenever the
                            resource is updated.
                          readOnly: true
                          type: string
                        properties:
                          description: Application security group properties.
                          properties:
                            provisioningState:
                              description: "The provisioning state of the application
                                security group resource. Possible values are:
                                'Succeeded', 'Updating', 'Deleting', and
                                'Failed'."
                              readOnly: true
                              type: string
                            resourceGuid:
                              description: The resource GUID property of the application
                                security group resource. It uniquely identifies
                                a resource, even if the user changes its name or
                                migrate the resource across subscriptions or
                                resource groups.
                              readOnly: true
                              type: string
                    type: array
                  sourcePortRange:
                    description: The source port or range. Integer or range between 0 and
                      65535. Asterisk '*' can also be used to match all ports.
                    type: string
                  sourcePortRanges:
                    description: The source port ranges.
                    items:
                      description: The source port.
                      type: string
                    type: array
                required:
                  - protocol
                  - access
                  - direction
          type: array
        effectiveSecurityRules:
          description: Collection of effective security rules.
          items:
            description: Effective network security rules.
            properties:
              access:
                description: "Whether network traffic is allowed or denied. Possible values
                  are: 'Allow' and 'Deny'."
                enum:
                  - Allow
                  - Deny
                type: string
                x-ms-enum:
                  modelAsString: true
                  name: SecurityRuleAccess
              destinationAddressPrefix:
                description: The destination address prefix.
                type: string
              destinationAddressPrefixes:
                description: The destination address prefixes. Expected values include CIDR
                  IP ranges, Default Tags (VirtualNetwork, AzureLoadBalancer,
                  Internet), System Tags, and the asterisk (*).
                items:
                  type: string
                type: array
              destinationPortRange:
                description: The destination port or range.
                type: string
              destinationPortRanges:
                description: The destination port ranges. Expected values include a single
                  integer between 0 and 65535, a range using '-' as separator
                  (e.g. 100-400), or an asterisk (*)
                items:
                  type: string
                type: array
              direction:
                description: "The direction of the rule. Possible values are: 'Inbound and
                  Outbound'."
                enum:
                  - Inbound
                  - Outbound
                type: string
                x-ms-enum:
                  modelAsString: true
                  name: SecurityRuleDirection
              expandedDestinationAddressPrefix:
                description: Expanded destination address prefix.
                items:
                  type: string
                type: array
              expandedSourceAddressPrefix:
                description: The expanded source address prefix.
                items:
                  type: string
                type: array
              name:
                description: The name of the security rule specified by the user (if
                  created by the user).
                type: string
              priority:
                description: The priority of the rule.
                format: int32
                type: integer
              protocol:
                description: "The network protocol this rule applies to. Possible values
                  are: 'Tcp', 'Udp', and 'All'."
                enum:
                  - Tcp
                  - Udp
                  - All
                type: string
                x-ms-enum:
                  modelAsString: true
                  name: EffectiveSecurityRuleProtocol
              sourceAddressPrefix:
                description: The source address prefix.
                type: string
              sourceAddressPrefixes:
                description: The source address prefixes. Expected values include CIDR IP
                  ranges, Default Tags (VirtualNetwork, AzureLoadBalancer,
                  Internet), System Tags, and the asterisk (*).
                items:
                  type: string
                type: array
              sourcePortRange:
                description: The source port or range.
                type: string
              sourcePortRanges:
                description: The source port ranges. Expected values include a single
                  integer between 0 and 65535, a range using '-' as separator
                  (e.g. 100-400), or an asterisk (*)
                items:
                  type: string
                type: array
          type: array
        networkInterfaceAssociation:
          $ref: "#/components/schemas/NetworkInterfaceAssociation"
        subnetAssociation:
          $ref: "#/components/schemas/SubnetAssociation"
    SubnetAssociation:
      description: Network interface and its custom security rules.
      properties:
        id:
          description: Subnet ID.
          readOnly: true
          type: string
        securityRules:
          description: Collection of custom security rules.
          items:
            allOf:
              - description: Reference to another subresource.
                properties:
                  id:
                    description: Resource ID.
                    type: string
                x-ms-azure-resource: true
            description: Network security rule.
            properties:
              etag:
                description: A unique read-only string that changes whenever the resource
                  is updated.
                type: string
              name:
                description: The name of the resource that is unique within a resource
                  group. This name can be used to access the resource.
                type: string
              properties:
                description: Security rule resource.
                properties:
                  access:
                    description: "The network traffic is allowed or denied. Possible values
                      are: 'Allow' and 'Deny'."
                    enum:
                      - Allow
                      - Deny
                    type: string
                    x-ms-enum:
                      modelAsString: true
                      name: SecurityRuleAccess
                  description:
                    description: A description for this rule. Restricted to 140 chars.
                    type: string
                  destinationAddressPrefix:
                    description: The destination address prefix. CIDR or destination IP
                      range. Asterisk '*' can also be used to match all source
                      IPs. Default tags such as 'VirtualNetwork',
                      'AzureLoadBalancer' and 'Internet' can also be used.
                    type: string
                  destinationAddressPrefixes:
                    description: The destination address prefixes. CIDR or destination IP
                      ranges.
                    items:
                      type: string
                    type: array
                  destinationApplicationSecurityGroups:
                    description: The application security group specified as destination.
                    items:
                      allOf:
                        - description: Common resource representation.
                          properties:
                            id:
                              description: Resource ID.
                              type: string
                            location:
                              description: Resource location.
                              type: string
                            name:
                              description: Resource name.
                              readOnly: true
                              type: string
                            tags:
                              additionalProperties:
                                type: string
                              description: Resource tags.
                              type: object
                            type:
                              description: Resource type.
                              readOnly: true
                              type: string
                          x-ms-azure-resource: true
                      description: An application security group in a resource group.
                      properties:
                        etag:
                          description: A unique read-only string that changes whenever the
                            resource is updated.
                          readOnly: true
                          type: string
                        properties:
                          description: Application security group properties.
                          properties:
                            provisioningState:
                              description: "The provisioning state of the application
                                security group resource. Possible values are:
                                'Succeeded', 'Updating', 'Deleting', and
                                'Failed'."
                              readOnly: true
                              type: string
                            resourceGuid:
                              description: The resource GUID property of the application
                                security group resource. It uniquely identifies
                                a resource, even if the user changes its name or
                                migrate the resource across subscriptions or
                                resource groups.
                              readOnly: true
                              type: string
                    type: array
                  destinationPortRange:
                    description: The destination port or range. Integer or range between 0
                      and 65535. Asterisk '*' can also be used to match all
                      ports.
                    type: string
                  destinationPortRanges:
                    description: The destination port ranges.
                    items:
                      description: The destination port.
                      type: string
                    type: array
                  direction:
                    description: "The direction of the rule. The direction specifies if
                      rule will be evaluated on incoming or outgoing traffic.
                      Possible values are: 'Inbound' and 'Outbound'."
                    enum:
                      - Inbound
                      - Outbound
                    type: string
                    x-ms-enum:
                      modelAsString: true
                      name: SecurityRuleDirection
                  priority:
                    description: The priority of the rule. The value can be between 100 and
                      4096. The priority number must be unique for each rule in
                      the collection. The lower the priority number, the higher
                      the priority of the rule.
                    format: int32
                    type: integer
                  protocol:
                    description: Network protocol this rule applies to. Possible values are
                      'Tcp', 'Udp', and '*'.
                    enum:
                      - Tcp
                      - Udp
                      - "*"
                    type: string
                    x-ms-enum:
                      modelAsString: true
                      name: SecurityRuleProtocol
                  provisioningState:
                    description: "The provisioning state of the public IP resource.
                      Possible values are: 'Updating', 'Deleting', and
                      'Failed'."
                    type: string
                  sourceAddressPrefix:
                    description: "The CIDR or source IP range. Asterisk '*' can also be
                      used to match all source IPs. Default tags such as
                      'VirtualNetwork', 'AzureLoadBalancer' and 'Internet' can
                      also be used. If this is an ingress rule, specifies where
                      network traffic originates from. "
                    type: string
                  sourceAddressPrefixes:
                    description: The CIDR or source IP ranges.
                    items:
                      type: string
                    type: array
                  sourceApplicationSecurityGroups:
                    description: The application security group specified as source.
                    items:
                      allOf:
                        - description: Common resource representation.
                          properties:
                            id:
                              description: Resource ID.
                              type: string
                            location:
                              description: Resource location.
                              type: string
                            name:
                              description: Resource name.
                              readOnly: true
                              type: string
                            tags:
                              additionalProperties:
                                type: string
                              description: Resource tags.
                              type: object
                            type:
                              description: Resource type.
                              readOnly: true
                              type: string
                          x-ms-azure-resource: true
                      description: An application security group in a resource group.
                      properties:
                        etag:
                          description: A unique read-only string that changes whenever the
                            resource is updated.
                          readOnly: true
                          type: string
                        properties:
                          description: Application security group properties.
                          properties:
                            provisioningState:
                              description: "The provisioning state of the application
                                security group resource. Possible values are:
                                'Succeeded', 'Updating', 'Deleting', and
                                'Failed'."
                              readOnly: true
                              type: string
                            resourceGuid:
                              description: The resource GUID property of the application
                                security group resource. It uniquely identifies
                                a resource, even if the user changes its name or
                                migrate the resource across subscriptions or
                                resource groups.
                              readOnly: true
                              type: string
                    type: array
                  sourcePortRange:
                    description: The source port or range. Integer or range between 0 and
                      65535. Asterisk '*' can also be used to match all ports.
                    type: string
                  sourcePortRanges:
                    description: The source port ranges.
                    items:
                      description: The source port.
                      type: string
                    type: array
                required:
                  - protocol
                  - access
                  - direction
          type: array
    Topology:
      description: Topology of the specified resource group.
      properties:
        createdDateTime:
          description: The datetime when the topology was initially created for the
            resource group.
          format: date-time
          readOnly: true
          type: string
        id:
          description: GUID representing the operation id.
          readOnly: true
          type: string
        lastModified:
          description: The datetime when the topology was last modified.
          format: date-time
          readOnly: true
          type: string
        resources:
          items:
            $ref: "#/components/schemas/TopologyResource"
          type: array
    TopologyAssociation:
      description: Resources that have an association with the parent resource.
      properties:
        associationType:
          description: The association type of the child resource to the parent resource.
          enum:
            - Associated
            - Contains
          type: string
          x-ms-enum:
            modelAsString: true
            name: AssociationType
        name:
          description: The name of the resource that is associated with the parent resource.
          type: string
        resourceId:
          description: The ID of the resource that is associated with the parent resource.
          type: string
    TopologyParameters:
      description: Parameters that define the representation of topology.
      properties:
        targetResourceGroupName:
          description: The name of the target resource group to perform topology on.
          type: string
        targetSubnet:
          description: Reference to another subresource.
          properties:
            id:
              description: Resource ID.
              type: string
          x-ms-azure-resource: true
        targetVirtualNetwork:
          description: Reference to another subresource.
          properties:
            id:
              description: Resource ID.
              type: string
          x-ms-azure-resource: true
    TopologyResource:
      description: The network resource topology information for the given resource group.
      properties:
        associations:
          description: Holds the associations the resource has with other resources in the
            resource group.
          items:
            $ref: "#/components/schemas/TopologyAssociation"
          type: array
        id:
          description: ID of the resource.
          type: string
        location:
          description: Resource location.
          type: string
        name:
          description: Name of the resource.
          type: string
    TroubleshootingDetails:
      description: Information gained from troubleshooting of specified resource.
      properties:
        detail:
          description: Details on troubleshooting results.
          type: string
        id:
          description: The id of the get troubleshoot operation.
          type: string
        reasonType:
          description: Reason type of failure.
          type: string
        recommendedActions:
          description: List of recommended actions.
          items:
            $ref: "#/components/schemas/TroubleshootingRecommendedActions"
          type: array
        summary:
          description: A summary of troubleshooting.
          type: string
    TroubleshootingParameters:
      description: Parameters that define the resource to troubleshoot.
      properties:
        properties:
          $ref: "#/components/schemas/TroubleshootingProperties"
        targetResourceId:
          description: The target resource to troubleshoot.
          type: string
      required:
        - targetResourceId
        - properties
    TroubleshootingProperties:
      description: Storage location provided for troubleshoot.
      properties:
        storageId:
          description: The ID for the storage account to save the troubleshoot result.
          type: string
        storagePath:
          description: The path to the blob to save the troubleshoot result in.
          type: string
      required:
        - storageId
        - storagePath
    TroubleshootingRecommendedActions:
      description: Recommended actions based on discovered issues.
      properties:
        actionId:
          description: ID of the recommended action.
          type: string
        actionText:
          description: Description of recommended actions.
          type: string
        actionUri:
          description: The uri linking to a documentation for the recommended
            troubleshooting actions.
          type: string
        actionUriText:
          description: The information from the URI for the recommended troubleshooting
            actions.
          type: string
    TroubleshootingResult:
      description: Troubleshooting information gained from specified resource.
      properties:
        code:
          description: The result code of the troubleshooting.
          type: string
        endTime:
          description: The end time of the troubleshooting.
          format: date-time
          type: string
        results:
          description: Information from troubleshooting.
          items:
            $ref: "#/components/schemas/TroubleshootingDetails"
          type: array
        startTime:
          description: The start time of the troubleshooting.
          format: date-time
          type: string
    VerificationIPFlowParameters:
      description: Parameters that define the IP flow to be verified.
      properties:
        direction:
          description: The direction of the packet represented as a 5-tuple.
          enum:
            - Inbound
            - Outbound
          type: string
          x-ms-enum:
            modelAsString: true
            name: Direction
        localIPAddress:
          description: The local IP address. Acceptable values are valid IPv4 addresses.
          type: string
        localPort:
          description: The local port. Acceptable values are a single integer in the range
            (0-65535). Support for * for the source port, which depends on the
            direction.
          type: string
        protocol:
          description: Protocol to be verified on.
          enum:
            - TCP
            - UDP
          type: string
          x-ms-enum:
            modelAsString: true
            name: IpFlowProtocol
        remoteIPAddress:
          description: The remote IP address. Acceptable values are valid IPv4 addresses.
          type: string
        remotePort:
          description: The remote port. Acceptable values are a single integer in the range
            (0-65535). Support for * for the source port, which depends on the
            direction.
          type: string
        targetNicResourceId:
          description: The NIC ID. (If VM has multiple NICs and IP forwarding is enabled on
            any of them, then this parameter must be specified. Otherwise
            optional).
          type: string
        targetResourceId:
          description: The ID of the target resource to perform next-hop on.
          type: string
      required:
        - targetResourceId
        - direction
        - protocol
        - localPort
        - remotePort
        - localIPAddress
        - remoteIPAddress
    VerificationIPFlowResult:
      description: Results of IP flow verification on the target resource.
      properties:
        access:
          description: Indicates whether the traffic is allowed or denied.
          enum:
            - Allow
            - Deny
          type: string
          x-ms-enum:
            modelAsString: true
            name: Access
        ruleName:
          description: Name of the rule. If input is not matched against any security rule,
            it is not displayed.
          type: string
