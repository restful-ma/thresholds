openapi: 3.0.0
info:
  version: 2017-11-01
  x-release: v4
  title: Amazon Elastic Kubernetes Service
  description: <p>Amazon Elastic Kubernetes Service (Amazon EKS) is a managed service that
    makes it easy for you to run Kubernetes on AWS without needing to stand up
    or maintain your own Kubernetes control plane. Kubernetes is an open-source
    system for automating the deployment, scaling, and management of
    containerized applications. </p> <p>Amazon EKS runs up-to-date versions of
    the open-source Kubernetes software, so you can use all the existing plugins
    and tooling from the Kubernetes community. Applications running on Amazon
    EKS are fully compatible with applications running on any standard
    Kubernetes environment, whether running in on-premises data centers or
    public clouds. This means that you can easily migrate any standard
    Kubernetes application to Amazon EKS without any code modification
    required.</p>
  x-logo:
    url: https://twitter.com/awscloud/profile_image?size=original
    backgroundColor: "#FFFFFF"
  termsOfService: https://aws.amazon.com/service-terms/
  contact:
    name: Mike Ralphson
    email: mike.ralphson@gmail.com
    url: https://github.com/mermade/aws2openapi
    x-twitter: PermittedSoc
  license:
    name: Apache 2.0 License
    url: http://www.apache.org/licenses/
  x-providerName: amazonaws.com
  x-serviceName: eks
  x-origin:
    - contentType: application/json
      url: https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/eks-2017-11-01.normal.json
      converter:
        url: https://github.com/mermade/aws2openapi
        version: 1.0.0
      x-apisguru-direct: true
  x-apiClientRegistration:
    url: https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct
  x-apisguru-categories:
    - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: https://docs.aws.amazon.com/eks/
x-hasEquivalentPaths: true
security:
  - hmac: []
paths:
  /clusters:
    post:
      operationId: CreateCluster
      description: <p>Creates an Amazon EKS control plane. </p> <p>The Amazon EKS control
        plane consists of control plane instances that run the Kubernetes
        software, such as <code>etcd</code> and the API server. The control
        plane runs in an account managed by AWS, and the Kubernetes API is
        exposed via the Amazon EKS API server endpoint. Each Amazon EKS cluster
        control plane is single-tenant and unique and runs on its own set of
        Amazon EC2 instances.</p> <p>The cluster control plane is provisioned
        across multiple Availability Zones and fronted by an Elastic Load
        Balancing Network Load Balancer. Amazon EKS also provisions elastic
        network interfaces in your VPC subnets to provide connectivity from the
        control plane instances to the worker nodes (for example, to support
        <code>kubectl exec</code>, <code>logs</code>, and <code>proxy</code>
        data flows).</p> <p>Amazon EKS worker nodes run in your AWS account and
        connect to your cluster's control plane via the Kubernetes API server
        endpoint and a certificate file that is created for your cluster.</p>
        <p>You can use the <code>endpointPublicAccess</code> and
        <code>endpointPrivateAccess</code> parameters to enable or disable
        public and private access to your cluster's Kubernetes API server
        endpoint. By default, public access is enabled, and private access is
        disabled. For more information, see <a
        href="https://docs.aws.amazon.com/eks/latest/userguide/cluster-endpoint.html">Amazon
        EKS Cluster Endpoint Access Control</a> in the <i> <i>Amazon EKS User
        Guide</i> </i>. </p> <p>You can use the <code>logging</code> parameter
        to enable or disable exporting the Kubernetes control plane logs for
        your cluster to CloudWatch Logs. By default, cluster control plane logs
        aren't exported to CloudWatch Logs. For more information, see <a
        href="https://docs.aws.amazon.com/eks/latest/userguide/control-plane-logs.html">Amazon
        EKS Cluster Control Plane Logs</a> in the <i> <i>Amazon EKS User
        Guide</i> </i>.</p> <note> <p>CloudWatch Logs ingestion, archive
        storage, and data scanning rates apply to exported control plane logs.
        For more information, see <a
        href="http://aws.amazon.com/cloudwatch/pricing/">Amazon CloudWatch
        Pricing</a>.</p> </note> <p>Cluster creation typically takes between 10
        and 15 minutes. After you create an Amazon EKS cluster, you must
        configure your Kubernetes tooling to communicate with the API server and
        launch worker nodes into your cluster. For more information, see <a
        href="https://docs.aws.amazon.com/eks/latest/userguide/managing-auth.html">Managing
        Cluster Authentication</a> and <a
        href="https://docs.aws.amazon.com/eks/latest/userguide/launch-workers.html">Launching
        Amazon EKS Worker Nodes</a> in the <i>Amazon EKS User Guide</i>.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateClusterResponse"
        "480":
          description: ResourceInUseException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceInUseException"
        "481":
          description: ResourceLimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceLimitExceededException"
        "482":
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterException"
        "483":
          description: ClientException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ClientException"
        "484":
          description: ServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServerException"
        "485":
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceUnavailableException"
        "486":
          description: UnsupportedAvailabilityZoneException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnsupportedAvailabilityZoneException"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - name
                - roleArn
                - resourcesVpcConfig
              properties:
                name:
                  description: The unique name to give to your cluster.
                  type: string
                  pattern: ^[0-9A-Za-z][A-Za-z0-9\-_]*
                  minLength: 1
                  maxLength: 100
                version:
                  description: The desired Kubernetes version for your cluster. If you
                    don't specify a value here, the latest version available in
                    Amazon EKS is used.
                  type: string
                roleArn:
                  description: The Amazon Resource Name (ARN) of the IAM role that provides
                    permissions for Amazon EKS to make calls to other AWS API
                    operations on your behalf. For more information, see <a
                    href="https://docs.aws.amazon.com/eks/latest/userguide/service_IAM_role.html">Amazon
                    EKS Service IAM Role</a> in the <i> <i>Amazon EKS User
                    Guide</i> </i>.
                  type: string
                resourcesVpcConfig:
                  description: An object representing the VPC configuration to use for an
                    Amazon EKS cluster.
                  type: object
                  properties:
                    subnetIds:
                      $ref: "#/components/schemas/StringList"
                    securityGroupIds:
                      $ref: "#/components/schemas/StringList"
                    endpointPublicAccess:
                      $ref: "#/components/schemas/BoxedBoolean"
                    endpointPrivateAccess:
                      $ref: "#/components/schemas/BoxedBoolean"
                logging:
                  description: An object representing the logging configuration for
                    resources in your cluster.
                  type: object
                  properties:
                    clusterLogging:
                      $ref: "#/components/schemas/LogSetups"
                clientRequestToken:
                  description: Unique, case-sensitive identifier that you provide to ensure
                    the idempotency of the request.
                  type: string
                tags:
                  description: The metadata to apply to the cluster to assist with
                    categorization and organization. Each tag consists of a key
                    and an optional value, both of which you define.
                  type: object
                  minProperties: 1
                  maxProperties: 50
                  additionalProperties:
                    $ref: "#/components/schemas/TagValue"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    get:
      operationId: ListClusters
      description: Lists the Amazon EKS clusters in your AWS account in the specified
        Region.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListClustersResponse"
        "480":
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterException"
        "481":
          description: ClientException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ClientException"
        "482":
          description: ServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServerException"
        "483":
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceUnavailableException"
      parameters:
        - name: maxResults
          in: query
          required: false
          description: The maximum number of cluster results returned by
            <code>ListClusters</code> in paginated output. When you use this
            parameter, <code>ListClusters</code> returns only
            <code>maxResults</code> results in a single page along with a
            <code>nextToken</code> response element. You can see the remaining
            results of the initial request by sending another
            <code>ListClusters</code> request with the returned
            <code>nextToken</code> value. This value can be between 1 and 100.
            If you don't use this parameter, <code>ListClusters</code> returns
            up to 100 results and a <code>nextToken</code> value if applicable.
          schema:
            type: integer
            minimum: 1
            maximum: 100
        - name: nextToken
          in: query
          required: false
          description: <p>The <code>nextToken</code> value returned from a previous
            paginated <code>ListClusters</code> request where
            <code>maxResults</code> was used and the results exceeded the value
            of that parameter. Pagination continues from the end of the previous
            results that returned the <code>nextToken</code> value.</p> <note>
            <p>This token should be treated as an opaque identifier that is used
            only to retrieve the next items in a list and not for other
            programmatic purposes.</p> </note>
          schema:
            type: string
  "/clusters/{name}":
    delete:
      operationId: DeleteCluster
      description: <p>Deletes the Amazon EKS cluster control plane. </p> <note> <p>If you
        have active services in your cluster that are associated with a load
        balancer, you must delete those services before deleting the cluster so
        that the load balancers are deleted properly. Otherwise, you can have
        orphaned resources in your VPC that prevent you from being able to
        delete the VPC. For more information, see <a
        href="https://docs.aws.amazon.com/eks/latest/userguide/delete-cluster.html">Deleting
        a Cluster</a> in the <i>Amazon EKS User Guide</i>.</p> </note>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteClusterResponse"
        "480":
          description: ResourceInUseException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceInUseException"
        "481":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "482":
          description: ClientException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ClientException"
        "483":
          description: ServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServerException"
        "484":
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceUnavailableException"
      parameters:
        - name: name
          in: path
          required: true
          description: The name of the cluster to delete.
          schema:
            type: string
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    get:
      operationId: DescribeCluster
      description: <p>Returns descriptive information about an Amazon EKS cluster.</p>
        <p>The API server endpoint and certificate authority data returned by
        this operation are required for <code>kubelet</code> and
        <code>kubectl</code> to communicate with your Kubernetes API server. For
        more information, see <a
        href="https://docs.aws.amazon.com/eks/latest/userguide/create-kubeconfig.html">Create
        a kubeconfig for Amazon EKS</a>.</p> <note> <p>The API server endpoint
        and certificate authority data aren't available until the cluster
        reaches the <code>ACTIVE</code> state.</p> </note>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeClusterResponse"
        "480":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "481":
          description: ClientException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ClientException"
        "482":
          description: ServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServerException"
        "483":
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceUnavailableException"
      parameters:
        - name: name
          in: path
          required: true
          description: The name of the cluster to describe.
          schema:
            type: string
  "/clusters/{name}/updates/{updateId}":
    get:
      operationId: DescribeUpdate
      description: <p>Returns descriptive information about an update against your Amazon
        EKS cluster.</p> <p>When the status of the update is
        <code>Succeeded</code>, the update is complete. If an update fails, the
        status is <code>Failed</code>, and an error detail explains the reason
        for the failure.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeUpdateResponse"
        "480":
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterException"
        "481":
          description: ClientException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ClientException"
        "482":
          description: ServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServerException"
        "483":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
      parameters:
        - name: name
          in: path
          required: true
          description: The name of the Amazon EKS cluster to update.
          schema:
            type: string
        - name: updateId
          in: path
          required: true
          description: The ID of the update to describe.
          schema:
            type: string
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  "/tags/{resourceArn}":
    get:
      operationId: ListTagsForResource
      description: List the tags for an Amazon EKS resource.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListTagsForResourceResponse"
        "480":
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequestException"
        "481":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
      parameters:
        - name: resourceArn
          in: path
          required: true
          description: The Amazon Resource Name (ARN) that identifies the resource for
            which to list the tags. Currently, the supported resources are
            Amazon EKS clusters.
          schema:
            type: string
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      operationId: TagResource
      description: Associates the specified tags to a resource with the specified
        <code>resourceArn</code>. If existing tags on a resource are not
        specified in the request parameters, they are not changed. When a
        resource is deleted, the tags associated with that resource are deleted
        as well.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TagResourceResponse"
        "480":
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequestException"
        "481":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
      parameters:
        - name: resourceArn
          in: path
          required: true
          description: The Amazon Resource Name (ARN) of the resource to which to add tags.
            Currently, the supported resources are Amazon EKS clusters.
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - tags
              properties:
                tags:
                  description: The tags to add to the resource. A tag is an array of
                    key-value pairs.
                  type: object
                  minProperties: 1
                  maxProperties: 50
                  additionalProperties:
                    $ref: "#/components/schemas/TagValue"
        required: true
  "/clusters/{name}/updates":
    get:
      operationId: ListUpdates
      description: Lists the updates associated with an Amazon EKS cluster in your AWS
        account, in the specified Region.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListUpdatesResponse"
        "480":
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterException"
        "481":
          description: ClientException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ClientException"
        "482":
          description: ServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServerException"
        "483":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
      parameters:
        - name: name
          in: path
          required: true
          description: The name of the Amazon EKS cluster to list updates for.
          schema:
            type: string
        - name: nextToken
          in: query
          required: false
          description: The <code>nextToken</code> value returned from a previous paginated
            <code>ListUpdates</code> request where <code>maxResults</code> was
            used and the results exceeded the value of that parameter.
            Pagination continues from the end of the previous results that
            returned the <code>nextToken</code> value.
          schema:
            type: string
        - name: maxResults
          in: query
          required: false
          description: The maximum number of update results returned by
            <code>ListUpdates</code> in paginated output. When you use this
            parameter, <code>ListUpdates</code> returns only
            <code>maxResults</code> results in a single page along with a
            <code>nextToken</code> response element. You can see the remaining
            results of the initial request by sending another
            <code>ListUpdates</code> request with the returned
            <code>nextToken</code> value. This value can be between 1 and 100.
            If you don't use this parameter, <code>ListUpdates</code> returns up
            to 100 results and a <code>nextToken</code> value if applicable.
          schema:
            type: integer
            minimum: 1
            maximum: 100
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      operationId: UpdateClusterVersion
      description: <p>Updates an Amazon EKS cluster to the specified Kubernetes version.
        Your cluster continues to function during the update. The response
        output includes an update ID that you can use to track the status of
        your cluster update with the <a>DescribeUpdate</a> API operation.</p>
        <p>Cluster updates are asynchronous, and they should finish within a few
        minutes. During an update, the cluster status moves to
        <code>UPDATING</code> (this status transition is eventually consistent).
        When the update is complete (either <code>Failed</code> or
        <code>Successful</code>), the cluster status moves to
        <code>Active</code>.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateClusterVersionResponse"
        "480":
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterException"
        "481":
          description: ClientException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ClientException"
        "482":
          description: ServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServerException"
        "483":
          description: ResourceInUseException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceInUseException"
        "484":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "485":
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRequestException"
      parameters:
        - name: name
          in: path
          required: true
          description: The name of the Amazon EKS cluster to update.
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - version
              properties:
                version:
                  description: The desired Kubernetes version following a successful update.
                  type: string
                clientRequestToken:
                  description: Unique, case-sensitive identifier that you provide to ensure
                    the idempotency of the request.
                  type: string
        required: true
  "/tags/{resourceArn}#tagKeys":
    delete:
      operationId: UntagResource
      description: Deletes specified tags from a resource.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UntagResourceResponse"
        "480":
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequestException"
        "481":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
      parameters:
        - name: resourceArn
          in: path
          required: true
          description: The Amazon Resource Name (ARN) of the resource from which to delete
            tags. Currently, the supported resources are Amazon EKS clusters.
          schema:
            type: string
        - name: tagKeys
          in: query
          required: true
          description: The keys of the tags to be removed.
          schema:
            type: array
            items:
              type: string
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  "/clusters/{name}/update-config":
    post:
      operationId: UpdateClusterConfig
      description: <p>Updates an Amazon EKS cluster configuration. Your cluster continues
        to function during the update. The response output includes an update ID
        that you can use to track the status of your cluster update with the
        <a>DescribeUpdate</a> API operation.</p> <p>You can use this API
        operation to enable or disable exporting the Kubernetes control plane
        logs for your cluster to CloudWatch Logs. By default, cluster control
        plane logs aren't exported to CloudWatch Logs. For more information, see
        <a
        href="https://docs.aws.amazon.com/eks/latest/userguide/control-plane-logs.html">Amazon
        EKS Cluster Control Plane Logs</a> in the <i> <i>Amazon EKS User
        Guide</i> </i>.</p> <note> <p>CloudWatch Logs ingestion, archive
        storage, and data scanning rates apply to exported control plane logs.
        For more information, see <a
        href="http://aws.amazon.com/cloudwatch/pricing/">Amazon CloudWatch
        Pricing</a>.</p> </note> <p>You can also use this API operation to
        enable or disable public and private access to your cluster's Kubernetes
        API server endpoint. By default, public access is enabled, and private
        access is disabled. For more information, see <a
        href="https://docs.aws.amazon.com/eks/latest/userguide/cluster-endpoint.html">Amazon
        EKS Cluster Endpoint Access Control</a> in the <i> <i>Amazon EKS User
        Guide</i> </i>. </p> <important> <p>At this time, you can not update the
        subnets or security group IDs for an existing cluster.</p> </important>
        <p>Cluster updates are asynchronous, and they should finish within a few
        minutes. During an update, the cluster status moves to
        <code>UPDATING</code> (this status transition is eventually consistent).
        When the update is complete (either <code>Failed</code> or
        <code>Successful</code>), the cluster status moves to
        <code>Active</code>.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateClusterConfigResponse"
        "480":
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterException"
        "481":
          description: ClientException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ClientException"
        "482":
          description: ServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServerException"
        "483":
          description: ResourceInUseException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceInUseException"
        "484":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "485":
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRequestException"
      parameters:
        - name: name
          in: path
          required: true
          description: The name of the Amazon EKS cluster to update.
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                resourcesVpcConfig:
                  description: An object representing the VPC configuration to use for an
                    Amazon EKS cluster.
                  type: object
                  properties:
                    subnetIds:
                      $ref: "#/components/schemas/StringList"
                    securityGroupIds:
                      $ref: "#/components/schemas/StringList"
                    endpointPublicAccess:
                      $ref: "#/components/schemas/BoxedBoolean"
                    endpointPrivateAccess:
                      $ref: "#/components/schemas/BoxedBoolean"
                logging:
                  description: An object representing the logging configuration for
                    resources in your cluster.
                  type: object
                  properties:
                    clusterLogging:
                      $ref: "#/components/schemas/LogSetups"
                clientRequestToken:
                  description: Unique, case-sensitive identifier that you provide to ensure
                    the idempotency of the request.
                  type: string
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
servers:
  - url: http://eks.{region}.amazonaws.com
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-south-1
          - sa-east-1
        default: us-east-1
    description: The Amazon EKS multi-region endpoint
  - url: https://eks.{region}.amazonaws.com
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-south-1
          - sa-east-1
        default: us-east-1
    description: The Amazon EKS multi-region endpoint
  - url: http://eks.{region}.amazonaws.com.cn
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The Amazon EKS endpoint for China (Beijing) and China (Ningxia)
  - url: https://eks.{region}.amazonaws.com.cn
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The Amazon EKS endpoint for China (Beijing) and China (Ningxia)
components:
  parameters:
    X-Amz-Content-Sha256:
      name: X-Amz-Content-Sha256
      in: header
      required: false
      schema:
        type: string
    X-Amz-Date:
      name: X-Amz-Date
      in: header
      required: false
      schema:
        type: string
    X-Amz-Algorithm:
      name: X-Amz-Algorithm
      in: header
      required: false
      schema:
        type: string
    X-Amz-Credential:
      name: X-Amz-Credential
      in: header
      required: false
      schema:
        type: string
    X-Amz-Security-Token:
      name: X-Amz-Security-Token
      in: header
      required: false
      schema:
        type: string
    X-Amz-Signature:
      name: X-Amz-Signature
      in: header
      required: false
      schema:
        type: string
    X-Amz-SignedHeaders:
      name: X-Amz-SignedHeaders
      in: header
      required: false
      schema:
        type: string
  securitySchemes:
    hmac:
      type: apiKey
      name: Authorization
      in: header
      description: Amazon Signature authorization v4
      x-amazon-apigateway-authtype: awsSigv4
  schemas:
    CreateClusterResponse:
      type: object
      example: {}
      properties:
        cluster:
          $ref: "#/components/schemas/Cluster"
    StringList:
      type: array
      items:
        $ref: "#/components/schemas/String"
    BoxedBoolean:
      type: boolean
    LogSetups:
      type: array
      items:
        $ref: "#/components/schemas/LogSetup"
    TagValue:
      type: string
      maxLength: 256
    ResourceInUseException: {}
    ResourceLimitExceededException: {}
    InvalidParameterException: {}
    ClientException: {}
    ServerException: {}
    ServiceUnavailableException: {}
    UnsupportedAvailabilityZoneException: {}
    DeleteClusterResponse:
      type: object
      example: {}
      properties:
        cluster:
          $ref: "#/components/schemas/Cluster"
    ResourceNotFoundException: {}
    DescribeClusterResponse:
      type: object
      example:
        cluster:
          version: "1.10"
          name: devel
          arn: arn:aws:eks:us-west-2:012345678910:cluster/devel
          certificateAuthority:
            data: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUN5RENDQWJDZ0F3SUJBZ0lCQURBTkJna3Foa2lHOXcwQkFRc0ZBREFWTVJNd0VRWURWUVFERXdwcmRXSmwKY201bGRHVnpNQjRYRFRFNE1EVXpNVEl6TVRFek1Wb1hEVEk0TURVeU9ESXpNVEV6TVZvd0ZURVRNQkVHQTFVRQpBeE1LYTNWaVpYSnVaWFJsY3pDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTTZWCjVUaG4rdFcySm9Xa2hQMzRlVUZMNitaRXJOZGIvWVdrTmtDdWNGS2RaaXl2TjlMVmdvUmV2MjlFVFZlN1ZGbSsKUTJ3ZURyRXJiQyt0dVlibkFuN1ZLYmE3ay9hb1BHekZMdmVnb0t6b0M1N2NUdGVwZzRIazRlK2tIWHNaME10MApyb3NzcjhFM1ROeExETnNJTThGL1cwdjhsTGNCbWRPcjQyV2VuTjFHZXJnaDNSZ2wzR3JIazBnNTU0SjFWenJZCm9hTi8zODFUczlOTFF2QTBXb0xIcjBFRlZpTFdSZEoyZ3lXaC9ybDVyOFNDOHZaQXg1YW1BU0hVd01aTFpWRC8KTDBpOW4wRVM0MkpVdzQyQmxHOEdpd3NhTkJWV3lUTHZKclNhRXlDSHFtVVZaUTFDZkFXUjl0L3JleVVOVXM3TApWV1FqM3BFbk9RMitMSWJrc0RzQ0F3RUFBYU1qTUNFd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCCi93UUZNQU1CQWY4d0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFNZ3RsQ1dIQ2U2YzVHMXl2YlFTS0Q4K2hUalkKSm1NSG56L2EvRGt0WG9YUjFVQzIrZUgzT1BZWmVjRVZZZHVaSlZCckNNQ2VWR0ZkeWdBYlNLc1FxWDg0S2RXbAp1MU5QaERDSmEyRHliN2pVMUV6VThTQjFGZUZ5ZFE3a0hNS1E1blpBRVFQOTY4S01hSGUrSm0yQ2x1UFJWbEJVCjF4WlhTS1gzTVZ0K1Q0SU1EV2d6c3JRSjVuQkRjdEtLcUZtM3pKdVVubHo5ZEpVckdscEltMjVJWXJDckxYUFgKWkUwRUtRNWEzMHhkVWNrTHRGQkQrOEtBdFdqSS9yZUZPNzM1YnBMdVoyOTBaNm42QlF3elRrS0p4cnhVc3QvOAppNGsxcnlsaUdWMm5SSjBUYjNORkczNHgrYWdzYTRoSTFPbU90TFM0TmgvRXJxT3lIUXNDc2hEQUtKUT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
          createdAt: 1527807879.988
          endpoint: https://A0DCCD80A04F01705DD065655C30CC3D.yl4.us-west-2.eks.amazonaws.com
          resourcesVpcConfig:
            securityGroupIds:
              - sg-6979fe18
            subnetIds:
              - subnet-6782e71e
              - subnet-e7e761ac
            vpcId: vpc-950809ec
          roleArn: arn:aws:iam::012345678910:role/eks-service-role-AWSServiceRoleForAmazonEKS-J7ONKE3BQ4PI
          status: ACTIVE
      properties:
        cluster:
          $ref: "#/components/schemas/Cluster"
    DescribeUpdateResponse:
      type: object
      properties:
        update:
          $ref: "#/components/schemas/Update"
    ListClustersResponse:
      type: object
      example:
        clusters:
          - devel
          - prod
      properties:
        clusters:
          $ref: "#/components/schemas/StringList"
        nextToken:
          $ref: "#/components/schemas/String"
    ListTagsForResourceResponse:
      type: object
      properties:
        tags:
          $ref: "#/components/schemas/TagMap"
    BadRequestException: {}
    NotFoundException: {}
    ListUpdatesResponse:
      type: object
      properties:
        updateIds:
          $ref: "#/components/schemas/StringList"
        nextToken:
          $ref: "#/components/schemas/String"
    TagResourceResponse:
      type: object
      properties: {}
    UntagResourceResponse:
      type: object
      properties: {}
    TagKey:
      type: string
      minLength: 1
      maxLength: 128
    UpdateClusterConfigResponse:
      type: object
      properties:
        update:
          $ref: "#/components/schemas/Update"
    InvalidRequestException: {}
    UpdateClusterVersionResponse:
      type: object
      properties:
        update:
          $ref: "#/components/schemas/Update"
    Boolean:
      type: boolean
    String:
      type: string
    Certificate:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/String"
      description: An object representing the <code>certificate-authority-data</code> for
        your cluster.
    Timestamp:
      type: string
      format: date-time
    VpcConfigResponse:
      type: object
      properties:
        subnetIds:
          $ref: "#/components/schemas/StringList"
        securityGroupIds:
          $ref: "#/components/schemas/StringList"
        vpcId:
          $ref: "#/components/schemas/String"
        endpointPublicAccess:
          $ref: "#/components/schemas/Boolean"
        endpointPrivateAccess:
          $ref: "#/components/schemas/Boolean"
      description: An object representing an Amazon EKS cluster VPC configuration response.
    Logging:
      type: object
      properties:
        clusterLogging:
          $ref: "#/components/schemas/LogSetups"
      description: An object representing the logging configuration for resources in your
        cluster.
    Identity:
      type: object
      properties:
        oidc:
          $ref: "#/components/schemas/OIDC"
      description: An object representing an identity provider for authentication
        credentials.
    ClusterStatus:
      type: string
      enum:
        - CREATING
        - ACTIVE
        - DELETING
        - FAILED
    TagMap:
      type: object
      minProperties: 1
      maxProperties: 50
      additionalProperties:
        $ref: "#/components/schemas/TagValue"
    Cluster:
      type: object
      properties:
        name:
          $ref: "#/components/schemas/String"
        arn:
          $ref: "#/components/schemas/String"
        createdAt:
          $ref: "#/components/schemas/Timestamp"
        version:
          $ref: "#/components/schemas/String"
        endpoint:
          $ref: "#/components/schemas/String"
        roleArn:
          $ref: "#/components/schemas/String"
        resourcesVpcConfig:
          $ref: "#/components/schemas/VpcConfigResponse"
        logging:
          $ref: "#/components/schemas/Logging"
        identity:
          $ref: "#/components/schemas/Identity"
        status:
          $ref: "#/components/schemas/ClusterStatus"
        certificateAuthority:
          $ref: "#/components/schemas/Certificate"
        clientRequestToken:
          $ref: "#/components/schemas/String"
        platformVersion:
          $ref: "#/components/schemas/String"
        tags:
          $ref: "#/components/schemas/TagMap"
      description: An object representing an Amazon EKS cluster.
    ClusterName:
      type: string
      pattern: ^[0-9A-Za-z][A-Za-z0-9\-_]*
      minLength: 1
      maxLength: 100
    VpcConfigRequest:
      type: object
      properties:
        subnetIds:
          $ref: "#/components/schemas/StringList"
        securityGroupIds:
          $ref: "#/components/schemas/StringList"
        endpointPublicAccess:
          $ref: "#/components/schemas/BoxedBoolean"
        endpointPrivateAccess:
          $ref: "#/components/schemas/BoxedBoolean"
      description: An object representing the VPC configuration to use for an Amazon EKS
        cluster.
    CreateClusterRequest:
      type: object
      required:
        - name
        - roleArn
        - resourcesVpcConfig
      properties:
        name:
          $ref: "#/components/schemas/ClusterName"
        version:
          $ref: "#/components/schemas/String"
        roleArn:
          $ref: "#/components/schemas/String"
        resourcesVpcConfig:
          $ref: "#/components/schemas/VpcConfigRequest"
        logging:
          $ref: "#/components/schemas/Logging"
        clientRequestToken:
          $ref: "#/components/schemas/String"
        tags:
          $ref: "#/components/schemas/TagMap"
    DeleteClusterRequest:
      type: object
      properties: {}
    DescribeClusterRequest:
      type: object
      properties: {}
    DescribeUpdateRequest:
      type: object
      properties: {}
    Update:
      type: object
      properties:
        id:
          $ref: "#/components/schemas/String"
        status:
          $ref: "#/components/schemas/UpdateStatus"
        type:
          $ref: "#/components/schemas/UpdateType"
        params:
          $ref: "#/components/schemas/UpdateParams"
        createdAt:
          $ref: "#/components/schemas/Timestamp"
        errors:
          $ref: "#/components/schemas/ErrorDetails"
      description: An object representing an asynchronous update.
    ErrorCode:
      type: string
      enum:
        - SubnetNotFound
        - SecurityGroupNotFound
        - EniLimitReached
        - IpNotAvailable
        - AccessDenied
        - OperationNotPermitted
        - VpcIdNotFound
        - Unknown
    ErrorDetail:
      type: object
      properties:
        errorCode:
          $ref: "#/components/schemas/ErrorCode"
        errorMessage:
          $ref: "#/components/schemas/String"
        resourceIds:
          $ref: "#/components/schemas/StringList"
      description: An object representing an error when an asynchronous operation fails.
    ErrorDetails:
      type: array
      items:
        $ref: "#/components/schemas/ErrorDetail"
    OIDC:
      type: object
      properties:
        issuer:
          $ref: "#/components/schemas/String"
      description: An object representing the <a href="https://openid.net/connect/">OpenID
        Connect</a> identity provider information for the cluster.
    ListClustersRequestMaxResults:
      type: integer
      minimum: 1
      maximum: 100
    ListClustersRequest:
      type: object
      properties: {}
    ListTagsForResourceRequest:
      type: object
      properties: {}
    ListUpdatesRequestMaxResults:
      type: integer
      minimum: 1
      maximum: 100
    ListUpdatesRequest:
      type: object
      properties: {}
    LogTypes:
      type: array
      items:
        $ref: "#/components/schemas/LogType"
    LogSetup:
      type: object
      properties:
        types:
          $ref: "#/components/schemas/LogTypes"
        enabled:
          $ref: "#/components/schemas/BoxedBoolean"
      description: An object representing the enabled or disabled Kubernetes control plane
        logs for your cluster.
    LogType:
      type: string
      enum:
        - api
        - audit
        - authenticator
        - controllerManager
        - scheduler
    TagKeyList:
      type: array
      items:
        $ref: "#/components/schemas/TagKey"
      minItems: 1
      maxItems: 50
    TagResourceRequest:
      type: object
      required:
        - tags
      properties:
        tags:
          $ref: "#/components/schemas/TagMap"
    UntagResourceRequest:
      type: object
      properties: {}
    UpdateStatus:
      type: string
      enum:
        - InProgress
        - Failed
        - Cancelled
        - Successful
    UpdateType:
      type: string
      enum:
        - VersionUpdate
        - EndpointAccessUpdate
        - LoggingUpdate
    UpdateParams:
      type: array
      items:
        $ref: "#/components/schemas/UpdateParam"
    UpdateClusterConfigRequest:
      type: object
      properties:
        resourcesVpcConfig:
          $ref: "#/components/schemas/VpcConfigRequest"
        logging:
          $ref: "#/components/schemas/Logging"
        clientRequestToken:
          $ref: "#/components/schemas/String"
    UpdateClusterVersionRequest:
      type: object
      required:
        - version
      properties:
        version:
          $ref: "#/components/schemas/String"
        clientRequestToken:
          $ref: "#/components/schemas/String"
    UpdateParamType:
      type: string
      enum:
        - Version
        - PlatformVersion
        - EndpointPrivateAccess
        - EndpointPublicAccess
        - ClusterLogging
    UpdateParam:
      type: object
      properties:
        type:
          $ref: "#/components/schemas/UpdateParamType"
        value:
          $ref: "#/components/schemas/String"
      description: An object representing the details of an update request.
