openapi: 3.0.0
info:
  version: 2014-11-01
  x-release: v4
  title: AWS Key Management Service
  description: <fullname>AWS Key Management Service</fullname> <p>AWS Key Management
    Service (AWS KMS) is an encryption and key management web service. This
    guide describes the AWS KMS operations that you can call programmatically.
    For general information about AWS KMS, see the <a
    href="https://docs.aws.amazon.com/kms/latest/developerguide/"> <i>AWS Key
    Management Service Developer Guide</i> </a>.</p> <note> <p>AWS provides SDKs
    that consist of libraries and sample code for various programming languages
    and platforms (Java, Ruby, .Net, macOS, Android, etc.). The SDKs provide a
    convenient way to create programmatic access to AWS KMS and other AWS
    services. For example, the SDKs take care of tasks such as signing requests
    (see below), managing errors, and retrying requests automatically. For more
    information about the AWS SDKs, including how to download and install them,
    see <a href="http://aws.amazon.com/tools/">Tools for Amazon Web
    Services</a>.</p> </note> <p>We recommend that you use the AWS SDKs to make
    programmatic API calls to AWS KMS.</p> <p>Clients must support TLS
    (Transport Layer Security) 1.0. We recommend TLS 1.2. Clients must also
    support cipher suites with Perfect Forward Secrecy (PFS) such as Ephemeral
    Diffie-Hellman (DHE) or Elliptic Curve Ephemeral Diffie-Hellman (ECDHE).
    Most modern systems such as Java 7 and later support these modes.</p> <p>
    <b>Signing Requests</b> </p> <p>Requests must be signed by using an access
    key ID and a secret access key. We strongly recommend that you <i>do not</i>
    use your AWS account (root) access key ID and secret key for everyday work
    with AWS KMS. Instead, use the access key ID and secret access key for an
    IAM user. You can also use the AWS Security Token Service to generate
    temporary security credentials that you can use to sign requests.</p> <p>All
    AWS KMS operations require <a
    href="https://docs.aws.amazon.com/general/latest/gr/signature-version-4.html">Signature
    Version 4</a>.</p> <p> <b>Logging API Requests</b> </p> <p>AWS KMS supports
    AWS CloudTrail, a service that logs AWS API calls and related events for
    your AWS account and delivers them to an Amazon S3 bucket that you specify.
    By using the information collected by CloudTrail, you can determine what
    requests were made to AWS KMS, who made the request, when it was made, and
    so on. To learn more about CloudTrail, including how to turn it on and find
    your log files, see the <a
    href="https://docs.aws.amazon.com/awscloudtrail/latest/userguide/">AWS
    CloudTrail User Guide</a>.</p> <p> <b>Additional Resources</b> </p> <p>For
    more information about credentials and request signing, see the
    following:</p> <ul> <li> <p> <a
    href="https://docs.aws.amazon.com/general/latest/gr/aws-security-credentials.html">AWS
    Security Credentials</a> - This topic provides general information about the
    types of credentials used for accessing AWS.</p> </li> <li> <p> <a
    href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_temp.html">Temporary
    Security Credentials</a> - This section of the <i>IAM User Guide</i>
    describes how to create and use temporary security credentials.</p> </li>
    <li> <p> <a
    href="https://docs.aws.amazon.com/general/latest/gr/signature-version-4.html">Signature
    Version 4 Signing Process</a> - This set of topics walks you through the
    process of signing a request using an access key ID and a secret access
    key.</p> </li> </ul> <p> <b>Commonly Used API Operations</b> </p> <p>Of the
    API operations discussed in this guide, the following will prove the most
    useful for most applications. You will likely perform operations other than
    these, such as creating keys and assigning policies, by using the
    console.</p> <ul> <li> <p> <a>Encrypt</a> </p> </li> <li> <p> <a>Decrypt</a>
    </p> </li> <li> <p> <a>GenerateDataKey</a> </p> </li> <li> <p>
    <a>GenerateDataKeyWithoutPlaintext</a> </p> </li> </ul>
  x-logo:
    url: https://twitter.com/awscloud/profile_image?size=original
    backgroundColor: "#FFFFFF"
  termsOfService: https://aws.amazon.com/service-terms/
  contact:
    name: Mike Ralphson
    email: mike.ralphson@gmail.com
    url: https://github.com/mermade/aws2openapi
    x-twitter: PermittedSoc
  license:
    name: Apache 2.0 License
    url: http://www.apache.org/licenses/
  x-providerName: amazonaws.com
  x-serviceName: kms
  x-origin:
    - contentType: application/json
      url: https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/kms-2014-11-01.normal.json
      converter:
        url: https://github.com/mermade/aws2openapi
        version: 1.0.0
      x-apisguru-direct: true
  x-apiClientRegistration:
    url: https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct
  x-apisguru-categories:
    - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: https://docs.aws.amazon.com/kms/
x-hasEquivalentPaths: true
security:
  - hmac: []
paths:
  /#X-Amz-Target=TrentService.CancelKeyDeletion:
    post:
      operationId: CancelKeyDeletion
      description: <p>Cancels the deletion of a customer master key (CMK). When this
        operation is successful, the CMK is set to the <code>Disabled</code>
        state. To enable a CMK, use <a>EnableKey</a>. You cannot perform this
        operation on a CMK in a different AWS account.</p> <p>For more
        information about scheduling and canceling deletion of a CMK, see <a
        href="https://docs.aws.amazon.com/kms/latest/developerguide/deleting-keys.html">Deleting
        Customer Master Keys</a> in the <i>AWS Key Management Service Developer
        Guide</i>.</p> <p>The result of this operation varies with the key state
        of the CMK. For details, see <a
        href="https://docs.aws.amazon.com/kms/latest/developerguide/key-state.html">How
        Key State Affects Use of a Customer Master Key</a> in the <i>AWS Key
        Management Service Developer Guide</i>.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CancelKeyDeletionResponse"
        "480":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "481":
          description: InvalidArnException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidArnException"
        "482":
          description: DependencyTimeoutException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DependencyTimeoutException"
        "483":
          description: KMSInternalException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/KMSInternalException"
        "484":
          description: KMSInvalidStateException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/KMSInvalidStateException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - TrentService.CancelKeyDeletion
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CancelKeyDeletionRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=TrentService.ConnectCustomKeyStore:
    post:
      operationId: ConnectCustomKeyStore
      description: <p>Connects or reconnects a <a
        href="https://docs.aws.amazon.com/kms/latest/developerguide/custom-key-store-overview.html">custom
        key store</a> to its associated AWS CloudHSM cluster.</p> <p>The custom
        key store must be connected before you can create customer master keys
        (CMKs) in the key store or use the CMKs it contains. You can disconnect
        and reconnect a custom key store at any time.</p> <p>To connect a custom
        key store, its associated AWS CloudHSM cluster must have at least one
        active HSM. To get the number of active HSMs in a cluster, use the <a
        href="https://docs.aws.amazon.com/cloudhsm/latest/APIReference/API_DescribeClusters.html">DescribeClusters</a>
        operation. To add HSMs to the cluster, use the <a
        href="https://docs.aws.amazon.com/cloudhsm/latest/APIReference/API_CreateHsm.html">CreateHsm</a>
        operation.</p> <p>The connection process can take an extended amount of
        time to complete; up to 20 minutes. This operation starts the connection
        process, but it does not wait for it to complete. When it succeeds, this
        operation quickly returns an HTTP 200 response and a JSON object with no
        properties. However, this response does not indicate that the custom key
        store is connected. To get the connection state of the custom key store,
        use the <a>DescribeCustomKeyStores</a> operation.</p> <p>During the
        connection process, AWS KMS finds the AWS CloudHSM cluster that is
        associated with the custom key store, creates the connection
        infrastructure, connects to the cluster, logs into the AWS CloudHSM
        client as the <a
        href="https://docs.aws.amazon.com/kms/latest/developerguide/key-store-concepts.html#concept-kmsuser">
        <code>kmsuser</code> crypto user</a> (CU), and rotates its password.</p>
        <p>The <code>ConnectCustomKeyStore</code> operation might fail for
        various reasons. To find the reason, use the
        <a>DescribeCustomKeyStores</a> operation and see the
        <code>ConnectionErrorCode</code> in the response. For help interpreting
        the <code>ConnectionErrorCode</code>, see
        <a>CustomKeyStoresListEntry</a>.</p> <p>To fix the failure, use the
        <a>DisconnectCustomKeyStore</a> operation to disconnect the custom key
        store, correct the error, use the <a>UpdateCustomKeyStore</a> operation
        if necessary, and then use <code>ConnectCustomKeyStore</code> again.</p>
        <p>If you are having trouble connecting or disconnecting a custom key
        store, see <a
        href="https://docs.aws.amazon.com/kms/latest/developerguide/fix-keystore.html">Troubleshooting
        a Custom Key Store</a> in the <i>AWS Key Management Service Developer
        Guide</i>.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConnectCustomKeyStoreResponse"
        "480":
          description: CloudHsmClusterNotActiveException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CloudHsmClusterNotActiveException"
        "481":
          description: CustomKeyStoreInvalidStateException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CustomKeyStoreInvalidStateException"
        "482":
          description: CustomKeyStoreNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CustomKeyStoreNotFoundException"
        "483":
          description: KMSInternalException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/KMSInternalException"
        "484":
          description: CloudHsmClusterInvalidConfigurationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CloudHsmClusterInvalidConfigurationExce\
                  ption"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - TrentService.ConnectCustomKeyStore
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ConnectCustomKeyStoreRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=TrentService.CreateAlias:
    post:
      operationId: CreateAlias
      description: <p>Creates a display name for a customer managed customer master key
        (CMK). You can use an alias to identify a CMK in selected operations,
        such as <a>Encrypt</a> and <a>GenerateDataKey</a>. </p> <p>Each CMK can
        have multiple aliases, but each alias points to only one CMK. The alias
        name must be unique in the AWS account and region. To simplify code that
        runs in multiple regions, use the same alias name, but point it to a
        different CMK in each region. </p> <p>Because an alias is not a property
        of a CMK, you can delete and change the aliases of a CMK without
        affecting the CMK. Also, aliases do not appear in the response from the
        <a>DescribeKey</a> operation. To get the aliases of all CMKs, use the
        <a>ListAliases</a> operation.</p> <p>The alias name must begin with
        <code>alias/</code> followed by a name, such as
        <code>alias/ExampleAlias</code>. It can contain only alphanumeric
        characters, forward slashes (/), underscores (_), and dashes (-). The
        alias name cannot begin with <code>alias/aws/</code>. The
        <code>alias/aws/</code> prefix is reserved for <a
        href="https://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#aws-managed-cmk">AWS
        managed CMKs</a>. </p> <p>The alias and the CMK it is mapped to must be
        in the same AWS account and the same region. You cannot perform this
        operation on an alias in a different AWS account.</p> <p>To map an
        existing alias to a different CMK, call <a>UpdateAlias</a>.</p> <p>The
        result of this operation varies with the key state of the CMK. For
        details, see <a
        href="https://docs.aws.amazon.com/kms/latest/developerguide/key-state.html">How
        Key State Affects Use of a Customer Master Key</a> in the <i>AWS Key
        Management Service Developer Guide</i>.</p>
      responses:
        "200":
          description: Success
        "480":
          description: DependencyTimeoutException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DependencyTimeoutException"
        "481":
          description: AlreadyExistsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AlreadyExistsException"
        "482":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "483":
          description: InvalidAliasNameException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidAliasNameException"
        "484":
          description: KMSInternalException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/KMSInternalException"
        "485":
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
        "486":
          description: KMSInvalidStateException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/KMSInvalidStateException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - TrentService.CreateAlias
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateAliasRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=TrentService.CreateCustomKeyStore:
    post:
      operationId: CreateCustomKeyStore
      description: <p>Creates a <a
        href="https://docs.aws.amazon.com/kms/latest/developerguide/custom-key-store-overview.html">custom
        key store</a> that is associated with an <a
        href="https://docs.aws.amazon.com/cloudhsm/latest/userguide/clusters.html">AWS
        CloudHSM cluster</a> that you own and manage.</p> <p>This operation is
        part of the <a
        href="https://docs.aws.amazon.com/kms/latest/developerguide/custom-key-store-overview.html">Custom
        Key Store feature</a> feature in AWS KMS, which combines the convenience
        and extensive integration of AWS KMS with the isolation and control of a
        single-tenant key store.</p> <p>Before you create the custom key store,
        you must assemble the required elements, including an AWS CloudHSM
        cluster that fulfills the requirements for a custom key store. For
        details about the required elements, see <a
        href="https://docs.aws.amazon.com/kms/latest/developerguide/create-keystore.html#before-keystore">Assemble
        the Prerequisites</a> in the <i>AWS Key Management Service Developer
        Guide</i>.</p> <p>When the operation completes successfully, it returns
        the ID of the new custom key store. Before you can use your new custom
        key store, you need to use the <a>ConnectCustomKeyStore</a> operation to
        connect the new key store to its AWS CloudHSM cluster. Even if you are
        not going to use your custom key store immediately, you might want to
        connect it to verify that all settings are correct and then disconnect
        it until you are ready to use it.</p> <p>For help with failures, see <a
        href="https://docs.aws.amazon.com/kms/latest/developerguide/fix-keystore.html">Troubleshooting
        a Custom Key Store</a> in the <i>AWS Key Management Service Developer
        Guide</i>.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateCustomKeyStoreResponse"
        "480":
          description: CloudHsmClusterInUseException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CloudHsmClusterInUseException"
        "481":
          description: CustomKeyStoreNameInUseException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CustomKeyStoreNameInUseException"
        "482":
          description: CloudHsmClusterNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CloudHsmClusterNotFoundException"
        "483":
          description: KMSInternalException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/KMSInternalException"
        "484":
          description: CloudHsmClusterNotActiveException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CloudHsmClusterNotActiveException"
        "485":
          description: IncorrectTrustAnchorException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/IncorrectTrustAnchorException"
        "486":
          description: CloudHsmClusterInvalidConfigurationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CloudHsmClusterInvalidConfigurationExce\
                  ption"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - TrentService.CreateCustomKeyStore
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateCustomKeyStoreRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=TrentService.CreateGrant:
    post:
      operationId: CreateGrant
      description: <p>Adds a grant to a customer master key (CMK). The grant allows the
        grantee principal to use the CMK when the conditions specified in the
        grant are met. When setting permissions, grants are an alternative to
        key policies. </p> <p>To create a grant that allows a cryptographic
        operation only when the encryption context in the operation request
        matches or includes a specified encryption context, use the
        <code>Constraints</code> parameter. For details, see
        <a>GrantConstraints</a>.</p> <p>To perform this operation on a CMK in a
        different AWS account, specify the key ARN in the value of the
        <code>KeyId</code> parameter. For more information about grants, see <a
        href="https://docs.aws.amazon.com/kms/latest/developerguide/grants.html">Grants</a>
        in the <i> <i>AWS Key Management Service Developer Guide</i> </i>.</p>
        <p>The result of this operation varies with the key state of the CMK.
        For details, see <a
        href="https://docs.aws.amazon.com/kms/latest/developerguide/key-state.html">How
        Key State Affects Use of a Customer Master Key</a> in the <i>AWS Key
        Management Service Developer Guide</i>.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateGrantResponse"
        "480":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "481":
          description: DisabledException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DisabledException"
        "482":
          description: DependencyTimeoutException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DependencyTimeoutException"
        "483":
          description: InvalidArnException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidArnException"
        "484":
          description: KMSInternalException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/KMSInternalException"
        "485":
          description: InvalidGrantTokenException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidGrantTokenException"
        "486":
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
        "487":
          description: KMSInvalidStateException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/KMSInvalidStateException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - TrentService.CreateGrant
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateGrantRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=TrentService.CreateKey:
    post:
      operationId: CreateKey
      description: <p>Creates a customer managed <a
        href="https://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#master_keys">customer
        master key</a> (CMK) in your AWS account.</p> <p>You can use a CMK to
        encrypt small amounts of data (up to 4096 bytes) directly. But CMKs are
        more commonly used to encrypt the <a
        href="https://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#data-keys">data
        keys</a> that are used to encrypt data.</p> <p>To create a CMK for
        imported key material, use the <code>Origin</code> parameter with a
        value of <code>EXTERNAL</code>.</p> <p>To create a CMK in a <a
        href="https://docs.aws.amazon.com/kms/latest/developerguide/custom-key-store-overview.html">custom
        key store</a>, use the <code>CustomKeyStoreId</code> parameter to
        specify the custom key store. You must also use the <code>Origin</code>
        parameter with a value of <code>AWS_CLOUDHSM</code>. The AWS CloudHSM
        cluster that is associated with the custom key store must have at least
        two active HSMs in different Availability Zones in the AWS Region.</p>
        <p>You cannot use this operation to create a CMK in a different AWS
        account.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateKeyResponse"
        "480":
          description: MalformedPolicyDocumentException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MalformedPolicyDocumentException"
        "481":
          description: DependencyTimeoutException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DependencyTimeoutException"
        "482":
          description: InvalidArnException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidArnException"
        "483":
          description: UnsupportedOperationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnsupportedOperationException"
        "484":
          description: KMSInternalException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/KMSInternalException"
        "485":
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
        "486":
          description: TagException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TagException"
        "487":
          description: CustomKeyStoreNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CustomKeyStoreNotFoundException"
        "488":
          description: CustomKeyStoreInvalidStateException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CustomKeyStoreInvalidStateException"
        "489":
          description: CloudHsmClusterInvalidConfigurationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CloudHsmClusterInvalidConfigurationExce\
                  ption"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - TrentService.CreateKey
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateKeyRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=TrentService.Decrypt:
    post:
      operationId: Decrypt
      description: <p>Decrypts ciphertext. Ciphertext is plaintext that has been previously
        encrypted by using any of the following operations:</p> <ul> <li> <p>
        <a>GenerateDataKey</a> </p> </li> <li> <p>
        <a>GenerateDataKeyWithoutPlaintext</a> </p> </li> <li> <p>
        <a>Encrypt</a> </p> </li> </ul> <p>Whenever possible, use key policies
        to give users permission to call the Decrypt operation on the CMK,
        instead of IAM policies. Otherwise, you might create an IAM user policy
        that gives the user Decrypt permission on all CMKs. This user could
        decrypt ciphertext that was encrypted by CMKs in other accounts if the
        key policy for the cross-account CMK permits it. If you must use an IAM
        policy for <code>Decrypt</code> permissions, limit the user to
        particular CMKs or particular trusted accounts.</p> <p>The result of
        this operation varies with the key state of the CMK. For details, see <a
        href="https://docs.aws.amazon.com/kms/latest/developerguide/key-state.html">How
        Key State Affects Use of a Customer Master Key</a> in the <i>AWS Key
        Management Service Developer Guide</i>.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DecryptResponse"
        "480":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "481":
          description: DisabledException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DisabledException"
        "482":
          description: InvalidCiphertextException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidCiphertextException"
        "483":
          description: KeyUnavailableException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/KeyUnavailableException"
        "484":
          description: DependencyTimeoutException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DependencyTimeoutException"
        "485":
          description: InvalidGrantTokenException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidGrantTokenException"
        "486":
          description: KMSInternalException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/KMSInternalException"
        "487":
          description: KMSInvalidStateException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/KMSInvalidStateException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - TrentService.Decrypt
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DecryptRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=TrentService.DeleteAlias:
    post:
      operationId: DeleteAlias
      description: <p>Deletes the specified alias. You cannot perform this operation on an
        alias in a different AWS account. </p> <p>Because an alias is not a
        property of a CMK, you can delete and change the aliases of a CMK
        without affecting the CMK. Also, aliases do not appear in the response
        from the <a>DescribeKey</a> operation. To get the aliases of all CMKs,
        use the <a>ListAliases</a> operation. </p> <p>Each CMK can have multiple
        aliases. To change the alias of a CMK, use <a>DeleteAlias</a> to delete
        the current alias and <a>CreateAlias</a> to create a new alias. To
        associate an existing alias with a different customer master key (CMK),
        call <a>UpdateAlias</a>.</p>
      responses:
        "200":
          description: Success
        "480":
          description: DependencyTimeoutException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DependencyTimeoutException"
        "481":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "482":
          description: KMSInternalException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/KMSInternalException"
        "483":
          description: KMSInvalidStateException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/KMSInvalidStateException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - TrentService.DeleteAlias
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeleteAliasRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=TrentService.DeleteCustomKeyStore:
    post:
      operationId: DeleteCustomKeyStore
      description: <p>Deletes a <a
        href="https://docs.aws.amazon.com/kms/latest/developerguide/custom-key-store-overview.html">custom
        key store</a>. This operation does not delete the AWS CloudHSM cluster
        that is associated with the custom key store, or affect any users or
        keys in the cluster.</p> <p>The custom key store that you delete cannot
        contain any AWS KMS <a
        href="https://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#master_keys">customer
        master keys (CMKs)</a>. Before deleting the key store, verify that you
        will never need to use any of the CMKs in the key store for any
        cryptographic operations. Then, use <a>ScheduleKeyDeletion</a> to delete
        the AWS KMS customer master keys (CMKs) from the key store. When the
        scheduled waiting period expires, the <code>ScheduleKeyDeletion</code>
        operation deletes the CMKs. Then it makes a best effort to delete the
        key material from the associated cluster. However, you might need to
        manually <a
        href="https://docs.aws.amazon.com/kms/latest/developerguide/fix-keystore.html#fix-keystore-orphaned-key">delete
        the orphaned key material</a> from the cluster and its backups.</p>
        <p>After all CMKs are deleted from AWS KMS, use
        <a>DisconnectCustomKeyStore</a> to disconnect the key store from AWS
        KMS. Then, you can delete the custom key store.</p> <p>Instead of
        deleting the custom key store, consider using
        <a>DisconnectCustomKeyStore</a> to disconnect it from AWS KMS. While the
        key store is disconnected, you cannot create or use the CMKs in the key
        store. But, you do not need to delete CMKs and you can reconnect a
        disconnected custom key store at any time.</p> <p>If the operation
        succeeds, it returns a JSON object with no properties.</p> <p>This
        operation is part of the <a
        href="https://docs.aws.amazon.com/kms/latest/developerguide/custom-key-store-overview.html">Custom
        Key Store feature</a> feature in AWS KMS, which combines the convenience
        and extensive integration of AWS KMS with the isolation and control of a
        single-tenant key store.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteCustomKeyStoreResponse"
        "480":
          description: CustomKeyStoreHasCMKsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CustomKeyStoreHasCMKsException"
        "481":
          description: CustomKeyStoreInvalidStateException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CustomKeyStoreInvalidStateException"
        "482":
          description: CustomKeyStoreNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CustomKeyStoreNotFoundException"
        "483":
          description: KMSInternalException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/KMSInternalException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - TrentService.DeleteCustomKeyStore
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeleteCustomKeyStoreRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=TrentService.DeleteImportedKeyMaterial:
    post:
      operationId: DeleteImportedKeyMaterial
      description: <p>Deletes key material that you previously imported. This operation
        makes the specified customer master key (CMK) unusable. For more
        information about importing key material into AWS KMS, see <a
        href="https://docs.aws.amazon.com/kms/latest/developerguide/importing-keys.html">Importing
        Key Material</a> in the <i>AWS Key Management Service Developer
        Guide</i>. You cannot perform this operation on a CMK in a different AWS
        account.</p> <p>When the specified CMK is in the
        <code>PendingDeletion</code> state, this operation does not change the
        CMK's state. Otherwise, it changes the CMK's state to
        <code>PendingImport</code>.</p> <p>After you delete key material, you
        can use <a>ImportKeyMaterial</a> to reimport the same key material into
        the CMK.</p> <p>The result of this operation varies with the key state
        of the CMK. For details, see <a
        href="https://docs.aws.amazon.com/kms/latest/developerguide/key-state.html">How
        Key State Affects Use of a Customer Master Key</a> in the <i>AWS Key
        Management Service Developer Guide</i>.</p>
      responses:
        "200":
          description: Success
        "480":
          description: InvalidArnException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidArnException"
        "481":
          description: UnsupportedOperationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnsupportedOperationException"
        "482":
          description: DependencyTimeoutException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DependencyTimeoutException"
        "483":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "484":
          description: KMSInternalException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/KMSInternalException"
        "485":
          description: KMSInvalidStateException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/KMSInvalidStateException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - TrentService.DeleteImportedKeyMaterial
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeleteImportedKeyMaterialRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=TrentService.DescribeCustomKeyStores:
    post:
      operationId: DescribeCustomKeyStores
      description: <p>Gets information about <a
        href="https://docs.aws.amazon.com/kms/latest/developerguide/custom-key-store-overview.html">custom
        key stores</a> in the account and region.</p> <p>This operation is part
        of the <a
        href="https://docs.aws.amazon.com/kms/latest/developerguide/custom-key-store-overview.html">Custom
        Key Store feature</a> feature in AWS KMS, which combines the convenience
        and extensive integration of AWS KMS with the isolation and control of a
        single-tenant key store.</p> <p>By default, this operation returns
        information about all custom key stores in the account and region. To
        get only information about a particular custom key store, use either the
        <code>CustomKeyStoreName</code> or <code>CustomKeyStoreId</code>
        parameter (but not both).</p> <p>To determine whether the custom key
        store is connected to its AWS CloudHSM cluster, use the
        <code>ConnectionState</code> element in the response. If an attempt to
        connect the custom key store failed, the <code>ConnectionState</code>
        value is <code>FAILED</code> and the <code>ConnectionErrorCode</code>
        element in the response indicates the cause of the failure. For help
        interpreting the <code>ConnectionErrorCode</code>, see
        <a>CustomKeyStoresListEntry</a>.</p> <p>Custom key stores have a
        <code>DISCONNECTED</code> connection state if the key store has never
        been connected or you use the <a>DisconnectCustomKeyStore</a> operation
        to disconnect it. If your custom key store state is
        <code>CONNECTED</code> but you are having trouble using it, make sure
        that its associated AWS CloudHSM cluster is active and contains the
        minimum number of HSMs required for the operation, if any.</p> <p> For
        help repairing your custom key store, see the <a
        href="https://docs.aws.amazon.com/kms/latest/developerguide/fix-keystore.html">Troubleshooting
        Custom Key Stores</a> topic in the <i>AWS Key Management Service
        Developer Guide</i>.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeCustomKeyStoresResponse"
        "480":
          description: CustomKeyStoreNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CustomKeyStoreNotFoundException"
        "481":
          description: KMSInternalException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/KMSInternalException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - TrentService.DescribeCustomKeyStores
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DescribeCustomKeyStoresRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=TrentService.DescribeKey:
    post:
      operationId: DescribeKey
      description: <p>Provides detailed information about the specified customer master key
        (CMK).</p> <p>You can use <code>DescribeKey</code> on a predefined AWS
        alias, that is, an AWS alias with no key ID. When you do, AWS KMS
        associates the alias with an <a
        href="https://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#master_keys">AWS
        managed CMK</a> and returns its <code>KeyId</code> and <code>Arn</code>
        in the response.</p> <p>To perform this operation on a CMK in a
        different AWS account, specify the key ARN or alias ARN in the value of
        the KeyId parameter.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeKeyResponse"
        "480":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "481":
          description: InvalidArnException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidArnException"
        "482":
          description: DependencyTimeoutException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DependencyTimeoutException"
        "483":
          description: KMSInternalException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/KMSInternalException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - TrentService.DescribeKey
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DescribeKeyRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=TrentService.DisableKey:
    post:
      operationId: DisableKey
      description: <p>Sets the state of a customer master key (CMK) to disabled, thereby
        preventing its use for cryptographic operations. You cannot perform this
        operation on a CMK in a different AWS account.</p> <p>For more
        information about how key state affects the use of a CMK, see <a
        href="https://docs.aws.amazon.com/kms/latest/developerguide/key-state.html">How
        Key State Affects the Use of a Customer Master Key</a> in the <i> <i>AWS
        Key Management Service Developer Guide</i> </i>.</p> <p>The result of
        this operation varies with the key state of the CMK. For details, see <a
        href="https://docs.aws.amazon.com/kms/latest/developerguide/key-state.html">How
        Key State Affects Use of a Customer Master Key</a> in the <i>AWS Key
        Management Service Developer Guide</i>.</p>
      responses:
        "200":
          description: Success
        "480":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "481":
          description: InvalidArnException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidArnException"
        "482":
          description: DependencyTimeoutException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DependencyTimeoutException"
        "483":
          description: KMSInternalException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/KMSInternalException"
        "484":
          description: KMSInvalidStateException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/KMSInvalidStateException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - TrentService.DisableKey
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DisableKeyRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=TrentService.DisableKeyRotation:
    post:
      operationId: DisableKeyRotation
      description: <p>Disables <a
        href="https://docs.aws.amazon.com/kms/latest/developerguide/rotate-keys.html">automatic
        rotation of the key material</a> for the specified customer master key
        (CMK). You cannot perform this operation on a CMK in a different AWS
        account.</p> <p>The result of this operation varies with the key state
        of the CMK. For details, see <a
        href="https://docs.aws.amazon.com/kms/latest/developerguide/key-state.html">How
        Key State Affects Use of a Customer Master Key</a> in the <i>AWS Key
        Management Service Developer Guide</i>.</p>
      responses:
        "200":
          description: Success
        "480":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "481":
          description: DisabledException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DisabledException"
        "482":
          description: InvalidArnException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidArnException"
        "483":
          description: DependencyTimeoutException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DependencyTimeoutException"
        "484":
          description: KMSInternalException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/KMSInternalException"
        "485":
          description: KMSInvalidStateException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/KMSInvalidStateException"
        "486":
          description: UnsupportedOperationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnsupportedOperationException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - TrentService.DisableKeyRotation
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DisableKeyRotationRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=TrentService.DisconnectCustomKeyStore:
    post:
      operationId: DisconnectCustomKeyStore
      description: <p>Disconnects the <a
        href="https://docs.aws.amazon.com/kms/latest/developerguide/custom-key-store-overview.html">custom
        key store</a> from its associated AWS CloudHSM cluster. While a custom
        key store is disconnected, you can manage the custom key store and its
        customer master keys (CMKs), but you cannot create or use CMKs in the
        custom key store. You can reconnect the custom key store at any
        time.</p> <note> <p>While a custom key store is disconnected, all
        attempts to create customer master keys (CMKs) in the custom key store
        or to use existing CMKs in cryptographic operations will fail. This
        action can prevent users from storing and accessing sensitive data.</p>
        </note> <p/> <p>To find the connection state of a custom key store, use
        the <a>DescribeCustomKeyStores</a> operation. To reconnect a custom key
        store, use the <a>ConnectCustomKeyStore</a> operation.</p> <p>If the
        operation succeeds, it returns a JSON object with no properties.</p>
        <p>This operation is part of the <a
        href="https://docs.aws.amazon.com/kms/latest/developerguide/custom-key-store-overview.html">Custom
        Key Store feature</a> feature in AWS KMS, which combines the convenience
        and extensive integration of AWS KMS with the isolation and control of a
        single-tenant key store.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DisconnectCustomKeyStoreResponse"
        "480":
          description: CustomKeyStoreInvalidStateException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CustomKeyStoreInvalidStateException"
        "481":
          description: CustomKeyStoreNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CustomKeyStoreNotFoundException"
        "482":
          description: KMSInternalException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/KMSInternalException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - TrentService.DisconnectCustomKeyStore
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DisconnectCustomKeyStoreRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=TrentService.EnableKey:
    post:
      operationId: EnableKey
      description: <p>Sets the key state of a customer master key (CMK) to enabled. This
        allows you to use the CMK for cryptographic operations. You cannot
        perform this operation on a CMK in a different AWS account.</p> <p>The
        result of this operation varies with the key state of the CMK. For
        details, see <a
        href="https://docs.aws.amazon.com/kms/latest/developerguide/key-state.html">How
        Key State Affects Use of a Customer Master Key</a> in the <i>AWS Key
        Management Service Developer Guide</i>.</p>
      responses:
        "200":
          description: Success
        "480":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "481":
          description: InvalidArnException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidArnException"
        "482":
          description: DependencyTimeoutException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DependencyTimeoutException"
        "483":
          description: KMSInternalException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/KMSInternalException"
        "484":
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
        "485":
          description: KMSInvalidStateException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/KMSInvalidStateException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - TrentService.EnableKey
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EnableKeyRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=TrentService.EnableKeyRotation:
    post:
      operationId: EnableKeyRotation
      description: <p>Enables <a
        href="https://docs.aws.amazon.com/kms/latest/developerguide/rotate-keys.html">automatic
        rotation of the key material</a> for the specified customer master key
        (CMK). You cannot perform this operation on a CMK in a different AWS
        account.</p> <p>You cannot enable automatic rotation of CMKs with
        imported key material or CMKs in a <a
        href="https://docs.aws.amazon.com/kms/latest/developerguide/custom-key-store-overview.html">custom
        key store</a>.</p> <p>The result of this operation varies with the key
        state of the CMK. For details, see <a
        href="https://docs.aws.amazon.com/kms/latest/developerguide/key-state.html">How
        Key State Affects Use of a Customer Master Key</a> in the <i>AWS Key
        Management Service Developer Guide</i>.</p>
      responses:
        "200":
          description: Success
        "480":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "481":
          description: DisabledException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DisabledException"
        "482":
          description: InvalidArnException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidArnException"
        "483":
          description: DependencyTimeoutException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DependencyTimeoutException"
        "484":
          description: KMSInternalException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/KMSInternalException"
        "485":
          description: KMSInvalidStateException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/KMSInvalidStateException"
        "486":
          description: UnsupportedOperationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnsupportedOperationException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - TrentService.EnableKeyRotation
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EnableKeyRotationRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=TrentService.Encrypt:
    post:
      operationId: Encrypt
      description: <p>Encrypts plaintext into ciphertext by using a customer master key
        (CMK). The <code>Encrypt</code> operation has two primary use cases:</p>
        <ul> <li> <p>You can encrypt up to 4 kilobytes (4096 bytes) of arbitrary
        data such as an RSA key, a database password, or other sensitive
        information.</p> </li> <li> <p>You can use the <code>Encrypt</code>
        operation to move encrypted data from one AWS region to another. In the
        first region, generate a data key and use the plaintext key to encrypt
        the data. Then, in the new region, call the <code>Encrypt</code> method
        on same plaintext data key. Now, you can safely move the encrypted data
        and encrypted data key to the new region, and decrypt in the new region
        when necessary.</p> </li> </ul> <p>You don't need use this operation to
        encrypt a data key within a region. The <a>GenerateDataKey</a> and
        <a>GenerateDataKeyWithoutPlaintext</a> operations return an encrypted
        data key.</p> <p>Also, you don't need to use this operation to encrypt
        data in your application. You can use the plaintext and encrypted data
        keys that the <code>GenerateDataKey</code> operation returns.</p> <p>The
        result of this operation varies with the key state of the CMK. For
        details, see <a
        href="https://docs.aws.amazon.com/kms/latest/developerguide/key-state.html">How
        Key State Affects Use of a Customer Master Key</a> in the <i>AWS Key
        Management Service Developer Guide</i>.</p> <p>To perform this operation
        on a CMK in a different AWS account, specify the key ARN or alias ARN in
        the value of the KeyId parameter.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EncryptResponse"
        "480":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "481":
          description: DisabledException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DisabledException"
        "482":
          description: KeyUnavailableException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/KeyUnavailableException"
        "483":
          description: DependencyTimeoutException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DependencyTimeoutException"
        "484":
          description: InvalidKeyUsageException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidKeyUsageException"
        "485":
          description: InvalidGrantTokenException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidGrantTokenException"
        "486":
          description: KMSInternalException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/KMSInternalException"
        "487":
          description: KMSInvalidStateException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/KMSInvalidStateException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - TrentService.Encrypt
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EncryptRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=TrentService.GenerateDataKey:
    post:
      operationId: GenerateDataKey
      description: <p>Generates a unique data key. This operation returns a plaintext copy
        of the data key and a copy that is encrypted under a customer master key
        (CMK) that you specify. You can use the plaintext key to encrypt your
        data outside of KMS and store the encrypted data key with the encrypted
        data.</p> <p> <code>GenerateDataKey</code> returns a unique data key for
        each request. The bytes in the key are not related to the caller or CMK
        that is used to encrypt the data key.</p> <p>To generate a data key, you
        need to specify the customer master key (CMK) that will be used to
        encrypt the data key. You must also specify the length of the data key
        using either the <code>KeySpec</code> or <code>NumberOfBytes</code>
        field (but not both). For common key lengths (128-bit and 256-bit
        symmetric keys), we recommend that you use <code>KeySpec</code>. To
        perform this operation on a CMK in a different AWS account, specify the
        key ARN or alias ARN in the value of the KeyId parameter.</p> <p>You
        will find the plaintext copy of the data key in the
        <code>Plaintext</code> field of the response, and the encrypted copy of
        the data key in the <code>CiphertextBlob</code> field.</p> <p>We
        recommend that you use the following pattern to encrypt data locally in
        your application:</p> <ol> <li> <p>Use the <code>GenerateDataKey</code>
        operation to get a data encryption key.</p> </li> <li> <p>Use the
        plaintext data key (returned in the <code>Plaintext</code> field of the
        response) to encrypt data locally, then erase the plaintext data key
        from memory.</p> </li> <li> <p>Store the encrypted data key (returned in
        the <code>CiphertextBlob</code> field of the response) alongside the
        locally encrypted data.</p> </li> </ol> <p>To decrypt data locally:</p>
        <ol> <li> <p>Use the <a>Decrypt</a> operation to decrypt the encrypted
        data key. The operation returns a plaintext copy of the data key.</p>
        </li> <li> <p>Use the plaintext data key to decrypt data locally, then
        erase the plaintext data key from memory.</p> </li> </ol> <p>To get only
        an encrypted copy of the data key, use
        <a>GenerateDataKeyWithoutPlaintext</a>. To get a cryptographically
        secure random byte string, use <a>GenerateRandom</a>.</p> <p>You can use
        the optional encryption context to add additional security to your
        encryption operation. When you specify an <code>EncryptionContext</code>
        in the <code>GenerateDataKey</code> operation, you must specify the same
        encryption context (a case-sensitive exact match) in your request to
        <a>Decrypt</a> the data key. Otherwise, the request to decrypt fails
        with an <code>InvalidCiphertextException</code>. For more information,
        see <a
        href="https://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#encrypt_context">Encryption
        Context</a> in the <i> <i>AWS Key Management Service Developer Guide</i>
        </i>.</p> <p>The result of this operation varies with the key state of
        the CMK. For details, see <a
        href="https://docs.aws.amazon.com/kms/latest/developerguide/key-state.html">How
        Key State Affects Use of a Customer Master Key</a> in the <i>AWS Key
        Management Service Developer Guide</i>.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenerateDataKeyResponse"
        "480":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "481":
          description: DisabledException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DisabledException"
        "482":
          description: KeyUnavailableException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/KeyUnavailableException"
        "483":
          description: DependencyTimeoutException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DependencyTimeoutException"
        "484":
          description: InvalidKeyUsageException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidKeyUsageException"
        "485":
          description: InvalidGrantTokenException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidGrantTokenException"
        "486":
          description: KMSInternalException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/KMSInternalException"
        "487":
          description: KMSInvalidStateException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/KMSInvalidStateException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - TrentService.GenerateDataKey
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GenerateDataKeyRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=TrentService.GenerateDataKeyWithoutPlaintext:
    post:
      operationId: GenerateDataKeyWithoutPlaintext
      description: <p>Generates a unique data key. This operation returns a data key that
        is encrypted under a customer master key (CMK) that you specify.
        <code>GenerateDataKeyWithoutPlaintext</code> is identical to
        <a>GenerateDataKey</a> except that returns only the encrypted copy of
        the data key.</p> <p>Like <code>GenerateDataKey</code>,
        <code>GenerateDataKeyWithoutPlaintext</code> returns a unique data key
        for each request. The bytes in the key are not related to the caller or
        CMK that is used to encrypt the data key.</p> <p>This operation is
        useful for systems that need to encrypt data at some point, but not
        immediately. When you need to encrypt the data, you call the
        <a>Decrypt</a> operation on the encrypted copy of the key.</p> <p>It's
        also useful in distributed systems with different levels of trust. For
        example, you might store encrypted data in containers. One component of
        your system creates new containers and stores an encrypted data key with
        each container. Then, a different component puts the data into the
        containers. That component first decrypts the data key, uses the
        plaintext data key to encrypt data, puts the encrypted data into the
        container, and then destroys the plaintext data key. In this system, the
        component that creates the containers never sees the plaintext data
        key.</p> <p>The result of this operation varies with the key state of
        the CMK. For details, see <a
        href="https://docs.aws.amazon.com/kms/latest/developerguide/key-state.html">How
        Key State Affects Use of a Customer Master Key</a> in the <i>AWS Key
        Management Service Developer Guide</i>.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenerateDataKeyWithoutPlaintextResponse"
        "480":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "481":
          description: DisabledException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DisabledException"
        "482":
          description: KeyUnavailableException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/KeyUnavailableException"
        "483":
          description: DependencyTimeoutException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DependencyTimeoutException"
        "484":
          description: InvalidKeyUsageException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidKeyUsageException"
        "485":
          description: InvalidGrantTokenException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidGrantTokenException"
        "486":
          description: KMSInternalException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/KMSInternalException"
        "487":
          description: KMSInvalidStateException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/KMSInvalidStateException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - TrentService.GenerateDataKeyWithoutPlaintext
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GenerateDataKeyWithoutPlaintextRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=TrentService.GenerateRandom:
    post:
      operationId: GenerateRandom
      description: <p>Returns a random byte string that is cryptographically secure.</p>
        <p>By default, the random byte string is generated in AWS KMS. To
        generate the byte string in the AWS CloudHSM cluster that is associated
        with a <a
        href="https://docs.aws.amazon.com/kms/latest/developerguide/custom-key-store-overview.html">custom
        key store</a>, specify the custom key store ID.</p> <p>For more
        information about entropy and random number generation, see the <a
        href="https://d0.awsstatic.com/whitepapers/KMS-Cryptographic-Details.pdf">AWS
        Key Management Service Cryptographic Details</a> whitepaper.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenerateRandomResponse"
        "480":
          description: DependencyTimeoutException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DependencyTimeoutException"
        "481":
          description: KMSInternalException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/KMSInternalException"
        "482":
          description: CustomKeyStoreNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CustomKeyStoreNotFoundException"
        "483":
          description: CustomKeyStoreInvalidStateException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CustomKeyStoreInvalidStateException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - TrentService.GenerateRandom
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GenerateRandomRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=TrentService.GetKeyPolicy:
    post:
      operationId: GetKeyPolicy
      description: Gets a key policy attached to the specified customer master key (CMK).
        You cannot perform this operation on a CMK in a different AWS account.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetKeyPolicyResponse"
        "480":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "481":
          description: InvalidArnException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidArnException"
        "482":
          description: DependencyTimeoutException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DependencyTimeoutException"
        "483":
          description: KMSInternalException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/KMSInternalException"
        "484":
          description: KMSInvalidStateException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/KMSInvalidStateException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - TrentService.GetKeyPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GetKeyPolicyRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=TrentService.GetKeyRotationStatus:
    post:
      operationId: GetKeyRotationStatus
      description: '<p>Gets a Boolean value that indicates whether <a
        href="https://docs.aws.amazon.com/kms/latest/developerguide/rotate-keys.html">automatic
        rotation of the key material</a> is enabled for the specified customer
        master key (CMK).</p> <p>The result of this operation varies with the
        key state of the CMK. For details, see <a
        href="https://docs.aws.amazon.com/kms/latest/developerguide/key-state.html">How
        Key State Affects Use of a Customer Master Key</a> in the <i>AWS Key
        Management Service Developer Guide</i>.</p> <ul> <li> <p>Disabled: The
        key rotation status does not change when you disable a CMK. However,
        while the CMK is disabled, AWS KMS does not rotate the backing key.</p>
        </li> <li> <p>Pending deletion: While a CMK is pending deletion, its key
        rotation status is <code>false</code> and AWS KMS does not rotate the
        backing key. If you cancel the deletion, the original key rotation
        status is restored.</p> </li> </ul> <p>To perform this operation on a
        CMK in a different AWS account, specify the key ARN in the value of the
        <code>KeyId</code> parameter.</p>'
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetKeyRotationStatusResponse"
        "480":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "481":
          description: InvalidArnException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidArnException"
        "482":
          description: DependencyTimeoutException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DependencyTimeoutException"
        "483":
          description: KMSInternalException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/KMSInternalException"
        "484":
          description: KMSInvalidStateException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/KMSInvalidStateException"
        "485":
          description: UnsupportedOperationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnsupportedOperationException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - TrentService.GetKeyRotationStatus
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GetKeyRotationStatusRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=TrentService.GetParametersForImport:
    post:
      operationId: GetParametersForImport
      description: <p>Returns the items you need in order to import key material into AWS
        KMS from your existing key management infrastructure. For more
        information about importing key material into AWS KMS, see <a
        href="https://docs.aws.amazon.com/kms/latest/developerguide/importing-keys.html">Importing
        Key Material</a> in the <i>AWS Key Management Service Developer
        Guide</i>.</p> <p>You must specify the key ID of the customer master key
        (CMK) into which you will import key material. This CMK's
        <code>Origin</code> must be <code>EXTERNAL</code>. You must also specify
        the wrapping algorithm and type of wrapping key (public key) that you
        will use to encrypt the key material. You cannot perform this operation
        on a CMK in a different AWS account.</p> <p>This operation returns a
        public key and an import token. Use the public key to encrypt the key
        material. Store the import token to send with a subsequent
        <a>ImportKeyMaterial</a> request. The public key and import token from
        the same response must be used together. These items are valid for 24
        hours. When they expire, they cannot be used for a subsequent
        <a>ImportKeyMaterial</a> request. To get new ones, send another
        <code>GetParametersForImport</code> request.</p> <p>The result of this
        operation varies with the key state of the CMK. For details, see <a
        href="https://docs.aws.amazon.com/kms/latest/developerguide/key-state.html">How
        Key State Affects Use of a Customer Master Key</a> in the <i>AWS Key
        Management Service Developer Guide</i>.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetParametersForImportResponse"
        "480":
          description: InvalidArnException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidArnException"
        "481":
          description: UnsupportedOperationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnsupportedOperationException"
        "482":
          description: DependencyTimeoutException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DependencyTimeoutException"
        "483":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "484":
          description: KMSInternalException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/KMSInternalException"
        "485":
          description: KMSInvalidStateException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/KMSInvalidStateException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - TrentService.GetParametersForImport
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GetParametersForImportRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=TrentService.ImportKeyMaterial:
    post:
      operationId: ImportKeyMaterial
      description: <p>Imports key material into an existing AWS KMS customer master key
        (CMK) that was created without key material. You cannot perform this
        operation on a CMK in a different AWS account. For more information
        about creating CMKs with no key material and then importing key
        material, see <a
        href="https://docs.aws.amazon.com/kms/latest/developerguide/importing-keys.html">Importing
        Key Material</a> in the <i>AWS Key Management Service Developer
        Guide</i>.</p> <p>Before using this operation, call
        <a>GetParametersForImport</a>. Its response includes a public key and an
        import token. Use the public key to encrypt the key material. Then,
        submit the import token from the same
        <code>GetParametersForImport</code> response.</p> <p>When calling this
        operation, you must specify the following values:</p> <ul> <li> <p>The
        key ID or key ARN of a CMK with no key material. Its <code>Origin</code>
        must be <code>EXTERNAL</code>.</p> <p>To create a CMK with no key
        material, call <a>CreateKey</a> and set the value of its
        <code>Origin</code> parameter to <code>EXTERNAL</code>. To get the
        <code>Origin</code> of a CMK, call <a>DescribeKey</a>.)</p> </li> <li>
        <p>The encrypted key material. To get the public key to encrypt the key
        material, call <a>GetParametersForImport</a>.</p> </li> <li> <p>The
        import token that <a>GetParametersForImport</a> returned. This token and
        the public key used to encrypt the key material must have come from the
        same response.</p> </li> <li> <p>Whether the key material expires and if
        so, when. If you set an expiration date, you can change it only by
        reimporting the same key material and specifying a new expiration date.
        If the key material expires, AWS KMS deletes the key material and the
        CMK becomes unusable. To use the CMK again, you must reimport the same
        key material.</p> </li> </ul> <p>When this operation is successful, the
        key state of the CMK changes from <code>PendingImport</code> to
        <code>Enabled</code>, and you can use the CMK. After you successfully
        import key material into a CMK, you can reimport the same key material
        into that CMK, but you cannot import different key material.</p> <p>The
        result of this operation varies with the key state of the CMK. For
        details, see <a
        href="https://docs.aws.amazon.com/kms/latest/developerguide/key-state.html">How
        Key State Affects Use of a Customer Master Key</a> in the <i>AWS Key
        Management Service Developer Guide</i>.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ImportKeyMaterialResponse"
        "480":
          description: InvalidArnException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidArnException"
        "481":
          description: UnsupportedOperationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnsupportedOperationException"
        "482":
          description: DependencyTimeoutException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DependencyTimeoutException"
        "483":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "484":
          description: KMSInternalException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/KMSInternalException"
        "485":
          description: KMSInvalidStateException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/KMSInvalidStateException"
        "486":
          description: InvalidCiphertextException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidCiphertextException"
        "487":
          description: IncorrectKeyMaterialException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/IncorrectKeyMaterialException"
        "488":
          description: ExpiredImportTokenException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ExpiredImportTokenException"
        "489":
          description: InvalidImportTokenException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidImportTokenException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - TrentService.ImportKeyMaterial
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ImportKeyMaterialRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=TrentService.ListAliases:
    post:
      operationId: ListAliases
      description: <p>Gets a list of aliases in the caller's AWS account and region. You
        cannot list aliases in other accounts. For more information about
        aliases, see <a>CreateAlias</a>.</p> <p>By default, the ListAliases
        command returns all aliases in the account and region. To get only the
        aliases that point to a particular customer master key (CMK), use the
        <code>KeyId</code> parameter.</p> <p>The <code>ListAliases</code>
        response can include aliases that you created and associated with your
        customer managed CMKs, and aliases that AWS created and associated with
        AWS managed CMKs in your account. You can recognize AWS aliases because
        their names have the format <code>aws/&lt;service-name&gt;</code>, such
        as <code>aws/dynamodb</code>.</p> <p>The response might also include
        aliases that have no <code>TargetKeyId</code> field. These are
        predefined aliases that AWS has created but has not yet associated with
        a CMK. Aliases that AWS creates in your account, including predefined
        aliases, do not count against your <a
        href="https://docs.aws.amazon.com/kms/latest/developerguide/limits.html#aliases-limit">AWS
        KMS aliases limit</a>.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListAliasesResponse"
        "480":
          description: DependencyTimeoutException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DependencyTimeoutException"
        "481":
          description: InvalidMarkerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidMarkerException"
        "482":
          description: KMSInternalException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/KMSInternalException"
        "483":
          description: InvalidArnException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidArnException"
        "484":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
      parameters:
        - name: Limit
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: Marker
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - TrentService.ListAliases
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ListAliasesRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=TrentService.ListGrants:
    post:
      operationId: ListGrants
      description: <p>Gets a list of all grants for the specified customer master key
        (CMK).</p> <p>To perform this operation on a CMK in a different AWS
        account, specify the key ARN in the value of the <code>KeyId</code>
        parameter.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListGrantsResponse"
        "480":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "481":
          description: DependencyTimeoutException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DependencyTimeoutException"
        "482":
          description: InvalidMarkerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidMarkerException"
        "483":
          description: InvalidArnException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidArnException"
        "484":
          description: KMSInternalException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/KMSInternalException"
        "485":
          description: KMSInvalidStateException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/KMSInvalidStateException"
      parameters:
        - name: Limit
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: Marker
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - TrentService.ListGrants
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ListGrantsRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=TrentService.ListKeyPolicies:
    post:
      operationId: ListKeyPolicies
      description: Gets the names of the key policies that are attached to a customer
        master key (CMK). This operation is designed to get policy names that
        you can use in a <a>GetKeyPolicy</a> operation. However, the only valid
        policy name is <code>default</code>. You cannot perform this operation
        on a CMK in a different AWS account.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListKeyPoliciesResponse"
        "480":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "481":
          description: InvalidArnException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidArnException"
        "482":
          description: DependencyTimeoutException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DependencyTimeoutException"
        "483":
          description: KMSInternalException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/KMSInternalException"
        "484":
          description: KMSInvalidStateException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/KMSInvalidStateException"
      parameters:
        - name: Limit
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: Marker
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - TrentService.ListKeyPolicies
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ListKeyPoliciesRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=TrentService.ListKeys:
    post:
      operationId: ListKeys
      description: Gets a list of all customer master keys (CMKs) in the caller's AWS
        account and region.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListKeysResponse"
        "480":
          description: DependencyTimeoutException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DependencyTimeoutException"
        "481":
          description: KMSInternalException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/KMSInternalException"
        "482":
          description: InvalidMarkerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidMarkerException"
      parameters:
        - name: Limit
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: Marker
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - TrentService.ListKeys
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ListKeysRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=TrentService.ListResourceTags:
    post:
      operationId: ListResourceTags
      description: <p>Returns a list of all tags for the specified customer master key
        (CMK).</p> <p>You cannot perform this operation on a CMK in a different
        AWS account.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListResourceTagsResponse"
        "480":
          description: KMSInternalException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/KMSInternalException"
        "481":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "482":
          description: InvalidArnException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidArnException"
        "483":
          description: InvalidMarkerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidMarkerException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - TrentService.ListResourceTags
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ListResourceTagsRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=TrentService.ListRetirableGrants:
    post:
      operationId: ListRetirableGrants
      description: <p>Returns a list of all grants for which the grant's
        <code>RetiringPrincipal</code> matches the one specified.</p> <p>A
        typical use is to list all grants that you are able to retire. To retire
        a grant, use <a>RetireGrant</a>.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListGrantsResponse"
        "480":
          description: DependencyTimeoutException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DependencyTimeoutException"
        "481":
          description: InvalidMarkerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidMarkerException"
        "482":
          description: InvalidArnException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidArnException"
        "483":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "484":
          description: KMSInternalException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/KMSInternalException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - TrentService.ListRetirableGrants
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ListRetirableGrantsRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=TrentService.PutKeyPolicy:
    post:
      operationId: PutKeyPolicy
      description: <p>Attaches a key policy to the specified customer master key (CMK). You
        cannot perform this operation on a CMK in a different AWS account.</p>
        <p>For more information about key policies, see <a
        href="https://docs.aws.amazon.com/kms/latest/developerguide/key-policies.html">Key
        Policies</a> in the <i>AWS Key Management Service Developer
        Guide</i>.</p>
      responses:
        "200":
          description: Success
        "480":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "481":
          description: InvalidArnException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidArnException"
        "482":
          description: MalformedPolicyDocumentException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MalformedPolicyDocumentException"
        "483":
          description: DependencyTimeoutException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DependencyTimeoutException"
        "484":
          description: UnsupportedOperationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnsupportedOperationException"
        "485":
          description: KMSInternalException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/KMSInternalException"
        "486":
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
        "487":
          description: KMSInvalidStateException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/KMSInvalidStateException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - TrentService.PutKeyPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PutKeyPolicyRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=TrentService.ReEncrypt:
    post:
      operationId: ReEncrypt
      description: <p>Encrypts data on the server side with a new customer master key (CMK)
        without exposing the plaintext of the data on the client side. The data
        is first decrypted and then reencrypted. You can also use this operation
        to change the encryption context of a ciphertext. </p> <p>You can
        reencrypt data using CMKs in different AWS accounts.</p> <p>Unlike other
        operations, <code>ReEncrypt</code> is authorized twice, once as
        <code>ReEncryptFrom</code> on the source CMK and once as
        <code>ReEncryptTo</code> on the destination CMK. We recommend that you
        include the <code>"kms:ReEncrypt*"</code> permission in your <a
        href="https://docs.aws.amazon.com/kms/latest/developerguide/key-policies.html">key
        policies</a> to permit reencryption from or to the CMK. This permission
        is automatically included in the key policy when you create a CMK
        through the console. But you must include it manually when you create a
        CMK programmatically or when you set a key policy with the
        <a>PutKeyPolicy</a> operation.</p> <p>The result of this operation
        varies with the key state of the CMK. For details, see <a
        href="https://docs.aws.amazon.com/kms/latest/developerguide/key-state.html">How
        Key State Affects Use of a Customer Master Key</a> in the <i>AWS Key
        Management Service Developer Guide</i>.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ReEncryptResponse"
        "480":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "481":
          description: DisabledException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DisabledException"
        "482":
          description: InvalidCiphertextException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidCiphertextException"
        "483":
          description: KeyUnavailableException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/KeyUnavailableException"
        "484":
          description: DependencyTimeoutException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DependencyTimeoutException"
        "485":
          description: InvalidKeyUsageException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidKeyUsageException"
        "486":
          description: InvalidGrantTokenException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidGrantTokenException"
        "487":
          description: KMSInternalException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/KMSInternalException"
        "488":
          description: KMSInvalidStateException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/KMSInvalidStateException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - TrentService.ReEncrypt
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ReEncryptRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=TrentService.RetireGrant:
    post:
      operationId: RetireGrant
      description: <p>Retires a grant. To clean up, you can retire a grant when you're done
        using it. You should revoke a grant when you intend to actively deny
        operations that depend on it. The following are permitted to call this
        API:</p> <ul> <li> <p>The AWS account (root user) under which the grant
        was created</p> </li> <li> <p>The <code>RetiringPrincipal</code>, if
        present in the grant</p> </li> <li> <p>The
        <code>GranteePrincipal</code>, if <code>RetireGrant</code> is an
        operation specified in the grant</p> </li> </ul> <p>You must identify
        the grant to retire by its grant token or by a combination of the grant
        ID and the Amazon Resource Name (ARN) of the customer master key (CMK).
        A grant token is a unique variable-length base64-encoded string. A grant
        ID is a 64 character unique identifier of a grant. The
        <a>CreateGrant</a> operation returns both.</p>
      responses:
        "200":
          description: Success
        "480":
          description: InvalidArnException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidArnException"
        "481":
          description: InvalidGrantTokenException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidGrantTokenException"
        "482":
          description: InvalidGrantIdException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidGrantIdException"
        "483":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "484":
          description: DependencyTimeoutException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DependencyTimeoutException"
        "485":
          description: KMSInternalException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/KMSInternalException"
        "486":
          description: KMSInvalidStateException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/KMSInvalidStateException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - TrentService.RetireGrant
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RetireGrantRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=TrentService.RevokeGrant:
    post:
      operationId: RevokeGrant
      description: <p>Revokes the specified grant for the specified customer master key
        (CMK). You can revoke a grant to actively deny operations that depend on
        it.</p> <p>To perform this operation on a CMK in a different AWS
        account, specify the key ARN in the value of the <code>KeyId</code>
        parameter.</p>
      responses:
        "200":
          description: Success
        "480":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "481":
          description: DependencyTimeoutException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DependencyTimeoutException"
        "482":
          description: InvalidArnException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidArnException"
        "483":
          description: InvalidGrantIdException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidGrantIdException"
        "484":
          description: KMSInternalException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/KMSInternalException"
        "485":
          description: KMSInvalidStateException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/KMSInvalidStateException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - TrentService.RevokeGrant
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RevokeGrantRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=TrentService.ScheduleKeyDeletion:
    post:
      operationId: ScheduleKeyDeletion
      description: <p>Schedules the deletion of a customer master key (CMK). You may
        provide a waiting period, specified in days, before deletion occurs. If
        you do not provide a waiting period, the default period of 30 days is
        used. When this operation is successful, the key state of the CMK
        changes to <code>PendingDeletion</code>. Before the waiting period ends,
        you can use <a>CancelKeyDeletion</a> to cancel the deletion of the CMK.
        After the waiting period ends, AWS KMS deletes the CMK and all AWS KMS
        data associated with it, including all aliases that refer to it.</p>
        <important> <p>Deleting a CMK is a destructive and potentially dangerous
        operation. When a CMK is deleted, all data that was encrypted under the
        CMK is unrecoverable. To prevent the use of a CMK without deleting it,
        use <a>DisableKey</a>.</p> </important> <p>If you schedule deletion of a
        CMK from a <a
        href="https://docs.aws.amazon.com/kms/latest/developerguide/custom-key-store-overview.html">custom
        key store</a>, when the waiting period expires,
        <code>ScheduleKeyDeletion</code> deletes the CMK from AWS KMS. Then AWS
        KMS makes a best effort to delete the key material from the associated
        AWS CloudHSM cluster. However, you might need to manually <a
        href="https://docs.aws.amazon.com/kms/latest/developerguide/fix-keystore.html#fix-keystore-orphaned-key">delete
        the orphaned key material</a> from the cluster and its backups.</p>
        <p>You cannot perform this operation on a CMK in a different AWS
        account.</p> <p>For more information about scheduling a CMK for
        deletion, see <a
        href="https://docs.aws.amazon.com/kms/latest/developerguide/deleting-keys.html">Deleting
        Customer Master Keys</a> in the <i>AWS Key Management Service Developer
        Guide</i>.</p> <p>The result of this operation varies with the key state
        of the CMK. For details, see <a
        href="https://docs.aws.amazon.com/kms/latest/developerguide/key-state.html">How
        Key State Affects Use of a Customer Master Key</a> in the <i>AWS Key
        Management Service Developer Guide</i>.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ScheduleKeyDeletionResponse"
        "480":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "481":
          description: InvalidArnException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidArnException"
        "482":
          description: DependencyTimeoutException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DependencyTimeoutException"
        "483":
          description: KMSInternalException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/KMSInternalException"
        "484":
          description: KMSInvalidStateException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/KMSInvalidStateException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - TrentService.ScheduleKeyDeletion
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ScheduleKeyDeletionRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=TrentService.TagResource:
    post:
      operationId: TagResource
      description: <p>Adds or edits tags for a customer master key (CMK). You cannot
        perform this operation on a CMK in a different AWS account.</p> <p>Each
        tag consists of a tag key and a tag value. Tag keys and tag values are
        both required, but tag values can be empty (null) strings.</p> <p>You
        can only use a tag key once for each CMK. If you use the tag key again,
        AWS KMS replaces the current tag value with the specified value.</p>
        <p>For information about the rules that apply to tag keys and tag
        values, see <a
        href="https://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/allocation-tag-restrictions.html">User-Defined
        Tag Restrictions</a> in the <i>AWS Billing and Cost Management User
        Guide</i>.</p> <p>The result of this operation varies with the key state
        of the CMK. For details, see <a
        href="https://docs.aws.amazon.com/kms/latest/developerguide/key-state.html">How
        Key State Affects Use of a Customer Master Key</a> in the <i>AWS Key
        Management Service Developer Guide</i>.</p>
      responses:
        "200":
          description: Success
        "480":
          description: KMSInternalException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/KMSInternalException"
        "481":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "482":
          description: InvalidArnException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidArnException"
        "483":
          description: KMSInvalidStateException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/KMSInvalidStateException"
        "484":
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
        "485":
          description: TagException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TagException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - TrentService.TagResource
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TagResourceRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=TrentService.UntagResource:
    post:
      operationId: UntagResource
      description: <p>Removes the specified tags from the specified customer master key
        (CMK). You cannot perform this operation on a CMK in a different AWS
        account.</p> <p>To remove a tag, specify the tag key. To change the tag
        value of an existing tag key, use <a>TagResource</a>.</p> <p>The result
        of this operation varies with the key state of the CMK. For details, see
        <a
        href="https://docs.aws.amazon.com/kms/latest/developerguide/key-state.html">How
        Key State Affects Use of a Customer Master Key</a> in the <i>AWS Key
        Management Service Developer Guide</i>.</p>
      responses:
        "200":
          description: Success
        "480":
          description: KMSInternalException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/KMSInternalException"
        "481":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "482":
          description: InvalidArnException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidArnException"
        "483":
          description: KMSInvalidStateException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/KMSInvalidStateException"
        "484":
          description: TagException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TagException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - TrentService.UntagResource
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UntagResourceRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=TrentService.UpdateAlias:
    post:
      operationId: UpdateAlias
      description: <p>Associates an existing alias with a different customer master key
        (CMK). Each CMK can have multiple aliases, but the aliases must be
        unique within the account and region. You cannot perform this operation
        on an alias in a different AWS account.</p> <p>This operation works only
        on existing aliases. To change the alias of a CMK to a new value, use
        <a>CreateAlias</a> to create a new alias and <a>DeleteAlias</a> to
        delete the old alias.</p> <p>Because an alias is not a property of a
        CMK, you can create, update, and delete the aliases of a CMK without
        affecting the CMK. Also, aliases do not appear in the response from the
        <a>DescribeKey</a> operation. To get the aliases of all CMKs in the
        account, use the <a>ListAliases</a> operation. </p> <p>The alias name
        must begin with <code>alias/</code> followed by a name, such as
        <code>alias/ExampleAlias</code>. It can contain only alphanumeric
        characters, forward slashes (/), underscores (_), and dashes (-). The
        alias name cannot begin with <code>alias/aws/</code>. The
        <code>alias/aws/</code> prefix is reserved for <a
        href="https://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#aws-managed-cmk">AWS
        managed CMKs</a>. </p> <p>The result of this operation varies with the
        key state of the CMK. For details, see <a
        href="https://docs.aws.amazon.com/kms/latest/developerguide/key-state.html">How
        Key State Affects Use of a Customer Master Key</a> in the <i>AWS Key
        Management Service Developer Guide</i>.</p>
      responses:
        "200":
          description: Success
        "480":
          description: DependencyTimeoutException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DependencyTimeoutException"
        "481":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "482":
          description: KMSInternalException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/KMSInternalException"
        "483":
          description: KMSInvalidStateException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/KMSInvalidStateException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - TrentService.UpdateAlias
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateAliasRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=TrentService.UpdateCustomKeyStore:
    post:
      operationId: UpdateCustomKeyStore
      description: <p>Changes the properties of a custom key store. Use the
        <code>CustomKeyStoreId</code> parameter to identify the custom key store
        you want to edit. Use the remaining parameters to change the properties
        of the custom key store.</p> <p>You can only update a custom key store
        that is disconnected. To disconnect the custom key store, use
        <a>DisconnectCustomKeyStore</a>. To reconnect the custom key store after
        the update completes, use <a>ConnectCustomKeyStore</a>. To find the
        connection state of a custom key store, use the
        <a>DescribeCustomKeyStores</a> operation.</p> <p>Use the parameters of
        <code>UpdateCustomKeyStore</code> to edit your keystore settings.</p>
        <ul> <li> <p>Use the <b>NewCustomKeyStoreName</b> parameter to change
        the friendly name of the custom key store to the value that you
        specify.</p> <p> </p> </li> <li> <p>Use the <b>KeyStorePassword</b>
        parameter tell AWS KMS the current password of the <a
        href="https://docs.aws.amazon.com/kms/latest/developerguide/key-store-concepts.html#concept-kmsuser">
        <code>kmsuser</code> crypto user (CU)</a> in the associated AWS CloudHSM
        cluster. You can use this parameter to <a
        href="https://docs.aws.amazon.com/kms/latest/developerguide/fix-keystore.html#fix-keystore-password">fix
        connection failures</a> that occur when AWS KMS cannot log into the
        associated cluster because the <code>kmsuser</code> password has
        changed. This value does not change the password in the AWS CloudHSM
        cluster.</p> <p> </p> </li> <li> <p>Use the <b>CloudHsmClusterId</b>
        parameter to associate the custom key store with a different, but
        related, AWS CloudHSM cluster. You can use this parameter to repair a
        custom key store if its AWS CloudHSM cluster becomes corrupted or is
        deleted, or when you need to create or restore a cluster from a backup.
        </p> </li> </ul> <p>If the operation succeeds, it returns a JSON object
        with no properties.</p> <p>This operation is part of the <a
        href="https://docs.aws.amazon.com/kms/latest/developerguide/custom-key-store-overview.html">Custom
        Key Store feature</a> feature in AWS KMS, which combines the convenience
        and extensive integration of AWS KMS with the isolation and control of a
        single-tenant key store.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateCustomKeyStoreResponse"
        "480":
          description: CustomKeyStoreNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CustomKeyStoreNotFoundException"
        "481":
          description: CloudHsmClusterNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CloudHsmClusterNotFoundException"
        "482":
          description: CloudHsmClusterNotRelatedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CloudHsmClusterNotRelatedException"
        "483":
          description: CustomKeyStoreInvalidStateException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CustomKeyStoreInvalidStateException"
        "484":
          description: KMSInternalException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/KMSInternalException"
        "485":
          description: CloudHsmClusterNotActiveException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CloudHsmClusterNotActiveException"
        "486":
          description: CloudHsmClusterInvalidConfigurationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CloudHsmClusterInvalidConfigurationExce\
                  ption"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - TrentService.UpdateCustomKeyStore
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateCustomKeyStoreRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=TrentService.UpdateKeyDescription:
    post:
      operationId: UpdateKeyDescription
      description: <p>Updates the description of a customer master key (CMK). To see the
        description of a CMK, use <a>DescribeKey</a>. </p> <p>You cannot perform
        this operation on a CMK in a different AWS account.</p> <p>The result of
        this operation varies with the key state of the CMK. For details, see <a
        href="https://docs.aws.amazon.com/kms/latest/developerguide/key-state.html">How
        Key State Affects Use of a Customer Master Key</a> in the <i>AWS Key
        Management Service Developer Guide</i>.</p>
      responses:
        "200":
          description: Success
        "480":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "481":
          description: InvalidArnException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidArnException"
        "482":
          description: DependencyTimeoutException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DependencyTimeoutException"
        "483":
          description: KMSInternalException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/KMSInternalException"
        "484":
          description: KMSInvalidStateException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/KMSInvalidStateException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - TrentService.UpdateKeyDescription
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateKeyDescriptionRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
servers:
  - url: http://kms.{region}.amazonaws.com
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-south-1
          - sa-east-1
        default: us-east-1
    description: The KMS multi-region endpoint
  - url: https://kms.{region}.amazonaws.com
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-south-1
          - sa-east-1
        default: us-east-1
    description: The KMS multi-region endpoint
  - url: http://kms.{region}.amazonaws.com.cn
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The KMS endpoint for China (Beijing) and China (Ningxia)
  - url: https://kms.{region}.amazonaws.com.cn
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The KMS endpoint for China (Beijing) and China (Ningxia)
components:
  parameters:
    X-Amz-Content-Sha256:
      name: X-Amz-Content-Sha256
      in: header
      required: false
      schema:
        type: string
    X-Amz-Date:
      name: X-Amz-Date
      in: header
      required: false
      schema:
        type: string
    X-Amz-Algorithm:
      name: X-Amz-Algorithm
      in: header
      required: false
      schema:
        type: string
    X-Amz-Credential:
      name: X-Amz-Credential
      in: header
      required: false
      schema:
        type: string
    X-Amz-Security-Token:
      name: X-Amz-Security-Token
      in: header
      required: false
      schema:
        type: string
    X-Amz-Signature:
      name: X-Amz-Signature
      in: header
      required: false
      schema:
        type: string
    X-Amz-SignedHeaders:
      name: X-Amz-SignedHeaders
      in: header
      required: false
      schema:
        type: string
  securitySchemes:
    hmac:
      type: apiKey
      name: Authorization
      in: header
      description: Amazon Signature authorization v4
      x-amazon-apigateway-authtype: awsSigv4
  schemas:
    CancelKeyDeletionResponse:
      type: object
      example:
        KeyId: arn:aws:kms:us-east-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab
      properties:
        KeyId:
          $ref: "#/components/schemas/KeyIdType"
    CancelKeyDeletionRequest:
      type: object
      required:
        - KeyId
      properties:
        KeyId:
          $ref: "#/components/schemas/KeyIdType"
    NotFoundException: {}
    InvalidArnException: {}
    DependencyTimeoutException: {}
    KMSInternalException: {}
    KMSInvalidStateException: {}
    ConnectCustomKeyStoreResponse:
      type: object
      properties: {}
    ConnectCustomKeyStoreRequest:
      type: object
      required:
        - CustomKeyStoreId
      properties:
        CustomKeyStoreId:
          $ref: "#/components/schemas/CustomKeyStoreIdType"
    CloudHsmClusterNotActiveException: {}
    CustomKeyStoreInvalidStateException: {}
    CustomKeyStoreNotFoundException: {}
    CloudHsmClusterInvalidConfigurationException: {}
    CreateAliasRequest:
      type: object
      required:
        - AliasName
        - TargetKeyId
      properties:
        AliasName:
          $ref: "#/components/schemas/AliasNameType"
        TargetKeyId:
          $ref: "#/components/schemas/KeyIdType"
    AlreadyExistsException: {}
    InvalidAliasNameException: {}
    LimitExceededException: {}
    CreateCustomKeyStoreResponse:
      type: object
      properties:
        CustomKeyStoreId:
          $ref: "#/components/schemas/CustomKeyStoreIdType"
    CreateCustomKeyStoreRequest:
      type: object
      required:
        - CustomKeyStoreName
        - CloudHsmClusterId
        - TrustAnchorCertificate
        - KeyStorePassword
      properties:
        CustomKeyStoreName:
          $ref: "#/components/schemas/CustomKeyStoreNameType"
        CloudHsmClusterId:
          $ref: "#/components/schemas/CloudHsmClusterIdType"
        TrustAnchorCertificate:
          $ref: "#/components/schemas/TrustAnchorCertificateType"
        KeyStorePassword:
          $ref: "#/components/schemas/KeyStorePasswordType"
    CloudHsmClusterInUseException: {}
    CustomKeyStoreNameInUseException: {}
    CloudHsmClusterNotFoundException: {}
    IncorrectTrustAnchorException: {}
    CreateGrantResponse:
      type: object
      example:
        GrantId: 0c237476b39f8bc44e45212e08498fbe3151305030726c0590dd8d3e9f3d6a60
        GrantToken: AQpAM2RhZTk1MGMyNTk2ZmZmMzEyYWVhOWViN2I1MWM4Mzc0MWFiYjc0ZDE1ODkyNGFlNTIzODZhMzgyZjBlNGY3NiKIAgEBAgB4Pa6VDCWW__MSrqnre1HIN0Grt00ViSSuUjhqOC8OT3YAAADfMIHcBgkqhkiG9w0BBwaggc4wgcsCAQAwgcUGCSqGSIb3DQEHATAeBglghkgBZQMEAS4wEQQMmqLyBTAegIn9XlK5AgEQgIGXZQjkBcl1dykDdqZBUQ6L1OfUivQy7JVYO2-ZJP7m6f1g8GzV47HX5phdtONAP7K_HQIflcgpkoCqd_fUnE114mSmiagWkbQ5sqAVV3ov-VeqgrvMe5ZFEWLMSluvBAqdjHEdMIkHMlhlj4ENZbzBfo9Wxk8b8SnwP4kc4gGivedzFXo-dwN8fxjjq_ZZ9JFOj2ijIbj5FyogDCN0drOfi8RORSEuCEmPvjFRMFAwcmwFkN2NPp89amA
      properties:
        GrantToken:
          $ref: "#/components/schemas/GrantTokenType"
        GrantId:
          $ref: "#/components/schemas/GrantIdType"
    CreateGrantRequest:
      type: object
      required:
        - KeyId
        - GranteePrincipal
        - Operations
      properties:
        KeyId:
          $ref: "#/components/schemas/KeyIdType"
        GranteePrincipal:
          $ref: "#/components/schemas/PrincipalIdType"
        RetiringPrincipal:
          $ref: "#/components/schemas/PrincipalIdType"
        Operations:
          $ref: "#/components/schemas/GrantOperationList"
        Constraints:
          $ref: "#/components/schemas/GrantConstraints"
        GrantTokens:
          $ref: "#/components/schemas/GrantTokenList"
        Name:
          $ref: "#/components/schemas/GrantNameType"
    DisabledException: {}
    InvalidGrantTokenException: {}
    CreateKeyResponse:
      type: object
      example:
        KeyMetadata:
          AWSAccountId: "111122223333"
          Arn: arn:aws:kms:us-east-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab
          CreationDate: 2017-07-05T14:04:55-07:00
          Description: ""
          Enabled: true
          KeyId: 1234abcd-12ab-34cd-56ef-1234567890ab
          KeyManager: CUSTOMER
          KeyState: Enabled
          KeyUsage: ENCRYPT_DECRYPT
          Origin: AWS_KMS
      properties:
        KeyMetadata:
          $ref: "#/components/schemas/KeyMetadata"
    CreateKeyRequest:
      type: object
      properties:
        Policy:
          $ref: "#/components/schemas/PolicyType"
        Description:
          $ref: "#/components/schemas/DescriptionType"
        KeyUsage:
          $ref: "#/components/schemas/KeyUsageType"
        Origin:
          $ref: "#/components/schemas/OriginType"
        CustomKeyStoreId:
          $ref: "#/components/schemas/CustomKeyStoreIdType"
        BypassPolicyLockoutSafetyCheck:
          $ref: "#/components/schemas/BooleanType"
        Tags:
          $ref: "#/components/schemas/TagList"
    MalformedPolicyDocumentException: {}
    UnsupportedOperationException: {}
    TagException: {}
    DecryptResponse:
      type: object
      example:
        KeyId: arn:aws:kms:us-west-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab
        Plaintext: <binary data>
      properties:
        KeyId:
          $ref: "#/components/schemas/KeyIdType"
        Plaintext:
          $ref: "#/components/schemas/PlaintextType"
    DecryptRequest:
      type: object
      required:
        - CiphertextBlob
      properties:
        CiphertextBlob:
          $ref: "#/components/schemas/CiphertextType"
        EncryptionContext:
          $ref: "#/components/schemas/EncryptionContextType"
        GrantTokens:
          $ref: "#/components/schemas/GrantTokenList"
    InvalidCiphertextException: {}
    KeyUnavailableException: {}
    DeleteAliasRequest:
      type: object
      required:
        - AliasName
      properties:
        AliasName:
          $ref: "#/components/schemas/AliasNameType"
    DeleteCustomKeyStoreResponse:
      type: object
      properties: {}
    DeleteCustomKeyStoreRequest:
      type: object
      required:
        - CustomKeyStoreId
      properties:
        CustomKeyStoreId:
          $ref: "#/components/schemas/CustomKeyStoreIdType"
    CustomKeyStoreHasCMKsException: {}
    DeleteImportedKeyMaterialRequest:
      type: object
      required:
        - KeyId
      properties:
        KeyId:
          $ref: "#/components/schemas/KeyIdType"
    DescribeCustomKeyStoresResponse:
      type: object
      properties:
        CustomKeyStores:
          $ref: "#/components/schemas/CustomKeyStoresList"
        NextMarker:
          $ref: "#/components/schemas/MarkerType"
        Truncated:
          $ref: "#/components/schemas/BooleanType"
    DescribeCustomKeyStoresRequest:
      type: object
      properties:
        CustomKeyStoreId:
          $ref: "#/components/schemas/CustomKeyStoreIdType"
        CustomKeyStoreName:
          $ref: "#/components/schemas/CustomKeyStoreNameType"
        Limit:
          $ref: "#/components/schemas/LimitType"
        Marker:
          $ref: "#/components/schemas/MarkerType"
    DescribeKeyResponse:
      type: object
      example:
        KeyMetadata:
          AWSAccountId: "111122223333"
          Arn: arn:aws:kms:us-east-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab
          CreationDate: 2017-07-05T14:04:55-07:00
          Description: ""
          Enabled: true
          KeyId: 1234abcd-12ab-34cd-56ef-1234567890ab
          KeyManager: CUSTOMER
          KeyState: Enabled
          KeyUsage: ENCRYPT_DECRYPT
          Origin: AWS_KMS
      properties:
        KeyMetadata:
          $ref: "#/components/schemas/KeyMetadata"
    DescribeKeyRequest:
      type: object
      required:
        - KeyId
      properties:
        KeyId:
          $ref: "#/components/schemas/KeyIdType"
        GrantTokens:
          $ref: "#/components/schemas/GrantTokenList"
    DisableKeyRequest:
      type: object
      required:
        - KeyId
      properties:
        KeyId:
          $ref: "#/components/schemas/KeyIdType"
    DisableKeyRotationRequest:
      type: object
      required:
        - KeyId
      properties:
        KeyId:
          $ref: "#/components/schemas/KeyIdType"
    DisconnectCustomKeyStoreResponse:
      type: object
      properties: {}
    DisconnectCustomKeyStoreRequest:
      type: object
      required:
        - CustomKeyStoreId
      properties:
        CustomKeyStoreId:
          $ref: "#/components/schemas/CustomKeyStoreIdType"
    EnableKeyRequest:
      type: object
      required:
        - KeyId
      properties:
        KeyId:
          $ref: "#/components/schemas/KeyIdType"
    EnableKeyRotationRequest:
      type: object
      required:
        - KeyId
      properties:
        KeyId:
          $ref: "#/components/schemas/KeyIdType"
    EncryptResponse:
      type: object
      example:
        CiphertextBlob: <binary data>
        KeyId: arn:aws:kms:us-west-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab
      properties:
        CiphertextBlob:
          $ref: "#/components/schemas/CiphertextType"
        KeyId:
          $ref: "#/components/schemas/KeyIdType"
    EncryptRequest:
      type: object
      required:
        - KeyId
        - Plaintext
      properties:
        KeyId:
          $ref: "#/components/schemas/KeyIdType"
        Plaintext:
          $ref: "#/components/schemas/PlaintextType"
        EncryptionContext:
          $ref: "#/components/schemas/EncryptionContextType"
        GrantTokens:
          $ref: "#/components/schemas/GrantTokenList"
    InvalidKeyUsageException: {}
    GenerateDataKeyResponse:
      type: object
      example:
        CiphertextBlob: <binary data>
        KeyId: arn:aws:kms:us-east-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab
        Plaintext: <binary data>
      properties:
        CiphertextBlob:
          $ref: "#/components/schemas/CiphertextType"
        Plaintext:
          $ref: "#/components/schemas/PlaintextType"
        KeyId:
          $ref: "#/components/schemas/KeyIdType"
    GenerateDataKeyRequest:
      type: object
      required:
        - KeyId
      properties:
        KeyId:
          $ref: "#/components/schemas/KeyIdType"
        EncryptionContext:
          $ref: "#/components/schemas/EncryptionContextType"
        NumberOfBytes:
          $ref: "#/components/schemas/NumberOfBytesType"
        KeySpec:
          $ref: "#/components/schemas/DataKeySpec"
        GrantTokens:
          $ref: "#/components/schemas/GrantTokenList"
    GenerateDataKeyWithoutPlaintextResponse:
      type: object
      example:
        CiphertextBlob: <binary data>
        KeyId: arn:aws:kms:us-east-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab
      properties:
        CiphertextBlob:
          $ref: "#/components/schemas/CiphertextType"
        KeyId:
          $ref: "#/components/schemas/KeyIdType"
    GenerateDataKeyWithoutPlaintextRequest:
      type: object
      required:
        - KeyId
      properties:
        KeyId:
          $ref: "#/components/schemas/KeyIdType"
        EncryptionContext:
          $ref: "#/components/schemas/EncryptionContextType"
        KeySpec:
          $ref: "#/components/schemas/DataKeySpec"
        NumberOfBytes:
          $ref: "#/components/schemas/NumberOfBytesType"
        GrantTokens:
          $ref: "#/components/schemas/GrantTokenList"
    GenerateRandomResponse:
      type: object
      example:
        Plaintext: <binary data>
      properties:
        Plaintext:
          $ref: "#/components/schemas/PlaintextType"
    GenerateRandomRequest:
      type: object
      properties:
        NumberOfBytes:
          $ref: "#/components/schemas/NumberOfBytesType"
        CustomKeyStoreId:
          $ref: "#/components/schemas/CustomKeyStoreIdType"
    GetKeyPolicyResponse:
      type: object
      example:
        Policy: |-
          {
            "Version" : "2012-10-17",
            "Id" : "key-default-1",
            "Statement" : [ {
              "Sid" : "Enable IAM User Permissions",
              "Effect" : "Allow",
              "Principal" : {
                "AWS" : "arn:aws:iam::111122223333:root"
              },
              "Action" : "kms:*",
              "Resource" : "*"
            } ]
          }
      properties:
        Policy:
          $ref: "#/components/schemas/PolicyType"
    GetKeyPolicyRequest:
      type: object
      required:
        - KeyId
        - PolicyName
      properties:
        KeyId:
          $ref: "#/components/schemas/KeyIdType"
        PolicyName:
          $ref: "#/components/schemas/PolicyNameType"
    GetKeyRotationStatusResponse:
      type: object
      example:
        KeyRotationEnabled: true
      properties:
        KeyRotationEnabled:
          $ref: "#/components/schemas/BooleanType"
    GetKeyRotationStatusRequest:
      type: object
      required:
        - KeyId
      properties:
        KeyId:
          $ref: "#/components/schemas/KeyIdType"
    GetParametersForImportResponse:
      type: object
      example:
        ImportToken: <binary data>
        KeyId: arn:aws:kms:us-east-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab
        ParametersValidTo: 2016-12-01T14:52:17-08:00
        PublicKey: <binary data>
      properties:
        KeyId:
          $ref: "#/components/schemas/KeyIdType"
        ImportToken:
          $ref: "#/components/schemas/CiphertextType"
        PublicKey:
          $ref: "#/components/schemas/PlaintextType"
        ParametersValidTo:
          $ref: "#/components/schemas/DateType"
    GetParametersForImportRequest:
      type: object
      required:
        - KeyId
        - WrappingAlgorithm
        - WrappingKeySpec
      properties:
        KeyId:
          $ref: "#/components/schemas/KeyIdType"
        WrappingAlgorithm:
          $ref: "#/components/schemas/AlgorithmSpec"
        WrappingKeySpec:
          $ref: "#/components/schemas/WrappingKeySpec"
    ImportKeyMaterialResponse:
      type: object
      properties: {}
    ImportKeyMaterialRequest:
      type: object
      required:
        - KeyId
        - ImportToken
        - EncryptedKeyMaterial
      properties:
        KeyId:
          $ref: "#/components/schemas/KeyIdType"
        ImportToken:
          $ref: "#/components/schemas/CiphertextType"
        EncryptedKeyMaterial:
          $ref: "#/components/schemas/CiphertextType"
        ValidTo:
          $ref: "#/components/schemas/DateType"
        ExpirationModel:
          $ref: "#/components/schemas/ExpirationModelType"
    IncorrectKeyMaterialException: {}
    ExpiredImportTokenException: {}
    InvalidImportTokenException: {}
    ListAliasesResponse:
      type: object
      example:
        Aliases:
          - AliasArn: arn:aws:kms:us-east-2:111122223333:alias/aws/acm
            AliasName: alias/aws/acm
            TargetKeyId: da03f6f7-d279-427a-9cae-de48d07e5b66
          - AliasArn: arn:aws:kms:us-east-2:111122223333:alias/aws/ebs
            AliasName: alias/aws/ebs
            TargetKeyId: 25a217e7-7170-4b8c-8bf6-045ea5f70e5b
          - AliasArn: arn:aws:kms:us-east-2:111122223333:alias/aws/rds
            AliasName: alias/aws/rds
            TargetKeyId: 7ec3104e-c3f2-4b5c-bf42-bfc4772c6685
          - AliasArn: arn:aws:kms:us-east-2:111122223333:alias/aws/redshift
            AliasName: alias/aws/redshift
            TargetKeyId: 08f7a25a-69e2-4fb5-8f10-393db27326fa
          - AliasArn: arn:aws:kms:us-east-2:111122223333:alias/aws/s3
            AliasName: alias/aws/s3
            TargetKeyId: d2b0f1a3-580d-4f79-b836-bc983be8cfa5
          - AliasArn: arn:aws:kms:us-east-2:111122223333:alias/example1
            AliasName: alias/example1
            TargetKeyId: 4da1e216-62d0-46c5-a7c0-5f3a3d2f8046
          - AliasArn: arn:aws:kms:us-east-2:111122223333:alias/example2
            AliasName: alias/example2
            TargetKeyId: f32fef59-2cc2-445b-8573-2d73328acbee
          - AliasArn: arn:aws:kms:us-east-2:111122223333:alias/example3
            AliasName: alias/example3
            TargetKeyId: 1374ef38-d34e-4d5f-b2c9-4e0daee38855
        Truncated: false
      properties:
        Aliases:
          $ref: "#/components/schemas/AliasList"
        NextMarker:
          $ref: "#/components/schemas/MarkerType"
        Truncated:
          $ref: "#/components/schemas/BooleanType"
    ListAliasesRequest:
      type: object
      properties:
        KeyId:
          $ref: "#/components/schemas/KeyIdType"
        Limit:
          $ref: "#/components/schemas/LimitType"
        Marker:
          $ref: "#/components/schemas/MarkerType"
    InvalidMarkerException: {}
    ListGrantsResponse:
      type: object
      example:
        Grants:
          - CreationDate: 2016-12-07T11:09:35-08:00
            GrantId: 0c237476b39f8bc44e45212e08498fbe3151305030726c0590dd8d3e9f3d6a60
            GranteePrincipal: arn:aws:iam::111122223333:role/ExampleRole
            IssuingAccount: arn:aws:iam::444455556666:root
            KeyId: arn:aws:kms:us-east-2:444455556666:key/1234abcd-12ab-34cd-56ef-1234567890ab
            Operations:
              - Decrypt
              - Encrypt
            RetiringPrincipal: arn:aws:iam::111122223333:role/ExampleRole
        Truncated: false
      properties:
        Grants:
          $ref: "#/components/schemas/GrantList"
        NextMarker:
          $ref: "#/components/schemas/MarkerType"
        Truncated:
          $ref: "#/components/schemas/BooleanType"
    ListGrantsRequest:
      type: object
      required:
        - KeyId
      properties:
        Limit:
          $ref: "#/components/schemas/LimitType"
        Marker:
          $ref: "#/components/schemas/MarkerType"
        KeyId:
          $ref: "#/components/schemas/KeyIdType"
    ListKeyPoliciesResponse:
      type: object
      example:
        PolicyNames:
          - default
        Truncated: false
      properties:
        PolicyNames:
          $ref: "#/components/schemas/PolicyNameList"
        NextMarker:
          $ref: "#/components/schemas/MarkerType"
        Truncated:
          $ref: "#/components/schemas/BooleanType"
    ListKeyPoliciesRequest:
      type: object
      required:
        - KeyId
      properties:
        KeyId:
          $ref: "#/components/schemas/KeyIdType"
        Limit:
          $ref: "#/components/schemas/LimitType"
        Marker:
          $ref: "#/components/schemas/MarkerType"
    ListKeysResponse:
      type: object
      example:
        Keys:
          - KeyArn: arn:aws:kms:us-east-2:111122223333:key/0d990263-018e-4e65-a703-eff731de951e
            KeyId: 0d990263-018e-4e65-a703-eff731de951e
          - KeyArn: arn:aws:kms:us-east-2:111122223333:key/144be297-0ae1-44ac-9c8f-93cd8c82f841
            KeyId: 144be297-0ae1-44ac-9c8f-93cd8c82f841
          - KeyArn: arn:aws:kms:us-east-2:111122223333:key/21184251-b765-428e-b852-2c7353e72571
            KeyId: 21184251-b765-428e-b852-2c7353e72571
          - KeyArn: arn:aws:kms:us-east-2:111122223333:key/214fe92f-5b03-4ae1-b350-db2a45dbe10c
            KeyId: 214fe92f-5b03-4ae1-b350-db2a45dbe10c
          - KeyArn: arn:aws:kms:us-east-2:111122223333:key/339963f2-e523-49d3-af24-a0fe752aa458
            KeyId: 339963f2-e523-49d3-af24-a0fe752aa458
          - KeyArn: arn:aws:kms:us-east-2:111122223333:key/b776a44b-df37-4438-9be4-a27494e4271a
            KeyId: b776a44b-df37-4438-9be4-a27494e4271a
          - KeyArn: arn:aws:kms:us-east-2:111122223333:key/deaf6c9e-cf2c-46a6-bf6d-0b6d487cffbb
            KeyId: deaf6c9e-cf2c-46a6-bf6d-0b6d487cffbb
        Truncated: false
      properties:
        Keys:
          $ref: "#/components/schemas/KeyList"
        NextMarker:
          $ref: "#/components/schemas/MarkerType"
        Truncated:
          $ref: "#/components/schemas/BooleanType"
    ListKeysRequest:
      type: object
      properties:
        Limit:
          $ref: "#/components/schemas/LimitType"
        Marker:
          $ref: "#/components/schemas/MarkerType"
    ListResourceTagsResponse:
      type: object
      example:
        Tags:
          - TagKey: CostCenter
            TagValue: "87654"
          - TagKey: CreatedBy
            TagValue: ExampleUser
          - TagKey: Purpose
            TagValue: Test
        Truncated: false
      properties:
        Tags:
          $ref: "#/components/schemas/TagList"
        NextMarker:
          $ref: "#/components/schemas/MarkerType"
        Truncated:
          $ref: "#/components/schemas/BooleanType"
    ListResourceTagsRequest:
      type: object
      required:
        - KeyId
      properties:
        KeyId:
          $ref: "#/components/schemas/KeyIdType"
        Limit:
          $ref: "#/components/schemas/LimitType"
        Marker:
          $ref: "#/components/schemas/MarkerType"
    ListRetirableGrantsRequest:
      type: object
      required:
        - RetiringPrincipal
      properties:
        Limit:
          $ref: "#/components/schemas/LimitType"
        Marker:
          $ref: "#/components/schemas/MarkerType"
        RetiringPrincipal:
          $ref: "#/components/schemas/PrincipalIdType"
    PutKeyPolicyRequest:
      type: object
      required:
        - KeyId
        - PolicyName
        - Policy
      properties:
        KeyId:
          $ref: "#/components/schemas/KeyIdType"
        PolicyName:
          $ref: "#/components/schemas/PolicyNameType"
        Policy:
          $ref: "#/components/schemas/PolicyType"
        BypassPolicyLockoutSafetyCheck:
          $ref: "#/components/schemas/BooleanType"
    ReEncryptResponse:
      type: object
      example:
        CiphertextBlob: <binary data>
        KeyId: arn:aws:kms:us-east-2:111122223333:key/0987dcba-09fe-87dc-65ba-ab0987654321
        SourceKeyId: arn:aws:kms:us-east-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab
      properties:
        CiphertextBlob:
          $ref: "#/components/schemas/CiphertextType"
        SourceKeyId:
          $ref: "#/components/schemas/KeyIdType"
        KeyId:
          $ref: "#/components/schemas/KeyIdType"
    ReEncryptRequest:
      type: object
      required:
        - CiphertextBlob
        - DestinationKeyId
      properties:
        CiphertextBlob:
          $ref: "#/components/schemas/CiphertextType"
        SourceEncryptionContext:
          $ref: "#/components/schemas/EncryptionContextType"
        DestinationKeyId:
          $ref: "#/components/schemas/KeyIdType"
        DestinationEncryptionContext:
          $ref: "#/components/schemas/EncryptionContextType"
        GrantTokens:
          $ref: "#/components/schemas/GrantTokenList"
    RetireGrantRequest:
      type: object
      properties:
        GrantToken:
          $ref: "#/components/schemas/GrantTokenType"
        KeyId:
          $ref: "#/components/schemas/KeyIdType"
        GrantId:
          $ref: "#/components/schemas/GrantIdType"
    InvalidGrantIdException: {}
    RevokeGrantRequest:
      type: object
      required:
        - KeyId
        - GrantId
      properties:
        KeyId:
          $ref: "#/components/schemas/KeyIdType"
        GrantId:
          $ref: "#/components/schemas/GrantIdType"
    ScheduleKeyDeletionResponse:
      type: object
      example:
        DeletionDate: 2016-12-17T16:00:00-08:00
        KeyId: arn:aws:kms:us-east-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab
      properties:
        KeyId:
          $ref: "#/components/schemas/KeyIdType"
        DeletionDate:
          $ref: "#/components/schemas/DateType"
    ScheduleKeyDeletionRequest:
      type: object
      required:
        - KeyId
      properties:
        KeyId:
          $ref: "#/components/schemas/KeyIdType"
        PendingWindowInDays:
          $ref: "#/components/schemas/PendingWindowInDaysType"
    TagResourceRequest:
      type: object
      required:
        - KeyId
        - Tags
      properties:
        KeyId:
          $ref: "#/components/schemas/KeyIdType"
        Tags:
          $ref: "#/components/schemas/TagList"
    UntagResourceRequest:
      type: object
      required:
        - KeyId
        - TagKeys
      properties:
        KeyId:
          $ref: "#/components/schemas/KeyIdType"
        TagKeys:
          $ref: "#/components/schemas/TagKeyList"
    UpdateAliasRequest:
      type: object
      required:
        - AliasName
        - TargetKeyId
      properties:
        AliasName:
          $ref: "#/components/schemas/AliasNameType"
        TargetKeyId:
          $ref: "#/components/schemas/KeyIdType"
    UpdateCustomKeyStoreResponse:
      type: object
      properties: {}
    UpdateCustomKeyStoreRequest:
      type: object
      required:
        - CustomKeyStoreId
      properties:
        CustomKeyStoreId:
          $ref: "#/components/schemas/CustomKeyStoreIdType"
        NewCustomKeyStoreName:
          $ref: "#/components/schemas/CustomKeyStoreNameType"
        KeyStorePassword:
          $ref: "#/components/schemas/KeyStorePasswordType"
        CloudHsmClusterId:
          $ref: "#/components/schemas/CloudHsmClusterIdType"
    CloudHsmClusterNotRelatedException: {}
    UpdateKeyDescriptionRequest:
      type: object
      required:
        - KeyId
        - Description
      properties:
        KeyId:
          $ref: "#/components/schemas/KeyIdType"
        Description:
          $ref: "#/components/schemas/DescriptionType"
    AWSAccountIdType:
      type: string
    AlgorithmSpec:
      type: string
      enum:
        - RSAES_PKCS1_V1_5
        - RSAES_OAEP_SHA_1
        - RSAES_OAEP_SHA_256
    AliasListEntry:
      type: object
      properties:
        AliasName:
          $ref: "#/components/schemas/AliasNameType"
        AliasArn:
          $ref: "#/components/schemas/ArnType"
        TargetKeyId:
          $ref: "#/components/schemas/KeyIdType"
      description: Contains information about an alias.
    AliasList:
      type: array
      items:
        $ref: "#/components/schemas/AliasListEntry"
    AliasNameType:
      type: string
      pattern: ^[a-zA-Z0-9:/_-]+$
      minLength: 1
      maxLength: 256
    ArnType:
      type: string
      minLength: 20
      maxLength: 2048
    KeyIdType:
      type: string
      minLength: 1
      maxLength: 2048
    BooleanType:
      type: boolean
    CiphertextType:
      type: string
      minLength: 1
      maxLength: 6144
    CloudHsmClusterIdType:
      type: string
      minLength: 19
      maxLength: 24
    CustomKeyStoreIdType:
      type: string
      minLength: 1
      maxLength: 64
    ConnectionErrorCodeType:
      type: string
      enum:
        - INVALID_CREDENTIALS
        - CLUSTER_NOT_FOUND
        - NETWORK_ERRORS
        - INTERNAL_ERROR
        - INSUFFICIENT_CLOUDHSM_HSMS
        - USER_LOCKED_OUT
    ConnectionStateType:
      type: string
      enum:
        - CONNECTED
        - CONNECTING
        - FAILED
        - DISCONNECTED
        - DISCONNECTING
    CustomKeyStoreNameType:
      type: string
      minLength: 1
      maxLength: 256
    TrustAnchorCertificateType:
      type: string
      minLength: 1
      maxLength: 5000
    KeyStorePasswordType:
      type: string
      minLength: 1
      format: password
    PrincipalIdType:
      type: string
      pattern: ^[\w+=,.@:/-]+$
      minLength: 1
      maxLength: 256
    GrantOperationList:
      type: array
      items:
        $ref: "#/components/schemas/GrantOperation"
    GrantConstraints:
      type: object
      properties:
        EncryptionContextSubset:
          $ref: "#/components/schemas/EncryptionContextType"
        EncryptionContextEquals:
          $ref: "#/components/schemas/EncryptionContextType"
      description: <p>Use this structure to allow cryptographic operations in the grant
        only when the operation request includes the specified <a
        href="https://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#encrypt_context">encryption
        context</a>.</p> <p>AWS KMS applies the grant constraints only when the
        grant allows a cryptographic operation that accepts an encryption
        context as input, such as the following.</p> <ul> <li> <p>
        <a>Encrypt</a> </p> </li> <li> <p> <a>Decrypt</a> </p> </li> <li> <p>
        <a>GenerateDataKey</a> </p> </li> <li> <p>
        <a>GenerateDataKeyWithoutPlaintext</a> </p> </li> <li> <p>
        <a>ReEncrypt</a> </p> </li> </ul> <p>AWS KMS does not apply the grant
        constraints to other operations, such as <a>DescribeKey</a> or
        <a>ScheduleKeyDeletion</a>.</p> <important> <p>In a cryptographic
        operation, the encryption context in the decryption operation must be an
        exact, case-sensitive match for the keys and values in the encryption
        context of the encryption operation. Only the order of the pairs can
        vary.</p> <p>However, in a grant constraint, the key in each key-value
        pair is not case sensitive, but the value is case sensitive.</p> <p>To
        avoid confusion, do not use multiple encryption context pairs that
        differ only by case. To require a fully case-sensitive encryption
        context, use the <code>kms:EncryptionContext:</code> and
        <code>kms:EncryptionContextKeys</code> conditions in an IAM or key
        policy. For details, see <a
        href="https://docs.aws.amazon.com/kms/latest/developerguide/policy-conditions.html#conditions-kms-encryption-context">kms:EncryptionContext:</a>
        in the <i> <i>AWS Key Management Service Developer Guide</i> </i>.</p>
        </important>
    GrantTokenList:
      type: array
      items:
        $ref: "#/components/schemas/GrantTokenType"
      minItems: 0
      maxItems: 10
    GrantNameType:
      type: string
      pattern: ^[a-zA-Z0-9:/_-]+$
      minLength: 1
      maxLength: 256
    GrantTokenType:
      type: string
      minLength: 1
      maxLength: 8192
    GrantIdType:
      type: string
      minLength: 1
      maxLength: 128
    PolicyType:
      type: string
      pattern: "[\\u0009\\u000A\\u000D\\u0020-\\u00FF]+"
      minLength: 1
      maxLength: 131072
    DescriptionType:
      type: string
      minLength: 0
      maxLength: 8192
    KeyUsageType:
      type: string
      enum:
        - ENCRYPT_DECRYPT
    OriginType:
      type: string
      enum:
        - AWS_KMS
        - EXTERNAL
        - AWS_CLOUDHSM
    TagList:
      type: array
      items:
        $ref: "#/components/schemas/Tag"
    KeyMetadata:
      type: object
      required:
        - KeyId
      properties:
        AWSAccountId:
          $ref: "#/components/schemas/AWSAccountIdType"
        KeyId:
          $ref: "#/components/schemas/KeyIdType"
        Arn:
          $ref: "#/components/schemas/ArnType"
        CreationDate:
          $ref: "#/components/schemas/DateType"
        Enabled:
          $ref: "#/components/schemas/BooleanType"
        Description:
          $ref: "#/components/schemas/DescriptionType"
        KeyUsage:
          $ref: "#/components/schemas/KeyUsageType"
        KeyState:
          $ref: "#/components/schemas/KeyState"
        DeletionDate:
          $ref: "#/components/schemas/DateType"
        ValidTo:
          $ref: "#/components/schemas/DateType"
        Origin:
          $ref: "#/components/schemas/OriginType"
        CustomKeyStoreId:
          $ref: "#/components/schemas/CustomKeyStoreIdType"
        CloudHsmClusterId:
          $ref: "#/components/schemas/CloudHsmClusterIdType"
        ExpirationModel:
          $ref: "#/components/schemas/ExpirationModelType"
        KeyManager:
          $ref: "#/components/schemas/KeyManagerType"
      description: <p>Contains metadata about a customer master key (CMK).</p> <p>This data
        type is used as a response element for the <a>CreateKey</a> and
        <a>DescribeKey</a> operations.</p>
    CustomKeyStoresListEntry:
      type: object
      properties:
        CustomKeyStoreId:
          $ref: "#/components/schemas/CustomKeyStoreIdType"
        CustomKeyStoreName:
          $ref: "#/components/schemas/CustomKeyStoreNameType"
        CloudHsmClusterId:
          $ref: "#/components/schemas/CloudHsmClusterIdType"
        TrustAnchorCertificate:
          $ref: "#/components/schemas/TrustAnchorCertificateType"
        ConnectionState:
          $ref: "#/components/schemas/ConnectionStateType"
        ConnectionErrorCode:
          $ref: "#/components/schemas/ConnectionErrorCodeType"
        CreationDate:
          $ref: "#/components/schemas/DateType"
      description: Contains information about each custom key store in the custom key store
        list.
    CustomKeyStoresList:
      type: array
      items:
        $ref: "#/components/schemas/CustomKeyStoresListEntry"
    DateType:
      type: string
      format: date-time
    DataKeySpec:
      type: string
      enum:
        - AES_256
        - AES_128
    EncryptionContextType:
      type: object
      additionalProperties:
        $ref: "#/components/schemas/EncryptionContextValue"
    PlaintextType:
      type: string
      minLength: 1
      maxLength: 4096
      format: password
    LimitType:
      type: integer
      minimum: 1
      maximum: 1000
    MarkerType:
      type: string
      pattern: "[\\u0020-\\u00FF]*"
      minLength: 1
      maxLength: 1024
    EncryptionContextKey:
      type: string
    EncryptionContextValue:
      type: string
    ExpirationModelType:
      type: string
      enum:
        - KEY_MATERIAL_EXPIRES
        - KEY_MATERIAL_DOES_NOT_EXPIRE
    NumberOfBytesType:
      type: integer
      minimum: 1
      maximum: 1024
    PolicyNameType:
      type: string
      pattern: "[\\w]+"
      minLength: 1
      maxLength: 128
    WrappingKeySpec:
      type: string
      enum:
        - RSA_2048
    GrantListEntry:
      type: object
      properties:
        KeyId:
          $ref: "#/components/schemas/KeyIdType"
        GrantId:
          $ref: "#/components/schemas/GrantIdType"
        Name:
          $ref: "#/components/schemas/GrantNameType"
        CreationDate:
          $ref: "#/components/schemas/DateType"
        GranteePrincipal:
          $ref: "#/components/schemas/PrincipalIdType"
        RetiringPrincipal:
          $ref: "#/components/schemas/PrincipalIdType"
        IssuingAccount:
          $ref: "#/components/schemas/PrincipalIdType"
        Operations:
          $ref: "#/components/schemas/GrantOperationList"
        Constraints:
          $ref: "#/components/schemas/GrantConstraints"
      description: Contains information about an entry in a list of grants.
    GrantList:
      type: array
      items:
        $ref: "#/components/schemas/GrantListEntry"
    GrantOperation:
      type: string
      enum:
        - Decrypt
        - Encrypt
        - GenerateDataKey
        - GenerateDataKeyWithoutPlaintext
        - ReEncryptFrom
        - ReEncryptTo
        - CreateGrant
        - RetireGrant
        - DescribeKey
    KeyListEntry:
      type: object
      properties:
        KeyId:
          $ref: "#/components/schemas/KeyIdType"
        KeyArn:
          $ref: "#/components/schemas/ArnType"
      description: Contains information about each entry in the key list.
    KeyList:
      type: array
      items:
        $ref: "#/components/schemas/KeyListEntry"
    KeyManagerType:
      type: string
      enum:
        - AWS
        - CUSTOMER
    KeyState:
      type: string
      enum:
        - Enabled
        - Disabled
        - PendingDeletion
        - PendingImport
        - Unavailable
    PolicyNameList:
      type: array
      items:
        $ref: "#/components/schemas/PolicyNameType"
    PendingWindowInDaysType:
      type: integer
      minimum: 1
      maximum: 365
    TagKeyType:
      type: string
      minLength: 1
      maxLength: 128
    TagValueType:
      type: string
      minLength: 0
      maxLength: 256
    Tag:
      type: object
      required:
        - TagKey
        - TagValue
      properties:
        TagKey:
          $ref: "#/components/schemas/TagKeyType"
        TagValue:
          $ref: "#/components/schemas/TagValueType"
      description: <p>A key-value pair. A tag consists of a tag key and a tag value. Tag
        keys and tag values are both required, but tag values can be empty
        (null) strings.</p> <p>For information about the rules that apply to tag
        keys and tag values, see <a
        href="https://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/allocation-tag-restrictions.html">User-Defined
        Tag Restrictions</a> in the <i>AWS Billing and Cost Management User
        Guide</i>.</p>
    TagKeyList:
      type: array
      items:
        $ref: "#/components/schemas/TagKeyType"
