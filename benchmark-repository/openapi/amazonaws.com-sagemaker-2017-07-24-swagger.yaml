openapi: 3.0.0
info:
  version: 2017-07-24
  x-release: v4
  title: Amazon SageMaker Service
  description: Provides APIs for creating and managing Amazon SageMaker resources.
  x-logo:
    url: https://twitter.com/awscloud/profile_image?size=original
    backgroundColor: "#FFFFFF"
  termsOfService: https://aws.amazon.com/service-terms/
  contact:
    name: Mike Ralphson
    email: mike.ralphson@gmail.com
    url: https://github.com/mermade/aws2openapi
    x-twitter: PermittedSoc
  license:
    name: Apache 2.0 License
    url: http://www.apache.org/licenses/
  x-providerName: amazonaws.com
  x-serviceName: sagemaker
  x-origin:
    - contentType: application/json
      url: https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/sagemaker-2017-07-24.normal.json
      converter:
        url: https://github.com/mermade/aws2openapi
        version: 1.0.0
      x-apisguru-direct: true
  x-apiClientRegistration:
    url: https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct
  x-apisguru-categories:
    - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: https://docs.aws.amazon.com/sagemaker/
x-hasEquivalentPaths: true
security:
  - hmac: []
paths:
  /#X-Amz-Target=SageMaker.AddTags:
    post:
      operationId: AddTags
      description: <p>Adds or overwrites one or more tags for the specified Amazon
        SageMaker resource. You can add tags to notebook instances, training
        jobs, hyperparameter tuning jobs, batch transform jobs, models, labeling
        jobs, work teams, endpoint configurations, and endpoints.</p> <p>Each
        tag consists of a key and an optional value. Tag keys must be unique per
        resource. For more information about tags, see For more information, see
        <a
        href="https://aws.amazon.com/answers/account-management/aws-tagging-strategies/">AWS
        Tagging Strategies</a>.</p> <note> <p>Tags that you add to a
        hyperparameter tuning job by calling this API are also added to any
        training jobs that the hyperparameter tuning job launches after you call
        this API, but not to training jobs that the hyperparameter tuning job
        launched before you called this API. To make sure that the tags
        associated with a hyperparameter tuning job are also added to all
        training jobs that the hyperparameter tuning job launches, add the tags
        when you first create the tuning job by specifying them in the
        <code>Tags</code> parameter of <a>CreateHyperParameterTuningJob</a> </p>
        </note>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AddTagsOutput"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.AddTags
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AddTagsInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=SageMaker.CreateAlgorithm:
    post:
      operationId: CreateAlgorithm
      description: Create a machine learning algorithm that you can use in Amazon SageMaker
        and list in the AWS Marketplace.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateAlgorithmOutput"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.CreateAlgorithm
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateAlgorithmInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=SageMaker.CreateCodeRepository:
    post:
      operationId: CreateCodeRepository
      description: <p>Creates a Git repository as a resource in your Amazon SageMaker
        account. You can associate the repository with notebook instances so
        that you can use Git source control for the notebooks you create. The
        Git repository is a resource in your Amazon SageMaker account, so it can
        be associated with more than one notebook instance, and it persists
        independently from the lifecycle of any notebook instances it is
        associated with.</p> <p>The repository can be hosted either in <a
        href="https://docs.aws.amazon.com/codecommit/latest/userguide/welcome.html">AWS
        CodeCommit</a> or in any other Git repository.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateCodeRepositoryOutput"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.CreateCodeRepository
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateCodeRepositoryInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=SageMaker.CreateCompilationJob:
    post:
      operationId: CreateCompilationJob
      description: <p>Starts a model compilation job. After the model has been compiled,
        Amazon SageMaker saves the resulting model artifacts to an Amazon Simple
        Storage Service (Amazon S3) bucket that you specify. </p> <p>If you
        choose to host your model using Amazon SageMaker hosting services, you
        can use the resulting model artifacts as part of the model. You can also
        use the artifacts with AWS IoT Greengrass. In that case, deploy them as
        an ML resource.</p> <p>In the request body, you provide the
        following:</p> <ul> <li> <p>A name for the compilation job</p> </li>
        <li> <p> Information about the input model artifacts </p> </li> <li>
        <p>The output location for the compiled model and the device (target)
        that the model runs on </p> </li> <li> <p> <code>The Amazon Resource
        Name (ARN) of the IAM role that Amazon SageMaker assumes to perform the
        model compilation job</code> </p> </li> </ul> <p>You can also provide a
        <code>Tag</code> to track the model compilation job's resource use and
        costs. The response body contains the <code>CompilationJobArn</code> for
        the compiled job.</p> <p>To stop a model compilation job, use
        <a>StopCompilationJob</a>. To get information about a particular model
        compilation job, use <a>DescribeCompilationJob</a>. To get information
        about multiple model compilation jobs, use
        <a>ListCompilationJobs</a>.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateCompilationJobResponse"
        "480":
          description: ResourceInUse
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceInUse"
        "481":
          description: ResourceLimitExceeded
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceLimitExceeded"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.CreateCompilationJob
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateCompilationJobRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=SageMaker.CreateEndpoint:
    post:
      operationId: CreateEndpoint
      description: '<p>Creates an endpoint using the endpoint configuration specified in
        the request. Amazon SageMaker uses the endpoint to provision resources
        and deploy models. You create the endpoint configuration with the <a
        href="https://docs.aws.amazon.com/sagemaker/latest/dg/API_CreateEndpointConfig.html">CreateEndpointConfig</a>
        API. </p> <note> <p> Use this API only for hosting models using Amazon
        SageMaker hosting services. </p> <p> You must not delete an
        <code>EndpointConfig</code> in use by an endpoint that is live or while
        the <code>UpdateEndpoint</code> or <code>CreateEndpoint</code>
        operations are being performed on the endpoint. To update an endpoint,
        you must create a new <code>EndpointConfig</code>.</p> </note> <p>The
        endpoint name must be unique within an AWS Region in your AWS account.
        </p> <p>When it receives the request, Amazon SageMaker creates the
        endpoint, launches the resources (ML compute instances), and deploys the
        model(s) on them. </p> <p>When Amazon SageMaker receives the request, it
        sets the endpoint status to <code>Creating</code>. After it creates the
        endpoint, it sets the status to <code>InService</code>. Amazon SageMaker
        can then process incoming requests for inferences. To check the status
        of an endpoint, use the <a
        href="https://docs.aws.amazon.com/sagemaker/latest/dg/API_DescribeEndpoint.html">DescribeEndpoint</a>
        API.</p> <p>For an example, see <a
        href="https://docs.aws.amazon.com/sagemaker/latest/dg/ex1.html">Exercise
        1: Using the K-Means Algorithm Provided by Amazon SageMaker</a>. </p>
        <p>If any of the models hosted at this endpoint get model data from an
        Amazon S3 location, Amazon SageMaker uses AWS Security Token Service to
        download model artifacts from the S3 path you provided. AWS STS is
        activated in your IAM user account by default. If you previously
        deactivated AWS STS for a region, you need to reactivate AWS STS for
        that region. For more information, see <a
        href="IAM/latest/UserGuide/id_credentials_temp_enable-regions.html">Activating
        and Deactivating AWS STS i an AWS Region</a> in the <i>AWS Identity and
        Access Management User Guide</i>.</p>'
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateEndpointOutput"
        "480":
          description: ResourceLimitExceeded
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceLimitExceeded"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.CreateEndpoint
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateEndpointInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=SageMaker.CreateEndpointConfig:
    post:
      operationId: CreateEndpointConfig
      description: <p>Creates an endpoint configuration that Amazon SageMaker hosting
        services uses to deploy models. In the configuration, you identify one
        or more models, created using the <code>CreateModel</code> API, to
        deploy and the resources that you want Amazon SageMaker to provision.
        Then you call the <a
        href="https://docs.aws.amazon.com/sagemaker/latest/dg/API_CreateEndpoint.html">CreateEndpoint</a>
        API.</p> <note> <p> Use this API only if you want to use Amazon
        SageMaker hosting services to deploy models into production. </p>
        </note> <p>In the request, you define one or more
        <code>ProductionVariant</code>s, each of which identifies a model. Each
        <code>ProductionVariant</code> parameter also describes the resources
        that you want Amazon SageMaker to provision. This includes the number
        and type of ML compute instances to deploy. </p> <p>If you are hosting
        multiple models, you also assign a <code>VariantWeight</code> to specify
        how much traffic you want to allocate to each model. For example,
        suppose that you want to host two models, A and B, and you assign
        traffic weight 2 for model A and 1 for model B. Amazon SageMaker
        distributes two-thirds of the traffic to Model A, and one-third to model
        B. </p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateEndpointConfigOutput"
        "480":
          description: ResourceLimitExceeded
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceLimitExceeded"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.CreateEndpointConfig
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateEndpointConfigInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=SageMaker.CreateHyperParameterTuningJob:
    post:
      operationId: CreateHyperParameterTuningJob
      description: Starts a hyperparameter tuning job. A hyperparameter tuning job finds
        the best version of a model by running many training jobs on your
        dataset using the algorithm you choose and values for hyperparameters
        within ranges that you specify. It then chooses the hyperparameter
        values that result in a model that performs the best, as measured by an
        objective metric that you choose.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateHyperParameterTuningJobResponse"
        "480":
          description: ResourceInUse
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceInUse"
        "481":
          description: ResourceLimitExceeded
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceLimitExceeded"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.CreateHyperParameterTuningJob
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateHyperParameterTuningJobRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=SageMaker.CreateLabelingJob:
    post:
      operationId: CreateLabelingJob
      description: <p>Creates a job that uses workers to label the data objects in your
        input dataset. You can use the labeled data to train machine learning
        models.</p> <p>You can select your workforce from one of three
        providers:</p> <ul> <li> <p>A private workforce that you create. It can
        include employees, contractors, and outside experts. Use a private
        workforce when want the data to stay within your organization or when a
        specific set of skills is required.</p> </li> <li> <p>One or more
        vendors that you select from the AWS Marketplace. Vendors provide
        expertise in specific areas. </p> </li> <li> <p>The Amazon Mechanical
        Turk workforce. This is the largest workforce, but it should only be
        used for public data or data that has been stripped of any personally
        identifiable information.</p> </li> </ul> <p>You can also use
        <i>automated data labeling</i> to reduce the number of data objects that
        need to be labeled by a human. Automated data labeling uses <i>active
        learning</i> to determine if a data object can be labeled by machine or
        if it needs to be sent to a human worker. For more information, see <a
        href="https://docs.aws.amazon.com/sagemaker/latest/dg/sms-automated-labeling.html">Using
        Automated Data Labeling</a>.</p> <p>The data objects to be labeled are
        contained in an Amazon S3 bucket. You create a <i>manifest file</i> that
        describes the location of each object. For more information, see <a
        href="https://docs.aws.amazon.com/sagemaker/latest/dg/sms-data.html">Using
        Input and Output Data</a>.</p> <p>The output can be used as the manifest
        file for another labeling job or as training data for your machine
        learning models.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateLabelingJobResponse"
        "480":
          description: ResourceInUse
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceInUse"
        "481":
          description: ResourceLimitExceeded
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceLimitExceeded"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.CreateLabelingJob
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateLabelingJobRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=SageMaker.CreateModel:
    post:
      operationId: CreateModel
      description: <p>Creates a model in Amazon SageMaker. In the request, you name the
        model and describe a primary container. For the primary container, you
        specify the docker image containing inference code, artifacts (from
        prior training), and custom environment map that the inference code uses
        when you deploy the model for predictions.</p> <p>Use this API to create
        a model if you want to use Amazon SageMaker hosting services or run a
        batch transform job.</p> <p>To host your model, you create an endpoint
        configuration with the <code>CreateEndpointConfig</code> API, and then
        create an endpoint with the <code>CreateEndpoint</code> API. Amazon
        SageMaker then deploys all of the containers that you defined for the
        model in the hosting environment. </p> <p>To run a batch transform using
        your model, you start a job with the <code>CreateTransformJob</code>
        API. Amazon SageMaker uses your model and your dataset to get inferences
        which are then saved to a specified S3 location.</p> <p>In the
        <code>CreateModel</code> request, you must define a container with the
        <code>PrimaryContainer</code> parameter.</p> <p>In the request, you also
        provide an IAM role that Amazon SageMaker can assume to access model
        artifacts and docker image for deployment on ML compute hosting
        instances or for batch transform jobs. In addition, you also use the IAM
        role to manage permissions the inference code needs. For example, if the
        inference code access any other AWS resources, you grant necessary
        permissions via this role.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateModelOutput"
        "480":
          description: ResourceLimitExceeded
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceLimitExceeded"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.CreateModel
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateModelInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=SageMaker.CreateModelPackage:
    post:
      operationId: CreateModelPackage
      description: <p>Creates a model package that you can use to create Amazon SageMaker
        models or list on AWS Marketplace. Buyers can subscribe to model
        packages listed on AWS Marketplace to create models in Amazon
        SageMaker.</p> <p>To create a model package by specifying a Docker
        container that contains your inference code and the Amazon S3 location
        of your model artifacts, provide values for
        <code>InferenceSpecification</code>. To create a model from an algorithm
        resource that you created or subscribed to in AWS Marketplace, provide a
        value for <code>SourceAlgorithmSpecification</code>.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateModelPackageOutput"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.CreateModelPackage
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateModelPackageInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=SageMaker.CreateNotebookInstance:
    post:
      operationId: CreateNotebookInstance
      description: <p>Creates an Amazon SageMaker notebook instance. A notebook instance is
        a machine learning (ML) compute instance running on a Jupyter notebook.
        </p> <p>In a <code>CreateNotebookInstance</code> request, specify the
        type of ML compute instance that you want to run. Amazon SageMaker
        launches the instance, installs common libraries that you can use to
        explore datasets for model training, and attaches an ML storage volume
        to the notebook instance. </p> <p>Amazon SageMaker also provides a set
        of example notebooks. Each notebook demonstrates how to use Amazon
        SageMaker with a specific algorithm or with a machine learning
        framework. </p> <p>After receiving the request, Amazon SageMaker does
        the following:</p> <ol> <li> <p>Creates a network interface in the
        Amazon SageMaker VPC.</p> </li> <li> <p>(Option) If you specified
        <code>SubnetId</code>, Amazon SageMaker creates a network interface in
        your own VPC, which is inferred from the subnet ID that you provide in
        the input. When creating this network interface, Amazon SageMaker
        attaches the security group that you specified in the request to the
        network interface that it creates in your VPC.</p> </li> <li>
        <p>Launches an EC2 instance of the type specified in the request in the
        Amazon SageMaker VPC. If you specified <code>SubnetId</code> of your
        VPC, Amazon SageMaker specifies both network interfaces when launching
        this instance. This enables inbound traffic from your own VPC to the
        notebook instance, assuming that the security groups allow it.</p> </li>
        </ol> <p>After creating the notebook instance, Amazon SageMaker returns
        its Amazon Resource Name (ARN). You can't change the name of a notebook
        instance after you create it.</p> <p>After Amazon SageMaker creates the
        notebook instance, you can connect to the Jupyter server and work in
        Jupyter notebooks. For example, you can write code to explore a dataset
        that you can use for model training, train a model, host models by
        creating Amazon SageMaker endpoints, and validate hosted models. </p>
        <p>For more information, see <a
        href="https://docs.aws.amazon.com/sagemaker/latest/dg/how-it-works.html">How
        It Works</a>. </p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateNotebookInstanceOutput"
        "480":
          description: ResourceLimitExceeded
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceLimitExceeded"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.CreateNotebookInstance
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateNotebookInstanceInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=SageMaker.CreateNotebookInstanceLifecycleConfig:
    post:
      operationId: CreateNotebookInstanceLifecycleConfig
      description: '<p>Creates a lifecycle configuration that you can associate with a
        notebook instance. A <i>lifecycle configuration</i> is a collection of
        shell scripts that run when you create or start a notebook instance.</p>
        <p>Each lifecycle configuration script has a limit of 16384
        characters.</p> <p>The value of the <code>$PATH</code> environment
        variable that is available to both scripts is
        <code>/sbin:bin:/usr/sbin:/usr/bin</code>.</p> <p>View CloudWatch Logs
        for notebook instance lifecycle configurations in log group
        <code>/aws/sagemaker/NotebookInstances</code> in log stream
        <code>[notebook-instance-name]/[LifecycleConfigHook]</code>.</p>
        <p>Lifecycle configuration scripts cannot run for longer than 5 minutes.
        If a script runs for longer than 5 minutes, it fails and the notebook
        instance is not created or started.</p> <p>For information about
        notebook instance lifestyle configurations, see <a
        href="https://docs.aws.amazon.com/sagemaker/latest/dg/notebook-lifecycle-config.html">Step
        2.1: (Optional) Customize a Notebook Instance</a>.</p>'
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateNotebookInstanceLifecycleConfigOu\
                  tput"
        "480":
          description: ResourceLimitExceeded
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceLimitExceeded"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.CreateNotebookInstanceLifecycleConfig
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateNotebookInstanceLifecycleConfigInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=SageMaker.CreatePresignedNotebookInstanceUrl:
    post:
      operationId: CreatePresignedNotebookInstanceUrl
      description: <p>Returns a URL that you can use to connect to the Jupyter server from
        a notebook instance. In the Amazon SageMaker console, when you choose
        <code>Open</code> next to a notebook instance, Amazon SageMaker opens a
        new tab showing the Jupyter server home page from the notebook instance.
        The console uses this API to get the URL and show the page.</p> <p>IAM
        authorization policies for this API are also enforced for every HTTP
        request and WebSocket frame that attempts to connect to the notebook
        instance.For example, you can restrict access to this API and to the URL
        that it returns to a list of IP addresses that you specify. Use the
        <code>NotIpAddress</code> condition operator and the
        <code>aws:SourceIP</code> condition context key to specify the list of
        IP addresses that you want to have access to the notebook instance. For
        more information, see <a
        href="https://docs.aws.amazon.com/sagemaker/latest/dg/nbi-ip-filter.html">Limit
        Access to a Notebook Instance by IP Address</a>.</p> <note> <p>The URL
        that you get from a call to is valid only for 5 minutes. If you try to
        use the URL after the 5-minute limit expires, you are directed to the
        AWS console sign-in page.</p> </note>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreatePresignedNotebookInstanceUrlOutput"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.CreatePresignedNotebookInstanceUrl
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreatePresignedNotebookInstanceUrlInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=SageMaker.CreateTrainingJob:
    post:
      operationId: CreateTrainingJob
      description: '<p>Starts a model training job. After training completes, Amazon
        SageMaker saves the resulting model artifacts to an Amazon S3 location
        that you specify. </p> <p>If you choose to host your model using Amazon
        SageMaker hosting services, you can use the resulting model artifacts as
        part of the model. You can also use the artifacts in a machine learning
        service other than Amazon SageMaker, provided that you know how to use
        them for inferences. </p> <p>In the request body, you provide the
        following: </p> <ul> <li> <p> <code>AlgorithmSpecification</code> -
        Identifies the training algorithm to use. </p> </li> <li> <p>
        <code>HyperParameters</code> - Specify these algorithm-specific
        parameters to enable the estimation of model parameters during training.
        Hyperparameters can be tuned to optimize this learning process. For a
        list of hyperparameters for each training algorithm provided by Amazon
        SageMaker, see <a
        href="https://docs.aws.amazon.com/sagemaker/latest/dg/algos.html">Algorithms</a>.
        </p> </li> <li> <p> <code>InputDataConfig</code> - Describes the
        training dataset and the Amazon S3, EFS, or FSx location where it is
        stored.</p> </li> <li> <p> <code>OutputDataConfig</code> - Identifies
        the Amazon S3 bucket where you want Amazon SageMaker to save the results
        of model training. </p> <p/> </li> <li> <p> <code>ResourceConfig</code>
        - Identifies the resources, ML compute instances, and ML storage volumes
        to deploy for model training. In distributed training, you specify more
        than one instance. </p> </li> <li> <p>
        <code>EnableManagedSpotTraining</code> - Optimize the cost of training
        machine learning models by up to 80% by using Amazon EC2 Spot instances.
        For more information, see <a
        href="https://docs.aws.amazon.com/sagemaker/latest/dg/model-managed-spot-training.html">Managed
        Spot Training</a>. </p> </li> <li> <p> <code>RoleARN</code> - The Amazon
        Resource Number (ARN) that Amazon SageMaker assumes to perform tasks on
        your behalf during model training. You must grant this role the
        necessary permissions so that Amazon SageMaker can successfully complete
        model training. </p> </li> <li> <p> <code>StoppingCondition</code> - To
        help cap training costs, use <code>MaxRuntimeInSeconds</code> to set a
        time limit for training. Use <code>MaxWaitTimeInSeconds</code> to
        specify how long you are willing to to wait for a managed spot training
        job to complete. </p> </li> </ul> <p> For more information about Amazon
        SageMaker, see <a
        href="https://docs.aws.amazon.com/sagemaker/latest/dg/how-it-works.html">How
        It Works</a>. </p>'
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateTrainingJobResponse"
        "480":
          description: ResourceInUse
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceInUse"
        "481":
          description: ResourceLimitExceeded
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceLimitExceeded"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.CreateTrainingJob
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateTrainingJobRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=SageMaker.CreateTransformJob:
    post:
      operationId: CreateTransformJob
      description: <p>Starts a transform job. A transform job uses a trained model to get
        inferences on a dataset and saves these results to an Amazon S3 location
        that you specify.</p> <p>To perform batch transformations, you create a
        transform job and use the data that you have readily available.</p>
        <p>In the request body, you provide the following:</p> <ul> <li> <p>
        <code>TransformJobName</code> - Identifies the transform job. The name
        must be unique within an AWS Region in an AWS account.</p> </li> <li>
        <p> <code>ModelName</code> - Identifies the model to use.
        <code>ModelName</code> must be the name of an existing Amazon SageMaker
        model in the same AWS Region and AWS account. For information on
        creating a model, see <a>CreateModel</a>.</p> </li> <li> <p>
        <code>TransformInput</code> - Describes the dataset to be transformed
        and the Amazon S3 location where it is stored.</p> </li> <li> <p>
        <code>TransformOutput</code> - Identifies the Amazon S3 location where
        you want Amazon SageMaker to save the results from the transform
        job.</p> </li> <li> <p> <code>TransformResources</code> - Identifies the
        ML compute instances for the transform job.</p> </li> </ul> <p> For more
        information about how batch transformation works Amazon SageMaker, see
        <a
        href="https://docs.aws.amazon.com/sagemaker/latest/dg/batch-transform.html">How
        It Works</a>. </p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateTransformJobResponse"
        "480":
          description: ResourceInUse
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceInUse"
        "481":
          description: ResourceLimitExceeded
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceLimitExceeded"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.CreateTransformJob
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateTransformJobRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=SageMaker.CreateWorkteam:
    post:
      operationId: CreateWorkteam
      description: <p>Creates a new work team for labeling your data. A work team is
        defined by one or more Amazon Cognito user pools. You must first create
        the user pools before you can create a work team.</p> <p>You cannot
        create more than 25 work teams in an account and region.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateWorkteamResponse"
        "480":
          description: ResourceInUse
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceInUse"
        "481":
          description: ResourceLimitExceeded
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceLimitExceeded"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.CreateWorkteam
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateWorkteamRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=SageMaker.DeleteAlgorithm:
    post:
      operationId: DeleteAlgorithm
      description: Removes the specified algorithm from your account.
      responses:
        "200":
          description: Success
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.DeleteAlgorithm
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeleteAlgorithmInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=SageMaker.DeleteCodeRepository:
    post:
      operationId: DeleteCodeRepository
      description: Deletes the specified Git repository from your account.
      responses:
        "200":
          description: Success
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.DeleteCodeRepository
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeleteCodeRepositoryInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=SageMaker.DeleteEndpoint:
    post:
      operationId: DeleteEndpoint
      description: <p>Deletes an endpoint. Amazon SageMaker frees up all of the resources
        that were deployed when the endpoint was created. </p> <p>Amazon
        SageMaker retires any custom KMS key grants associated with the
        endpoint, meaning you don't need to use the <a
        href="http://docs.aws.amazon.com/kms/latest/APIReference/API_RevokeGrant.html">RevokeGrant</a>
        API call.</p>
      responses:
        "200":
          description: Success
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.DeleteEndpoint
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeleteEndpointInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=SageMaker.DeleteEndpointConfig:
    post:
      operationId: DeleteEndpointConfig
      description: "Deletes an endpoint configuration. The
        <code>DeleteEndpointConfig</code> API deletes only the specified
        configuration. It does not delete endpoints created using the
        configuration. "
      responses:
        "200":
          description: Success
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.DeleteEndpointConfig
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeleteEndpointConfigInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=SageMaker.DeleteModel:
    post:
      operationId: DeleteModel
      description: 'Deletes a model. The <code>DeleteModel</code> API deletes only the
        model entry that was created in Amazon SageMaker when you called the <a
        href="https://docs.aws.amazon.com/sagemaker/latest/dg/API_CreateModel.html">CreateModel</a>
        API. It does not delete model artifacts, inference code, or the IAM role
        that you specified when creating the model. '
      responses:
        "200":
          description: Success
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.DeleteModel
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeleteModelInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=SageMaker.DeleteModelPackage:
    post:
      operationId: DeleteModelPackage
      description: <p>Deletes a model package.</p> <p>A model package is used to create
        Amazon SageMaker models or list on AWS Marketplace. Buyers can subscribe
        to model packages listed on AWS Marketplace to create models in Amazon
        SageMaker.</p>
      responses:
        "200":
          description: Success
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.DeleteModelPackage
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeleteModelPackageInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=SageMaker.DeleteNotebookInstance:
    post:
      operationId: DeleteNotebookInstance
      description: <p> Deletes an Amazon SageMaker notebook instance. Before you can delete
        a notebook instance, you must call the <code>StopNotebookInstance</code>
        API. </p> <important> <p>When you delete a notebook instance, you lose
        all of your data. Amazon SageMaker removes the ML compute instance, and
        deletes the ML storage volume and the network interface associated with
        the notebook instance. </p> </important>
      responses:
        "200":
          description: Success
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.DeleteNotebookInstance
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeleteNotebookInstanceInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=SageMaker.DeleteNotebookInstanceLifecycleConfig:
    post:
      operationId: DeleteNotebookInstanceLifecycleConfig
      description: Deletes a notebook instance lifecycle configuration.
      responses:
        "200":
          description: Success
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.DeleteNotebookInstanceLifecycleConfig
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeleteNotebookInstanceLifecycleConfigInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=SageMaker.DeleteTags:
    post:
      operationId: DeleteTags
      description: <p>Deletes the specified tags from an Amazon SageMaker resource.</p>
        <p>To list a resource's tags, use the <code>ListTags</code> API. </p>
        <note> <p>When you call this API to delete tags from a hyperparameter
        tuning job, the deleted tags are not removed from training jobs that the
        hyperparameter tuning job launched before you called this API.</p>
        </note>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteTagsOutput"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.DeleteTags
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeleteTagsInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=SageMaker.DeleteWorkteam:
    post:
      operationId: DeleteWorkteam
      description: Deletes an existing work team. This operation can't be undone.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteWorkteamResponse"
        "480":
          description: ResourceLimitExceeded
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceLimitExceeded"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.DeleteWorkteam
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeleteWorkteamRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=SageMaker.DescribeAlgorithm:
    post:
      operationId: DescribeAlgorithm
      description: Returns a description of the specified algorithm that is in your account.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeAlgorithmOutput"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.DescribeAlgorithm
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DescribeAlgorithmInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=SageMaker.DescribeCodeRepository:
    post:
      operationId: DescribeCodeRepository
      description: Gets details about the specified Git repository.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeCodeRepositoryOutput"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.DescribeCodeRepository
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DescribeCodeRepositoryInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=SageMaker.DescribeCompilationJob:
    post:
      operationId: DescribeCompilationJob
      description: <p>Returns information about a model compilation job.</p> <p>To create a
        model compilation job, use <a>CreateCompilationJob</a>. To get
        information about multiple model compilation jobs, use
        <a>ListCompilationJobs</a>.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeCompilationJobResponse"
        "480":
          description: ResourceNotFound
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFound"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.DescribeCompilationJob
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DescribeCompilationJobRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=SageMaker.DescribeEndpoint:
    post:
      operationId: DescribeEndpoint
      description: Returns the description of an endpoint.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeEndpointOutput"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.DescribeEndpoint
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DescribeEndpointInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=SageMaker.DescribeEndpointConfig:
    post:
      operationId: DescribeEndpointConfig
      description: Returns the description of an endpoint configuration created using the
        <code>CreateEndpointConfig</code> API.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeEndpointConfigOutput"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.DescribeEndpointConfig
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DescribeEndpointConfigInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=SageMaker.DescribeHyperParameterTuningJob:
    post:
      operationId: DescribeHyperParameterTuningJob
      description: Gets a description of a hyperparameter tuning job.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeHyperParameterTuningJobResponse"
        "480":
          description: ResourceNotFound
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFound"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.DescribeHyperParameterTuningJob
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DescribeHyperParameterTuningJobRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=SageMaker.DescribeLabelingJob:
    post:
      operationId: DescribeLabelingJob
      description: Gets information about a labeling job.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeLabelingJobResponse"
        "480":
          description: ResourceNotFound
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFound"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.DescribeLabelingJob
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DescribeLabelingJobRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=SageMaker.DescribeModel:
    post:
      operationId: DescribeModel
      description: Describes a model that you created using the <code>CreateModel</code>
        API.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeModelOutput"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.DescribeModel
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DescribeModelInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=SageMaker.DescribeModelPackage:
    post:
      operationId: DescribeModelPackage
      description: <p>Returns a description of the specified model package, which is used
        to create Amazon SageMaker models or list them on AWS Marketplace.</p>
        <p>To create models in Amazon SageMaker, buyers can subscribe to model
        packages listed on AWS Marketplace.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeModelPackageOutput"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.DescribeModelPackage
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DescribeModelPackageInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=SageMaker.DescribeNotebookInstance:
    post:
      operationId: DescribeNotebookInstance
      description: Returns information about a notebook instance.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeNotebookInstanceOutput"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.DescribeNotebookInstance
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DescribeNotebookInstanceInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=SageMaker.DescribeNotebookInstanceLifecycleConfig:
    post:
      operationId: DescribeNotebookInstanceLifecycleConfig
      description: '<p>Returns a description of a notebook instance lifecycle
        configuration.</p> <p>For information about notebook instance lifestyle
        configurations, see <a
        href="https://docs.aws.amazon.com/sagemaker/latest/dg/notebook-lifecycle-config.html">Step
        2.1: (Optional) Customize a Notebook Instance</a>.</p>'
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeNotebookInstanceLifecycleConfig\
                  Output"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.DescribeNotebookInstanceLifecycleConfig
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DescribeNotebookInstanceLifecycleConfigIn\
                put"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=SageMaker.DescribeSubscribedWorkteam:
    post:
      operationId: DescribeSubscribedWorkteam
      description: Gets information about a work team provided by a vendor. It returns
        details about the subscription with a vendor in the AWS Marketplace.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeSubscribedWorkteamResponse"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.DescribeSubscribedWorkteam
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DescribeSubscribedWorkteamRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=SageMaker.DescribeTrainingJob:
    post:
      operationId: DescribeTrainingJob
      description: Returns information about a training job.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeTrainingJobResponse"
        "480":
          description: ResourceNotFound
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFound"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.DescribeTrainingJob
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DescribeTrainingJobRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=SageMaker.DescribeTransformJob:
    post:
      operationId: DescribeTransformJob
      description: Returns information about a transform job.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeTransformJobResponse"
        "480":
          description: ResourceNotFound
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFound"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.DescribeTransformJob
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DescribeTransformJobRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=SageMaker.DescribeWorkteam:
    post:
      operationId: DescribeWorkteam
      description: Gets information about a specific work team. You can see information
        such as the create date, the last updated date, membership information,
        and the work team's Amazon Resource Name (ARN).
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeWorkteamResponse"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.DescribeWorkteam
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DescribeWorkteamRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=SageMaker.GetSearchSuggestions:
    post:
      operationId: GetSearchSuggestions
      description: An auto-complete API for the search functionality in the Amazon
        SageMaker console. It returns suggestions of possible matches for the
        property name to use in <code>Search</code> queries. Provides
        suggestions for <code>HyperParameters</code>, <code>Tags</code>, and
        <code>Metrics</code>.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetSearchSuggestionsResponse"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.GetSearchSuggestions
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GetSearchSuggestionsRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=SageMaker.ListAlgorithms:
    post:
      operationId: ListAlgorithms
      description: Lists the machine learning algorithms that have been created.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListAlgorithmsOutput"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.ListAlgorithms
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ListAlgorithmsInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=SageMaker.ListCodeRepositories:
    post:
      operationId: ListCodeRepositories
      description: Gets a list of the Git repositories in your account.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListCodeRepositoriesOutput"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.ListCodeRepositories
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ListCodeRepositoriesInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=SageMaker.ListCompilationJobs:
    post:
      operationId: ListCompilationJobs
      description: <p>Lists model compilation jobs that satisfy various filters.</p> <p>To
        create a model compilation job, use <a>CreateCompilationJob</a>. To get
        information about a particular model compilation job you have created,
        use <a>DescribeCompilationJob</a>.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListCompilationJobsResponse"
      parameters:
        - name: MaxResults
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: NextToken
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.ListCompilationJobs
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ListCompilationJobsRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=SageMaker.ListEndpointConfigs:
    post:
      operationId: ListEndpointConfigs
      description: Lists endpoint configurations.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListEndpointConfigsOutput"
      parameters:
        - name: MaxResults
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: NextToken
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.ListEndpointConfigs
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ListEndpointConfigsInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=SageMaker.ListEndpoints:
    post:
      operationId: ListEndpoints
      description: Lists endpoints.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListEndpointsOutput"
      parameters:
        - name: MaxResults
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: NextToken
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.ListEndpoints
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ListEndpointsInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=SageMaker.ListHyperParameterTuningJobs:
    post:
      operationId: ListHyperParameterTuningJobs
      description: Gets a list of <a>HyperParameterTuningJobSummary</a> objects that
        describe the hyperparameter tuning jobs launched in your account.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListHyperParameterTuningJobsResponse"
      parameters:
        - name: MaxResults
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: NextToken
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.ListHyperParameterTuningJobs
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ListHyperParameterTuningJobsRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=SageMaker.ListLabelingJobs:
    post:
      operationId: ListLabelingJobs
      description: Gets a list of labeling jobs.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListLabelingJobsResponse"
      parameters:
        - name: MaxResults
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: NextToken
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.ListLabelingJobs
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ListLabelingJobsRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=SageMaker.ListLabelingJobsForWorkteam:
    post:
      operationId: ListLabelingJobsForWorkteam
      description: Gets a list of labeling jobs assigned to a specified work team.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListLabelingJobsForWorkteamResponse"
        "480":
          description: ResourceNotFound
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFound"
      parameters:
        - name: MaxResults
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: NextToken
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.ListLabelingJobsForWorkteam
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ListLabelingJobsForWorkteamRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=SageMaker.ListModelPackages:
    post:
      operationId: ListModelPackages
      description: Lists the model packages that have been created.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListModelPackagesOutput"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.ListModelPackages
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ListModelPackagesInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=SageMaker.ListModels:
    post:
      operationId: ListModels
      description: Lists models created with the <a
        href="https://docs.aws.amazon.com/sagemaker/latest/dg/API_CreateModel.html">CreateModel</a>
        API.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListModelsOutput"
      parameters:
        - name: MaxResults
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: NextToken
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.ListModels
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ListModelsInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=SageMaker.ListNotebookInstanceLifecycleConfigs:
    post:
      operationId: ListNotebookInstanceLifecycleConfigs
      description: Lists notebook instance lifestyle configurations created with the
        <a>CreateNotebookInstanceLifecycleConfig</a> API.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListNotebookInstanceLifecycleConfigsOut\
                  put"
      parameters:
        - name: MaxResults
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: NextToken
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.ListNotebookInstanceLifecycleConfigs
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ListNotebookInstanceLifecycleConfigsInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=SageMaker.ListNotebookInstances:
    post:
      operationId: ListNotebookInstances
      description: "Returns a list of the Amazon SageMaker notebook instances in the
        requester's account in an AWS Region. "
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListNotebookInstancesOutput"
      parameters:
        - name: MaxResults
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: NextToken
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.ListNotebookInstances
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ListNotebookInstancesInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=SageMaker.ListSubscribedWorkteams:
    post:
      operationId: ListSubscribedWorkteams
      description: Gets a list of the work teams that you are subscribed to in the AWS
        Marketplace. The list may be empty if no work team satisfies the filter
        specified in the <code>NameContains</code> parameter.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListSubscribedWorkteamsResponse"
      parameters:
        - name: MaxResults
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: NextToken
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.ListSubscribedWorkteams
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ListSubscribedWorkteamsRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=SageMaker.ListTags:
    post:
      operationId: ListTags
      description: Returns the tags for the specified Amazon SageMaker resource.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListTagsOutput"
      parameters:
        - name: MaxResults
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: NextToken
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.ListTags
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ListTagsInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=SageMaker.ListTrainingJobs:
    post:
      operationId: ListTrainingJobs
      description: Lists training jobs.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListTrainingJobsResponse"
      parameters:
        - name: MaxResults
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: NextToken
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.ListTrainingJobs
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ListTrainingJobsRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=SageMaker.ListTrainingJobsForHyperParameterTuningJob:
    post:
      operationId: ListTrainingJobsForHyperParameterTuningJob
      description: Gets a list of <a>TrainingJobSummary</a> objects that describe the
        training jobs that a hyperparameter tuning job launched.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListTrainingJobsForHyperParameterTuning\
                  JobResponse"
        "480":
          description: ResourceNotFound
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFound"
      parameters:
        - name: MaxResults
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: NextToken
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.ListTrainingJobsForHyperParameterTuningJob
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ListTrainingJobsForHyperParameterTuningJo\
                bRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=SageMaker.ListTransformJobs:
    post:
      operationId: ListTransformJobs
      description: Lists transform jobs.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListTransformJobsResponse"
      parameters:
        - name: MaxResults
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: NextToken
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.ListTransformJobs
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ListTransformJobsRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=SageMaker.ListWorkteams:
    post:
      operationId: ListWorkteams
      description: Gets a list of work teams that you have defined in a region. The list
        may be empty if no work team satisfies the filter specified in the
        <code>NameContains</code> parameter.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListWorkteamsResponse"
      parameters:
        - name: MaxResults
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: NextToken
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.ListWorkteams
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ListWorkteamsRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=SageMaker.RenderUiTemplate:
    post:
      operationId: RenderUiTemplate
      description: "Renders the UI template so that you can preview the worker's
        experience. "
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RenderUiTemplateResponse"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.RenderUiTemplate
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RenderUiTemplateRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=SageMaker.Search:
    post:
      operationId: Search
      description: "<p>Finds Amazon SageMaker resources that match a search query. Matching
        resource objects are returned as a list of <code>SearchResult</code>
        objects in the response. You can sort the search results by any resource
        property in a ascending or descending order.</p> <p>You can query
        against the following value types: numerical, text, Booleans, and
        timestamps.</p>"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SearchResponse"
      parameters:
        - name: MaxResults
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: NextToken
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.Search
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SearchRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=SageMaker.StartNotebookInstance:
    post:
      operationId: StartNotebookInstance
      description: "Launches an ML compute instance with the latest version of the
        libraries and attaches your ML storage volume. After configuring the
        notebook instance, Amazon SageMaker sets the notebook instance status to
        <code>InService</code>. A notebook instance's status must be
        <code>InService</code> before you can connect to your Jupyter notebook.
        "
      responses:
        "200":
          description: Success
        "480":
          description: ResourceLimitExceeded
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceLimitExceeded"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.StartNotebookInstance
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/StartNotebookInstanceInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=SageMaker.StopCompilationJob:
    post:
      operationId: StopCompilationJob
      description: <p>Stops a model compilation job.</p> <p> To stop a job, Amazon
        SageMaker sends the algorithm the SIGTERM signal. This gracefully shuts
        the job down. If the job hasn't stopped, it sends the SIGKILL
        signal.</p> <p>When it receives a <code>StopCompilationJob</code>
        request, Amazon SageMaker changes the
        <a>CompilationJobSummary$CompilationJobStatus</a> of the job to
        <code>Stopping</code>. After Amazon SageMaker stops the job, it sets the
        <a>CompilationJobSummary$CompilationJobStatus</a> to
        <code>Stopped</code>. </p>
      responses:
        "200":
          description: Success
        "480":
          description: ResourceNotFound
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFound"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.StopCompilationJob
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/StopCompilationJobRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=SageMaker.StopHyperParameterTuningJob:
    post:
      operationId: StopHyperParameterTuningJob
      description: <p>Stops a running hyperparameter tuning job and all running training
        jobs that the tuning job launched.</p> <p>All model artifacts output
        from the training jobs are stored in Amazon Simple Storage Service
        (Amazon S3). All data that the training jobs write to Amazon CloudWatch
        Logs are still available in CloudWatch. After the tuning job moves to
        the <code>Stopped</code> state, it releases all reserved resources for
        the tuning job.</p>
      responses:
        "200":
          description: Success
        "480":
          description: ResourceNotFound
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFound"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.StopHyperParameterTuningJob
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/StopHyperParameterTuningJobRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=SageMaker.StopLabelingJob:
    post:
      operationId: StopLabelingJob
      description: Stops a running labeling job. A job that is stopped cannot be restarted.
        Any results obtained before the job is stopped are placed in the Amazon
        S3 output bucket.
      responses:
        "200":
          description: Success
        "480":
          description: ResourceNotFound
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFound"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.StopLabelingJob
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/StopLabelingJobRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=SageMaker.StopNotebookInstance:
    post:
      operationId: StopNotebookInstance
      description: <p>Terminates the ML compute instance. Before terminating the instance,
        Amazon SageMaker disconnects the ML storage volume from it. Amazon
        SageMaker preserves the ML storage volume. Amazon SageMaker stops
        charging you for the ML compute instance when you call
        <code>StopNotebookInstance</code>.</p> <p>To access data on the ML
        storage volume for a notebook instance that has been terminated, call
        the <code>StartNotebookInstance</code> API.
        <code>StartNotebookInstance</code> launches another ML compute instance,
        configures it, and attaches the preserved ML storage volume so you can
        continue your work. </p>
      responses:
        "200":
          description: Success
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.StopNotebookInstance
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/StopNotebookInstanceInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=SageMaker.StopTrainingJob:
    post:
      operationId: StopTrainingJob
      description: <p>Stops a training job. To stop a job, Amazon SageMaker sends the
        algorithm the <code>SIGTERM</code> signal, which delays job termination
        for 120 seconds. Algorithms might use this 120-second window to save the
        model artifacts, so the results of the training is not lost. </p>
        <p>When it receives a <code>StopTrainingJob</code> request, Amazon
        SageMaker changes the status of the job to <code>Stopping</code>. After
        Amazon SageMaker stops the job, it sets the status to
        <code>Stopped</code>.</p>
      responses:
        "200":
          description: Success
        "480":
          description: ResourceNotFound
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFound"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.StopTrainingJob
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/StopTrainingJobRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=SageMaker.StopTransformJob:
    post:
      operationId: StopTransformJob
      description: <p>Stops a transform job.</p> <p>When Amazon SageMaker receives a
        <code>StopTransformJob</code> request, the status of the job changes to
        <code>Stopping</code>. After Amazon SageMaker stops the job, the status
        is set to <code>Stopped</code>. When you stop a transform job before it
        is completed, Amazon SageMaker doesn't store the job's output in Amazon
        S3.</p>
      responses:
        "200":
          description: Success
        "480":
          description: ResourceNotFound
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFound"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.StopTransformJob
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/StopTransformJobRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=SageMaker.UpdateCodeRepository:
    post:
      operationId: UpdateCodeRepository
      description: Updates the specified Git repository with the specified values.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateCodeRepositoryOutput"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.UpdateCodeRepository
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateCodeRepositoryInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=SageMaker.UpdateEndpoint:
    post:
      operationId: UpdateEndpoint
      description: <p>Deploys the new <code>EndpointConfig</code> specified in the request,
        switches to using newly created endpoint, and then deletes resources
        provisioned for the endpoint using the previous
        <code>EndpointConfig</code> (there is no availability loss). </p>
        <p>When Amazon SageMaker receives the request, it sets the endpoint
        status to <code>Updating</code>. After updating the endpoint, it sets
        the status to <code>InService</code>. To check the status of an
        endpoint, use the <a
        href="https://docs.aws.amazon.com/sagemaker/latest/dg/API_DescribeEndpoint.html">DescribeEndpoint</a>
        API. </p> <note> <p>You must not delete an <code>EndpointConfig</code>
        in use by an endpoint that is live or while the
        <code>UpdateEndpoint</code> or <code>CreateEndpoint</code> operations
        are being performed on the endpoint. To update an endpoint, you must
        create a new <code>EndpointConfig</code>.</p> </note>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateEndpointOutput"
        "480":
          description: ResourceLimitExceeded
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceLimitExceeded"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.UpdateEndpoint
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateEndpointInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=SageMaker.UpdateEndpointWeightsAndCapacities:
    post:
      operationId: UpdateEndpointWeightsAndCapacities
      description: 'Updates variant weight of one or more variants associated with an
        existing endpoint, or capacity of one variant associated with an
        existing endpoint. When it receives the request, Amazon SageMaker sets
        the endpoint status to <code>Updating</code>. After updating the
        endpoint, it sets the status to <code>InService</code>. To check the
        status of an endpoint, use the <a
        href="https://docs.aws.amazon.com/sagemaker/latest/dg/API_DescribeEndpoint.html">DescribeEndpoint</a>
        API. '
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateEndpointWeightsAndCapacitiesOutput"
        "480":
          description: ResourceLimitExceeded
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceLimitExceeded"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.UpdateEndpointWeightsAndCapacities
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateEndpointWeightsAndCapacitiesInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=SageMaker.UpdateNotebookInstance:
    post:
      operationId: UpdateNotebookInstance
      description: Updates a notebook instance. NotebookInstance updates include upgrading
        or downgrading the ML compute instance used for your notebook instance
        to accommodate changes in your workload requirements.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateNotebookInstanceOutput"
        "480":
          description: ResourceLimitExceeded
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceLimitExceeded"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.UpdateNotebookInstance
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateNotebookInstanceInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=SageMaker.UpdateNotebookInstanceLifecycleConfig:
    post:
      operationId: UpdateNotebookInstanceLifecycleConfig
      description: Updates a notebook instance lifecycle configuration created with the
        <a>CreateNotebookInstanceLifecycleConfig</a> API.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateNotebookInstanceLifecycleConfigOu\
                  tput"
        "480":
          description: ResourceLimitExceeded
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceLimitExceeded"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.UpdateNotebookInstanceLifecycleConfig
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateNotebookInstanceLifecycleConfigInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=SageMaker.UpdateWorkteam:
    post:
      operationId: UpdateWorkteam
      description: Updates an existing work team with new member definitions or description.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateWorkteamResponse"
        "480":
          description: ResourceLimitExceeded
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceLimitExceeded"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.UpdateWorkteam
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateWorkteamRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
servers:
  - url: http://api.sagemaker.{region}.amazonaws.com
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-south-1
          - sa-east-1
        default: us-east-1
    description: The SageMaker multi-region endpoint
  - url: https://api.sagemaker.{region}.amazonaws.com
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-south-1
          - sa-east-1
        default: us-east-1
    description: The SageMaker multi-region endpoint
  - url: http://api.sagemaker.{region}.amazonaws.com.cn
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The SageMaker endpoint for China (Beijing) and China (Ningxia)
  - url: https://api.sagemaker.{region}.amazonaws.com.cn
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The SageMaker endpoint for China (Beijing) and China (Ningxia)
components:
  parameters:
    X-Amz-Content-Sha256:
      name: X-Amz-Content-Sha256
      in: header
      required: false
      schema:
        type: string
    X-Amz-Date:
      name: X-Amz-Date
      in: header
      required: false
      schema:
        type: string
    X-Amz-Algorithm:
      name: X-Amz-Algorithm
      in: header
      required: false
      schema:
        type: string
    X-Amz-Credential:
      name: X-Amz-Credential
      in: header
      required: false
      schema:
        type: string
    X-Amz-Security-Token:
      name: X-Amz-Security-Token
      in: header
      required: false
      schema:
        type: string
    X-Amz-Signature:
      name: X-Amz-Signature
      in: header
      required: false
      schema:
        type: string
    X-Amz-SignedHeaders:
      name: X-Amz-SignedHeaders
      in: header
      required: false
      schema:
        type: string
  securitySchemes:
    hmac:
      type: apiKey
      name: Authorization
      in: header
      description: Amazon Signature authorization v4
      x-amazon-apigateway-authtype: awsSigv4
  schemas:
    AddTagsOutput:
      type: object
      properties:
        Tags:
          $ref: "#/components/schemas/TagList"
    AddTagsInput:
      type: object
      required:
        - ResourceArn
        - Tags
      properties:
        ResourceArn:
          $ref: "#/components/schemas/ResourceArn"
        Tags:
          $ref: "#/components/schemas/TagList"
    CreateAlgorithmOutput:
      type: object
      required:
        - AlgorithmArn
      properties:
        AlgorithmArn:
          $ref: "#/components/schemas/AlgorithmArn"
    CreateAlgorithmInput:
      type: object
      required:
        - AlgorithmName
        - TrainingSpecification
      properties:
        AlgorithmName:
          $ref: "#/components/schemas/EntityName"
        AlgorithmDescription:
          $ref: "#/components/schemas/EntityDescription"
        TrainingSpecification:
          $ref: "#/components/schemas/TrainingSpecification"
        InferenceSpecification:
          $ref: "#/components/schemas/InferenceSpecification"
        ValidationSpecification:
          $ref: "#/components/schemas/AlgorithmValidationSpecification"
        CertifyForMarketplace:
          $ref: "#/components/schemas/CertifyForMarketplace"
    CreateCodeRepositoryOutput:
      type: object
      required:
        - CodeRepositoryArn
      properties:
        CodeRepositoryArn:
          $ref: "#/components/schemas/CodeRepositoryArn"
    CreateCodeRepositoryInput:
      type: object
      required:
        - CodeRepositoryName
        - GitConfig
      properties:
        CodeRepositoryName:
          $ref: "#/components/schemas/EntityName"
        GitConfig:
          $ref: "#/components/schemas/GitConfig"
    CreateCompilationJobResponse:
      type: object
      required:
        - CompilationJobArn
      properties:
        CompilationJobArn:
          $ref: "#/components/schemas/CompilationJobArn"
    CreateCompilationJobRequest:
      type: object
      required:
        - CompilationJobName
        - RoleArn
        - InputConfig
        - OutputConfig
        - StoppingCondition
      properties:
        CompilationJobName:
          $ref: "#/components/schemas/EntityName"
        RoleArn:
          $ref: "#/components/schemas/RoleArn"
        InputConfig:
          $ref: "#/components/schemas/InputConfig"
        OutputConfig:
          $ref: "#/components/schemas/OutputConfig"
        StoppingCondition:
          $ref: "#/components/schemas/StoppingCondition"
    ResourceInUse: {}
    ResourceLimitExceeded: {}
    CreateEndpointOutput:
      type: object
      required:
        - EndpointArn
      properties:
        EndpointArn:
          $ref: "#/components/schemas/EndpointArn"
    CreateEndpointInput:
      type: object
      required:
        - EndpointName
        - EndpointConfigName
      properties:
        EndpointName:
          $ref: "#/components/schemas/EndpointName"
        EndpointConfigName:
          $ref: "#/components/schemas/EndpointConfigName"
        Tags:
          $ref: "#/components/schemas/TagList"
    CreateEndpointConfigOutput:
      type: object
      required:
        - EndpointConfigArn
      properties:
        EndpointConfigArn:
          $ref: "#/components/schemas/EndpointConfigArn"
    CreateEndpointConfigInput:
      type: object
      required:
        - EndpointConfigName
        - ProductionVariants
      properties:
        EndpointConfigName:
          $ref: "#/components/schemas/EndpointConfigName"
        ProductionVariants:
          $ref: "#/components/schemas/ProductionVariantList"
        Tags:
          $ref: "#/components/schemas/TagList"
        KmsKeyId:
          $ref: "#/components/schemas/KmsKeyId"
    CreateHyperParameterTuningJobResponse:
      type: object
      required:
        - HyperParameterTuningJobArn
      properties:
        HyperParameterTuningJobArn:
          $ref: "#/components/schemas/HyperParameterTuningJobArn"
    CreateHyperParameterTuningJobRequest:
      type: object
      required:
        - HyperParameterTuningJobName
        - HyperParameterTuningJobConfig
      properties:
        HyperParameterTuningJobName:
          $ref: "#/components/schemas/HyperParameterTuningJobName"
        HyperParameterTuningJobConfig:
          $ref: "#/components/schemas/HyperParameterTuningJobConfig"
        TrainingJobDefinition:
          $ref: "#/components/schemas/HyperParameterTrainingJobDefinition"
        WarmStartConfig:
          $ref: "#/components/schemas/HyperParameterTuningJobWarmStartConfig"
        Tags:
          $ref: "#/components/schemas/TagList"
    CreateLabelingJobResponse:
      type: object
      required:
        - LabelingJobArn
      properties:
        LabelingJobArn:
          $ref: "#/components/schemas/LabelingJobArn"
    CreateLabelingJobRequest:
      type: object
      required:
        - LabelingJobName
        - LabelAttributeName
        - InputConfig
        - OutputConfig
        - RoleArn
        - HumanTaskConfig
      properties:
        LabelingJobName:
          $ref: "#/components/schemas/LabelingJobName"
        LabelAttributeName:
          $ref: "#/components/schemas/LabelAttributeName"
        InputConfig:
          $ref: "#/components/schemas/LabelingJobInputConfig"
        OutputConfig:
          $ref: "#/components/schemas/LabelingJobOutputConfig"
        RoleArn:
          $ref: "#/components/schemas/RoleArn"
        LabelCategoryConfigS3Uri:
          $ref: "#/components/schemas/S3Uri"
        StoppingConditions:
          $ref: "#/components/schemas/LabelingJobStoppingConditions"
        LabelingJobAlgorithmsConfig:
          $ref: "#/components/schemas/LabelingJobAlgorithmsConfig"
        HumanTaskConfig:
          $ref: "#/components/schemas/HumanTaskConfig"
        Tags:
          $ref: "#/components/schemas/TagList"
    CreateModelOutput:
      type: object
      required:
        - ModelArn
      properties:
        ModelArn:
          $ref: "#/components/schemas/ModelArn"
    CreateModelInput:
      type: object
      required:
        - ModelName
        - ExecutionRoleArn
      properties:
        ModelName:
          $ref: "#/components/schemas/ModelName"
        PrimaryContainer:
          $ref: "#/components/schemas/ContainerDefinition"
        Containers:
          $ref: "#/components/schemas/ContainerDefinitionList"
        ExecutionRoleArn:
          $ref: "#/components/schemas/RoleArn"
        Tags:
          $ref: "#/components/schemas/TagList"
        VpcConfig:
          $ref: "#/components/schemas/VpcConfig"
        EnableNetworkIsolation:
          $ref: "#/components/schemas/Boolean"
    CreateModelPackageOutput:
      type: object
      required:
        - ModelPackageArn
      properties:
        ModelPackageArn:
          $ref: "#/components/schemas/ModelPackageArn"
    CreateModelPackageInput:
      type: object
      required:
        - ModelPackageName
      properties:
        ModelPackageName:
          $ref: "#/components/schemas/EntityName"
        ModelPackageDescription:
          $ref: "#/components/schemas/EntityDescription"
        InferenceSpecification:
          $ref: "#/components/schemas/InferenceSpecification"
        ValidationSpecification:
          $ref: "#/components/schemas/ModelPackageValidationSpecification"
        SourceAlgorithmSpecification:
          $ref: "#/components/schemas/SourceAlgorithmSpecification"
        CertifyForMarketplace:
          $ref: "#/components/schemas/CertifyForMarketplace"
    CreateNotebookInstanceOutput:
      type: object
      properties:
        NotebookInstanceArn:
          $ref: "#/components/schemas/NotebookInstanceArn"
    CreateNotebookInstanceInput:
      type: object
      required:
        - NotebookInstanceName
        - InstanceType
        - RoleArn
      properties:
        NotebookInstanceName:
          $ref: "#/components/schemas/NotebookInstanceName"
        InstanceType:
          $ref: "#/components/schemas/InstanceType"
        SubnetId:
          $ref: "#/components/schemas/SubnetId"
        SecurityGroupIds:
          $ref: "#/components/schemas/SecurityGroupIds"
        RoleArn:
          $ref: "#/components/schemas/RoleArn"
        KmsKeyId:
          $ref: "#/components/schemas/KmsKeyId"
        Tags:
          $ref: "#/components/schemas/TagList"
        LifecycleConfigName:
          $ref: "#/components/schemas/NotebookInstanceLifecycleConfigName"
        DirectInternetAccess:
          $ref: "#/components/schemas/DirectInternetAccess"
        VolumeSizeInGB:
          $ref: "#/components/schemas/NotebookInstanceVolumeSizeInGB"
        AcceleratorTypes:
          $ref: "#/components/schemas/NotebookInstanceAcceleratorTypes"
        DefaultCodeRepository:
          $ref: "#/components/schemas/CodeRepositoryNameOrUrl"
        AdditionalCodeRepositories:
          $ref: "#/components/schemas/AdditionalCodeRepositoryNamesOrUrls"
        RootAccess:
          $ref: "#/components/schemas/RootAccess"
    CreateNotebookInstanceLifecycleConfigOutput:
      type: object
      properties:
        NotebookInstanceLifecycleConfigArn:
          $ref: "#/components/schemas/NotebookInstanceLifecycleConfigArn"
    CreateNotebookInstanceLifecycleConfigInput:
      type: object
      required:
        - NotebookInstanceLifecycleConfigName
      properties:
        NotebookInstanceLifecycleConfigName:
          $ref: "#/components/schemas/NotebookInstanceLifecycleConfigName"
        OnCreate:
          $ref: "#/components/schemas/NotebookInstanceLifecycleConfigList"
        OnStart:
          $ref: "#/components/schemas/NotebookInstanceLifecycleConfigList"
    CreatePresignedNotebookInstanceUrlOutput:
      type: object
      properties:
        AuthorizedUrl:
          $ref: "#/components/schemas/NotebookInstanceUrl"
    CreatePresignedNotebookInstanceUrlInput:
      type: object
      required:
        - NotebookInstanceName
      properties:
        NotebookInstanceName:
          $ref: "#/components/schemas/NotebookInstanceName"
        SessionExpirationDurationInSeconds:
          $ref: "#/components/schemas/SessionExpirationDurationInSeconds"
    CreateTrainingJobResponse:
      type: object
      required:
        - TrainingJobArn
      properties:
        TrainingJobArn:
          $ref: "#/components/schemas/TrainingJobArn"
    CreateTrainingJobRequest:
      type: object
      required:
        - TrainingJobName
        - AlgorithmSpecification
        - RoleArn
        - OutputDataConfig
        - ResourceConfig
        - StoppingCondition
      properties:
        TrainingJobName:
          $ref: "#/components/schemas/TrainingJobName"
        HyperParameters:
          $ref: "#/components/schemas/HyperParameters"
        AlgorithmSpecification:
          $ref: "#/components/schemas/AlgorithmSpecification"
        RoleArn:
          $ref: "#/components/schemas/RoleArn"
        InputDataConfig:
          $ref: "#/components/schemas/InputDataConfig"
        OutputDataConfig:
          $ref: "#/components/schemas/OutputDataConfig"
        ResourceConfig:
          $ref: "#/components/schemas/ResourceConfig"
        VpcConfig:
          $ref: "#/components/schemas/VpcConfig"
        StoppingCondition:
          $ref: "#/components/schemas/StoppingCondition"
        Tags:
          $ref: "#/components/schemas/TagList"
        EnableNetworkIsolation:
          $ref: "#/components/schemas/Boolean"
        EnableInterContainerTrafficEncryption:
          $ref: "#/components/schemas/Boolean"
        EnableManagedSpotTraining:
          $ref: "#/components/schemas/Boolean"
        CheckpointConfig:
          $ref: "#/components/schemas/CheckpointConfig"
    CreateTransformJobResponse:
      type: object
      required:
        - TransformJobArn
      properties:
        TransformJobArn:
          $ref: "#/components/schemas/TransformJobArn"
    CreateTransformJobRequest:
      type: object
      required:
        - TransformJobName
        - ModelName
        - TransformInput
        - TransformOutput
        - TransformResources
      properties:
        TransformJobName:
          $ref: "#/components/schemas/TransformJobName"
        ModelName:
          $ref: "#/components/schemas/ModelName"
        MaxConcurrentTransforms:
          $ref: "#/components/schemas/MaxConcurrentTransforms"
        MaxPayloadInMB:
          $ref: "#/components/schemas/MaxPayloadInMB"
        BatchStrategy:
          $ref: "#/components/schemas/BatchStrategy"
        Environment:
          $ref: "#/components/schemas/TransformEnvironmentMap"
        TransformInput:
          $ref: "#/components/schemas/TransformInput"
        TransformOutput:
          $ref: "#/components/schemas/TransformOutput"
        TransformResources:
          $ref: "#/components/schemas/TransformResources"
        DataProcessing:
          $ref: "#/components/schemas/DataProcessing"
        Tags:
          $ref: "#/components/schemas/TagList"
    CreateWorkteamResponse:
      type: object
      properties:
        WorkteamArn:
          $ref: "#/components/schemas/WorkteamArn"
    CreateWorkteamRequest:
      type: object
      required:
        - WorkteamName
        - MemberDefinitions
        - Description
      properties:
        WorkteamName:
          $ref: "#/components/schemas/WorkteamName"
        MemberDefinitions:
          $ref: "#/components/schemas/MemberDefinitions"
        Description:
          $ref: "#/components/schemas/String200"
        NotificationConfiguration:
          $ref: "#/components/schemas/NotificationConfiguration"
        Tags:
          $ref: "#/components/schemas/TagList"
    DeleteAlgorithmInput:
      type: object
      required:
        - AlgorithmName
      properties:
        AlgorithmName:
          $ref: "#/components/schemas/EntityName"
    DeleteCodeRepositoryInput:
      type: object
      required:
        - CodeRepositoryName
      properties:
        CodeRepositoryName:
          $ref: "#/components/schemas/EntityName"
    DeleteEndpointInput:
      type: object
      required:
        - EndpointName
      properties:
        EndpointName:
          $ref: "#/components/schemas/EndpointName"
    DeleteEndpointConfigInput:
      type: object
      required:
        - EndpointConfigName
      properties:
        EndpointConfigName:
          $ref: "#/components/schemas/EndpointConfigName"
    DeleteModelInput:
      type: object
      required:
        - ModelName
      properties:
        ModelName:
          $ref: "#/components/schemas/ModelName"
    DeleteModelPackageInput:
      type: object
      required:
        - ModelPackageName
      properties:
        ModelPackageName:
          $ref: "#/components/schemas/EntityName"
    DeleteNotebookInstanceInput:
      type: object
      required:
        - NotebookInstanceName
      properties:
        NotebookInstanceName:
          $ref: "#/components/schemas/NotebookInstanceName"
    DeleteNotebookInstanceLifecycleConfigInput:
      type: object
      required:
        - NotebookInstanceLifecycleConfigName
      properties:
        NotebookInstanceLifecycleConfigName:
          $ref: "#/components/schemas/NotebookInstanceLifecycleConfigName"
    DeleteTagsOutput:
      type: object
      properties: {}
    DeleteTagsInput:
      type: object
      required:
        - ResourceArn
        - TagKeys
      properties:
        ResourceArn:
          $ref: "#/components/schemas/ResourceArn"
        TagKeys:
          $ref: "#/components/schemas/TagKeyList"
    DeleteWorkteamResponse:
      type: object
      required:
        - Success
      properties:
        Success:
          $ref: "#/components/schemas/Success"
    DeleteWorkteamRequest:
      type: object
      required:
        - WorkteamName
      properties:
        WorkteamName:
          $ref: "#/components/schemas/WorkteamName"
    DescribeAlgorithmOutput:
      type: object
      required:
        - AlgorithmName
        - AlgorithmArn
        - CreationTime
        - TrainingSpecification
        - AlgorithmStatus
        - AlgorithmStatusDetails
      properties:
        AlgorithmName:
          $ref: "#/components/schemas/EntityName"
        AlgorithmArn:
          $ref: "#/components/schemas/AlgorithmArn"
        AlgorithmDescription:
          $ref: "#/components/schemas/EntityDescription"
        CreationTime:
          $ref: "#/components/schemas/CreationTime"
        TrainingSpecification:
          $ref: "#/components/schemas/TrainingSpecification"
        InferenceSpecification:
          $ref: "#/components/schemas/InferenceSpecification"
        ValidationSpecification:
          $ref: "#/components/schemas/AlgorithmValidationSpecification"
        AlgorithmStatus:
          $ref: "#/components/schemas/AlgorithmStatus"
        AlgorithmStatusDetails:
          $ref: "#/components/schemas/AlgorithmStatusDetails"
        ProductId:
          $ref: "#/components/schemas/ProductId"
        CertifyForMarketplace:
          $ref: "#/components/schemas/CertifyForMarketplace"
    DescribeAlgorithmInput:
      type: object
      required:
        - AlgorithmName
      properties:
        AlgorithmName:
          $ref: "#/components/schemas/ArnOrName"
    DescribeCodeRepositoryOutput:
      type: object
      required:
        - CodeRepositoryName
        - CodeRepositoryArn
        - CreationTime
        - LastModifiedTime
      properties:
        CodeRepositoryName:
          $ref: "#/components/schemas/EntityName"
        CodeRepositoryArn:
          $ref: "#/components/schemas/CodeRepositoryArn"
        CreationTime:
          $ref: "#/components/schemas/CreationTime"
        LastModifiedTime:
          $ref: "#/components/schemas/LastModifiedTime"
        GitConfig:
          $ref: "#/components/schemas/GitConfig"
    DescribeCodeRepositoryInput:
      type: object
      required:
        - CodeRepositoryName
      properties:
        CodeRepositoryName:
          $ref: "#/components/schemas/EntityName"
    DescribeCompilationJobResponse:
      type: object
      required:
        - CompilationJobName
        - CompilationJobArn
        - CompilationJobStatus
        - StoppingCondition
        - CreationTime
        - LastModifiedTime
        - FailureReason
        - ModelArtifacts
        - RoleArn
        - InputConfig
        - OutputConfig
      properties:
        CompilationJobName:
          $ref: "#/components/schemas/EntityName"
        CompilationJobArn:
          $ref: "#/components/schemas/CompilationJobArn"
        CompilationJobStatus:
          $ref: "#/components/schemas/CompilationJobStatus"
        CompilationStartTime:
          $ref: "#/components/schemas/Timestamp"
        CompilationEndTime:
          $ref: "#/components/schemas/Timestamp"
        StoppingCondition:
          $ref: "#/components/schemas/StoppingCondition"
        CreationTime:
          $ref: "#/components/schemas/CreationTime"
        LastModifiedTime:
          $ref: "#/components/schemas/LastModifiedTime"
        FailureReason:
          $ref: "#/components/schemas/FailureReason"
        ModelArtifacts:
          $ref: "#/components/schemas/ModelArtifacts"
        RoleArn:
          $ref: "#/components/schemas/RoleArn"
        InputConfig:
          $ref: "#/components/schemas/InputConfig"
        OutputConfig:
          $ref: "#/components/schemas/OutputConfig"
    DescribeCompilationJobRequest:
      type: object
      required:
        - CompilationJobName
      properties:
        CompilationJobName:
          $ref: "#/components/schemas/EntityName"
    ResourceNotFound: {}
    DescribeEndpointOutput:
      type: object
      required:
        - EndpointName
        - EndpointArn
        - EndpointConfigName
        - EndpointStatus
        - CreationTime
        - LastModifiedTime
      properties:
        EndpointName:
          $ref: "#/components/schemas/EndpointName"
        EndpointArn:
          $ref: "#/components/schemas/EndpointArn"
        EndpointConfigName:
          $ref: "#/components/schemas/EndpointConfigName"
        ProductionVariants:
          $ref: "#/components/schemas/ProductionVariantSummaryList"
        EndpointStatus:
          $ref: "#/components/schemas/EndpointStatus"
        FailureReason:
          $ref: "#/components/schemas/FailureReason"
        CreationTime:
          $ref: "#/components/schemas/Timestamp"
        LastModifiedTime:
          $ref: "#/components/schemas/Timestamp"
    DescribeEndpointInput:
      type: object
      required:
        - EndpointName
      properties:
        EndpointName:
          $ref: "#/components/schemas/EndpointName"
    DescribeEndpointConfigOutput:
      type: object
      required:
        - EndpointConfigName
        - EndpointConfigArn
        - ProductionVariants
        - CreationTime
      properties:
        EndpointConfigName:
          $ref: "#/components/schemas/EndpointConfigName"
        EndpointConfigArn:
          $ref: "#/components/schemas/EndpointConfigArn"
        ProductionVariants:
          $ref: "#/components/schemas/ProductionVariantList"
        KmsKeyId:
          $ref: "#/components/schemas/KmsKeyId"
        CreationTime:
          $ref: "#/components/schemas/Timestamp"
    DescribeEndpointConfigInput:
      type: object
      required:
        - EndpointConfigName
      properties:
        EndpointConfigName:
          $ref: "#/components/schemas/EndpointConfigName"
    DescribeHyperParameterTuningJobResponse:
      type: object
      required:
        - HyperParameterTuningJobName
        - HyperParameterTuningJobArn
        - HyperParameterTuningJobConfig
        - HyperParameterTuningJobStatus
        - CreationTime
        - TrainingJobStatusCounters
        - ObjectiveStatusCounters
      properties:
        HyperParameterTuningJobName:
          $ref: "#/components/schemas/HyperParameterTuningJobName"
        HyperParameterTuningJobArn:
          $ref: "#/components/schemas/HyperParameterTuningJobArn"
        HyperParameterTuningJobConfig:
          $ref: "#/components/schemas/HyperParameterTuningJobConfig"
        TrainingJobDefinition:
          $ref: "#/components/schemas/HyperParameterTrainingJobDefinition"
        HyperParameterTuningJobStatus:
          $ref: "#/components/schemas/HyperParameterTuningJobStatus"
        CreationTime:
          $ref: "#/components/schemas/Timestamp"
        HyperParameterTuningEndTime:
          $ref: "#/components/schemas/Timestamp"
        LastModifiedTime:
          $ref: "#/components/schemas/Timestamp"
        TrainingJobStatusCounters:
          $ref: "#/components/schemas/TrainingJobStatusCounters"
        ObjectiveStatusCounters:
          $ref: "#/components/schemas/ObjectiveStatusCounters"
        BestTrainingJob:
          $ref: "#/components/schemas/HyperParameterTrainingJobSummary"
        OverallBestTrainingJob:
          $ref: "#/components/schemas/HyperParameterTrainingJobSummary"
        WarmStartConfig:
          $ref: "#/components/schemas/HyperParameterTuningJobWarmStartConfig"
        FailureReason:
          $ref: "#/components/schemas/FailureReason"
    DescribeHyperParameterTuningJobRequest:
      type: object
      required:
        - HyperParameterTuningJobName
      properties:
        HyperParameterTuningJobName:
          $ref: "#/components/schemas/HyperParameterTuningJobName"
    DescribeLabelingJobResponse:
      type: object
      required:
        - LabelingJobStatus
        - LabelCounters
        - CreationTime
        - LastModifiedTime
        - JobReferenceCode
        - LabelingJobName
        - LabelingJobArn
        - InputConfig
        - OutputConfig
        - RoleArn
        - HumanTaskConfig
      properties:
        LabelingJobStatus:
          $ref: "#/components/schemas/LabelingJobStatus"
        LabelCounters:
          $ref: "#/components/schemas/LabelCounters"
        FailureReason:
          $ref: "#/components/schemas/FailureReason"
        CreationTime:
          $ref: "#/components/schemas/Timestamp"
        LastModifiedTime:
          $ref: "#/components/schemas/Timestamp"
        JobReferenceCode:
          $ref: "#/components/schemas/JobReferenceCode"
        LabelingJobName:
          $ref: "#/components/schemas/LabelingJobName"
        LabelingJobArn:
          $ref: "#/components/schemas/LabelingJobArn"
        LabelAttributeName:
          $ref: "#/components/schemas/LabelAttributeName"
        InputConfig:
          $ref: "#/components/schemas/LabelingJobInputConfig"
        OutputConfig:
          $ref: "#/components/schemas/LabelingJobOutputConfig"
        RoleArn:
          $ref: "#/components/schemas/RoleArn"
        LabelCategoryConfigS3Uri:
          $ref: "#/components/schemas/S3Uri"
        StoppingConditions:
          $ref: "#/components/schemas/LabelingJobStoppingConditions"
        LabelingJobAlgorithmsConfig:
          $ref: "#/components/schemas/LabelingJobAlgorithmsConfig"
        HumanTaskConfig:
          $ref: "#/components/schemas/HumanTaskConfig"
        Tags:
          $ref: "#/components/schemas/TagList"
        LabelingJobOutput:
          $ref: "#/components/schemas/LabelingJobOutput"
    DescribeLabelingJobRequest:
      type: object
      required:
        - LabelingJobName
      properties:
        LabelingJobName:
          $ref: "#/components/schemas/LabelingJobName"
    DescribeModelOutput:
      type: object
      required:
        - ModelName
        - ExecutionRoleArn
        - CreationTime
        - ModelArn
      properties:
        ModelName:
          $ref: "#/components/schemas/ModelName"
        PrimaryContainer:
          $ref: "#/components/schemas/ContainerDefinition"
        Containers:
          $ref: "#/components/schemas/ContainerDefinitionList"
        ExecutionRoleArn:
          $ref: "#/components/schemas/RoleArn"
        VpcConfig:
          $ref: "#/components/schemas/VpcConfig"
        CreationTime:
          $ref: "#/components/schemas/Timestamp"
        ModelArn:
          $ref: "#/components/schemas/ModelArn"
        EnableNetworkIsolation:
          $ref: "#/components/schemas/Boolean"
    DescribeModelInput:
      type: object
      required:
        - ModelName
      properties:
        ModelName:
          $ref: "#/components/schemas/ModelName"
    DescribeModelPackageOutput:
      type: object
      required:
        - ModelPackageName
        - ModelPackageArn
        - CreationTime
        - ModelPackageStatus
        - ModelPackageStatusDetails
      properties:
        ModelPackageName:
          $ref: "#/components/schemas/EntityName"
        ModelPackageArn:
          $ref: "#/components/schemas/ModelPackageArn"
        ModelPackageDescription:
          $ref: "#/components/schemas/EntityDescription"
        CreationTime:
          $ref: "#/components/schemas/CreationTime"
        InferenceSpecification:
          $ref: "#/components/schemas/InferenceSpecification"
        SourceAlgorithmSpecification:
          $ref: "#/components/schemas/SourceAlgorithmSpecification"
        ValidationSpecification:
          $ref: "#/components/schemas/ModelPackageValidationSpecification"
        ModelPackageStatus:
          $ref: "#/components/schemas/ModelPackageStatus"
        ModelPackageStatusDetails:
          $ref: "#/components/schemas/ModelPackageStatusDetails"
        CertifyForMarketplace:
          $ref: "#/components/schemas/CertifyForMarketplace"
    DescribeModelPackageInput:
      type: object
      required:
        - ModelPackageName
      properties:
        ModelPackageName:
          $ref: "#/components/schemas/ArnOrName"
    DescribeNotebookInstanceOutput:
      type: object
      properties:
        NotebookInstanceArn:
          $ref: "#/components/schemas/NotebookInstanceArn"
        NotebookInstanceName:
          $ref: "#/components/schemas/NotebookInstanceName"
        NotebookInstanceStatus:
          $ref: "#/components/schemas/NotebookInstanceStatus"
        FailureReason:
          $ref: "#/components/schemas/FailureReason"
        Url:
          $ref: "#/components/schemas/NotebookInstanceUrl"
        InstanceType:
          $ref: "#/components/schemas/InstanceType"
        SubnetId:
          $ref: "#/components/schemas/SubnetId"
        SecurityGroups:
          $ref: "#/components/schemas/SecurityGroupIds"
        RoleArn:
          $ref: "#/components/schemas/RoleArn"
        KmsKeyId:
          $ref: "#/components/schemas/KmsKeyId"
        NetworkInterfaceId:
          $ref: "#/components/schemas/NetworkInterfaceId"
        LastModifiedTime:
          $ref: "#/components/schemas/LastModifiedTime"
        CreationTime:
          $ref: "#/components/schemas/CreationTime"
        NotebookInstanceLifecycleConfigName:
          $ref: "#/components/schemas/NotebookInstanceLifecycleConfigName"
        DirectInternetAccess:
          $ref: "#/components/schemas/DirectInternetAccess"
        VolumeSizeInGB:
          $ref: "#/components/schemas/NotebookInstanceVolumeSizeInGB"
        AcceleratorTypes:
          $ref: "#/components/schemas/NotebookInstanceAcceleratorTypes"
        DefaultCodeRepository:
          $ref: "#/components/schemas/CodeRepositoryNameOrUrl"
        AdditionalCodeRepositories:
          $ref: "#/components/schemas/AdditionalCodeRepositoryNamesOrUrls"
        RootAccess:
          $ref: "#/components/schemas/RootAccess"
    DescribeNotebookInstanceInput:
      type: object
      required:
        - NotebookInstanceName
      properties:
        NotebookInstanceName:
          $ref: "#/components/schemas/NotebookInstanceName"
    DescribeNotebookInstanceLifecycleConfigOutput:
      type: object
      properties:
        NotebookInstanceLifecycleConfigArn:
          $ref: "#/components/schemas/NotebookInstanceLifecycleConfigArn"
        NotebookInstanceLifecycleConfigName:
          $ref: "#/components/schemas/NotebookInstanceLifecycleConfigName"
        OnCreate:
          $ref: "#/components/schemas/NotebookInstanceLifecycleConfigList"
        OnStart:
          $ref: "#/components/schemas/NotebookInstanceLifecycleConfigList"
        LastModifiedTime:
          $ref: "#/components/schemas/LastModifiedTime"
        CreationTime:
          $ref: "#/components/schemas/CreationTime"
    DescribeNotebookInstanceLifecycleConfigInput:
      type: object
      required:
        - NotebookInstanceLifecycleConfigName
      properties:
        NotebookInstanceLifecycleConfigName:
          $ref: "#/components/schemas/NotebookInstanceLifecycleConfigName"
    DescribeSubscribedWorkteamResponse:
      type: object
      required:
        - SubscribedWorkteam
      properties:
        SubscribedWorkteam:
          $ref: "#/components/schemas/SubscribedWorkteam"
    DescribeSubscribedWorkteamRequest:
      type: object
      required:
        - WorkteamArn
      properties:
        WorkteamArn:
          $ref: "#/components/schemas/WorkteamArn"
    DescribeTrainingJobResponse:
      type: object
      required:
        - TrainingJobName
        - TrainingJobArn
        - ModelArtifacts
        - TrainingJobStatus
        - SecondaryStatus
        - AlgorithmSpecification
        - ResourceConfig
        - StoppingCondition
        - CreationTime
      properties:
        TrainingJobName:
          $ref: "#/components/schemas/TrainingJobName"
        TrainingJobArn:
          $ref: "#/components/schemas/TrainingJobArn"
        TuningJobArn:
          $ref: "#/components/schemas/HyperParameterTuningJobArn"
        LabelingJobArn:
          $ref: "#/components/schemas/LabelingJobArn"
        ModelArtifacts:
          $ref: "#/components/schemas/ModelArtifacts"
        TrainingJobStatus:
          $ref: "#/components/schemas/TrainingJobStatus"
        SecondaryStatus:
          $ref: "#/components/schemas/SecondaryStatus"
        FailureReason:
          $ref: "#/components/schemas/FailureReason"
        HyperParameters:
          $ref: "#/components/schemas/HyperParameters"
        AlgorithmSpecification:
          $ref: "#/components/schemas/AlgorithmSpecification"
        RoleArn:
          $ref: "#/components/schemas/RoleArn"
        InputDataConfig:
          $ref: "#/components/schemas/InputDataConfig"
        OutputDataConfig:
          $ref: "#/components/schemas/OutputDataConfig"
        ResourceConfig:
          $ref: "#/components/schemas/ResourceConfig"
        VpcConfig:
          $ref: "#/components/schemas/VpcConfig"
        StoppingCondition:
          $ref: "#/components/schemas/StoppingCondition"
        CreationTime:
          $ref: "#/components/schemas/Timestamp"
        TrainingStartTime:
          $ref: "#/components/schemas/Timestamp"
        TrainingEndTime:
          $ref: "#/components/schemas/Timestamp"
        LastModifiedTime:
          $ref: "#/components/schemas/Timestamp"
        SecondaryStatusTransitions:
          $ref: "#/components/schemas/SecondaryStatusTransitions"
        FinalMetricDataList:
          $ref: "#/components/schemas/FinalMetricDataList"
        EnableNetworkIsolation:
          $ref: "#/components/schemas/Boolean"
        EnableInterContainerTrafficEncryption:
          $ref: "#/components/schemas/Boolean"
        EnableManagedSpotTraining:
          $ref: "#/components/schemas/Boolean"
        CheckpointConfig:
          $ref: "#/components/schemas/CheckpointConfig"
        TrainingTimeInSeconds:
          $ref: "#/components/schemas/TrainingTimeInSeconds"
        BillableTimeInSeconds:
          $ref: "#/components/schemas/BillableTimeInSeconds"
    DescribeTrainingJobRequest:
      type: object
      required:
        - TrainingJobName
      properties:
        TrainingJobName:
          $ref: "#/components/schemas/TrainingJobName"
    DescribeTransformJobResponse:
      type: object
      required:
        - TransformJobName
        - TransformJobArn
        - TransformJobStatus
        - ModelName
        - TransformInput
        - TransformResources
        - CreationTime
      properties:
        TransformJobName:
          $ref: "#/components/schemas/TransformJobName"
        TransformJobArn:
          $ref: "#/components/schemas/TransformJobArn"
        TransformJobStatus:
          $ref: "#/components/schemas/TransformJobStatus"
        FailureReason:
          $ref: "#/components/schemas/FailureReason"
        ModelName:
          $ref: "#/components/schemas/ModelName"
        MaxConcurrentTransforms:
          $ref: "#/components/schemas/MaxConcurrentTransforms"
        MaxPayloadInMB:
          $ref: "#/components/schemas/MaxPayloadInMB"
        BatchStrategy:
          $ref: "#/components/schemas/BatchStrategy"
        Environment:
          $ref: "#/components/schemas/TransformEnvironmentMap"
        TransformInput:
          $ref: "#/components/schemas/TransformInput"
        TransformOutput:
          $ref: "#/components/schemas/TransformOutput"
        TransformResources:
          $ref: "#/components/schemas/TransformResources"
        CreationTime:
          $ref: "#/components/schemas/Timestamp"
        TransformStartTime:
          $ref: "#/components/schemas/Timestamp"
        TransformEndTime:
          $ref: "#/components/schemas/Timestamp"
        LabelingJobArn:
          $ref: "#/components/schemas/LabelingJobArn"
        DataProcessing:
          $ref: "#/components/schemas/DataProcessing"
    DescribeTransformJobRequest:
      type: object
      required:
        - TransformJobName
      properties:
        TransformJobName:
          $ref: "#/components/schemas/TransformJobName"
    DescribeWorkteamResponse:
      type: object
      required:
        - Workteam
      properties:
        Workteam:
          $ref: "#/components/schemas/Workteam"
    DescribeWorkteamRequest:
      type: object
      required:
        - WorkteamName
      properties:
        WorkteamName:
          $ref: "#/components/schemas/WorkteamName"
    GetSearchSuggestionsResponse:
      type: object
      properties:
        PropertyNameSuggestions:
          $ref: "#/components/schemas/PropertyNameSuggestionList"
    GetSearchSuggestionsRequest:
      type: object
      required:
        - Resource
      properties:
        Resource:
          $ref: "#/components/schemas/ResourceType"
        SuggestionQuery:
          $ref: "#/components/schemas/SuggestionQuery"
    ListAlgorithmsOutput:
      type: object
      required:
        - AlgorithmSummaryList
      properties:
        AlgorithmSummaryList:
          $ref: "#/components/schemas/AlgorithmSummaryList"
        NextToken:
          $ref: "#/components/schemas/NextToken"
    ListAlgorithmsInput:
      type: object
      properties:
        CreationTimeAfter:
          $ref: "#/components/schemas/CreationTime"
        CreationTimeBefore:
          $ref: "#/components/schemas/CreationTime"
        MaxResults:
          $ref: "#/components/schemas/MaxResults"
        NameContains:
          $ref: "#/components/schemas/NameContains"
        NextToken:
          $ref: "#/components/schemas/NextToken"
        SortBy:
          $ref: "#/components/schemas/AlgorithmSortBy"
        SortOrder:
          $ref: "#/components/schemas/SortOrder"
    ListCodeRepositoriesOutput:
      type: object
      required:
        - CodeRepositorySummaryList
      properties:
        CodeRepositorySummaryList:
          $ref: "#/components/schemas/CodeRepositorySummaryList"
        NextToken:
          $ref: "#/components/schemas/NextToken"
    ListCodeRepositoriesInput:
      type: object
      properties:
        CreationTimeAfter:
          $ref: "#/components/schemas/CreationTime"
        CreationTimeBefore:
          $ref: "#/components/schemas/CreationTime"
        LastModifiedTimeAfter:
          $ref: "#/components/schemas/Timestamp"
        LastModifiedTimeBefore:
          $ref: "#/components/schemas/Timestamp"
        MaxResults:
          $ref: "#/components/schemas/MaxResults"
        NameContains:
          $ref: "#/components/schemas/CodeRepositoryNameContains"
        NextToken:
          $ref: "#/components/schemas/NextToken"
        SortBy:
          $ref: "#/components/schemas/CodeRepositorySortBy"
        SortOrder:
          $ref: "#/components/schemas/CodeRepositorySortOrder"
    ListCompilationJobsResponse:
      type: object
      required:
        - CompilationJobSummaries
      properties:
        CompilationJobSummaries:
          $ref: "#/components/schemas/CompilationJobSummaries"
        NextToken:
          $ref: "#/components/schemas/NextToken"
    ListCompilationJobsRequest:
      type: object
      properties:
        NextToken:
          $ref: "#/components/schemas/NextToken"
        MaxResults:
          $ref: "#/components/schemas/MaxResults"
        CreationTimeAfter:
          $ref: "#/components/schemas/CreationTime"
        CreationTimeBefore:
          $ref: "#/components/schemas/CreationTime"
        LastModifiedTimeAfter:
          $ref: "#/components/schemas/LastModifiedTime"
        LastModifiedTimeBefore:
          $ref: "#/components/schemas/LastModifiedTime"
        NameContains:
          $ref: "#/components/schemas/NameContains"
        StatusEquals:
          $ref: "#/components/schemas/CompilationJobStatus"
        SortBy:
          $ref: "#/components/schemas/ListCompilationJobsSortBy"
        SortOrder:
          $ref: "#/components/schemas/SortOrder"
    ListEndpointConfigsOutput:
      type: object
      required:
        - EndpointConfigs
      properties:
        EndpointConfigs:
          $ref: "#/components/schemas/EndpointConfigSummaryList"
        NextToken:
          $ref: "#/components/schemas/PaginationToken"
    ListEndpointConfigsInput:
      type: object
      properties:
        SortBy:
          $ref: "#/components/schemas/EndpointConfigSortKey"
        SortOrder:
          $ref: "#/components/schemas/OrderKey"
        NextToken:
          $ref: "#/components/schemas/PaginationToken"
        MaxResults:
          $ref: "#/components/schemas/MaxResults"
        NameContains:
          $ref: "#/components/schemas/EndpointConfigNameContains"
        CreationTimeBefore:
          $ref: "#/components/schemas/Timestamp"
        CreationTimeAfter:
          $ref: "#/components/schemas/Timestamp"
    ListEndpointsOutput:
      type: object
      required:
        - Endpoints
      properties:
        Endpoints:
          $ref: "#/components/schemas/EndpointSummaryList"
        NextToken:
          $ref: "#/components/schemas/PaginationToken"
    ListEndpointsInput:
      type: object
      properties:
        SortBy:
          $ref: "#/components/schemas/EndpointSortKey"
        SortOrder:
          $ref: "#/components/schemas/OrderKey"
        NextToken:
          $ref: "#/components/schemas/PaginationToken"
        MaxResults:
          $ref: "#/components/schemas/MaxResults"
        NameContains:
          $ref: "#/components/schemas/EndpointNameContains"
        CreationTimeBefore:
          $ref: "#/components/schemas/Timestamp"
        CreationTimeAfter:
          $ref: "#/components/schemas/Timestamp"
        LastModifiedTimeBefore:
          $ref: "#/components/schemas/Timestamp"
        LastModifiedTimeAfter:
          $ref: "#/components/schemas/Timestamp"
        StatusEquals:
          $ref: "#/components/schemas/EndpointStatus"
    ListHyperParameterTuningJobsResponse:
      type: object
      required:
        - HyperParameterTuningJobSummaries
      properties:
        HyperParameterTuningJobSummaries:
          $ref: "#/components/schemas/HyperParameterTuningJobSummaries"
        NextToken:
          $ref: "#/components/schemas/NextToken"
    ListHyperParameterTuningJobsRequest:
      type: object
      properties:
        NextToken:
          $ref: "#/components/schemas/NextToken"
        MaxResults:
          $ref: "#/components/schemas/MaxResults"
        SortBy:
          $ref: "#/components/schemas/HyperParameterTuningJobSortByOptions"
        SortOrder:
          $ref: "#/components/schemas/SortOrder"
        NameContains:
          $ref: "#/components/schemas/NameContains"
        CreationTimeAfter:
          $ref: "#/components/schemas/Timestamp"
        CreationTimeBefore:
          $ref: "#/components/schemas/Timestamp"
        LastModifiedTimeAfter:
          $ref: "#/components/schemas/Timestamp"
        LastModifiedTimeBefore:
          $ref: "#/components/schemas/Timestamp"
        StatusEquals:
          $ref: "#/components/schemas/HyperParameterTuningJobStatus"
    ListLabelingJobsResponse:
      type: object
      properties:
        LabelingJobSummaryList:
          $ref: "#/components/schemas/LabelingJobSummaryList"
        NextToken:
          $ref: "#/components/schemas/NextToken"
    ListLabelingJobsRequest:
      type: object
      properties:
        CreationTimeAfter:
          $ref: "#/components/schemas/Timestamp"
        CreationTimeBefore:
          $ref: "#/components/schemas/Timestamp"
        LastModifiedTimeAfter:
          $ref: "#/components/schemas/Timestamp"
        LastModifiedTimeBefore:
          $ref: "#/components/schemas/Timestamp"
        MaxResults:
          $ref: "#/components/schemas/MaxResults"
        NextToken:
          $ref: "#/components/schemas/NextToken"
        NameContains:
          $ref: "#/components/schemas/NameContains"
        SortBy:
          $ref: "#/components/schemas/SortBy"
        SortOrder:
          $ref: "#/components/schemas/SortOrder"
        StatusEquals:
          $ref: "#/components/schemas/LabelingJobStatus"
    ListLabelingJobsForWorkteamResponse:
      type: object
      required:
        - LabelingJobSummaryList
      properties:
        LabelingJobSummaryList:
          $ref: "#/components/schemas/LabelingJobForWorkteamSummaryList"
        NextToken:
          $ref: "#/components/schemas/NextToken"
    ListLabelingJobsForWorkteamRequest:
      type: object
      required:
        - WorkteamArn
      properties:
        WorkteamArn:
          $ref: "#/components/schemas/WorkteamArn"
        MaxResults:
          $ref: "#/components/schemas/MaxResults"
        NextToken:
          $ref: "#/components/schemas/NextToken"
        CreationTimeAfter:
          $ref: "#/components/schemas/Timestamp"
        CreationTimeBefore:
          $ref: "#/components/schemas/Timestamp"
        JobReferenceCodeContains:
          $ref: "#/components/schemas/JobReferenceCodeContains"
        SortBy:
          $ref: "#/components/schemas/ListLabelingJobsForWorkteamSortByOptions"
        SortOrder:
          $ref: "#/components/schemas/SortOrder"
    ListModelPackagesOutput:
      type: object
      required:
        - ModelPackageSummaryList
      properties:
        ModelPackageSummaryList:
          $ref: "#/components/schemas/ModelPackageSummaryList"
        NextToken:
          $ref: "#/components/schemas/NextToken"
    ListModelPackagesInput:
      type: object
      properties:
        CreationTimeAfter:
          $ref: "#/components/schemas/CreationTime"
        CreationTimeBefore:
          $ref: "#/components/schemas/CreationTime"
        MaxResults:
          $ref: "#/components/schemas/MaxResults"
        NameContains:
          $ref: "#/components/schemas/NameContains"
        NextToken:
          $ref: "#/components/schemas/NextToken"
        SortBy:
          $ref: "#/components/schemas/ModelPackageSortBy"
        SortOrder:
          $ref: "#/components/schemas/SortOrder"
    ListModelsOutput:
      type: object
      required:
        - Models
      properties:
        Models:
          $ref: "#/components/schemas/ModelSummaryList"
        NextToken:
          $ref: "#/components/schemas/PaginationToken"
    ListModelsInput:
      type: object
      properties:
        SortBy:
          $ref: "#/components/schemas/ModelSortKey"
        SortOrder:
          $ref: "#/components/schemas/OrderKey"
        NextToken:
          $ref: "#/components/schemas/PaginationToken"
        MaxResults:
          $ref: "#/components/schemas/MaxResults"
        NameContains:
          $ref: "#/components/schemas/ModelNameContains"
        CreationTimeBefore:
          $ref: "#/components/schemas/Timestamp"
        CreationTimeAfter:
          $ref: "#/components/schemas/Timestamp"
    ListNotebookInstanceLifecycleConfigsOutput:
      type: object
      properties:
        NextToken:
          $ref: "#/components/schemas/NextToken"
        NotebookInstanceLifecycleConfigs:
          $ref: "#/components/schemas/NotebookInstanceLifecycleConfigSummaryList"
    ListNotebookInstanceLifecycleConfigsInput:
      type: object
      properties:
        NextToken:
          $ref: "#/components/schemas/NextToken"
        MaxResults:
          $ref: "#/components/schemas/MaxResults"
        SortBy:
          $ref: "#/components/schemas/NotebookInstanceLifecycleConfigSortKey"
        SortOrder:
          $ref: "#/components/schemas/NotebookInstanceLifecycleConfigSortOrder"
        NameContains:
          $ref: "#/components/schemas/NotebookInstanceLifecycleConfigNameContains"
        CreationTimeBefore:
          $ref: "#/components/schemas/CreationTime"
        CreationTimeAfter:
          $ref: "#/components/schemas/CreationTime"
        LastModifiedTimeBefore:
          $ref: "#/components/schemas/LastModifiedTime"
        LastModifiedTimeAfter:
          $ref: "#/components/schemas/LastModifiedTime"
    ListNotebookInstancesOutput:
      type: object
      properties:
        NextToken:
          $ref: "#/components/schemas/NextToken"
        NotebookInstances:
          $ref: "#/components/schemas/NotebookInstanceSummaryList"
    ListNotebookInstancesInput:
      type: object
      properties:
        NextToken:
          $ref: "#/components/schemas/NextToken"
        MaxResults:
          $ref: "#/components/schemas/MaxResults"
        SortBy:
          $ref: "#/components/schemas/NotebookInstanceSortKey"
        SortOrder:
          $ref: "#/components/schemas/NotebookInstanceSortOrder"
        NameContains:
          $ref: "#/components/schemas/NotebookInstanceNameContains"
        CreationTimeBefore:
          $ref: "#/components/schemas/CreationTime"
        CreationTimeAfter:
          $ref: "#/components/schemas/CreationTime"
        LastModifiedTimeBefore:
          $ref: "#/components/schemas/LastModifiedTime"
        LastModifiedTimeAfter:
          $ref: "#/components/schemas/LastModifiedTime"
        StatusEquals:
          $ref: "#/components/schemas/NotebookInstanceStatus"
        NotebookInstanceLifecycleConfigNameContains:
          $ref: "#/components/schemas/NotebookInstanceLifecycleConfigName"
        DefaultCodeRepositoryContains:
          $ref: "#/components/schemas/CodeRepositoryContains"
        AdditionalCodeRepositoryEquals:
          $ref: "#/components/schemas/CodeRepositoryNameOrUrl"
    ListSubscribedWorkteamsResponse:
      type: object
      required:
        - SubscribedWorkteams
      properties:
        SubscribedWorkteams:
          $ref: "#/components/schemas/SubscribedWorkteams"
        NextToken:
          $ref: "#/components/schemas/NextToken"
    ListSubscribedWorkteamsRequest:
      type: object
      properties:
        NameContains:
          $ref: "#/components/schemas/WorkteamName"
        NextToken:
          $ref: "#/components/schemas/NextToken"
        MaxResults:
          $ref: "#/components/schemas/MaxResults"
    ListTagsOutput:
      type: object
      properties:
        Tags:
          $ref: "#/components/schemas/TagList"
        NextToken:
          $ref: "#/components/schemas/NextToken"
    ListTagsInput:
      type: object
      required:
        - ResourceArn
      properties:
        ResourceArn:
          $ref: "#/components/schemas/ResourceArn"
        NextToken:
          $ref: "#/components/schemas/NextToken"
        MaxResults:
          $ref: "#/components/schemas/ListTagsMaxResults"
    ListTrainingJobsResponse:
      type: object
      required:
        - TrainingJobSummaries
      properties:
        TrainingJobSummaries:
          $ref: "#/components/schemas/TrainingJobSummaries"
        NextToken:
          $ref: "#/components/schemas/NextToken"
    ListTrainingJobsRequest:
      type: object
      properties:
        NextToken:
          $ref: "#/components/schemas/NextToken"
        MaxResults:
          $ref: "#/components/schemas/MaxResults"
        CreationTimeAfter:
          $ref: "#/components/schemas/Timestamp"
        CreationTimeBefore:
          $ref: "#/components/schemas/Timestamp"
        LastModifiedTimeAfter:
          $ref: "#/components/schemas/Timestamp"
        LastModifiedTimeBefore:
          $ref: "#/components/schemas/Timestamp"
        NameContains:
          $ref: "#/components/schemas/NameContains"
        StatusEquals:
          $ref: "#/components/schemas/TrainingJobStatus"
        SortBy:
          $ref: "#/components/schemas/SortBy"
        SortOrder:
          $ref: "#/components/schemas/SortOrder"
    ListTrainingJobsForHyperParameterTuningJobResponse:
      type: object
      required:
        - TrainingJobSummaries
      properties:
        TrainingJobSummaries:
          $ref: "#/components/schemas/HyperParameterTrainingJobSummaries"
        NextToken:
          $ref: "#/components/schemas/NextToken"
    ListTrainingJobsForHyperParameterTuningJobRequest:
      type: object
      required:
        - HyperParameterTuningJobName
      properties:
        HyperParameterTuningJobName:
          $ref: "#/components/schemas/HyperParameterTuningJobName"
        NextToken:
          $ref: "#/components/schemas/NextToken"
        MaxResults:
          $ref: "#/components/schemas/MaxResults"
        StatusEquals:
          $ref: "#/components/schemas/TrainingJobStatus"
        SortBy:
          $ref: "#/components/schemas/TrainingJobSortByOptions"
        SortOrder:
          $ref: "#/components/schemas/SortOrder"
    ListTransformJobsResponse:
      type: object
      required:
        - TransformJobSummaries
      properties:
        TransformJobSummaries:
          $ref: "#/components/schemas/TransformJobSummaries"
        NextToken:
          $ref: "#/components/schemas/NextToken"
    ListTransformJobsRequest:
      type: object
      properties:
        CreationTimeAfter:
          $ref: "#/components/schemas/Timestamp"
        CreationTimeBefore:
          $ref: "#/components/schemas/Timestamp"
        LastModifiedTimeAfter:
          $ref: "#/components/schemas/Timestamp"
        LastModifiedTimeBefore:
          $ref: "#/components/schemas/Timestamp"
        NameContains:
          $ref: "#/components/schemas/NameContains"
        StatusEquals:
          $ref: "#/components/schemas/TransformJobStatus"
        SortBy:
          $ref: "#/components/schemas/SortBy"
        SortOrder:
          $ref: "#/components/schemas/SortOrder"
        NextToken:
          $ref: "#/components/schemas/NextToken"
        MaxResults:
          $ref: "#/components/schemas/MaxResults"
    ListWorkteamsResponse:
      type: object
      required:
        - Workteams
      properties:
        Workteams:
          $ref: "#/components/schemas/Workteams"
        NextToken:
          $ref: "#/components/schemas/NextToken"
    ListWorkteamsRequest:
      type: object
      properties:
        SortBy:
          $ref: "#/components/schemas/ListWorkteamsSortByOptions"
        SortOrder:
          $ref: "#/components/schemas/SortOrder"
        NameContains:
          $ref: "#/components/schemas/WorkteamName"
        NextToken:
          $ref: "#/components/schemas/NextToken"
        MaxResults:
          $ref: "#/components/schemas/MaxResults"
    RenderUiTemplateResponse:
      type: object
      required:
        - RenderedContent
        - Errors
      properties:
        RenderedContent:
          $ref: "#/components/schemas/String"
        Errors:
          $ref: "#/components/schemas/RenderingErrorList"
    RenderUiTemplateRequest:
      type: object
      required:
        - UiTemplate
        - Task
        - RoleArn
      properties:
        UiTemplate:
          $ref: "#/components/schemas/UiTemplate"
        Task:
          $ref: "#/components/schemas/RenderableTask"
        RoleArn:
          $ref: "#/components/schemas/RoleArn"
    SearchResponse:
      type: object
      properties:
        Results:
          $ref: "#/components/schemas/SearchResultsList"
        NextToken:
          $ref: "#/components/schemas/NextToken"
    SearchRequest:
      type: object
      required:
        - Resource
      properties:
        Resource:
          $ref: "#/components/schemas/ResourceType"
        SearchExpression:
          $ref: "#/components/schemas/SearchExpression"
        SortBy:
          $ref: "#/components/schemas/ResourcePropertyName"
        SortOrder:
          $ref: "#/components/schemas/SearchSortOrder"
        NextToken:
          $ref: "#/components/schemas/NextToken"
        MaxResults:
          $ref: "#/components/schemas/MaxResults"
    StartNotebookInstanceInput:
      type: object
      required:
        - NotebookInstanceName
      properties:
        NotebookInstanceName:
          $ref: "#/components/schemas/NotebookInstanceName"
    StopCompilationJobRequest:
      type: object
      required:
        - CompilationJobName
      properties:
        CompilationJobName:
          $ref: "#/components/schemas/EntityName"
    StopHyperParameterTuningJobRequest:
      type: object
      required:
        - HyperParameterTuningJobName
      properties:
        HyperParameterTuningJobName:
          $ref: "#/components/schemas/HyperParameterTuningJobName"
    StopLabelingJobRequest:
      type: object
      required:
        - LabelingJobName
      properties:
        LabelingJobName:
          $ref: "#/components/schemas/LabelingJobName"
    StopNotebookInstanceInput:
      type: object
      required:
        - NotebookInstanceName
      properties:
        NotebookInstanceName:
          $ref: "#/components/schemas/NotebookInstanceName"
    StopTrainingJobRequest:
      type: object
      required:
        - TrainingJobName
      properties:
        TrainingJobName:
          $ref: "#/components/schemas/TrainingJobName"
    StopTransformJobRequest:
      type: object
      required:
        - TransformJobName
      properties:
        TransformJobName:
          $ref: "#/components/schemas/TransformJobName"
    UpdateCodeRepositoryOutput:
      type: object
      required:
        - CodeRepositoryArn
      properties:
        CodeRepositoryArn:
          $ref: "#/components/schemas/CodeRepositoryArn"
    UpdateCodeRepositoryInput:
      type: object
      required:
        - CodeRepositoryName
      properties:
        CodeRepositoryName:
          $ref: "#/components/schemas/EntityName"
        GitConfig:
          $ref: "#/components/schemas/GitConfigForUpdate"
    UpdateEndpointOutput:
      type: object
      required:
        - EndpointArn
      properties:
        EndpointArn:
          $ref: "#/components/schemas/EndpointArn"
    UpdateEndpointInput:
      type: object
      required:
        - EndpointName
        - EndpointConfigName
      properties:
        EndpointName:
          $ref: "#/components/schemas/EndpointName"
        EndpointConfigName:
          $ref: "#/components/schemas/EndpointConfigName"
    UpdateEndpointWeightsAndCapacitiesOutput:
      type: object
      required:
        - EndpointArn
      properties:
        EndpointArn:
          $ref: "#/components/schemas/EndpointArn"
    UpdateEndpointWeightsAndCapacitiesInput:
      type: object
      required:
        - EndpointName
        - DesiredWeightsAndCapacities
      properties:
        EndpointName:
          $ref: "#/components/schemas/EndpointName"
        DesiredWeightsAndCapacities:
          $ref: "#/components/schemas/DesiredWeightAndCapacityList"
    UpdateNotebookInstanceOutput:
      type: object
      properties: {}
    UpdateNotebookInstanceInput:
      type: object
      required:
        - NotebookInstanceName
      properties:
        NotebookInstanceName:
          $ref: "#/components/schemas/NotebookInstanceName"
        InstanceType:
          $ref: "#/components/schemas/InstanceType"
        RoleArn:
          $ref: "#/components/schemas/RoleArn"
        LifecycleConfigName:
          $ref: "#/components/schemas/NotebookInstanceLifecycleConfigName"
        DisassociateLifecycleConfig:
          $ref: "#/components/schemas/DisassociateNotebookInstanceLifecycleConfig"
        VolumeSizeInGB:
          $ref: "#/components/schemas/NotebookInstanceVolumeSizeInGB"
        DefaultCodeRepository:
          $ref: "#/components/schemas/CodeRepositoryNameOrUrl"
        AdditionalCodeRepositories:
          $ref: "#/components/schemas/AdditionalCodeRepositoryNamesOrUrls"
        AcceleratorTypes:
          $ref: "#/components/schemas/NotebookInstanceAcceleratorTypes"
        DisassociateAcceleratorTypes:
          $ref: "#/components/schemas/DisassociateNotebookInstanceAcceleratorTypes"
        DisassociateDefaultCodeRepository:
          $ref: "#/components/schemas/DisassociateDefaultCodeRepository"
        DisassociateAdditionalCodeRepositories:
          $ref: "#/components/schemas/DisassociateAdditionalCodeRepositories"
        RootAccess:
          $ref: "#/components/schemas/RootAccess"
    UpdateNotebookInstanceLifecycleConfigOutput:
      type: object
      properties: {}
    UpdateNotebookInstanceLifecycleConfigInput:
      type: object
      required:
        - NotebookInstanceLifecycleConfigName
      properties:
        NotebookInstanceLifecycleConfigName:
          $ref: "#/components/schemas/NotebookInstanceLifecycleConfigName"
        OnCreate:
          $ref: "#/components/schemas/NotebookInstanceLifecycleConfigList"
        OnStart:
          $ref: "#/components/schemas/NotebookInstanceLifecycleConfigList"
    UpdateWorkteamResponse:
      type: object
      required:
        - Workteam
      properties:
        Workteam:
          $ref: "#/components/schemas/Workteam"
    UpdateWorkteamRequest:
      type: object
      required:
        - WorkteamName
      properties:
        WorkteamName:
          $ref: "#/components/schemas/WorkteamName"
        MemberDefinitions:
          $ref: "#/components/schemas/MemberDefinitions"
        Description:
          $ref: "#/components/schemas/String200"
        NotificationConfiguration:
          $ref: "#/components/schemas/NotificationConfiguration"
    Accept:
      type: string
      pattern: .*
      maxLength: 256
    AccountId:
      type: string
      pattern: ^\d+$
    ResourceArn:
      type: string
      pattern: arn:.*
      maxLength: 256
    TagList:
      type: array
      items:
        $ref: "#/components/schemas/Tag"
      minItems: 0
      maxItems: 50
    CodeRepositoryNameOrUrl:
      type: string
      pattern: ^https://([^/]+)/?(.*)$|^[a-zA-Z0-9](-*[a-zA-Z0-9])*
      minLength: 1
      maxLength: 1024
    AdditionalCodeRepositoryNamesOrUrls:
      type: array
      items:
        $ref: "#/components/schemas/CodeRepositoryNameOrUrl"
      maxItems: 3
    AlgorithmArn:
      type: string
      pattern: arn:aws[a-z\-]*:sagemaker:[a-z0-9\-]*:[0-9]{12}:algorithm/.*
      minLength: 1
      maxLength: 2048
    AlgorithmImage:
      type: string
      pattern: .*
      maxLength: 255
    AlgorithmSortBy:
      type: string
      enum:
        - Name
        - CreationTime
    ArnOrName:
      type: string
      pattern: (arn:aws[a-z\-]*:sagemaker:[a-z0-9\-]*:[0-9]{12}:[a-z\-]*\/)?([a-zA-Z0-9]([a-zA-Z0-9-]){0,62})(?<!-)$
      minLength: 1
      maxLength: 170
    TrainingInputMode:
      type: string
      enum:
        - Pipe
        - File
    MetricDefinitionList:
      type: array
      items:
        $ref: "#/components/schemas/MetricDefinition"
      minItems: 0
      maxItems: 40
    AlgorithmSpecification:
      type: object
      required:
        - TrainingInputMode
      properties:
        TrainingImage:
          $ref: "#/components/schemas/AlgorithmImage"
        AlgorithmName:
          $ref: "#/components/schemas/ArnOrName"
        TrainingInputMode:
          $ref: "#/components/schemas/TrainingInputMode"
        MetricDefinitions:
          $ref: "#/components/schemas/MetricDefinitionList"
      description: <p>Specifies the training algorithm to use in a <a
        href="https://docs.aws.amazon.com/sagemaker/latest/dg/API_CreateTrainingJob.html">CreateTrainingJob</a>
        request.</p> <p>For more information about algorithms provided by Amazon
        SageMaker, see <a
        href="https://docs.aws.amazon.com/sagemaker/latest/dg/algos.html">Algorithms</a>.
        For information about using your own algorithms, see <a
        href="https://docs.aws.amazon.com/sagemaker/latest/dg/your-algorithms.html">Using
        Your Own Algorithms with Amazon SageMaker</a>. </p>
    AlgorithmStatus:
      type: string
      enum:
        - Pending
        - InProgress
        - Completed
        - Failed
        - Deleting
    AlgorithmStatusItemList:
      type: array
      items:
        $ref: "#/components/schemas/AlgorithmStatusItem"
    AlgorithmStatusDetails:
      type: object
      properties:
        ValidationStatuses:
          $ref: "#/components/schemas/AlgorithmStatusItemList"
        ImageScanStatuses:
          $ref: "#/components/schemas/AlgorithmStatusItemList"
      description: Specifies the validation and image scan statuses of the algorithm.
    EntityName:
      type: string
      pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9])*$
      minLength: 1
      maxLength: 63
    DetailedAlgorithmStatus:
      type: string
      enum:
        - NotStarted
        - InProgress
        - Completed
        - Failed
    String:
      type: string
    AlgorithmStatusItem:
      type: object
      required:
        - Name
        - Status
      properties:
        Name:
          $ref: "#/components/schemas/EntityName"
        Status:
          $ref: "#/components/schemas/DetailedAlgorithmStatus"
        FailureReason:
          $ref: "#/components/schemas/String"
      description: Represents the overall status of an algorithm.
    EntityDescription:
      type: string
      pattern: "[\\p{L}\\p{M}\\p{Z}\\p{S}\\p{N}\\p{P}]*"
      maxLength: 1024
    CreationTime:
      type: string
      format: date-time
    AlgorithmSummary:
      type: object
      required:
        - AlgorithmName
        - AlgorithmArn
        - CreationTime
        - AlgorithmStatus
      properties:
        AlgorithmName:
          $ref: "#/components/schemas/EntityName"
        AlgorithmArn:
          $ref: "#/components/schemas/AlgorithmArn"
        AlgorithmDescription:
          $ref: "#/components/schemas/EntityDescription"
        CreationTime:
          $ref: "#/components/schemas/CreationTime"
        AlgorithmStatus:
          $ref: "#/components/schemas/AlgorithmStatus"
      description: Provides summary information about an algorithm.
    AlgorithmSummaryList:
      type: array
      items:
        $ref: "#/components/schemas/AlgorithmSummary"
    TrainingJobDefinition:
      type: object
      required:
        - TrainingInputMode
        - InputDataConfig
        - OutputDataConfig
        - ResourceConfig
        - StoppingCondition
      properties:
        TrainingInputMode:
          $ref: "#/components/schemas/TrainingInputMode"
        HyperParameters:
          $ref: "#/components/schemas/HyperParameters"
        InputDataConfig:
          $ref: "#/components/schemas/InputDataConfig"
        OutputDataConfig:
          $ref: "#/components/schemas/OutputDataConfig"
        ResourceConfig:
          $ref: "#/components/schemas/ResourceConfig"
        StoppingCondition:
          $ref: "#/components/schemas/StoppingCondition"
      description: Defines the input needed to run a training job using the algorithm.
    TransformJobDefinition:
      type: object
      required:
        - TransformInput
        - TransformOutput
        - TransformResources
      properties:
        MaxConcurrentTransforms:
          $ref: "#/components/schemas/MaxConcurrentTransforms"
        MaxPayloadInMB:
          $ref: "#/components/schemas/MaxPayloadInMB"
        BatchStrategy:
          $ref: "#/components/schemas/BatchStrategy"
        Environment:
          $ref: "#/components/schemas/TransformEnvironmentMap"
        TransformInput:
          $ref: "#/components/schemas/TransformInput"
        TransformOutput:
          $ref: "#/components/schemas/TransformOutput"
        TransformResources:
          $ref: "#/components/schemas/TransformResources"
      description: Defines the input needed to run a transform job using the inference
        specification specified in the algorithm.
    AlgorithmValidationProfile:
      type: object
      required:
        - ProfileName
        - TrainingJobDefinition
      properties:
        ProfileName:
          $ref: "#/components/schemas/EntityName"
        TrainingJobDefinition:
          $ref: "#/components/schemas/TrainingJobDefinition"
        TransformJobDefinition:
          $ref: "#/components/schemas/TransformJobDefinition"
      description: <p>Defines a training job and a batch transform job that Amazon
        SageMaker runs to validate your algorithm.</p> <p>The data provided in
        the validation profile is made available to your buyers on AWS
        Marketplace.</p>
    AlgorithmValidationProfiles:
      type: array
      items:
        $ref: "#/components/schemas/AlgorithmValidationProfile"
      minItems: 1
      maxItems: 1
    RoleArn:
      type: string
      pattern: ^arn:aws[a-z\-]*:iam::\d{12}:role/?[a-zA-Z_0-9+=,.@\-_/]+$
      minLength: 20
      maxLength: 2048
    AlgorithmValidationSpecification:
      type: object
      required:
        - ValidationRole
        - ValidationProfiles
      properties:
        ValidationRole:
          $ref: "#/components/schemas/RoleArn"
        ValidationProfiles:
          $ref: "#/components/schemas/AlgorithmValidationProfiles"
      description: Specifies configurations for one or more training jobs that Amazon
        SageMaker runs to test the algorithm.
    LambdaFunctionArn:
      type: string
      pattern: arn:aws[a-z\-]*:lambda:[a-z]{2}-[a-z]+-\d{1}:\d{12}:function:[a-zA-Z0-9-_\.]+(:(\$LATEST|[a-zA-Z0-9-_]+))?
      maxLength: 2048
    AnnotationConsolidationConfig:
      type: object
      required:
        - AnnotationConsolidationLambdaArn
      properties:
        AnnotationConsolidationLambdaArn:
          $ref: "#/components/schemas/LambdaFunctionArn"
      description: Configures how labels are consolidated across human workers.
    AssemblyType:
      type: string
      enum:
        - None
        - Line
    AttributeName:
      type: string
      pattern: .+
      minLength: 1
      maxLength: 256
    AttributeNames:
      type: array
      items:
        $ref: "#/components/schemas/AttributeName"
      maxItems: 16
    BatchStrategy:
      type: string
      enum:
        - MultiRecord
        - SingleRecord
    BillableTimeInSeconds:
      type: integer
      minimum: 1
    Boolean:
      type: boolean
    BooleanOperator:
      type: string
      enum:
        - And
        - Or
    Branch:
      type: string
      pattern: "[^ ~^:?*\\[]+"
      minLength: 1
      maxLength: 1024
    ParameterKey:
      type: string
      pattern: .*
      maxLength: 256
    ParameterValues:
      type: array
      items:
        $ref: "#/components/schemas/ParameterValue"
      minItems: 1
      maxItems: 20
    CategoricalParameterRange:
      type: object
      required:
        - Name
        - Values
      properties:
        Name:
          $ref: "#/components/schemas/ParameterKey"
        Values:
          $ref: "#/components/schemas/ParameterValues"
      description: A list of categorical hyperparameters to tune.
    CategoricalParameterRangeSpecification:
      type: object
      required:
        - Values
      properties:
        Values:
          $ref: "#/components/schemas/ParameterValues"
      description: Defines the possible values for a categorical hyperparameter.
    CategoricalParameterRanges:
      type: array
      items:
        $ref: "#/components/schemas/CategoricalParameterRange"
      minItems: 0
      maxItems: 20
    Cents:
      type: integer
      minimum: 0
      maximum: 99
    CertifyForMarketplace:
      type: boolean
    ChannelName:
      type: string
      pattern: "[A-Za-z0-9\\.\\-_]+"
      minLength: 1
      maxLength: 64
    DataSource:
      type: object
      properties:
        S3DataSource:
          $ref: "#/components/schemas/S3DataSource"
        FileSystemDataSource:
          $ref: "#/components/schemas/FileSystemDataSource"
      description: Describes the location of the channel data.
    ContentType:
      type: string
      pattern: .*
      maxLength: 256
    CompressionType:
      type: string
      enum:
        - None
        - Gzip
    RecordWrapper:
      type: string
      enum:
        - None
        - RecordIO
    ShuffleConfig:
      type: object
      required:
        - Seed
      properties:
        Seed:
          $ref: "#/components/schemas/Seed"
      description: <p>A configuration for a shuffle option for input data in a channel. If
        you use <code>S3Prefix</code> for <code>S3DataType</code>, the results
        of the S3 key prefix matches are shuffled. If you use
        <code>ManifestFile</code>, the order of the S3 object references in the
        <code>ManifestFile</code> is shuffled. If you use
        <code>AugmentedManifestFile</code>, the order of the JSON lines in the
        <code>AugmentedManifestFile</code> is shuffled. The shuffling order is
        determined using the <code>Seed</code> value.</p> <p>For Pipe input
        mode, shuffling is done at the start of every epoch. With large
        datasets, this ensures that the order of the training data is different
        for each epoch, and it helps reduce bias and possible overfitting. In a
        multi-node training job when <code>ShuffleConfig</code> is combined with
        <code>S3DataDistributionType</code> of <code>ShardedByS3Key</code>, the
        data is shuffled across nodes so that the content sent to a particular
        node on the first epoch might be sent to a different node on the second
        epoch.</p>
    Channel:
      type: object
      required:
        - ChannelName
        - DataSource
      properties:
        ChannelName:
          $ref: "#/components/schemas/ChannelName"
        DataSource:
          $ref: "#/components/schemas/DataSource"
        ContentType:
          $ref: "#/components/schemas/ContentType"
        CompressionType:
          $ref: "#/components/schemas/CompressionType"
        RecordWrapperType:
          $ref: "#/components/schemas/RecordWrapper"
        InputMode:
          $ref: "#/components/schemas/TrainingInputMode"
        ShuffleConfig:
          $ref: "#/components/schemas/ShuffleConfig"
      description: "A channel is a named input source that training algorithms can consume.
        "
    ContentTypes:
      type: array
      items:
        $ref: "#/components/schemas/ContentType"
    CompressionTypes:
      type: array
      items:
        $ref: "#/components/schemas/CompressionType"
    InputModes:
      type: array
      items:
        $ref: "#/components/schemas/TrainingInputMode"
      minItems: 1
    ChannelSpecification:
      type: object
      required:
        - Name
        - SupportedContentTypes
        - SupportedInputModes
      properties:
        Name:
          $ref: "#/components/schemas/ChannelName"
        Description:
          $ref: "#/components/schemas/EntityDescription"
        IsRequired:
          $ref: "#/components/schemas/Boolean"
        SupportedContentTypes:
          $ref: "#/components/schemas/ContentTypes"
        SupportedCompressionTypes:
          $ref: "#/components/schemas/CompressionTypes"
        SupportedInputModes:
          $ref: "#/components/schemas/InputModes"
      description: Defines a named input source, called a channel, to be used by an
        algorithm.
    ChannelSpecifications:
      type: array
      items:
        $ref: "#/components/schemas/ChannelSpecification"
      minItems: 1
      maxItems: 8
    S3Uri:
      type: string
      pattern: ^(https|s3)://([^/]+)/?(.*)$
      maxLength: 1024
    DirectoryPath:
      type: string
      pattern: .*
      maxLength: 4096
    CheckpointConfig:
      type: object
      required:
        - S3Uri
      properties:
        S3Uri:
          $ref: "#/components/schemas/S3Uri"
        LocalPath:
          $ref: "#/components/schemas/DirectoryPath"
      description: "Contains information about the output location for managed spot
        training checkpoint data. "
    CodeRepositoryArn:
      type: string
      pattern: arn:aws[a-z\-]*:sagemaker:[a-z0-9\-]*:[0-9]{12}:code-repository/.*
      minLength: 1
      maxLength: 2048
    CodeRepositoryContains:
      type: string
      pattern: "[a-zA-Z0-9-]+"
      maxLength: 1024
    CodeRepositoryNameContains:
      type: string
      pattern: "[a-zA-Z0-9-]+"
      maxLength: 63
    CodeRepositorySortBy:
      type: string
      enum:
        - Name
        - CreationTime
        - LastModifiedTime
    CodeRepositorySortOrder:
      type: string
      enum:
        - Ascending
        - Descending
    LastModifiedTime:
      type: string
      format: date-time
    GitConfig:
      type: object
      required:
        - RepositoryUrl
      properties:
        RepositoryUrl:
          $ref: "#/components/schemas/GitConfigUrl"
        Branch:
          $ref: "#/components/schemas/Branch"
        SecretArn:
          $ref: "#/components/schemas/SecretArn"
      description: Specifies configuration details for a Git repository in your AWS account.
    CodeRepositorySummary:
      type: object
      required:
        - CodeRepositoryName
        - CodeRepositoryArn
        - CreationTime
        - LastModifiedTime
      properties:
        CodeRepositoryName:
          $ref: "#/components/schemas/EntityName"
        CodeRepositoryArn:
          $ref: "#/components/schemas/CodeRepositoryArn"
        CreationTime:
          $ref: "#/components/schemas/CreationTime"
        LastModifiedTime:
          $ref: "#/components/schemas/LastModifiedTime"
        GitConfig:
          $ref: "#/components/schemas/GitConfig"
      description: Specifies summary information about a Git repository.
    CodeRepositorySummaryList:
      type: array
      items:
        $ref: "#/components/schemas/CodeRepositorySummary"
    CognitoClientId:
      type: string
      pattern: "[\\w+]+"
      minLength: 1
      maxLength: 128
    CognitoUserPool:
      type: string
      pattern: "[\\w-]+_[0-9a-zA-Z]+"
      minLength: 1
      maxLength: 55
    CognitoUserGroup:
      type: string
      pattern: "[\\p{L}\\p{M}\\p{S}\\p{N}\\p{P}]+"
      minLength: 1
      maxLength: 128
    CognitoMemberDefinition:
      type: object
      required:
        - UserPool
        - UserGroup
        - ClientId
      properties:
        UserPool:
          $ref: "#/components/schemas/CognitoUserPool"
        UserGroup:
          $ref: "#/components/schemas/CognitoUserGroup"
        ClientId:
          $ref: "#/components/schemas/CognitoClientId"
      description: Identifies a Amazon Cognito user group. A user group can be used in on
        or more work teams.
    CompilationJobArn:
      type: string
      pattern: arn:aws[a-z\-]*:sagemaker:[a-z0-9\-]*:[0-9]{12}:compilation-job/.*
      maxLength: 256
    CompilationJobStatus:
      type: string
      enum:
        - INPROGRESS
        - COMPLETED
        - FAILED
        - STARTING
        - STOPPING
        - STOPPED
    CompilationJobSummary:
      type: object
      required:
        - CompilationJobName
        - CompilationJobArn
        - CreationTime
        - CompilationTargetDevice
        - CompilationJobStatus
      properties:
        CompilationJobName:
          $ref: "#/components/schemas/EntityName"
        CompilationJobArn:
          $ref: "#/components/schemas/CompilationJobArn"
        CreationTime:
          $ref: "#/components/schemas/CreationTime"
        CompilationStartTime:
          $ref: "#/components/schemas/Timestamp"
        CompilationEndTime:
          $ref: "#/components/schemas/Timestamp"
        CompilationTargetDevice:
          $ref: "#/components/schemas/TargetDevice"
        LastModifiedTime:
          $ref: "#/components/schemas/LastModifiedTime"
        CompilationJobStatus:
          $ref: "#/components/schemas/CompilationJobStatus"
      description: A summary of a model compilation job.
    CompilationJobSummaries:
      type: array
      items:
        $ref: "#/components/schemas/CompilationJobSummary"
    Timestamp:
      type: string
      format: date-time
    TargetDevice:
      type: string
      enum:
        - lambda
        - ml_m4
        - ml_m5
        - ml_c4
        - ml_c5
        - ml_p2
        - ml_p3
        - jetson_tx1
        - jetson_tx2
        - jetson_nano
        - rasp3b
        - deeplens
        - rk3399
        - rk3288
        - aisage
        - sbe_c
        - qcs605
        - qcs603
    ContainerHostname:
      type: string
      pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9])*
      maxLength: 63
    Image:
      type: string
      pattern: "[\\S]+"
      maxLength: 255
    Url:
      type: string
      pattern: ^(https|s3)://([^/]+)/?(.*)$
      maxLength: 1024
    EnvironmentMap:
      type: object
      maxProperties: 16
      additionalProperties:
        $ref: "#/components/schemas/EnvironmentValue"
    ContainerDefinition:
      type: object
      properties:
        ContainerHostname:
          $ref: "#/components/schemas/ContainerHostname"
        Image:
          $ref: "#/components/schemas/Image"
        ModelDataUrl:
          $ref: "#/components/schemas/Url"
        Environment:
          $ref: "#/components/schemas/EnvironmentMap"
        ModelPackageName:
          $ref: "#/components/schemas/ArnOrName"
      description: Describes the container, as part of model definition.
    ContainerDefinitionList:
      type: array
      items:
        $ref: "#/components/schemas/ContainerDefinition"
      maxItems: 5
    ContentClassifier:
      type: string
      enum:
        - FreeOfPersonallyIdentifiableInformation
        - FreeOfAdultContent
    ContentClassifiers:
      type: array
      items:
        $ref: "#/components/schemas/ContentClassifier"
      maxItems: 256
    ParameterValue:
      type: string
      pattern: .*
      maxLength: 256
    HyperParameterScalingType:
      type: string
      enum:
        - Auto
        - Linear
        - Logarithmic
        - ReverseLogarithmic
    ContinuousParameterRange:
      type: object
      required:
        - Name
        - MinValue
        - MaxValue
      properties:
        Name:
          $ref: "#/components/schemas/ParameterKey"
        MinValue:
          $ref: "#/components/schemas/ParameterValue"
        MaxValue:
          $ref: "#/components/schemas/ParameterValue"
        ScalingType:
          $ref: "#/components/schemas/HyperParameterScalingType"
      description: A list of continuous hyperparameters to tune.
    ContinuousParameterRangeSpecification:
      type: object
      required:
        - MinValue
        - MaxValue
      properties:
        MinValue:
          $ref: "#/components/schemas/ParameterValue"
        MaxValue:
          $ref: "#/components/schemas/ParameterValue"
      description: Defines the possible values for a continuous hyperparameter.
    ContinuousParameterRanges:
      type: array
      items:
        $ref: "#/components/schemas/ContinuousParameterRange"
      minItems: 0
      maxItems: 20
    TrainingSpecification:
      type: object
      required:
        - TrainingImage
        - SupportedTrainingInstanceTypes
        - TrainingChannels
      properties:
        TrainingImage:
          $ref: "#/components/schemas/Image"
        TrainingImageDigest:
          $ref: "#/components/schemas/ImageDigest"
        SupportedHyperParameters:
          $ref: "#/components/schemas/HyperParameterSpecifications"
        SupportedTrainingInstanceTypes:
          $ref: "#/components/schemas/TrainingInstanceTypes"
        SupportsDistributedTraining:
          $ref: "#/components/schemas/Boolean"
        MetricDefinitions:
          $ref: "#/components/schemas/MetricDefinitionList"
        TrainingChannels:
          $ref: "#/components/schemas/ChannelSpecifications"
        SupportedTuningJobObjectiveMetrics:
          $ref: "#/components/schemas/HyperParameterTuningJobObjectives"
      description: Defines how the algorithm is used for a training job.
    InferenceSpecification:
      type: object
      required:
        - Containers
        - SupportedTransformInstanceTypes
        - SupportedRealtimeInferenceInstanceTypes
        - SupportedContentTypes
        - SupportedResponseMIMETypes
      properties:
        Containers:
          $ref: "#/components/schemas/ModelPackageContainerDefinitionList"
        SupportedTransformInstanceTypes:
          $ref: "#/components/schemas/TransformInstanceTypes"
        SupportedRealtimeInferenceInstanceTypes:
          $ref: "#/components/schemas/RealtimeInferenceInstanceTypes"
        SupportedContentTypes:
          $ref: "#/components/schemas/ContentTypes"
        SupportedResponseMIMETypes:
          $ref: "#/components/schemas/ResponseMIMETypes"
      description: Defines how to perform inference generation after a training job is run.
    InputConfig:
      type: object
      required:
        - S3Uri
        - DataInputConfig
        - Framework
      properties:
        S3Uri:
          $ref: "#/components/schemas/S3Uri"
        DataInputConfig:
          $ref: "#/components/schemas/DataInputConfig"
        Framework:
          $ref: "#/components/schemas/Framework"
      description: Contains information about the location of input model artifacts, the
        name and shape of the expected data inputs, and the framework in which
        the model was trained.
    OutputConfig:
      type: object
      required:
        - S3OutputLocation
        - TargetDevice
      properties:
        S3OutputLocation:
          $ref: "#/components/schemas/S3Uri"
        TargetDevice:
          $ref: "#/components/schemas/TargetDevice"
      description: Contains information about the output location for the compiled model
        and the device (target) that the model runs on.
    StoppingCondition:
      type: object
      properties:
        MaxRuntimeInSeconds:
          $ref: "#/components/schemas/MaxRuntimeInSeconds"
        MaxWaitTimeInSeconds:
          $ref: "#/components/schemas/MaxWaitTimeInSeconds"
      description: <p>Specifies a limit to how long a model training or compilation job can
        run. It also specifies how long you are willing to wait for a managed
        spot training job to complete. When the job reaches the time limit,
        Amazon SageMaker ends the training or compilation job. Use this API to
        cap model training costs.</p> <p>To stop a job, Amazon SageMaker sends
        the algorithm the <code>SIGTERM</code> signal, which delays job
        termination for 120 seconds. Algorithms can use this 120-second window
        to save the model artifacts, so the results of training are not lost.
        </p> <p>The training algorithms provided by Amazon SageMaker
        automatically save the intermediate results of a model training job when
        possible. This attempt to save artifacts is only a best effort case as
        model might not be in a state from which it can be saved. For example,
        if training has just started, the model might not be ready to save. When
        saved, this intermediate data is a valid model artifact. You can use it
        to create a model with <code>CreateModel</code>.</p> <note> <p>The
        Neural Topic Model (NTM) currently does not support saving intermediate
        model artifacts. When training NTMs, make sure that the maximum runtime
        is sufficient for the training job to complete.</p> </note>
    EndpointConfigName:
      type: string
      pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9])*
      maxLength: 63
    ProductionVariantList:
      type: array
      items:
        $ref: "#/components/schemas/ProductionVariant"
      minItems: 1
      maxItems: 10
    KmsKeyId:
      type: string
      pattern: .*
      maxLength: 2048
    EndpointConfigArn:
      type: string
      pattern: arn:aws[a-z\-]*:sagemaker:[a-z0-9\-]*:[0-9]{12}:endpoint-config/.*
      minLength: 20
      maxLength: 2048
    EndpointName:
      type: string
      pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9])*
      maxLength: 63
    EndpointArn:
      type: string
      pattern: arn:aws[a-z\-]*:sagemaker:[a-z0-9\-]*:[0-9]{12}:endpoint/.*
      minLength: 20
      maxLength: 2048
    HyperParameterTuningJobName:
      type: string
      pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9])*
      minLength: 1
      maxLength: 32
    HyperParameterTuningJobConfig:
      type: object
      required:
        - Strategy
        - ResourceLimits
      properties:
        Strategy:
          $ref: "#/components/schemas/HyperParameterTuningJobStrategyType"
        HyperParameterTuningJobObjective:
          $ref: "#/components/schemas/HyperParameterTuningJobObjective"
        ResourceLimits:
          $ref: "#/components/schemas/ResourceLimits"
        ParameterRanges:
          $ref: "#/components/schemas/ParameterRanges"
        TrainingJobEarlyStoppingType:
          $ref: "#/components/schemas/TrainingJobEarlyStoppingType"
      description: Configures a hyperparameter tuning job.
    HyperParameterTrainingJobDefinition:
      type: object
      required:
        - AlgorithmSpecification
        - RoleArn
        - OutputDataConfig
        - ResourceConfig
        - StoppingCondition
      properties:
        StaticHyperParameters:
          $ref: "#/components/schemas/HyperParameters"
        AlgorithmSpecification:
          $ref: "#/components/schemas/HyperParameterAlgorithmSpecification"
        RoleArn:
          $ref: "#/components/schemas/RoleArn"
        InputDataConfig:
          $ref: "#/components/schemas/InputDataConfig"
        VpcConfig:
          $ref: "#/components/schemas/VpcConfig"
        OutputDataConfig:
          $ref: "#/components/schemas/OutputDataConfig"
        ResourceConfig:
          $ref: "#/components/schemas/ResourceConfig"
        StoppingCondition:
          $ref: "#/components/schemas/StoppingCondition"
        EnableNetworkIsolation:
          $ref: "#/components/schemas/Boolean"
        EnableInterContainerTrafficEncryption:
          $ref: "#/components/schemas/Boolean"
        EnableManagedSpotTraining:
          $ref: "#/components/schemas/Boolean"
        CheckpointConfig:
          $ref: "#/components/schemas/CheckpointConfig"
      description: Defines the training jobs launched by a hyperparameter tuning job.
    HyperParameterTuningJobWarmStartConfig:
      type: object
      required:
        - ParentHyperParameterTuningJobs
        - WarmStartType
      properties:
        ParentHyperParameterTuningJobs:
          $ref: "#/components/schemas/ParentHyperParameterTuningJobs"
        WarmStartType:
          $ref: "#/components/schemas/HyperParameterTuningJobWarmStartType"
      description: <p>Specifies the configuration for a hyperparameter tuning job that uses
        one or more previous hyperparameter tuning jobs as a starting point. The
        results of previous tuning jobs are used to inform which combinations of
        hyperparameters to search over in the new tuning job.</p> <p>All
        training jobs launched by the new hyperparameter tuning job are
        evaluated by using the objective metric, and the training job that
        performs the best is compared to the best training jobs from the parent
        tuning jobs. From these, the training job that performs the best as
        measured by the objective metric is returned as the overall best
        training job.</p> <note> <p>All training jobs launched by parent
        hyperparameter tuning jobs and the new hyperparameter tuning jobs count
        against the limit of training jobs for the tuning job.</p> </note>
    HyperParameterTuningJobArn:
      type: string
      pattern: arn:aws[a-z\-]*:sagemaker:[a-z0-9\-]*:[0-9]{12}:hyper-parameter-tuning-job/.*
      maxLength: 256
    LabelingJobName:
      type: string
      pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9])*
      minLength: 1
      maxLength: 63
    LabelAttributeName:
      type: string
      pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9])*
      minLength: 1
      maxLength: 127
    LabelingJobInputConfig:
      type: object
      required:
        - DataSource
      properties:
        DataSource:
          $ref: "#/components/schemas/LabelingJobDataSource"
        DataAttributes:
          $ref: "#/components/schemas/LabelingJobDataAttributes"
      description: Input configuration information for a labeling job.
    LabelingJobOutputConfig:
      type: object
      required:
        - S3OutputPath
      properties:
        S3OutputPath:
          $ref: "#/components/schemas/S3Uri"
        KmsKeyId:
          $ref: "#/components/schemas/KmsKeyId"
      description: Output configuration information for a labeling job.
    LabelingJobStoppingConditions:
      type: object
      properties:
        MaxHumanLabeledObjectCount:
          $ref: "#/components/schemas/MaxHumanLabeledObjectCount"
        MaxPercentageOfInputDatasetLabeled:
          $ref: "#/components/schemas/MaxPercentageOfInputDatasetLabeled"
      description: A set of conditions for stopping a labeling job. If any of the
        conditions are met, the job is automatically stopped. You can use these
        conditions to control the cost of data labeling.
    LabelingJobAlgorithmsConfig:
      type: object
      required:
        - LabelingJobAlgorithmSpecificationArn
      properties:
        LabelingJobAlgorithmSpecificationArn:
          $ref: "#/components/schemas/LabelingJobAlgorithmSpecificationArn"
        InitialActiveLearningModelArn:
          $ref: "#/components/schemas/ModelArn"
        LabelingJobResourceConfig:
          $ref: "#/components/schemas/LabelingJobResourceConfig"
      description: Provides configuration information for auto-labeling of your data
        objects. A <code>LabelingJobAlgorithmsConfig</code> object must be
        supplied in order to use auto-labeling.
    HumanTaskConfig:
      type: object
      required:
        - WorkteamArn
        - UiConfig
        - PreHumanTaskLambdaArn
        - TaskTitle
        - TaskDescription
        - NumberOfHumanWorkersPerDataObject
        - TaskTimeLimitInSeconds
        - AnnotationConsolidationConfig
      properties:
        WorkteamArn:
          $ref: "#/components/schemas/WorkteamArn"
        UiConfig:
          $ref: "#/components/schemas/UiConfig"
        PreHumanTaskLambdaArn:
          $ref: "#/components/schemas/LambdaFunctionArn"
        TaskKeywords:
          $ref: "#/components/schemas/TaskKeywords"
        TaskTitle:
          $ref: "#/components/schemas/TaskTitle"
        TaskDescription:
          $ref: "#/components/schemas/TaskDescription"
        NumberOfHumanWorkersPerDataObject:
          $ref: "#/components/schemas/NumberOfHumanWorkersPerDataObject"
        TaskTimeLimitInSeconds:
          $ref: "#/components/schemas/TaskTimeLimitInSeconds"
        TaskAvailabilityLifetimeInSeconds:
          $ref: "#/components/schemas/TaskAvailabilityLifetimeInSeconds"
        MaxConcurrentTaskCount:
          $ref: "#/components/schemas/MaxConcurrentTaskCount"
        AnnotationConsolidationConfig:
          $ref: "#/components/schemas/AnnotationConsolidationConfig"
        PublicWorkforceTaskPrice:
          $ref: "#/components/schemas/PublicWorkforceTaskPrice"
      description: Information required for human workers to complete a labeling task.
    LabelingJobArn:
      type: string
      pattern: arn:aws[a-z\-]*:sagemaker:[a-z0-9\-]*:[0-9]{12}:labeling-job/.*
      maxLength: 2048
    ModelName:
      type: string
      pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9])*
      maxLength: 63
    VpcConfig:
      type: object
      required:
        - SecurityGroupIds
        - Subnets
      properties:
        SecurityGroupIds:
          $ref: "#/components/schemas/VpcSecurityGroupIds"
        Subnets:
          $ref: "#/components/schemas/Subnets"
      description: 'Specifies a VPC that your training jobs and hosted models have access
        to. Control access to and from your training and model containers by
        configuring the VPC. For more information, see <a
        href="https://docs.aws.amazon.com/sagemaker/latest/dg/host-vpc.html">Protect
        Endpoints by Using an Amazon Virtual Private Cloud</a> and <a
        href="https://docs.aws.amazon.com/sagemaker/latest/dg/train-vpc.html">Protect
        Training Jobs by Using an Amazon Virtual Private Cloud</a>. '
    ModelArn:
      type: string
      pattern: arn:aws[a-z\-]*:sagemaker:[a-z0-9\-]*:[0-9]{12}:model/.*
      minLength: 20
      maxLength: 2048
    ModelPackageValidationSpecification:
      type: object
      required:
        - ValidationRole
        - ValidationProfiles
      properties:
        ValidationRole:
          $ref: "#/components/schemas/RoleArn"
        ValidationProfiles:
          $ref: "#/components/schemas/ModelPackageValidationProfiles"
      description: Specifies batch transform jobs that Amazon SageMaker runs to validate
        your model package.
    SourceAlgorithmSpecification:
      type: object
      required:
        - SourceAlgorithms
      properties:
        SourceAlgorithms:
          $ref: "#/components/schemas/SourceAlgorithmList"
      description: A list of algorithms that were used to create a model package.
    ModelPackageArn:
      type: string
      pattern: arn:aws[a-z\-]*:sagemaker:[a-z0-9\-]*:[0-9]{12}:model-package/.*
      minLength: 1
      maxLength: 2048
    NotebookInstanceName:
      type: string
      pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9])*
      maxLength: 63
    InstanceType:
      type: string
      enum:
        - ml.t2.medium
        - ml.t2.large
        - ml.t2.xlarge
        - ml.t2.2xlarge
        - ml.t3.medium
        - ml.t3.large
        - ml.t3.xlarge
        - ml.t3.2xlarge
        - ml.m4.xlarge
        - ml.m4.2xlarge
        - ml.m4.4xlarge
        - ml.m4.10xlarge
        - ml.m4.16xlarge
        - ml.m5.xlarge
        - ml.m5.2xlarge
        - ml.m5.4xlarge
        - ml.m5.12xlarge
        - ml.m5.24xlarge
        - ml.c4.xlarge
        - ml.c4.2xlarge
        - ml.c4.4xlarge
        - ml.c4.8xlarge
        - ml.c5.xlarge
        - ml.c5.2xlarge
        - ml.c5.4xlarge
        - ml.c5.9xlarge
        - ml.c5.18xlarge
        - ml.c5d.xlarge
        - ml.c5d.2xlarge
        - ml.c5d.4xlarge
        - ml.c5d.9xlarge
        - ml.c5d.18xlarge
        - ml.p2.xlarge
        - ml.p2.8xlarge
        - ml.p2.16xlarge
        - ml.p3.2xlarge
        - ml.p3.8xlarge
        - ml.p3.16xlarge
    SubnetId:
      type: string
      pattern: "[-0-9a-zA-Z]+"
      maxLength: 32
    SecurityGroupIds:
      type: array
      items:
        $ref: "#/components/schemas/SecurityGroupId"
      maxItems: 5
    NotebookInstanceLifecycleConfigName:
      type: string
      pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9])*
      maxLength: 63
    DirectInternetAccess:
      type: string
      enum:
        - Enabled
        - Disabled
    NotebookInstanceVolumeSizeInGB:
      type: integer
      minimum: 5
      maximum: 16384
    NotebookInstanceAcceleratorTypes:
      type: array
      items:
        $ref: "#/components/schemas/NotebookInstanceAcceleratorType"
    RootAccess:
      type: string
      enum:
        - Enabled
        - Disabled
    NotebookInstanceLifecycleConfigList:
      type: array
      items:
        $ref: "#/components/schemas/NotebookInstanceLifecycleHook"
      maxItems: 1
    NotebookInstanceLifecycleConfigArn:
      type: string
      maxLength: 256
    NotebookInstanceArn:
      type: string
      maxLength: 256
    SessionExpirationDurationInSeconds:
      type: integer
      minimum: 1800
      maximum: 43200
    NotebookInstanceUrl:
      type: string
    TrainingJobName:
      type: string
      pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9])*
      minLength: 1
      maxLength: 63
    HyperParameters:
      type: object
      minProperties: 0
      maxProperties: 100
      additionalProperties:
        $ref: "#/components/schemas/ParameterValue"
    InputDataConfig:
      type: array
      items:
        $ref: "#/components/schemas/Channel"
      minItems: 1
      maxItems: 20
    OutputDataConfig:
      type: object
      required:
        - S3OutputPath
      properties:
        KmsKeyId:
          $ref: "#/components/schemas/KmsKeyId"
        S3OutputPath:
          $ref: "#/components/schemas/S3Uri"
      description: Provides information about how to store model training results (model
        artifacts).
    ResourceConfig:
      type: object
      required:
        - InstanceType
        - InstanceCount
        - VolumeSizeInGB
      properties:
        InstanceType:
          $ref: "#/components/schemas/TrainingInstanceType"
        InstanceCount:
          $ref: "#/components/schemas/TrainingInstanceCount"
        VolumeSizeInGB:
          $ref: "#/components/schemas/VolumeSizeInGB"
        VolumeKmsKeyId:
          $ref: "#/components/schemas/KmsKeyId"
      description: "Describes the resources, including ML compute instances and ML storage
        volumes, to use for model training. "
    TrainingJobArn:
      type: string
      pattern: arn:aws[a-z\-]*:sagemaker:[a-z0-9\-]*:[0-9]{12}:training-job/.*
      maxLength: 256
    TransformJobName:
      type: string
      pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9])*
      minLength: 1
      maxLength: 63
    MaxConcurrentTransforms:
      type: integer
      minimum: 0
    MaxPayloadInMB:
      type: integer
      minimum: 0
    TransformEnvironmentMap:
      type: object
      maxProperties: 16
      additionalProperties:
        $ref: "#/components/schemas/TransformEnvironmentValue"
    TransformInput:
      type: object
      required:
        - DataSource
      properties:
        DataSource:
          $ref: "#/components/schemas/TransformDataSource"
        ContentType:
          $ref: "#/components/schemas/ContentType"
        CompressionType:
          $ref: "#/components/schemas/CompressionType"
        SplitType:
          $ref: "#/components/schemas/SplitType"
      description: Describes the input source of a transform job and the way the transform
        job consumes it.
    TransformOutput:
      type: object
      required:
        - S3OutputPath
      properties:
        S3OutputPath:
          $ref: "#/components/schemas/S3Uri"
        Accept:
          $ref: "#/components/schemas/Accept"
        AssembleWith:
          $ref: "#/components/schemas/AssemblyType"
        KmsKeyId:
          $ref: "#/components/schemas/KmsKeyId"
      description: Describes the results of a transform job.
    TransformResources:
      type: object
      required:
        - InstanceType
        - InstanceCount
      properties:
        InstanceType:
          $ref: "#/components/schemas/TransformInstanceType"
        InstanceCount:
          $ref: "#/components/schemas/TransformInstanceCount"
        VolumeKmsKeyId:
          $ref: "#/components/schemas/KmsKeyId"
      description: Describes the resources, including ML instance types and ML instance
        count, to use for transform job.
    DataProcessing:
      type: object
      properties:
        InputFilter:
          $ref: "#/components/schemas/JsonPath"
        OutputFilter:
          $ref: "#/components/schemas/JsonPath"
        JoinSource:
          $ref: "#/components/schemas/JoinSource"
      description: The data structure used to specify the data to be used for inference in
        a batch transform job and to associate the data that is relevant to the
        prediction results in the output. The input filter provided allows you
        to exclude input data that is not needed for inference in a batch
        transform job. The output filter provided allows you to include input
        data relevant to interpreting the predictions in the output from the
        job. For more information, see <a
        href="https://docs.aws.amazon.com/sagemaker/latest/dg/batch-transform-data-processing.html">Associate
        Prediction Results with their Corresponding Input Records</a>.
    TransformJobArn:
      type: string
      pattern: arn:aws[a-z\-]*:sagemaker:[a-z0-9\-]*:[0-9]{12}:transform-job/.*
      maxLength: 256
    WorkteamName:
      type: string
      pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9])*
      minLength: 1
      maxLength: 63
    MemberDefinitions:
      type: array
      items:
        $ref: "#/components/schemas/MemberDefinition"
      minItems: 1
      maxItems: 10
    String200:
      type: string
      pattern: .+
      minLength: 1
      maxLength: 200
    NotificationConfiguration:
      type: object
      properties:
        NotificationTopicArn:
          $ref: "#/components/schemas/NotificationTopicArn"
      description: Configures SNS notifications of available or expiring work items for
        work teams.
    WorkteamArn:
      type: string
      pattern: arn:aws[a-z\-]*:sagemaker:[a-z0-9\-]*:[0-9]{12}:workteam/.*
      maxLength: 256
    DataInputConfig:
      type: string
      pattern: "[\\S\\s]+"
      minLength: 1
      maxLength: 1024
    JsonPath:
      type: string
      minLength: 0
      maxLength: 63
    JoinSource:
      type: string
      enum:
        - Input
        - None
    S3DataSource:
      type: object
      required:
        - S3DataType
        - S3Uri
      properties:
        S3DataType:
          $ref: "#/components/schemas/S3DataType"
        S3Uri:
          $ref: "#/components/schemas/S3Uri"
        S3DataDistributionType:
          $ref: "#/components/schemas/S3DataDistribution"
        AttributeNames:
          $ref: "#/components/schemas/AttributeNames"
      description: Describes the S3 data source.
    FileSystemDataSource:
      type: object
      required:
        - FileSystemId
        - FileSystemAccessMode
        - FileSystemType
        - DirectoryPath
      properties:
        FileSystemId:
          $ref: "#/components/schemas/FileSystemId"
        FileSystemAccessMode:
          $ref: "#/components/schemas/FileSystemAccessMode"
        FileSystemType:
          $ref: "#/components/schemas/FileSystemType"
        DirectoryPath:
          $ref: "#/components/schemas/DirectoryPath"
      description: Specifies a file system data source for a channel.
    TagKeyList:
      type: array
      items:
        $ref: "#/components/schemas/TagKey"
      minItems: 1
      maxItems: 50
    Success:
      type: boolean
    DeployedImage:
      type: object
      properties:
        SpecifiedImage:
          $ref: "#/components/schemas/Image"
        ResolvedImage:
          $ref: "#/components/schemas/Image"
        ResolutionTime:
          $ref: "#/components/schemas/Timestamp"
      description: <p>Gets the Amazon EC2 Container Registry path of the docker image of
        the model that is hosted in this <a>ProductionVariant</a>.</p> <p>If you
        used the <code>registry/repository[:tag]</code> form to specify the
        image path of the primary container when you created the model hosted in
        this <code>ProductionVariant</code>, the path resolves to a path of the
        form <code>registry/repository[@digest]</code>. A digest is a hash value
        that identifies a specific version of an image. For information about
        Amazon ECR paths, see <a
        href="https://docs.aws.amazon.com/AmazonECR/latest/userguide/docker-pull-ecr-image.html">Pulling
        an Image</a> in the <i>Amazon ECR User Guide</i>.</p>
    DeployedImages:
      type: array
      items:
        $ref: "#/components/schemas/DeployedImage"
    ProductId:
      type: string
      pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9])*$
      maxLength: 256
    FailureReason:
      type: string
      maxLength: 1024
    ModelArtifacts:
      type: object
      required:
        - S3ModelArtifacts
      properties:
        S3ModelArtifacts:
          $ref: "#/components/schemas/S3Uri"
      description: "Provides information about the location that is configured for storing
        model artifacts. "
    ProductionVariantSummaryList:
      type: array
      items:
        $ref: "#/components/schemas/ProductionVariantSummary"
      minItems: 1
    EndpointStatus:
      type: string
      enum:
        - OutOfService
        - Creating
        - Updating
        - SystemUpdating
        - RollingBack
        - InService
        - Deleting
        - Failed
    HyperParameterTuningJobStatus:
      type: string
      enum:
        - Completed
        - InProgress
        - Failed
        - Stopped
        - Stopping
    TrainingJobStatusCounters:
      type: object
      properties:
        Completed:
          $ref: "#/components/schemas/TrainingJobStatusCounter"
        InProgress:
          $ref: "#/components/schemas/TrainingJobStatusCounter"
        RetryableError:
          $ref: "#/components/schemas/TrainingJobStatusCounter"
        NonRetryableError:
          $ref: "#/components/schemas/TrainingJobStatusCounter"
        Stopped:
          $ref: "#/components/schemas/TrainingJobStatusCounter"
      description: The numbers of training jobs launched by a hyperparameter tuning job,
        categorized by status.
    ObjectiveStatusCounters:
      type: object
      properties:
        Succeeded:
          $ref: "#/components/schemas/ObjectiveStatusCounter"
        Pending:
          $ref: "#/components/schemas/ObjectiveStatusCounter"
        Failed:
          $ref: "#/components/schemas/ObjectiveStatusCounter"
      description: Specifies the number of training jobs that this hyperparameter tuning
        job launched, categorized by the status of their objective metric. The
        objective metric status shows whether the final objective metric for the
        training job has been evaluated by the tuning job and used in the
        hyperparameter tuning process.
    HyperParameterTrainingJobSummary:
      type: object
      required:
        - TrainingJobName
        - TrainingJobArn
        - CreationTime
        - TrainingJobStatus
        - TunedHyperParameters
      properties:
        TrainingJobName:
          $ref: "#/components/schemas/TrainingJobName"
        TrainingJobArn:
          $ref: "#/components/schemas/TrainingJobArn"
        TuningJobName:
          $ref: "#/components/schemas/HyperParameterTuningJobName"
        CreationTime:
          $ref: "#/components/schemas/Timestamp"
        TrainingStartTime:
          $ref: "#/components/schemas/Timestamp"
        TrainingEndTime:
          $ref: "#/components/schemas/Timestamp"
        TrainingJobStatus:
          $ref: "#/components/schemas/TrainingJobStatus"
        TunedHyperParameters:
          $ref: "#/components/schemas/HyperParameters"
        FailureReason:
          $ref: "#/components/schemas/FailureReason"
        FinalHyperParameterTuningJobObjectiveMetric:
          $ref: "#/components/schemas/FinalHyperParameterTuningJobObjectiveMetric"
        ObjectiveStatus:
          $ref: "#/components/schemas/ObjectiveStatus"
      description: Specifies summary information about a training job.
    LabelingJobStatus:
      type: string
      enum:
        - InProgress
        - Completed
        - Failed
        - Stopping
        - Stopped
    LabelCounters:
      type: object
      properties:
        TotalLabeled:
          $ref: "#/components/schemas/LabelCounter"
        HumanLabeled:
          $ref: "#/components/schemas/LabelCounter"
        MachineLabeled:
          $ref: "#/components/schemas/LabelCounter"
        FailedNonRetryableError:
          $ref: "#/components/schemas/LabelCounter"
        Unlabeled:
          $ref: "#/components/schemas/LabelCounter"
      description: Provides a breakdown of the number of objects labeled.
    JobReferenceCode:
      type: string
      pattern: .+
      minLength: 1
    LabelingJobOutput:
      type: object
      required:
        - OutputDatasetS3Uri
      properties:
        OutputDatasetS3Uri:
          $ref: "#/components/schemas/S3Uri"
        FinalActiveLearningModelArn:
          $ref: "#/components/schemas/ModelArn"
      description: "Specifies the location of the output produced by the labeling job. "
    ModelPackageStatus:
      type: string
      enum:
        - Pending
        - InProgress
        - Completed
        - Failed
        - Deleting
    ModelPackageStatusDetails:
      type: object
      required:
        - ValidationStatuses
      properties:
        ValidationStatuses:
          $ref: "#/components/schemas/ModelPackageStatusItemList"
        ImageScanStatuses:
          $ref: "#/components/schemas/ModelPackageStatusItemList"
      description: Specifies the validation and image scan statuses of the model package.
    NotebookInstanceStatus:
      type: string
      enum:
        - Pending
        - InService
        - Stopping
        - Stopped
        - Failed
        - Deleting
        - Updating
    NetworkInterfaceId:
      type: string
    SubscribedWorkteam:
      type: object
      required:
        - WorkteamArn
      properties:
        WorkteamArn:
          $ref: "#/components/schemas/WorkteamArn"
        MarketplaceTitle:
          $ref: "#/components/schemas/String200"
        SellerName:
          $ref: "#/components/schemas/String"
        MarketplaceDescription:
          $ref: "#/components/schemas/String200"
        ListingId:
          $ref: "#/components/schemas/String"
      description: Describes a work team of a vendor that does the a labelling job.
    TrainingJobStatus:
      type: string
      enum:
        - InProgress
        - Completed
        - Failed
        - Stopping
        - Stopped
    SecondaryStatus:
      type: string
      enum:
        - Starting
        - LaunchingMLInstances
        - PreparingTrainingStack
        - Downloading
        - DownloadingTrainingImage
        - Training
        - Uploading
        - Stopping
        - Stopped
        - MaxRuntimeExceeded
        - Completed
        - Failed
        - Interrupted
        - MaxWaitTimeExceeded
    SecondaryStatusTransitions:
      type: array
      items:
        $ref: "#/components/schemas/SecondaryStatusTransition"
    FinalMetricDataList:
      type: array
      items:
        $ref: "#/components/schemas/MetricData"
      minItems: 0
      maxItems: 40
    TrainingTimeInSeconds:
      type: integer
      minimum: 1
    TransformJobStatus:
      type: string
      enum:
        - InProgress
        - Completed
        - Failed
        - Stopping
        - Stopped
    Workteam:
      type: object
      required:
        - WorkteamName
        - MemberDefinitions
        - WorkteamArn
        - Description
      properties:
        WorkteamName:
          $ref: "#/components/schemas/WorkteamName"
        MemberDefinitions:
          $ref: "#/components/schemas/MemberDefinitions"
        WorkteamArn:
          $ref: "#/components/schemas/WorkteamArn"
        ProductListingIds:
          $ref: "#/components/schemas/ProductListings"
        Description:
          $ref: "#/components/schemas/String200"
        SubDomain:
          $ref: "#/components/schemas/String"
        CreateDate:
          $ref: "#/components/schemas/Timestamp"
        LastUpdatedDate:
          $ref: "#/components/schemas/Timestamp"
        NotificationConfiguration:
          $ref: "#/components/schemas/NotificationConfiguration"
      description: Provides details about a labeling work team.
    VariantName:
      type: string
      pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9])*
      maxLength: 63
    VariantWeight:
      type: number
      format: float
      minimum: 0
    TaskCount:
      type: integer
      minimum: 1
    DesiredWeightAndCapacity:
      type: object
      required:
        - VariantName
      properties:
        VariantName:
          $ref: "#/components/schemas/VariantName"
        DesiredWeight:
          $ref: "#/components/schemas/VariantWeight"
        DesiredInstanceCount:
          $ref: "#/components/schemas/TaskCount"
      description: Specifies weight and capacity values for a production variant.
    DesiredWeightAndCapacityList:
      type: array
      items:
        $ref: "#/components/schemas/DesiredWeightAndCapacity"
      minItems: 1
    DetailedModelPackageStatus:
      type: string
      enum:
        - NotStarted
        - InProgress
        - Completed
        - Failed
    DisassociateAdditionalCodeRepositories:
      type: boolean
    DisassociateDefaultCodeRepository:
      type: boolean
    DisassociateNotebookInstanceAcceleratorTypes:
      type: boolean
    DisassociateNotebookInstanceLifecycleConfig:
      type: boolean
    Dollars:
      type: integer
      minimum: 0
      maximum: 1
    EndpointConfigNameContains:
      type: string
      pattern: "[a-zA-Z0-9-]+"
      maxLength: 63
    EndpointConfigSortKey:
      type: string
      enum:
        - Name
        - CreationTime
    EndpointConfigSummary:
      type: object
      required:
        - EndpointConfigName
        - EndpointConfigArn
        - CreationTime
      properties:
        EndpointConfigName:
          $ref: "#/components/schemas/EndpointConfigName"
        EndpointConfigArn:
          $ref: "#/components/schemas/EndpointConfigArn"
        CreationTime:
          $ref: "#/components/schemas/Timestamp"
      description: Provides summary information for an endpoint configuration.
    EndpointConfigSummaryList:
      type: array
      items:
        $ref: "#/components/schemas/EndpointConfigSummary"
    EndpointNameContains:
      type: string
      pattern: "[a-zA-Z0-9-]+"
      maxLength: 63
    EndpointSortKey:
      type: string
      enum:
        - Name
        - CreationTime
        - Status
    EndpointSummary:
      type: object
      required:
        - EndpointName
        - EndpointArn
        - CreationTime
        - LastModifiedTime
        - EndpointStatus
      properties:
        EndpointName:
          $ref: "#/components/schemas/EndpointName"
        EndpointArn:
          $ref: "#/components/schemas/EndpointArn"
        CreationTime:
          $ref: "#/components/schemas/Timestamp"
        LastModifiedTime:
          $ref: "#/components/schemas/Timestamp"
        EndpointStatus:
          $ref: "#/components/schemas/EndpointStatus"
      description: Provides summary information for an endpoint.
    EndpointSummaryList:
      type: array
      items:
        $ref: "#/components/schemas/EndpointSummary"
    EnvironmentKey:
      type: string
      pattern: "[a-zA-Z_][a-zA-Z0-9_]*"
      maxLength: 1024
    EnvironmentValue:
      type: string
      pattern: "[\\S\\s]*"
      maxLength: 1024
    FileSystemAccessMode:
      type: string
      enum:
        - rw
        - ro
    FileSystemId:
      type: string
      pattern: .*
      minLength: 11
    FileSystemType:
      type: string
      enum:
        - EFS
        - FSxLustre
    ResourcePropertyName:
      type: string
      pattern: .+
      minLength: 1
      maxLength: 255
    Operator:
      type: string
      enum:
        - Equals
        - NotEquals
        - GreaterThan
        - GreaterThanOrEqualTo
        - LessThan
        - LessThanOrEqualTo
        - Contains
    FilterValue:
      type: string
      pattern: .+
      minLength: 1
      maxLength: 1024
    Filter:
      type: object
      required:
        - Name
      properties:
        Name:
          $ref: "#/components/schemas/ResourcePropertyName"
        Operator:
          $ref: "#/components/schemas/Operator"
        Value:
          $ref: "#/components/schemas/FilterValue"
      description: "<p>A conditional statement for a search expression that includes a
        Boolean operator, a resource property, and a value.</p> <p>If you don't
        specify an <code>Operator</code> and a <code>Value</code>, the filter
        searches for only the specified property. For example, defining a
        <code>Filter</code> for the <code>FailureReason</code> for the
        <code>TrainingJob</code> <code>Resource</code> searches for training job
        objects that have a value in the <code>FailureReason</code> field.</p>
        <p>If you specify a <code>Value</code>, but not an
        <code>Operator</code>, Amazon SageMaker uses the equals operator as the
        default.</p> <p>In search, there are several property types:</p> <dl>
        <dt>Metrics</dt> <dd> <p>To define a metric filter, enter a value using
        the form <code>\"Metrics.&lt;name&gt;\"</code>, where
        <code>&lt;name&gt;</code> is a metric name. For example, the following
        filter searches for training jobs with an <code>\"accuracy\"</code>
        metric greater than <code>\"0.9\"</code>:</p> <p> <code>{</code> </p>
        <p> <code>\"Name\": \"Metrics.accuracy\",</code> </p> <p>
        <code>\"Operator\": \"GREATER_THAN\",</code> </p> <p> <code>\"Value\":
        \"0.9\"</code> </p> <p> <code>}</code> </p> </dd>
        <dt>HyperParameters</dt> <dd> <p>To define a hyperparameter filter,
        enter a value with the form
        <code>\"HyperParameters.&lt;name&gt;\"</code>. Decimal hyperparameter
        values are treated as a decimal in a comparison if the specified
        <code>Value</code> is also a decimal value. If the specified
        <code>Value</code> is an integer, the decimal hyperparameter values are
        treated as integers. For example, the following filter is satisfied by
        training jobs with a <code>\"learning_rate\"</code> hyperparameter that
        is less than <code>\"0.5\"</code>:</p> <p> <code> {</code> </p> <p>
        <code> \"Name\": \"HyperParameters.learning_rate\",</code> </p> <p>
        <code> \"Operator\": \"LESS_THAN\",</code> </p> <p> <code> \"Value\":
        \"0.5\"</code> </p> <p> <code> }</code> </p> </dd> <dt>Tags</dt> <dd>
        <p>To define a tag filter, enter a value with the form
        <code>\"Tags.&lt;key&gt;\"</code>.</p> </dd> </dl>"
    FilterList:
      type: array
      items:
        $ref: "#/components/schemas/Filter"
      minItems: 1
      maxItems: 20
    HyperParameterTuningJobObjectiveType:
      type: string
      enum:
        - Maximize
        - Minimize
    MetricName:
      type: string
      pattern: .+
      minLength: 1
      maxLength: 255
    MetricValue:
      type: number
      format: float
    FinalHyperParameterTuningJobObjectiveMetric:
      type: object
      required:
        - MetricName
        - Value
      properties:
        Type:
          $ref: "#/components/schemas/HyperParameterTuningJobObjectiveType"
        MetricName:
          $ref: "#/components/schemas/MetricName"
        Value:
          $ref: "#/components/schemas/MetricValue"
      description: Shows the final value for the objective metric for a training job that
        was launched by a hyperparameter tuning job. You define the objective
        metric in the <code>HyperParameterTuningJobObjective</code> parameter of
        <a>HyperParameterTuningJobConfig</a>.
    MetricData:
      type: object
      properties:
        MetricName:
          $ref: "#/components/schemas/MetricName"
        Value:
          $ref: "#/components/schemas/Float"
        Timestamp:
          $ref: "#/components/schemas/Timestamp"
      description: The name, value, and date and time of a metric that was emitted to
        Amazon CloudWatch.
    Float:
      type: number
      format: float
    Framework:
      type: string
      enum:
        - TENSORFLOW
        - MXNET
        - ONNX
        - PYTORCH
        - XGBOOST
    ResourceType:
      type: string
      enum:
        - TrainingJob
    SuggestionQuery:
      type: object
      properties:
        PropertyNameQuery:
          $ref: "#/components/schemas/PropertyNameQuery"
      description: Limits the property names that are included in the response.
    PropertyNameSuggestionList:
      type: array
      items:
        $ref: "#/components/schemas/PropertyNameSuggestion"
    GitConfigUrl:
      type: string
      pattern: ^https://([^/]+)/?(.*)$
    SecretArn:
      type: string
      pattern: arn:aws[a-z\-]*:secretsmanager:[a-z0-9\-]*:[0-9]{12}:secret:.*
      minLength: 1
      maxLength: 2048
    GitConfigForUpdate:
      type: object
      properties:
        SecretArn:
          $ref: "#/components/schemas/SecretArn"
      description: Specifies configuration details for a Git repository when the repository
        is updated.
    UiConfig:
      type: object
      required:
        - UiTemplateS3Uri
      properties:
        UiTemplateS3Uri:
          $ref: "#/components/schemas/S3Uri"
      description: "Provided configuration information for the worker UI for a labeling
        job. "
    TaskKeywords:
      type: array
      items:
        $ref: "#/components/schemas/TaskKeyword"
      minItems: 1
      maxItems: 5
    TaskTitle:
      type: string
      pattern: ^[\t\n\r -\uD7FF\uE000-\uFFFD]*$
      minLength: 1
      maxLength: 128
    TaskDescription:
      type: string
      pattern: .+
      minLength: 1
      maxLength: 255
    NumberOfHumanWorkersPerDataObject:
      type: integer
      minimum: 1
      maximum: 9
    TaskTimeLimitInSeconds:
      type: integer
      minimum: 30
      maximum: 28800
    TaskAvailabilityLifetimeInSeconds:
      type: integer
      minimum: 1
      maximum: 864000
    MaxConcurrentTaskCount:
      type: integer
      minimum: 1
      maximum: 1000
    PublicWorkforceTaskPrice:
      type: object
      properties:
        AmountInUsd:
          $ref: "#/components/schemas/USD"
      description: <p>Defines the amount of money paid to an Amazon Mechanical Turk worker
        for each task performed. </p> <p>Use one of the following prices for
        bounding box tasks. Prices are in US dollars and should be based on the
        complexity of the task; the longer it takes in your initial testing, the
        more you should offer.</p> <ul> <li> <p>0.036</p> </li> <li>
        <p>0.048</p> </li> <li> <p>0.060</p> </li> <li> <p>0.072</p> </li> <li>
        <p>0.120</p> </li> <li> <p>0.240</p> </li> <li> <p>0.360</p> </li> <li>
        <p>0.480</p> </li> <li> <p>0.600</p> </li> <li> <p>0.720</p> </li> <li>
        <p>0.840</p> </li> <li> <p>0.960</p> </li> <li> <p>1.080</p> </li> <li>
        <p>1.200</p> </li> </ul> <p>Use one of the following prices for image
        classification, text classification, and custom tasks. Prices are in US
        dollars.</p> <ul> <li> <p>0.012</p> </li> <li> <p>0.024</p> </li> <li>
        <p>0.036</p> </li> <li> <p>0.048</p> </li> <li> <p>0.060</p> </li> <li>
        <p>0.072</p> </li> <li> <p>0.120</p> </li> <li> <p>0.240</p> </li> <li>
        <p>0.360</p> </li> <li> <p>0.480</p> </li> <li> <p>0.600</p> </li> <li>
        <p>0.720</p> </li> <li> <p>0.840</p> </li> <li> <p>0.960</p> </li> <li>
        <p>1.080</p> </li> <li> <p>1.200</p> </li> </ul> <p>Use one of the
        following prices for semantic segmentation tasks. Prices are in US
        dollars.</p> <ul> <li> <p>0.840</p> </li> <li> <p>0.960</p> </li> <li>
        <p>1.080</p> </li> <li> <p>1.200</p> </li> </ul>
    HyperParameterAlgorithmSpecification:
      type: object
      required:
        - TrainingInputMode
      properties:
        TrainingImage:
          $ref: "#/components/schemas/AlgorithmImage"
        TrainingInputMode:
          $ref: "#/components/schemas/TrainingInputMode"
        AlgorithmName:
          $ref: "#/components/schemas/ArnOrName"
        MetricDefinitions:
          $ref: "#/components/schemas/MetricDefinitionList"
      description: Specifies which training algorithm to use for training jobs that a
        hyperparameter tuning job launches and the metrics to monitor.
    ParameterName:
      type: string
      pattern: "[\\p{L}\\p{M}\\p{Z}\\p{S}\\p{N}\\p{P}]*"
      maxLength: 256
    ParameterType:
      type: string
      enum:
        - Integer
        - Continuous
        - Categorical
        - FreeText
    ParameterRange:
      type: object
      properties:
        IntegerParameterRangeSpecification:
          $ref: "#/components/schemas/IntegerParameterRangeSpecification"
        ContinuousParameterRangeSpecification:
          $ref: "#/components/schemas/ContinuousParameterRangeSpecification"
        CategoricalParameterRangeSpecification:
          $ref: "#/components/schemas/CategoricalParameterRangeSpecification"
      description: Defines the possible values for categorical, continuous, and integer
        hyperparameters to be used by an algorithm.
    HyperParameterSpecification:
      type: object
      required:
        - Name
        - Type
      properties:
        Name:
          $ref: "#/components/schemas/ParameterName"
        Description:
          $ref: "#/components/schemas/EntityDescription"
        Type:
          $ref: "#/components/schemas/ParameterType"
        Range:
          $ref: "#/components/schemas/ParameterRange"
        IsTunable:
          $ref: "#/components/schemas/Boolean"
        IsRequired:
          $ref: "#/components/schemas/Boolean"
        DefaultValue:
          $ref: "#/components/schemas/ParameterValue"
      description: Defines a hyperparameter to be used by an algorithm.
    HyperParameterSpecifications:
      type: array
      items:
        $ref: "#/components/schemas/HyperParameterSpecification"
      minItems: 0
      maxItems: 100
    HyperParameterTrainingJobSummaries:
      type: array
      items:
        $ref: "#/components/schemas/HyperParameterTrainingJobSummary"
    ObjectiveStatus:
      type: string
      enum:
        - Succeeded
        - Pending
        - Failed
    HyperParameterTuningJobStrategyType:
      type: string
      enum:
        - Bayesian
        - Random
      description: The strategy hyperparameter tuning uses to find the best combination of
        hyperparameters for your model. Currently, the only supported value is
        <code>Bayesian</code>.
    HyperParameterTuningJobObjective:
      type: object
      required:
        - Type
        - MetricName
      properties:
        Type:
          $ref: "#/components/schemas/HyperParameterTuningJobObjectiveType"
        MetricName:
          $ref: "#/components/schemas/MetricName"
      description: Defines the objective metric for a hyperparameter tuning job.
        Hyperparameter tuning uses the value of this metric to evaluate the
        training jobs it launches, and returns the training job that results in
        either the highest or lowest value for this metric, depending on the
        value you specify for the <code>Type</code> parameter.
    ResourceLimits:
      type: object
      required:
        - MaxNumberOfTrainingJobs
        - MaxParallelTrainingJobs
      properties:
        MaxNumberOfTrainingJobs:
          $ref: "#/components/schemas/MaxNumberOfTrainingJobs"
        MaxParallelTrainingJobs:
          $ref: "#/components/schemas/MaxParallelTrainingJobs"
      description: Specifies the maximum number of training jobs and parallel training jobs
        that a hyperparameter tuning job can launch.
    ParameterRanges:
      type: object
      properties:
        IntegerParameterRanges:
          $ref: "#/components/schemas/IntegerParameterRanges"
        ContinuousParameterRanges:
          $ref: "#/components/schemas/ContinuousParameterRanges"
        CategoricalParameterRanges:
          $ref: "#/components/schemas/CategoricalParameterRanges"
      description: <p>Specifies ranges of integer, continuous, and categorical
        hyperparameters that a hyperparameter tuning job searches. The
        hyperparameter tuning job launches training jobs with hyperparameter
        values within these ranges to find the combination of values that result
        in the training job with the best performance as measured by the
        objective metric of the hyperparameter tuning job.</p> <note> <p>You can
        specify a maximum of 20 hyperparameters that a hyperparameter tuning job
        can search over. Every possible value of a categorical parameter range
        counts against this limit.</p> </note>
    TrainingJobEarlyStoppingType:
      type: string
      enum:
        - Off
        - Auto
    HyperParameterTuningJobObjectives:
      type: array
      items:
        $ref: "#/components/schemas/HyperParameterTuningJobObjective"
    HyperParameterTuningJobSortByOptions:
      type: string
      enum:
        - Name
        - Status
        - CreationTime
    HyperParameterTuningJobSummary:
      type: object
      required:
        - HyperParameterTuningJobName
        - HyperParameterTuningJobArn
        - HyperParameterTuningJobStatus
        - Strategy
        - CreationTime
        - TrainingJobStatusCounters
        - ObjectiveStatusCounters
      properties:
        HyperParameterTuningJobName:
          $ref: "#/components/schemas/HyperParameterTuningJobName"
        HyperParameterTuningJobArn:
          $ref: "#/components/schemas/HyperParameterTuningJobArn"
        HyperParameterTuningJobStatus:
          $ref: "#/components/schemas/HyperParameterTuningJobStatus"
        Strategy:
          $ref: "#/components/schemas/HyperParameterTuningJobStrategyType"
        CreationTime:
          $ref: "#/components/schemas/Timestamp"
        HyperParameterTuningEndTime:
          $ref: "#/components/schemas/Timestamp"
        LastModifiedTime:
          $ref: "#/components/schemas/Timestamp"
        TrainingJobStatusCounters:
          $ref: "#/components/schemas/TrainingJobStatusCounters"
        ObjectiveStatusCounters:
          $ref: "#/components/schemas/ObjectiveStatusCounters"
        ResourceLimits:
          $ref: "#/components/schemas/ResourceLimits"
      description: Provides summary information about a hyperparameter tuning job.
    HyperParameterTuningJobSummaries:
      type: array
      items:
        $ref: "#/components/schemas/HyperParameterTuningJobSummary"
    ParentHyperParameterTuningJobs:
      type: array
      items:
        $ref: "#/components/schemas/ParentHyperParameterTuningJob"
      minItems: 1
      maxItems: 5
    HyperParameterTuningJobWarmStartType:
      type: string
      enum:
        - IdenticalDataAndAlgorithm
        - TransferLearning
    ImageDigest:
      type: string
      pattern: ^[Ss][Hh][Aa]256:[0-9a-fA-F]{64}$
      maxLength: 72
    ModelPackageContainerDefinitionList:
      type: array
      items:
        $ref: "#/components/schemas/ModelPackageContainerDefinition"
      minItems: 1
      maxItems: 1
    TransformInstanceTypes:
      type: array
      items:
        $ref: "#/components/schemas/TransformInstanceType"
      minItems: 1
    RealtimeInferenceInstanceTypes:
      type: array
      items:
        $ref: "#/components/schemas/ProductionVariantInstanceType"
    ResponseMIMETypes:
      type: array
      items:
        $ref: "#/components/schemas/ResponseMIMEType"
    IntegerParameterRange:
      type: object
      required:
        - Name
        - MinValue
        - MaxValue
      properties:
        Name:
          $ref: "#/components/schemas/ParameterKey"
        MinValue:
          $ref: "#/components/schemas/ParameterValue"
        MaxValue:
          $ref: "#/components/schemas/ParameterValue"
        ScalingType:
          $ref: "#/components/schemas/HyperParameterScalingType"
      description: For a hyperparameter of the integer type, specifies the range that a
        hyperparameter tuning job searches.
    IntegerParameterRangeSpecification:
      type: object
      required:
        - MinValue
        - MaxValue
      properties:
        MinValue:
          $ref: "#/components/schemas/ParameterValue"
        MaxValue:
          $ref: "#/components/schemas/ParameterValue"
      description: Defines the possible values for an integer hyperparameter.
    IntegerParameterRanges:
      type: array
      items:
        $ref: "#/components/schemas/IntegerParameterRange"
      minItems: 0
      maxItems: 20
    JobReferenceCodeContains:
      type: string
      pattern: .+
      minLength: 1
      maxLength: 255
    LabelCounter:
      type: integer
      minimum: 0
    LabelCountersForWorkteam:
      type: object
      properties:
        HumanLabeled:
          $ref: "#/components/schemas/LabelCounter"
        PendingHuman:
          $ref: "#/components/schemas/LabelCounter"
        Total:
          $ref: "#/components/schemas/LabelCounter"
      description: Provides counts for human-labeled tasks in the labeling job.
    LabelingJobAlgorithmSpecificationArn:
      type: string
      pattern: arn:.*
      maxLength: 2048
    LabelingJobResourceConfig:
      type: object
      properties:
        VolumeKmsKeyId:
          $ref: "#/components/schemas/KmsKeyId"
      description: Provides configuration information for labeling jobs.
    LabelingJobDataAttributes:
      type: object
      properties:
        ContentClassifiers:
          $ref: "#/components/schemas/ContentClassifiers"
      description: Attributes of the data specified by the customer. Use these to describe
        the data to be labeled.
    LabelingJobS3DataSource:
      type: object
      required:
        - ManifestS3Uri
      properties:
        ManifestS3Uri:
          $ref: "#/components/schemas/S3Uri"
      description: The Amazon S3 location of the input data objects.
    LabelingJobDataSource:
      type: object
      required:
        - S3DataSource
      properties:
        S3DataSource:
          $ref: "#/components/schemas/LabelingJobS3DataSource"
      description: Provides information about the location of input data.
    LabelingJobForWorkteamSummary:
      type: object
      required:
        - JobReferenceCode
        - WorkRequesterAccountId
        - CreationTime
      properties:
        LabelingJobName:
          $ref: "#/components/schemas/LabelingJobName"
        JobReferenceCode:
          $ref: "#/components/schemas/JobReferenceCode"
        WorkRequesterAccountId:
          $ref: "#/components/schemas/AccountId"
        CreationTime:
          $ref: "#/components/schemas/Timestamp"
        LabelCounters:
          $ref: "#/components/schemas/LabelCountersForWorkteam"
        NumberOfHumanWorkersPerDataObject:
          $ref: "#/components/schemas/NumberOfHumanWorkersPerDataObject"
      description: Provides summary information for a work team.
    LabelingJobForWorkteamSummaryList:
      type: array
      items:
        $ref: "#/components/schemas/LabelingJobForWorkteamSummary"
    MaxHumanLabeledObjectCount:
      type: integer
      minimum: 1
    MaxPercentageOfInputDatasetLabeled:
      type: integer
      minimum: 1
      maximum: 100
    LabelingJobSummary:
      type: object
      required:
        - LabelingJobName
        - LabelingJobArn
        - CreationTime
        - LastModifiedTime
        - LabelingJobStatus
        - LabelCounters
        - WorkteamArn
        - PreHumanTaskLambdaArn
      properties:
        LabelingJobName:
          $ref: "#/components/schemas/LabelingJobName"
        LabelingJobArn:
          $ref: "#/components/schemas/LabelingJobArn"
        CreationTime:
          $ref: "#/components/schemas/Timestamp"
        LastModifiedTime:
          $ref: "#/components/schemas/Timestamp"
        LabelingJobStatus:
          $ref: "#/components/schemas/LabelingJobStatus"
        LabelCounters:
          $ref: "#/components/schemas/LabelCounters"
        WorkteamArn:
          $ref: "#/components/schemas/WorkteamArn"
        PreHumanTaskLambdaArn:
          $ref: "#/components/schemas/LambdaFunctionArn"
        AnnotationConsolidationLambdaArn:
          $ref: "#/components/schemas/LambdaFunctionArn"
        FailureReason:
          $ref: "#/components/schemas/FailureReason"
        LabelingJobOutput:
          $ref: "#/components/schemas/LabelingJobOutput"
        InputConfig:
          $ref: "#/components/schemas/LabelingJobInputConfig"
      description: Provides summary information about a labeling job.
    LabelingJobSummaryList:
      type: array
      items:
        $ref: "#/components/schemas/LabelingJobSummary"
    MaxResults:
      type: integer
      minimum: 1
      maximum: 100
    NameContains:
      type: string
      pattern: "[a-zA-Z0-9\\-]+"
      maxLength: 63
    NextToken:
      type: string
      pattern: .*
      maxLength: 8192
    SortOrder:
      type: string
      enum:
        - Ascending
        - Descending
    ListCompilationJobsSortBy:
      type: string
      enum:
        - Name
        - CreationTime
        - Status
    OrderKey:
      type: string
      enum:
        - Ascending
        - Descending
    PaginationToken:
      type: string
      pattern: .*
      maxLength: 8192
    ListLabelingJobsForWorkteamSortByOptions:
      type: string
      enum:
        - CreationTime
    SortBy:
      type: string
      enum:
        - Name
        - CreationTime
        - Status
    ModelPackageSortBy:
      type: string
      enum:
        - Name
        - CreationTime
    ModelPackageSummaryList:
      type: array
      items:
        $ref: "#/components/schemas/ModelPackageSummary"
    ModelSortKey:
      type: string
      enum:
        - Name
        - CreationTime
    ModelNameContains:
      type: string
      pattern: "[a-zA-Z0-9-]+"
      maxLength: 63
    ModelSummaryList:
      type: array
      items:
        $ref: "#/components/schemas/ModelSummary"
    NotebookInstanceLifecycleConfigSortKey:
      type: string
      enum:
        - Name
        - CreationTime
        - LastModifiedTime
    NotebookInstanceLifecycleConfigSortOrder:
      type: string
      enum:
        - Ascending
        - Descending
    NotebookInstanceLifecycleConfigNameContains:
      type: string
      pattern: "[a-zA-Z0-9-]+"
      maxLength: 63
    NotebookInstanceLifecycleConfigSummaryList:
      type: array
      items:
        $ref: "#/components/schemas/NotebookInstanceLifecycleConfigSummary"
    NotebookInstanceSortKey:
      type: string
      enum:
        - Name
        - CreationTime
        - Status
    NotebookInstanceSortOrder:
      type: string
      enum:
        - Ascending
        - Descending
    NotebookInstanceNameContains:
      type: string
      pattern: "[a-zA-Z0-9-]+"
      maxLength: 63
    NotebookInstanceSummaryList:
      type: array
      items:
        $ref: "#/components/schemas/NotebookInstanceSummary"
    SubscribedWorkteams:
      type: array
      items:
        $ref: "#/components/schemas/SubscribedWorkteam"
    ListTagsMaxResults:
      type: integer
      minimum: 50
    TrainingJobSortByOptions:
      type: string
      enum:
        - Name
        - CreationTime
        - Status
        - FinalObjectiveMetricValue
    TrainingJobSummaries:
      type: array
      items:
        $ref: "#/components/schemas/TrainingJobSummary"
    TransformJobSummaries:
      type: array
      items:
        $ref: "#/components/schemas/TransformJobSummary"
    ListWorkteamsSortByOptions:
      type: string
      enum:
        - Name
        - CreateDate
    Workteams:
      type: array
      items:
        $ref: "#/components/schemas/Workteam"
    MaxNumberOfTrainingJobs:
      type: integer
      minimum: 1
    MaxParallelTrainingJobs:
      type: integer
      minimum: 1
    MaxRuntimeInSeconds:
      type: integer
      minimum: 1
    MaxWaitTimeInSeconds:
      type: integer
      minimum: 1
    MemberDefinition:
      type: object
      properties:
        CognitoMemberDefinition:
          $ref: "#/components/schemas/CognitoMemberDefinition"
      description: Defines the Amazon Cognito user group that is part of a work team.
    MetricRegex:
      type: string
      pattern: .+
      minLength: 1
      maxLength: 500
    MetricDefinition:
      type: object
      required:
        - Name
        - Regex
      properties:
        Name:
          $ref: "#/components/schemas/MetricName"
        Regex:
          $ref: "#/components/schemas/MetricRegex"
      description: Specifies a metric that the training algorithm writes to
        <code>stderr</code> or <code>stdout</code> . Amazon
        SageMakerhyperparameter tuning captures all defined metrics. You specify
        one metric that a hyperparameter tuning job uses as its objective metric
        to choose the best training job.
    ModelPackageContainerDefinition:
      type: object
      required:
        - Image
      properties:
        ContainerHostname:
          $ref: "#/components/schemas/ContainerHostname"
        Image:
          $ref: "#/components/schemas/Image"
        ImageDigest:
          $ref: "#/components/schemas/ImageDigest"
        ModelDataUrl:
          $ref: "#/components/schemas/Url"
        ProductId:
          $ref: "#/components/schemas/ProductId"
      description: Describes the Docker container for the model package.
    ModelPackageStatusItemList:
      type: array
      items:
        $ref: "#/components/schemas/ModelPackageStatusItem"
    ModelPackageStatusItem:
      type: object
      required:
        - Name
        - Status
      properties:
        Name:
          $ref: "#/components/schemas/EntityName"
        Status:
          $ref: "#/components/schemas/DetailedModelPackageStatus"
        FailureReason:
          $ref: "#/components/schemas/String"
      description: Represents the overall status of a model package.
    ModelPackageSummary:
      type: object
      required:
        - ModelPackageName
        - ModelPackageArn
        - CreationTime
        - ModelPackageStatus
      properties:
        ModelPackageName:
          $ref: "#/components/schemas/EntityName"
        ModelPackageArn:
          $ref: "#/components/schemas/ModelPackageArn"
        ModelPackageDescription:
          $ref: "#/components/schemas/EntityDescription"
        CreationTime:
          $ref: "#/components/schemas/CreationTime"
        ModelPackageStatus:
          $ref: "#/components/schemas/ModelPackageStatus"
      description: Provides summary information about a model package.
    ModelPackageValidationProfile:
      type: object
      required:
        - ProfileName
        - TransformJobDefinition
      properties:
        ProfileName:
          $ref: "#/components/schemas/EntityName"
        TransformJobDefinition:
          $ref: "#/components/schemas/TransformJobDefinition"
      description: <p>Contains data, such as the inputs and targeted instance types that
        are used in the process of validating the model package.</p> <p>The data
        provided in the validation profile is made available to your buyers on
        AWS Marketplace.</p>
    ModelPackageValidationProfiles:
      type: array
      items:
        $ref: "#/components/schemas/ModelPackageValidationProfile"
      minItems: 1
      maxItems: 1
    ModelSummary:
      type: object
      required:
        - ModelName
        - ModelArn
        - CreationTime
      properties:
        ModelName:
          $ref: "#/components/schemas/ModelName"
        ModelArn:
          $ref: "#/components/schemas/ModelArn"
        CreationTime:
          $ref: "#/components/schemas/Timestamp"
      description: Provides summary information about a model.
    NestedFilters:
      type: object
      required:
        - NestedPropertyName
        - Filters
      properties:
        NestedPropertyName:
          $ref: "#/components/schemas/ResourcePropertyName"
        Filters:
          $ref: "#/components/schemas/FilterList"
      description: <p>Defines a list of <code>NestedFilters</code> objects. To satisfy the
        conditions specified in the <code>NestedFilters</code> call, a resource
        must satisfy the conditions of all of the filters.</p> <p>For example,
        you could define a <code>NestedFilters</code> using the training job's
        <code>InputDataConfig</code> property to filter on <code>Channel</code>
        objects. </p> <p>A <code>NestedFilters</code> object contains multiple
        filters. For example, to find all training jobs whose name contains
        <code>train</code> and that have <code>cat/data</code> in their
        <code>S3Uri</code> (specified in <code>InputDataConfig</code>), you need
        to create a <code>NestedFilters</code> object that specifies the
        <code>InputDataConfig</code> property with the following
        <code>Filter</code> objects:</p> <ul> <li> <p>
        <code>'{Name:"InputDataConfig.ChannelName", "Operator":"EQUALS",
        "Value":"train"}',</code> </p> </li> <li> <p>
        <code>'{Name:"InputDataConfig.DataSource.S3DataSource.S3Uri",
        "Operator":"CONTAINS", "Value":"cat/data"}'</code> </p> </li> </ul>
    NestedFiltersList:
      type: array
      items:
        $ref: "#/components/schemas/NestedFilters"
      minItems: 1
      maxItems: 20
    NotebookInstanceAcceleratorType:
      type: string
      enum:
        - ml.eia1.medium
        - ml.eia1.large
        - ml.eia1.xlarge
    NotebookInstanceLifecycleConfigContent:
      type: string
      pattern: "[\\S\\s]+"
      minLength: 1
      maxLength: 16384
    NotebookInstanceLifecycleHook:
      type: object
      properties:
        Content:
          $ref: "#/components/schemas/NotebookInstanceLifecycleConfigContent"
      description: '<p>Contains the notebook instance lifecycle configuration script.</p>
        <p>Each lifecycle configuration script has a limit of 16384
        characters.</p> <p>The value of the <code>$PATH</code> environment
        variable that is available to both scripts is
        <code>/sbin:bin:/usr/sbin:/usr/bin</code>.</p> <p>View CloudWatch Logs
        for notebook instance lifecycle configurations in log group
        <code>/aws/sagemaker/NotebookInstances</code> in log stream
        <code>[notebook-instance-name]/[LifecycleConfigHook]</code>.</p>
        <p>Lifecycle configuration scripts cannot run for longer than 5 minutes.
        If a script runs for longer than 5 minutes, it fails and the notebook
        instance is not created or started.</p> <p>For information about
        notebook instance lifestyle configurations, see <a
        href="https://docs.aws.amazon.com/sagemaker/latest/dg/notebook-lifecycle-config.html">Step
        2.1: (Optional) Customize a Notebook Instance</a>.</p>'
    NotebookInstanceLifecycleConfigSummary:
      type: object
      required:
        - NotebookInstanceLifecycleConfigName
        - NotebookInstanceLifecycleConfigArn
      properties:
        NotebookInstanceLifecycleConfigName:
          $ref: "#/components/schemas/NotebookInstanceLifecycleConfigName"
        NotebookInstanceLifecycleConfigArn:
          $ref: "#/components/schemas/NotebookInstanceLifecycleConfigArn"
        CreationTime:
          $ref: "#/components/schemas/CreationTime"
        LastModifiedTime:
          $ref: "#/components/schemas/LastModifiedTime"
      description: Provides a summary of a notebook instance lifecycle configuration.
    NotebookInstanceSummary:
      type: object
      required:
        - NotebookInstanceName
        - NotebookInstanceArn
      properties:
        NotebookInstanceName:
          $ref: "#/components/schemas/NotebookInstanceName"
        NotebookInstanceArn:
          $ref: "#/components/schemas/NotebookInstanceArn"
        NotebookInstanceStatus:
          $ref: "#/components/schemas/NotebookInstanceStatus"
        Url:
          $ref: "#/components/schemas/NotebookInstanceUrl"
        InstanceType:
          $ref: "#/components/schemas/InstanceType"
        CreationTime:
          $ref: "#/components/schemas/CreationTime"
        LastModifiedTime:
          $ref: "#/components/schemas/LastModifiedTime"
        NotebookInstanceLifecycleConfigName:
          $ref: "#/components/schemas/NotebookInstanceLifecycleConfigName"
        DefaultCodeRepository:
          $ref: "#/components/schemas/CodeRepositoryNameOrUrl"
        AdditionalCodeRepositories:
          $ref: "#/components/schemas/AdditionalCodeRepositoryNamesOrUrls"
      description: Provides summary information for an Amazon SageMaker notebook instance.
    NotificationTopicArn:
      type: string
      pattern: arn:aws[a-z\-]*:sns:[a-z0-9\-]*:[0-9]{12}:[a-zA-Z0-9_.-]*
    ObjectiveStatusCounter:
      type: integer
      minimum: 0
    ParentHyperParameterTuningJob:
      type: object
      properties:
        HyperParameterTuningJobName:
          $ref: "#/components/schemas/HyperParameterTuningJobName"
      description: A previously completed or stopped hyperparameter tuning job to be used
        as a starting point for a new hyperparameter tuning job.
    ProductListings:
      type: array
      items:
        $ref: "#/components/schemas/String"
    ProductionVariantInstanceType:
      type: string
      enum:
        - ml.t2.medium
        - ml.t2.large
        - ml.t2.xlarge
        - ml.t2.2xlarge
        - ml.m4.xlarge
        - ml.m4.2xlarge
        - ml.m4.4xlarge
        - ml.m4.10xlarge
        - ml.m4.16xlarge
        - ml.m5.large
        - ml.m5.xlarge
        - ml.m5.2xlarge
        - ml.m5.4xlarge
        - ml.m5.12xlarge
        - ml.m5.24xlarge
        - ml.c4.large
        - ml.c4.xlarge
        - ml.c4.2xlarge
        - ml.c4.4xlarge
        - ml.c4.8xlarge
        - ml.p2.xlarge
        - ml.p2.8xlarge
        - ml.p2.16xlarge
        - ml.p3.2xlarge
        - ml.p3.8xlarge
        - ml.p3.16xlarge
        - ml.c5.large
        - ml.c5.xlarge
        - ml.c5.2xlarge
        - ml.c5.4xlarge
        - ml.c5.9xlarge
        - ml.c5.18xlarge
        - ml.g4dn.xlarge
        - ml.g4dn.2xlarge
        - ml.g4dn.4xlarge
        - ml.g4dn.8xlarge
        - ml.g4dn.12xlarge
        - ml.g4dn.16xlarge
        - ml.r5.large
        - ml.r5.xlarge
        - ml.r5.2xlarge
        - ml.r5.4xlarge
        - ml.r5.12xlarge
        - ml.r5.24xlarge
    ProductionVariantAcceleratorType:
      type: string
      enum:
        - ml.eia1.medium
        - ml.eia1.large
        - ml.eia1.xlarge
    ProductionVariant:
      type: object
      required:
        - VariantName
        - ModelName
        - InitialInstanceCount
        - InstanceType
      properties:
        VariantName:
          $ref: "#/components/schemas/VariantName"
        ModelName:
          $ref: "#/components/schemas/ModelName"
        InitialInstanceCount:
          $ref: "#/components/schemas/TaskCount"
        InstanceType:
          $ref: "#/components/schemas/ProductionVariantInstanceType"
        InitialVariantWeight:
          $ref: "#/components/schemas/VariantWeight"
        AcceleratorType:
          $ref: "#/components/schemas/ProductionVariantAcceleratorType"
      description: "Identifies a model that you want to host and the resources to deploy
        for hosting it. If you are deploying multiple models, tell Amazon
        SageMaker how to distribute traffic among the models by specifying
        variant weights. "
    ProductionVariantSummary:
      type: object
      required:
        - VariantName
      properties:
        VariantName:
          $ref: "#/components/schemas/VariantName"
        DeployedImages:
          $ref: "#/components/schemas/DeployedImages"
        CurrentWeight:
          $ref: "#/components/schemas/VariantWeight"
        DesiredWeight:
          $ref: "#/components/schemas/VariantWeight"
        CurrentInstanceCount:
          $ref: "#/components/schemas/TaskCount"
        DesiredInstanceCount:
          $ref: "#/components/schemas/TaskCount"
      description: "Describes weight and capacities for a production variant associated
        with an endpoint. If you sent a request to the
        <code>UpdateEndpointWeightsAndCapacities</code> API and the endpoint
        status is <code>Updating</code>, you get different desired and current
        values. "
    PropertyNameHint:
      type: string
      pattern: .*
      minLength: 0
      maxLength: 100
    PropertyNameQuery:
      type: object
      required:
        - PropertyNameHint
      properties:
        PropertyNameHint:
          $ref: "#/components/schemas/PropertyNameHint"
      description: A type of <code>SuggestionQuery</code>. A suggestion query for
        retrieving property names that match the specified hint.
    PropertyNameSuggestion:
      type: object
      properties:
        PropertyName:
          $ref: "#/components/schemas/ResourcePropertyName"
      description: A property name returned from a <code>GetSearchSuggestions</code> call
        that specifies a value in the <code>PropertyNameQuery</code> field.
    USD:
      type: object
      properties:
        Dollars:
          $ref: "#/components/schemas/Dollars"
        Cents:
          $ref: "#/components/schemas/Cents"
        TenthFractionsOfACent:
          $ref: "#/components/schemas/TenthFractionsOfACent"
      description: Represents an amount of money in United States dollars/
    UiTemplate:
      type: object
      required:
        - Content
      properties:
        Content:
          $ref: "#/components/schemas/TemplateContent"
      description: The Liquid template for the worker user interface.
    RenderableTask:
      type: object
      required:
        - Input
      properties:
        Input:
          $ref: "#/components/schemas/TaskInput"
      description: Contains input values for a task.
    RenderingErrorList:
      type: array
      items:
        $ref: "#/components/schemas/RenderingError"
    TaskInput:
      type: string
      pattern: "[\\S\\s]+"
      minLength: 2
      maxLength: 128000
    RenderingError:
      type: object
      required:
        - Code
        - Message
      properties:
        Code:
          $ref: "#/components/schemas/String"
        Message:
          $ref: "#/components/schemas/String"
      description: A description of an error that occurred while rendering the template.
    TrainingInstanceType:
      type: string
      enum:
        - ml.m4.xlarge
        - ml.m4.2xlarge
        - ml.m4.4xlarge
        - ml.m4.10xlarge
        - ml.m4.16xlarge
        - ml.m5.large
        - ml.m5.xlarge
        - ml.m5.2xlarge
        - ml.m5.4xlarge
        - ml.m5.12xlarge
        - ml.m5.24xlarge
        - ml.c4.xlarge
        - ml.c4.2xlarge
        - ml.c4.4xlarge
        - ml.c4.8xlarge
        - ml.p2.xlarge
        - ml.p2.8xlarge
        - ml.p2.16xlarge
        - ml.p3.2xlarge
        - ml.p3.8xlarge
        - ml.p3.16xlarge
        - ml.p3dn.24xlarge
        - ml.c5.xlarge
        - ml.c5.2xlarge
        - ml.c5.4xlarge
        - ml.c5.9xlarge
        - ml.c5.18xlarge
    TrainingInstanceCount:
      type: integer
      minimum: 1
    VolumeSizeInGB:
      type: integer
      minimum: 1
    ResponseMIMEType:
      type: string
      pattern: ^[-\w]+\/.+$
      maxLength: 1024
    S3DataDistribution:
      type: string
      enum:
        - FullyReplicated
        - ShardedByS3Key
    S3DataType:
      type: string
      enum:
        - ManifestFile
        - S3Prefix
        - AugmentedManifestFile
    SearchExpressionList:
      type: array
      items:
        $ref: "#/components/schemas/SearchExpression"
      minItems: 1
      maxItems: 20
    SearchExpression:
      type: object
      properties:
        Filters:
          $ref: "#/components/schemas/FilterList"
        NestedFilters:
          $ref: "#/components/schemas/NestedFiltersList"
        SubExpressions:
          $ref: "#/components/schemas/SearchExpressionList"
        Operator:
          $ref: "#/components/schemas/BooleanOperator"
      description: "<p>A multi-expression that searches for the specified resource or
        resources in a search. All resource objects that satisfy the
        expression's condition are included in the search results. You must
        specify at least one subexpression, filter, or nested filter. A
        <code>SearchExpression</code> can contain up to twenty elements.</p>
        <p>A <code>SearchExpression</code> contains the following
        components:</p> <ul> <li> <p>A list of <code>Filter</code> objects. Each
        filter defines a simple Boolean expression comprised of a resource
        property name, Boolean operator, and value.</p> </li> <li> <p>A list of
        <code>NestedFilter</code> objects. Each nested filter defines a list of
        Boolean expressions using a list of resource properties. A nested filter
        is satisfied if a single object in the list satisfies all Boolean
        expressions.</p> </li> <li> <p>A list of <code>SearchExpression</code>
        objects. A search expression object can be nested in a list of search
        expression objects.</p> </li> <li> <p>A Boolean operator:
        <code>And</code> or <code>Or</code>.</p> </li> </ul>"
    TrainingJob:
      type: object
      properties:
        TrainingJobName:
          $ref: "#/components/schemas/TrainingJobName"
        TrainingJobArn:
          $ref: "#/components/schemas/TrainingJobArn"
        TuningJobArn:
          $ref: "#/components/schemas/HyperParameterTuningJobArn"
        LabelingJobArn:
          $ref: "#/components/schemas/LabelingJobArn"
        ModelArtifacts:
          $ref: "#/components/schemas/ModelArtifacts"
        TrainingJobStatus:
          $ref: "#/components/schemas/TrainingJobStatus"
        SecondaryStatus:
          $ref: "#/components/schemas/SecondaryStatus"
        FailureReason:
          $ref: "#/components/schemas/FailureReason"
        HyperParameters:
          $ref: "#/components/schemas/HyperParameters"
        AlgorithmSpecification:
          $ref: "#/components/schemas/AlgorithmSpecification"
        RoleArn:
          $ref: "#/components/schemas/RoleArn"
        InputDataConfig:
          $ref: "#/components/schemas/InputDataConfig"
        OutputDataConfig:
          $ref: "#/components/schemas/OutputDataConfig"
        ResourceConfig:
          $ref: "#/components/schemas/ResourceConfig"
        VpcConfig:
          $ref: "#/components/schemas/VpcConfig"
        StoppingCondition:
          $ref: "#/components/schemas/StoppingCondition"
        CreationTime:
          $ref: "#/components/schemas/Timestamp"
        TrainingStartTime:
          $ref: "#/components/schemas/Timestamp"
        TrainingEndTime:
          $ref: "#/components/schemas/Timestamp"
        LastModifiedTime:
          $ref: "#/components/schemas/Timestamp"
        SecondaryStatusTransitions:
          $ref: "#/components/schemas/SecondaryStatusTransitions"
        FinalMetricDataList:
          $ref: "#/components/schemas/FinalMetricDataList"
        EnableNetworkIsolation:
          $ref: "#/components/schemas/Boolean"
        EnableInterContainerTrafficEncryption:
          $ref: "#/components/schemas/Boolean"
        Tags:
          $ref: "#/components/schemas/TagList"
      description: Contains information about a training job.
    SearchRecord:
      type: object
      properties:
        TrainingJob:
          $ref: "#/components/schemas/TrainingJob"
      description: An individual search result record that contains a single resource
        object.
    SearchSortOrder:
      type: string
      enum:
        - Ascending
        - Descending
    SearchResultsList:
      type: array
      items:
        $ref: "#/components/schemas/SearchRecord"
    StatusMessage:
      type: string
    SecondaryStatusTransition:
      type: object
      required:
        - Status
        - StartTime
      properties:
        Status:
          $ref: "#/components/schemas/SecondaryStatus"
        StartTime:
          $ref: "#/components/schemas/Timestamp"
        EndTime:
          $ref: "#/components/schemas/Timestamp"
        StatusMessage:
          $ref: "#/components/schemas/StatusMessage"
      description: <p>An array element of
        <a>DescribeTrainingJobResponse$SecondaryStatusTransitions</a>. It
        provides additional details about a status that the training job has
        transitioned through. A training job can be in one of several states,
        for example, starting, downloading, training, or uploading. Within each
        state, there are a number of intermediate states. For example, within
        the starting state, Amazon SageMaker could be starting the training job
        or launching the ML instances. These transitional states are referred to
        as the job's secondary status. </p> <p/>
    SecurityGroupId:
      type: string
      pattern: "[-0-9a-zA-Z]+"
      maxLength: 32
    Seed:
      type: integer
    SourceAlgorithm:
      type: object
      required:
        - AlgorithmName
      properties:
        ModelDataUrl:
          $ref: "#/components/schemas/Url"
        AlgorithmName:
          $ref: "#/components/schemas/ArnOrName"
      description: Specifies an algorithm that was used to create the model package. The
        algorithm must be either an algorithm resource in your Amazon SageMaker
        account or an algorithm in AWS Marketplace that you are subscribed to.
    SourceAlgorithmList:
      type: array
      items:
        $ref: "#/components/schemas/SourceAlgorithm"
      minItems: 1
      maxItems: 1
    SplitType:
      type: string
      enum:
        - None
        - Line
        - RecordIO
        - TFRecord
    Subnets:
      type: array
      items:
        $ref: "#/components/schemas/SubnetId"
      minItems: 1
      maxItems: 16
    TagKey:
      type: string
      pattern: ^([\p{L}\p{Z}\p{N}_.:/=+\-@]*)$
      minLength: 1
      maxLength: 128
    TagValue:
      type: string
      pattern: ^([\p{L}\p{Z}\p{N}_.:/=+\-@]*)$
      minLength: 0
      maxLength: 256
    Tag:
      type: object
      required:
        - Key
        - Value
      properties:
        Key:
          $ref: "#/components/schemas/TagKey"
        Value:
          $ref: "#/components/schemas/TagValue"
      description: "Describes a tag. "
    TaskKeyword:
      type: string
      pattern: ^[A-Za-z0-9]+( [A-Za-z0-9]+)*$
      minLength: 1
      maxLength: 30
    TemplateContent:
      type: string
      pattern: "[\\S\\s]+"
      minLength: 1
      maxLength: 128000
    TenthFractionsOfACent:
      type: integer
      minimum: 0
      maximum: 9
    TrainingInstanceTypes:
      type: array
      items:
        $ref: "#/components/schemas/TrainingInstanceType"
    TrainingJobStatusCounter:
      type: integer
      minimum: 0
    TrainingJobSummary:
      type: object
      required:
        - TrainingJobName
        - TrainingJobArn
        - CreationTime
        - TrainingJobStatus
      properties:
        TrainingJobName:
          $ref: "#/components/schemas/TrainingJobName"
        TrainingJobArn:
          $ref: "#/components/schemas/TrainingJobArn"
        CreationTime:
          $ref: "#/components/schemas/Timestamp"
        TrainingEndTime:
          $ref: "#/components/schemas/Timestamp"
        LastModifiedTime:
          $ref: "#/components/schemas/Timestamp"
        TrainingJobStatus:
          $ref: "#/components/schemas/TrainingJobStatus"
      description: Provides summary information about a training job.
    TransformS3DataSource:
      type: object
      required:
        - S3DataType
        - S3Uri
      properties:
        S3DataType:
          $ref: "#/components/schemas/S3DataType"
        S3Uri:
          $ref: "#/components/schemas/S3Uri"
      description: Describes the S3 data source.
    TransformDataSource:
      type: object
      required:
        - S3DataSource
      properties:
        S3DataSource:
          $ref: "#/components/schemas/TransformS3DataSource"
      description: Describes the location of the channel data.
    TransformEnvironmentKey:
      type: string
      pattern: "[a-zA-Z_][a-zA-Z0-9_]*"
      maxLength: 1024
    TransformEnvironmentValue:
      type: string
      pattern: "[\\S\\s]*"
      maxLength: 10240
    TransformInstanceCount:
      type: integer
      minimum: 1
    TransformInstanceType:
      type: string
      enum:
        - ml.m4.xlarge
        - ml.m4.2xlarge
        - ml.m4.4xlarge
        - ml.m4.10xlarge
        - ml.m4.16xlarge
        - ml.c4.xlarge
        - ml.c4.2xlarge
        - ml.c4.4xlarge
        - ml.c4.8xlarge
        - ml.p2.xlarge
        - ml.p2.8xlarge
        - ml.p2.16xlarge
        - ml.p3.2xlarge
        - ml.p3.8xlarge
        - ml.p3.16xlarge
        - ml.c5.xlarge
        - ml.c5.2xlarge
        - ml.c5.4xlarge
        - ml.c5.9xlarge
        - ml.c5.18xlarge
        - ml.m5.large
        - ml.m5.xlarge
        - ml.m5.2xlarge
        - ml.m5.4xlarge
        - ml.m5.12xlarge
        - ml.m5.24xlarge
    TransformJobSummary:
      type: object
      required:
        - TransformJobName
        - TransformJobArn
        - CreationTime
        - TransformJobStatus
      properties:
        TransformJobName:
          $ref: "#/components/schemas/TransformJobName"
        TransformJobArn:
          $ref: "#/components/schemas/TransformJobArn"
        CreationTime:
          $ref: "#/components/schemas/Timestamp"
        TransformEndTime:
          $ref: "#/components/schemas/Timestamp"
        LastModifiedTime:
          $ref: "#/components/schemas/Timestamp"
        TransformJobStatus:
          $ref: "#/components/schemas/TransformJobStatus"
        FailureReason:
          $ref: "#/components/schemas/FailureReason"
      description: Provides a summary of a transform job. Multiple
        <code>TransformJobSummary</code> objects are returned as a list after in
        response to a <a>ListTransformJobs</a> call.
    VpcSecurityGroupIds:
      type: array
      items:
        $ref: "#/components/schemas/SecurityGroupId"
      minItems: 1
      maxItems: 5
