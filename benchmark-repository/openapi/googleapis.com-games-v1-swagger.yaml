openapi: 3.0.0
info:
  contact:
    name: Google
    url: https://google.com
  description: The API for Google Play Game Services.
  license:
    name: Creative Commons Attribution 3.0
    url: http://creativecommons.org/licenses/by/3.0/
  termsOfService: https://developers.google.com/terms/
  title: Google Play Game Services
  version: v1
  x-apiClientRegistration:
    url: https://console.developers.google.com
  x-apisguru-categories:
    - social
  x-logo:
    url: https://www.gstatic.com/images/icons/material/product/2x/play_games_64dp.png
  x-origin:
    - converter:
        url: https://github.com/lucybot/api-spec-converter
        version: 2.7.31
      format: google
      url: https://www.googleapis.com/discovery/v1/apis/games/v1/rest
      version: v1
  x-preferred: true
  x-providerName: googleapis.com
  x-serviceName: games
externalDocs:
  url: https://developers.google.com/games/services/
tags:
  - name: achievementDefinitions
  - name: achievements
  - name: applications
  - name: events
  - name: leaderboards
  - name: metagame
  - name: players
  - name: pushtokens
  - name: questMilestones
  - name: quests
  - name: revisions
  - name: rooms
  - name: scores
  - name: snapshots
  - name: turnBasedMatches
paths:
  /achievements:
    get:
      description: Lists all the achievement definitions for your application.
      operationId: games.achievementDefinitions.list
      parameters:
        - description: The preferred language to use for strings returned by this method.
          in: query
          name: language
          schema:
            type: string
        - description: The maximum number of achievement resources to return in the
            response, used for paging. For any response, the actual number of
            achievement resources returned may be less than the specified
            maxResults.
          in: query
          name: maxResults
          schema:
            type: integer
            minimum: 1
            maximum: 200
        - description: The token returned by the previous request.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/AchievementDefinitionsListResponse"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/games
          Oauth2c:
            - https://www.googleapis.com/auth/games
      tags:
        - achievementDefinitions
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
  /achievements/updateMultiple:
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Updates multiple achievements for the currently authenticated player.
      operationId: games.achievements.updateMultiple
      parameters:
        - description: Override used only by built-in games in Play Games application.
          in: query
          name: builtinGameId
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AchievementUpdateMultipleRequest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/AchievementUpdateMultipleResponse"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/games
          Oauth2c:
            - https://www.googleapis.com/auth/games
      tags:
        - achievements
  "/achievements/{achievementId}/increment":
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Increments the steps of the achievement with the given ID for the
        currently authenticated player.
      operationId: games.achievements.increment
      parameters:
        - description: The ID of the achievement used by this method.
          in: path
          name: achievementId
          required: true
          schema:
            type: string
        - description: A randomly generated numeric ID for each request specified by the
            caller. This number is used at the server to ensure that the request
            is handled correctly across retries.
          in: query
          name: requestId
          schema:
            type: string
        - description: The number of steps to increment.
          in: query
          name: stepsToIncrement
          required: true
          schema:
            type: integer
            minimum: 1
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/AchievementIncrementResponse"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/games
          Oauth2c:
            - https://www.googleapis.com/auth/games
      tags:
        - achievements
  "/achievements/{achievementId}/reveal":
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Sets the state of the achievement with the given ID to REVEALED for the
        currently authenticated player.
      operationId: games.achievements.reveal
      parameters:
        - description: The ID of the achievement used by this method.
          in: path
          name: achievementId
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/AchievementRevealResponse"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/games
          Oauth2c:
            - https://www.googleapis.com/auth/games
      tags:
        - achievements
  "/achievements/{achievementId}/setStepsAtLeast":
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Sets the steps for the currently authenticated player towards unlocking
        an achievement. If the steps parameter is less than the current number
        of steps that the player already gained for the achievement, the
        achievement is not modified.
      operationId: games.achievements.setStepsAtLeast
      parameters:
        - description: The ID of the achievement used by this method.
          in: path
          name: achievementId
          required: true
          schema:
            type: string
        - description: The minimum value to set the steps to.
          in: query
          name: steps
          required: true
          schema:
            type: integer
            minimum: 1
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/AchievementSetStepsAtLeastResponse"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/games
          Oauth2c:
            - https://www.googleapis.com/auth/games
      tags:
        - achievements
  "/achievements/{achievementId}/unlock":
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Unlocks this achievement for the currently authenticated player.
      operationId: games.achievements.unlock
      parameters:
        - description: The ID of the achievement used by this method.
          in: path
          name: achievementId
          required: true
          schema:
            type: string
        - description: Override used only by built-in games in Play Games application.
          in: query
          name: builtinGameId
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/AchievementUnlockResponse"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/games
          Oauth2c:
            - https://www.googleapis.com/auth/games
      tags:
        - achievements
  /applications/played:
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Indicate that the the currently authenticated user is playing your
        application.
      operationId: games.applications.played
      parameters:
        - description: Override used only by built-in games in Play Games application.
          in: query
          name: builtinGameId
          schema:
            type: string
      responses:
        "200":
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/games
          Oauth2c:
            - https://www.googleapis.com/auth/games
      tags:
        - applications
  "/applications/{applicationId}":
    get:
      description: Retrieves the metadata of the application with the given ID. If the
        requested application is not available for the specified platformType,
        the returned response will not include any instance data.
      operationId: games.applications.get
      parameters:
        - description: The application ID from the Google Play developer console.
          in: path
          name: applicationId
          required: true
          schema:
            type: string
        - description: The preferred language to use for strings returned by this method.
          in: query
          name: language
          schema:
            type: string
        - description: Restrict application details returned to the specific platform.
          in: query
          name: platformType
          schema:
            type: string
            enum:
              - ANDROID
              - IOS
              - WEB_APP
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Application"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/games
          Oauth2c:
            - https://www.googleapis.com/auth/games
      tags:
        - applications
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
  "/applications/{applicationId}/verify":
    get:
      description: Verifies the auth token provided with this request is for the
        application with the specified ID, and returns the ID of the player it
        was granted for.
      operationId: games.applications.verify
      parameters:
        - description: The application ID from the Google Play developer console.
          in: path
          name: applicationId
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ApplicationVerifyResponse"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/games
          Oauth2c:
            - https://www.googleapis.com/auth/games
      tags:
        - applications
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
  /eventDefinitions:
    get:
      description: Returns a list of the event definitions in this application.
      operationId: games.events.listDefinitions
      parameters:
        - description: The preferred language to use for strings returned by this method.
          in: query
          name: language
          schema:
            type: string
        - description: The maximum number of event definitions to return in the response,
            used for paging. For any response, the actual number of event
            definitions to return may be less than the specified maxResults.
          in: query
          name: maxResults
          schema:
            type: integer
            minimum: 1
            maximum: 100
        - description: The token returned by the previous request.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/EventDefinitionListResponse"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/games
          Oauth2c:
            - https://www.googleapis.com/auth/games
      tags:
        - events
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
  /events:
    get:
      description: Returns a list showing the current progress on events in this
        application for the currently authenticated user.
      operationId: games.events.listByPlayer
      parameters:
        - description: The preferred language to use for strings returned by this method.
          in: query
          name: language
          schema:
            type: string
        - description: The maximum number of events to return in the response, used for
            paging. For any response, the actual number of events to return may
            be less than the specified maxResults.
          in: query
          name: maxResults
          schema:
            type: integer
            minimum: 1
            maximum: 100
        - description: The token returned by the previous request.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/PlayerEventListResponse"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/games
          Oauth2c:
            - https://www.googleapis.com/auth/games
      tags:
        - events
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Records a batch of changes to the number of times events have occurred
        for the currently authenticated user of this application.
      operationId: games.events.record
      parameters:
        - description: The preferred language to use for strings returned by this method.
          in: query
          name: language
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EventRecordRequest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/EventUpdateResponse"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/games
          Oauth2c:
            - https://www.googleapis.com/auth/games
      tags:
        - events
  /leaderboards:
    get:
      description: Lists all the leaderboard metadata for your application.
      operationId: games.leaderboards.list
      parameters:
        - description: The preferred language to use for strings returned by this method.
          in: query
          name: language
          schema:
            type: string
        - description: The maximum number of leaderboards to return in the response. For
            any response, the actual number of leaderboards returned may be less
            than the specified maxResults.
          in: query
          name: maxResults
          schema:
            type: integer
            minimum: 1
            maximum: 200
        - description: The token returned by the previous request.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/LeaderboardListResponse"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/games
          Oauth2c:
            - https://www.googleapis.com/auth/games
      tags:
        - leaderboards
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
  /leaderboards/scores:
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Submits multiple scores to leaderboards.
      operationId: games.scores.submitMultiple
      parameters:
        - description: The preferred language to use for strings returned by this method.
          in: query
          name: language
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PlayerScoreSubmissionList"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/PlayerScoreListResponse"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/games
          Oauth2c:
            - https://www.googleapis.com/auth/games
      tags:
        - scores
  "/leaderboards/{leaderboardId}":
    get:
      description: Retrieves the metadata of the leaderboard with the given ID.
      operationId: games.leaderboards.get
      parameters:
        - description: The preferred language to use for strings returned by this method.
          in: query
          name: language
          schema:
            type: string
        - description: The ID of the leaderboard.
          in: path
          name: leaderboardId
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Leaderboard"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/games
          Oauth2c:
            - https://www.googleapis.com/auth/games
      tags:
        - leaderboards
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
  "/leaderboards/{leaderboardId}/scores":
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Submits a score to the specified leaderboard.
      operationId: games.scores.submit
      parameters:
        - description: The preferred language to use for strings returned by this method.
          in: query
          name: language
          schema:
            type: string
        - description: The ID of the leaderboard.
          in: path
          name: leaderboardId
          required: true
          schema:
            type: string
        - description: The score you're submitting. The submitted score is ignored if it is
            worse than a previously submitted score, where worse depends on the
            leaderboard sort order. The meaning of the score value depends on
            the leaderboard format type. For fixed-point, the score represents
            the raw value. For time, the score represents elapsed time in
            milliseconds. For currency, the score represents a value in micro
            units.
          in: query
          name: score
          required: true
          schema:
            type: string
        - description: Additional information about the score you're submitting. Values
            must contain no more than 64 URI-safe characters as defined by
            section 2.3 of RFC 3986.
          in: query
          name: scoreTag
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/PlayerScoreResponse"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/games
          Oauth2c:
            - https://www.googleapis.com/auth/games
      tags:
        - scores
  "/leaderboards/{leaderboardId}/scores/{collection}":
    get:
      description: Lists the scores in a leaderboard, starting from the top.
      operationId: games.scores.list
      parameters:
        - description: The collection of scores you're requesting.
          in: path
          name: collection
          required: true
          schema:
            type: string
            enum:
              - PUBLIC
              - SOCIAL
              - SOCIAL_1P
        - description: The preferred language to use for strings returned by this method.
          in: query
          name: language
          schema:
            type: string
        - description: The ID of the leaderboard.
          in: path
          name: leaderboardId
          required: true
          schema:
            type: string
        - description: The maximum number of leaderboard scores to return in the response.
            For any response, the actual number of leaderboard scores returned
            may be less than the specified maxResults.
          in: query
          name: maxResults
          schema:
            type: integer
            minimum: 1
            maximum: 30
        - description: The token returned by the previous request.
          in: query
          name: pageToken
          schema:
            type: string
        - description: The time span for the scores and ranks you're requesting.
          in: query
          name: timeSpan
          required: true
          schema:
            type: string
            enum:
              - ALL_TIME
              - DAILY
              - WEEKLY
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/LeaderboardScores"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/games
          Oauth2c:
            - https://www.googleapis.com/auth/games
      tags:
        - scores
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
  "/leaderboards/{leaderboardId}/window/{collection}":
    get:
      description: Lists the scores in a leaderboard around (and including) a player's
        score.
      operationId: games.scores.listWindow
      parameters:
        - description: The collection of scores you're requesting.
          in: path
          name: collection
          required: true
          schema:
            type: string
            enum:
              - PUBLIC
              - SOCIAL
              - SOCIAL_1P
        - description: The preferred language to use for strings returned by this method.
          in: query
          name: language
          schema:
            type: string
        - description: The ID of the leaderboard.
          in: path
          name: leaderboardId
          required: true
          schema:
            type: string
        - description: The maximum number of leaderboard scores to return in the response.
            For any response, the actual number of leaderboard scores returned
            may be less than the specified maxResults.
          in: query
          name: maxResults
          schema:
            type: integer
            minimum: 1
            maximum: 30
        - description: The token returned by the previous request.
          in: query
          name: pageToken
          schema:
            type: string
        - description: The preferred number of scores to return above the player's score.
            More scores may be returned if the player is at the bottom of the
            leaderboard; fewer may be returned if the player is at the top. Must
            be less than or equal to maxResults.
          in: query
          name: resultsAbove
          schema:
            type: integer
        - description: True if the top scores should be returned when the player is not in
            the leaderboard. Defaults to true.
          in: query
          name: returnTopIfAbsent
          schema:
            type: boolean
        - description: The time span for the scores and ranks you're requesting.
          in: query
          name: timeSpan
          required: true
          schema:
            type: string
            enum:
              - ALL_TIME
              - DAILY
              - WEEKLY
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/LeaderboardScores"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/games
          Oauth2c:
            - https://www.googleapis.com/auth/games
      tags:
        - scores
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
  /metagameConfig:
    get:
      description: Return the metagame configuration data for the calling application.
      operationId: games.metagame.getMetagameConfig
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/MetagameConfig"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/games
          Oauth2c:
            - https://www.googleapis.com/auth/games
      tags:
        - metagame
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
  "/players/me/players/{collection}":
    get:
      description: Get the collection of players for the currently authenticated user.
      operationId: games.players.list
      parameters:
        - description: Collection of players being retrieved
          in: path
          name: collection
          required: true
          schema:
            type: string
            enum:
              - connected
              - playedWith
              - played_with
              - visible
        - description: The preferred language to use for strings returned by this method.
          in: query
          name: language
          schema:
            type: string
        - description: The maximum number of player resources to return in the response,
            used for paging. For any response, the actual number of player
            resources returned may be less than the specified maxResults.
          in: query
          name: maxResults
          schema:
            type: integer
            minimum: 1
            maximum: 50
        - description: The token returned by the previous request.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/PlayerListResponse"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/games
          Oauth2c:
            - https://www.googleapis.com/auth/games
      tags:
        - players
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
  "/players/{playerId}":
    get:
      description: Retrieves the Player resource with the given ID. To retrieve the player
        for the currently authenticated user, set playerId to me.
      operationId: games.players.get
      parameters:
        - description: The preferred language to use for strings returned by this method.
          in: query
          name: language
          schema:
            type: string
        - description: A player ID. A value of me may be used in place of the authenticated
            player's ID.
          in: path
          name: playerId
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Player"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/games
          Oauth2c:
            - https://www.googleapis.com/auth/games
      tags:
        - players
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
  "/players/{playerId}/achievements":
    get:
      description: Lists the progress for all your application's achievements for the
        currently authenticated player.
      operationId: games.achievements.list
      parameters:
        - description: The preferred language to use for strings returned by this method.
          in: query
          name: language
          schema:
            type: string
        - description: The maximum number of achievement resources to return in the
            response, used for paging. For any response, the actual number of
            achievement resources returned may be less than the specified
            maxResults.
          in: query
          name: maxResults
          schema:
            type: integer
            minimum: 1
            maximum: 200
        - description: The token returned by the previous request.
          in: query
          name: pageToken
          schema:
            type: string
        - description: A player ID. A value of me may be used in place of the authenticated
            player's ID.
          in: path
          name: playerId
          required: true
          schema:
            type: string
        - description: Tells the server to return only achievements with the specified
            state. If this parameter isn't specified, all achievements are
            returned.
          in: query
          name: state
          schema:
            type: string
            enum:
              - ALL
              - HIDDEN
              - REVEALED
              - UNLOCKED
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/PlayerAchievementListResponse"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/games
          Oauth2c:
            - https://www.googleapis.com/auth/games
      tags:
        - achievements
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
  "/players/{playerId}/categories/{collection}":
    get:
      description: List play data aggregated per category for the player corresponding to
        playerId.
      operationId: games.metagame.listCategoriesByPlayer
      parameters:
        - description: The collection of categories for which data will be returned.
          in: path
          name: collection
          required: true
          schema:
            type: string
            enum:
              - all
        - description: The preferred language to use for strings returned by this method.
          in: query
          name: language
          schema:
            type: string
        - description: The maximum number of category resources to return in the response,
            used for paging. For any response, the actual number of category
            resources returned may be less than the specified maxResults.
          in: query
          name: maxResults
          schema:
            type: integer
            minimum: 1
            maximum: 100
        - description: The token returned by the previous request.
          in: query
          name: pageToken
          schema:
            type: string
        - description: A player ID. A value of me may be used in place of the authenticated
            player's ID.
          in: path
          name: playerId
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/CategoryListResponse"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/games
          Oauth2c:
            - https://www.googleapis.com/auth/games
      tags:
        - metagame
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
  "/players/{playerId}/leaderboards/{leaderboardId}/scores/{timeSpan}":
    get:
      description: >-
        Get high scores, and optionally ranks, in leaderboards for the currently
        authenticated player. For a specific time span, leaderboardId can be set
        to ALL to retrieve data for all leaderboards in a given time span.

        NOTE: You cannot ask for 'ALL' leaderboards and 'ALL' timeSpans in the same request; only one parameter may be set to 'ALL'.
      operationId: games.scores.get
      parameters:
        - description: The types of ranks to return. If the parameter is omitted, no ranks
            will be returned.
          in: query
          name: includeRankType
          schema:
            type: string
            enum:
              - ALL
              - PUBLIC
              - SOCIAL
        - description: The preferred language to use for strings returned by this method.
          in: query
          name: language
          schema:
            type: string
        - description: The ID of the leaderboard. Can be set to 'ALL' to retrieve data for
            all leaderboards for this application.
          in: path
          name: leaderboardId
          required: true
          schema:
            type: string
        - description: The maximum number of leaderboard scores to return in the response.
            For any response, the actual number of leaderboard scores returned
            may be less than the specified maxResults.
          in: query
          name: maxResults
          schema:
            type: integer
            minimum: 1
            maximum: 30
        - description: The token returned by the previous request.
          in: query
          name: pageToken
          schema:
            type: string
        - description: A player ID. A value of me may be used in place of the authenticated
            player's ID.
          in: path
          name: playerId
          required: true
          schema:
            type: string
        - description: The time span for the scores and ranks you're requesting.
          in: path
          name: timeSpan
          required: true
          schema:
            type: string
            enum:
              - ALL
              - ALL_TIME
              - DAILY
              - WEEKLY
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/PlayerLeaderboardScoreListResponse"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/games
          Oauth2c:
            - https://www.googleapis.com/auth/games
      tags:
        - scores
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
  "/players/{playerId}/quests":
    get:
      description: Get a list of quests for your application and the currently
        authenticated player.
      operationId: games.quests.list
      parameters:
        - description: The preferred language to use for strings returned by this method.
          in: query
          name: language
          schema:
            type: string
        - description: "The maximum number of quest resources to return in the response,
            used for paging. For any response, the actual number of quest
            resources returned may be less than the specified maxResults.
            Acceptable values are 1 to 50, inclusive. (Default: 50)."
          in: query
          name: maxResults
          schema:
            type: integer
            minimum: 1
            maximum: 50
        - description: The token returned by the previous request.
          in: query
          name: pageToken
          schema:
            type: string
        - description: A player ID. A value of me may be used in place of the authenticated
            player's ID.
          in: path
          name: playerId
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/QuestListResponse"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/games
          Oauth2c:
            - https://www.googleapis.com/auth/games
      tags:
        - quests
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
  "/players/{playerId}/snapshots":
    get:
      description: Retrieves a list of snapshots created by your application for the player
        corresponding to the player ID.
      operationId: games.snapshots.list
      parameters:
        - description: The preferred language to use for strings returned by this method.
          in: query
          name: language
          schema:
            type: string
        - description: The maximum number of snapshot resources to return in the response,
            used for paging. For any response, the actual number of snapshot
            resources returned may be less than the specified maxResults.
          in: query
          name: maxResults
          schema:
            type: integer
            minimum: 1
            maximum: 25
        - description: The token returned by the previous request.
          in: query
          name: pageToken
          schema:
            type: string
        - description: A player ID. A value of me may be used in place of the authenticated
            player's ID.
          in: path
          name: playerId
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/SnapshotListResponse"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/drive.appdata
          Oauth2c:
            - https://www.googleapis.com/auth/drive.appdata
        - Oauth2:
            - https://www.googleapis.com/auth/games
          Oauth2c:
            - https://www.googleapis.com/auth/games
      tags:
        - snapshots
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
  /pushtokens:
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    put:
      description: Registers a push token for the current user and application.
      operationId: games.pushtokens.update
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PushToken"
      responses:
        "200":
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/games
          Oauth2c:
            - https://www.googleapis.com/auth/games
      tags:
        - pushtokens
  /pushtokens/remove:
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Removes a push token for the current user and application. Removing a
        non-existent push token will report success.
      operationId: games.pushtokens.remove
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PushTokenId"
      responses:
        "200":
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/games
          Oauth2c:
            - https://www.googleapis.com/auth/games
      tags:
        - pushtokens
  "/quests/{questId}/accept":
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Indicates that the currently authorized user will participate in the
        quest.
      operationId: games.quests.accept
      parameters:
        - description: The preferred language to use for strings returned by this method.
          in: query
          name: language
          schema:
            type: string
        - description: The ID of the quest.
          in: path
          name: questId
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Quest"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/games
          Oauth2c:
            - https://www.googleapis.com/auth/games
      tags:
        - quests
  "/quests/{questId}/milestones/{milestoneId}/claim":
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    put:
      description: Report that a reward for the milestone corresponding to milestoneId for
        the quest corresponding to questId has been claimed by the currently
        authorized user.
      operationId: games.questMilestones.claim
      parameters:
        - description: The ID of the milestone.
          in: path
          name: milestoneId
          required: true
          schema:
            type: string
        - description: The ID of the quest.
          in: path
          name: questId
          required: true
          schema:
            type: string
        - description: A numeric ID to ensure that the request is handled correctly across
            retries. Your client application must generate this ID randomly.
          in: query
          name: requestId
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/games
          Oauth2c:
            - https://www.googleapis.com/auth/games
      tags:
        - questMilestones
  /revisions/check:
    get:
      description: Checks whether the games client is out of date.
      operationId: games.revisions.check
      parameters:
        - description: >-
            The revision of the client SDK used by your application. Format:

            [PLATFORM_TYPE]:[VERSION_NUMBER]. Possible values of PLATFORM_TYPE are:
             
            - "ANDROID" - Client is running the Android SDK. 

            - "IOS" - Client is running the iOS SDK. 

            - "WEB_APP" - Client is running as a Web App.
          in: query
          name: clientRevision
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/RevisionCheckResponse"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/games
          Oauth2c:
            - https://www.googleapis.com/auth/games
      tags:
        - revisions
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
  /rooms:
    get:
      description: Returns invitations to join rooms.
      operationId: games.rooms.list
      parameters:
        - description: The preferred language to use for strings returned by this method.
          in: query
          name: language
          schema:
            type: string
        - description: The maximum number of rooms to return in the response, used for
            paging. For any response, the actual number of rooms to return may
            be less than the specified maxResults.
          in: query
          name: maxResults
          schema:
            type: integer
            minimum: 1
            maximum: 500
        - description: The token returned by the previous request.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/RoomList"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/games
          Oauth2c:
            - https://www.googleapis.com/auth/games
      tags:
        - rooms
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
  /rooms/create:
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Create a room. For internal use by the Games SDK only. Calling this
        method directly is unsupported.
      operationId: games.rooms.create
      parameters:
        - description: The preferred language to use for strings returned by this method.
          in: query
          name: language
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RoomCreateRequest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Room"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/games
          Oauth2c:
            - https://www.googleapis.com/auth/games
      tags:
        - rooms
  "/rooms/{roomId}":
    get:
      description: Get the data for a room.
      operationId: games.rooms.get
      parameters:
        - description: The preferred language to use for strings returned by this method.
          in: query
          name: language
          schema:
            type: string
        - description: The ID of the room.
          in: path
          name: roomId
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Room"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/games
          Oauth2c:
            - https://www.googleapis.com/auth/games
      tags:
        - rooms
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
  "/rooms/{roomId}/decline":
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Decline an invitation to join a room. For internal use by the Games SDK
        only. Calling this method directly is unsupported.
      operationId: games.rooms.decline
      parameters:
        - description: The preferred language to use for strings returned by this method.
          in: query
          name: language
          schema:
            type: string
        - description: The ID of the room.
          in: path
          name: roomId
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Room"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/games
          Oauth2c:
            - https://www.googleapis.com/auth/games
      tags:
        - rooms
  "/rooms/{roomId}/dismiss":
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Dismiss an invitation to join a room. For internal use by the Games SDK
        only. Calling this method directly is unsupported.
      operationId: games.rooms.dismiss
      parameters:
        - description: The ID of the room.
          in: path
          name: roomId
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/games
          Oauth2c:
            - https://www.googleapis.com/auth/games
      tags:
        - rooms
  "/rooms/{roomId}/join":
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Join a room. For internal use by the Games SDK only. Calling this method
        directly is unsupported.
      operationId: games.rooms.join
      parameters:
        - description: The preferred language to use for strings returned by this method.
          in: query
          name: language
          schema:
            type: string
        - description: The ID of the room.
          in: path
          name: roomId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RoomJoinRequest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Room"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/games
          Oauth2c:
            - https://www.googleapis.com/auth/games
      tags:
        - rooms
  "/rooms/{roomId}/leave":
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Leave a room. For internal use by the Games SDK only. Calling this
        method directly is unsupported.
      operationId: games.rooms.leave
      parameters:
        - description: The preferred language to use for strings returned by this method.
          in: query
          name: language
          schema:
            type: string
        - description: The ID of the room.
          in: path
          name: roomId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RoomLeaveRequest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Room"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/games
          Oauth2c:
            - https://www.googleapis.com/auth/games
      tags:
        - rooms
  "/rooms/{roomId}/reportstatus":
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Updates sent by a client reporting the status of peers in a room. For
        internal use by the Games SDK only. Calling this method directly is
        unsupported.
      operationId: games.rooms.reportStatus
      parameters:
        - description: The preferred language to use for strings returned by this method.
          in: query
          name: language
          schema:
            type: string
        - description: The ID of the room.
          in: path
          name: roomId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RoomP2PStatuses"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/RoomStatus"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/games
          Oauth2c:
            - https://www.googleapis.com/auth/games
      tags:
        - rooms
  "/snapshots/{snapshotId}":
    get:
      description: Retrieves the metadata for a given snapshot ID.
      operationId: games.snapshots.get
      parameters:
        - description: The preferred language to use for strings returned by this method.
          in: query
          name: language
          schema:
            type: string
        - description: The ID of the snapshot.
          in: path
          name: snapshotId
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Snapshot"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/drive.appdata
          Oauth2c:
            - https://www.googleapis.com/auth/drive.appdata
        - Oauth2:
            - https://www.googleapis.com/auth/games
          Oauth2c:
            - https://www.googleapis.com/auth/games
      tags:
        - snapshots
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
  /turnbasedmatches:
    get:
      description: Returns turn-based matches the player is or was involved in.
      operationId: games.turnBasedMatches.list
      parameters:
        - description: True if match data should be returned in the response. Note that not
            all data will necessarily be returned if include_match_data is true;
            the server may decide to only return data for some of the matches to
            limit download size for the client. The remainder of the data for
            these matches will be retrievable on request.
          in: query
          name: includeMatchData
          schema:
            type: boolean
        - description: The preferred language to use for strings returned by this method.
          in: query
          name: language
          schema:
            type: string
        - description: The maximum number of completed or canceled matches to return in the
            response. If not set, all matches returned could be completed or
            canceled.
          in: query
          name: maxCompletedMatches
          schema:
            type: integer
            minimum: 0
            maximum: 500
        - description: The maximum number of matches to return in the response, used for
            paging. For any response, the actual number of matches to return may
            be less than the specified maxResults.
          in: query
          name: maxResults
          schema:
            type: integer
            minimum: 1
            maximum: 500
        - description: The token returned by the previous request.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/TurnBasedMatchList"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/games
          Oauth2c:
            - https://www.googleapis.com/auth/games
      tags:
        - turnBasedMatches
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
  /turnbasedmatches/create:
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Create a turn-based match.
      operationId: games.turnBasedMatches.create
      parameters:
        - description: The preferred language to use for strings returned by this method.
          in: query
          name: language
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TurnBasedMatchCreateRequest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/TurnBasedMatch"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/games
          Oauth2c:
            - https://www.googleapis.com/auth/games
      tags:
        - turnBasedMatches
  /turnbasedmatches/sync:
    get:
      description: Returns turn-based matches the player is or was involved in that changed
        since the last sync call, with the least recent changes coming first.
        Matches that should be removed from the local cache will have a status
        of MATCH_DELETED.
      operationId: games.turnBasedMatches.sync
      parameters:
        - description: True if match data should be returned in the response. Note that not
            all data will necessarily be returned if include_match_data is true;
            the server may decide to only return data for some of the matches to
            limit download size for the client. The remainder of the data for
            these matches will be retrievable on request.
          in: query
          name: includeMatchData
          schema:
            type: boolean
        - description: The preferred language to use for strings returned by this method.
          in: query
          name: language
          schema:
            type: string
        - description: The maximum number of completed or canceled matches to return in the
            response. If not set, all matches returned could be completed or
            canceled.
          in: query
          name: maxCompletedMatches
          schema:
            type: integer
            minimum: 0
            maximum: 500
        - description: The maximum number of matches to return in the response, used for
            paging. For any response, the actual number of matches to return may
            be less than the specified maxResults.
          in: query
          name: maxResults
          schema:
            type: integer
            minimum: 1
            maximum: 500
        - description: The token returned by the previous request.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/TurnBasedMatchSync"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/games
          Oauth2c:
            - https://www.googleapis.com/auth/games
      tags:
        - turnBasedMatches
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
  "/turnbasedmatches/{matchId}":
    get:
      description: Get the data for a turn-based match.
      operationId: games.turnBasedMatches.get
      parameters:
        - description: Get match data along with metadata.
          in: query
          name: includeMatchData
          schema:
            type: boolean
        - description: The preferred language to use for strings returned by this method.
          in: query
          name: language
          schema:
            type: string
        - description: The ID of the match.
          in: path
          name: matchId
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/TurnBasedMatch"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/games
          Oauth2c:
            - https://www.googleapis.com/auth/games
      tags:
        - turnBasedMatches
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
  "/turnbasedmatches/{matchId}/cancel":
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    put:
      description: Cancel a turn-based match.
      operationId: games.turnBasedMatches.cancel
      parameters:
        - description: The ID of the match.
          in: path
          name: matchId
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/games
          Oauth2c:
            - https://www.googleapis.com/auth/games
      tags:
        - turnBasedMatches
  "/turnbasedmatches/{matchId}/decline":
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    put:
      description: Decline an invitation to play a turn-based match.
      operationId: games.turnBasedMatches.decline
      parameters:
        - description: The preferred language to use for strings returned by this method.
          in: query
          name: language
          schema:
            type: string
        - description: The ID of the match.
          in: path
          name: matchId
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/TurnBasedMatch"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/games
          Oauth2c:
            - https://www.googleapis.com/auth/games
      tags:
        - turnBasedMatches
  "/turnbasedmatches/{matchId}/dismiss":
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    put:
      description: Dismiss a turn-based match from the match list. The match will no longer
        show up in the list and will not generate notifications.
      operationId: games.turnBasedMatches.dismiss
      parameters:
        - description: The ID of the match.
          in: path
          name: matchId
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/games
          Oauth2c:
            - https://www.googleapis.com/auth/games
      tags:
        - turnBasedMatches
  "/turnbasedmatches/{matchId}/finish":
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    put:
      description: Finish a turn-based match. Each player should make this call once, after
        all results are in. Only the player whose turn it is may make the first
        call to Finish, and can pass in the final match state.
      operationId: games.turnBasedMatches.finish
      parameters:
        - description: The preferred language to use for strings returned by this method.
          in: query
          name: language
          schema:
            type: string
        - description: The ID of the match.
          in: path
          name: matchId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TurnBasedMatchResults"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/TurnBasedMatch"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/games
          Oauth2c:
            - https://www.googleapis.com/auth/games
      tags:
        - turnBasedMatches
  "/turnbasedmatches/{matchId}/join":
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    put:
      description: Join a turn-based match.
      operationId: games.turnBasedMatches.join
      parameters:
        - description: The preferred language to use for strings returned by this method.
          in: query
          name: language
          schema:
            type: string
        - description: The ID of the match.
          in: path
          name: matchId
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/TurnBasedMatch"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/games
          Oauth2c:
            - https://www.googleapis.com/auth/games
      tags:
        - turnBasedMatches
  "/turnbasedmatches/{matchId}/leave":
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    put:
      description: Leave a turn-based match when it is not the current player's turn,
        without canceling the match.
      operationId: games.turnBasedMatches.leave
      parameters:
        - description: The preferred language to use for strings returned by this method.
          in: query
          name: language
          schema:
            type: string
        - description: The ID of the match.
          in: path
          name: matchId
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/TurnBasedMatch"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/games
          Oauth2c:
            - https://www.googleapis.com/auth/games
      tags:
        - turnBasedMatches
  "/turnbasedmatches/{matchId}/leaveTurn":
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    put:
      description: Leave a turn-based match during the current player's turn, without
        canceling the match.
      operationId: games.turnBasedMatches.leaveTurn
      parameters:
        - description: The preferred language to use for strings returned by this method.
          in: query
          name: language
          schema:
            type: string
        - description: The ID of the match.
          in: path
          name: matchId
          required: true
          schema:
            type: string
        - description: The version of the match being updated.
          in: query
          name: matchVersion
          required: true
          schema:
            type: integer
        - description: The ID of another participant who should take their turn next. If
            not set, the match will wait for other player(s) to join via
            automatching; this is only valid if automatch criteria is set on the
            match with remaining slots for automatched players.
          in: query
          name: pendingParticipantId
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/TurnBasedMatch"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/games
          Oauth2c:
            - https://www.googleapis.com/auth/games
      tags:
        - turnBasedMatches
  "/turnbasedmatches/{matchId}/rematch":
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Create a rematch of a match that was previously completed, with the same
        participants. This can be called by only one player on a match still in
        their list; the player must have called Finish first. Returns the newly
        created match; it will be the caller's turn.
      operationId: games.turnBasedMatches.rematch
      parameters:
        - description: The preferred language to use for strings returned by this method.
          in: query
          name: language
          schema:
            type: string
        - description: The ID of the match.
          in: path
          name: matchId
          required: true
          schema:
            type: string
        - description: A randomly generated numeric ID for each request specified by the
            caller. This number is used at the server to ensure that the request
            is handled correctly across retries.
          in: query
          name: requestId
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/TurnBasedMatchRematch"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/games
          Oauth2c:
            - https://www.googleapis.com/auth/games
      tags:
        - turnBasedMatches
  "/turnbasedmatches/{matchId}/turn":
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    put:
      description: Commit the results of a player turn.
      operationId: games.turnBasedMatches.takeTurn
      parameters:
        - description: The preferred language to use for strings returned by this method.
          in: query
          name: language
          schema:
            type: string
        - description: The ID of the match.
          in: path
          name: matchId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TurnBasedMatchTurn"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/TurnBasedMatch"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/games
          Oauth2c:
            - https://www.googleapis.com/auth/games
      tags:
        - turnBasedMatches
servers:
  - url: https://www.googleapis.com/games/v1
components:
  parameters:
    alt:
      description: Data format for the response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
        default: json
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    key:
      description: API key. Your API key identifies your project and provides you with API
        access, quota, and reports. Required unless you provide an OAuth 2.0
        token.
      in: query
      name: key
      schema:
        type: string
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
        default: true
    quotaUser:
      description: An opaque string that represents a user for quota purposes. Must not
        exceed 40 characters.
      in: query
      name: quotaUser
      schema:
        type: string
    userIp:
      description: Deprecated. Please use quotaUser instead.
      in: query
      name: userIp
      schema:
        type: string
  securitySchemes:
    Oauth2:
      description: Oauth 2.0 implicit authentication
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes:
            https://www.googleapis.com/auth/drive.appdata: View and manage its own configuration data in your Google Drive
            https://www.googleapis.com/auth/games: Create, edit, and delete your Google Play Games activity
    Oauth2c:
      description: Oauth 2.0 accessCode authentication
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          tokenUrl: https://accounts.google.com/o/oauth2/token
          scopes:
            https://www.googleapis.com/auth/drive.appdata: View and manage its own configuration data in your Google Drive
            https://www.googleapis.com/auth/games: Create, edit, and delete your Google Play Games activity
  schemas:
    AchievementDefinition:
      description: This is a JSON template for an achievement definition object.
      properties:
        achievementType:
          description: |-
            The type of the achievement.
            Possible values are:  
            - "STANDARD" - Achievement is either locked or unlocked. 
            - "INCREMENTAL" - Achievement is incremental.
          type: string
        description:
          description: The description of the achievement.
          type: string
        experiencePoints:
          description: Experience points which will be earned when unlocking this
            achievement.
          format: int64
          type: string
        formattedTotalSteps:
          description: The total steps for an incremental achievement as a string.
          type: string
        id:
          description: The ID of the achievement.
          type: string
        initialState:
          description: |-
            The initial state of the achievement.
            Possible values are:  
            - "HIDDEN" - Achievement is hidden. 
            - "REVEALED" - Achievement is revealed. 
            - "UNLOCKED" - Achievement is unlocked.
          type: string
        isRevealedIconUrlDefault:
          description: Indicates whether the revealed icon image being returned is a
            default image, or is provided by the game.
          type: boolean
        isUnlockedIconUrlDefault:
          description: Indicates whether the unlocked icon image being returned is a
            default image, or is game-provided.
          type: boolean
        kind:
          default: games#achievementDefinition
          description: Uniquely identifies the type of this resource. Value is always the
            fixed string games#achievementDefinition.
          type: string
        name:
          description: The name of the achievement.
          type: string
        revealedIconUrl:
          description: The image URL for the revealed achievement icon.
          type: string
        totalSteps:
          description: The total steps for an incremental achievement.
          format: int32
          type: integer
        unlockedIconUrl:
          description: The image URL for the unlocked achievement icon.
          type: string
      type: object
    AchievementDefinitionsListResponse:
      description: This is a JSON template for a list of achievement definition objects.
      properties:
        items:
          description: The achievement definitions.
          items:
            $ref: "#/components/schemas/AchievementDefinition"
          type: array
        kind:
          default: games#achievementDefinitionsListResponse
          description: Uniquely identifies the type of this resource. Value is always the
            fixed string games#achievementDefinitionsListResponse.
          type: string
        nextPageToken:
          description: Token corresponding to the next page of results.
          type: string
      type: object
    AchievementIncrementResponse:
      description: This is a JSON template for an achievement increment response
      properties:
        currentSteps:
          description: The current steps recorded for this incremental achievement.
          format: int32
          type: integer
        kind:
          default: games#achievementIncrementResponse
          description: Uniquely identifies the type of this resource. Value is always the
            fixed string games#achievementIncrementResponse.
          type: string
        newlyUnlocked:
          description: Whether the current steps for the achievement has reached the number
            of steps required to unlock.
          type: boolean
      type: object
    AchievementRevealResponse:
      description: This is a JSON template for an achievement reveal response
      properties:
        currentState:
          description: >-
            The current state of the achievement for which a reveal was
            attempted. This might be UNLOCKED if the achievement was already
            unlocked.

            Possible values are:  

            - "REVEALED" - Achievement is revealed. 

            - "UNLOCKED" - Achievement is unlocked.
          type: string
        kind:
          default: games#achievementRevealResponse
          description: Uniquely identifies the type of this resource. Value is always the
            fixed string games#achievementRevealResponse.
          type: string
      type: object
    AchievementSetStepsAtLeastResponse:
      description: This is a JSON template for an achievement set steps at least response.
      properties:
        currentSteps:
          description: The current steps recorded for this incremental achievement.
          format: int32
          type: integer
        kind:
          default: games#achievementSetStepsAtLeastResponse
          description: Uniquely identifies the type of this resource. Value is always the
            fixed string games#achievementSetStepsAtLeastResponse.
          type: string
        newlyUnlocked:
          description: Whether the the current steps for the achievement has reached the
            number of steps required to unlock.
          type: boolean
      type: object
    AchievementUnlockResponse:
      description: This is a JSON template for an achievement unlock response
      properties:
        kind:
          default: games#achievementUnlockResponse
          description: Uniquely identifies the type of this resource. Value is always the
            fixed string games#achievementUnlockResponse.
          type: string
        newlyUnlocked:
          description: Whether this achievement was newly unlocked (that is, whether the
            unlock request for the achievement was the first for the player).
          type: boolean
      type: object
    AchievementUpdateMultipleRequest:
      description: This is a JSON template for a list of achievement update requests.
      properties:
        kind:
          default: games#achievementUpdateMultipleRequest
          description: Uniquely identifies the type of this resource. Value is always the
            fixed string games#achievementUpdateMultipleRequest.
          type: string
        updates:
          description: The individual achievement update requests.
          items:
            $ref: "#/components/schemas/AchievementUpdateRequest"
          type: array
      type: object
    AchievementUpdateMultipleResponse:
      description: This is a JSON template for an achievement unlock response.
      properties:
        kind:
          default: games#achievementUpdateMultipleResponse
          description: Uniquely identifies the type of this resource. Value is always the
            fixed string games#achievementUpdateListResponse.
          type: string
        updatedAchievements:
          description: The updated state of the achievements.
          items:
            $ref: "#/components/schemas/AchievementUpdateResponse"
          type: array
      type: object
    AchievementUpdateRequest:
      description: This is a JSON template for a request to update an achievement.
      properties:
        achievementId:
          description: The achievement this update is being applied to.
          type: string
        incrementPayload:
          $ref: "#/components/schemas/GamesAchievementIncrement"
        kind:
          default: games#achievementUpdateRequest
          description: Uniquely identifies the type of this resource. Value is always the
            fixed string games#achievementUpdateRequest.
          type: string
        setStepsAtLeastPayload:
          $ref: "#/components/schemas/GamesAchievementSetStepsAtLeast"
        updateType:
          description: >-
            The type of update being applied.

            Possible values are:  

            - "REVEAL" - Achievement is revealed. 

            - "UNLOCK" - Achievement is unlocked. 

            - "INCREMENT" - Achievement is incremented. 

            - "SET_STEPS_AT_LEAST" - Achievement progress is set to at least the passed value.
          type: string
      type: object
    AchievementUpdateResponse:
      description: This is a JSON template for an achievement update response.
      properties:
        achievementId:
          description: The achievement this update is was applied to.
          type: string
        currentState:
          description: |-
            The current state of the achievement.
            Possible values are:  
            - "HIDDEN" - Achievement is hidden. 
            - "REVEALED" - Achievement is revealed. 
            - "UNLOCKED" - Achievement is unlocked.
          type: string
        currentSteps:
          description: The current steps recorded for this achievement if it is incremental.
          format: int32
          type: integer
        kind:
          default: games#achievementUpdateResponse
          description: Uniquely identifies the type of this resource. Value is always the
            fixed string games#achievementUpdateResponse.
          type: string
        newlyUnlocked:
          description: Whether this achievement was newly unlocked (that is, whether the
            unlock request for the achievement was the first for the player).
          type: boolean
        updateOccurred:
          description: Whether the requested updates actually affected the achievement.
          type: boolean
      type: object
    AggregateStats:
      description: This is a JSON template for aggregate stats.
      properties:
        count:
          description: The number of messages sent between a pair of peers.
          format: int64
          type: string
        kind:
          default: games#aggregateStats
          description: Uniquely identifies the type of this resource. Value is always the
            fixed string games#aggregateStats.
          type: string
        max:
          description: The maximum amount.
          format: int64
          type: string
        min:
          description: The minimum amount.
          format: int64
          type: string
        sum:
          description: The total number of bytes sent for messages between a pair of peers.
          format: int64
          type: string
      type: object
    AnonymousPlayer:
      description: This is a JSON template for an anonymous player
      properties:
        avatarImageUrl:
          description: The base URL for the image to display for the anonymous player.
          type: string
        displayName:
          description: The name to display for the anonymous player.
          type: string
        kind:
          default: games#anonymousPlayer
          description: Uniquely identifies the type of this resource. Value is always the
            fixed string games#anonymousPlayer.
          type: string
      type: object
    Application:
      description: This is a JSON template for the Application resource.
      properties:
        achievement_count:
          description: The number of achievements visible to the currently authenticated
            player.
          format: int32
          type: integer
        assets:
          description: The assets of the application.
          items:
            $ref: "#/components/schemas/ImageAsset"
          type: array
        author:
          description: The author of the application.
          type: string
        category:
          $ref: "#/components/schemas/ApplicationCategory"
        description:
          description: The description of the application.
          type: string
        enabledFeatures:
          description: |-
            A list of features that have been enabled for the application.
            Possible values are:  
            - "SNAPSHOTS" - Snapshots has been enabled
          items:
            type: string
          type: array
        id:
          description: The ID of the application.
          type: string
        instances:
          description: The instances of the application.
          items:
            $ref: "#/components/schemas/Instance"
          type: array
        kind:
          default: games#application
          description: Uniquely identifies the type of this resource. Value is always the
            fixed string games#application.
          type: string
        lastUpdatedTimestamp:
          description: The last updated timestamp of the application.
          format: int64
          type: string
        leaderboard_count:
          description: The number of leaderboards visible to the currently authenticated
            player.
          format: int32
          type: integer
        name:
          description: The name of the application.
          type: string
        themeColor:
          description: A hint to the client UI for what color to use as an app-themed
            color. The color is given as an RGB triplet (e.g. "E0E0E0").
          type: string
      type: object
    ApplicationCategory:
      description: This is a JSON template for an application category object.
      properties:
        kind:
          default: games#applicationCategory
          description: Uniquely identifies the type of this resource. Value is always the
            fixed string games#applicationCategory.
          type: string
        primary:
          description: The primary category.
          type: string
        secondary:
          description: The secondary category.
          type: string
      type: object
    ApplicationVerifyResponse:
      description: This is a JSON template for a third party application verification
        response resource.
      properties:
        alternate_player_id:
          description: An alternate ID that was once used for the player that was issued
            the auth token used in this request. (This field is not normally
            populated.)
          type: string
        kind:
          default: games#applicationVerifyResponse
          description: Uniquely identifies the type of this resource. Value is always the
            fixed string games#applicationVerifyResponse.
          type: string
        player_id:
          description: The ID of the player that was issued the auth token used in this
            request.
          type: string
      type: object
    Category:
      description: This is a JSON template for data related to individual game categories.
      properties:
        category:
          description: The category name.
          type: string
        experiencePoints:
          description: Experience points earned in this category.
          format: int64
          type: string
        kind:
          default: games#category
          description: Uniquely identifies the type of this resource. Value is always the
            fixed string games#category.
          type: string
      type: object
    CategoryListResponse:
      description: This is a JSON template for a list of category data objects.
      properties:
        items:
          description: The list of categories with usage data.
          items:
            $ref: "#/components/schemas/Category"
          type: array
        kind:
          default: games#categoryListResponse
          description: Uniquely identifies the type of this resource. Value is always the
            fixed string games#categoryListResponse.
          type: string
        nextPageToken:
          description: Token corresponding to the next page of results.
          type: string
      type: object
    EventBatchRecordFailure:
      description: This is a JSON template for a batch update failure resource.
      properties:
        failureCause:
          description: >-
            The cause for the update failure.

            Possible values are:  

            - "TOO_LARGE": A batch request was issued with more events than are allowed in a single batch. 

            - "TIME_PERIOD_EXPIRED": A batch was sent with data too far in the past to record. 

            - "TIME_PERIOD_SHORT": A batch was sent with a time range that was too short. 

            - "TIME_PERIOD_LONG": A batch was sent with a time range that was too long. 

            - "ALREADY_UPDATED": An attempt was made to record a batch of data which was already seen. 

            - "RECORD_RATE_HIGH": An attempt was made to record data faster than the server will apply updates.
          type: string
        kind:
          default: games#eventBatchRecordFailure
          description: Uniquely identifies the type of this resource. Value is always the
            fixed string games#eventBatchRecordFailure.
          type: string
        range:
          $ref: "#/components/schemas/EventPeriodRange"
      type: object
    EventChild:
      description: This is a JSON template for an event child relationship resource.
      properties:
        childId:
          description: The ID of the child event.
          type: string
        kind:
          default: games#eventChild
          description: Uniquely identifies the type of this resource. Value is always the
            fixed string games#eventChild.
          type: string
      type: object
    EventDefinition:
      description: This is a JSON template for an event definition resource.
      properties:
        childEvents:
          description: A list of events that are a child of this event.
          items:
            $ref: "#/components/schemas/EventChild"
          type: array
        description:
          description: Description of what this event represents.
          type: string
        displayName:
          description: The name to display for the event.
          type: string
        id:
          description: The ID of the event.
          type: string
        imageUrl:
          description: The base URL for the image that represents the event.
          type: string
        isDefaultImageUrl:
          description: Indicates whether the icon image being returned is a default image,
            or is game-provided.
          type: boolean
        kind:
          default: games#eventDefinition
          description: Uniquely identifies the type of this resource. Value is always the
            fixed string games#eventDefinition.
          type: string
        visibility:
          description: >-
            The visibility of event being tracked in this definition.

            Possible values are:  

            - "REVEALED": This event should be visible to all users. 

            - "HIDDEN": This event should only be shown to users that have recorded this event at least once.
          type: string
      type: object
    EventDefinitionListResponse:
      description: This is a JSON template for a ListDefinitions response.
      properties:
        items:
          description: The event definitions.
          items:
            $ref: "#/components/schemas/EventDefinition"
          type: array
        kind:
          default: games#eventDefinitionListResponse
          description: Uniquely identifies the type of this resource. Value is always the
            fixed string games#eventDefinitionListResponse.
          type: string
        nextPageToken:
          description: The pagination token for the next page of results.
          type: string
      type: object
    EventPeriodRange:
      description: This is a JSON template for an event period time range.
      properties:
        kind:
          default: games#eventPeriodRange
          description: Uniquely identifies the type of this resource. Value is always the
            fixed string games#eventPeriodRange.
          type: string
        periodEndMillis:
          description: The time when this update period ends, in millis, since 1970 UTC
            (Unix Epoch).
          format: int64
          type: string
        periodStartMillis:
          description: The time when this update period begins, in millis, since 1970 UTC
            (Unix Epoch).
          format: int64
          type: string
      type: object
    EventPeriodUpdate:
      description: This is a JSON template for an event period update resource.
      properties:
        kind:
          default: games#eventPeriodUpdate
          description: Uniquely identifies the type of this resource. Value is always the
            fixed string games#eventPeriodUpdate.
          type: string
        timePeriod:
          $ref: "#/components/schemas/EventPeriodRange"
        updates:
          description: The updates being made for this time period.
          items:
            $ref: "#/components/schemas/EventUpdateRequest"
          type: array
      type: object
    EventRecordFailure:
      description: This is a JSON template for an event update failure resource.
      properties:
        eventId:
          description: The ID of the event that was not updated.
          type: string
        failureCause:
          description: >-
            The cause for the update failure.

            Possible values are:  

            - "NOT_FOUND" - An attempt was made to set an event that was not defined. 

            - "INVALID_UPDATE_VALUE" - An attempt was made to increment an event by a non-positive value.
          type: string
        kind:
          default: games#eventRecordFailure
          description: Uniquely identifies the type of this resource. Value is always the
            fixed string games#eventRecordFailure.
          type: string
      type: object
    EventRecordRequest:
      description: This is a JSON template for an event period update resource.
      properties:
        currentTimeMillis:
          description: The current time when this update was sent, in milliseconds, since
            1970 UTC (Unix Epoch).
          format: int64
          type: string
        kind:
          default: games#eventRecordRequest
          description: Uniquely identifies the type of this resource. Value is always the
            fixed string games#eventRecordRequest.
          type: string
        requestId:
          description: The request ID used to identify this attempt to record events.
          format: int64
          type: string
        timePeriods:
          description: A list of the time period updates being made in this request.
          items:
            $ref: "#/components/schemas/EventPeriodUpdate"
          type: array
      type: object
    EventUpdateRequest:
      description: This is a JSON template for an event period update resource.
      properties:
        definitionId:
          description: The ID of the event being modified in this update.
          type: string
        kind:
          default: games#eventUpdateRequest
          description: Uniquely identifies the type of this resource. Value is always the
            fixed string games#eventUpdateRequest.
          type: string
        updateCount:
          description: The number of times this event occurred in this time period.
          format: int64
          type: string
      type: object
    EventUpdateResponse:
      description: This is a JSON template for an event period update resource.
      properties:
        batchFailures:
          description: Any batch-wide failures which occurred applying updates.
          items:
            $ref: "#/components/schemas/EventBatchRecordFailure"
          type: array
        eventFailures:
          description: Any failures updating a particular event.
          items:
            $ref: "#/components/schemas/EventRecordFailure"
          type: array
        kind:
          default: games#eventUpdateResponse
          description: Uniquely identifies the type of this resource. Value is always the
            fixed string games#eventUpdateResponse.
          type: string
        playerEvents:
          description: The current status of any updated events
          items:
            $ref: "#/components/schemas/PlayerEvent"
          type: array
      type: object
    GamesAchievementIncrement:
      description: This is a JSON template for the payload to request to increment an
        achievement.
      properties:
        kind:
          default: games#GamesAchievementIncrement
          description: Uniquely identifies the type of this resource. Value is always the
            fixed string games#GamesAchievementIncrement.
          type: string
        requestId:
          description: The requestId associated with an increment to an achievement.
          format: int64
          type: string
        steps:
          description: The number of steps to be incremented.
          format: int32
          type: integer
      type: object
    GamesAchievementSetStepsAtLeast:
      description: This is a JSON template for the payload to request to increment an
        achievement.
      properties:
        kind:
          default: games#GamesAchievementSetStepsAtLeast
          description: Uniquely identifies the type of this resource. Value is always the
            fixed string games#GamesAchievementSetStepsAtLeast.
          type: string
        steps:
          description: The minimum number of steps for the achievement to be set to.
          format: int32
          type: integer
      type: object
    ImageAsset:
      description: This is a JSON template for an image asset object.
      properties:
        height:
          description: The height of the asset.
          format: int32
          type: integer
        kind:
          default: games#imageAsset
          description: Uniquely identifies the type of this resource. Value is always the
            fixed string games#imageAsset.
          type: string
        name:
          description: The name of the asset.
          type: string
        url:
          description: The URL of the asset.
          type: string
        width:
          description: The width of the asset.
          format: int32
          type: integer
      type: object
    Instance:
      description: This is a JSON template for the Instance resource.
      properties:
        acquisitionUri:
          description: URI which shows where a user can acquire this instance.
          type: string
        androidInstance:
          $ref: "#/components/schemas/InstanceAndroidDetails"
        iosInstance:
          $ref: "#/components/schemas/InstanceIosDetails"
        kind:
          default: games#instance
          description: Uniquely identifies the type of this resource. Value is always the
            fixed string games#instance.
          type: string
        name:
          description: Localized display name.
          type: string
        platformType:
          description: |-
            The platform type.
            Possible values are:  
            - "ANDROID" - Instance is for Android. 
            - "IOS" - Instance is for iOS 
            - "WEB_APP" - Instance is for Web App.
          type: string
        realtimePlay:
          description: Flag to show if this game instance supports realtime play.
          type: boolean
        turnBasedPlay:
          description: Flag to show if this game instance supports turn based play.
          type: boolean
        webInstance:
          $ref: "#/components/schemas/InstanceWebDetails"
      type: object
    InstanceAndroidDetails:
      description: This is a JSON template for the Android instance details resource.
      properties:
        enablePiracyCheck:
          description: Flag indicating whether the anti-piracy check is enabled.
          type: boolean
        kind:
          default: games#instanceAndroidDetails
          description: Uniquely identifies the type of this resource. Value is always the
            fixed string games#instanceAndroidDetails.
          type: string
        packageName:
          description: Android package name which maps to Google Play URL.
          type: string
        preferred:
          description: Indicates that this instance is the default for new installations.
          type: boolean
      type: object
    InstanceIosDetails:
      description: This is a JSON template for the iOS details resource.
      properties:
        bundleIdentifier:
          description: Bundle identifier.
          type: string
        itunesAppId:
          description: iTunes App ID.
          type: string
        kind:
          default: games#instanceIosDetails
          description: Uniquely identifies the type of this resource. Value is always the
            fixed string games#instanceIosDetails.
          type: string
        preferredForIpad:
          description: Indicates that this instance is the default for new installations on
            iPad devices.
          type: boolean
        preferredForIphone:
          description: Indicates that this instance is the default for new installations on
            iPhone devices.
          type: boolean
        supportIpad:
          description: Flag to indicate if this instance supports iPad.
          type: boolean
        supportIphone:
          description: Flag to indicate if this instance supports iPhone.
          type: boolean
      type: object
    InstanceWebDetails:
      description: This is a JSON template for the Web details resource.
      properties:
        kind:
          default: games#instanceWebDetails
          description: Uniquely identifies the type of this resource. Value is always the
            fixed string games#instanceWebDetails.
          type: string
        launchUrl:
          description: Launch URL for the game.
          type: string
        preferred:
          description: Indicates that this instance is the default for new installations.
          type: boolean
      type: object
    Leaderboard:
      description: This is a JSON template for the Leaderboard resource.
      properties:
        iconUrl:
          description: The icon for the leaderboard.
          type: string
        id:
          description: The leaderboard ID.
          type: string
        isIconUrlDefault:
          description: Indicates whether the icon image being returned is a default image,
            or is game-provided.
          type: boolean
        kind:
          default: games#leaderboard
          description: Uniquely identifies the type of this resource. Value is always the
            fixed string games#leaderboard.
          type: string
        name:
          description: The name of the leaderboard.
          type: string
        order:
          description: >-
            How scores are ordered.

            Possible values are:  

            - "LARGER_IS_BETTER" - Larger values are better; scores are sorted in descending order. 

            - "SMALLER_IS_BETTER" - Smaller values are better; scores are sorted in ascending order.
          type: string
      type: object
    LeaderboardEntry:
      description: This is a JSON template for the Leaderboard Entry resource.
      properties:
        formattedScore:
          description: The localized string for the numerical value of this score.
          type: string
        formattedScoreRank:
          description: The localized string for the rank of this score for this leaderboard.
          type: string
        kind:
          default: games#leaderboardEntry
          description: Uniquely identifies the type of this resource. Value is always the
            fixed string games#leaderboardEntry.
          type: string
        player:
          $ref: "#/components/schemas/Player"
        scoreRank:
          description: The rank of this score for this leaderboard.
          format: int64
          type: string
        scoreTag:
          description: Additional information about the score. Values must contain no more
            than 64 URI-safe characters as defined by section 2.3 of RFC 3986.
          type: string
        scoreValue:
          description: The numerical value of this score.
          format: int64
          type: string
        timeSpan:
          description: |-
            The time span of this high score.
            Possible values are:  
            - "ALL_TIME" - The score is an all-time high score. 
            - "WEEKLY" - The score is a weekly high score. 
            - "DAILY" - The score is a daily high score.
          type: string
        writeTimestampMillis:
          description: The timestamp at which this score was recorded, in milliseconds
            since the epoch in UTC.
          format: int64
          type: string
      type: object
    LeaderboardListResponse:
      description: This is a JSON template for a list of leaderboard objects.
      properties:
        items:
          description: The leaderboards.
          items:
            $ref: "#/components/schemas/Leaderboard"
          type: array
        kind:
          default: games#leaderboardListResponse
          description: Uniquely identifies the type of this resource. Value is always the
            fixed string games#leaderboardListResponse.
          type: string
        nextPageToken:
          description: Token corresponding to the next page of results.
          type: string
      type: object
    LeaderboardScoreRank:
      description: This is a JSON template for a score rank in a leaderboard.
      properties:
        formattedNumScores:
          description: The number of scores in the leaderboard as a string.
          type: string
        formattedRank:
          description: The rank in the leaderboard as a string.
          type: string
        kind:
          default: games#leaderboardScoreRank
          description: Uniquely identifies the type of this resource. Value is always the
            fixed string games#leaderboardScoreRank.
          type: string
        numScores:
          description: The number of scores in the leaderboard.
          format: int64
          type: string
        rank:
          description: The rank in the leaderboard.
          format: int64
          type: string
      type: object
    LeaderboardScores:
      description: This is a JSON template for a ListScores response.
      properties:
        items:
          description: The scores in the leaderboard.
          items:
            $ref: "#/components/schemas/LeaderboardEntry"
          type: array
        kind:
          default: games#leaderboardScores
          description: Uniquely identifies the type of this resource. Value is always the
            fixed string games#leaderboardScores.
          type: string
        nextPageToken:
          description: The pagination token for the next page of results.
          type: string
        numScores:
          description: The total number of scores in the leaderboard.
          format: int64
          type: string
        playerScore:
          $ref: "#/components/schemas/LeaderboardEntry"
        prevPageToken:
          description: The pagination token for the previous page of results.
          type: string
      type: object
    MetagameConfig:
      description: This is a JSON template for the metagame config resource
      properties:
        currentVersion:
          description: Current version of the metagame configuration data. When this data
            is updated, the version number will be increased by one.
          format: int32
          type: integer
        kind:
          default: games#metagameConfig
          description: Uniquely identifies the type of this resource. Value is always the
            fixed string games#metagameConfig.
          type: string
        playerLevels:
          description: The list of player levels.
          items:
            $ref: "#/components/schemas/PlayerLevel"
          type: array
      type: object
    NetworkDiagnostics:
      description: This is a JSON template for network diagnostics reported for a client.
      properties:
        androidNetworkSubtype:
          description: The Android network subtype.
          format: int32
          type: integer
        androidNetworkType:
          description: The Android network type.
          format: int32
          type: integer
        iosNetworkType:
          description: iOS network type as defined in Reachability.h.
          format: int32
          type: integer
        kind:
          default: games#networkDiagnostics
          description: Uniquely identifies the type of this resource. Value is always the
            fixed string games#networkDiagnostics.
          type: string
        networkOperatorCode:
          description: "The MCC+MNC code for the client's network connection. On Android:
            http://developer.android.com/reference/android/telephony/TelephonyM\
            anager.html#getNetworkOperator() On iOS, see:
            https://developer.apple.com/library/ios/documentation/NetworkingInt\
            ernet/Reference/CTCarrier/Reference/Reference.html"
          type: string
        networkOperatorName:
          description: "The name of the carrier of the client's network connection. On
            Android:
            http://developer.android.com/reference/android/telephony/TelephonyM\
            anager.html#getNetworkOperatorName() On iOS:
            https://developer.apple.com/library/ios/documentation/NetworkingInt\
            ernet/Reference/CTCarrier/Reference/Reference.html#//apple_ref/occ/\
            instp/CTCarrier/carrierName"
          type: string
        registrationLatencyMillis:
          description: The amount of time in milliseconds it took for the client to
            establish a connection with the XMPP server.
          format: int32
          type: integer
      type: object
    ParticipantResult:
      description: This is a JSON template for a result for a match participant.
      properties:
        kind:
          default: games#participantResult
          description: Uniquely identifies the type of this resource. Value is always the
            fixed string games#participantResult.
          type: string
        participantId:
          description: The ID of the participant.
          type: string
        placing:
          description: The placement or ranking of the participant in the match results; a
            number from one to the number of participants in the match. Multiple
            participants may have the same placing value in case of a type.
          format: int32
          type: integer
        result:
          description: >-
            The result of the participant for this match.

            Possible values are:  

            - "MATCH_RESULT_WIN" - The participant won the match. 

            - "MATCH_RESULT_LOSS" - The participant lost the match. 

            - "MATCH_RESULT_TIE" - The participant tied the match. 

            - "MATCH_RESULT_NONE" - There was no winner for the match (nobody wins or loses this kind of game.) 

            - "MATCH_RESULT_DISCONNECT" - The participant disconnected / left during the match. 

            - "MATCH_RESULT_DISAGREED" - Different clients reported different results for this participant.
          type: string
      type: object
    PeerChannelDiagnostics:
      description: This is a JSON template for peer channel diagnostics.
      properties:
        bytesReceived:
          $ref: "#/components/schemas/AggregateStats"
        bytesSent:
          $ref: "#/components/schemas/AggregateStats"
        kind:
          default: games#peerChannelDiagnostics
          description: Uniquely identifies the type of this resource. Value is always the
            fixed string games#peerChannelDiagnostics.
          type: string
        numMessagesLost:
          description: Number of messages lost.
          format: int32
          type: integer
        numMessagesReceived:
          description: Number of messages received.
          format: int32
          type: integer
        numMessagesSent:
          description: Number of messages sent.
          format: int32
          type: integer
        numSendFailures:
          description: Number of send failures.
          format: int32
          type: integer
        roundtripLatencyMillis:
          $ref: "#/components/schemas/AggregateStats"
      type: object
    PeerSessionDiagnostics:
      description: This is a JSON template for peer session diagnostics.
      properties:
        connectedTimestampMillis:
          description: Connected time in milliseconds.
          format: int64
          type: string
        kind:
          default: games#peerSessionDiagnostics
          description: Uniquely identifies the type of this resource. Value is always the
            fixed string games#peerSessionDiagnostics.
          type: string
        participantId:
          description: The participant ID of the peer.
          type: string
        reliableChannel:
          $ref: "#/components/schemas/PeerChannelDiagnostics"
        unreliableChannel:
          $ref: "#/components/schemas/PeerChannelDiagnostics"
      type: object
    Played:
      description: This is a JSON template for metadata about a player playing a game with
        the currently authenticated user.
      properties:
        autoMatched:
          description: True if the player was auto-matched with the currently authenticated
            user.
          type: boolean
        kind:
          default: games#played
          description: Uniquely identifies the type of this resource. Value is always the
            fixed string games#played.
          type: string
        timeMillis:
          description: The last time the player played the game in milliseconds since the
            epoch in UTC.
          format: int64
          type: string
      type: object
    Player:
      description: This is a JSON template for a Player resource.
      properties:
        avatarImageUrl:
          description: The base URL for the image that represents the player.
          type: string
        bannerUrlLandscape:
          description: The url to the landscape mode player banner image.
          type: string
        bannerUrlPortrait:
          description: The url to the portrait mode player banner image.
          type: string
        displayName:
          description: The name to display for the player.
          type: string
        experienceInfo:
          $ref: "#/components/schemas/PlayerExperienceInfo"
        kind:
          default: games#player
          description: Uniquely identifies the type of this resource. Value is always the
            fixed string games#player.
          type: string
        lastPlayedWith:
          $ref: "#/components/schemas/Played"
        name:
          description: An object representation of the individual components of the
            player's name. For some players, these fields may not be present.
          properties:
            familyName:
              description: The family name of this player. In some places, this is known as
                the last name.
              type: string
            givenName:
              description: The given name of this player. In some places, this is known as
                the first name.
              type: string
          type: object
        originalPlayerId:
          description: The player ID that was used for this player the first time they
            signed into the game in question. This is only populated for calls
            to player.get for the requesting player, only if the player ID has
            subsequently changed, and only to clients that support remapping
            player IDs.
          type: string
        playerId:
          description: The ID of the player.
          type: string
        profileSettings:
          $ref: "#/components/schemas/ProfileSettings"
        title:
          description: The player's title rewarded for their game activities.
          type: string
      type: object
    PlayerAchievement:
      description: This is a JSON template for an achievement object.
      properties:
        achievementState:
          description: |-
            The state of the achievement.
            Possible values are:  
            - "HIDDEN" - Achievement is hidden. 
            - "REVEALED" - Achievement is revealed. 
            - "UNLOCKED" - Achievement is unlocked.
          type: string
        currentSteps:
          description: The current steps for an incremental achievement.
          format: int32
          type: integer
        experiencePoints:
          description: Experience points earned for the achievement. This field is absent
            for achievements that have not yet been unlocked and 0 for
            achievements that have been unlocked by testers but that are
            unpublished.
          format: int64
          type: string
        formattedCurrentStepsString:
          description: The current steps for an incremental achievement as a string.
          type: string
        id:
          description: The ID of the achievement.
          type: string
        kind:
          default: games#playerAchievement
          description: Uniquely identifies the type of this resource. Value is always the
            fixed string games#playerAchievement.
          type: string
        lastUpdatedTimestamp:
          description: The timestamp of the last modification to this achievement's state.
          format: int64
          type: string
      type: object
    PlayerAchievementListResponse:
      description: This is a JSON template for a list of achievement objects.
      properties:
        items:
          description: The achievements.
          items:
            $ref: "#/components/schemas/PlayerAchievement"
          type: array
        kind:
          default: games#playerAchievementListResponse
          description: Uniquely identifies the type of this resource. Value is always the
            fixed string games#playerAchievementListResponse.
          type: string
        nextPageToken:
          description: Token corresponding to the next page of results.
          type: string
      type: object
    PlayerEvent:
      description: This is a JSON template for an event status resource.
      properties:
        definitionId:
          description: The ID of the event definition.
          type: string
        formattedNumEvents:
          description: The current number of times this event has occurred, as a string.
            The formatting of this string depends on the configuration of your
            event in the Play Games Developer Console.
          type: string
        kind:
          default: games#playerEvent
          description: Uniquely identifies the type of this resource. Value is always the
            fixed string games#playerEvent.
          type: string
        numEvents:
          description: The current number of times this event has occurred.
          format: int64
          type: string
        playerId:
          description: The ID of the player.
          type: string
      type: object
    PlayerEventListResponse:
      description: This is a JSON template for a ListByPlayer response.
      properties:
        items:
          description: The player events.
          items:
            $ref: "#/components/schemas/PlayerEvent"
          type: array
        kind:
          default: games#playerEventListResponse
          description: Uniquely identifies the type of this resource. Value is always the
            fixed string games#playerEventListResponse.
          type: string
        nextPageToken:
          description: The pagination token for the next page of results.
          type: string
      type: object
    PlayerExperienceInfo:
      description: This is a JSON template for 1P/3P metadata about the player's experience.
      properties:
        currentExperiencePoints:
          description: The current number of experience points for the player.
          format: int64
          type: string
        currentLevel:
          $ref: "#/components/schemas/PlayerLevel"
        kind:
          default: games#playerExperienceInfo
          description: Uniquely identifies the type of this resource. Value is always the
            fixed string games#playerExperienceInfo.
          type: string
        lastLevelUpTimestampMillis:
          description: The timestamp when the player was leveled up, in millis since Unix
            epoch UTC.
          format: int64
          type: string
        nextLevel:
          $ref: "#/components/schemas/PlayerLevel"
      type: object
    PlayerLeaderboardScore:
      description: This is a JSON template for a player leaderboard score object.
      properties:
        kind:
          default: games#playerLeaderboardScore
          description: Uniquely identifies the type of this resource. Value is always the
            fixed string games#playerLeaderboardScore.
          type: string
        leaderboard_id:
          description: The ID of the leaderboard this score is in.
          type: string
        publicRank:
          $ref: "#/components/schemas/LeaderboardScoreRank"
        scoreString:
          description: The formatted value of this score.
          type: string
        scoreTag:
          description: Additional information about the score. Values must contain no more
            than 64 URI-safe characters as defined by section 2.3 of RFC 3986.
          type: string
        scoreValue:
          description: The numerical value of this score.
          format: int64
          type: string
        socialRank:
          $ref: "#/components/schemas/LeaderboardScoreRank"
        timeSpan:
          description: |-
            The time span of this score.
            Possible values are:  
            - "ALL_TIME" - The score is an all-time score. 
            - "WEEKLY" - The score is a weekly score. 
            - "DAILY" - The score is a daily score.
          type: string
        writeTimestamp:
          description: The timestamp at which this score was recorded, in milliseconds
            since the epoch in UTC.
          format: int64
          type: string
      type: object
    PlayerLeaderboardScoreListResponse:
      description: This is a JSON template for a list of player leaderboard scores.
      properties:
        items:
          description: The leaderboard scores.
          items:
            $ref: "#/components/schemas/PlayerLeaderboardScore"
          type: array
        kind:
          default: games#playerLeaderboardScoreListResponse
          description: Uniquely identifies the type of this resource. Value is always the
            fixed string games#playerLeaderboardScoreListResponse.
          type: string
        nextPageToken:
          description: The pagination token for the next page of results.
          type: string
        player:
          $ref: "#/components/schemas/Player"
      type: object
    PlayerLevel:
      description: This is a JSON template for 1P/3P metadata about a user's level.
      properties:
        kind:
          default: games#playerLevel
          description: Uniquely identifies the type of this resource. Value is always the
            fixed string games#playerLevel.
          type: string
        level:
          description: The level for the user.
          format: int32
          type: integer
        maxExperiencePoints:
          description: The maximum experience points for this level.
          format: int64
          type: string
        minExperiencePoints:
          description: The minimum experience points for this level.
          format: int64
          type: string
      type: object
    PlayerListResponse:
      description: This is a JSON template for a third party player list response.
      properties:
        items:
          description: The players.
          items:
            $ref: "#/components/schemas/Player"
          type: array
        kind:
          default: games#playerListResponse
          description: Uniquely identifies the type of this resource. Value is always the
            fixed string games#playerListResponse.
          type: string
        nextPageToken:
          description: Token corresponding to the next page of results.
          type: string
      type: object
    PlayerScore:
      description: This is a JSON template for a player score.
      properties:
        formattedScore:
          description: The formatted score for this player score.
          type: string
        kind:
          default: games#playerScore
          description: Uniquely identifies the type of this resource. Value is always the
            fixed string games#playerScore.
          type: string
        score:
          description: The numerical value for this player score.
          format: int64
          type: string
        scoreTag:
          description: Additional information about this score. Values will contain no more
            than 64 URI-safe characters as defined by section 2.3 of RFC 3986.
          type: string
        timeSpan:
          description: |-
            The time span for this player score.
            Possible values are:  
            - "ALL_TIME" - The score is an all-time score. 
            - "WEEKLY" - The score is a weekly score. 
            - "DAILY" - The score is a daily score.
          type: string
      type: object
    PlayerScoreListResponse:
      description: This is a JSON template for a list of score submission statuses.
      properties:
        kind:
          default: games#playerScoreListResponse
          description: Uniquely identifies the type of this resource. Value is always the
            fixed string games#playerScoreListResponse.
          type: string
        submittedScores:
          description: The score submissions statuses.
          items:
            $ref: "#/components/schemas/PlayerScoreResponse"
          type: array
      type: object
    PlayerScoreResponse:
      description: This is a JSON template for a list of leaderboard entry resources.
      properties:
        beatenScoreTimeSpans:
          description: >-
            The time spans where the submitted score is better than the existing
            score for that time span.

            Possible values are:  

            - "ALL_TIME" - The score is an all-time score. 

            - "WEEKLY" - The score is a weekly score. 

            - "DAILY" - The score is a daily score.
          items:
            type: string
          type: array
        formattedScore:
          description: The formatted value of the submitted score.
          type: string
        kind:
          default: games#playerScoreResponse
          description: Uniquely identifies the type of this resource. Value is always the
            fixed string games#playerScoreResponse.
          type: string
        leaderboardId:
          description: The leaderboard ID that this score was submitted to.
          type: string
        scoreTag:
          description: Additional information about this score. Values will contain no more
            than 64 URI-safe characters as defined by section 2.3 of RFC 3986.
          type: string
        unbeatenScores:
          description: The scores in time spans that have not been beaten. As an example,
            the submitted score may be better than the player's DAILY score, but
            not better than the player's scores for the WEEKLY or ALL_TIME time
            spans.
          items:
            $ref: "#/components/schemas/PlayerScore"
          type: array
      type: object
    PlayerScoreSubmissionList:
      description: This is a JSON template for a list of score submission requests
      properties:
        kind:
          default: games#playerScoreSubmissionList
          description: Uniquely identifies the type of this resource. Value is always the
            fixed string games#playerScoreSubmissionList.
          type: string
        scores:
          description: The score submissions.
          items:
            $ref: "#/components/schemas/ScoreSubmission"
          type: array
      type: object
    ProfileSettings:
      description: This is a JSON template for profile settings
      properties:
        kind:
          default: games#profileSettings
          description: Uniquely identifies the type of this resource. Value is always the
            fixed string games#profileSettings.
          type: string
        profileVisible:
          type: boolean
      type: object
    PushToken:
      description: This is a JSON template for a push token resource.
      properties:
        clientRevision:
          description: >-
            The revision of the client SDK used by your application, in the same
            format that's used by revisions.check. Used to send backward
            compatible messages. Format: [PLATFORM_TYPE]:[VERSION_NUMBER].
            Possible values of PLATFORM_TYPE are:  

            - IOS - Push token is for iOS
          type: string
        id:
          $ref: "#/components/schemas/PushTokenId"
        kind:
          default: games#pushToken
          description: Uniquely identifies the type of this resource. Value is always the
            fixed string games#pushToken.
          type: string
        language:
          description: The preferred language for notifications that are sent using this
            token.
          type: string
      type: object
    PushTokenId:
      description: This is a JSON template for a push token ID resource.
      properties:
        ios:
          description: A push token ID for iOS devices.
          properties:
            apns_device_token:
              description: Device token supplied by an iOS system call to register for
                remote notifications. Encode this field as web-safe base64.
              format: byte
              type: string
            apns_environment:
              description: Indicates whether this token should be used for the production
                or sandbox APNS server.
              type: string
          type: object
        kind:
          default: games#pushTokenId
          description: Uniquely identifies the type of this resource. Value is always the
            fixed string games#pushTokenId.
          type: string
      type: object
    Quest:
      description: This is a JSON template for a Quest resource.
      properties:
        acceptedTimestampMillis:
          description: The timestamp at which the user accepted the quest in milliseconds
            since the epoch in UTC. Only present if the player has accepted the
            quest.
          format: int64
          type: string
        applicationId:
          description: The ID of the application this quest is part of.
          type: string
        bannerUrl:
          description: The banner image URL for the quest.
          type: string
        description:
          description: The description of the quest.
          type: string
        endTimestampMillis:
          description: The timestamp at which the quest ceases to be active in milliseconds
            since the epoch in UTC.
          format: int64
          type: string
        iconUrl:
          description: The icon image URL for the quest.
          type: string
        id:
          description: The ID of the quest.
          type: string
        isDefaultBannerUrl:
          description: Indicates whether the banner image being returned is a default
            image, or is game-provided.
          type: boolean
        isDefaultIconUrl:
          description: Indicates whether the icon image being returned is a default image,
            or is game-provided.
          type: boolean
        kind:
          default: games#quest
          description: Uniquely identifies the type of this resource. Value is always the
            fixed string games#quest.
          type: string
        lastUpdatedTimestampMillis:
          description: The timestamp at which the quest was last updated by the user in
            milliseconds since the epoch in UTC. Only present if the player has
            accepted the quest.
          format: int64
          type: string
        milestones:
          description: The quest milestones.
          items:
            $ref: "#/components/schemas/QuestMilestone"
          type: array
        name:
          description: The name of the quest.
          type: string
        notifyTimestampMillis:
          description: The timestamp at which the user should be notified that the quest
            will end soon in milliseconds since the epoch in UTC.
          format: int64
          type: string
        startTimestampMillis:
          description: The timestamp at which the quest becomes active in milliseconds
            since the epoch in UTC.
          format: int64
          type: string
        state:
          description: >-
            The state of the quest.

            Possible values are:  

            - "UPCOMING": The quest is upcoming. The user can see the quest, but cannot accept it until it is open. 

            - "OPEN": The quest is currently open and may be accepted at this time. 

            - "ACCEPTED": The user is currently participating in this quest. 

            - "COMPLETED": The user has completed the quest. 

            - "FAILED": The quest was attempted but was not completed before the deadline expired. 

            - "EXPIRED": The quest has expired and was not accepted. 

            - "DELETED": The quest should be deleted from the local database.
          type: string
      type: object
    QuestContribution:
      description: This is a JSON template for a Quest Criterion Contribution resource.
      properties:
        formattedValue:
          description: The formatted value of the contribution as a string. Format depends
            on the configuration for the associated event definition in the Play
            Games Developer Console.
          type: string
        kind:
          default: games#questContribution
          description: Uniquely identifies the type of this resource. Value is always the
            fixed string games#questContribution.
          type: string
        value:
          description: The value of the contribution.
          format: int64
          type: string
      type: object
    QuestCriterion:
      description: This is a JSON template for a Quest Criterion resource.
      properties:
        completionContribution:
          $ref: "#/components/schemas/QuestContribution"
        currentContribution:
          $ref: "#/components/schemas/QuestContribution"
        eventId:
          description: The ID of the event the criterion corresponds to.
          type: string
        initialPlayerProgress:
          $ref: "#/components/schemas/QuestContribution"
        kind:
          default: games#questCriterion
          description: Uniquely identifies the type of this resource. Value is always the
            fixed string games#questCriterion.
          type: string
      type: object
    QuestListResponse:
      description: This is a JSON template for a list of quest objects.
      properties:
        items:
          description: The quests.
          items:
            $ref: "#/components/schemas/Quest"
          type: array
        kind:
          default: games#questListResponse
          description: Uniquely identifies the type of this resource. Value is always the
            fixed string games#questListResponse.
          type: string
        nextPageToken:
          description: Token corresponding to the next page of results.
          type: string
      type: object
    QuestMilestone:
      description: This is a JSON template for a Quest Milestone resource.
      properties:
        completionRewardData:
          description: The completion reward data of the milestone, represented as a
            Base64-encoded string. This is a developer-specified binary blob
            with size between 0 and 2 KB before encoding.
          format: byte
          type: string
        criteria:
          description: The criteria of the milestone.
          items:
            $ref: "#/components/schemas/QuestCriterion"
          type: array
        id:
          description: The milestone ID.
          type: string
        kind:
          default: games#questMilestone
          description: Uniquely identifies the type of this resource. Value is always the
            fixed string games#questMilestone.
          type: string
        state:
          description: >-
            The current state of the milestone.

            Possible values are:  

            - "COMPLETED_NOT_CLAIMED" - The milestone is complete, but has not yet been claimed. 

            - "CLAIMED" - The milestone is complete and has been claimed. 

            - "NOT_COMPLETED" - The milestone has not yet been completed. 

            - "NOT_STARTED" - The milestone is for a quest that has not yet been accepted.
          type: string
      type: object
    RevisionCheckResponse:
      description: This is a JSON template for the result of checking a revision.
      properties:
        apiVersion:
          description: The version of the API this client revision should use when calling
            API methods.
          type: string
        kind:
          default: games#revisionCheckResponse
          description: Uniquely identifies the type of this resource. Value is always the
            fixed string games#revisionCheckResponse.
          type: string
        revisionStatus:
          description: >-
            The result of the revision check.

            Possible values are:  

            - "OK" - The revision being used is current. 

            - "DEPRECATED" - There is currently a newer version available, but the revision being used still works. 

            - "INVALID" - The revision being used is not supported in any released version.
          type: string
      type: object
    Room:
      description: This is a JSON template for a room resource object.
      properties:
        applicationId:
          description: The ID of the application being played.
          type: string
        autoMatchingCriteria:
          $ref: "#/components/schemas/RoomAutoMatchingCriteria"
        autoMatchingStatus:
          $ref: "#/components/schemas/RoomAutoMatchStatus"
        creationDetails:
          $ref: "#/components/schemas/RoomModification"
        description:
          description: This short description is generated by our servers and worded
            relative to the player requesting the room. It is intended to be
            displayed when the room is shown in a list (that is, an invitation
            to a room.)
          type: string
        inviterId:
          description: The ID of the participant that invited the user to the room. Not set
            if the user was not invited to the room.
          type: string
        kind:
          default: games#room
          description: Uniquely identifies the type of this resource. Value is always the
            fixed string games#room.
          type: string
        lastUpdateDetails:
          $ref: "#/components/schemas/RoomModification"
        participants:
          description: The participants involved in the room, along with their statuses.
            Includes participants who have left or declined invitations.
          items:
            $ref: "#/components/schemas/RoomParticipant"
          type: array
        roomId:
          description: Globally unique ID for a room.
          type: string
        roomStatusVersion:
          description: "The version of the room status: an increasing counter, used by the
            client to ignore out-of-order updates to room status."
          format: int32
          type: integer
        status:
          description: >-
            The status of the room.

            Possible values are:  

            - "ROOM_INVITING" - One or more players have been invited and not responded. 

            - "ROOM_AUTO_MATCHING" - One or more slots need to be filled by auto-matching. 

            - "ROOM_CONNECTING" - Players have joined and are connecting to each other (either before or after auto-matching). 

            - "ROOM_ACTIVE" - All players have joined and connected to each other. 

            - "ROOM_DELETED" - The room should no longer be shown on the client. Returned in sync calls when a player joins a room (as a tombstone), or for rooms where all joined participants have left.
          type: string
        variant:
          description: The variant / mode of the application being played; can be any
            integer value, or left blank.
          format: int32
          type: integer
      type: object
    RoomAutoMatchStatus:
      description: This is a JSON template for status of room automatching that is in
        progress.
      properties:
        kind:
          default: games#roomAutoMatchStatus
          description: Uniquely identifies the type of this resource. Value is always the
            fixed string games#roomAutoMatchStatus.
          type: string
        waitEstimateSeconds:
          description: An estimate for the amount of time (in seconds) that auto-matching
            is expected to take to complete.
          format: int32
          type: integer
      type: object
    RoomAutoMatchingCriteria:
      description: This is a JSON template for a room auto-match criteria object.
      properties:
        exclusiveBitmask:
          description: A bitmask indicating when auto-matches are valid. When ANDed with
            other exclusive bitmasks, the result must be zero. Can be used to
            support exclusive roles within a game.
          format: int64
          type: string
        kind:
          default: games#roomAutoMatchingCriteria
          description: Uniquely identifies the type of this resource. Value is always the
            fixed string games#roomAutoMatchingCriteria.
          type: string
        maxAutoMatchingPlayers:
          description: The maximum number of players that should be added to the room by
            auto-matching.
          format: int32
          type: integer
        minAutoMatchingPlayers:
          description: The minimum number of players that should be added to the room by
            auto-matching.
          format: int32
          type: integer
      type: object
    RoomClientAddress:
      description: This is a JSON template for the client address when setting up a room.
      properties:
        kind:
          default: games#roomClientAddress
          description: Uniquely identifies the type of this resource. Value is always the
            fixed string games#roomClientAddress.
          type: string
        xmppAddress:
          description: The XMPP address of the client on the Google Games XMPP network.
          type: string
      type: object
    RoomCreateRequest:
      description: This is a JSON template for a room creation request.
      properties:
        autoMatchingCriteria:
          $ref: "#/components/schemas/RoomAutoMatchingCriteria"
        capabilities:
          description: The capabilities that this client supports for realtime
            communication.
          items:
            type: string
          type: array
        clientAddress:
          $ref: "#/components/schemas/RoomClientAddress"
        invitedPlayerIds:
          description: The player IDs to invite to the room.
          items:
            type: string
          type: array
        kind:
          default: games#roomCreateRequest
          description: Uniquely identifies the type of this resource. Value is always the
            fixed string games#roomCreateRequest.
          type: string
        networkDiagnostics:
          $ref: "#/components/schemas/NetworkDiagnostics"
        requestId:
          description: A randomly generated numeric ID. This number is used at the server
            to ensure that the request is handled correctly across retries.
          format: int64
          type: string
        variant:
          description: The variant / mode of the application to be played. This can be any
            integer value, or left blank. You should use a small number of
            variants to keep the auto-matching pool as large as possible.
          format: int32
          type: integer
      type: object
    RoomJoinRequest:
      description: This is a JSON template for a join room request.
      properties:
        capabilities:
          description: The capabilities that this client supports for realtime
            communication.
          items:
            type: string
          type: array
        clientAddress:
          $ref: "#/components/schemas/RoomClientAddress"
        kind:
          default: games#roomJoinRequest
          description: Uniquely identifies the type of this resource. Value is always the
            fixed string games#roomJoinRequest.
          type: string
        networkDiagnostics:
          $ref: "#/components/schemas/NetworkDiagnostics"
      type: object
    RoomLeaveDiagnostics:
      description: This is a JSON template for room leave diagnostics.
      properties:
        androidNetworkSubtype:
          description: Android network subtype.
            http://developer.android.com/reference/android/net/NetworkInfo.html#getSubtype()
          format: int32
          type: integer
        androidNetworkType:
          description: Android network type.
            http://developer.android.com/reference/android/net/NetworkInfo.html#getType()
          format: int32
          type: integer
        iosNetworkType:
          description: iOS network type as defined in Reachability.h.
          format: int32
          type: integer
        kind:
          default: games#roomLeaveDiagnostics
          description: Uniquely identifies the type of this resource. Value is always the
            fixed string games#roomLeaveDiagnostics.
          type: string
        networkOperatorCode:
          description: "The MCC+MNC code for the client's network connection. On Android:
            http://developer.android.com/reference/android/telephony/TelephonyM\
            anager.html#getNetworkOperator() On iOS, see:
            https://developer.apple.com/library/ios/documentation/NetworkingInt\
            ernet/Reference/CTCarrier/Reference/Reference.html"
          type: string
        networkOperatorName:
          description: "The name of the carrier of the client's network connection. On
            Android:
            http://developer.android.com/reference/android/telephony/TelephonyM\
            anager.html#getNetworkOperatorName() On iOS:
            https://developer.apple.com/library/ios/documentation/NetworkingInt\
            ernet/Reference/CTCarrier/Reference/Reference.html#//apple_ref/occ/\
            instp/CTCarrier/carrierName"
          type: string
        peerSession:
          description: Diagnostics about all peer sessions.
          items:
            $ref: "#/components/schemas/PeerSessionDiagnostics"
          type: array
        socketsUsed:
          description: Whether or not sockets were used.
          type: boolean
      type: object
    RoomLeaveRequest:
      description: This is a JSON template for a leave room request.
      properties:
        kind:
          default: games#roomLeaveRequest
          description: Uniquely identifies the type of this resource. Value is always the
            fixed string games#roomLeaveRequest.
          type: string
        leaveDiagnostics:
          $ref: "#/components/schemas/RoomLeaveDiagnostics"
        reason:
          description: >-
            Reason for leaving the match.

            Possible values are:  

            - "PLAYER_LEFT" - The player chose to leave the room.. 

            - "GAME_LEFT" - The game chose to remove the player from the room. 

            - "REALTIME_ABANDONED" - The player switched to another application and abandoned the room. 

            - "REALTIME_PEER_CONNECTION_FAILURE" - The client was unable to establish a connection to other peer(s). 

            - "REALTIME_SERVER_CONNECTION_FAILURE" - The client was unable to communicate with the server. 

            - "REALTIME_SERVER_ERROR" - The client received an error response when it tried to communicate with the server. 

            - "REALTIME_TIMEOUT" - The client timed out while waiting for a room. 

            - "REALTIME_CLIENT_DISCONNECTING" - The client disconnects without first calling Leave. 

            - "REALTIME_SIGN_OUT" - The user signed out of G+ while in the room. 

            - "REALTIME_GAME_CRASHED" - The game crashed. 

            - "REALTIME_ROOM_SERVICE_CRASHED" - RoomAndroidService crashed. 

            - "REALTIME_DIFFERENT_CLIENT_ROOM_OPERATION" - Another client is trying to enter a room. 

            - "REALTIME_SAME_CLIENT_ROOM_OPERATION" - The same client is trying to enter a new room.
          type: string
      type: object
    RoomList:
      description: This is a JSON template for a list of rooms.
      properties:
        items:
          description: The rooms.
          items:
            $ref: "#/components/schemas/Room"
          type: array
        kind:
          default: games#roomList
          description: Uniquely identifies the type of this resource. Value is always the
            fixed string games#roomList.
          type: string
        nextPageToken:
          description: The pagination token for the next page of results.
          type: string
      type: object
    RoomModification:
      description: This is a JSON template for room modification metadata.
      properties:
        kind:
          default: games#roomModification
          description: Uniquely identifies the type of this resource. Value is always the
            fixed string games#roomModification.
          type: string
        modifiedTimestampMillis:
          description: The timestamp at which they modified the room, in milliseconds since
            the epoch in UTC.
          format: int64
          type: string
        participantId:
          description: The ID of the participant that modified the room.
          type: string
      type: object
    RoomP2PStatus:
      description: This is a JSON template for an update on the status of a peer in a room.
      properties:
        connectionSetupLatencyMillis:
          description: The amount of time in milliseconds it took to establish connections
            with this peer.
          format: int32
          type: integer
        error:
          description: >-
            The error code in event of a failure.

            Possible values are:  

            - "P2P_FAILED" - The client failed to establish a P2P connection with the peer. 

            - "PRESENCE_FAILED" - The client failed to register to receive P2P connections. 

            - "RELAY_SERVER_FAILED" - The client received an error when trying to use the relay server to establish a P2P connection with the peer.
          type: string
        error_reason:
          description: More detailed diagnostic message returned in event of a failure.
          type: string
        kind:
          default: games#roomP2PStatus
          description: Uniquely identifies the type of this resource. Value is always the
            fixed string games#roomP2PStatus.
          type: string
        participantId:
          description: The ID of the participant.
          type: string
        status:
          description: >-
            The status of the peer in the room.

            Possible values are:  

            - "CONNECTION_ESTABLISHED" - The client established a P2P connection with the peer. 

            - "CONNECTION_FAILED" - The client failed to establish directed presence with the peer.
          type: string
        unreliableRoundtripLatencyMillis:
          description: The amount of time in milliseconds it took to send packets back and
            forth on the unreliable channel with this peer.
          format: int32
          type: integer
      type: object
    RoomP2PStatuses:
      description: This is a JSON template for an update on the status of peers in a room.
      properties:
        kind:
          default: games#roomP2PStatuses
          description: Uniquely identifies the type of this resource. Value is always the
            fixed string games#roomP2PStatuses.
          type: string
        updates:
          description: The updates for the peers.
          items:
            $ref: "#/components/schemas/RoomP2PStatus"
          type: array
      type: object
    RoomParticipant:
      description: This is a JSON template for a participant in a room.
      properties:
        autoMatched:
          description: True if this participant was auto-matched with the requesting player.
          type: boolean
        autoMatchedPlayer:
          $ref: "#/components/schemas/AnonymousPlayer"
        capabilities:
          description: The capabilities which can be used when communicating with this
            participant.
          items:
            type: string
          type: array
        clientAddress:
          $ref: "#/components/schemas/RoomClientAddress"
        connected:
          description: True if this participant is in the fully connected set of peers in
            the room.
          type: boolean
        id:
          description: An identifier for the participant in the scope of the room. Cannot
            be used to identify a player across rooms or in other contexts.
          type: string
        kind:
          default: games#roomParticipant
          description: Uniquely identifies the type of this resource. Value is always the
            fixed string games#roomParticipant.
          type: string
        leaveReason:
          description: >-
            The reason the participant left the room; populated if the
            participant status is PARTICIPANT_LEFT.

            Possible values are:  

            - "PLAYER_LEFT" - The player explicitly chose to leave the room. 

            - "GAME_LEFT" - The game chose to remove the player from the room. 

            - "ABANDONED" - The player switched to another application and abandoned the room.

            - "PEER_CONNECTION_FAILURE" - The client was unable to establish or maintain a connection to other peer(s) in the room.

            - "SERVER_ERROR" - The client received an error response when it tried to communicate with the server. 

            - "TIMEOUT" - The client timed out while waiting for players to join and connect. 

            - "PRESENCE_FAILURE" - The client's XMPP connection ended abruptly.
          type: string
        player:
          $ref: "#/components/schemas/Player"
        status:
          description: >-
            The status of the participant with respect to the room.

            Possible values are:  

            - "PARTICIPANT_INVITED" - The participant has been invited to join the room, but has not yet responded. 

            - "PARTICIPANT_JOINED" - The participant has joined the room (either after creating it or accepting an invitation.) 

            - "PARTICIPANT_DECLINED" - The participant declined an invitation to join the room. 

            - "PARTICIPANT_LEFT" - The participant joined the room and then left it.
          type: string
      type: object
    RoomStatus:
      description: This is a JSON template for the status of a room that the player has
        joined.
      properties:
        autoMatchingStatus:
          $ref: "#/components/schemas/RoomAutoMatchStatus"
        kind:
          default: games#roomStatus
          description: Uniquely identifies the type of this resource. Value is always the
            fixed string games#roomStatus.
          type: string
        participants:
          description: The participants involved in the room, along with their statuses.
            Includes participants who have left or declined invitations.
          items:
            $ref: "#/components/schemas/RoomParticipant"
          type: array
        roomId:
          description: Globally unique ID for a room.
          type: string
        status:
          description: >-
            The status of the room.

            Possible values are:  

            - "ROOM_INVITING" - One or more players have been invited and not responded. 

            - "ROOM_AUTO_MATCHING" - One or more slots need to be filled by auto-matching. 

            - "ROOM_CONNECTING" - Players have joined are connecting to each other (either before or after auto-matching). 

            - "ROOM_ACTIVE" - All players have joined and connected to each other. 

            - "ROOM_DELETED" - All joined players have left.
          type: string
        statusVersion:
          description: "The version of the status for the room: an increasing counter, used
            by the client to ignore out-of-order updates to room status."
          format: int32
          type: integer
      type: object
    ScoreSubmission:
      description: This is a JSON template for a request to submit a score to leaderboards.
      properties:
        kind:
          default: games#scoreSubmission
          description: Uniquely identifies the type of this resource. Value is always the
            fixed string games#scoreSubmission.
          type: string
        leaderboardId:
          description: The leaderboard this score is being submitted to.
          type: string
        score:
          description: The new score being submitted.
          format: int64
          type: string
        scoreTag:
          description: Additional information about this score. Values will contain no more
            than 64 URI-safe characters as defined by section 2.3 of RFC 3986.
          pattern: "[a-zA-Z0-9-._~]{0,64}"
          type: string
        signature:
          description: Signature Values will contain URI-safe characters as defined by
            section 2.3 of RFC 3986.
          type: string
      type: object
    Snapshot:
      description: This is a JSON template for an snapshot object.
      properties:
        coverImage:
          $ref: "#/components/schemas/SnapshotImage"
        description:
          description: The description of this snapshot.
          type: string
        driveId:
          description: The ID of the file underlying this snapshot in the Drive API. Only
            present if the snapshot is a view on a Drive file and the file is
            owned by the caller.
          type: string
        durationMillis:
          description: The duration associated with this snapshot, in millis.
          format: int64
          type: string
        id:
          description: The ID of the snapshot.
          type: string
        kind:
          default: games#snapshot
          description: Uniquely identifies the type of this resource. Value is always the
            fixed string games#snapshot.
          type: string
        lastModifiedMillis:
          description: The timestamp (in millis since Unix epoch) of the last modification
            to this snapshot.
          format: int64
          type: string
        progressValue:
          description: The progress value (64-bit integer set by developer) associated with
            this snapshot.
          format: int64
          type: string
        title:
          description: The title of this snapshot.
          type: string
        type:
          description: |-
            The type of this snapshot.
            Possible values are:  
            - "SAVE_GAME" - A snapshot representing a save game.
          type: string
        uniqueName:
          description: The unique name provided when the snapshot was created.
          type: string
      type: object
    SnapshotImage:
      description: This is a JSON template for an image of a snapshot.
      properties:
        height:
          description: The height of the image.
          format: int32
          type: integer
        kind:
          default: games#snapshotImage
          description: Uniquely identifies the type of this resource. Value is always the
            fixed string games#snapshotImage.
          type: string
        mime_type:
          description: The MIME type of the image.
          type: string
        url:
          description: The URL of the image. This URL may be invalidated at any time and
            should not be cached.
          type: string
        width:
          description: The width of the image.
          format: int32
          type: integer
      type: object
    SnapshotListResponse:
      description: This is a JSON template for a list of snapshot objects.
      properties:
        items:
          description: The snapshots.
          items:
            $ref: "#/components/schemas/Snapshot"
          type: array
        kind:
          default: games#snapshotListResponse
          description: Uniquely identifies the type of this resource. Value is always the
            fixed string games#snapshotListResponse.
          type: string
        nextPageToken:
          description: Token corresponding to the next page of results. If there are no
            more results, the token is omitted.
          type: string
      type: object
    TurnBasedAutoMatchingCriteria:
      description: This is a JSON template for an turn-based auto-match criteria object.
      properties:
        exclusiveBitmask:
          description: A bitmask indicating when auto-matches are valid. When ANDed with
            other exclusive bitmasks, the result must be zero. Can be used to
            support exclusive roles within a game.
          format: int64
          type: string
        kind:
          default: games#turnBasedAutoMatchingCriteria
          description: Uniquely identifies the type of this resource. Value is always the
            fixed string games#turnBasedAutoMatchingCriteria.
          type: string
        maxAutoMatchingPlayers:
          description: The maximum number of players that should be added to the match by
            auto-matching.
          format: int32
          type: integer
        minAutoMatchingPlayers:
          description: The minimum number of players that should be added to the match by
            auto-matching.
          format: int32
          type: integer
      type: object
    TurnBasedMatch:
      description: This is a JSON template for a turn-based match resource object.
      properties:
        applicationId:
          description: The ID of the application being played.
          type: string
        autoMatchingCriteria:
          $ref: "#/components/schemas/TurnBasedAutoMatchingCriteria"
        creationDetails:
          $ref: "#/components/schemas/TurnBasedMatchModification"
        data:
          $ref: "#/components/schemas/TurnBasedMatchData"
        description:
          description: This short description is generated by our servers based on turn
            state and is localized and worded relative to the player requesting
            the match. It is intended to be displayed when the match is shown in
            a list.
          type: string
        inviterId:
          description: The ID of the participant that invited the user to the match. Not
            set if the user was not invited to the match.
          type: string
        kind:
          default: games#turnBasedMatch
          description: Uniquely identifies the type of this resource. Value is always the
            fixed string games#turnBasedMatch.
          type: string
        lastUpdateDetails:
          $ref: "#/components/schemas/TurnBasedMatchModification"
        matchId:
          description: Globally unique ID for a turn-based match.
          type: string
        matchNumber:
          description: The number of the match in a chain of rematches. Will be set to 1
            for the first match and incremented by 1 for each rematch.
          format: int32
          type: integer
        matchVersion:
          description: "The version of this match: an increasing counter, used to avoid
            out-of-date updates to the match."
          format: int32
          type: integer
        participants:
          description: The participants involved in the match, along with their statuses.
            Includes participants who have left or declined invitations.
          items:
            $ref: "#/components/schemas/TurnBasedMatchParticipant"
          type: array
        pendingParticipantId:
          description: The ID of the participant that is taking a turn.
          type: string
        previousMatchData:
          $ref: "#/components/schemas/TurnBasedMatchData"
        rematchId:
          description: The ID of a rematch of this match. Only set for completed matches
            that have been rematched.
          type: string
        results:
          description: The results reported for this match.
          items:
            $ref: "#/components/schemas/ParticipantResult"
          type: array
        status:
          description: >-
            The status of the match.

            Possible values are:  

            - "MATCH_AUTO_MATCHING" - One or more slots need to be filled by auto-matching; the match cannot be established until they are filled. 

            - "MATCH_ACTIVE" - The match has started. 

            - "MATCH_COMPLETE" - The match has finished. 

            - "MATCH_CANCELED" - The match was canceled. 

            - "MATCH_EXPIRED" - The match expired due to inactivity. 

            - "MATCH_DELETED" - The match should no longer be shown on the client. Returned only for tombstones for matches when sync is called.
          type: string
        userMatchStatus:
          description: >-
            The status of the current user in the match. Derived from the match
            type, match status, the user's participant status, and the pending
            participant for the match.

            Possible values are:  

            - "USER_INVITED" - The user has been invited to join the match and has not responded yet. 

            - "USER_AWAITING_TURN" - The user is waiting for their turn. 

            - "USER_TURN" - The user has an action to take in the match. 

            - "USER_MATCH_COMPLETED" - The match has ended (it is completed, canceled, or expired.)
          type: string
        variant:
          description: The variant / mode of the application being played; can be any
            integer value, or left blank.
          format: int32
          type: integer
        withParticipantId:
          description: The ID of another participant in the match that can be used when
            describing the participants the user is playing with.
          type: string
      type: object
    TurnBasedMatchCreateRequest:
      description: This is a JSON template for a turn-based match creation request.
      properties:
        autoMatchingCriteria:
          $ref: "#/components/schemas/TurnBasedAutoMatchingCriteria"
        invitedPlayerIds:
          description: The player ids to invite to the match.
          items:
            type: string
          type: array
        kind:
          default: games#turnBasedMatchCreateRequest
          description: Uniquely identifies the type of this resource. Value is always the
            fixed string games#turnBasedMatchCreateRequest.
          type: string
        requestId:
          description: A randomly generated numeric ID. This number is used at the server
            to ensure that the request is handled correctly across retries.
          format: int64
          type: string
        variant:
          description: The variant / mode of the application to be played. This can be any
            integer value, or left blank. You should use a small number of
            variants to keep the auto-matching pool as large as possible.
          format: int32
          type: integer
      type: object
    TurnBasedMatchData:
      description: This is a JSON template for a turn-based match data object.
      properties:
        data:
          description: The byte representation of the data (limited to 128 kB), as a
            Base64-encoded string with the URL_SAFE encoding option.
          format: byte
          type: string
        dataAvailable:
          description: True if this match has data available but it wasn't returned in a
            list response; fetching the match individually will retrieve this
            data.
          type: boolean
        kind:
          default: games#turnBasedMatchData
          description: Uniquely identifies the type of this resource. Value is always the
            fixed string games#turnBasedMatchData.
          type: string
      type: object
    TurnBasedMatchDataRequest:
      description: This is a JSON template for sending a turn-based match data object.
      properties:
        data:
          description: The byte representation of the data (limited to 128 kB), as a
            Base64-encoded string with the URL_SAFE encoding option.
          format: byte
          type: string
        kind:
          default: games#turnBasedMatchDataRequest
          description: Uniquely identifies the type of this resource. Value is always the
            fixed string games#turnBasedMatchDataRequest.
          type: string
      type: object
    TurnBasedMatchList:
      description: This is a JSON template for a list of turn-based matches.
      properties:
        items:
          description: The matches.
          items:
            $ref: "#/components/schemas/TurnBasedMatch"
          type: array
        kind:
          default: games#turnBasedMatchList
          description: Uniquely identifies the type of this resource. Value is always the
            fixed string games#turnBasedMatchList.
          type: string
        nextPageToken:
          description: The pagination token for the next page of results.
          type: string
      type: object
    TurnBasedMatchModification:
      description: This is a JSON template for turn-based match modification metadata.
      properties:
        kind:
          default: games#turnBasedMatchModification
          description: Uniquely identifies the type of this resource. Value is always the
            fixed string games#turnBasedMatchModification.
          type: string
        modifiedTimestampMillis:
          description: The timestamp at which they modified the match, in milliseconds
            since the epoch in UTC.
          format: int64
          type: string
        participantId:
          description: The ID of the participant that modified the match.
          type: string
      type: object
    TurnBasedMatchParticipant:
      description: This is a JSON template for a participant in a turn-based match.
      properties:
        autoMatched:
          description: True if this participant was auto-matched with the requesting player.
          type: boolean
        autoMatchedPlayer:
          $ref: "#/components/schemas/AnonymousPlayer"
        id:
          description: An identifier for the participant in the scope of the match. Cannot
            be used to identify a player across matches or in other contexts.
          type: string
        kind:
          default: games#turnBasedMatchParticipant
          description: Uniquely identifies the type of this resource. Value is always the
            fixed string games#turnBasedMatchParticipant.
          type: string
        player:
          $ref: "#/components/schemas/Player"
        status:
          description: >-
            The status of the participant with respect to the match.

            Possible values are:  

            - "PARTICIPANT_NOT_INVITED_YET" - The participant is slated to be invited to the match, but the invitation has not been sent; the invite will be sent when it becomes their turn. 

            - "PARTICIPANT_INVITED" - The participant has been invited to join the match, but has not yet responded. 

            - "PARTICIPANT_JOINED" - The participant has joined the match (either after creating it or accepting an invitation.) 

            - "PARTICIPANT_DECLINED" - The participant declined an invitation to join the match. 

            - "PARTICIPANT_LEFT" - The participant joined the match and then left it. 

            - "PARTICIPANT_FINISHED" - The participant finished playing in the match. 

            - "PARTICIPANT_UNRESPONSIVE" - The participant did not take their turn in the allotted time.
          type: string
      type: object
    TurnBasedMatchRematch:
      description: This is a JSON template for a rematch response.
      properties:
        kind:
          default: games#turnBasedMatchRematch
          description: Uniquely identifies the type of this resource. Value is always the
            fixed string games#turnBasedMatchRematch.
          type: string
        previousMatch:
          $ref: "#/components/schemas/TurnBasedMatch"
        rematch:
          $ref: "#/components/schemas/TurnBasedMatch"
      type: object
    TurnBasedMatchResults:
      description: This is a JSON template for a turn-based match results object.
      properties:
        data:
          $ref: "#/components/schemas/TurnBasedMatchDataRequest"
        kind:
          default: games#turnBasedMatchResults
          description: Uniquely identifies the type of this resource. Value is always the
            fixed string games#turnBasedMatchResults.
          type: string
        matchVersion:
          description: The version of the match being updated.
          format: int32
          type: integer
        results:
          description: The match results for the participants in the match.
          items:
            $ref: "#/components/schemas/ParticipantResult"
          type: array
      type: object
    TurnBasedMatchSync:
      description: This is a JSON template for a list of turn-based matches returned from a
        sync.
      properties:
        items:
          description: The matches.
          items:
            $ref: "#/components/schemas/TurnBasedMatch"
          type: array
        kind:
          default: games#turnBasedMatchSync
          description: Uniquely identifies the type of this resource. Value is always the
            fixed string games#turnBasedMatchSync.
          type: string
        moreAvailable:
          description: True if there were more matches available to fetch at the time the
            response was generated (which were not returned due to page size
            limits.)
          type: boolean
        nextPageToken:
          description: The pagination token for the next page of results.
          type: string
      type: object
    TurnBasedMatchTurn:
      description: This is a JSON template for the object representing a turn.
      properties:
        data:
          $ref: "#/components/schemas/TurnBasedMatchDataRequest"
        kind:
          default: games#turnBasedMatchTurn
          description: Uniquely identifies the type of this resource. Value is always the
            fixed string games#turnBasedMatchTurn.
          type: string
        matchVersion:
          description: "The version of this match: an increasing counter, used to avoid
            out-of-date updates to the match."
          format: int32
          type: integer
        pendingParticipantId:
          description: The ID of the participant who should take their turn next. May be
            set to the current player's participant ID to update match state
            without changing the turn. If not set, the match will wait for other
            player(s) to join via automatching; this is only valid if automatch
            criteria is set on the match with remaining slots for automatched
            players.
          type: string
        results:
          description: The match results for the participants in the match.
          items:
            $ref: "#/components/schemas/ParticipantResult"
          type: array
      type: object
