openapi: 3.0.0
info:
  title: Definitions file
  version: "1.0"
  x-apisguru-categories:
    - cloud
  x-logo:
    url: https://assets.onestore.ms/cdnfiles/onestorerolling-1606-01000/shell/v3/images/logo/microsoft.png
  x-origin:
    - format: swagger
      url: https://raw.githubusercontent.com/Azure/azure-rest-api-specs/master/specification/apimanagement/resource-manager/Microsoft.ApiManagement/preview/2018-06-01-preview/definitions.json
      version: "2.0"
  x-preferred: false
  x-providerName: azure.com
  x-serviceName: apimanagement-definitions
  x-tags:
    - Azure
    - Microsoft
paths: {}
servers:
  - url: https://azure.local
components:
  schemas:
    AccessInformationContract:
      description: Tenant access information contract of the API Management service.
      properties:
        enabled:
          description: Tenant access information of the API Management service.
          type: boolean
        id:
          description: Identifier.
          type: string
        primaryKey:
          description: Primary access key.
          type: string
        secondaryKey:
          description: Secondary access key.
          type: string
    AccessInformationUpdateParameters:
      description: Tenant access information update parameters of the API Management
        service.
      properties:
        enabled:
          description: Tenant access information of the API Management service.
          type: boolean
    ApiCollection:
      description: Paged Api list representation.
      properties:
        nextLink:
          description: Next page link if any.
          readOnly: true
          type: string
        value:
          description: Page values.
          items:
            $ref: "#/components/schemas/ApiContract"
          readOnly: true
          type: array
    ApiContract:
      allOf:
        - description: The Resource definition.
          properties:
            id:
              description: Resource ID.
              readOnly: true
              type: string
            name:
              description: Resource name.
              readOnly: true
              type: string
            type:
              description: Resource type for API Management resource.
              readOnly: true
              type: string
          x-ms-azure-resource: true
      description: API details.
      properties:
        properties:
          $ref: "#/components/schemas/ApiContractProperties"
    ApiContractProperties:
      allOf:
        - $ref: "#/components/schemas/ApiEntityBaseContract"
      description: Api Entity Properties
      properties:
        apiVersionSet:
          $ref: "#/components/schemas/ApiVersionSetContractDetails"
        displayName:
          description: API name.
          maxLength: 300
          minLength: 1
          type: string
        path:
          description: Relative URL uniquely identifying this API and all of its resource
            paths within the API Management service instance. It is appended to
            the API endpoint base URL specified during the service instance
            creation to form a public URL for this API.
          maxLength: 400
          minLength: 0
          type: string
        protocols:
          description: Describes on which protocols the operations in this API can be
            invoked.
          items:
            enum:
              - http
              - https
            type: string
            x-ms-enum:
              modelAsString: false
              name: Protocol
          type: array
        serviceUrl:
          description: Absolute URL of the backend service implementing this API.
          maxLength: 2000
          minLength: 0
          type: string
      required:
        - path
    ApiContractUpdateProperties:
      allOf:
        - $ref: "#/components/schemas/ApiEntityBaseContract"
      description: API update contract properties.
      properties:
        displayName:
          description: API name.
          maxLength: 300
          minLength: 1
          type: string
        path:
          description: Relative URL uniquely identifying this API and all of its resource
            paths within the API Management service instance. It is appended to
            the API endpoint base URL specified during the service instance
            creation to form a public URL for this API.
          maxLength: 400
          minLength: 0
          type: string
        protocols:
          description: Describes on which protocols the operations in this API can be
            invoked.
          items:
            enum:
              - http
              - https
            type: string
            x-ms-enum:
              modelAsString: false
              name: Protocol
          type: array
        serviceUrl:
          description: Absolute URL of the backend service implementing this API.
          maxLength: 2000
          minLength: 1
          type: string
    ApiCreateOrUpdateParameter:
      description: API Create or Update Parameters.
      properties:
        properties:
          $ref: "#/components/schemas/ApiCreateOrUpdateProperties"
    ApiCreateOrUpdateProperties:
      allOf:
        - $ref: "#/components/schemas/ApiContractProperties"
      description: Api Create or Update Properties.
      properties:
        apiType:
          description: |-
            Type of Api to create. 
             * `http` creates a SOAP to REST API 
             * `soap` creates a SOAP pass-through API .
          enum:
            - http
            - soap
          type: string
          x-ms-client-name: SoapApiType
          x-ms-enum:
            modelAsString: true
            name: SoapApiType
            values:
              - description: Imports a SOAP API having a RESTful front end.
                name: SoapToRest
                value: http
              - description: Imports the Soap API having a SOAP front end.
                name: SoapPassThrough
                value: soap
        contentFormat:
          description: Format of the Content in which the API is getting imported.
          enum:
            - wadl-xml
            - wadl-link-json
            - swagger-json
            - swagger-link-json
            - wsdl
            - wsdl-link
            - openapi
            - openapi+json
            - openapi-link
          type: string
          x-ms-enum:
            modelAsString: true
            name: ContentFormat
            values:
              - description: The contents are inline and Content type is a WADL document.
                value: wadl-xml
              - description: The WADL document is hosted on a publicly accessible internet
                  address.
                value: wadl-link-json
              - description: The contents are inline and Content Type is a OpenApi 2.0
                  Document.
                value: swagger-json
              - description: The Open Api 2.0 document is hosted on a publicly accessible
                  internet address.
                value: swagger-link-json
              - description: The contents are inline and the document is a WSDL/Soap
                  document.
                value: wsdl
              - description: The WSDL document is hosted on a publicly accessible internet
                  address.
                value: wsdl-link
              - description: The contents are inline and Content Type is a OpenApi 3.0
                  Document in YAML format.
                value: openapi
              - description: The contents are inline and Content Type is a OpenApi 3.0
                  Document in JSON format.
                value: openapi+json
              - description: The Open Api 3.0 document is hosted on a publicly accessible
                  internet address.
                value: openapi-link
        contentValue:
          description: Content value when Importing an API.
          type: string
        wsdlSelector:
          description: Criteria to limit import of WSDL to a subset of the document.
          properties:
            wsdlEndpointName:
              description: Name of endpoint(port) to import from WSDL
              type: string
            wsdlServiceName:
              description: Name of service to import from WSDL
              type: string
          type: object
    ApiEntityBaseContract:
      description: API base contract details.
      properties:
        apiRevision:
          description: Describes the Revision of the Api. If no value is provided, default
            revision 1 is created
          maxLength: 100
          minLength: 1
          type: string
        apiRevisionDescription:
          description: Description of the Api Revision.
          maxLength: 256
          type: string
        apiVersion:
          description: Indicates the Version identifier of the API if the API is versioned
          maxLength: 100
          type: string
        apiVersionDescription:
          description: Description of the Api Version.
          maxLength: 256
          type: string
        apiVersionSetId:
          description: A resource identifier for the related ApiVersionSet.
          type: string
        authenticationSettings:
          description: API Authentication Settings.
          properties:
            oAuth2:
              description: API OAuth2 Authentication settings details.
              properties:
                authorizationServerId:
                  description: OAuth authorization server identifier.
                  type: string
                scope:
                  description: operations scope.
                  type: string
            openid:
              description: API OAuth2 Authentication settings details.
              properties:
                bearerTokenSendingMethods:
                  description: How to send token to the server.
                  items:
                    description: Form of an authorization grant, which the client uses to
                      request the access token.
                    enum:
                      - authorizationHeader
                      - query
                    type: string
                    x-ms-enum:
                      modelAsString: true
                      name: bearerTokenSendingMethods
                      values:
                        - description: Access token will be transmitted in the
                            Authorization header using Bearer schema
                          value: authorizationHeader
                        - description: Access token will be transmitted as query parameters.
                          value: query
                  type: array
                openidProviderId:
                  description: OAuth authorization server identifier.
                  type: string
            subscriptionKeyRequired:
              description: Specifies whether subscription key is required during call to
                this API, true - API is included into closed products only,
                false - API is included into open products alone, null - there
                is a mix of products.
              type: boolean
        description:
          description: Description of the API. May include HTML formatting tags.
          type: string
        isCurrent:
          description: Indicates if API revision is current api revision.
          readOnly: true
          type: boolean
        isOnline:
          description: Indicates if API revision is accessible via the gateway.
          readOnly: true
          type: boolean
        subscriptionKeyParameterNames:
          description: Subscription key parameter names details.
          example:
            subscriptionKeyParameterNames:
              header: customHeaderParameterName
              query: customQueryParameterName
          properties:
            header:
              description: Subscription key header name.
              type: string
            query:
              description: Subscription key query string parameter name.
              type: string
        subscriptionRequired:
          description: Specifies whether an API or Product subscription is required for
            accessing the API.
          type: boolean
        type:
          description: Type of API.
          enum:
            - http
            - soap
          type: string
          x-ms-client-name: ApiType
          x-ms-enum:
            modelAsString: true
            name: ApiType
    ApiExportResult:
      description: API Export result Blob Uri.
      properties:
        link:
          description: Link to the Storage Blob containing the result of the export
            operation. The Blob Uri is only valid for 5 minutes.
          type: string
    ApiReleaseCollection:
      description: Paged Api Revision list representation.
      properties:
        nextLink:
          description: Next page link if any.
          readOnly: true
          type: string
        value:
          description: Page values.
          items:
            $ref: "#/components/schemas/ApiReleaseContract"
          readOnly: true
          type: array
    ApiReleaseContract:
      allOf:
        - description: The Resource definition.
          properties:
            id:
              description: Resource ID.
              readOnly: true
              type: string
            name:
              description: Resource name.
              readOnly: true
              type: string
            type:
              description: Resource type for API Management resource.
              readOnly: true
              type: string
          x-ms-azure-resource: true
      description: Api Release details.
      properties:
        properties:
          $ref: "#/components/schemas/ApiReleaseContractProperties"
    ApiReleaseContractProperties:
      description: API Release details
      properties:
        apiId:
          description: Identifier of the API the release belongs to.
          type: string
        createdDateTime:
          description: "The time the API was released. The date conforms to the following
            format: yyyy-MM-ddTHH:mm:ssZ as specified by the ISO 8601 standard."
          format: date-time
          readOnly: true
          type: string
        notes:
          description: Release Notes
          type: string
        updatedDateTime:
          description: The time the API release was updated.
          format: date-time
          readOnly: true
          type: string
    ApiRevisionCollection:
      description: Paged Api Revision list representation.
      properties:
        nextLink:
          description: Next page link if any.
          readOnly: true
          type: string
        value:
          description: Page values.
          items:
            $ref: "#/components/schemas/ApiRevisionContract"
          readOnly: true
          type: array
    ApiRevisionContract:
      description: Summary of revision metadata.
      properties:
        apiId:
          description: Identifier of the API Revision.
          readOnly: true
          type: string
        apiRevision:
          description: Revision number of API.
          maxLength: 100
          minLength: 1
          readOnly: true
          type: string
        createdDateTime:
          description: "The time the API Revision was created. The date conforms to the
            following format: yyyy-MM-ddTHH:mm:ssZ as specified by the ISO 8601
            standard."
          format: date-time
          readOnly: true
          type: string
        description:
          description: Description of the API Revision.
          maxLength: 256
          readOnly: true
          type: string
        isCurrent:
          description: Indicates if API revision is accessible via the gateway.
          readOnly: true
          type: boolean
        isOnline:
          description: Indicates if API revision is the current api revision.
          readOnly: true
          type: boolean
        privateUrl:
          description: Gateway URL for accessing the non-current API Revision.
          readOnly: true
          type: string
        updatedDateTime:
          description: "The time the API Revision were updated. The date conforms to the
            following format: yyyy-MM-ddTHH:mm:ssZ as specified by the ISO 8601
            standard."
          format: date-time
          readOnly: true
          type: string
    ApiRevisionInfoContract:
      description: Object used to create an API Revision or Version based on an existing
        API Revision
      properties:
        apiRevisionDescription:
          description: Description of new API Revision.
          maxLength: 256
          type: string
        apiVersionName:
          description: Version identifier for the new API Version.
          maxLength: 100
          type: string
        apiVersionSet:
          $ref: "#/components/schemas/ApiVersionSetContractDetails"
        sourceApiId:
          description: Resource identifier of API to be used to create the revision from.
          type: string
    ApiTagResourceContractProperties:
      allOf:
        - description: API base contract details.
          properties:
            apiRevision:
              description: Describes the Revision of the Api. If no value is provided,
                default revision 1 is created
              maxLength: 100
              minLength: 1
              type: string
            apiRevisionDescription:
              description: Description of the Api Revision.
              maxLength: 256
              type: string
            apiVersion:
              description: Indicates the Version identifier of the API if the API is
                versioned
              maxLength: 100
              type: string
            apiVersionDescription:
              description: Description of the Api Version.
              maxLength: 256
              type: string
            apiVersionSetId:
              description: A resource identifier for the related ApiVersionSet.
              type: string
            authenticationSettings:
              description: API Authentication Settings.
              properties:
                oAuth2:
                  description: API OAuth2 Authentication settings details.
                  properties:
                    authorizationServerId:
                      description: OAuth authorization server identifier.
                      type: string
                    scope:
                      description: operations scope.
                      type: string
                openid:
                  description: API OAuth2 Authentication settings details.
                  properties:
                    bearerTokenSendingMethods:
                      description: How to send token to the server.
                      items:
                        description: Form of an authorization grant, which the client uses
                          to request the access token.
                        enum:
                          - authorizationHeader
                          - query
                        type: string
                        x-ms-enum:
                          modelAsString: true
                          name: bearerTokenSendingMethods
                          values:
                            - description: Access token will be transmitted in the
                                Authorization header using Bearer schema
                              value: authorizationHeader
                            - description: Access token will be transmitted as query
                                parameters.
                              value: query
                      type: array
                    openidProviderId:
                      description: OAuth authorization server identifier.
                      type: string
                subscriptionKeyRequired:
                  description: Specifies whether subscription key is required during call
                    to this API, true - API is included into closed products
                    only, false - API is included into open products alone, null
                    - there is a mix of products.
                  type: boolean
            description:
              description: Description of the API. May include HTML formatting tags.
              type: string
            isCurrent:
              description: Indicates if API revision is current api revision.
              readOnly: true
              type: boolean
            isOnline:
              description: Indicates if API revision is accessible via the gateway.
              readOnly: true
              type: boolean
            subscriptionKeyParameterNames:
              description: Subscription key parameter names details.
              example:
                subscriptionKeyParameterNames:
                  header: customHeaderParameterName
                  query: customQueryParameterName
              properties:
                header:
                  description: Subscription key header name.
                  type: string
                query:
                  description: Subscription key query string parameter name.
                  type: string
            subscriptionRequired:
              description: Specifies whether an API or Product subscription is required for
                accessing the API.
              type: boolean
            type:
              description: Type of API.
              enum:
                - http
                - soap
              type: string
              x-ms-client-name: ApiType
              x-ms-enum:
                modelAsString: true
                name: ApiType
      description: API contract properties for the Tag Resources.
      properties:
        id:
          description: API identifier in the form /apis/{apiId}.
          type: string
        name:
          description: API name.
          maxLength: 300
          minLength: 1
          type: string
        path:
          description: Relative URL uniquely identifying this API and all of its resource
            paths within the API Management service instance. It is appended to
            the API endpoint base URL specified during the service instance
            creation to form a public URL for this API.
          maxLength: 400
          minLength: 0
          type: string
        protocols:
          description: Describes on which protocols the operations in this API can be
            invoked.
          items:
            enum:
              - http
              - https
            type: string
            x-ms-enum:
              modelAsString: false
              name: Protocol
          type: array
        serviceUrl:
          description: Absolute URL of the backend service implementing this API.
          maxLength: 2000
          minLength: 1
          type: string
    ApiUpdateContract:
      description: API update contract details.
      properties:
        properties:
          $ref: "#/components/schemas/ApiContractUpdateProperties"
    ApiVersionSetCollection:
      description: Paged Api Version Set list representation.
      properties:
        nextLink:
          description: Next page link if any.
          type: string
        value:
          description: Page values.
          items:
            $ref: "#/components/schemas/ApiVersionSetContract"
          type: array
    ApiVersionSetContract:
      allOf:
        - description: The Resource definition.
          properties:
            id:
              description: Resource ID.
              readOnly: true
              type: string
            name:
              description: Resource name.
              readOnly: true
              type: string
            type:
              description: Resource type for API Management resource.
              readOnly: true
              type: string
          x-ms-azure-resource: true
      description: Api Version Set Contract details.
      properties:
        properties:
          $ref: "#/components/schemas/ApiVersionSetContractProperties"
    ApiVersionSetContractDetails:
      description: "An API Version Set contains the common configuration for a set of API
        Versions relating "
      properties:
        description:
          description: Description of API Version Set.
          type: string
        id:
          description: Identifier for existing API Version Set. Omit this value to create a
            new Version Set.
          type: string
        versionHeaderName:
          description: Name of HTTP header parameter that indicates the API Version if
            versioningScheme is set to `header`.
          type: string
        versionQueryName:
          description: Name of query parameter that indicates the API Version if
            versioningScheme is set to `query`.
          type: string
        versioningScheme:
          description: An value that determines where the API Version identifer will be
            located in a HTTP request.
          enum:
            - Segment
            - Query
            - Header
          type: string
    ApiVersionSetContractProperties:
      allOf:
        - $ref: "#/components/schemas/ApiVersionSetEntityBase"
      description: Properties of an API Version Set.
      properties:
        displayName:
          description: Name of API Version Set
          maxLength: 100
          minLength: 1
          type: string
        versioningScheme:
          description: An value that determines where the API Version identifer will be
            located in a HTTP request.
          enum:
            - Segment
            - Query
            - Header
          type: string
          x-ms-enum:
            modelAsString: true
            name: versioningScheme
            values:
              - description: The API Version is passed in a path segment.
                value: Segment
              - description: The API Version is passed in a query parameter.
                value: Query
              - description: The API Version is passed in a HTTP header.
                value: Header
      required:
        - displayName
        - versioningScheme
    ApiVersionSetEntityBase:
      description: Api Version set base parameters
      properties:
        description:
          description: Description of API Version Set.
          type: string
        versionHeaderName:
          description: Name of HTTP header parameter that indicates the API Version if
            versioningScheme is set to `header`.
          maxLength: 100
          minLength: 1
          type: string
        versionQueryName:
          description: Name of query parameter that indicates the API Version if
            versioningScheme is set to `query`.
          maxLength: 100
          minLength: 1
          type: string
    ApiVersionSetUpdateParameters:
      description: Parameters to update or create an Api Version Set Contract.
      properties:
        properties:
          $ref: "#/components/schemas/ApiVersionSetUpdateParametersProperties"
    ApiVersionSetUpdateParametersProperties:
      allOf:
        - $ref: "#/components/schemas/ApiVersionSetEntityBase"
      description: Properties used to create or update an API Version Set.
      properties:
        displayName:
          description: Name of API Version Set
          maxLength: 100
          minLength: 1
          type: string
        versioningScheme:
          description: An value that determines where the API Version identifer will be
            located in a HTTP request.
          enum:
            - Segment
            - Query
            - Header
          type: string
          x-ms-enum:
            modelAsString: true
            name: versioningScheme
            values:
              - description: The API Version is passed in a path segment.
                value: Segment
              - description: The API Version is passed in a query parameter.
                value: Query
              - description: The API Version is passed in a HTTP header.
                value: Header
    AuthenticationSettingsContract:
      description: API Authentication Settings.
      properties:
        oAuth2:
          description: API OAuth2 Authentication settings details.
          properties:
            authorizationServerId:
              description: OAuth authorization server identifier.
              type: string
            scope:
              description: operations scope.
              type: string
        openid:
          description: API OAuth2 Authentication settings details.
          properties:
            bearerTokenSendingMethods:
              description: How to send token to the server.
              items:
                description: Form of an authorization grant, which the client uses to
                  request the access token.
                enum:
                  - authorizationHeader
                  - query
                type: string
                x-ms-enum:
                  modelAsString: true
                  name: bearerTokenSendingMethods
                  values:
                    - description: Access token will be transmitted in the Authorization
                        header using Bearer schema
                      value: authorizationHeader
                    - description: Access token will be transmitted as query parameters.
                      value: query
              type: array
            openidProviderId:
              description: OAuth authorization server identifier.
              type: string
        subscriptionKeyRequired:
          description: Specifies whether subscription key is required during call to this
            API, true - API is included into closed products only, false - API
            is included into open products alone, null - there is a mix of
            products.
          type: boolean
    AuthorizationServerCollection:
      description: Paged OAuth2 Authorization Servers list representation.
      properties:
        count:
          description: Total record count number across all pages.
          format: int64
          type: integer
        nextLink:
          description: Next page link if any.
          type: string
        value:
          description: Page values.
          items:
            $ref: "#/components/schemas/AuthorizationServerContract"
          type: array
    AuthorizationServerContract:
      allOf:
        - description: The Resource definition.
          properties:
            id:
              description: Resource ID.
              readOnly: true
              type: string
            name:
              description: Resource name.
              readOnly: true
              type: string
            type:
              description: Resource type for API Management resource.
              readOnly: true
              type: string
          x-ms-azure-resource: true
      description: External OAuth authorization server settings.
      properties:
        properties:
          $ref: "#/components/schemas/AuthorizationServerContractProperties"
    AuthorizationServerContractBaseProperties:
      description: External OAuth authorization server Update settings contract.
      properties:
        authorizationMethods:
          description: HTTP verbs supported by the authorization endpoint. GET must be
            always present. POST is optional.
          items:
            enum:
              - HEAD
              - OPTIONS
              - TRACE
              - GET
              - POST
              - PUT
              - PATCH
              - DELETE
            type: string
            x-ms-enum:
              modelAsString: false
              name: AuthorizationMethod
          type: array
        bearerTokenSendingMethods:
          description: "Specifies the mechanism by which access token is passed to the API.
            "
          externalDocs:
            url: http://tools.ietf.org/html/rfc6749#section-4
          items:
            enum:
              - authorizationHeader
              - query
            type: string
            x-ms-enum:
              modelAsString: true
              name: BearerTokenSendingMethod
          type: array
        clientAuthenticationMethod:
          description: Method of authentication supported by the token endpoint of this
            authorization server. Possible values are Basic and/or Body. When
            Body is specified, client credentials and other parameters are
            passed within the request body in the
            application/x-www-form-urlencoded format.
          items:
            enum:
              - Basic
              - Body
            type: string
            x-ms-enum:
              modelAsString: true
              name: ClientAuthenticationMethod
              values:
                - description: Basic Client Authentication method.
                  value: Basic
                - description: Body based Authentication method.
                  value: Body
          type: array
        clientSecret:
          description: Client or app secret registered with this authorization server.
          type: string
        defaultScope:
          description: Access token scope that is going to be requested by default. Can be
            overridden at the API level. Should be provided in the form of a
            string containing space-delimited values.
          externalDocs:
            url: http://tools.ietf.org/html/rfc6749#section-3.3
          type: string
        description:
          description: Description of the authorization server. Can contain HTML formatting
            tags.
          type: string
        resourceOwnerPassword:
          description: Can be optionally specified when resource owner password grant type
            is supported by this authorization server. Default resource owner
            password.
          type: string
        resourceOwnerUsername:
          description: Can be optionally specified when resource owner password grant type
            is supported by this authorization server. Default resource owner
            username.
          type: string
        supportState:
          description: If true, authorization server will include state parameter from the
            authorization request to its response. Client may use state
            parameter to raise protocol security.
          externalDocs:
            url: http://tools.ietf.org/html/rfc6749#section-3.1
          type: boolean
        tokenBodyParameters:
          description: 'Additional parameters required by the token endpoint of this
            authorization server represented as an array of JSON objects with
            name and value string properties, i.e. {"name" : "name value",
            "value": "a value"}.'
          items:
            $ref: "#/components/schemas/TokenBodyParameterContract"
          type: array
        tokenEndpoint:
          description: OAuth token endpoint. Contains absolute URI to entity being
            referenced.
          externalDocs:
            url: http://tools.ietf.org/html/rfc6749#section-3.1
          type: string
    AuthorizationServerContractProperties:
      allOf:
        - $ref: "#/components/schemas/AuthorizationServerContractBaseProperties"
      description: External OAuth authorization server settings Properties.
      properties:
        authorizationEndpoint:
          description: OAuth authorization endpoint. See
            http://tools.ietf.org/html/rfc6749#section-3.2.
          type: string
        clientId:
          description: Client or app id registered with this authorization server.
          type: string
        clientRegistrationEndpoint:
          description: Optional reference to a page where client or app registration for
            this authorization server is performed. Contains absolute URL to
            entity being referenced.
          type: string
        displayName:
          description: User-friendly authorization server name.
          maxLength: 50
          minLength: 1
          type: string
        grantTypes:
          description: Form of an authorization grant, which the client uses to request the
            access token.
          externalDocs:
            url: http://tools.ietf.org/html/rfc6749#section-4
          items:
            enum:
              - authorizationCode
              - implicit
              - resourceOwnerPassword
              - clientCredentials
            type: string
            x-ms-enum:
              modelAsString: true
              name: GrantType
              values:
                - description: Authorization Code Grant flow as described
                    https://tools.ietf.org/html/rfc6749#section-4.1.
                  value: authorizationCode
                - description: Implicit Code Grant flow as described
                    https://tools.ietf.org/html/rfc6749#section-4.2.
                  value: implicit
                - description: Resource Owner Password Grant flow as described
                    https://tools.ietf.org/html/rfc6749#section-4.3.
                  value: resourceOwnerPassword
                - description: Client Credentials Grant flow as described
                    https://tools.ietf.org/html/rfc6749#section-4.4.
                  value: clientCredentials
          type: array
      required:
        - displayName
        - clientRegistrationEndpoint
        - authorizationEndpoint
        - clientId
        - grantTypes
    AuthorizationServerUpdateContract:
      allOf:
        - description: The Resource definition.
          properties:
            id:
              description: Resource ID.
              readOnly: true
              type: string
            name:
              description: Resource name.
              readOnly: true
              type: string
            type:
              description: Resource type for API Management resource.
              readOnly: true
              type: string
          x-ms-azure-resource: true
      description: External OAuth authorization server settings.
      properties:
        properties:
          $ref: "#/components/schemas/AuthorizationServerUpdateContractProperties"
    AuthorizationServerUpdateContractProperties:
      allOf:
        - $ref: "#/components/schemas/AuthorizationServerContractBaseProperties"
      description: External OAuth authorization server Update settings contract.
      properties:
        authorizationEndpoint:
          description: OAuth authorization endpoint. See
            http://tools.ietf.org/html/rfc6749#section-3.2.
          type: string
        clientId:
          description: Client or app id registered with this authorization server.
          type: string
        clientRegistrationEndpoint:
          description: Optional reference to a page where client or app registration for
            this authorization server is performed. Contains absolute URL to
            entity being referenced.
          type: string
        displayName:
          description: User-friendly authorization server name.
          maxLength: 50
          minLength: 1
          type: string
        grantTypes:
          description: Form of an authorization grant, which the client uses to request the
            access token.
          externalDocs:
            url: http://tools.ietf.org/html/rfc6749#section-4
          items:
            enum:
              - authorizationCode
              - implicit
              - resourceOwnerPassword
              - clientCredentials
            type: string
            x-ms-enum:
              modelAsString: true
              name: GrantType
              values:
                - description: Authorization Code Grant flow as described
                    https://tools.ietf.org/html/rfc6749#section-4.1.
                  value: authorizationCode
                - description: Implicit Code Grant flow as described
                    https://tools.ietf.org/html/rfc6749#section-4.2.
                  value: implicit
                - description: Resource Owner Password Grant flow as described
                    https://tools.ietf.org/html/rfc6749#section-4.3.
                  value: resourceOwnerPassword
                - description: Client Credentials Grant flow as described
                    https://tools.ietf.org/html/rfc6749#section-4.4.
                  value: clientCredentials
          type: array
    BackendAuthorizationHeaderCredentials:
      description: Authorization header information.
      properties:
        parameter:
          description: Authentication Parameter value.
          maxLength: 300
          minLength: 1
          type: string
        scheme:
          description: Authentication Scheme name.
          maxLength: 100
          minLength: 1
          type: string
      required:
        - scheme
        - parameter
    BackendBaseParameters:
      description: Backend entity base Parameter set.
      properties:
        credentials:
          $ref: "#/components/schemas/BackendCredentialsContract"
        description:
          description: Backend Description.
          maxLength: 2000
          minLength: 1
          type: string
        properties:
          $ref: "#/components/schemas/BackendProperties"
        proxy:
          $ref: "#/components/schemas/BackendProxyContract"
        resourceId:
          description: Management Uri of the Resource in External System. This url can be
            the Arm Resource Id of Logic Apps, Function Apps or Api Apps.
          maxLength: 2000
          minLength: 1
          type: string
        title:
          description: Backend Title.
          maxLength: 300
          minLength: 1
          type: string
        tls:
          $ref: "#/components/schemas/BackendTlsProperties"
    BackendCollection:
      description: Paged Backend list representation.
      properties:
        nextLink:
          description: Next page link if any.
          type: string
        value:
          description: Backend values.
          items:
            $ref: "#/components/schemas/BackendContract"
          type: array
    BackendContract:
      allOf:
        - description: The Resource definition.
          properties:
            id:
              description: Resource ID.
              readOnly: true
              type: string
            name:
              description: Resource name.
              readOnly: true
              type: string
            type:
              description: Resource type for API Management resource.
              readOnly: true
              type: string
          x-ms-azure-resource: true
      description: Backend details.
      properties:
        properties:
          $ref: "#/components/schemas/BackendContractProperties"
    BackendContractProperties:
      allOf:
        - $ref: "#/components/schemas/BackendBaseParameters"
      description: Parameters supplied to the Create Backend operation.
      properties:
        protocol:
          description: Backend communication protocol.
          enum:
            - http
            - soap
          type: string
          x-ms-enum:
            modelAsString: true
            name: BackendProtocol
            values:
              - description: The Backend is a RESTful service.
                value: http
              - description: The Backend is a SOAP service.
                value: soap
        url:
          description: Runtime Url of the Backend.
          maxLength: 2000
          minLength: 1
          type: string
      required:
        - url
        - protocol
    BackendCredentialsContract:
      description: Details of the Credentials used to connect to Backend.
      properties:
        authorization:
          $ref: "#/components/schemas/BackendAuthorizationHeaderCredentials"
        certificate:
          description: List of Client Certificate Thumbprint.
          items:
            type: string
          maxItems: 32
          type: array
        header:
          additionalProperties:
            items:
              type: string
            type: array
          description: Header Parameter description.
          type: object
        query:
          additionalProperties:
            items:
              type: string
            type: array
          description: Query Parameter description.
          type: object
    BackendProperties:
      description: Properties specific to the Backend Type.
      properties:
        serviceFabricCluster:
          $ref: "#/components/schemas/BackendServiceFabricClusterProperties"
    BackendProxyContract:
      description: Details of the Backend WebProxy Server to use in the Request to Backend.
      externalDocs:
        description: Backend entity uses these details to connect to a WebProxy.
        url: https://msdn.microsoft.com/en-us/library/system.net.webproxy(v=vs.110).aspx
      properties:
        password:
          description: Password to connect to the WebProxy Server
          type: string
        url:
          description: WebProxy Server AbsoluteUri property which includes the entire URI
            stored in the Uri instance, including all fragments and query
            strings.
          maxLength: 2000
          minLength: 1
          type: string
        username:
          description: Username to connect to the WebProxy server
          type: string
      required:
        - url
    BackendReconnectContract:
      allOf:
        - description: The Resource definition.
          properties:
            id:
              description: Resource ID.
              readOnly: true
              type: string
            name:
              description: Resource name.
              readOnly: true
              type: string
            type:
              description: Resource type for API Management resource.
              readOnly: true
              type: string
          x-ms-azure-resource: true
      description: Reconnect request parameters.
      properties:
        properties:
          $ref: "#/components/schemas/BackendReconnectProperties"
    BackendReconnectProperties:
      description: Properties to control reconnect requests.
      properties:
        after:
          description: Duration in ISO8601 format after which reconnect will be initiated.
            Minimum duration of the Reconnect is PT2M.
          format: duration
          type: string
    BackendServiceFabricClusterProperties:
      description: Properties of the Service Fabric Type Backend.
      properties:
        clientCertificatethumbprint:
          description: The client certificate thumbprint for the management endpoint.
          type: string
        managementEndpoints:
          description: The cluster management endpoint.
          items:
            type: string
          type: array
        maxPartitionResolutionRetries:
          description: Maximum number of retries while attempting resolve the partition.
          format: int32
          type: integer
        serverCertificateThumbprints:
          description: Thumbprints of certificates cluster management service uses for tls
            communication
          items:
            type: string
          type: array
        serverX509Names:
          description: Server X509 Certificate Names Collection
          items:
            $ref: "#/components/schemas/X509CertificateName"
          type: array
      required:
        - managementEndpoints
        - clientCertificatethumbprint
    BackendTlsProperties:
      description: Properties controlling TLS Certificate Validation.
      properties:
        validateCertificateChain:
          default: true
          description: Flag indicating whether SSL certificate chain validation should be
            done when using self-signed certificates for this backend host.
          type: boolean
        validateCertificateName:
          default: true
          description: Flag indicating whether SSL certificate name validation should be
            done when using self-signed certificates for this backend host.
          type: boolean
    BackendUpdateParameterProperties:
      allOf:
        - $ref: "#/components/schemas/BackendBaseParameters"
      description: Parameters supplied to the Update Backend operation.
      properties:
        protocol:
          description: Backend communication protocol.
          enum:
            - http
            - soap
          type: string
          x-ms-enum:
            modelAsString: true
            name: BackendProtocol
            values:
              - description: The Backend is a RESTful service.
                value: http
              - description: The Backend is a SOAP service.
                value: soap
        url:
          description: Runtime Url of the Backend.
          maxLength: 2000
          minLength: 1
          type: string
    BackendUpdateParameters:
      description: Backend update parameters.
      properties:
        properties:
          $ref: "#/components/schemas/BackendUpdateParameterProperties"
    BearerTokenSendingMethodsContract:
      description: Form of an authorization grant, which the client uses to request the
        access token.
      enum:
        - authorizationHeader
        - query
      type: string
      x-ms-enum:
        modelAsString: true
        name: bearerTokenSendingMethods
        values:
          - description: Access token will be transmitted in the Authorization header using
              Bearer schema
            value: authorizationHeader
          - description: Access token will be transmitted as query parameters.
            value: query
    BodyDiagnosticSettings:
      description: Body logging settings.
      properties:
        bytes:
          description: Number of request body bytes to log.
          format: int32
          maximum: 8192
          type: integer
    CacheCollection:
      description: Paged Caches list representation.
      properties:
        nextLink:
          description: Next page link if any.
          type: string
        value:
          description: Page values.
          items:
            $ref: "#/components/schemas/CacheContract"
          type: array
    CacheContract:
      allOf:
        - description: The Resource definition.
          properties:
            id:
              description: Resource ID.
              readOnly: true
              type: string
            name:
              description: Resource name.
              readOnly: true
              type: string
            type:
              description: Resource type for API Management resource.
              readOnly: true
              type: string
          x-ms-azure-resource: true
      description: Cache details.
      properties:
        properties:
          $ref: "#/components/schemas/CacheContractProperties"
    CacheContractProperties:
      description: Properties of the Cache contract.
      properties:
        connectionString:
          description: Runtime connection string to cache
          maxLength: 300
          type: string
        description:
          description: Cache description
          maxLength: 2000
          type: string
        resourceId:
          description: Original uri of entity in external system cache points to
          maxLength: 2000
          type: string
      required:
        - connectionString
    CacheUpdateParameters:
      description: Cache update details.
      properties:
        properties:
          $ref: "#/components/schemas/CacheUpdateProperties"
    CacheUpdateProperties:
      description: Parameters supplied to the Update Cache operation.
      properties:
        connectionString:
          description: Runtime connection string to cache
          maxLength: 300
          type: string
        description:
          description: Cache description
          maxLength: 2000
          type: string
        resourceId:
          description: Original uri of entity in external system cache points to
          maxLength: 2000
          type: string
    CertificateCollection:
      description: Paged Certificates list representation.
      properties:
        nextLink:
          description: Next page link if any.
          type: string
        value:
          description: Page values.
          items:
            $ref: "#/components/schemas/CertificateContract"
          type: array
    CertificateContract:
      allOf:
        - description: The Resource definition.
          properties:
            id:
              description: Resource ID.
              readOnly: true
              type: string
            name:
              description: Resource name.
              readOnly: true
              type: string
            type:
              description: Resource type for API Management resource.
              readOnly: true
              type: string
          x-ms-azure-resource: true
      description: Certificate details.
      properties:
        properties:
          $ref: "#/components/schemas/CertificateContractProperties"
    CertificateContractProperties:
      description: Properties of the Certificate contract.
      properties:
        expirationDate:
          description: >
            Expiration date of the certificate. The date conforms to the
            following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO
            8601 standard.
          format: date-time
          type: string
        subject:
          description: Subject attribute of the certificate.
          type: string
        thumbprint:
          description: Thumbprint of the certificate.
          type: string
      required:
        - subject
        - thumbprint
        - expirationDate
    CertificateCreateOrUpdateParameters:
      description: Certificate create or update details.
      properties:
        properties:
          $ref: "#/components/schemas/CertificateCreateOrUpdateProperties"
    CertificateCreateOrUpdateProperties:
      description: Parameters supplied to the CreateOrUpdate certificate operation.
      properties:
        data:
          description: Base 64 encoded certificate using the application/x-pkcs12
            representation.
          type: string
        password:
          description: Password for the Certificate
          type: string
      required:
        - data
        - password
    CurrentUserIdentity:
      properties:
        id:
          description: API Management service user id.
          type: string
    DeployConfigurationParameters:
      description: Parameters supplied to the Deploy Configuration operation.
      properties:
        branch:
          description: The name of the Git branch from which the configuration is to be
            deployed to the configuration database.
          type: string
        force:
          description: The value enforcing deleting subscriptions to products that are
            deleted in this update.
          type: boolean
      required:
        - branch
    DiagnosticCollection:
      description: Paged Diagnostic list representation.
      properties:
        nextLink:
          description: Next page link if any.
          type: string
        value:
          description: Page values.
          items:
            $ref: "#/components/schemas/DiagnosticContract"
          type: array
    DiagnosticContract:
      allOf:
        - description: The Resource definition.
          properties:
            id:
              description: Resource ID.
              readOnly: true
              type: string
            name:
              description: Resource name.
              readOnly: true
              type: string
            type:
              description: Resource type for API Management resource.
              readOnly: true
              type: string
          x-ms-azure-resource: true
      description: Diagnostic details.
      properties:
        properties:
          $ref: "#/components/schemas/DiagnosticContractProperties"
    DiagnosticContractProperties:
      description: Diagnostic Entity Properties
      properties:
        alwaysLog:
          description: Specifies for what type of messages sampling settings should not
            apply.
          enum:
            - allErrors
          type: string
          x-ms-enum:
            modelAsString: true
            name: AlwaysLog
            values:
              - description: Always log all erroneous request regardless of sampling
                  settings.
                value: allErrors
        backend:
          $ref: "#/components/schemas/PipelineDiagnosticSettings"
        enableHttpCorrelationHeaders:
          description: Whether to process Correlation Headers coming to Api Management
            Service. Only applicable to Application Insights diagnostics.
            Default is true.
          type: boolean
        frontend:
          $ref: "#/components/schemas/PipelineDiagnosticSettings"
        loggerId:
          description: Resource Id of a target logger.
          type: string
        sampling:
          $ref: "#/components/schemas/SamplingSettings"
      required:
        - loggerId
    EmailTemplateCollection:
      description: Paged email template list representation.
      properties:
        nextLink:
          description: Next page link if any.
          type: string
        value:
          description: Page values.
          items:
            $ref: "#/components/schemas/EmailTemplateContract"
          type: array
    EmailTemplateContract:
      allOf:
        - description: The Resource definition.
          properties:
            id:
              description: Resource ID.
              readOnly: true
              type: string
            name:
              description: Resource name.
              readOnly: true
              type: string
            type:
              description: Resource type for API Management resource.
              readOnly: true
              type: string
          x-ms-azure-resource: true
      description: Email Template details.
      properties:
        properties:
          $ref: "#/components/schemas/EmailTemplateContractProperties"
    EmailTemplateContractProperties:
      description: Email Template Contract properties.
      properties:
        body:
          description: Email Template Body. This should be a valid XDocument
          minLength: 1
          type: string
        description:
          description: Description of the Email Template.
          type: string
        isDefault:
          description: Whether the template is the default template provided by Api
            Management or has been edited.
          readOnly: true
          type: boolean
        parameters:
          description: Email Template Parameter values.
          items:
            $ref: "#/components/schemas/EmailTemplateParametersContractProperties"
          type: array
        subject:
          description: Subject of the Template.
          maxLength: 1000
          minLength: 1
          type: string
        title:
          description: Title of the Template.
          type: string
      required:
        - body
        - subject
    EmailTemplateParametersContractProperties:
      description: Email Template Parameter contract.
      properties:
        description:
          description: Template parameter description.
          maxLength: 256
          minLength: 1
          pattern: ^[A-Za-z0-9-._]+$
          type: string
        name:
          description: Template parameter name.
          maxLength: 256
          minLength: 1
          pattern: ^[A-Za-z0-9-._]+$
          type: string
        title:
          description: Template parameter title.
          maxLength: 4096
          minLength: 1
          type: string
    EmailTemplateUpdateParameterProperties:
      description: Email Template Update Contract properties.
      properties:
        body:
          description: Email Template Body. This should be a valid XDocument
          minLength: 1
          type: string
        description:
          description: Description of the Email Template.
          type: string
        parameters:
          description: Email Template Parameter values.
          items:
            $ref: "#/components/schemas/EmailTemplateParametersContractProperties"
          type: array
        subject:
          description: Subject of the Template.
          maxLength: 1000
          minLength: 1
          type: string
        title:
          description: Title of the Template.
          type: string
    EmailTemplateUpdateParameters:
      description: Email Template update Parameters.
      properties:
        properties:
          $ref: "#/components/schemas/EmailTemplateUpdateParameterProperties"
    GenerateSsoUrlResult:
      description: Generate SSO Url operations response details.
      properties:
        value:
          description: Redirect Url containing the SSO URL value.
          type: string
    GroupCollection:
      description: Paged Group list representation.
      properties:
        nextLink:
          description: Next page link if any.
          type: string
        value:
          description: Page values.
          items:
            $ref: "#/components/schemas/GroupContract"
          type: array
    GroupContract:
      allOf:
        - description: The Resource definition.
          properties:
            id:
              description: Resource ID.
              readOnly: true
              type: string
            name:
              description: Resource name.
              readOnly: true
              type: string
            type:
              description: Resource type for API Management resource.
              readOnly: true
              type: string
          x-ms-azure-resource: true
      description: Contract details.
      properties:
        properties:
          $ref: "#/components/schemas/GroupContractProperties"
    GroupContractProperties:
      description: Group contract Properties.
      properties:
        builtIn:
          description: true if the group is one of the three system groups (Administrators,
            Developers, or Guests); otherwise false.
          readOnly: true
          type: boolean
        description:
          description: Group description. Can contain HTML formatting tags.
          maxLength: 1000
          type: string
        displayName:
          description: Group name.
          maxLength: 300
          minLength: 1
          type: string
        externalId:
          description: For external groups, this property contains the id of the group from
            the external identity provider, e.g. for Azure Active Directory
            `aad://<tenant>.onmicrosoft.com/groups/<group object id>`; otherwise
            the value is null.
          type: string
        type:
          description: Group type.
          enum:
            - custom
            - system
            - external
          type: string
          x-ms-enum:
            modelAsString: false
            name: GroupType
      required:
        - displayName
    GroupCreateParameters:
      description: Parameters supplied to the Create Group operation.
      properties:
        properties:
          $ref: "#/components/schemas/GroupCreateParametersProperties"
    GroupCreateParametersProperties:
      description: Parameters supplied to the Create Group operation.
      properties:
        description:
          description: Group description.
          type: string
        displayName:
          description: Group name.
          maxLength: 300
          minLength: 1
          type: string
        externalId:
          description: Identifier of the external groups, this property contains the id of
            the group from the external identity provider, e.g. for Azure Active
            Directory `aad://<tenant>.onmicrosoft.com/groups/<group object id>`;
            otherwise the value is null.
          type: string
        type:
          description: Group type.
          enum:
            - custom
            - system
            - external
          type: string
          x-ms-enum:
            modelAsString: false
            name: GroupType
      required:
        - displayName
    GroupUpdateParameters:
      description: Parameters supplied to the Update Group operation.
      properties:
        properties:
          $ref: "#/components/schemas/GroupUpdateParametersProperties"
    GroupUpdateParametersProperties:
      description: Parameters supplied to the Update Group operation.
      properties:
        description:
          description: Group description.
          type: string
        displayName:
          description: Group name.
          maxLength: 300
          minLength: 1
          type: string
        externalId:
          description: Identifier of the external groups, this property contains the id of
            the group from the external identity provider, e.g. for Azure Active
            Directory `aad://<tenant>.onmicrosoft.com/groups/<group object id>`;
            otherwise the value is null.
          type: string
        type:
          description: Group type.
          enum:
            - custom
            - system
            - external
          type: string
          x-ms-enum:
            modelAsString: false
            name: GroupType
    HttpMessageDiagnostic:
      description: Http message diagnostic settings.
      properties:
        body:
          $ref: "#/components/schemas/BodyDiagnosticSettings"
        headers:
          description: Array of HTTP Headers to log.
          items:
            type: string
          type: array
    IdentityProviderBaseParameters:
      description: Identity Provider Base Parameter Properties.
      properties:
        allowedTenants:
          description: List of Allowed Tenants when configuring Azure Active Directory
            login.
          items:
            type: string
          maxItems: 32
          type: array
        authority:
          description: OpenID Connect discovery endpoint hostname for AAD or AAD B2C.
          type: string
        passwordResetPolicyName:
          description: Password Reset Policy Name. Only applies to AAD B2C Identity
            Provider.
          minLength: 1
          type: string
        profileEditingPolicyName:
          description: Profile Editing Policy Name. Only applies to AAD B2C Identity
            Provider.
          minLength: 1
          type: string
        signinPolicyName:
          description: Signin Policy Name. Only applies to AAD B2C Identity Provider.
          minLength: 1
          type: string
        signupPolicyName:
          description: Signup Policy Name. Only applies to AAD B2C Identity Provider.
          minLength: 1
          type: string
        type:
          description: Identity Provider Type identifier.
          enum:
            - facebook
            - google
            - microsoft
            - twitter
            - aad
            - aadB2C
          type: string
          x-ms-enum:
            modelAsString: true
            name: IdentityProviderType
            values:
              - description: Facebook as Identity provider.
                value: facebook
              - description: Google as Identity provider.
                value: google
              - description: Microsoft Live as Identity provider.
                value: microsoft
              - description: Twitter as Identity provider.
                value: twitter
              - description: Azure Active Directory as Identity provider.
                value: aad
              - description: Azure Active Directory B2C as Identity provider.
                value: aadB2C
    IdentityProviderContract:
      allOf:
        - description: The Resource definition.
          properties:
            id:
              description: Resource ID.
              readOnly: true
              type: string
            name:
              description: Resource name.
              readOnly: true
              type: string
            type:
              description: Resource type for API Management resource.
              readOnly: true
              type: string
          x-ms-azure-resource: true
      description: Identity Provider details.
      properties:
        properties:
          $ref: "#/components/schemas/IdentityProviderContractProperties"
    IdentityProviderContractProperties:
      allOf:
        - $ref: "#/components/schemas/IdentityProviderBaseParameters"
      description: The external Identity Providers like Facebook, Google, Microsoft,
        Twitter or Azure Active Directory which can be used to enable access to
        the API Management service developer portal for all users.
      properties:
        clientId:
          description: Client Id of the Application in the external Identity Provider. It
            is App ID for Facebook login, Client ID for Google login, App ID for
            Microsoft.
          minLength: 1
          type: string
        clientSecret:
          description: Client secret of the Application in external Identity Provider, used
            to authenticate login request. For example, it is App Secret for
            Facebook login, API Key for Google login, Public Key for Microsoft.
          minLength: 1
          type: string
      required:
        - clientId
        - clientSecret
    IdentityProviderList:
      description: List of all the Identity Providers configured on the service instance.
      properties:
        nextLink:
          description: Next page link if any.
          type: string
        value:
          description: Identity Provider configuration values.
          items:
            $ref: "#/components/schemas/IdentityProviderContract"
          type: array
    IdentityProviderUpdateParameters:
      description: Parameters supplied to update Identity Provider
      properties:
        properties:
          $ref: "#/components/schemas/IdentityProviderUpdateProperties"
    IdentityProviderUpdateProperties:
      allOf:
        - $ref: "#/components/schemas/IdentityProviderBaseParameters"
      description: Parameters supplied to the Update Identity Provider operation.
      properties:
        clientId:
          description: Client Id of the Application in the external Identity Provider. It
            is App ID for Facebook login, Client ID for Google login, App ID for
            Microsoft.
          minLength: 1
          type: string
        clientSecret:
          description: Client secret of the Application in external Identity Provider, used
            to authenticate login request. For example, it is App Secret for
            Facebook login, API Key for Google login, Public Key for Microsoft.
          minLength: 1
          type: string
    IssueAttachmentCollection:
      description: Paged Issue Attachment list representation.
      properties:
        nextLink:
          description: Next page link if any.
          readOnly: true
          type: string
        value:
          description: Issue Attachment values.
          items:
            $ref: "#/components/schemas/IssueAttachmentContract"
          readOnly: true
          type: array
    IssueAttachmentContract:
      allOf:
        - description: The Resource definition.
          properties:
            id:
              description: Resource ID.
              readOnly: true
              type: string
            name:
              description: Resource name.
              readOnly: true
              type: string
            type:
              description: Resource type for API Management resource.
              readOnly: true
              type: string
          x-ms-azure-resource: true
      description: Issue Attachment Contract details.
      properties:
        properties:
          $ref: "#/components/schemas/IssueAttachmentContractProperties"
    IssueAttachmentContractProperties:
      description: Issue Attachment contract Properties.
      properties:
        content:
          description: An HTTP link or Base64-encoded binary data.
          type: string
        contentFormat:
          description: Either 'link' if content is provided via an HTTP link or the MIME
            type of the Base64-encoded binary data provided in the 'content'
            property.
          type: string
        title:
          description: Filename by which the binary data will be saved.
          type: string
      required:
        - title
        - contentFormat
        - content
    IssueCollection:
      description: Paged Issue list representation.
      properties:
        nextLink:
          description: Next page link if any.
          readOnly: true
          type: string
        value:
          description: Issue values.
          items:
            $ref: "#/components/schemas/IssueContract"
          readOnly: true
          type: array
    IssueCommentCollection:
      description: Paged Issue Comment list representation.
      properties:
        nextLink:
          description: Next page link if any.
          readOnly: true
          type: string
        value:
          description: Issue Comment values.
          items:
            $ref: "#/components/schemas/IssueCommentContract"
          readOnly: true
          type: array
    IssueCommentContract:
      allOf:
        - description: The Resource definition.
          properties:
            id:
              description: Resource ID.
              readOnly: true
              type: string
            name:
              description: Resource name.
              readOnly: true
              type: string
            type:
              description: Resource type for API Management resource.
              readOnly: true
              type: string
          x-ms-azure-resource: true
      description: Issue Comment Contract details.
      properties:
        properties:
          $ref: "#/components/schemas/IssueCommentContractProperties"
    IssueCommentContractProperties:
      description: Issue Comment contract Properties.
      properties:
        createdDate:
          description: Date and time when the comment was created.
          format: date-time
          type: string
        text:
          description: Comment text.
          type: string
        userId:
          description: A resource identifier for the user who left the comment.
          type: string
      required:
        - text
        - userId
    IssueContract:
      allOf:
        - description: The Resource definition.
          properties:
            id:
              description: Resource ID.
              readOnly: true
              type: string
            name:
              description: Resource name.
              readOnly: true
              type: string
            type:
              description: Resource type for API Management resource.
              readOnly: true
              type: string
          x-ms-azure-resource: true
      description: Issue Contract details.
      properties:
        properties:
          $ref: "#/components/schemas/IssueContractProperties"
    IssueContractBaseProperties:
      description: Issue contract Base Properties.
      properties:
        apiId:
          description: A resource identifier for the API the issue was created for.
          type: string
        createdDate:
          description: Date and time when the issue was created.
          format: date-time
          type: string
        state:
          description: Status of the issue.
          enum:
            - proposed
            - open
            - removed
            - resolved
            - closed
          type: string
          x-ms-enum:
            modelAsString: true
            name: State
            values:
              - description: The issue is proposed.
                value: proposed
              - description: The issue is opened.
                value: open
              - description: The issue was removed.
                value: removed
              - description: The issue is now resolved.
                value: resolved
              - description: The issue was closed.
                value: closed
    IssueContractProperties:
      allOf:
        - $ref: "#/components/schemas/IssueContractBaseProperties"
      description: Issue contract Properties.
      properties:
        description:
          description: Text describing the issue.
          type: string
        title:
          description: The issue title.
          type: string
        userId:
          description: A resource identifier for the user created the issue.
          type: string
      required:
        - title
        - description
        - userId
    IssueUpdateContract:
      description: Issue update Parameters.
      properties:
        properties:
          $ref: "#/components/schemas/IssueUpdateContractProperties"
    IssueUpdateContractProperties:
      allOf:
        - $ref: "#/components/schemas/IssueContractBaseProperties"
      description: Issue contract Update Properties.
      properties:
        description:
          description: Text describing the issue.
          type: string
        title:
          description: The issue title.
          type: string
        userId:
          description: A resource identifier for the user created the issue.
          type: string
    LoggerCollection:
      description: Paged Logger list representation.
      properties:
        count:
          description: Total record count number across all pages.
          format: int64
          type: integer
        nextLink:
          description: Next page link if any.
          type: string
        value:
          description: Logger values.
          items:
            $ref: "#/components/schemas/LoggerContract"
          type: array
    LoggerContract:
      allOf:
        - description: The Resource definition.
          properties:
            id:
              description: Resource ID.
              readOnly: true
              type: string
            name:
              description: Resource name.
              readOnly: true
              type: string
            type:
              description: Resource type for API Management resource.
              readOnly: true
              type: string
          x-ms-azure-resource: true
      description: Logger details.
      properties:
        properties:
          $ref: "#/components/schemas/LoggerContractProperties"
    LoggerContractProperties:
      description: The Logger entity in API Management represents an event sink that you
        can use to log API Management events. Currently the Logger entity
        supports logging API Management events to Azure Event Hubs.
      properties:
        credentials:
          additionalProperties:
            type: string
          description: >-
            The name and SendRule connection string of the event hub for
            azureEventHub logger.

            Instrumentation key for applicationInsights logger.
          example:
            connectionString: Endpoint=sb://contoso-ns.servicebus.windows.net/;SharedAccessKeyName=Sender;SharedAccessKey=...
            name: apim
          type: object
        description:
          description: Logger description.
          maxLength: 256
          type: string
        isBuffered:
          description: Whether records are buffered in the logger before publishing.
            Default is assumed to be true.
          type: boolean
        loggerType:
          description: Logger type.
          enum:
            - azureEventHub
            - applicationInsights
          type: string
          x-ms-enum:
            modelAsString: true
            name: LoggerType
            values:
              - description: Azure Event Hub as log destination.
                value: azureEventHub
              - description: Azure Application Insights as log destination.
                value: applicationInsights
        resourceId:
          description: Azure Resource Id of a log target (either Azure Event Hub resource
            or Azure Application Insights resource).
          type: string
      required:
        - loggerType
        - credentials
    LoggerUpdateContract:
      description: Logger update contract.
      properties:
        properties:
          $ref: "#/components/schemas/LoggerUpdateParameters"
    LoggerUpdateParameters:
      description: Parameters supplied to the Update Logger operation.
      properties:
        credentials:
          additionalProperties:
            type: string
          description: Logger credentials.
          type: object
        description:
          description: Logger description.
          type: string
        isBuffered:
          description: Whether records are buffered in the logger before publishing.
            Default is assumed to be true.
          type: boolean
        loggerType:
          description: Logger type.
          enum:
            - azureEventHub
            - applicationInsights
          type: string
          x-ms-enum:
            modelAsString: true
            name: LoggerType
            values:
              - description: Azure Event Hub as log destination.
                value: azureEventHub
              - description: Azure Application Insights as log destination.
                value: applicationInsights
    NotificationCollection:
      description: Paged Notification list representation.
      properties:
        nextLink:
          description: Next page link if any.
          type: string
        value:
          description: Page values.
          items:
            $ref: "#/components/schemas/NotificationContract"
          type: array
    NotificationContract:
      allOf:
        - description: The Resource definition.
          properties:
            id:
              description: Resource ID.
              readOnly: true
              type: string
            name:
              description: Resource name.
              readOnly: true
              type: string
            type:
              description: Resource type for API Management resource.
              readOnly: true
              type: string
          x-ms-azure-resource: true
      description: Notification details.
      properties:
        properties:
          $ref: "#/components/schemas/NotificationContractProperties"
    NotificationContractProperties:
      description: Notification Contract properties.
      properties:
        description:
          description: Description of the Notification.
          type: string
        recipients:
          $ref: "#/components/schemas/RecipientsContractProperties"
        title:
          description: Title of the Notification.
          maxLength: 1000
          minLength: 1
          type: string
      required:
        - title
    OAuth2AuthenticationSettingsContract:
      description: API OAuth2 Authentication settings details.
      properties:
        authorizationServerId:
          description: OAuth authorization server identifier.
          type: string
        scope:
          description: operations scope.
          type: string
    OpenIdAuthenticationSettingsContract:
      description: API OAuth2 Authentication settings details.
      properties:
        bearerTokenSendingMethods:
          description: How to send token to the server.
          items:
            description: Form of an authorization grant, which the client uses to request
              the access token.
            enum:
              - authorizationHeader
              - query
            type: string
            x-ms-enum:
              modelAsString: true
              name: bearerTokenSendingMethods
              values:
                - description: Access token will be transmitted in the Authorization header
                    using Bearer schema
                  value: authorizationHeader
                - description: Access token will be transmitted as query parameters.
                  value: query
          type: array
        openidProviderId:
          description: OAuth authorization server identifier.
          type: string
    OpenIdConnectProviderCollection:
      description: Paged OpenIdProviders list representation.
      properties:
        nextLink:
          description: Next page link if any.
          type: string
        value:
          description: Page values.
          items:
            $ref: "#/components/schemas/OpenidConnectProviderContract"
          type: array
    OpenidConnectProviderContract:
      allOf:
        - description: The Resource definition.
          properties:
            id:
              description: Resource ID.
              readOnly: true
              type: string
            name:
              description: Resource name.
              readOnly: true
              type: string
            type:
              description: Resource type for API Management resource.
              readOnly: true
              type: string
          x-ms-azure-resource: true
      description: OpenId Connect Provider details.
      properties:
        properties:
          $ref: "#/components/schemas/OpenidConnectProviderContractProperties"
    OpenidConnectProviderContractProperties:
      description: OpenID Connect Providers Contract.
      properties:
        clientId:
          description: Client ID of developer console which is the client application.
          type: string
        clientSecret:
          description: Client Secret of developer console which is the client application.
          type: string
        description:
          description: User-friendly description of OpenID Connect Provider.
          type: string
        displayName:
          description: User-friendly OpenID Connect Provider name.
          maxLength: 50
          type: string
        metadataEndpoint:
          description: Metadata endpoint URI.
          type: string
      required:
        - displayName
        - metadataEndpoint
        - clientId
    OpenidConnectProviderUpdateContract:
      description: Parameters supplied to the Update OpenID Connect Provider operation.
      properties:
        properties:
          $ref: "#/components/schemas/OpenidConnectProviderUpdateContractProperties"
    OpenidConnectProviderUpdateContractProperties:
      description: Parameters supplied to the Update OpenID Connect Provider operation.
      properties:
        clientId:
          description: Client ID of developer console which is the client application.
          type: string
        clientSecret:
          description: Client Secret of developer console which is the client application.
          type: string
        description:
          description: User-friendly description of OpenID Connect Provider.
          type: string
        displayName:
          description: User-friendly OpenID Connect Provider name.
          maxLength: 50
          type: string
        metadataEndpoint:
          description: Metadata endpoint URI.
          type: string
    OperationCollection:
      description: Paged Operation list representation.
      properties:
        nextLink:
          description: Next page link if any.
          readOnly: true
          type: string
        value:
          description: Page values.
          items:
            $ref: "#/components/schemas/OperationContract"
          readOnly: true
          type: array
    OperationContract:
      allOf:
        - description: The Resource definition.
          properties:
            id:
              description: Resource ID.
              readOnly: true
              type: string
            name:
              description: Resource name.
              readOnly: true
              type: string
            type:
              description: Resource type for API Management resource.
              readOnly: true
              type: string
          x-ms-azure-resource: true
      description: Api Operation details.
      properties:
        properties:
          $ref: "#/components/schemas/OperationContractProperties"
    OperationContractProperties:
      allOf:
        - $ref: "#/components/schemas/OperationEntityBaseContract"
      description: Operation Contract Properties
      properties:
        displayName:
          description: Operation Name.
          maxLength: 300
          minLength: 1
          type: string
        method:
          description: A Valid HTTP Operation Method. Typical Http Methods like GET, PUT,
            POST but not limited by only them.
          externalDocs:
            description: As defined by RFC.
            url: http://www.rfc-editor.org/rfc/rfc7230.txt
          type: string
        urlTemplate:
          description: "Relative URL template identifying the target resource for this
            operation. May include parameters. Example:
            /customers/{cid}/orders/{oid}/?date={date}"
          maxLength: 1000
          minLength: 1
          type: string
      required:
        - displayName
        - method
        - urlTemplate
    OperationEntityBaseContract:
      description: Api Operation Entity Base Contract details.
      properties:
        description:
          description: Description of the operation. May include HTML formatting tags.
          maxLength: 1000
          type: string
        policies:
          description: Operation Policies
          type: string
        request:
          $ref: "#/components/schemas/RequestContract"
        responses:
          description: Array of Operation responses.
          items:
            $ref: "#/components/schemas/ResponseContract"
          type: array
        templateParameters:
          description: Collection of URL template parameters.
          items:
            $ref: "#/components/schemas/ParameterContract"
          type: array
    OperationResultContract:
      description: Operation Result.
      properties:
        actionLog:
          description: This property if only provided as part of the
            TenantConfiguration_Validate operation. It contains the log the
            entities which will be updated/created/deleted as part of the
            TenantConfiguration_Deploy operation.
          items:
            $ref: "#/components/schemas/OperationResultLogItemContract"
          readOnly: true
          type: array
        error:
          description: Error Body contract.
          properties:
            code:
              description: Service-defined error code. This code serves as a sub-status for
                the HTTP error code specified in the response.
              type: string
            details:
              description: The list of invalid fields send in request, in case of
                validation error.
              items:
                description: Error Field contract.
                properties:
                  code:
                    description: Property level error code.
                    type: string
                  message:
                    description: Human-readable representation of property-level error.
                    type: string
                  target:
                    description: Property name.
                    type: string
              type: array
            message:
              description: Human-readable representation of the error.
              type: string
        id:
          description: Operation result identifier.
          type: string
        resultInfo:
          description: Optional result info.
          type: string
        started:
          description: >
            Start time of an async operation. The date conforms to the following
            format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601
            standard.
          format: date-time
          type: string
        status:
          description: Status of an async operation.
          enum:
            - Started
            - InProgress
            - Succeeded
            - Failed
          type: string
          x-ms-enum:
            modelAsString: false
            name: AsyncOperationStatus
        updated:
          description: >
            Last update time of an async operation. The date conforms to the
            following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO
            8601 standard.
          format: date-time
          type: string
    OperationResultLogItemContract:
      description: Log of the entity being created, updated or deleted.
      properties:
        action:
          description: Action like create/update/delete.
          type: string
        objectKey:
          description: Identifier of the entity being created/updated/deleted.
          type: string
        objectType:
          description: The type of entity contract.
          type: string
    OperationTagResourceContractProperties:
      description: Operation Entity contract Properties.
      properties:
        apiName:
          description: Api Name.
          readOnly: true
          type: string
        apiRevision:
          description: Api Revision.
          readOnly: true
          type: string
        apiVersion:
          description: Api Version.
          readOnly: true
          type: string
        description:
          description: Operation Description.
          readOnly: true
          type: string
        id:
          description: Identifier of the operation in form /operations/{operationId}.
          type: string
        method:
          description: A Valid HTTP Operation Method. Typical Http Methods like GET, PUT,
            POST but not limited by only them.
          externalDocs:
            description: As defined by RFC.
            url: http://www.rfc-editor.org/rfc/rfc7230.txt
          readOnly: true
          type: string
        name:
          description: Operation name.
          readOnly: true
          type: string
        urlTemplate:
          description: "Relative URL template identifying the target resource for this
            operation. May include parameters. Example:
            /customers/{cid}/orders/{oid}/?date={date}"
          readOnly: true
          type: string
    OperationUpdateContract:
      description: Api Operation Update Contract details.
      properties:
        properties:
          $ref: "#/components/schemas/OperationUpdateContractProperties"
    OperationUpdateContractProperties:
      allOf:
        - $ref: "#/components/schemas/OperationEntityBaseContract"
      description: Operation Update Contract Properties.
      properties:
        displayName:
          description: Operation Name.
          maxLength: 300
          minLength: 1
          type: string
        method:
          description: A Valid HTTP Operation Method. Typical Http Methods like GET, PUT,
            POST but not limited by only them.
          externalDocs:
            description: As defined by RFC.
            url: http://www.rfc-editor.org/rfc/rfc7230.txt
          type: string
        urlTemplate:
          description: "Relative URL template identifying the target resource for this
            operation. May include parameters. Example:
            /customers/{cid}/orders/{oid}/?date={date}"
          maxLength: 1000
          minLength: 1
          type: string
    ParameterContract:
      description: Operation parameters details.
      properties:
        defaultValue:
          description: Default parameter value.
          type: string
        description:
          description: Parameter description.
          type: string
        name:
          description: Parameter name.
          type: string
        required:
          description: whether parameter is required or not.
          type: boolean
        type:
          description: Parameter type.
          type: string
        values:
          description: Parameter values.
          items:
            type: string
          type: array
      required:
        - name
        - type
    PipelineDiagnosticSettings:
      description: Diagnostic settings for incoming/outgoing HTTP messages to the Gateway.
      properties:
        request:
          $ref: "#/components/schemas/HttpMessageDiagnostic"
        response:
          $ref: "#/components/schemas/HttpMessageDiagnostic"
    PolicyCollection:
      description: The response of the list policy operation.
      properties:
        nextLink:
          description: Next page link if any.
          type: string
        value:
          description: Policy Contract value.
          items:
            $ref: "#/components/schemas/PolicyContract"
          type: array
    PolicyContract:
      allOf:
        - description: The Resource definition.
          properties:
            id:
              description: Resource ID.
              readOnly: true
              type: string
            name:
              description: Resource name.
              readOnly: true
              type: string
            type:
              description: Resource type for API Management resource.
              readOnly: true
              type: string
          x-ms-azure-resource: true
      description: Policy Contract details.
      properties:
        properties:
          $ref: "#/components/schemas/PolicyContractProperties"
    PolicyContractProperties:
      description: Policy contract Properties.
      properties:
        contentFormat:
          default: xml
          description: Format of the policyContent.
          enum:
            - xml
            - xml-link
            - rawxml
            - rawxml-link
          type: string
          x-ms-enum:
            modelAsString: true
            name: PolicyContentFormat
            values:
              - description: The contents are inline and Content type is an XML document.
                value: xml
              - description: The policy XML document is hosted on a http endpoint
                  accessible from the API Management service.
                value: xml-link
              - description: The contents are inline and Content type is a non XML encoded
                  policy document.
                value: rawxml
              - description: The policy document is not Xml encoded and is hosted on a http
                  endpoint accessible from the API Management service.
                value: rawxml-link
        policyContent:
          description: Json escaped Xml Encoded contents of the Policy.
          type: string
      required:
        - policyContent
    PolicySnippetContract:
      description: Policy snippet.
      properties:
        content:
          description: Snippet content.
          readOnly: true
          type: string
        name:
          description: Snippet name.
          readOnly: true
          type: string
        scope:
          description: Binary OR value of the Snippet scope.
          readOnly: true
          type: integer
        toolTip:
          description: Snippet toolTip.
          readOnly: true
          type: string
    PolicySnippetsCollection:
      description: The response of the list policy snippets operation.
      properties:
        value:
          description: Policy snippet value.
          items:
            $ref: "#/components/schemas/PolicySnippetContract"
          type: array
    PortalDelegationSettings:
      allOf:
        - description: The Resource definition.
          properties:
            id:
              description: Resource ID.
              readOnly: true
              type: string
            name:
              description: Resource name.
              readOnly: true
              type: string
            type:
              description: Resource type for API Management resource.
              readOnly: true
              type: string
          x-ms-azure-resource: true
      description: Delegation settings for a developer portal.
      properties:
        properties:
          $ref: "#/components/schemas/PortalDelegationSettingsProperties"
    PortalDelegationSettingsProperties:
      description: Delegation settings contract properties.
      properties:
        subscriptions:
          $ref: "#/components/schemas/SubscriptionsDelegationSettingsProperties"
        url:
          description: A delegation Url.
          type: string
        userRegistration:
          $ref: "#/components/schemas/RegistrationDelegationSettingsProperties"
        validationKey:
          description: A base64-encoded validation key to validate, that a request is
            coming from Azure API Management.
          type: string
    PortalSigninSettingProperties:
      description: Sign-in settings contract properties.
      properties:
        enabled:
          description: Redirect Anonymous users to the Sign-In page.
          type: boolean
    PortalSigninSettings:
      allOf:
        - description: The Resource definition.
          properties:
            id:
              description: Resource ID.
              readOnly: true
              type: string
            name:
              description: Resource name.
              readOnly: true
              type: string
            type:
              description: Resource type for API Management resource.
              readOnly: true
              type: string
          x-ms-azure-resource: true
      description: Sign-In settings for the Developer Portal.
      properties:
        properties:
          $ref: "#/components/schemas/PortalSigninSettingProperties"
    PortalSignupSettings:
      allOf:
        - description: The Resource definition.
          properties:
            id:
              description: Resource ID.
              readOnly: true
              type: string
            name:
              description: Resource name.
              readOnly: true
              type: string
            type:
              description: Resource type for API Management resource.
              readOnly: true
              type: string
          x-ms-azure-resource: true
      description: Sign-Up settings for a developer portal.
      properties:
        properties:
          $ref: "#/components/schemas/PortalSignupSettingsProperties"
    PortalSignupSettingsProperties:
      description: Sign-up settings contract properties.
      properties:
        enabled:
          description: Allow users to sign up on a developer portal.
          type: boolean
        termsOfService:
          $ref: "#/components/schemas/TermsOfServiceProperties"
    ProductCollection:
      description: Paged Products list representation.
      properties:
        nextLink:
          description: Next page link if any.
          type: string
        value:
          description: Page values.
          items:
            $ref: "#/components/schemas/ProductContract"
          type: array
    ProductContract:
      allOf:
        - description: The Resource definition.
          properties:
            id:
              description: Resource ID.
              readOnly: true
              type: string
            name:
              description: Resource name.
              readOnly: true
              type: string
            type:
              description: Resource type for API Management resource.
              readOnly: true
              type: string
          x-ms-azure-resource: true
      description: Product details.
      properties:
        properties:
          $ref: "#/components/schemas/ProductContractProperties"
    ProductContractProperties:
      allOf:
        - $ref: "#/components/schemas/ProductEntityBaseParameters"
      description: Product profile.
      properties:
        displayName:
          description: Product name.
          maxLength: 300
          minLength: 1
          type: string
      required:
        - displayName
    ProductEntityBaseParameters:
      description: Product Entity Base Parameters
      properties:
        approvalRequired:
          description: whether subscription approval is required. If false, new
            subscriptions will be approved automatically enabling developers to
            call the product’s APIs immediately after subscribing. If true,
            administrators must manually approve the subscription before the
            developer can any of the product’s APIs. Can be present only if
            subscriptionRequired property is present and has a value of false.
          type: boolean
        description:
          description: Product description. May include HTML formatting tags.
          maxLength: 1000
          minLength: 1
          type: string
        state:
          description: whether product is published or not. Published products are
            discoverable by users of developer portal. Non published products
            are visible only to administrators. Default state of Product is
            notPublished.
          enum:
            - notPublished
            - published
          type: string
          x-ms-enum:
            modelAsString: false
            name: ProductState
        subscriptionRequired:
          description: Whether a product subscription is required for accessing APIs
            included in this product. If true, the product is referred to as
            "protected" and a valid subscription key is required for a request
            to an API included in the product to succeed. If false, the product
            is referred to as "open" and requests to an API included in the
            product can be made without a subscription key. If property is
            omitted when creating a new product it's value is assumed to be
            true.
          type: boolean
        subscriptionsLimit:
          description: Whether the number of subscriptions a user can have to this product
            at the same time. Set to null or omit to allow unlimited per user
            subscriptions. Can be present only if subscriptionRequired property
            is present and has a value of false.
          format: int32
          type: integer
        terms:
          description: Product terms of use. Developers trying to subscribe to the product
            will be presented and required to accept these terms before they can
            complete the subscription process.
          type: string
    ProductTagResourceContractProperties:
      allOf:
        - description: Product Entity Base Parameters
          properties:
            approvalRequired:
              description: whether subscription approval is required. If false, new
                subscriptions will be approved automatically enabling developers
                to call the product’s APIs immediately after subscribing. If
                true, administrators must manually approve the subscription
                before the developer can any of the product’s APIs. Can be
                present only if subscriptionRequired property is present and has
                a value of false.
              type: boolean
            description:
              description: Product description. May include HTML formatting tags.
              maxLength: 1000
              minLength: 1
              type: string
            state:
              description: whether product is published or not. Published products are
                discoverable by users of developer portal. Non published
                products are visible only to administrators. Default state of
                Product is notPublished.
              enum:
                - notPublished
                - published
              type: string
              x-ms-enum:
                modelAsString: false
                name: ProductState
            subscriptionRequired:
              description: Whether a product subscription is required for accessing APIs
                included in this product. If true, the product is referred to as
                "protected" and a valid subscription key is required for a
                request to an API included in the product to succeed. If false,
                the product is referred to as "open" and requests to an API
                included in the product can be made without a subscription key.
                If property is omitted when creating a new product it's value is
                assumed to be true.
              type: boolean
            subscriptionsLimit:
              description: Whether the number of subscriptions a user can have to this
                product at the same time. Set to null or omit to allow unlimited
                per user subscriptions. Can be present only if
                subscriptionRequired property is present and has a value of
                false.
              format: int32
              type: integer
            terms:
              description: Product terms of use. Developers trying to subscribe to the
                product will be presented and required to accept these terms
                before they can complete the subscription process.
              type: string
      description: Product profile.
      properties:
        id:
          description: Identifier of the product in the form of /products/{productId}
          type: string
        name:
          description: Product name.
          maxLength: 300
          minLength: 1
          type: string
      required:
        - name
    ProductUpdateParameters:
      description: Product Update parameters.
      properties:
        properties:
          $ref: "#/components/schemas/ProductUpdateProperties"
    ProductUpdateProperties:
      allOf:
        - $ref: "#/components/schemas/ProductEntityBaseParameters"
      description: Parameters supplied to the Update Product operation.
      properties:
        displayName:
          description: Product name.
          maxLength: 300
          minLength: 1
          type: string
    PropertyCollection:
      description: Paged Property list representation.
      properties:
        nextLink:
          description: Next page link if any.
          type: string
        value:
          description: Page values.
          items:
            $ref: "#/components/schemas/PropertyContract"
          type: array
    PropertyContract:
      allOf:
        - description: The Resource definition.
          properties:
            id:
              description: Resource ID.
              readOnly: true
              type: string
            name:
              description: Resource name.
              readOnly: true
              type: string
            type:
              description: Resource type for API Management resource.
              readOnly: true
              type: string
          x-ms-azure-resource: true
      description: Property details.
      properties:
        properties:
          $ref: "#/components/schemas/PropertyContractProperties"
    PropertyContractProperties:
      allOf:
        - $ref: "#/components/schemas/PropertyEntityBaseParameters"
      description: Property Contract properties.
      properties:
        displayName:
          description: Unique name of Property. It may contain only letters, digits,
            period, dash, and underscore characters.
          maxLength: 256
          minLength: 1
          pattern: ^[A-Za-z0-9-._]+$
          type: string
        value:
          description: Value of the property. Can contain policy expressions. It may not be
            empty or consist only of whitespace.
          maxLength: 4096
          minLength: 1
          type: string
      required:
        - displayName
        - value
    PropertyEntityBaseParameters:
      description: Property Entity Base Parameters set.
      properties:
        secret:
          description: Determines whether the value is a secret and should be encrypted or
            not. Default value is false.
          type: boolean
        tags:
          description: Optional tags that when provided can be used to filter the property
            list.
          items:
            type: string
          maxItems: 32
          type: array
    PropertyUpdateParameterProperties:
      allOf:
        - $ref: "#/components/schemas/PropertyEntityBaseParameters"
      description: Property Contract properties.
      properties:
        displayName:
          description: Unique name of Property. It may contain only letters, digits,
            period, dash, and underscore characters.
          maxLength: 256
          minLength: 1
          pattern: ^[A-Za-z0-9-._]+$
          type: string
        value:
          description: Value of the property. Can contain policy expressions. It may not be
            empty or consist only of whitespace.
          maxLength: 4096
          minLength: 1
          type: string
    PropertyUpdateParameters:
      description: Property update Parameters.
      properties:
        properties:
          $ref: "#/components/schemas/PropertyUpdateParameterProperties"
    QuotaCounterCollection:
      description: Paged Quota Counter list representation.
      properties:
        count:
          description: Total record count number across all pages.
          format: int64
          type: integer
        nextLink:
          description: Next page link if any.
          type: string
        value:
          description: Quota counter values.
          items:
            $ref: "#/components/schemas/QuotaCounterContract"
          type: array
    QuotaCounterContract:
      description: Quota counter details.
      properties:
        counterKey:
          description: The Key value of the Counter. Must not be empty.
          minLength: 1
          type: string
        periodEndTime:
          description: >
            The date of the end of Counter Period. The date conforms to the
            following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO
            8601 standard.
          format: date-time
          type: string
        periodKey:
          description: Identifier of the Period for which the counter was collected. Must
            not be empty.
          minLength: 1
          type: string
        periodStartTime:
          description: >
            The date of the start of Counter Period. The date conforms to the
            following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO
            8601 standard.
          format: date-time
          type: string
        value:
          $ref: "#/components/schemas/QuotaCounterValueContractProperties"
      required:
        - counterKey
        - periodKey
        - periodStartTime
        - periodEndTime
    QuotaCounterValueContract:
      description: Quota counter value details.
      properties:
        value:
          $ref: "#/components/schemas/QuotaCounterValueContractProperties"
    QuotaCounterValueContractProperties:
      description: Quota counter value details.
      properties:
        callsCount:
          description: Number of times Counter was called.
          format: int32
          type: integer
        kbTransferred:
          description: Data Transferred in KiloBytes.
          format: double
          type: number
    RecipientEmailCollection:
      description: Paged Recipient User list representation.
      properties:
        nextLink:
          description: Next page link if any.
          type: string
        value:
          description: Page values.
          items:
            $ref: "#/components/schemas/RecipientEmailContract"
          type: array
    RecipientEmailContract:
      allOf:
        - description: The Resource definition.
          properties:
            id:
              description: Resource ID.
              readOnly: true
              type: string
            name:
              description: Resource name.
              readOnly: true
              type: string
            type:
              description: Resource type for API Management resource.
              readOnly: true
              type: string
          x-ms-azure-resource: true
      description: Recipient Email details.
      properties:
        properties:
          $ref: "#/components/schemas/RecipientEmailContractProperties"
    RecipientEmailContractProperties:
      description: Recipient Email Contract Properties.
      properties:
        email:
          description: User Email subscribed to notification.
          type: string
    RecipientUserCollection:
      description: Paged Recipient User list representation.
      properties:
        nextLink:
          description: Next page link if any.
          type: string
        value:
          description: Page values.
          items:
            $ref: "#/components/schemas/RecipientUserContract"
          type: array
    RecipientUserContract:
      allOf:
        - description: The Resource definition.
          properties:
            id:
              description: Resource ID.
              readOnly: true
              type: string
            name:
              description: Resource name.
              readOnly: true
              type: string
            type:
              description: Resource type for API Management resource.
              readOnly: true
              type: string
          x-ms-azure-resource: true
      description: Recipient User details.
      properties:
        properties:
          $ref: "#/components/schemas/RecipientUsersContractProperties"
    RecipientUsersContractProperties:
      description: Recipient User Contract Properties.
      properties:
        userId:
          description: API Management UserId subscribed to notification.
          type: string
    RecipientsContractProperties:
      description: Notification Parameter contract.
      properties:
        emails:
          description: List of Emails subscribed for the notification.
          items:
            type: string
          type: array
        users:
          description: List of Users subscribed for the notification.
          items:
            type: string
          type: array
    RegistrationDelegationSettingsProperties:
      description: User registration delegation settings properties.
      properties:
        enabled:
          description: Enable or disable delegation for user registration.
          type: boolean
    ReportCollection:
      description: Paged Report records list representation.
      properties:
        count:
          description: Total record count number across all pages.
          format: int64
          type: integer
        nextLink:
          description: Next page link if any.
          type: string
        value:
          description: Page values.
          items:
            $ref: "#/components/schemas/ReportRecordContract"
          type: array
    ReportRecordContract:
      description: Report data.
      properties:
        apiId:
          description: API identifier path. /apis/{apiId}
          type: string
        apiRegion:
          description: API region identifier.
          type: string
        apiTimeAvg:
          description: Average time it took to process request.
          format: double
          type: number
        apiTimeMax:
          description: Maximum time it took to process request.
          format: double
          type: number
        apiTimeMin:
          description: Minimum time it took to process request.
          format: double
          type: number
        bandwidth:
          description: Bandwidth consumed.
          format: int64
          type: integer
        cacheHitCount:
          description: Number of times when content was served from cache policy.
          format: int32
          type: integer
        cacheMissCount:
          description: Number of times content was fetched from backend.
          format: int32
          type: integer
        callCountBlocked:
          description: Number of calls blocked due to invalid credentials. This includes
            calls returning HttpStatusCode.Unauthorized and
            HttpStatusCode.Forbidden and HttpStatusCode.TooManyRequests
          format: int32
          type: integer
        callCountFailed:
          description: Number of calls failed due to proxy or backend errors. This includes
            calls returning HttpStatusCode.BadRequest(400) and any Code between
            HttpStatusCode.InternalServerError (500) and 600
          format: int32
          type: integer
        callCountOther:
          description: Number of other calls.
          format: int32
          type: integer
        callCountSuccess:
          description: Number of successful calls. This includes calls returning
            HttpStatusCode <= 301 and HttpStatusCode.NotModified and
            HttpStatusCode.TemporaryRedirect
          format: int32
          type: integer
        callCountTotal:
          description: Total number of calls.
          format: int32
          type: integer
        country:
          description: Country to which this record data is related.
          type: string
        interval:
          description: Length of aggregation period.  Interval must be multiple of 15
            minutes and may not be zero. The value should be in ISO 8601 format
            (http://en.wikipedia.org/wiki/ISO_8601#Durations).
          type: string
        name:
          description: Name depending on report endpoint specifies product, API, operation
            or developer name.
          type: string
        operationId:
          description: Operation identifier path. /apis/{apiId}/operations/{operationId}
          type: string
        productId:
          description: Product identifier path. /products/{productId}
          readOnly: true
          type: string
        region:
          description: Country region to which this record data is related.
          type: string
        serviceTimeAvg:
          description: Average time it took to process request on backend.
          format: double
          type: number
        serviceTimeMax:
          description: Maximum time it took to process request on backend.
          format: double
          type: number
        serviceTimeMin:
          description: Minimum time it took to process request on backend.
          format: double
          type: number
        subscriptionId:
          description: Subscription identifier path. /subscriptions/{subscriptionId}
          type: string
        timestamp:
          description: >
            Start of aggregation period. The date conforms to the following
            format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601
            standard.
          format: date-time
          type: string
        userId:
          description: User identifier path. /users/{userId}
          readOnly: true
          type: string
        zip:
          description: Zip code to which this record data is related.
          type: string
    RepresentationContract:
      description: Operation request/response representation details.
      properties:
        contentType:
          description: Specifies a registered or custom content type for this
            representation, e.g. application/xml.
          type: string
        formParameters:
          description: Collection of form parameters. Required if 'contentType' value is
            either 'application/x-www-form-urlencoded' or
            'multipart/form-data'..
          items:
            $ref: "#/components/schemas/ParameterContract"
          type: array
        sample:
          description: An example of the representation.
          type: string
        schemaId:
          description: Schema identifier. Applicable only if 'contentType' value is neither
            'application/x-www-form-urlencoded' nor 'multipart/form-data'.
          type: string
        typeName:
          description: Type name defined by the schema. Applicable only if 'contentType'
            value is neither 'application/x-www-form-urlencoded' nor
            'multipart/form-data'.
          type: string
      required:
        - contentType
    RequestContract:
      description: Operation request details.
      properties:
        description:
          description: Operation request description.
          type: string
        headers:
          description: Collection of operation request headers.
          items:
            $ref: "#/components/schemas/ParameterContract"
          type: array
        queryParameters:
          description: Collection of operation request query parameters.
          items:
            $ref: "#/components/schemas/ParameterContract"
          type: array
        representations:
          description: Collection of operation request representations.
          items:
            $ref: "#/components/schemas/RepresentationContract"
          type: array
    RequestReportCollection:
      description: Paged Report records list representation.
      properties:
        count:
          description: Total record count number across all pages.
          format: int64
          type: integer
        value:
          description: Page values.
          items:
            $ref: "#/components/schemas/RequestReportRecordContract"
          type: array
    RequestReportRecordContract:
      description: Request Report data.
      properties:
        apiId:
          description: API identifier path. /apis/{apiId}
          type: string
        apiRegion:
          description: Azure region where the gateway that processed this request is
            located.
          type: string
        apiTime:
          description: The total time it took to process this request.
          format: double
          type: number
        backendResponseCode:
          description: The HTTP status code received by the gateway as a result of
            forwarding this request to the backend.
          type: string
        cache:
          description: Specifies if response cache was involved in generating the response.
            If the value is none, the cache was not used. If the value is hit,
            cached response was returned. If the value is miss, the cache was
            used but lookup resulted in a miss and request was fulfilled by the
            backend.
          type: string
        ipAddress:
          description: The client IP address associated with this request.
          type: string
        method:
          description: The HTTP method associated with this request..
          type: string
        operationId:
          description: Operation identifier path. /apis/{apiId}/operations/{operationId}
          type: string
        productId:
          description: Product identifier path. /products/{productId}
          readOnly: true
          type: string
        requestId:
          description: Request Identifier.
          type: string
        requestSize:
          description: The size of this request..
          format: int32
          type: integer
        responseCode:
          description: The HTTP status code returned by the gateway.
          format: int32
          type: integer
        responseSize:
          description: The size of the response returned by the gateway.
          format: int32
          type: integer
        serviceTime:
          description: he time it took to forward this request to the backend and get the
            response back.
          format: double
          type: number
        subscriptionId:
          description: Subscription identifier path. /subscriptions/{subscriptionId}
          type: string
        timestamp:
          description: The date and time when this request was received by the gateway in
            ISO 8601 format.
          format: date-time
          type: string
        url:
          description: The full URL associated with this request.
          type: string
        userId:
          description: User identifier path. /users/{userId}
          readOnly: true
          type: string
    ResponseContract:
      description: Operation response details.
      properties:
        description:
          description: Operation response description.
          type: string
        headers:
          description: Collection of operation response headers.
          items:
            $ref: "#/components/schemas/ParameterContract"
          type: array
        representations:
          description: Collection of operation response representations.
          items:
            $ref: "#/components/schemas/RepresentationContract"
          type: array
        statusCode:
          description: Operation response HTTP status code.
          format: int32
          type: integer
      required:
        - statusCode
    SamplingSettings:
      description: Sampling settings for Diagnostic.
      properties:
        percentage:
          description: Rate of sampling for fixed-rate sampling.
          format: double
          maximum: 100
          minimum: 0
          type: number
        samplingType:
          description: Sampling type.
          enum:
            - fixed
          type: string
          x-ms-enum:
            modelAsString: true
            name: SamplingType
            values:
              - description: Fixed-rate sampling.
                value: fixed
    SaveConfigurationParameter:
      description: Parameters supplied to the Save Tenant Configuration operation.
      properties:
        branch:
          description: The name of the Git branch in which to commit the current
            configuration snapshot.
          type: string
        force:
          description: The value if true, the current configuration database is committed
            to the Git repository, even if the Git repository has newer changes
            that would be overwritten.
          type: boolean
      required:
        - branch
    SchemaCollection:
      description: The response of the list schema operation.
      properties:
        nextLink:
          description: Next page link if any.
          readOnly: true
          type: string
        value:
          description: Api Schema Contract value.
          items:
            $ref: "#/components/schemas/SchemaContract"
          readOnly: true
          type: array
    SchemaContract:
      allOf:
        - description: The Resource definition.
          properties:
            id:
              description: Resource ID.
              readOnly: true
              type: string
            name:
              description: Resource name.
              readOnly: true
              type: string
            type:
              description: Resource type for API Management resource.
              readOnly: true
              type: string
          x-ms-azure-resource: true
      description: Schema Contract details.
      properties:
        properties:
          $ref: "#/components/schemas/SchemaContractProperties"
    SchemaContractProperties:
      description: Schema contract Properties.
      properties:
        contentType:
          description: Must be a valid a media type used in a Content-Type header as
            defined in the RFC 2616. Media type of the schema document (e.g.
            application/json, application/xml).
          type: string
        document:
          $ref: "#/components/schemas/SchemaDocumentProperties"
      required:
        - contentType
    SchemaDocumentProperties:
      description: Schema Document Properties.
      properties:
        value:
          description: Json escaped string defining the document representing the Schema.
          type: string
    SubscriptionCollection:
      description: Paged Subscriptions list representation.
      properties:
        nextLink:
          description: Next page link if any.
          type: string
        value:
          description: Page values.
          items:
            $ref: "#/components/schemas/SubscriptionContract"
          type: array
    SubscriptionContract:
      allOf:
        - description: The Resource definition.
          properties:
            id:
              description: Resource ID.
              readOnly: true
              type: string
            name:
              description: Resource name.
              readOnly: true
              type: string
            type:
              description: Resource type for API Management resource.
              readOnly: true
              type: string
          x-ms-azure-resource: true
      description: Subscription details.
      properties:
        properties:
          $ref: "#/components/schemas/SubscriptionContractProperties"
    SubscriptionContractProperties:
      description: Subscription details.
      properties:
        allowTracing:
          description: Determines whether tracing is enabled
          type: boolean
          x-apim-code-nillable: true
        createdDate:
          description: >
            Subscription creation date. The date conforms to the following
            format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601
            standard.
          format: date-time
          readOnly: true
          type: string
        displayName:
          description: The name of the subscription, or null if the subscription has no
            name.
          maxLength: 100
          minLength: 0
          type: string
        endDate:
          description: >
            Date when subscription was cancelled or expired. The setting is for
            audit purposes only and the subscription is not automatically
            cancelled. The subscription lifecycle can be managed by using the
            `state` property. The date conforms to the following format:
            `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.
          format: date-time
          type: string
        expirationDate:
          description: >
            Subscription expiration date. The setting is for audit purposes only
            and the subscription is not automatically expired. The subscription
            lifecycle can be managed by using the `state` property. The date
            conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as
            specified by the ISO 8601 standard.
          format: date-time
          type: string
        notificationDate:
          description: >
            Upcoming subscription expiration notification date. The date
            conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as
            specified by the ISO 8601 standard.
          format: date-time
          type: string
        ownerId:
          description: The user resource identifier of the subscription owner. The value is
            a valid relative URL in the format of /users/{userId} where {userId}
            is a user identifier.
          type: string
        primaryKey:
          description: Subscription primary key.
          maxLength: 256
          minLength: 1
          type: string
        scope:
          description: Scope like /products/{productId} or /apis or /apis/{apiId}.
          type: string
        secondaryKey:
          description: Subscription secondary key.
          maxLength: 256
          minLength: 1
          type: string
        startDate:
          description: >
            Subscription activation date. The setting is for audit purposes only
            and the subscription is not automatically activated. The
            subscription lifecycle can be managed by using the `state` property.
            The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as
            specified by the ISO 8601 standard.
          format: date-time
          type: string
        state:
          description: Subscription state. Possible states are * active – the subscription
            is active, * suspended – the subscription is blocked, and the
            subscriber cannot call any APIs of the product, * submitted – the
            subscription request has been made by the developer, but has not yet
            been approved or rejected, * rejected – the subscription request has
            been denied by an administrator, * cancelled – the subscription has
            been cancelled by the developer or administrator, * expired – the
            subscription reached its expiration date and was deactivated.
          enum:
            - suspended
            - active
            - expired
            - submitted
            - rejected
            - cancelled
          type: string
          x-ms-enum:
            modelAsString: false
            name: SubscriptionState
        stateComment:
          description: Optional subscription comment added by an administrator.
          type: string
      required:
        - scope
        - state
        - primaryKey
        - secondaryKey
    SubscriptionCreateParameterProperties:
      description: Parameters supplied to the Create subscription operation.
      properties:
        allowTracing:
          description: Determines whether tracing can be enabled
          type: boolean
        displayName:
          description: Subscription name.
          maxLength: 100
          minLength: 1
          type: string
        ownerId:
          description: User (user id path) for whom subscription is being created in form
            /users/{userId}
          type: string
        primaryKey:
          description: Primary subscription key. If not specified during request key will
            be generated automatically.
          maxLength: 256
          minLength: 1
          type: string
        scope:
          description: Scope like /products/{productId} or /apis or /apis/{apiId}.
          type: string
        secondaryKey:
          description: Secondary subscription key. If not specified during request key will
            be generated automatically.
          maxLength: 256
          minLength: 1
          type: string
        state:
          description: Initial subscription state. If no value is specified, subscription
            is created with Submitted state. Possible states are * active – the
            subscription is active, * suspended – the subscription is blocked,
            and the subscriber cannot call any APIs of the product, * submitted
            – the subscription request has been made by the developer, but has
            not yet been approved or rejected, * rejected – the subscription
            request has been denied by an administrator, * cancelled – the
            subscription has been cancelled by the developer or administrator, *
            expired – the subscription reached its expiration date and was
            deactivated.
          enum:
            - suspended
            - active
            - expired
            - submitted
            - rejected
            - cancelled
          type: string
          x-ms-enum:
            modelAsString: false
            name: SubscriptionState
      required:
        - scope
        - displayName
    SubscriptionCreateParameters:
      description: Subscription create details.
      properties:
        properties:
          $ref: "#/components/schemas/SubscriptionCreateParameterProperties"
    SubscriptionKeyParameterNamesContract:
      description: Subscription key parameter names details.
      example:
        subscriptionKeyParameterNames:
          header: customHeaderParameterName
          query: customQueryParameterName
      properties:
        header:
          description: Subscription key header name.
          type: string
        query:
          description: Subscription key query string parameter name.
          type: string
    SubscriptionUpdateParameterProperties:
      description: Parameters supplied to the Update subscription operation.
      properties:
        allowTracing:
          description: Determines whether tracing can be enabled
          type: boolean
        displayName:
          description: Subscription name.
          type: string
        expirationDate:
          description: "Subscription expiration date. The setting is for audit purposes
            only and the subscription is not automatically expired. The
            subscription lifecycle can be managed by using the `state` property.
            The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as
            specified by the ISO 8601 standard."
          format: date-time
          type: string
        ownerId:
          description: "User identifier path: /users/{userId}"
          type: string
        primaryKey:
          description: Primary subscription key.
          maxLength: 256
          minLength: 1
          type: string
        scope:
          description: Scope like /products/{productId} or /apis or /apis/{apiId}
          type: string
        secondaryKey:
          description: Secondary subscription key.
          maxLength: 256
          minLength: 1
          type: string
        state:
          description: Subscription state. Possible states are * active – the subscription
            is active, * suspended – the subscription is blocked, and the
            subscriber cannot call any APIs of the product, * submitted – the
            subscription request has been made by the developer, but has not yet
            been approved or rejected, * rejected – the subscription request has
            been denied by an administrator, * cancelled – the subscription has
            been cancelled by the developer or administrator, * expired – the
            subscription reached its expiration date and was deactivated.
          enum:
            - suspended
            - active
            - expired
            - submitted
            - rejected
            - cancelled
          type: string
          x-ms-enum:
            modelAsString: false
            name: SubscriptionState
        stateComment:
          description: Comments describing subscription state change by the administrator.
          type: string
    SubscriptionUpdateParameters:
      description: Subscription update details.
      properties:
        properties:
          $ref: "#/components/schemas/SubscriptionUpdateParameterProperties"
    SubscriptionsDelegationSettingsProperties:
      description: Subscriptions delegation settings properties.
      properties:
        enabled:
          description: Enable or disable delegation for subscriptions.
          type: boolean
    TagCollection:
      description: Paged Tag list representation.
      properties:
        nextLink:
          description: Next page link if any.
          type: string
        value:
          description: Page values.
          items:
            $ref: "#/components/schemas/TagContract"
          type: array
    TagContract:
      allOf:
        - description: The Resource definition.
          properties:
            id:
              description: Resource ID.
              readOnly: true
              type: string
            name:
              description: Resource name.
              readOnly: true
              type: string
            type:
              description: Resource type for API Management resource.
              readOnly: true
              type: string
          x-ms-azure-resource: true
      description: Tag Contract details.
      properties:
        properties:
          $ref: "#/components/schemas/TagContractProperties"
    TagContractProperties:
      description: Tag contract Properties.
      properties:
        displayName:
          description: Tag name.
          maxLength: 160
          minLength: 1
          type: string
      required:
        - displayName
    TagCreateUpdateParameters:
      description: Parameters supplied to Create/Update Tag operations.
      properties:
        properties:
          $ref: "#/components/schemas/TagContractProperties"
    TagDescriptionBaseProperties:
      description: Parameters supplied to the Create TagDescription operation.
      properties:
        description:
          description: Description of the Tag.
          type: string
        externalDocsDescription:
          description: Description of the external resources describing the tag.
          type: string
        externalDocsUrl:
          description: Absolute URL of external resources describing the tag.
          maxLength: 2000
          type: string
    TagDescriptionCollection:
      description: Paged TagDescription list representation.
      properties:
        nextLink:
          description: Next page link if any.
          type: string
        value:
          description: Page values.
          items:
            $ref: "#/components/schemas/TagDescriptionContract"
          type: array
    TagDescriptionContract:
      allOf:
        - description: The Resource definition.
          properties:
            id:
              description: Resource ID.
              readOnly: true
              type: string
            name:
              description: Resource name.
              readOnly: true
              type: string
            type:
              description: Resource type for API Management resource.
              readOnly: true
              type: string
          x-ms-azure-resource: true
      description: Contract details.
      properties:
        properties:
          $ref: "#/components/schemas/TagDescriptionContractProperties"
    TagDescriptionContractProperties:
      allOf:
        - $ref: "#/components/schemas/TagDescriptionBaseProperties"
      description: TagDescription contract Properties.
      properties:
        displayName:
          description: Tag name.
          maxLength: 160
          minLength: 1
          type: string
    TagDescriptionCreateParameters:
      description: Parameters supplied to the Create TagDescription operation.
      properties:
        properties:
          $ref: "#/components/schemas/TagDescriptionBaseProperties"
    TagResourceCollection:
      description: Paged Tag list representation.
      properties:
        nextLink:
          description: Next page link if any.
          type: string
        value:
          description: Page values.
          items:
            $ref: "#/components/schemas/TagResourceContract"
          type: array
    TagResourceContract:
      description: TagResource contract properties.
      properties:
        api:
          $ref: "#/components/schemas/ApiTagResourceContractProperties"
        operation:
          $ref: "#/components/schemas/OperationTagResourceContractProperties"
        product:
          $ref: "#/components/schemas/ProductTagResourceContractProperties"
        tag:
          $ref: "#/components/schemas/TagTagResourceContractProperties"
      required:
        - tag
    TagTagResourceContractProperties:
      description: Contract defining the Tag property in the Tag Resource Contract
      properties:
        id:
          description: Tag identifier
          type: string
        name:
          description: Tag Name
          maxLength: 160
          minLength: 1
          type: string
    TenantConfigurationSyncStateContract:
      description: Tenant Configuration Synchronization State.
      properties:
        branch:
          description: The name of Git branch.
          type: string
        commitId:
          description: The latest commit Id.
          type: string
        configurationChangeDate:
          description: >
            The date of the latest configuration change. The date conforms to
            the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO
            8601 standard.
          format: date-time
          type: string
        isExport:
          description: value indicating if last sync was save (true) or deploy (false)
            operation.
          type: boolean
        isGitEnabled:
          description: value indicating whether Git configuration access is enabled.
          type: boolean
        isSynced:
          description: value indicating if last synchronization was later than the
            configuration change.
          type: boolean
        syncDate:
          description: >
            The date of the latest synchronization. The date conforms to the
            following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO
            8601 standard.
          format: date-time
          type: string
    TermsOfServiceProperties:
      description: Terms of service contract properties.
      properties:
        consentRequired:
          description: Ask user for consent to the terms of service.
          type: boolean
        enabled:
          description: Display terms of service during a sign-up process.
          type: boolean
        text:
          description: A terms of service text.
          type: string
    TokenBodyParameterContract:
      description: OAuth acquire token request body parameter (www-url-form-encoded).
      properties:
        name:
          description: body parameter name.
          type: string
        value:
          description: body parameter value.
          type: string
      required:
        - name
        - value
    UserCollection:
      description: Paged Users list representation.
      properties:
        nextLink:
          description: Next page link if any.
          type: string
        value:
          description: Page values.
          items:
            $ref: "#/components/schemas/UserContract"
          type: array
    UserContract:
      allOf:
        - description: The Resource definition.
          properties:
            id:
              description: Resource ID.
              readOnly: true
              type: string
            name:
              description: Resource name.
              readOnly: true
              type: string
            type:
              description: Resource type for API Management resource.
              readOnly: true
              type: string
          x-ms-azure-resource: true
      description: User details.
      properties:
        properties:
          $ref: "#/components/schemas/UserContractProperties"
    UserContractProperties:
      allOf:
        - $ref: "#/components/schemas/UserEntityBaseParameters"
      description: User profile.
      properties:
        email:
          description: Email address.
          type: string
        firstName:
          description: First name.
          type: string
        groups:
          description: Collection of groups user is part of.
          items:
            description: Group contract Properties.
            properties:
              builtIn:
                description: true if the group is one of the three system groups
                  (Administrators, Developers, or Guests); otherwise false.
                readOnly: true
                type: boolean
              description:
                description: Group description. Can contain HTML formatting tags.
                maxLength: 1000
                type: string
              displayName:
                description: Group name.
                maxLength: 300
                minLength: 1
                type: string
              externalId:
                description: For external groups, this property contains the id of the
                  group from the external identity provider, e.g. for Azure
                  Active Directory `aad://<tenant>.onmicrosoft.com/groups/<group
                  object id>`; otherwise the value is null.
                type: string
              type:
                description: Group type.
                enum:
                  - custom
                  - system
                  - external
                type: string
                x-ms-enum:
                  modelAsString: false
                  name: GroupType
            required:
              - displayName
          readOnly: true
          type: array
        lastName:
          description: Last name.
          type: string
        registrationDate:
          description: >
            Date of user registration. The date conforms to the following
            format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601
            standard.
          format: date-time
          type: string
    UserCreateParameterProperties:
      allOf:
        - $ref: "#/components/schemas/UserEntityBaseParameters"
      description: Parameters supplied to the Create User operation.
      properties:
        confirmation:
          description: Determines the type of confirmation e-mail that will be sent to the
            newly created user.
          enum:
            - signup
            - invite
          type: string
          x-ms-enum:
            modelAsString: true
            name: Confirmation
            values:
              - description: Send an e-mail to the user confirming they have successfully
                  signed up.
                value: signup
              - description: Send an e-mail inviting the user to sign-up and complete
                  registration.
                value: invite
        email:
          description: Email address. Must not be empty and must be unique within the
            service instance.
          maxLength: 254
          minLength: 1
          type: string
        firstName:
          description: First name.
          maxLength: 100
          minLength: 1
          type: string
        lastName:
          description: Last name.
          maxLength: 100
          minLength: 1
          type: string
        password:
          description: User Password. If no value is provided, a default password is
            generated.
          type: string
      required:
        - email
        - firstName
        - lastName
    UserCreateParameters:
      description: User create details.
      properties:
        properties:
          $ref: "#/components/schemas/UserCreateParameterProperties"
    UserEntityBaseParameters:
      description: User Entity Base Parameters set.
      properties:
        identities:
          description: Collection of user identities.
          items:
            $ref: "#/components/schemas/UserIdentityContract"
          type: array
        note:
          description: Optional note about a user set by the administrator.
          type: string
        state:
          default: active
          description: Account state. Specifies whether the user is active or not. Blocked
            users are unable to sign into the developer portal or call any APIs
            of subscribed products. Default state is Active.
          enum:
            - active
            - blocked
            - pending
            - deleted
          type: string
          x-ms-enum:
            modelAsString: true
            name: UserState
            values:
              - description: User state is active.
                value: active
              - description: User is blocked. Blocked users cannot authenticate at
                  developer portal or call API.
                value: blocked
              - description: User account is pending. Requires identity confirmation before
                  it can be made active.
                value: pending
              - description: User account is closed. All identities and related entities
                  are removed.
                value: deleted
    UserIdentityCollection:
      description: List of Users Identity list representation.
      properties:
        count:
          description: Total record count number across all pages.
          format: int64
          type: integer
        nextLink:
          description: Next page link if any.
          type: string
        value:
          description: User Identity values.
          items:
            $ref: "#/components/schemas/UserIdentityContract"
          type: array
    UserIdentityContract:
      description: User identity details.
      properties:
        id:
          description: Identifier value within provider.
          type: string
        provider:
          description: Identity provider name.
          type: string
    UserTokenParameters:
      description: Parameters supplied to the Get User Token operation.
      properties:
        expiry:
          description: >
            The Expiry time of the Token. Maximum token expiry time is set to 30
            days. The date conforms to the following format:
            `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.
          format: date-time
          type: string
        keyType:
          default: primary
          description: The Key to be used to generate token for user.
          enum:
            - primary
            - secondary
          type: string
          x-ms-enum:
            modelAsString: false
            name: KeyType
      required:
        - keyType
        - expiry
    UserTokenResult:
      description: Get User Token response details.
      properties:
        value:
          description: Shared Access Authorization token for the User.
          type: string
    UserUpdateParameters:
      description: User update parameters.
      properties:
        properties:
          $ref: "#/components/schemas/UserUpdateParametersProperties"
    UserUpdateParametersProperties:
      allOf:
        - $ref: "#/components/schemas/UserEntityBaseParameters"
      description: Parameters supplied to the Update User operation.
      properties:
        email:
          description: Email address. Must not be empty and must be unique within the
            service instance.
          maxLength: 254
          minLength: 1
          type: string
        firstName:
          description: First name.
          maxLength: 100
          minLength: 1
          type: string
        lastName:
          description: Last name.
          maxLength: 100
          minLength: 1
          type: string
        password:
          description: User Password.
          type: string
    X509CertificateName:
      description: Properties of server X509Names.
      externalDocs:
        url: https://docs.microsoft.com/en-us/azure/service-fabric/service-fabric-windows-cluster-x509-security
      properties:
        issuerCertificateThumbprint:
          description: Thumbprint for the Issuer of the Certificate.
          type: string
        name:
          description: Common Name of the Certificate.
          type: string
