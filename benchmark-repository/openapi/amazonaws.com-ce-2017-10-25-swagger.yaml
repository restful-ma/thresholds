openapi: 3.0.0
info:
  version: 2017-10-25
  x-release: v4
  title: AWS Cost Explorer Service
  description: <p>The Cost Explorer API enables you to programmatically query your cost and
    usage data. You can query for aggregated data such as total monthly costs or
    total daily usage. You can also query for granular data, such as the number
    of daily write operations for Amazon DynamoDB database tables in your
    production environment. </p> <p>Service Endpoint</p> <p>The Cost Explorer
    API provides the following endpoint:</p> <ul> <li> <p>
    <code>https://ce.us-east-1.amazonaws.com</code> </p> </li> </ul> <p>For
    information about costs associated with the Cost Explorer API, see <a
    href="https://aws.amazon.com/aws-cost-management/pricing/">AWS Cost
    Management Pricing</a>.</p>
  x-logo:
    url: https://twitter.com/awscloud/profile_image?size=original
    backgroundColor: "#FFFFFF"
  termsOfService: https://aws.amazon.com/service-terms/
  contact:
    name: Mike Ralphson
    email: mike.ralphson@gmail.com
    url: https://github.com/mermade/aws2openapi
    x-twitter: PermittedSoc
  license:
    name: Apache 2.0 License
    url: http://www.apache.org/licenses/
  x-providerName: amazonaws.com
  x-serviceName: ce
  x-origin:
    - contentType: application/json
      url: https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/ce-2017-10-25.normal.json
      converter:
        url: https://github.com/mermade/aws2openapi
        version: 1.0.0
      x-apisguru-direct: true
  x-apiClientRegistration:
    url: https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct
  x-apisguru-categories:
    - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: https://docs.aws.amazon.com/ce/
x-hasEquivalentPaths: true
security:
  - hmac: []
paths:
  /#X-Amz-Target=AWSInsightsIndexService.GetCostAndUsage:
    post:
      operationId: GetCostAndUsage
      description: Retrieves cost and usage metrics for your account. You can specify which
        cost and usage-related metric, such as <code>BlendedCosts</code> or
        <code>UsageQuantity</code>, that you want the request to return. You can
        also filter and group your data by various dimensions, such as
        <code>SERVICE</code> or <code>AZ</code>, in a specific time range. For a
        complete list of valid dimensions, see the <a
        href="http://docs.aws.amazon.com/aws-cost-management/latest/APIReference/API_GetDimensionValues.html">GetDimensionValues</a>
        operation. Master accounts in an organization in AWS Organizations have
        access to all member accounts.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetCostAndUsageResponse"
        "480":
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
        "481":
          description: BillExpirationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BillExpirationException"
        "482":
          description: DataUnavailableException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DataUnavailableException"
        "483":
          description: InvalidNextTokenException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidNextTokenException"
        "484":
          description: RequestChangedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RequestChangedException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSInsightsIndexService.GetCostAndUsage
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GetCostAndUsageRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSInsightsIndexService.GetCostForecast:
    post:
      operationId: GetCostForecast
      description: "Retrieves a forecast for how much Amazon Web Services predicts that you
        will spend over the forecast time period that you select, based on your
        past costs. "
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetCostForecastResponse"
        "480":
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
        "481":
          description: DataUnavailableException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DataUnavailableException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSInsightsIndexService.GetCostForecast
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GetCostForecastRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSInsightsIndexService.GetDimensionValues:
    post:
      operationId: GetDimensionValues
      description: "Retrieves all available filter values for a specified filter over a
        period of time. You can search the dimension values for an arbitrary
        string. "
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetDimensionValuesResponse"
        "480":
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
        "481":
          description: BillExpirationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BillExpirationException"
        "482":
          description: DataUnavailableException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DataUnavailableException"
        "483":
          description: InvalidNextTokenException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidNextTokenException"
        "484":
          description: RequestChangedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RequestChangedException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSInsightsIndexService.GetDimensionValues
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GetDimensionValuesRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSInsightsIndexService.GetReservationCoverage:
    post:
      operationId: GetReservationCoverage
      description: <p>Retrieves the reservation coverage for your account. This enables you
        to see how much of your Amazon Elastic Compute Cloud, Amazon
        ElastiCache, Amazon Relational Database Service, or Amazon Redshift
        usage is covered by a reservation. An organization's master account can
        see the coverage of the associated member accounts. For any time period,
        you can filter data about reservation usage by the following
        dimensions:</p> <ul> <li> <p>AZ</p> </li> <li> <p>CACHE_ENGINE</p> </li>
        <li> <p>DATABASE_ENGINE</p> </li> <li> <p>DEPLOYMENT_OPTION</p> </li>
        <li> <p>INSTANCE_TYPE</p> </li> <li> <p>LINKED_ACCOUNT</p> </li> <li>
        <p>OPERATING_SYSTEM</p> </li> <li> <p>PLATFORM</p> </li> <li>
        <p>REGION</p> </li> <li> <p>SERVICE</p> </li> <li> <p>TAG</p> </li> <li>
        <p>TENANCY</p> </li> </ul> <p>To determine valid values for a dimension,
        use the <code>GetDimensionValues</code> operation. </p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetReservationCoverageResponse"
        "480":
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
        "481":
          description: DataUnavailableException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DataUnavailableException"
        "482":
          description: InvalidNextTokenException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidNextTokenException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSInsightsIndexService.GetReservationCoverage
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GetReservationCoverageRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSInsightsIndexService.GetReservationPurchaseRecommendation:
    post:
      operationId: GetReservationPurchaseRecommendation
      description: <p>Gets recommendations for which reservations to purchase. These
        recommendations could help you reduce your costs. Reservations provide a
        discounted hourly rate (up to 75%) compared to On-Demand pricing.</p>
        <p>AWS generates your recommendations by identifying your On-Demand
        usage during a specific time period and collecting your usage into
        categories that are eligible for a reservation. After AWS has these
        categories, it simulates every combination of reservations in each
        category of usage to identify the best number of each type of RI to
        purchase to maximize your estimated savings. </p> <p>For example, AWS
        automatically aggregates your Amazon EC2 Linux, shared tenancy, and c4
        family usage in the US West (Oregon) Region and recommends that you buy
        size-flexible regional reservations to apply to the c4 family usage. AWS
        recommends the smallest size instance in an instance family. This makes
        it easier to purchase a size-flexible RI. AWS also shows the equal
        number of normalized units so that you can purchase any instance size
        that you want. For this example, your RI recommendation would be for
        <code>c4.large</code> because that is the smallest size instance in the
        c4 instance family.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetReservationPurchaseRecommendationRes\
                  ponse"
        "480":
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
        "481":
          description: DataUnavailableException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DataUnavailableException"
        "482":
          description: InvalidNextTokenException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidNextTokenException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSInsightsIndexService.GetReservationPurchaseRecommendation
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GetReservationPurchaseRecommendationReque\
                st"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSInsightsIndexService.GetReservationUtilization:
    post:
      operationId: GetReservationUtilization
      description: "Retrieves the reservation utilization for your account. Master accounts
        in an organization have access to member accounts. You can filter data
        by dimensions in a time period. You can use
        <code>GetDimensionValues</code> to determine the possible dimension
        values. Currently, you can group only by <code>SUBSCRIPTION_ID</code>. "
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetReservationUtilizationResponse"
        "480":
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
        "481":
          description: DataUnavailableException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DataUnavailableException"
        "482":
          description: InvalidNextTokenException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidNextTokenException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSInsightsIndexService.GetReservationUtilization
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GetReservationUtilizationRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSInsightsIndexService.GetRightsizingRecommendation:
    post:
      operationId: GetRightsizingRecommendation
      description: <p>Creates recommendations that helps you save cost by identifying idle
        and underutilized Amazon EC2 instances.</p> <p>Recommendations are
        generated to either downsize or terminate instances, along with
        providing savings detail and metrics. For details on calculation and
        function, see <a
        href="https://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/ce-what-is.html">Optimizing
        Your Cost with Rightsizing Recommendations</a>.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetRightsizingRecommendationResponse"
        "480":
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
        "481":
          description: InvalidNextTokenException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidNextTokenException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSInsightsIndexService.GetRightsizingRecommendation
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GetRightsizingRecommendationRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSInsightsIndexService.GetTags:
    post:
      operationId: GetTags
      description: "Queries for available tag keys and tag values for a specified period.
        You can search the tag values for an arbitrary string. "
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetTagsResponse"
        "480":
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
        "481":
          description: BillExpirationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BillExpirationException"
        "482":
          description: DataUnavailableException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DataUnavailableException"
        "483":
          description: InvalidNextTokenException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidNextTokenException"
        "484":
          description: RequestChangedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RequestChangedException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSInsightsIndexService.GetTags
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GetTagsRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSInsightsIndexService.GetUsageForecast:
    post:
      operationId: GetUsageForecast
      description: "Retrieves a forecast for how much Amazon Web Services predicts that you
        will use over the forecast time period that you select, based on your
        past usage. "
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetUsageForecastResponse"
        "480":
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
        "481":
          description: DataUnavailableException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DataUnavailableException"
        "482":
          description: UnresolvableUsageUnitException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnresolvableUsageUnitException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSInsightsIndexService.GetUsageForecast
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GetUsageForecastRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
servers:
  - url: http://ce.{region}.amazonaws.com
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-south-1
          - sa-east-1
        default: us-east-1
    description: The AWS Cost Explorer multi-region endpoint
  - url: https://ce.{region}.amazonaws.com
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-south-1
          - sa-east-1
        default: us-east-1
    description: The AWS Cost Explorer multi-region endpoint
  - url: http://ce.{region}.amazonaws.com.cn
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The AWS Cost Explorer endpoint for China (Beijing) and China (Ningxia)
  - url: https://ce.{region}.amazonaws.com.cn
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The AWS Cost Explorer endpoint for China (Beijing) and China (Ningxia)
components:
  parameters:
    X-Amz-Content-Sha256:
      name: X-Amz-Content-Sha256
      in: header
      required: false
      schema:
        type: string
    X-Amz-Date:
      name: X-Amz-Date
      in: header
      required: false
      schema:
        type: string
    X-Amz-Algorithm:
      name: X-Amz-Algorithm
      in: header
      required: false
      schema:
        type: string
    X-Amz-Credential:
      name: X-Amz-Credential
      in: header
      required: false
      schema:
        type: string
    X-Amz-Security-Token:
      name: X-Amz-Security-Token
      in: header
      required: false
      schema:
        type: string
    X-Amz-Signature:
      name: X-Amz-Signature
      in: header
      required: false
      schema:
        type: string
    X-Amz-SignedHeaders:
      name: X-Amz-SignedHeaders
      in: header
      required: false
      schema:
        type: string
  securitySchemes:
    hmac:
      type: apiKey
      name: Authorization
      in: header
      description: Amazon Signature authorization v4
      x-amazon-apigateway-authtype: awsSigv4
  schemas:
    GetCostAndUsageResponse:
      type: object
      properties:
        NextPageToken:
          $ref: "#/components/schemas/NextPageToken"
        GroupDefinitions:
          $ref: "#/components/schemas/GroupDefinitions"
        ResultsByTime:
          $ref: "#/components/schemas/ResultsByTime"
    GetCostAndUsageRequest:
      type: object
      required:
        - TimePeriod
      properties:
        TimePeriod:
          $ref: "#/components/schemas/DateInterval"
        Granularity:
          $ref: "#/components/schemas/Granularity"
        Filter:
          $ref: "#/components/schemas/Expression"
        Metrics:
          $ref: "#/components/schemas/MetricNames"
        GroupBy:
          $ref: "#/components/schemas/GroupDefinitions"
        NextPageToken:
          $ref: "#/components/schemas/NextPageToken"
    LimitExceededException: {}
    BillExpirationException: {}
    DataUnavailableException: {}
    InvalidNextTokenException: {}
    RequestChangedException: {}
    GetCostForecastResponse:
      type: object
      properties:
        Total:
          $ref: "#/components/schemas/MetricValue"
        ForecastResultsByTime:
          $ref: "#/components/schemas/ForecastResultsByTime"
    GetCostForecastRequest:
      type: object
      required:
        - TimePeriod
        - Metric
        - Granularity
      properties:
        TimePeriod:
          $ref: "#/components/schemas/DateInterval"
        Metric:
          $ref: "#/components/schemas/Metric"
        Granularity:
          $ref: "#/components/schemas/Granularity"
        Filter:
          $ref: "#/components/schemas/Expression"
        PredictionIntervalLevel:
          $ref: "#/components/schemas/PredictionIntervalLevel"
    GetDimensionValuesResponse:
      type: object
      required:
        - DimensionValues
        - ReturnSize
        - TotalSize
      properties:
        DimensionValues:
          $ref: "#/components/schemas/DimensionValuesWithAttributesList"
        ReturnSize:
          $ref: "#/components/schemas/PageSize"
        TotalSize:
          $ref: "#/components/schemas/PageSize"
        NextPageToken:
          $ref: "#/components/schemas/NextPageToken"
    GetDimensionValuesRequest:
      type: object
      required:
        - TimePeriod
        - Dimension
      properties:
        SearchString:
          $ref: "#/components/schemas/SearchString"
        TimePeriod:
          $ref: "#/components/schemas/DateInterval"
        Dimension:
          $ref: "#/components/schemas/Dimension"
        Context:
          $ref: "#/components/schemas/Context"
        NextPageToken:
          $ref: "#/components/schemas/NextPageToken"
    GetReservationCoverageResponse:
      type: object
      required:
        - CoveragesByTime
      properties:
        CoveragesByTime:
          $ref: "#/components/schemas/CoveragesByTime"
        Total:
          $ref: "#/components/schemas/Coverage"
        NextPageToken:
          $ref: "#/components/schemas/NextPageToken"
    GetReservationCoverageRequest:
      type: object
      required:
        - TimePeriod
      properties:
        TimePeriod:
          $ref: "#/components/schemas/DateInterval"
        GroupBy:
          $ref: "#/components/schemas/GroupDefinitions"
        Granularity:
          $ref: "#/components/schemas/Granularity"
        Filter:
          $ref: "#/components/schemas/Expression"
        Metrics:
          $ref: "#/components/schemas/MetricNames"
        NextPageToken:
          $ref: "#/components/schemas/NextPageToken"
      description: You can use the following request parameters to query for how much of
        your instance usage a reservation covered.
    GetReservationPurchaseRecommendationResponse:
      type: object
      properties:
        Metadata:
          $ref: "#/components/schemas/ReservationPurchaseRecommendationMetadata"
        Recommendations:
          $ref: "#/components/schemas/ReservationPurchaseRecommendations"
        NextPageToken:
          $ref: "#/components/schemas/NextPageToken"
    GetReservationPurchaseRecommendationRequest:
      type: object
      required:
        - Service
      properties:
        AccountId:
          $ref: "#/components/schemas/GenericString"
        Service:
          $ref: "#/components/schemas/GenericString"
        AccountScope:
          $ref: "#/components/schemas/AccountScope"
        LookbackPeriodInDays:
          $ref: "#/components/schemas/LookbackPeriodInDays"
        TermInYears:
          $ref: "#/components/schemas/TermInYears"
        PaymentOption:
          $ref: "#/components/schemas/PaymentOption"
        ServiceSpecification:
          $ref: "#/components/schemas/ServiceSpecification"
        PageSize:
          $ref: "#/components/schemas/NonNegativeInteger"
        NextPageToken:
          $ref: "#/components/schemas/NextPageToken"
    GetReservationUtilizationResponse:
      type: object
      required:
        - UtilizationsByTime
      properties:
        UtilizationsByTime:
          $ref: "#/components/schemas/UtilizationsByTime"
        Total:
          $ref: "#/components/schemas/ReservationAggregates"
        NextPageToken:
          $ref: "#/components/schemas/NextPageToken"
    GetReservationUtilizationRequest:
      type: object
      required:
        - TimePeriod
      properties:
        TimePeriod:
          $ref: "#/components/schemas/DateInterval"
        GroupBy:
          $ref: "#/components/schemas/GroupDefinitions"
        Granularity:
          $ref: "#/components/schemas/Granularity"
        Filter:
          $ref: "#/components/schemas/Expression"
        NextPageToken:
          $ref: "#/components/schemas/NextPageToken"
    GetRightsizingRecommendationResponse:
      type: object
      properties:
        Metadata:
          $ref: "#/components/schemas/RightsizingRecommendationMetadata"
        Summary:
          $ref: "#/components/schemas/RightsizingRecommendationSummary"
        RightsizingRecommendations:
          $ref: "#/components/schemas/RightsizingRecommendationList"
        NextPageToken:
          $ref: "#/components/schemas/NextPageToken"
    GetRightsizingRecommendationRequest:
      type: object
      required:
        - Service
      properties:
        Filter:
          $ref: "#/components/schemas/Expression"
        Service:
          $ref: "#/components/schemas/GenericString"
        PageSize:
          $ref: "#/components/schemas/NonNegativeInteger"
        NextPageToken:
          $ref: "#/components/schemas/NextPageToken"
    GetTagsResponse:
      type: object
      required:
        - Tags
        - ReturnSize
        - TotalSize
      properties:
        NextPageToken:
          $ref: "#/components/schemas/NextPageToken"
        Tags:
          $ref: "#/components/schemas/TagList"
        ReturnSize:
          $ref: "#/components/schemas/PageSize"
        TotalSize:
          $ref: "#/components/schemas/PageSize"
    GetTagsRequest:
      type: object
      required:
        - TimePeriod
      properties:
        SearchString:
          $ref: "#/components/schemas/SearchString"
        TimePeriod:
          $ref: "#/components/schemas/DateInterval"
        TagKey:
          $ref: "#/components/schemas/TagKey"
        NextPageToken:
          $ref: "#/components/schemas/NextPageToken"
    GetUsageForecastResponse:
      type: object
      properties:
        Total:
          $ref: "#/components/schemas/MetricValue"
        ForecastResultsByTime:
          $ref: "#/components/schemas/ForecastResultsByTime"
    GetUsageForecastRequest:
      type: object
      required:
        - TimePeriod
        - Metric
        - Granularity
      properties:
        TimePeriod:
          $ref: "#/components/schemas/DateInterval"
        Metric:
          $ref: "#/components/schemas/Metric"
        Granularity:
          $ref: "#/components/schemas/Granularity"
        Filter:
          $ref: "#/components/schemas/Expression"
        PredictionIntervalLevel:
          $ref: "#/components/schemas/PredictionIntervalLevel"
    UnresolvableUsageUnitException: {}
    AccountScope:
      type: string
      enum:
        - PAYER
        - LINKED
    AmortizedRecurringFee:
      type: string
    AmortizedUpfrontFee:
      type: string
    AttributeType:
      type: string
    AttributeValue:
      type: string
    Attributes:
      type: object
      additionalProperties:
        $ref: "#/components/schemas/AttributeValue"
    Context:
      type: string
      enum:
        - COST_AND_USAGE
        - RESERVATIONS
    CoverageHours:
      type: object
      properties:
        OnDemandHours:
          $ref: "#/components/schemas/OnDemandHours"
        ReservedHours:
          $ref: "#/components/schemas/ReservedHours"
        TotalRunningHours:
          $ref: "#/components/schemas/TotalRunningHours"
        CoverageHoursPercentage:
          $ref: "#/components/schemas/CoverageHoursPercentage"
      description: How long a running instance either used a reservation or was On-Demand.
    CoverageNormalizedUnits:
      type: object
      properties:
        OnDemandNormalizedUnits:
          $ref: "#/components/schemas/OnDemandNormalizedUnits"
        ReservedNormalizedUnits:
          $ref: "#/components/schemas/ReservedNormalizedUnits"
        TotalRunningNormalizedUnits:
          $ref: "#/components/schemas/TotalRunningNormalizedUnits"
        CoverageNormalizedUnitsPercentage:
          $ref: "#/components/schemas/CoverageNormalizedUnitsPercentage"
      description: <p>The amount of instance usage, in normalized units. Normalized units
        enable you to see your EC2 usage for multiple sizes of instances in a
        uniform way. For example, suppose you run an xlarge instance and a
        2xlarge instance. If you run both instances for the same amount of time,
        the 2xlarge instance uses twice as much of your reservation as the
        xlarge instance, even though both instances show only one instance-hour.
        Using normalized units instead of instance-hours, the xlarge instance
        used 8 normalized units, and the 2xlarge instance used 16 normalized
        units.</p> <p>For more information, see <a
        href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ri-modifying.html">Modifying
        Reserved Instances</a> in the <i>Amazon Elastic Compute Cloud User Guide
        for Linux Instances</i>.</p>
    CoverageCost:
      type: object
      properties:
        OnDemandCost:
          $ref: "#/components/schemas/OnDemandCost"
      description: How much it cost to run an instance.
    Coverage:
      type: object
      properties:
        CoverageHours:
          $ref: "#/components/schemas/CoverageHours"
        CoverageNormalizedUnits:
          $ref: "#/components/schemas/CoverageNormalizedUnits"
        CoverageCost:
          $ref: "#/components/schemas/CoverageCost"
      description: The amount of instance usage that a reservation covered.
    DateInterval:
      type: object
      required:
        - Start
        - End
      properties:
        Start:
          $ref: "#/components/schemas/YearMonthDay"
        End:
          $ref: "#/components/schemas/YearMonthDay"
      description: "The time period that you want the usage and costs for. "
    ReservationCoverageGroups:
      type: array
      items:
        $ref: "#/components/schemas/ReservationCoverageGroup"
    CoverageByTime:
      type: object
      properties:
        TimePeriod:
          $ref: "#/components/schemas/DateInterval"
        Groups:
          $ref: "#/components/schemas/ReservationCoverageGroups"
        Total:
          $ref: "#/components/schemas/Coverage"
      description: Reservation coverage for a specified period, in hours.
    OnDemandCost:
      type: string
    OnDemandHours:
      type: string
    ReservedHours:
      type: string
    TotalRunningHours:
      type: string
    CoverageHoursPercentage:
      type: string
    OnDemandNormalizedUnits:
      type: string
    ReservedNormalizedUnits:
      type: string
    TotalRunningNormalizedUnits:
      type: string
    CoverageNormalizedUnitsPercentage:
      type: string
    CoveragesByTime:
      type: array
      items:
        $ref: "#/components/schemas/CoverageByTime"
    GenericString:
      type: string
    TagValuesList:
      type: array
      items:
        $ref: "#/components/schemas/TagValues"
    ResourceDetails:
      type: object
      properties:
        EC2ResourceDetails:
          $ref: "#/components/schemas/EC2ResourceDetails"
      description: Details on the resource.
    ResourceUtilization:
      type: object
      properties:
        EC2ResourceUtilization:
          $ref: "#/components/schemas/EC2ResourceUtilization"
      description: "Resource utilization of current resource. "
    CurrentInstance:
      type: object
      properties:
        ResourceId:
          $ref: "#/components/schemas/GenericString"
        Tags:
          $ref: "#/components/schemas/TagValuesList"
        ResourceDetails:
          $ref: "#/components/schemas/ResourceDetails"
        ResourceUtilization:
          $ref: "#/components/schemas/ResourceUtilization"
        ReservationCoveredHoursInLookbackPeriod:
          $ref: "#/components/schemas/GenericString"
        OnDemandHoursInLookbackPeriod:
          $ref: "#/components/schemas/GenericString"
        TotalRunningHoursInLookbackPeriod:
          $ref: "#/components/schemas/GenericString"
        MonthlyCost:
          $ref: "#/components/schemas/GenericString"
        CurrencyCode:
          $ref: "#/components/schemas/GenericString"
      description: Context about the current instance.
    YearMonthDay:
      type: string
      pattern: (\d{4}-\d{2}-\d{2})(T\d{2}:\d{2}:\d{2}Z)?
    Dimension:
      type: string
      enum:
        - AZ
        - INSTANCE_TYPE
        - LINKED_ACCOUNT
        - OPERATION
        - PURCHASE_TYPE
        - REGION
        - SERVICE
        - USAGE_TYPE
        - USAGE_TYPE_GROUP
        - RECORD_TYPE
        - OPERATING_SYSTEM
        - TENANCY
        - SCOPE
        - PLATFORM
        - SUBSCRIPTION_ID
        - LEGAL_ENTITY_NAME
        - DEPLOYMENT_OPTION
        - DATABASE_ENGINE
        - CACHE_ENGINE
        - INSTANCE_TYPE_FAMILY
        - BILLING_ENTITY
        - RESERVATION_ID
        - RIGHTSIZING_TYPE
    Values:
      type: array
      items:
        $ref: "#/components/schemas/Value"
    DimensionValues:
      type: object
      properties:
        Key:
          $ref: "#/components/schemas/Dimension"
        Values:
          $ref: "#/components/schemas/Values"
      description: The metadata that you can use to filter and group your results. You can
        use <code>GetDimensionValues</code> to find specific values.
    Value:
      type: string
    DimensionValuesWithAttributes:
      type: object
      properties:
        Value:
          $ref: "#/components/schemas/Value"
        Attributes:
          $ref: "#/components/schemas/Attributes"
      description: The metadata of a specific type that you can use to filter and group
        your results. You can use <code>GetDimensionValues</code> to find
        specific values.
    DimensionValuesWithAttributesList:
      type: array
      items:
        $ref: "#/components/schemas/DimensionValuesWithAttributes"
    GenericBoolean:
      type: boolean
    EC2InstanceDetails:
      type: object
      properties:
        Family:
          $ref: "#/components/schemas/GenericString"
        InstanceType:
          $ref: "#/components/schemas/GenericString"
        Region:
          $ref: "#/components/schemas/GenericString"
        AvailabilityZone:
          $ref: "#/components/schemas/GenericString"
        Platform:
          $ref: "#/components/schemas/GenericString"
        Tenancy:
          $ref: "#/components/schemas/GenericString"
        CurrentGeneration:
          $ref: "#/components/schemas/GenericBoolean"
        SizeFlexEligible:
          $ref: "#/components/schemas/GenericBoolean"
      description: Details about the Amazon EC2 instances that AWS recommends that you
        purchase.
    EC2ResourceDetails:
      type: object
      properties:
        HourlyOnDemandRate:
          $ref: "#/components/schemas/GenericString"
        InstanceType:
          $ref: "#/components/schemas/GenericString"
        Platform:
          $ref: "#/components/schemas/GenericString"
        Region:
          $ref: "#/components/schemas/GenericString"
        Sku:
          $ref: "#/components/schemas/GenericString"
        Memory:
          $ref: "#/components/schemas/GenericString"
        NetworkPerformance:
          $ref: "#/components/schemas/GenericString"
        Storage:
          $ref: "#/components/schemas/GenericString"
        Vcpu:
          $ref: "#/components/schemas/GenericString"
      description: " Details on the Amazon EC2 Resource."
    EC2ResourceUtilization:
      type: object
      properties:
        MaxCpuUtilizationPercentage:
          $ref: "#/components/schemas/GenericString"
        MaxMemoryUtilizationPercentage:
          $ref: "#/components/schemas/GenericString"
        MaxStorageUtilizationPercentage:
          $ref: "#/components/schemas/GenericString"
      description: " Utilization metrics of the instance. "
    OfferingClass:
      type: string
      enum:
        - STANDARD
        - CONVERTIBLE
    EC2Specification:
      type: object
      properties:
        OfferingClass:
          $ref: "#/components/schemas/OfferingClass"
      description: The Amazon EC2 hardware specifications that you want AWS to provide
        recommendations for.
    ESInstanceDetails:
      type: object
      properties:
        InstanceClass:
          $ref: "#/components/schemas/GenericString"
        InstanceSize:
          $ref: "#/components/schemas/GenericString"
        Region:
          $ref: "#/components/schemas/GenericString"
        CurrentGeneration:
          $ref: "#/components/schemas/GenericBoolean"
        SizeFlexEligible:
          $ref: "#/components/schemas/GenericBoolean"
      description: Details about the Amazon ES instances that AWS recommends that you
        purchase.
    ElastiCacheInstanceDetails:
      type: object
      properties:
        Family:
          $ref: "#/components/schemas/GenericString"
        NodeType:
          $ref: "#/components/schemas/GenericString"
        Region:
          $ref: "#/components/schemas/GenericString"
        ProductDescription:
          $ref: "#/components/schemas/GenericString"
        CurrentGeneration:
          $ref: "#/components/schemas/GenericBoolean"
        SizeFlexEligible:
          $ref: "#/components/schemas/GenericBoolean"
      description: Details about the Amazon ElastiCache instances that AWS recommends that
        you purchase.
    Entity:
      type: string
    Estimated:
      type: boolean
    Expressions:
      type: array
      items:
        $ref: "#/components/schemas/Expression"
    Expression:
      type: object
      properties:
        Or:
          $ref: "#/components/schemas/Expressions"
        And:
          $ref: "#/components/schemas/Expressions"
        Not:
          $ref: "#/components/schemas/Expression"
        Dimensions:
          $ref: "#/components/schemas/DimensionValues"
        Tags:
          $ref: "#/components/schemas/TagValues"
      description: "<p>Use <code>Expression</code> to filter by cost or by usage. There are
        two patterns: </p> <ul> <li> <p>Simple dimension values - You can set
        the dimension name and values for the filters that you plan to use. For
        example, you can filter for <code>REGION==us-east-1 OR
        REGION==us-west-1</code>. The <code>Expression</code> for that looks
        like this:</p> <p> <code>{ \"Dimensions\": { \"Key\": \"REGION\",
        \"Values\": [ \"us-east-1\", “us-west-1” ] } }</code> </p> <p>The list
        of dimension values are OR'd together to retrieve cost or usage data.
        You can create <code>Expression</code> and <code>DimensionValues</code>
        objects using either <code>with*</code> methods or <code>set*</code>
        methods in multiple lines. </p> </li> <li> <p>Compound dimension values
        with logical operations - You can use multiple <code>Expression</code>
        types and the logical operators <code>AND/OR/NOT</code> to create a list
        of one or more <code>Expression</code> objects. This allows you to
        filter on more advanced options. For example, you can filter on
        <code>((REGION == us-east-1 OR REGION == us-west-1) OR (TAG.Type ==
        Type1)) AND (USAGE_TYPE != DataTransfer)</code>. The
        <code>Expression</code> for that looks like this:</p> <p> <code>{
        \"And\": [ {\"Or\": [ {\"Dimensions\": { \"Key\": \"REGION\",
        \"Values\": [ \"us-east-1\", \"us-west-1\" ] }}, {\"Tags\": { \"Key\":
        \"TagName\", \"Values\": [\"Value1\"] } } ]}, {\"Not\": {\"Dimensions\":
        { \"Key\": \"USAGE_TYPE\", \"Values\": [\"DataTransfer\"] }}} ] }
        </code> </p> <note> <p>Because each <code>Expression</code> can have
        only one operator, the service returns an error if more than one is
        specified. The following example shows an <code>Expression</code> object
        that creates an error.</p> </note> <p> <code> { \"And\": [ ... ],
        \"DimensionValues\": { \"Dimension\": \"USAGE_TYPE\", \"Values\": [
        \"DataTransfer\" ] } } </code> </p> </li> </ul> <note> <p>For
        <code>GetRightsizingRecommendation</code> action, a combination of OR
        and NOT is not supported. OR is not supported between different
        dimensions, or dimensions and tags. NOT operators aren't supported.
        Dimentions are also limited to <code>LINKED_ACCOUNT</code>,
        <code>REGION</code>, or <code>RIGHTSIZING_TYPE</code>.</p> </note>"
    TagValues:
      type: object
      properties:
        Key:
          $ref: "#/components/schemas/TagKey"
        Values:
          $ref: "#/components/schemas/Values"
      description: The values that are available for a tag.
    ForecastResult:
      type: object
      properties:
        TimePeriod:
          $ref: "#/components/schemas/DateInterval"
        MeanValue:
          $ref: "#/components/schemas/GenericString"
        PredictionIntervalLowerBound:
          $ref: "#/components/schemas/GenericString"
        PredictionIntervalUpperBound:
          $ref: "#/components/schemas/GenericString"
      description: The forecast created for your query.
    ForecastResultsByTime:
      type: array
      items:
        $ref: "#/components/schemas/ForecastResult"
    Granularity:
      type: string
      enum:
        - DAILY
        - MONTHLY
        - HOURLY
    MetricNames:
      type: array
      items:
        $ref: "#/components/schemas/MetricName"
    GroupDefinitions:
      type: array
      items:
        $ref: "#/components/schemas/GroupDefinition"
    NextPageToken:
      type: string
    ResultsByTime:
      type: array
      items:
        $ref: "#/components/schemas/ResultByTime"
    Metric:
      type: string
      enum:
        - BLENDED_COST
        - UNBLENDED_COST
        - AMORTIZED_COST
        - NET_UNBLENDED_COST
        - NET_AMORTIZED_COST
        - USAGE_QUANTITY
        - NORMALIZED_USAGE_AMOUNT
    PredictionIntervalLevel:
      type: integer
      minimum: 51
      maximum: 99
    MetricValue:
      type: object
      properties:
        Amount:
          $ref: "#/components/schemas/MetricAmount"
        Unit:
          $ref: "#/components/schemas/MetricUnit"
      description: The aggregated value for a metric.
    SearchString:
      type: string
    PageSize:
      type: integer
    LookbackPeriodInDays:
      type: string
      enum:
        - SEVEN_DAYS
        - THIRTY_DAYS
        - SIXTY_DAYS
    TermInYears:
      type: string
      enum:
        - ONE_YEAR
        - THREE_YEARS
    PaymentOption:
      type: string
      enum:
        - NO_UPFRONT
        - PARTIAL_UPFRONT
        - ALL_UPFRONT
        - LIGHT_UTILIZATION
        - MEDIUM_UTILIZATION
        - HEAVY_UTILIZATION
    ServiceSpecification:
      type: object
      properties:
        EC2Specification:
          $ref: "#/components/schemas/EC2Specification"
      description: Hardware specifications for the service that you want recommendations
        for.
    NonNegativeInteger:
      type: integer
      minimum: 0
    ReservationPurchaseRecommendationMetadata:
      type: object
      properties:
        RecommendationId:
          $ref: "#/components/schemas/GenericString"
        GenerationTimestamp:
          $ref: "#/components/schemas/GenericString"
      description: Information about this specific recommendation, such as the time stamp
        for when AWS made a specific recommendation.
    ReservationPurchaseRecommendations:
      type: array
      items:
        $ref: "#/components/schemas/ReservationPurchaseRecommendation"
    UtilizationsByTime:
      type: array
      items:
        $ref: "#/components/schemas/UtilizationByTime"
    ReservationAggregates:
      type: object
      properties:
        UtilizationPercentage:
          $ref: "#/components/schemas/UtilizationPercentage"
        UtilizationPercentageInUnits:
          $ref: "#/components/schemas/UtilizationPercentageInUnits"
        PurchasedHours:
          $ref: "#/components/schemas/PurchasedHours"
        PurchasedUnits:
          $ref: "#/components/schemas/PurchasedUnits"
        TotalActualHours:
          $ref: "#/components/schemas/TotalActualHours"
        TotalActualUnits:
          $ref: "#/components/schemas/TotalActualUnits"
        UnusedHours:
          $ref: "#/components/schemas/UnusedHours"
        UnusedUnits:
          $ref: "#/components/schemas/UnusedUnits"
        OnDemandCostOfRIHoursUsed:
          $ref: "#/components/schemas/OnDemandCostOfRIHoursUsed"
        NetRISavings:
          $ref: "#/components/schemas/NetRISavings"
        TotalPotentialRISavings:
          $ref: "#/components/schemas/TotalPotentialRISavings"
        AmortizedUpfrontFee:
          $ref: "#/components/schemas/AmortizedUpfrontFee"
        AmortizedRecurringFee:
          $ref: "#/components/schemas/AmortizedRecurringFee"
        TotalAmortizedFee:
          $ref: "#/components/schemas/TotalAmortizedFee"
      description: The aggregated numbers for your reservation usage.
    RightsizingRecommendationMetadata:
      type: object
      properties:
        RecommendationId:
          $ref: "#/components/schemas/GenericString"
        GenerationTimestamp:
          $ref: "#/components/schemas/GenericString"
        LookbackPeriodInDays:
          $ref: "#/components/schemas/LookbackPeriodInDays"
      description: Metadata for this recommendation set.
    RightsizingRecommendationSummary:
      type: object
      properties:
        TotalRecommendationCount:
          $ref: "#/components/schemas/GenericString"
        EstimatedTotalMonthlySavingsAmount:
          $ref: "#/components/schemas/GenericString"
        SavingsCurrencyCode:
          $ref: "#/components/schemas/GenericString"
        SavingsPercentage:
          $ref: "#/components/schemas/GenericString"
      description: " Summary of rightsizing recommendations "
    RightsizingRecommendationList:
      type: array
      items:
        $ref: "#/components/schemas/RightsizingRecommendation"
    TagKey:
      type: string
    TagList:
      type: array
      items:
        $ref: "#/components/schemas/Entity"
    Keys:
      type: array
      items:
        $ref: "#/components/schemas/Key"
    Metrics:
      type: object
      additionalProperties:
        $ref: "#/components/schemas/MetricValue"
    Group:
      type: object
      properties:
        Keys:
          $ref: "#/components/schemas/Keys"
        Metrics:
          $ref: "#/components/schemas/Metrics"
      description: One level of grouped data in the results.
    GroupDefinitionType:
      type: string
      enum:
        - DIMENSION
        - TAG
    GroupDefinitionKey:
      type: string
    GroupDefinition:
      type: object
      properties:
        Type:
          $ref: "#/components/schemas/GroupDefinitionType"
        Key:
          $ref: "#/components/schemas/GroupDefinitionKey"
      description: Represents a group when you specify a group by criteria or in the
        response to a query with a specific grouping.
    Groups:
      type: array
      items:
        $ref: "#/components/schemas/Group"
    RDSInstanceDetails:
      type: object
      properties:
        Family:
          $ref: "#/components/schemas/GenericString"
        InstanceType:
          $ref: "#/components/schemas/GenericString"
        Region:
          $ref: "#/components/schemas/GenericString"
        DatabaseEngine:
          $ref: "#/components/schemas/GenericString"
        DatabaseEdition:
          $ref: "#/components/schemas/GenericString"
        DeploymentOption:
          $ref: "#/components/schemas/GenericString"
        LicenseModel:
          $ref: "#/components/schemas/GenericString"
        CurrentGeneration:
          $ref: "#/components/schemas/GenericBoolean"
        SizeFlexEligible:
          $ref: "#/components/schemas/GenericBoolean"
      description: Details about the Amazon RDS instances that AWS recommends that you
        purchase.
    RedshiftInstanceDetails:
      type: object
      properties:
        Family:
          $ref: "#/components/schemas/GenericString"
        NodeType:
          $ref: "#/components/schemas/GenericString"
        Region:
          $ref: "#/components/schemas/GenericString"
        CurrentGeneration:
          $ref: "#/components/schemas/GenericBoolean"
        SizeFlexEligible:
          $ref: "#/components/schemas/GenericBoolean"
      description: Details about the Amazon Redshift instances that AWS recommends that you
        purchase.
    InstanceDetails:
      type: object
      properties:
        EC2InstanceDetails:
          $ref: "#/components/schemas/EC2InstanceDetails"
        RDSInstanceDetails:
          $ref: "#/components/schemas/RDSInstanceDetails"
        RedshiftInstanceDetails:
          $ref: "#/components/schemas/RedshiftInstanceDetails"
        ElastiCacheInstanceDetails:
          $ref: "#/components/schemas/ElastiCacheInstanceDetails"
        ESInstanceDetails:
          $ref: "#/components/schemas/ESInstanceDetails"
      description: Details about the instances that AWS recommends that you purchase.
    Key:
      type: string
    MetricAmount:
      type: string
    MetricName:
      type: string
    MetricUnit:
      type: string
    TargetInstancesList:
      type: array
      items:
        $ref: "#/components/schemas/TargetInstance"
    ModifyRecommendationDetail:
      type: object
      properties:
        TargetInstances:
          $ref: "#/components/schemas/TargetInstancesList"
      description: " Details on the modification recommendation."
    NetRISavings:
      type: string
    OnDemandCostOfRIHoursUsed:
      type: string
    PurchasedHours:
      type: string
    PurchasedUnits:
      type: string
    UtilizationPercentage:
      type: string
    UtilizationPercentageInUnits:
      type: string
    TotalActualHours:
      type: string
    TotalActualUnits:
      type: string
    UnusedHours:
      type: string
    UnusedUnits:
      type: string
    TotalPotentialRISavings:
      type: string
    TotalAmortizedFee:
      type: string
    ReservationCoverageGroup:
      type: object
      properties:
        Attributes:
          $ref: "#/components/schemas/Attributes"
        Coverage:
          $ref: "#/components/schemas/Coverage"
      description: A group of reservations that share a set of attributes.
    ReservationGroupKey:
      type: string
    ReservationGroupValue:
      type: string
    ReservationPurchaseRecommendationDetails:
      type: array
      items:
        $ref: "#/components/schemas/ReservationPurchaseRecommendationDetail"
    ReservationPurchaseRecommendationSummary:
      type: object
      properties:
        TotalEstimatedMonthlySavingsAmount:
          $ref: "#/components/schemas/GenericString"
        TotalEstimatedMonthlySavingsPercentage:
          $ref: "#/components/schemas/GenericString"
        CurrencyCode:
          $ref: "#/components/schemas/GenericString"
      description: A summary about this recommendation, such as the currency code, the
        amount that AWS estimates that you could save, and the total amount of
        reservation to purchase.
    ReservationPurchaseRecommendation:
      type: object
      properties:
        AccountScope:
          $ref: "#/components/schemas/AccountScope"
        LookbackPeriodInDays:
          $ref: "#/components/schemas/LookbackPeriodInDays"
        TermInYears:
          $ref: "#/components/schemas/TermInYears"
        PaymentOption:
          $ref: "#/components/schemas/PaymentOption"
        ServiceSpecification:
          $ref: "#/components/schemas/ServiceSpecification"
        RecommendationDetails:
          $ref: "#/components/schemas/ReservationPurchaseRecommendationDetails"
        RecommendationSummary:
          $ref: "#/components/schemas/ReservationPurchaseRecommendationSummary"
      description: A specific reservation that AWS recommends for purchase.
    ReservationPurchaseRecommendationDetail:
      type: object
      properties:
        AccountId:
          $ref: "#/components/schemas/GenericString"
        InstanceDetails:
          $ref: "#/components/schemas/InstanceDetails"
        RecommendedNumberOfInstancesToPurchase:
          $ref: "#/components/schemas/GenericString"
        RecommendedNormalizedUnitsToPurchase:
          $ref: "#/components/schemas/GenericString"
        MinimumNumberOfInstancesUsedPerHour:
          $ref: "#/components/schemas/GenericString"
        MinimumNormalizedUnitsUsedPerHour:
          $ref: "#/components/schemas/GenericString"
        MaximumNumberOfInstancesUsedPerHour:
          $ref: "#/components/schemas/GenericString"
        MaximumNormalizedUnitsUsedPerHour:
          $ref: "#/components/schemas/GenericString"
        AverageNumberOfInstancesUsedPerHour:
          $ref: "#/components/schemas/GenericString"
        AverageNormalizedUnitsUsedPerHour:
          $ref: "#/components/schemas/GenericString"
        AverageUtilization:
          $ref: "#/components/schemas/GenericString"
        EstimatedBreakEvenInMonths:
          $ref: "#/components/schemas/GenericString"
        CurrencyCode:
          $ref: "#/components/schemas/GenericString"
        EstimatedMonthlySavingsAmount:
          $ref: "#/components/schemas/GenericString"
        EstimatedMonthlySavingsPercentage:
          $ref: "#/components/schemas/GenericString"
        EstimatedMonthlyOnDemandCost:
          $ref: "#/components/schemas/GenericString"
        EstimatedReservationCostForLookbackPeriod:
          $ref: "#/components/schemas/GenericString"
        UpfrontCost:
          $ref: "#/components/schemas/GenericString"
        RecurringStandardMonthlyCost:
          $ref: "#/components/schemas/GenericString"
      description: Details about your recommended reservation purchase.
    ReservationUtilizationGroup:
      type: object
      properties:
        Key:
          $ref: "#/components/schemas/ReservationGroupKey"
        Value:
          $ref: "#/components/schemas/ReservationGroupValue"
        Attributes:
          $ref: "#/components/schemas/Attributes"
        Utilization:
          $ref: "#/components/schemas/ReservationAggregates"
      description: A group of reservations that share a set of attributes.
    ReservationUtilizationGroups:
      type: array
      items:
        $ref: "#/components/schemas/ReservationUtilizationGroup"
    ResultByTime:
      type: object
      properties:
        TimePeriod:
          $ref: "#/components/schemas/DateInterval"
        Total:
          $ref: "#/components/schemas/Metrics"
        Groups:
          $ref: "#/components/schemas/Groups"
        Estimated:
          $ref: "#/components/schemas/Estimated"
      description: The result that is associated with a time period.
    RightsizingType:
      type: string
      enum:
        - TERMINATE
        - MODIFY
    TerminateRecommendationDetail:
      type: object
      properties:
        EstimatedMonthlySavings:
          $ref: "#/components/schemas/GenericString"
        CurrencyCode:
          $ref: "#/components/schemas/GenericString"
      description: " Details on termination recommendation. "
    RightsizingRecommendation:
      type: object
      properties:
        AccountId:
          $ref: "#/components/schemas/GenericString"
        CurrentInstance:
          $ref: "#/components/schemas/CurrentInstance"
        RightsizingType:
          $ref: "#/components/schemas/RightsizingType"
        ModifyRecommendationDetail:
          $ref: "#/components/schemas/ModifyRecommendationDetail"
        TerminateRecommendationDetail:
          $ref: "#/components/schemas/TerminateRecommendationDetail"
      description: Recommendations to rightsize resources.
    TargetInstance:
      type: object
      properties:
        EstimatedMonthlyCost:
          $ref: "#/components/schemas/GenericString"
        EstimatedMonthlySavings:
          $ref: "#/components/schemas/GenericString"
        CurrencyCode:
          $ref: "#/components/schemas/GenericString"
        DefaultTargetInstance:
          $ref: "#/components/schemas/GenericBoolean"
        ResourceDetails:
          $ref: "#/components/schemas/ResourceDetails"
        ExpectedResourceUtilization:
          $ref: "#/components/schemas/ResourceUtilization"
      description: " Details on recommended instance."
    UtilizationByTime:
      type: object
      properties:
        TimePeriod:
          $ref: "#/components/schemas/DateInterval"
        Groups:
          $ref: "#/components/schemas/ReservationUtilizationGroups"
        Total:
          $ref: "#/components/schemas/ReservationAggregates"
      description: The amount of utilization, in hours.
