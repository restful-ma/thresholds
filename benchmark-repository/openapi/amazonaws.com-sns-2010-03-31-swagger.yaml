openapi: 3.0.0
info:
  version: 2010-03-31
  x-release: v4
  title: Amazon Simple Notification Service
  description: '<fullname>Amazon Simple Notification Service</fullname> <p>Amazon Simple
    Notification Service (Amazon SNS) is a web service that enables you to build
    distributed web-enabled applications. Applications can use Amazon SNS to
    easily push real-time notification messages to interested subscribers over
    multiple delivery protocols. For more information about this product see <a
    href="http://aws.amazon.com/sns/">https://aws.amazon.com/sns</a>. For
    detailed information about Amazon SNS features and their associated API
    calls, see the <a href="https://docs.aws.amazon.com/sns/latest/dg/">Amazon
    SNS Developer Guide</a>. </p> <p>We also provide SDKs that enable you to
    access Amazon SNS from your preferred programming language. The SDKs contain
    functionality that automatically takes care of tasks such as:
    cryptographically signing your service requests, retrying requests, and
    handling error responses. For a list of available SDKs, go to <a
    href="http://aws.amazon.com/tools/">Tools for Amazon Web Services</a>. </p>'
  x-logo:
    url: https://twitter.com/awscloud/profile_image?size=original
    backgroundColor: "#FFFFFF"
  termsOfService: https://aws.amazon.com/service-terms/
  contact:
    name: Mike Ralphson
    email: mike.ralphson@gmail.com
    url: https://github.com/mermade/aws2openapi
    x-twitter: PermittedSoc
  license:
    name: Apache 2.0 License
    url: http://www.apache.org/licenses/
  x-providerName: amazonaws.com
  x-serviceName: sns
  x-origin:
    - contentType: application/json
      url: https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/sns-2010-03-31.normal.json
      converter:
        url: https://github.com/mermade/aws2openapi
        version: 1.0.0
      x-apisguru-direct: true
  x-apiClientRegistration:
    url: https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct
  x-apisguru-categories:
    - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: https://docs.aws.amazon.com/sns/
x-hasEquivalentPaths: true
security:
  - hmac: []
paths:
  /#Action=AddPermission:
    get:
      x-aws-operation-name: AddPermission
      operationId: GET AddPermission
      description: Adds a statement to a topic's access control policy, granting access for
        the specified AWS accounts to the specified actions.
      responses:
        "200":
          description: Success
        "480":
          description: InvalidParameterException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidParameterException"
        "481":
          description: InternalErrorException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InternalErrorException"
        "482":
          description: AuthorizationErrorException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/AuthorizationErrorException"
        "483":
          description: NotFoundException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/NotFoundException"
      parameters:
        - name: TopicArn
          in: query
          required: true
          description: The ARN of the topic whose access control policy you wish to modify.
          schema:
            type: string
        - name: Label
          in: query
          required: true
          description: A unique identifier for the new policy statement.
          schema:
            type: string
        - name: AWSAccountId
          in: query
          required: true
          description: The AWS account IDs of the users (principals) who will be given
            access to the specified actions. The users must have AWS accounts,
            but do not need to be signed up for this service.
          schema:
            type: array
            items:
              type: string
        - name: ActionName
          in: query
          required: true
          description: "<p>The action you want to allow for the specified principal(s).</p>
            <p>Valid values: any Amazon SNS action name.</p>"
          schema:
            type: array
            items:
              type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - AddPermission
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2010-03-31
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: AddPermission
      operationId: POST AddPermission
      description: Adds a statement to a topic's access control policy, granting access for
        the specified AWS accounts to the specified actions.
      responses:
        "200":
          description: Success
        "480":
          description: InvalidParameterException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidParameterException"
        "481":
          description: InternalErrorException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InternalErrorException"
        "482":
          description: AuthorizationErrorException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/AuthorizationErrorException"
        "483":
          description: NotFoundException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/NotFoundException"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - AddPermission
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2010-03-31
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                TopicArn:
                  description: The ARN of the topic whose access control policy you wish to
                    modify.
                  type: string
                Label:
                  description: A unique identifier for the new policy statement.
                  type: string
                AWSAccountId:
                  description: The AWS account IDs of the users (principals) who will be
                    given access to the specified actions. The users must have
                    AWS accounts, but do not need to be signed up for this
                    service.
                  type: array
                  items:
                    type: string
                ActionName:
                  description: "<p>The action you want to allow for the specified
                    principal(s).</p> <p>Valid values: any Amazon SNS action
                    name.</p>"
                  type: array
                  items:
                    type: string
              required:
                - TopicArn
                - Label
                - AWSAccountId
                - ActionName
  /#Action=CheckIfPhoneNumberIsOptedOut:
    get:
      x-aws-operation-name: CheckIfPhoneNumberIsOptedOut
      operationId: GET CheckIfPhoneNumberIsOptedOut
      description: <p>Accepts a phone number and indicates whether the phone holder has
        opted out of receiving SMS messages from your account. You cannot send
        SMS messages to a number that is opted out.</p> <p>To resume sending
        messages, you can opt in the number by using the
        <code>OptInPhoneNumber</code> action.</p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/CheckIfPhoneNumberIsOptedOutResponse"
        "480":
          description: ThrottledException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ThrottledException"
        "481":
          description: InternalErrorException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InternalErrorException"
        "482":
          description: AuthorizationErrorException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/AuthorizationErrorException"
        "483":
          description: InvalidParameterException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidParameterException"
      parameters:
        - name: phoneNumber
          in: query
          required: true
          description: The phone number for which you want to check the opt out status.
          schema:
            type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - CheckIfPhoneNumberIsOptedOut
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2010-03-31
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: CheckIfPhoneNumberIsOptedOut
      operationId: POST CheckIfPhoneNumberIsOptedOut
      description: <p>Accepts a phone number and indicates whether the phone holder has
        opted out of receiving SMS messages from your account. You cannot send
        SMS messages to a number that is opted out.</p> <p>To resume sending
        messages, you can opt in the number by using the
        <code>OptInPhoneNumber</code> action.</p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/CheckIfPhoneNumberIsOptedOutResponse"
        "480":
          description: ThrottledException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ThrottledException"
        "481":
          description: InternalErrorException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InternalErrorException"
        "482":
          description: AuthorizationErrorException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/AuthorizationErrorException"
        "483":
          description: InvalidParameterException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidParameterException"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - CheckIfPhoneNumberIsOptedOut
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2010-03-31
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                phoneNumber:
                  description: The phone number for which you want to check the opt out
                    status.
                  type: string
              required:
                - phoneNumber
  /#Action=ConfirmSubscription:
    get:
      x-aws-operation-name: ConfirmSubscription
      operationId: GET ConfirmSubscription
      description: Verifies an endpoint owner's intent to receive messages by validating
        the token sent to the endpoint by an earlier <code>Subscribe</code>
        action. If the token is valid, the action creates a new subscription and
        returns its Amazon Resource Name (ARN). This call requires an AWS
        signature only when the <code>AuthenticateOnUnsubscribe</code> flag is
        set to "true".
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ConfirmSubscriptionResponse"
        "480":
          description: SubscriptionLimitExceededException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/SubscriptionLimitExceededException"
        "481":
          description: InvalidParameterException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidParameterException"
        "482":
          description: NotFoundException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "483":
          description: InternalErrorException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InternalErrorException"
        "484":
          description: AuthorizationErrorException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/AuthorizationErrorException"
        "485":
          description: FilterPolicyLimitExceededException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/FilterPolicyLimitExceededException"
      parameters:
        - name: TopicArn
          in: query
          required: true
          description: The ARN of the topic for which you wish to confirm a subscription.
          schema:
            type: string
        - name: Token
          in: query
          required: true
          description: Short-lived token sent to an endpoint during the
            <code>Subscribe</code> action.
          schema:
            type: string
        - name: AuthenticateOnUnsubscribe
          in: query
          required: false
          description: "Disallows unauthenticated unsubscribes of the subscription. If the
            value of this parameter is <code>true</code> and the request has an
            AWS signature, then only the topic owner and the subscription owner
            can unsubscribe the endpoint. The unsubscribe action requires AWS
            authentication. "
          schema:
            type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - ConfirmSubscription
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2010-03-31
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: ConfirmSubscription
      operationId: POST ConfirmSubscription
      description: Verifies an endpoint owner's intent to receive messages by validating
        the token sent to the endpoint by an earlier <code>Subscribe</code>
        action. If the token is valid, the action creates a new subscription and
        returns its Amazon Resource Name (ARN). This call requires an AWS
        signature only when the <code>AuthenticateOnUnsubscribe</code> flag is
        set to "true".
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ConfirmSubscriptionResponse"
        "480":
          description: SubscriptionLimitExceededException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/SubscriptionLimitExceededException"
        "481":
          description: InvalidParameterException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidParameterException"
        "482":
          description: NotFoundException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "483":
          description: InternalErrorException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InternalErrorException"
        "484":
          description: AuthorizationErrorException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/AuthorizationErrorException"
        "485":
          description: FilterPolicyLimitExceededException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/FilterPolicyLimitExceededException"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - ConfirmSubscription
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2010-03-31
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                TopicArn:
                  description: The ARN of the topic for which you wish to confirm a
                    subscription.
                  type: string
                Token:
                  description: Short-lived token sent to an endpoint during the
                    <code>Subscribe</code> action.
                  type: string
                AuthenticateOnUnsubscribe:
                  description: "Disallows unauthenticated unsubscribes of the subscription.
                    If the value of this parameter is <code>true</code> and the
                    request has an AWS signature, then only the topic owner and
                    the subscription owner can unsubscribe the endpoint. The
                    unsubscribe action requires AWS authentication. "
                  type: string
              required:
                - TopicArn
                - Token
  /#Action=CreatePlatformApplication:
    get:
      x-aws-operation-name: CreatePlatformApplication
      operationId: GET CreatePlatformApplication
      description: <p>Creates a platform application object for one of the supported push
        notification services, such as APNS and FCM, to which devices and mobile
        apps may register. You must specify PlatformPrincipal and
        PlatformCredential attributes when using the
        <code>CreatePlatformApplication</code> action. The PlatformPrincipal is
        received from the notification service. For APNS/APNS_SANDBOX,
        PlatformPrincipal is "SSL certificate". For GCM, PlatformPrincipal is
        not applicable. For ADM, PlatformPrincipal is "client id". The
        PlatformCredential is also received from the notification service. For
        WNS, PlatformPrincipal is "Package Security Identifier". For MPNS,
        PlatformPrincipal is "TLS certificate". For Baidu, PlatformPrincipal is
        "API key".</p> <p>For APNS/APNS_SANDBOX, PlatformCredential is "private
        key". For GCM, PlatformCredential is "API key". For ADM,
        PlatformCredential is "client secret". For WNS, PlatformCredential is
        "secret key". For MPNS, PlatformCredential is "private key". For Baidu,
        PlatformCredential is "secret key". The PlatformApplicationArn that is
        returned when using <code>CreatePlatformApplication</code> is then used
        as an attribute for the <code>CreatePlatformEndpoint</code> action. For
        more information, see <a
        href="https://docs.aws.amazon.com/sns/latest/dg/SNSMobilePush.html">Using
        Amazon SNS Mobile Push Notifications</a>. For more information about
        obtaining the PlatformPrincipal and PlatformCredential for each of the
        supported push notification services, see <a
        href="https://docs.aws.amazon.com/sns/latest/dg/mobile-push-apns.html">Getting
        Started with Apple Push Notification Service</a>, <a
        href="https://docs.aws.amazon.com/sns/latest/dg/mobile-push-adm.html">Getting
        Started with Amazon Device Messaging</a>, <a
        href="https://docs.aws.amazon.com/sns/latest/dg/mobile-push-baidu.html">Getting
        Started with Baidu Cloud Push</a>, <a
        href="https://docs.aws.amazon.com/sns/latest/dg/mobile-push-gcm.html">Getting
        Started with Google Cloud Messaging for Android</a>, <a
        href="https://docs.aws.amazon.com/sns/latest/dg/mobile-push-mpns.html">Getting
        Started with MPNS</a>, or <a
        href="https://docs.aws.amazon.com/sns/latest/dg/mobile-push-wns.html">Getting
        Started with WNS</a>. </p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/CreatePlatformApplicationResponse"
        "480":
          description: InvalidParameterException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidParameterException"
        "481":
          description: InternalErrorException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InternalErrorException"
        "482":
          description: AuthorizationErrorException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/AuthorizationErrorException"
      parameters:
        - name: Name
          in: query
          required: true
          description: Application names must be made up of only uppercase and lowercase
            ASCII letters, numbers, underscores, hyphens, and periods, and must
            be between 1 and 256 characters long.
          schema:
            type: string
        - name: Platform
          in: query
          required: true
          description: "The following platforms are supported: ADM (Amazon Device
            Messaging), APNS (Apple Push Notification Service), APNS_SANDBOX,
            and GCM (Google Cloud Messaging)."
          schema:
            type: string
        - name: Attributes.0.key
          in: query
          schema:
            type: string
        - name: Attributes.0.value
          in: query
          schema:
            type: string
        - name: Attributes.1.key
          in: query
          schema:
            type: string
        - name: Attributes.1.value
          in: query
          schema:
            type: string
        - name: Attributes.2.key
          in: query
          schema:
            type: string
        - name: Attributes.2.value
          in: query
          schema:
            type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - CreatePlatformApplication
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2010-03-31
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: CreatePlatformApplication
      operationId: POST CreatePlatformApplication
      description: <p>Creates a platform application object for one of the supported push
        notification services, such as APNS and FCM, to which devices and mobile
        apps may register. You must specify PlatformPrincipal and
        PlatformCredential attributes when using the
        <code>CreatePlatformApplication</code> action. The PlatformPrincipal is
        received from the notification service. For APNS/APNS_SANDBOX,
        PlatformPrincipal is "SSL certificate". For GCM, PlatformPrincipal is
        not applicable. For ADM, PlatformPrincipal is "client id". The
        PlatformCredential is also received from the notification service. For
        WNS, PlatformPrincipal is "Package Security Identifier". For MPNS,
        PlatformPrincipal is "TLS certificate". For Baidu, PlatformPrincipal is
        "API key".</p> <p>For APNS/APNS_SANDBOX, PlatformCredential is "private
        key". For GCM, PlatformCredential is "API key". For ADM,
        PlatformCredential is "client secret". For WNS, PlatformCredential is
        "secret key". For MPNS, PlatformCredential is "private key". For Baidu,
        PlatformCredential is "secret key". The PlatformApplicationArn that is
        returned when using <code>CreatePlatformApplication</code> is then used
        as an attribute for the <code>CreatePlatformEndpoint</code> action. For
        more information, see <a
        href="https://docs.aws.amazon.com/sns/latest/dg/SNSMobilePush.html">Using
        Amazon SNS Mobile Push Notifications</a>. For more information about
        obtaining the PlatformPrincipal and PlatformCredential for each of the
        supported push notification services, see <a
        href="https://docs.aws.amazon.com/sns/latest/dg/mobile-push-apns.html">Getting
        Started with Apple Push Notification Service</a>, <a
        href="https://docs.aws.amazon.com/sns/latest/dg/mobile-push-adm.html">Getting
        Started with Amazon Device Messaging</a>, <a
        href="https://docs.aws.amazon.com/sns/latest/dg/mobile-push-baidu.html">Getting
        Started with Baidu Cloud Push</a>, <a
        href="https://docs.aws.amazon.com/sns/latest/dg/mobile-push-gcm.html">Getting
        Started with Google Cloud Messaging for Android</a>, <a
        href="https://docs.aws.amazon.com/sns/latest/dg/mobile-push-mpns.html">Getting
        Started with MPNS</a>, or <a
        href="https://docs.aws.amazon.com/sns/latest/dg/mobile-push-wns.html">Getting
        Started with WNS</a>. </p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/CreatePlatformApplicationResponse"
        "480":
          description: InvalidParameterException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidParameterException"
        "481":
          description: InternalErrorException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InternalErrorException"
        "482":
          description: AuthorizationErrorException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/AuthorizationErrorException"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - CreatePlatformApplication
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2010-03-31
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                Name:
                  description: Application names must be made up of only uppercase and
                    lowercase ASCII letters, numbers, underscores, hyphens, and
                    periods, and must be between 1 and 256 characters long.
                  type: string
                Platform:
                  description: "The following platforms are supported: ADM (Amazon Device
                    Messaging), APNS (Apple Push Notification Service),
                    APNS_SANDBOX, and GCM (Google Cloud Messaging)."
                  type: string
                Attributes.0.key:
                  type: string
                Attributes.0.value:
                  type: string
                Attributes.1.key:
                  type: string
                Attributes.1.value:
                  type: string
                Attributes.2.key:
                  type: string
                Attributes.2.value:
                  type: string
              required:
                - Name
                - Platform
  /#Action=CreatePlatformEndpoint:
    get:
      x-aws-operation-name: CreatePlatformEndpoint
      operationId: GET CreatePlatformEndpoint
      description: "<p>Creates an endpoint for a device and mobile app on one of the
        supported push notification services, such as GCM and APNS.
        <code>CreatePlatformEndpoint</code> requires the PlatformApplicationArn
        that is returned from <code>CreatePlatformApplication</code>. The
        EndpointArn that is returned when using
        <code>CreatePlatformEndpoint</code> can then be used by the
        <code>Publish</code> action to send a message to a mobile app or by the
        <code>Subscribe</code> action for subscription to a topic. The
        <code>CreatePlatformEndpoint</code> action is idempotent, so if the
        requester already owns an endpoint with the same device token and
        attributes, that endpoint's ARN is returned without creating a new
        endpoint. For more information, see <a
        href=\"https://docs.aws.amazon.com/sns/latest/dg/SNSMobilePush.html\">U\
        sing Amazon SNS Mobile Push Notifications</a>. </p> <p>When using
        <code>CreatePlatformEndpoint</code> with Baidu, two attributes must be
        provided: ChannelId and UserId. The token field must also contain the
        ChannelId. For more information, see <a
        href=\"https://docs.aws.amazon.com/sns/latest/dg/SNSMobilePushBaiduEndp\
        oint.html\">Creating an Amazon SNS Endpoint for Baidu</a>. </p>"
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/CreateEndpointResponse"
        "480":
          description: InvalidParameterException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidParameterException"
        "481":
          description: InternalErrorException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InternalErrorException"
        "482":
          description: AuthorizationErrorException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/AuthorizationErrorException"
        "483":
          description: NotFoundException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/NotFoundException"
      parameters:
        - name: PlatformApplicationArn
          in: query
          required: true
          description: PlatformApplicationArn returned from CreatePlatformApplication is
            used to create a an endpoint.
          schema:
            type: string
        - name: Token
          in: query
          required: true
          description: Unique identifier created by the notification service for an app on
            a device. The specific name for Token will vary, depending on which
            notification service is being used. For example, when using APNS as
            the notification service, you need the device token. Alternatively,
            when using GCM or ADM, the device token equivalent is called the
            registration ID.
          schema:
            type: string
        - name: CustomUserData
          in: query
          required: false
          description: Arbitrary user data to associate with the endpoint. Amazon SNS does
            not use this data. The data must be in UTF-8 format and less than
            2KB.
          schema:
            type: string
        - name: Attributes.0.key
          in: query
          schema:
            type: string
        - name: Attributes.0.value
          in: query
          schema:
            type: string
        - name: Attributes.1.key
          in: query
          schema:
            type: string
        - name: Attributes.1.value
          in: query
          schema:
            type: string
        - name: Attributes.2.key
          in: query
          schema:
            type: string
        - name: Attributes.2.value
          in: query
          schema:
            type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - CreatePlatformEndpoint
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2010-03-31
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: CreatePlatformEndpoint
      operationId: POST CreatePlatformEndpoint
      description: "<p>Creates an endpoint for a device and mobile app on one of the
        supported push notification services, such as GCM and APNS.
        <code>CreatePlatformEndpoint</code> requires the PlatformApplicationArn
        that is returned from <code>CreatePlatformApplication</code>. The
        EndpointArn that is returned when using
        <code>CreatePlatformEndpoint</code> can then be used by the
        <code>Publish</code> action to send a message to a mobile app or by the
        <code>Subscribe</code> action for subscription to a topic. The
        <code>CreatePlatformEndpoint</code> action is idempotent, so if the
        requester already owns an endpoint with the same device token and
        attributes, that endpoint's ARN is returned without creating a new
        endpoint. For more information, see <a
        href=\"https://docs.aws.amazon.com/sns/latest/dg/SNSMobilePush.html\">U\
        sing Amazon SNS Mobile Push Notifications</a>. </p> <p>When using
        <code>CreatePlatformEndpoint</code> with Baidu, two attributes must be
        provided: ChannelId and UserId. The token field must also contain the
        ChannelId. For more information, see <a
        href=\"https://docs.aws.amazon.com/sns/latest/dg/SNSMobilePushBaiduEndp\
        oint.html\">Creating an Amazon SNS Endpoint for Baidu</a>. </p>"
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/CreateEndpointResponse"
        "480":
          description: InvalidParameterException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidParameterException"
        "481":
          description: InternalErrorException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InternalErrorException"
        "482":
          description: AuthorizationErrorException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/AuthorizationErrorException"
        "483":
          description: NotFoundException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/NotFoundException"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - CreatePlatformEndpoint
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2010-03-31
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                PlatformApplicationArn:
                  description: PlatformApplicationArn returned from
                    CreatePlatformApplication is used to create a an endpoint.
                  type: string
                Token:
                  description: Unique identifier created by the notification service for an
                    app on a device. The specific name for Token will vary,
                    depending on which notification service is being used. For
                    example, when using APNS as the notification service, you
                    need the device token. Alternatively, when using GCM or ADM,
                    the device token equivalent is called the registration ID.
                  type: string
                CustomUserData:
                  description: Arbitrary user data to associate with the endpoint. Amazon
                    SNS does not use this data. The data must be in UTF-8 format
                    and less than 2KB.
                  type: string
                Attributes.0.key:
                  type: string
                Attributes.0.value:
                  type: string
                Attributes.1.key:
                  type: string
                Attributes.1.value:
                  type: string
                Attributes.2.key:
                  type: string
                Attributes.2.value:
                  type: string
              required:
                - PlatformApplicationArn
                - Token
  /#Action=CreateTopic:
    get:
      x-aws-operation-name: CreateTopic
      operationId: GET CreateTopic
      description: Creates a topic to which notifications can be published. Users can
        create at most 100,000 topics. For more information, see <a
        href="http://aws.amazon.com/sns/">https://aws.amazon.com/sns</a>. This
        action is idempotent, so if the requester already owns a topic with the
        specified name, that topic's ARN is returned without creating a new
        topic.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/CreateTopicResponse"
        "480":
          description: InvalidParameterException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidParameterException"
        "481":
          description: TopicLimitExceededException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/TopicLimitExceededException"
        "482":
          description: InternalErrorException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InternalErrorException"
        "483":
          description: AuthorizationErrorException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/AuthorizationErrorException"
        "484":
          description: InvalidSecurityException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidSecurityException"
        "485":
          description: TagLimitExceededException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/TagLimitExceededException"
        "486":
          description: StaleTagException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/StaleTagException"
        "487":
          description: TagPolicyException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/TagPolicyException"
        "488":
          description: ConcurrentAccessException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ConcurrentAccessException"
      parameters:
        - name: Name
          in: query
          required: true
          description: "<p>The name of the topic you want to create.</p> <p>Constraints:
            Topic names must be made up of only uppercase and lowercase ASCII
            letters, numbers, underscores, and hyphens, and must be between 1
            and 256 characters long.</p>"
          schema:
            type: string
        - name: Attributes.0.key
          in: query
          schema:
            type: string
        - name: Attributes.0.value
          in: query
          schema:
            type: string
        - name: Attributes.1.key
          in: query
          schema:
            type: string
        - name: Attributes.1.value
          in: query
          schema:
            type: string
        - name: Attributes.2.key
          in: query
          schema:
            type: string
        - name: Attributes.2.value
          in: query
          schema:
            type: string
        - name: Tags
          in: query
          required: false
          description: The list of tags to add to a new topic.
          schema:
            type: array
            items:
              type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - CreateTopic
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2010-03-31
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: CreateTopic
      operationId: POST CreateTopic
      description: Creates a topic to which notifications can be published. Users can
        create at most 100,000 topics. For more information, see <a
        href="http://aws.amazon.com/sns/">https://aws.amazon.com/sns</a>. This
        action is idempotent, so if the requester already owns a topic with the
        specified name, that topic's ARN is returned without creating a new
        topic.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/CreateTopicResponse"
        "480":
          description: InvalidParameterException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidParameterException"
        "481":
          description: TopicLimitExceededException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/TopicLimitExceededException"
        "482":
          description: InternalErrorException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InternalErrorException"
        "483":
          description: AuthorizationErrorException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/AuthorizationErrorException"
        "484":
          description: InvalidSecurityException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidSecurityException"
        "485":
          description: TagLimitExceededException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/TagLimitExceededException"
        "486":
          description: StaleTagException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/StaleTagException"
        "487":
          description: TagPolicyException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/TagPolicyException"
        "488":
          description: ConcurrentAccessException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ConcurrentAccessException"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - CreateTopic
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2010-03-31
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                Name:
                  description: "<p>The name of the topic you want to create.</p>
                    <p>Constraints: Topic names must be made up of only
                    uppercase and lowercase ASCII letters, numbers, underscores,
                    and hyphens, and must be between 1 and 256 characters
                    long.</p>"
                  type: string
                Attributes.0.key:
                  type: string
                Attributes.0.value:
                  type: string
                Attributes.1.key:
                  type: string
                Attributes.1.value:
                  type: string
                Attributes.2.key:
                  type: string
                Attributes.2.value:
                  type: string
                Tags:
                  description: The list of tags to add to a new topic.
                  type: array
                  items:
                    type: string
              required:
                - Name
  /#Action=DeleteEndpoint:
    get:
      x-aws-operation-name: DeleteEndpoint
      operationId: GET DeleteEndpoint
      description: <p>Deletes the endpoint for a device and mobile app from Amazon SNS.
        This action is idempotent. For more information, see <a
        href="https://docs.aws.amazon.com/sns/latest/dg/SNSMobilePush.html">Using
        Amazon SNS Mobile Push Notifications</a>. </p> <p>When you delete an
        endpoint that is also subscribed to a topic, then you must also
        unsubscribe the endpoint from the topic.</p>
      responses:
        "200":
          description: Success
        "480":
          description: InvalidParameterException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidParameterException"
        "481":
          description: InternalErrorException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InternalErrorException"
        "482":
          description: AuthorizationErrorException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/AuthorizationErrorException"
      parameters:
        - name: EndpointArn
          in: query
          required: true
          description: EndpointArn of endpoint to delete.
          schema:
            type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DeleteEndpoint
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2010-03-31
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: DeleteEndpoint
      operationId: POST DeleteEndpoint
      description: <p>Deletes the endpoint for a device and mobile app from Amazon SNS.
        This action is idempotent. For more information, see <a
        href="https://docs.aws.amazon.com/sns/latest/dg/SNSMobilePush.html">Using
        Amazon SNS Mobile Push Notifications</a>. </p> <p>When you delete an
        endpoint that is also subscribed to a topic, then you must also
        unsubscribe the endpoint from the topic.</p>
      responses:
        "200":
          description: Success
        "480":
          description: InvalidParameterException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidParameterException"
        "481":
          description: InternalErrorException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InternalErrorException"
        "482":
          description: AuthorizationErrorException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/AuthorizationErrorException"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DeleteEndpoint
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2010-03-31
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                EndpointArn:
                  description: EndpointArn of endpoint to delete.
                  type: string
              required:
                - EndpointArn
  /#Action=DeletePlatformApplication:
    get:
      x-aws-operation-name: DeletePlatformApplication
      operationId: GET DeletePlatformApplication
      description: 'Deletes a platform application object for one of the supported push
        notification services, such as APNS and GCM. For more information, see
        <a
        href="https://docs.aws.amazon.com/sns/latest/dg/SNSMobilePush.html">Using
        Amazon SNS Mobile Push Notifications</a>. '
      responses:
        "200":
          description: Success
        "480":
          description: InvalidParameterException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidParameterException"
        "481":
          description: InternalErrorException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InternalErrorException"
        "482":
          description: AuthorizationErrorException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/AuthorizationErrorException"
      parameters:
        - name: PlatformApplicationArn
          in: query
          required: true
          description: PlatformApplicationArn of platform application object to delete.
          schema:
            type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DeletePlatformApplication
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2010-03-31
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: DeletePlatformApplication
      operationId: POST DeletePlatformApplication
      description: 'Deletes a platform application object for one of the supported push
        notification services, such as APNS and GCM. For more information, see
        <a
        href="https://docs.aws.amazon.com/sns/latest/dg/SNSMobilePush.html">Using
        Amazon SNS Mobile Push Notifications</a>. '
      responses:
        "200":
          description: Success
        "480":
          description: InvalidParameterException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidParameterException"
        "481":
          description: InternalErrorException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InternalErrorException"
        "482":
          description: AuthorizationErrorException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/AuthorizationErrorException"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DeletePlatformApplication
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2010-03-31
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                PlatformApplicationArn:
                  description: PlatformApplicationArn of platform application object to
                    delete.
                  type: string
              required:
                - PlatformApplicationArn
  /#Action=DeleteTopic:
    get:
      x-aws-operation-name: DeleteTopic
      operationId: GET DeleteTopic
      description: Deletes a topic and all its subscriptions. Deleting a topic might
        prevent some messages previously sent to the topic from being delivered
        to subscribers. This action is idempotent, so deleting a topic that does
        not exist does not result in an error.
      responses:
        "200":
          description: Success
        "480":
          description: InvalidParameterException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidParameterException"
        "481":
          description: InternalErrorException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InternalErrorException"
        "482":
          description: AuthorizationErrorException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/AuthorizationErrorException"
        "483":
          description: NotFoundException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "484":
          description: StaleTagException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/StaleTagException"
        "485":
          description: TagPolicyException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/TagPolicyException"
        "486":
          description: ConcurrentAccessException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ConcurrentAccessException"
      parameters:
        - name: TopicArn
          in: query
          required: true
          description: The ARN of the topic you want to delete.
          schema:
            type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DeleteTopic
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2010-03-31
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: DeleteTopic
      operationId: POST DeleteTopic
      description: Deletes a topic and all its subscriptions. Deleting a topic might
        prevent some messages previously sent to the topic from being delivered
        to subscribers. This action is idempotent, so deleting a topic that does
        not exist does not result in an error.
      responses:
        "200":
          description: Success
        "480":
          description: InvalidParameterException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidParameterException"
        "481":
          description: InternalErrorException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InternalErrorException"
        "482":
          description: AuthorizationErrorException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/AuthorizationErrorException"
        "483":
          description: NotFoundException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "484":
          description: StaleTagException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/StaleTagException"
        "485":
          description: TagPolicyException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/TagPolicyException"
        "486":
          description: ConcurrentAccessException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ConcurrentAccessException"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DeleteTopic
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2010-03-31
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                TopicArn:
                  description: The ARN of the topic you want to delete.
                  type: string
              required:
                - TopicArn
  /#Action=GetEndpointAttributes:
    get:
      x-aws-operation-name: GetEndpointAttributes
      operationId: GET GetEndpointAttributes
      description: 'Retrieves the endpoint attributes for a device on one of the supported
        push notification services, such as GCM and APNS. For more information,
        see <a
        href="https://docs.aws.amazon.com/sns/latest/dg/SNSMobilePush.html">Using
        Amazon SNS Mobile Push Notifications</a>. '
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/GetEndpointAttributesResponse"
        "480":
          description: InvalidParameterException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidParameterException"
        "481":
          description: InternalErrorException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InternalErrorException"
        "482":
          description: AuthorizationErrorException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/AuthorizationErrorException"
        "483":
          description: NotFoundException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/NotFoundException"
      parameters:
        - name: EndpointArn
          in: query
          required: true
          description: EndpointArn for GetEndpointAttributes input.
          schema:
            type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - GetEndpointAttributes
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2010-03-31
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: GetEndpointAttributes
      operationId: POST GetEndpointAttributes
      description: 'Retrieves the endpoint attributes for a device on one of the supported
        push notification services, such as GCM and APNS. For more information,
        see <a
        href="https://docs.aws.amazon.com/sns/latest/dg/SNSMobilePush.html">Using
        Amazon SNS Mobile Push Notifications</a>. '
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/GetEndpointAttributesResponse"
        "480":
          description: InvalidParameterException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidParameterException"
        "481":
          description: InternalErrorException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InternalErrorException"
        "482":
          description: AuthorizationErrorException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/AuthorizationErrorException"
        "483":
          description: NotFoundException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/NotFoundException"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - GetEndpointAttributes
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2010-03-31
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                EndpointArn:
                  description: EndpointArn for GetEndpointAttributes input.
                  type: string
              required:
                - EndpointArn
  /#Action=GetPlatformApplicationAttributes:
    get:
      x-aws-operation-name: GetPlatformApplicationAttributes
      operationId: GET GetPlatformApplicationAttributes
      description: 'Retrieves the attributes of the platform application object for the
        supported push notification services, such as APNS and GCM. For more
        information, see <a
        href="https://docs.aws.amazon.com/sns/latest/dg/SNSMobilePush.html">Using
        Amazon SNS Mobile Push Notifications</a>. '
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/GetPlatformApplicationAttributesResponse"
        "480":
          description: InvalidParameterException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidParameterException"
        "481":
          description: InternalErrorException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InternalErrorException"
        "482":
          description: AuthorizationErrorException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/AuthorizationErrorException"
        "483":
          description: NotFoundException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/NotFoundException"
      parameters:
        - name: PlatformApplicationArn
          in: query
          required: true
          description: PlatformApplicationArn for GetPlatformApplicationAttributesInput.
          schema:
            type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - GetPlatformApplicationAttributes
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2010-03-31
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: GetPlatformApplicationAttributes
      operationId: POST GetPlatformApplicationAttributes
      description: 'Retrieves the attributes of the platform application object for the
        supported push notification services, such as APNS and GCM. For more
        information, see <a
        href="https://docs.aws.amazon.com/sns/latest/dg/SNSMobilePush.html">Using
        Amazon SNS Mobile Push Notifications</a>. '
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/GetPlatformApplicationAttributesResponse"
        "480":
          description: InvalidParameterException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidParameterException"
        "481":
          description: InternalErrorException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InternalErrorException"
        "482":
          description: AuthorizationErrorException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/AuthorizationErrorException"
        "483":
          description: NotFoundException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/NotFoundException"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - GetPlatformApplicationAttributes
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2010-03-31
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                PlatformApplicationArn:
                  description: PlatformApplicationArn for
                    GetPlatformApplicationAttributesInput.
                  type: string
              required:
                - PlatformApplicationArn
  /#Action=GetSMSAttributes:
    get:
      x-aws-operation-name: GetSMSAttributes
      operationId: GET GetSMSAttributes
      description: <p>Returns the settings for sending SMS messages from your account.</p>
        <p>These settings are set with the <code>SetSMSAttributes</code>
        action.</p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/GetSMSAttributesResponse"
        "480":
          description: ThrottledException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ThrottledException"
        "481":
          description: InternalErrorException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InternalErrorException"
        "482":
          description: AuthorizationErrorException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/AuthorizationErrorException"
        "483":
          description: InvalidParameterException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidParameterException"
      parameters:
        - name: attributes
          in: query
          required: false
          description: <p>A list of the individual attribute names, such as
            <code>MonthlySpendLimit</code>, for which you want values.</p>
            <p>For all attribute names, see <a
            href="https://docs.aws.amazon.com/sns/latest/api/API_SetSMSAttributes.html">SetSMSAttributes</a>.</p>
            <p>If you don't use this parameter, Amazon SNS returns all SMS
            attributes.</p>
          schema:
            type: array
            items:
              type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - GetSMSAttributes
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2010-03-31
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: GetSMSAttributes
      operationId: POST GetSMSAttributes
      description: <p>Returns the settings for sending SMS messages from your account.</p>
        <p>These settings are set with the <code>SetSMSAttributes</code>
        action.</p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/GetSMSAttributesResponse"
        "480":
          description: ThrottledException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ThrottledException"
        "481":
          description: InternalErrorException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InternalErrorException"
        "482":
          description: AuthorizationErrorException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/AuthorizationErrorException"
        "483":
          description: InvalidParameterException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidParameterException"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - GetSMSAttributes
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2010-03-31
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                attributes:
                  description: <p>A list of the individual attribute names, such as
                    <code>MonthlySpendLimit</code>, for which you want
                    values.</p> <p>For all attribute names, see <a
                    href="https://docs.aws.amazon.com/sns/latest/api/API_SetSMSAttributes.html">SetSMSAttributes</a>.</p>
                    <p>If you don't use this parameter, Amazon SNS returns all
                    SMS attributes.</p>
                  type: array
                  items:
                    type: string
  /#Action=GetSubscriptionAttributes:
    get:
      x-aws-operation-name: GetSubscriptionAttributes
      operationId: GET GetSubscriptionAttributes
      description: Returns all of the properties of a subscription.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/GetSubscriptionAttributesResponse"
        "480":
          description: InvalidParameterException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidParameterException"
        "481":
          description: InternalErrorException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InternalErrorException"
        "482":
          description: NotFoundException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "483":
          description: AuthorizationErrorException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/AuthorizationErrorException"
      parameters:
        - name: SubscriptionArn
          in: query
          required: true
          description: The ARN of the subscription whose properties you want to get.
          schema:
            type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - GetSubscriptionAttributes
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2010-03-31
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: GetSubscriptionAttributes
      operationId: POST GetSubscriptionAttributes
      description: Returns all of the properties of a subscription.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/GetSubscriptionAttributesResponse"
        "480":
          description: InvalidParameterException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidParameterException"
        "481":
          description: InternalErrorException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InternalErrorException"
        "482":
          description: NotFoundException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "483":
          description: AuthorizationErrorException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/AuthorizationErrorException"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - GetSubscriptionAttributes
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2010-03-31
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                SubscriptionArn:
                  description: The ARN of the subscription whose properties you want to get.
                  type: string
              required:
                - SubscriptionArn
  /#Action=GetTopicAttributes:
    get:
      x-aws-operation-name: GetTopicAttributes
      operationId: GET GetTopicAttributes
      description: Returns all of the properties of a topic. Topic properties returned
        might differ based on the authorization of the user.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/GetTopicAttributesResponse"
        "480":
          description: InvalidParameterException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidParameterException"
        "481":
          description: InternalErrorException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InternalErrorException"
        "482":
          description: NotFoundException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "483":
          description: AuthorizationErrorException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/AuthorizationErrorException"
        "484":
          description: InvalidSecurityException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidSecurityException"
      parameters:
        - name: TopicArn
          in: query
          required: true
          description: The ARN of the topic whose properties you want to get.
          schema:
            type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - GetTopicAttributes
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2010-03-31
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: GetTopicAttributes
      operationId: POST GetTopicAttributes
      description: Returns all of the properties of a topic. Topic properties returned
        might differ based on the authorization of the user.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/GetTopicAttributesResponse"
        "480":
          description: InvalidParameterException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidParameterException"
        "481":
          description: InternalErrorException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InternalErrorException"
        "482":
          description: NotFoundException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "483":
          description: AuthorizationErrorException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/AuthorizationErrorException"
        "484":
          description: InvalidSecurityException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidSecurityException"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - GetTopicAttributes
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2010-03-31
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                TopicArn:
                  description: The ARN of the topic whose properties you want to get.
                  type: string
              required:
                - TopicArn
  /#Action=ListEndpointsByPlatformApplication:
    get:
      x-aws-operation-name: ListEndpointsByPlatformApplication
      operationId: GET ListEndpointsByPlatformApplication
      description: <p>Lists the endpoints and endpoint attributes for devices in a
        supported push notification service, such as GCM and APNS. The results
        for <code>ListEndpointsByPlatformApplication</code> are paginated and
        return a limited list of endpoints, up to 100. If additional records are
        available after the first page results, then a NextToken string will be
        returned. To receive the next page, you call
        <code>ListEndpointsByPlatformApplication</code> again using the
        NextToken string received from the previous call. When there are no more
        records to return, NextToken will be null. For more information, see <a
        href="https://docs.aws.amazon.com/sns/latest/dg/SNSMobilePush.html">Using
        Amazon SNS Mobile Push Notifications</a>. </p> <p>This action is
        throttled at 30 transactions per second (TPS).</p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ListEndpointsByPlatformApplicationRespo\
                  nse"
        "480":
          description: InvalidParameterException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidParameterException"
        "481":
          description: InternalErrorException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InternalErrorException"
        "482":
          description: AuthorizationErrorException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/AuthorizationErrorException"
        "483":
          description: NotFoundException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/NotFoundException"
      parameters:
        - name: PlatformApplicationArn
          in: query
          required: true
          description: PlatformApplicationArn for ListEndpointsByPlatformApplicationInput
            action.
          schema:
            type: string
        - name: NextToken
          in: query
          required: false
          description: NextToken string is used when calling
            ListEndpointsByPlatformApplication action to retrieve additional
            records that are available after the first page results.
          schema:
            type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - ListEndpointsByPlatformApplication
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2010-03-31
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: ListEndpointsByPlatformApplication
      operationId: POST ListEndpointsByPlatformApplication
      description: <p>Lists the endpoints and endpoint attributes for devices in a
        supported push notification service, such as GCM and APNS. The results
        for <code>ListEndpointsByPlatformApplication</code> are paginated and
        return a limited list of endpoints, up to 100. If additional records are
        available after the first page results, then a NextToken string will be
        returned. To receive the next page, you call
        <code>ListEndpointsByPlatformApplication</code> again using the
        NextToken string received from the previous call. When there are no more
        records to return, NextToken will be null. For more information, see <a
        href="https://docs.aws.amazon.com/sns/latest/dg/SNSMobilePush.html">Using
        Amazon SNS Mobile Push Notifications</a>. </p> <p>This action is
        throttled at 30 transactions per second (TPS).</p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ListEndpointsByPlatformApplicationRespo\
                  nse"
        "480":
          description: InvalidParameterException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidParameterException"
        "481":
          description: InternalErrorException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InternalErrorException"
        "482":
          description: AuthorizationErrorException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/AuthorizationErrorException"
        "483":
          description: NotFoundException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/NotFoundException"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - ListEndpointsByPlatformApplication
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2010-03-31
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                PlatformApplicationArn:
                  description: PlatformApplicationArn for
                    ListEndpointsByPlatformApplicationInput action.
                  type: string
                NextToken:
                  description: NextToken string is used when calling
                    ListEndpointsByPlatformApplication action to retrieve
                    additional records that are available after the first page
                    results.
                  type: string
              required:
                - PlatformApplicationArn
  /#Action=ListPhoneNumbersOptedOut:
    get:
      x-aws-operation-name: ListPhoneNumbersOptedOut
      operationId: GET ListPhoneNumbersOptedOut
      description: <p>Returns a list of phone numbers that are opted out, meaning you
        cannot send SMS messages to them.</p> <p>The results for
        <code>ListPhoneNumbersOptedOut</code> are paginated, and each page
        returns up to 100 phone numbers. If additional phone numbers are
        available after the first page of results, then a <code>NextToken</code>
        string will be returned. To receive the next page, you call
        <code>ListPhoneNumbersOptedOut</code> again using the
        <code>NextToken</code> string received from the previous call. When
        there are no more records to return, <code>NextToken</code> will be
        null.</p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ListPhoneNumbersOptedOutResponse"
        "480":
          description: ThrottledException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ThrottledException"
        "481":
          description: InternalErrorException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InternalErrorException"
        "482":
          description: AuthorizationErrorException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/AuthorizationErrorException"
        "483":
          description: InvalidParameterException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidParameterException"
      parameters:
        - name: nextToken
          in: query
          required: false
          description: A <code>NextToken</code> string is used when you call the
            <code>ListPhoneNumbersOptedOut</code> action to retrieve additional
            records that are available after the first page of results.
          schema:
            type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - ListPhoneNumbersOptedOut
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2010-03-31
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: ListPhoneNumbersOptedOut
      operationId: POST ListPhoneNumbersOptedOut
      description: <p>Returns a list of phone numbers that are opted out, meaning you
        cannot send SMS messages to them.</p> <p>The results for
        <code>ListPhoneNumbersOptedOut</code> are paginated, and each page
        returns up to 100 phone numbers. If additional phone numbers are
        available after the first page of results, then a <code>NextToken</code>
        string will be returned. To receive the next page, you call
        <code>ListPhoneNumbersOptedOut</code> again using the
        <code>NextToken</code> string received from the previous call. When
        there are no more records to return, <code>NextToken</code> will be
        null.</p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ListPhoneNumbersOptedOutResponse"
        "480":
          description: ThrottledException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ThrottledException"
        "481":
          description: InternalErrorException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InternalErrorException"
        "482":
          description: AuthorizationErrorException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/AuthorizationErrorException"
        "483":
          description: InvalidParameterException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidParameterException"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - ListPhoneNumbersOptedOut
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2010-03-31
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                nextToken:
                  description: A <code>NextToken</code> string is used when you call the
                    <code>ListPhoneNumbersOptedOut</code> action to retrieve
                    additional records that are available after the first page
                    of results.
                  type: string
  /#Action=ListPlatformApplications:
    get:
      x-aws-operation-name: ListPlatformApplications
      operationId: GET ListPlatformApplications
      description: <p>Lists the platform application objects for the supported push
        notification services, such as APNS and GCM. The results for
        <code>ListPlatformApplications</code> are paginated and return a limited
        list of applications, up to 100. If additional records are available
        after the first page results, then a NextToken string will be returned.
        To receive the next page, you call <code>ListPlatformApplications</code>
        using the NextToken string received from the previous call. When there
        are no more records to return, NextToken will be null. For more
        information, see <a
        href="https://docs.aws.amazon.com/sns/latest/dg/SNSMobilePush.html">Using
        Amazon SNS Mobile Push Notifications</a>. </p> <p>This action is
        throttled at 15 transactions per second (TPS).</p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ListPlatformApplicationsResponse"
        "480":
          description: InvalidParameterException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidParameterException"
        "481":
          description: InternalErrorException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InternalErrorException"
        "482":
          description: AuthorizationErrorException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/AuthorizationErrorException"
      parameters:
        - name: NextToken
          in: query
          required: false
          description: NextToken string is used when calling ListPlatformApplications
            action to retrieve additional records that are available after the
            first page results.
          schema:
            type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - ListPlatformApplications
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2010-03-31
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: ListPlatformApplications
      operationId: POST ListPlatformApplications
      description: <p>Lists the platform application objects for the supported push
        notification services, such as APNS and GCM. The results for
        <code>ListPlatformApplications</code> are paginated and return a limited
        list of applications, up to 100. If additional records are available
        after the first page results, then a NextToken string will be returned.
        To receive the next page, you call <code>ListPlatformApplications</code>
        using the NextToken string received from the previous call. When there
        are no more records to return, NextToken will be null. For more
        information, see <a
        href="https://docs.aws.amazon.com/sns/latest/dg/SNSMobilePush.html">Using
        Amazon SNS Mobile Push Notifications</a>. </p> <p>This action is
        throttled at 15 transactions per second (TPS).</p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ListPlatformApplicationsResponse"
        "480":
          description: InvalidParameterException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidParameterException"
        "481":
          description: InternalErrorException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InternalErrorException"
        "482":
          description: AuthorizationErrorException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/AuthorizationErrorException"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - ListPlatformApplications
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2010-03-31
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                NextToken:
                  description: NextToken string is used when calling
                    ListPlatformApplications action to retrieve additional
                    records that are available after the first page results.
                  type: string
  /#Action=ListSubscriptions:
    get:
      x-aws-operation-name: ListSubscriptions
      operationId: GET ListSubscriptions
      description: <p>Returns a list of the requester's subscriptions. Each call returns a
        limited list of subscriptions, up to 100. If there are more
        subscriptions, a <code>NextToken</code> is also returned. Use the
        <code>NextToken</code> parameter in a new <code>ListSubscriptions</code>
        call to get further results.</p> <p>This action is throttled at 30
        transactions per second (TPS).</p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ListSubscriptionsResponse"
        "480":
          description: InvalidParameterException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidParameterException"
        "481":
          description: InternalErrorException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InternalErrorException"
        "482":
          description: AuthorizationErrorException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/AuthorizationErrorException"
      parameters:
        - name: NextToken
          in: query
          required: false
          description: Token returned by the previous <code>ListSubscriptions</code>
            request.
          schema:
            type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - ListSubscriptions
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2010-03-31
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: ListSubscriptions
      operationId: POST ListSubscriptions
      description: <p>Returns a list of the requester's subscriptions. Each call returns a
        limited list of subscriptions, up to 100. If there are more
        subscriptions, a <code>NextToken</code> is also returned. Use the
        <code>NextToken</code> parameter in a new <code>ListSubscriptions</code>
        call to get further results.</p> <p>This action is throttled at 30
        transactions per second (TPS).</p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ListSubscriptionsResponse"
        "480":
          description: InvalidParameterException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidParameterException"
        "481":
          description: InternalErrorException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InternalErrorException"
        "482":
          description: AuthorizationErrorException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/AuthorizationErrorException"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - ListSubscriptions
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2010-03-31
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                NextToken:
                  description: Token returned by the previous
                    <code>ListSubscriptions</code> request.
                  type: string
  /#Action=ListSubscriptionsByTopic:
    get:
      x-aws-operation-name: ListSubscriptionsByTopic
      operationId: GET ListSubscriptionsByTopic
      description: <p>Returns a list of the subscriptions to a specific topic. Each call
        returns a limited list of subscriptions, up to 100. If there are more
        subscriptions, a <code>NextToken</code> is also returned. Use the
        <code>NextToken</code> parameter in a new
        <code>ListSubscriptionsByTopic</code> call to get further results.</p>
        <p>This action is throttled at 30 transactions per second (TPS).</p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ListSubscriptionsByTopicResponse"
        "480":
          description: InvalidParameterException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidParameterException"
        "481":
          description: InternalErrorException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InternalErrorException"
        "482":
          description: NotFoundException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "483":
          description: AuthorizationErrorException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/AuthorizationErrorException"
      parameters:
        - name: TopicArn
          in: query
          required: true
          description: The ARN of the topic for which you wish to find subscriptions.
          schema:
            type: string
        - name: NextToken
          in: query
          required: false
          description: Token returned by the previous <code>ListSubscriptionsByTopic</code>
            request.
          schema:
            type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - ListSubscriptionsByTopic
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2010-03-31
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: ListSubscriptionsByTopic
      operationId: POST ListSubscriptionsByTopic
      description: <p>Returns a list of the subscriptions to a specific topic. Each call
        returns a limited list of subscriptions, up to 100. If there are more
        subscriptions, a <code>NextToken</code> is also returned. Use the
        <code>NextToken</code> parameter in a new
        <code>ListSubscriptionsByTopic</code> call to get further results.</p>
        <p>This action is throttled at 30 transactions per second (TPS).</p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ListSubscriptionsByTopicResponse"
        "480":
          description: InvalidParameterException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidParameterException"
        "481":
          description: InternalErrorException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InternalErrorException"
        "482":
          description: NotFoundException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "483":
          description: AuthorizationErrorException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/AuthorizationErrorException"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - ListSubscriptionsByTopic
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2010-03-31
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                TopicArn:
                  description: The ARN of the topic for which you wish to find
                    subscriptions.
                  type: string
                NextToken:
                  description: Token returned by the previous
                    <code>ListSubscriptionsByTopic</code> request.
                  type: string
              required:
                - TopicArn
  /#Action=ListTagsForResource:
    get:
      x-aws-operation-name: ListTagsForResource
      operationId: GET ListTagsForResource
      description: List all tags added to the specified Amazon SNS topic. For an overview,
        see <a
        href="https://docs.aws.amazon.com/sns/latest/dg/sns-tags.html">Amazon
        SNS Tags</a> in the <i>Amazon Simple Notification Service Developer
        Guide</i>.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ListTagsForResourceResponse"
        "480":
          description: ResourceNotFoundException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "481":
          description: TagPolicyException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/TagPolicyException"
        "482":
          description: InvalidParameterException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidParameterException"
        "483":
          description: AuthorizationErrorException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/AuthorizationErrorException"
        "484":
          description: ConcurrentAccessException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ConcurrentAccessException"
      parameters:
        - name: ResourceArn
          in: query
          required: true
          description: The ARN of the topic for which to list tags.
          schema:
            type: string
            minLength: 1
            maxLength: 1011
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - ListTagsForResource
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2010-03-31
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: ListTagsForResource
      operationId: POST ListTagsForResource
      description: List all tags added to the specified Amazon SNS topic. For an overview,
        see <a
        href="https://docs.aws.amazon.com/sns/latest/dg/sns-tags.html">Amazon
        SNS Tags</a> in the <i>Amazon Simple Notification Service Developer
        Guide</i>.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ListTagsForResourceResponse"
        "480":
          description: ResourceNotFoundException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "481":
          description: TagPolicyException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/TagPolicyException"
        "482":
          description: InvalidParameterException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidParameterException"
        "483":
          description: AuthorizationErrorException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/AuthorizationErrorException"
        "484":
          description: ConcurrentAccessException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ConcurrentAccessException"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - ListTagsForResource
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2010-03-31
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                ResourceArn:
                  description: The ARN of the topic for which to list tags.
                  type: string
                  minLength: 1
                  maxLength: 1011
              required:
                - ResourceArn
  /#Action=ListTopics:
    get:
      x-aws-operation-name: ListTopics
      operationId: GET ListTopics
      description: <p>Returns a list of the requester's topics. Each call returns a limited
        list of topics, up to 100. If there are more topics, a
        <code>NextToken</code> is also returned. Use the <code>NextToken</code>
        parameter in a new <code>ListTopics</code> call to get further
        results.</p> <p>This action is throttled at 30 transactions per second
        (TPS).</p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ListTopicsResponse"
        "480":
          description: InvalidParameterException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidParameterException"
        "481":
          description: InternalErrorException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InternalErrorException"
        "482":
          description: AuthorizationErrorException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/AuthorizationErrorException"
      parameters:
        - name: NextToken
          in: query
          required: false
          description: Token returned by the previous <code>ListTopics</code> request.
          schema:
            type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - ListTopics
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2010-03-31
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: ListTopics
      operationId: POST ListTopics
      description: <p>Returns a list of the requester's topics. Each call returns a limited
        list of topics, up to 100. If there are more topics, a
        <code>NextToken</code> is also returned. Use the <code>NextToken</code>
        parameter in a new <code>ListTopics</code> call to get further
        results.</p> <p>This action is throttled at 30 transactions per second
        (TPS).</p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ListTopicsResponse"
        "480":
          description: InvalidParameterException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidParameterException"
        "481":
          description: InternalErrorException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InternalErrorException"
        "482":
          description: AuthorizationErrorException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/AuthorizationErrorException"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - ListTopics
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2010-03-31
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                NextToken:
                  description: Token returned by the previous <code>ListTopics</code>
                    request.
                  type: string
  /#Action=OptInPhoneNumber:
    get:
      x-aws-operation-name: OptInPhoneNumber
      operationId: GET OptInPhoneNumber
      description: <p>Use this request to opt in a phone number that is opted out, which
        enables you to resume sending SMS messages to the number.</p> <p>You can
        opt in a phone number only once every 30 days.</p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/OptInPhoneNumberResponse"
        "480":
          description: ThrottledException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ThrottledException"
        "481":
          description: InternalErrorException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InternalErrorException"
        "482":
          description: AuthorizationErrorException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/AuthorizationErrorException"
        "483":
          description: InvalidParameterException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidParameterException"
      parameters:
        - name: phoneNumber
          in: query
          required: true
          description: The phone number to opt in.
          schema:
            type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - OptInPhoneNumber
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2010-03-31
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: OptInPhoneNumber
      operationId: POST OptInPhoneNumber
      description: <p>Use this request to opt in a phone number that is opted out, which
        enables you to resume sending SMS messages to the number.</p> <p>You can
        opt in a phone number only once every 30 days.</p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/OptInPhoneNumberResponse"
        "480":
          description: ThrottledException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ThrottledException"
        "481":
          description: InternalErrorException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InternalErrorException"
        "482":
          description: AuthorizationErrorException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/AuthorizationErrorException"
        "483":
          description: InvalidParameterException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidParameterException"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - OptInPhoneNumber
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2010-03-31
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                phoneNumber:
                  description: The phone number to opt in.
                  type: string
              required:
                - phoneNumber
  /#Action=Publish:
    get:
      x-aws-operation-name: Publish
      operationId: GET Publish
      description: <p>Sends a message to an Amazon SNS topic or sends a text message (SMS
        message) directly to a phone number. </p> <p>If you send a message to a
        topic, Amazon SNS delivers the message to each endpoint that is
        subscribed to the topic. The format of the message depends on the
        notification protocol for each subscribed endpoint.</p> <p>When a
        <code>messageId</code> is returned, the message has been saved and
        Amazon SNS will attempt to deliver it shortly.</p> <p>To use the
        <code>Publish</code> action for sending a message to a mobile endpoint,
        such as an app on a Kindle device or mobile phone, you must specify the
        EndpointArn for the TargetArn parameter. The EndpointArn is returned
        when making a call with the <code>CreatePlatformEndpoint</code> action.
        </p> <p>For more information about formatting messages, see <a
        href="https://docs.aws.amazon.com/sns/latest/dg/mobile-push-send-custommessage.html">Send
        Custom Platform-Specific Payloads in Messages to Mobile Devices</a>.
        </p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/PublishResponse"
        "480":
          description: InvalidParameterException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidParameterException"
        "481":
          description: InvalidParameterValueException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidParameterValueException"
        "482":
          description: InternalErrorException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InternalErrorException"
        "483":
          description: NotFoundException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "484":
          description: EndpointDisabledException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/EndpointDisabledException"
        "485":
          description: PlatformApplicationDisabledException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/PlatformApplicationDisabledException"
        "486":
          description: AuthorizationErrorException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/AuthorizationErrorException"
        "487":
          description: KMSDisabledException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/KMSDisabledException"
        "488":
          description: KMSInvalidStateException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/KMSInvalidStateException"
        "489":
          description: KMSNotFoundException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/KMSNotFoundException"
        "490":
          description: KMSOptInRequired
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/KMSOptInRequired"
        "491":
          description: KMSThrottlingException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/KMSThrottlingException"
        "492":
          description: KMSAccessDeniedException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/KMSAccessDeniedException"
        "493":
          description: InvalidSecurityException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidSecurityException"
      parameters:
        - name: TopicArn
          in: query
          required: false
          description: <p>The topic you want to publish to.</p> <p>If you don't specify a
            value for the <code>TopicArn</code> parameter, you must specify a
            value for the <code>PhoneNumber</code> or <code>TargetArn</code>
            parameters.</p>
          schema:
            type: string
        - name: TargetArn
          in: query
          required: false
          description: If you don't specify a value for the <code>TargetArn</code>
            parameter, you must specify a value for the <code>PhoneNumber</code>
            or <code>TopicArn</code> parameters.
          schema:
            type: string
        - name: PhoneNumber
          in: query
          required: false
          description: <p>The phone number to which you want to deliver an SMS message. Use
            E.164 format.</p> <p>If you don't specify a value for the
            <code>PhoneNumber</code> parameter, you must specify a value for the
            <code>TargetArn</code> or <code>TopicArn</code> parameters.</p>
          schema:
            type: string
        - name: Message
          in: query
          required: true
          description: <p>The message you want to send.</p> <important> <p>The
            <code>Message</code> parameter is always a string. If you set
            <code>MessageStructure</code> to <code>json</code>, you must
            string-encode the <code>Message</code> parameter.</p> </important>
            <p>If you are publishing to a topic and you want to send the same
            message to all transport protocols, include the text of the message
            as a String value. If you want to send different messages for each
            transport protocol, set the value of the
            <code>MessageStructure</code> parameter to <code>json</code> and use
            a JSON object for the <code>Message</code> parameter. </p> <p/>
            <p>Constraints:</p> <ul> <li> <p>With the exception of SMS, messages
            must be UTF-8 encoded strings and at most 256 KB in size (262,144
            bytes, not 262,144 characters).</p> </li> <li> <p>For SMS, each
            message can contain up to 140 characters. This character limit
            depends on the encoding schema. For example, an SMS message can
            contain 160 GSM characters, 140 ASCII characters, or 70 UCS-2
            characters.</p> <p>If you publish a message that exceeds this size
            limit, Amazon SNS sends the message as multiple messages, each
            fitting within the size limit. Messages aren't truncated mid-word
            but are cut off at whole-word boundaries.</p> <p>The total size
            limit for a single SMS <code>Publish</code> action is 1,600
            characters.</p> </li> </ul> <p>JSON-specific constraints:</p> <ul>
            <li> <p>Keys in the JSON object that correspond to supported
            transport protocols must have simple JSON string values.</p> </li>
            <li> <p>The values will be parsed (unescaped) before they are used
            in outgoing messages.</p> </li> <li> <p>Outbound notifications are
            JSON encoded (meaning that the characters will be reescaped for
            sending).</p> </li> <li> <p>Values have a minimum length of 0 (the
            empty string, "", is allowed).</p> </li> <li> <p>Values have a
            maximum length bounded by the overall message size (so, including
            multiple protocols may limit message sizes).</p> </li> <li>
            <p>Non-string values will cause the key to be ignored.</p> </li>
            <li> <p>Keys that do not correspond to supported transport protocols
            are ignored.</p> </li> <li> <p>Duplicate keys are not allowed.</p>
            </li> <li> <p>Failure to parse or validate any key or value in the
            message will cause the <code>Publish</code> call to return an error
            (no partial delivery).</p> </li> </ul>
          schema:
            type: string
        - name: Subject
          in: query
          required: false
          description: '<p>Optional parameter to be used as the "Subject" line when the
            message is delivered to email endpoints. This field will also be
            included, if present, in the standard JSON messages delivered to
            other endpoints.</p> <p>Constraints: Subjects must be ASCII text
            that begins with a letter, number, or punctuation mark; must not
            include line breaks or control characters; and must be less than 100
            characters long.</p>'
          schema:
            type: string
        - name: MessageStructure
          in: query
          required: false
          description: '<p>Set <code>MessageStructure</code> to <code>json</code> if you
            want to send a different message for each protocol. For example,
            using one publish action, you can send a short message to your SMS
            subscribers and a longer message to your email subscribers. If you
            set <code>MessageStructure</code> to <code>json</code>, the value of
            the <code>Message</code> parameter must: </p> <ul> <li> <p>be a
            syntactically valid JSON object; and</p> </li> <li> <p>contain at
            least a top-level JSON key of "default" with a value that is a
            string.</p> </li> </ul> <p>You can define other top-level keys that
            define the message you want to send to a specific transport protocol
            (e.g., "http").</p> <p>For information about sending different
            messages for each protocol using the AWS Management Console, go to
            <a
            href="https://docs.aws.amazon.com/sns/latest/gsg/Publish.html#sns-message-formatting-by-protocol">Create
            Different Messages for Each Protocol</a> in the <i>Amazon Simple
            Notification Service Getting Started Guide</i>. </p> <p>Valid value:
            <code>json</code> </p>'
          schema:
            type: string
        - name: MessageAttributes.0.key
          in: query
          schema:
            type: string
        - name: MessageAttributes.0.value
          in: query
          schema:
            type: string
        - name: MessageAttributes.1.key
          in: query
          schema:
            type: string
        - name: MessageAttributes.1.value
          in: query
          schema:
            type: string
        - name: MessageAttributes.2.key
          in: query
          schema:
            type: string
        - name: MessageAttributes.2.value
          in: query
          schema:
            type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - Publish
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2010-03-31
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: Publish
      operationId: POST Publish
      description: <p>Sends a message to an Amazon SNS topic or sends a text message (SMS
        message) directly to a phone number. </p> <p>If you send a message to a
        topic, Amazon SNS delivers the message to each endpoint that is
        subscribed to the topic. The format of the message depends on the
        notification protocol for each subscribed endpoint.</p> <p>When a
        <code>messageId</code> is returned, the message has been saved and
        Amazon SNS will attempt to deliver it shortly.</p> <p>To use the
        <code>Publish</code> action for sending a message to a mobile endpoint,
        such as an app on a Kindle device or mobile phone, you must specify the
        EndpointArn for the TargetArn parameter. The EndpointArn is returned
        when making a call with the <code>CreatePlatformEndpoint</code> action.
        </p> <p>For more information about formatting messages, see <a
        href="https://docs.aws.amazon.com/sns/latest/dg/mobile-push-send-custommessage.html">Send
        Custom Platform-Specific Payloads in Messages to Mobile Devices</a>.
        </p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/PublishResponse"
        "480":
          description: InvalidParameterException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidParameterException"
        "481":
          description: InvalidParameterValueException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidParameterValueException"
        "482":
          description: InternalErrorException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InternalErrorException"
        "483":
          description: NotFoundException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "484":
          description: EndpointDisabledException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/EndpointDisabledException"
        "485":
          description: PlatformApplicationDisabledException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/PlatformApplicationDisabledException"
        "486":
          description: AuthorizationErrorException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/AuthorizationErrorException"
        "487":
          description: KMSDisabledException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/KMSDisabledException"
        "488":
          description: KMSInvalidStateException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/KMSInvalidStateException"
        "489":
          description: KMSNotFoundException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/KMSNotFoundException"
        "490":
          description: KMSOptInRequired
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/KMSOptInRequired"
        "491":
          description: KMSThrottlingException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/KMSThrottlingException"
        "492":
          description: KMSAccessDeniedException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/KMSAccessDeniedException"
        "493":
          description: InvalidSecurityException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidSecurityException"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - Publish
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2010-03-31
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                TopicArn:
                  description: <p>The topic you want to publish to.</p> <p>If you don't
                    specify a value for the <code>TopicArn</code> parameter, you
                    must specify a value for the <code>PhoneNumber</code> or
                    <code>TargetArn</code> parameters.</p>
                  type: string
                TargetArn:
                  description: If you don't specify a value for the <code>TargetArn</code>
                    parameter, you must specify a value for the
                    <code>PhoneNumber</code> or <code>TopicArn</code>
                    parameters.
                  type: string
                PhoneNumber:
                  description: <p>The phone number to which you want to deliver an SMS
                    message. Use E.164 format.</p> <p>If you don't specify a
                    value for the <code>PhoneNumber</code> parameter, you must
                    specify a value for the <code>TargetArn</code> or
                    <code>TopicArn</code> parameters.</p>
                  type: string
                Message:
                  description: <p>The message you want to send.</p> <important> <p>The
                    <code>Message</code> parameter is always a string. If you
                    set <code>MessageStructure</code> to <code>json</code>, you
                    must string-encode the <code>Message</code> parameter.</p>
                    </important> <p>If you are publishing to a topic and you
                    want to send the same message to all transport protocols,
                    include the text of the message as a String value. If you
                    want to send different messages for each transport protocol,
                    set the value of the <code>MessageStructure</code> parameter
                    to <code>json</code> and use a JSON object for the
                    <code>Message</code> parameter. </p> <p/>
                    <p>Constraints:</p> <ul> <li> <p>With the exception of SMS,
                    messages must be UTF-8 encoded strings and at most 256 KB in
                    size (262,144 bytes, not 262,144 characters).</p> </li> <li>
                    <p>For SMS, each message can contain up to 140 characters.
                    This character limit depends on the encoding schema. For
                    example, an SMS message can contain 160 GSM characters, 140
                    ASCII characters, or 70 UCS-2 characters.</p> <p>If you
                    publish a message that exceeds this size limit, Amazon SNS
                    sends the message as multiple messages, each fitting within
                    the size limit. Messages aren't truncated mid-word but are
                    cut off at whole-word boundaries.</p> <p>The total size
                    limit for a single SMS <code>Publish</code> action is 1,600
                    characters.</p> </li> </ul> <p>JSON-specific
                    constraints:</p> <ul> <li> <p>Keys in the JSON object that
                    correspond to supported transport protocols must have simple
                    JSON string values.</p> </li> <li> <p>The values will be
                    parsed (unescaped) before they are used in outgoing
                    messages.</p> </li> <li> <p>Outbound notifications are JSON
                    encoded (meaning that the characters will be reescaped for
                    sending).</p> </li> <li> <p>Values have a minimum length of
                    0 (the empty string, "", is allowed).</p> </li> <li>
                    <p>Values have a maximum length bounded by the overall
                    message size (so, including multiple protocols may limit
                    message sizes).</p> </li> <li> <p>Non-string values will
                    cause the key to be ignored.</p> </li> <li> <p>Keys that do
                    not correspond to supported transport protocols are
                    ignored.</p> </li> <li> <p>Duplicate keys are not
                    allowed.</p> </li> <li> <p>Failure to parse or validate any
                    key or value in the message will cause the
                    <code>Publish</code> call to return an error (no partial
                    delivery).</p> </li> </ul>
                  type: string
                Subject:
                  description: '<p>Optional parameter to be used as the "Subject" line when
                    the message is delivered to email endpoints. This field will
                    also be included, if present, in the standard JSON messages
                    delivered to other endpoints.</p> <p>Constraints: Subjects
                    must be ASCII text that begins with a letter, number, or
                    punctuation mark; must not include line breaks or control
                    characters; and must be less than 100 characters long.</p>'
                  type: string
                MessageStructure:
                  description: '<p>Set <code>MessageStructure</code> to <code>json</code>
                    if you want to send a different message for each protocol.
                    For example, using one publish action, you can send a short
                    message to your SMS subscribers and a longer message to your
                    email subscribers. If you set <code>MessageStructure</code>
                    to <code>json</code>, the value of the <code>Message</code>
                    parameter must: </p> <ul> <li> <p>be a syntactically valid
                    JSON object; and</p> </li> <li> <p>contain at least a
                    top-level JSON key of "default" with a value that is a
                    string.</p> </li> </ul> <p>You can define other top-level
                    keys that define the message you want to send to a specific
                    transport protocol (e.g., "http").</p> <p>For information
                    about sending different messages for each protocol using the
                    AWS Management Console, go to <a
                    href="https://docs.aws.amazon.com/sns/latest/gsg/Publish.html#sns-message-formatting-by-protocol">Create
                    Different Messages for Each Protocol</a> in the <i>Amazon
                    Simple Notification Service Getting Started Guide</i>. </p>
                    <p>Valid value: <code>json</code> </p>'
                  type: string
                MessageAttributes.0.key:
                  type: string
                MessageAttributes.0.value:
                  type: string
                MessageAttributes.1.key:
                  type: string
                MessageAttributes.1.value:
                  type: string
                MessageAttributes.2.key:
                  type: string
                MessageAttributes.2.value:
                  type: string
              required:
                - Message
  /#Action=RemovePermission:
    get:
      x-aws-operation-name: RemovePermission
      operationId: GET RemovePermission
      description: Removes a statement from a topic's access control policy.
      responses:
        "200":
          description: Success
        "480":
          description: InvalidParameterException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidParameterException"
        "481":
          description: InternalErrorException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InternalErrorException"
        "482":
          description: AuthorizationErrorException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/AuthorizationErrorException"
        "483":
          description: NotFoundException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/NotFoundException"
      parameters:
        - name: TopicArn
          in: query
          required: true
          description: The ARN of the topic whose access control policy you wish to modify.
          schema:
            type: string
        - name: Label
          in: query
          required: true
          description: The unique label of the statement you want to remove.
          schema:
            type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - RemovePermission
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2010-03-31
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: RemovePermission
      operationId: POST RemovePermission
      description: Removes a statement from a topic's access control policy.
      responses:
        "200":
          description: Success
        "480":
          description: InvalidParameterException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidParameterException"
        "481":
          description: InternalErrorException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InternalErrorException"
        "482":
          description: AuthorizationErrorException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/AuthorizationErrorException"
        "483":
          description: NotFoundException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/NotFoundException"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - RemovePermission
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2010-03-31
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                TopicArn:
                  description: The ARN of the topic whose access control policy you wish to
                    modify.
                  type: string
                Label:
                  description: The unique label of the statement you want to remove.
                  type: string
              required:
                - TopicArn
                - Label
  /#Action=SetEndpointAttributes:
    get:
      x-aws-operation-name: SetEndpointAttributes
      operationId: GET SetEndpointAttributes
      description: 'Sets the attributes for an endpoint for a device on one of the
        supported push notification services, such as GCM and APNS. For more
        information, see <a
        href="https://docs.aws.amazon.com/sns/latest/dg/SNSMobilePush.html">Using
        Amazon SNS Mobile Push Notifications</a>. '
      responses:
        "200":
          description: Success
        "480":
          description: InvalidParameterException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidParameterException"
        "481":
          description: InternalErrorException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InternalErrorException"
        "482":
          description: AuthorizationErrorException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/AuthorizationErrorException"
        "483":
          description: NotFoundException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/NotFoundException"
      parameters:
        - name: EndpointArn
          in: query
          required: true
          description: EndpointArn used for SetEndpointAttributes action.
          schema:
            type: string
        - name: Attributes.0.key
          in: query
          schema:
            type: string
        - name: Attributes.0.value
          in: query
          schema:
            type: string
        - name: Attributes.1.key
          in: query
          schema:
            type: string
        - name: Attributes.1.value
          in: query
          schema:
            type: string
        - name: Attributes.2.key
          in: query
          schema:
            type: string
        - name: Attributes.2.value
          in: query
          schema:
            type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - SetEndpointAttributes
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2010-03-31
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: SetEndpointAttributes
      operationId: POST SetEndpointAttributes
      description: 'Sets the attributes for an endpoint for a device on one of the
        supported push notification services, such as GCM and APNS. For more
        information, see <a
        href="https://docs.aws.amazon.com/sns/latest/dg/SNSMobilePush.html">Using
        Amazon SNS Mobile Push Notifications</a>. '
      responses:
        "200":
          description: Success
        "480":
          description: InvalidParameterException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidParameterException"
        "481":
          description: InternalErrorException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InternalErrorException"
        "482":
          description: AuthorizationErrorException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/AuthorizationErrorException"
        "483":
          description: NotFoundException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/NotFoundException"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - SetEndpointAttributes
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2010-03-31
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                EndpointArn:
                  description: EndpointArn used for SetEndpointAttributes action.
                  type: string
                Attributes.0.key:
                  type: string
                Attributes.0.value:
                  type: string
                Attributes.1.key:
                  type: string
                Attributes.1.value:
                  type: string
                Attributes.2.key:
                  type: string
                Attributes.2.value:
                  type: string
              required:
                - EndpointArn
  /#Action=SetPlatformApplicationAttributes:
    get:
      x-aws-operation-name: SetPlatformApplicationAttributes
      operationId: GET SetPlatformApplicationAttributes
      description: 'Sets the attributes of the platform application object for the
        supported push notification services, such as APNS and GCM. For more
        information, see <a
        href="https://docs.aws.amazon.com/sns/latest/dg/SNSMobilePush.html">Using
        Amazon SNS Mobile Push Notifications</a>. For information on configuring
        attributes for message delivery status, see <a
        href="https://docs.aws.amazon.com/sns/latest/dg/sns-msg-status.html">Using
        Amazon SNS Application Attributes for Message Delivery Status</a>. '
      responses:
        "200":
          description: Success
        "480":
          description: InvalidParameterException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidParameterException"
        "481":
          description: InternalErrorException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InternalErrorException"
        "482":
          description: AuthorizationErrorException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/AuthorizationErrorException"
        "483":
          description: NotFoundException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/NotFoundException"
      parameters:
        - name: PlatformApplicationArn
          in: query
          required: true
          description: PlatformApplicationArn for SetPlatformApplicationAttributes action.
          schema:
            type: string
        - name: Attributes.0.key
          in: query
          schema:
            type: string
        - name: Attributes.0.value
          in: query
          schema:
            type: string
        - name: Attributes.1.key
          in: query
          schema:
            type: string
        - name: Attributes.1.value
          in: query
          schema:
            type: string
        - name: Attributes.2.key
          in: query
          schema:
            type: string
        - name: Attributes.2.value
          in: query
          schema:
            type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - SetPlatformApplicationAttributes
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2010-03-31
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: SetPlatformApplicationAttributes
      operationId: POST SetPlatformApplicationAttributes
      description: 'Sets the attributes of the platform application object for the
        supported push notification services, such as APNS and GCM. For more
        information, see <a
        href="https://docs.aws.amazon.com/sns/latest/dg/SNSMobilePush.html">Using
        Amazon SNS Mobile Push Notifications</a>. For information on configuring
        attributes for message delivery status, see <a
        href="https://docs.aws.amazon.com/sns/latest/dg/sns-msg-status.html">Using
        Amazon SNS Application Attributes for Message Delivery Status</a>. '
      responses:
        "200":
          description: Success
        "480":
          description: InvalidParameterException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidParameterException"
        "481":
          description: InternalErrorException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InternalErrorException"
        "482":
          description: AuthorizationErrorException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/AuthorizationErrorException"
        "483":
          description: NotFoundException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/NotFoundException"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - SetPlatformApplicationAttributes
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2010-03-31
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                PlatformApplicationArn:
                  description: PlatformApplicationArn for SetPlatformApplicationAttributes
                    action.
                  type: string
                Attributes.0.key:
                  type: string
                Attributes.0.value:
                  type: string
                Attributes.1.key:
                  type: string
                Attributes.1.value:
                  type: string
                Attributes.2.key:
                  type: string
                Attributes.2.value:
                  type: string
              required:
                - PlatformApplicationArn
  /#Action=SetSMSAttributes:
    get:
      x-aws-operation-name: SetSMSAttributes
      operationId: GET SetSMSAttributes
      description: <p>Use this request to set the default settings for sending SMS messages
        and receiving daily SMS usage reports.</p> <p>You can override some of
        these settings for a single message when you use the
        <code>Publish</code> action with the
        <code>MessageAttributes.entry.N</code> parameter. For more information,
        see <a
        href="https://docs.aws.amazon.com/sns/latest/dg/sms_publish-to-phone.html">Sending
        an SMS Message</a> in the <i>Amazon SNS Developer Guide</i>.</p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/SetSMSAttributesResponse"
        "480":
          description: InvalidParameterException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidParameterException"
        "481":
          description: ThrottledException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ThrottledException"
        "482":
          description: InternalErrorException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InternalErrorException"
        "483":
          description: AuthorizationErrorException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/AuthorizationErrorException"
      parameters:
        - name: attributes.0.key
          in: query
          schema:
            type: string
        - name: attributes.0.value
          in: query
          schema:
            type: string
        - name: attributes.1.key
          in: query
          schema:
            type: string
        - name: attributes.1.value
          in: query
          schema:
            type: string
        - name: attributes.2.key
          in: query
          schema:
            type: string
        - name: attributes.2.value
          in: query
          schema:
            type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - SetSMSAttributes
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2010-03-31
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: SetSMSAttributes
      operationId: POST SetSMSAttributes
      description: <p>Use this request to set the default settings for sending SMS messages
        and receiving daily SMS usage reports.</p> <p>You can override some of
        these settings for a single message when you use the
        <code>Publish</code> action with the
        <code>MessageAttributes.entry.N</code> parameter. For more information,
        see <a
        href="https://docs.aws.amazon.com/sns/latest/dg/sms_publish-to-phone.html">Sending
        an SMS Message</a> in the <i>Amazon SNS Developer Guide</i>.</p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/SetSMSAttributesResponse"
        "480":
          description: InvalidParameterException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidParameterException"
        "481":
          description: ThrottledException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ThrottledException"
        "482":
          description: InternalErrorException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InternalErrorException"
        "483":
          description: AuthorizationErrorException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/AuthorizationErrorException"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - SetSMSAttributes
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2010-03-31
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                attributes.0.key:
                  type: string
                attributes.0.value:
                  type: string
                attributes.1.key:
                  type: string
                attributes.1.value:
                  type: string
                attributes.2.key:
                  type: string
                attributes.2.value:
                  type: string
  /#Action=SetSubscriptionAttributes:
    get:
      x-aws-operation-name: SetSubscriptionAttributes
      operationId: GET SetSubscriptionAttributes
      description: Allows a subscription owner to set an attribute of the subscription to a
        new value.
      responses:
        "200":
          description: Success
        "480":
          description: InvalidParameterException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidParameterException"
        "481":
          description: FilterPolicyLimitExceededException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/FilterPolicyLimitExceededException"
        "482":
          description: InternalErrorException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InternalErrorException"
        "483":
          description: NotFoundException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "484":
          description: AuthorizationErrorException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/AuthorizationErrorException"
      parameters:
        - name: SubscriptionArn
          in: query
          required: true
          description: The ARN of the subscription to modify.
          schema:
            type: string
        - name: AttributeName
          in: query
          required: true
          description: <p>A map of attributes with their corresponding values.</p> <p>The
            following lists the names, descriptions, and values of the special
            request parameters that the <code>SetTopicAttributes</code> action
            uses:</p> <ul> <li> <p> <code>DeliveryPolicy</code> – The policy
            that defines how Amazon SNS retries failed deliveries to HTTP/S
            endpoints.</p> </li> <li> <p> <code>FilterPolicy</code> – The simple
            JSON object that lets your subscriber receive only a subset of
            messages, rather than receiving every message published to the
            topic.</p> </li> <li> <p> <code>RawMessageDelivery</code> – When set
            to <code>true</code>, enables raw message delivery to Amazon SQS or
            HTTP/S endpoints. This eliminates the need for the endpoints to
            process JSON formatting, which is otherwise created for Amazon SNS
            metadata.</p> </li> </ul>
          schema:
            type: string
        - name: AttributeValue
          in: query
          required: false
          description: The new value for the attribute in JSON format.
          schema:
            type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - SetSubscriptionAttributes
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2010-03-31
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: SetSubscriptionAttributes
      operationId: POST SetSubscriptionAttributes
      description: Allows a subscription owner to set an attribute of the subscription to a
        new value.
      responses:
        "200":
          description: Success
        "480":
          description: InvalidParameterException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidParameterException"
        "481":
          description: FilterPolicyLimitExceededException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/FilterPolicyLimitExceededException"
        "482":
          description: InternalErrorException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InternalErrorException"
        "483":
          description: NotFoundException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "484":
          description: AuthorizationErrorException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/AuthorizationErrorException"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - SetSubscriptionAttributes
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2010-03-31
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                SubscriptionArn:
                  description: The ARN of the subscription to modify.
                  type: string
                AttributeName:
                  description: <p>A map of attributes with their corresponding values.</p>
                    <p>The following lists the names, descriptions, and values
                    of the special request parameters that the
                    <code>SetTopicAttributes</code> action uses:</p> <ul> <li>
                    <p> <code>DeliveryPolicy</code> – The policy that defines
                    how Amazon SNS retries failed deliveries to HTTP/S
                    endpoints.</p> </li> <li> <p> <code>FilterPolicy</code> –
                    The simple JSON object that lets your subscriber receive
                    only a subset of messages, rather than receiving every
                    message published to the topic.</p> </li> <li> <p>
                    <code>RawMessageDelivery</code> – When set to
                    <code>true</code>, enables raw message delivery to Amazon
                    SQS or HTTP/S endpoints. This eliminates the need for the
                    endpoints to process JSON formatting, which is otherwise
                    created for Amazon SNS metadata.</p> </li> </ul>
                  type: string
                AttributeValue:
                  description: The new value for the attribute in JSON format.
                  type: string
              required:
                - SubscriptionArn
                - AttributeName
  /#Action=SetTopicAttributes:
    get:
      x-aws-operation-name: SetTopicAttributes
      operationId: GET SetTopicAttributes
      description: Allows a topic owner to set an attribute of the topic to a new value.
      responses:
        "200":
          description: Success
        "480":
          description: InvalidParameterException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidParameterException"
        "481":
          description: InternalErrorException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InternalErrorException"
        "482":
          description: NotFoundException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "483":
          description: AuthorizationErrorException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/AuthorizationErrorException"
        "484":
          description: InvalidSecurityException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidSecurityException"
      parameters:
        - name: TopicArn
          in: query
          required: true
          description: The ARN of the topic to modify.
          schema:
            type: string
        - name: AttributeName
          in: query
          required: true
          description: <p>A map of attributes with their corresponding values.</p> <p>The
            following lists the names, descriptions, and values of the special
            request parameters that the <code>SetTopicAttributes</code> action
            uses:</p> <ul> <li> <p> <code>DeliveryPolicy</code> – The policy
            that defines how Amazon SNS retries failed deliveries to HTTP/S
            endpoints.</p> </li> <li> <p> <code>DisplayName</code> – The display
            name to use for a topic with SMS subscriptions.</p> </li> <li> <p>
            <code>Policy</code> – The policy that defines who can access your
            topic. By default, only the topic owner can publish or subscribe to
            the topic.</p> </li> </ul> <p>The following attribute applies only
            to <a
            href="https://docs.aws.amazon.com/sns/latest/dg/sns-server-side-encryption.html">server-side-encryption</a>:</p>
            <ul> <li> <p> <code>KmsMasterKeyId</code> - The ID of an AWS-managed
            customer master key (CMK) for Amazon SNS or a custom CMK. For more
            information, see <a
            href="https://docs.aws.amazon.com/sns/latest/dg/sns-server-side-encryption.html#sse-key-terms">Key
            Terms</a>. For more examples, see <a
            href="https://docs.aws.amazon.com/kms/latest/APIReference/API_DescribeKey.html#API_DescribeKey_RequestParameters">KeyId</a>
            in the <i>AWS Key Management Service API Reference</i>. </p> </li>
            </ul>
          schema:
            type: string
        - name: AttributeValue
          in: query
          required: false
          description: The new value for the attribute.
          schema:
            type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - SetTopicAttributes
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2010-03-31
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: SetTopicAttributes
      operationId: POST SetTopicAttributes
      description: Allows a topic owner to set an attribute of the topic to a new value.
      responses:
        "200":
          description: Success
        "480":
          description: InvalidParameterException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidParameterException"
        "481":
          description: InternalErrorException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InternalErrorException"
        "482":
          description: NotFoundException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "483":
          description: AuthorizationErrorException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/AuthorizationErrorException"
        "484":
          description: InvalidSecurityException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidSecurityException"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - SetTopicAttributes
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2010-03-31
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                TopicArn:
                  description: The ARN of the topic to modify.
                  type: string
                AttributeName:
                  description: <p>A map of attributes with their corresponding values.</p>
                    <p>The following lists the names, descriptions, and values
                    of the special request parameters that the
                    <code>SetTopicAttributes</code> action uses:</p> <ul> <li>
                    <p> <code>DeliveryPolicy</code> – The policy that defines
                    how Amazon SNS retries failed deliveries to HTTP/S
                    endpoints.</p> </li> <li> <p> <code>DisplayName</code> – The
                    display name to use for a topic with SMS subscriptions.</p>
                    </li> <li> <p> <code>Policy</code> – The policy that defines
                    who can access your topic. By default, only the topic owner
                    can publish or subscribe to the topic.</p> </li> </ul>
                    <p>The following attribute applies only to <a
                    href="https://docs.aws.amazon.com/sns/latest/dg/sns-server-side-encryption.html">server-side-encryption</a>:</p>
                    <ul> <li> <p> <code>KmsMasterKeyId</code> - The ID of an
                    AWS-managed customer master key (CMK) for Amazon SNS or a
                    custom CMK. For more information, see <a
                    href="https://docs.aws.amazon.com/sns/latest/dg/sns-server-side-encryption.html#sse-key-terms">Key
                    Terms</a>. For more examples, see <a
                    href="https://docs.aws.amazon.com/kms/latest/APIReference/API_DescribeKey.html#API_DescribeKey_RequestParameters">KeyId</a>
                    in the <i>AWS Key Management Service API Reference</i>. </p>
                    </li> </ul>
                  type: string
                AttributeValue:
                  description: The new value for the attribute.
                  type: string
              required:
                - TopicArn
                - AttributeName
  /#Action=Subscribe:
    get:
      x-aws-operation-name: Subscribe
      operationId: GET Subscribe
      description: <p>Prepares to subscribe an endpoint by sending the endpoint a
        confirmation message. To actually create a subscription, the endpoint
        owner must call the <code>ConfirmSubscription</code> action with the
        token from the confirmation message. Confirmation tokens are valid for
        three days.</p> <p>This action is throttled at 100 transactions per
        second (TPS).</p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/SubscribeResponse"
        "480":
          description: SubscriptionLimitExceededException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/SubscriptionLimitExceededException"
        "481":
          description: FilterPolicyLimitExceededException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/FilterPolicyLimitExceededException"
        "482":
          description: InvalidParameterException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidParameterException"
        "483":
          description: InternalErrorException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InternalErrorException"
        "484":
          description: NotFoundException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "485":
          description: AuthorizationErrorException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/AuthorizationErrorException"
        "486":
          description: InvalidSecurityException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidSecurityException"
      parameters:
        - name: TopicArn
          in: query
          required: true
          description: The ARN of the topic you want to subscribe to.
          schema:
            type: string
        - name: Protocol
          in: query
          required: true
          description: <p>The protocol you want to use. Supported protocols include:</p>
            <ul> <li> <p> <code>http</code> – delivery of JSON-encoded message
            via HTTP POST</p> </li> <li> <p> <code>https</code> – delivery of
            JSON-encoded message via HTTPS POST</p> </li> <li> <p>
            <code>email</code> – delivery of message via SMTP</p> </li> <li> <p>
            <code>email-json</code> – delivery of JSON-encoded message via
            SMTP</p> </li> <li> <p> <code>sms</code> – delivery of message via
            SMS</p> </li> <li> <p> <code>sqs</code> – delivery of JSON-encoded
            message to an Amazon SQS queue</p> </li> <li> <p>
            <code>application</code> – delivery of JSON-encoded message to an
            EndpointArn for a mobile app and device.</p> </li> <li> <p>
            <code>lambda</code> – delivery of JSON-encoded message to an AWS
            Lambda function.</p> </li> </ul>
          schema:
            type: string
        - name: Endpoint
          in: query
          required: false
          description: <p>The endpoint that you want to receive notifications. Endpoints
            vary by protocol:</p> <ul> <li> <p>For the <code>http</code>
            protocol, the endpoint is an URL beginning with "https://"</p> </li>
            <li> <p>For the <code>https</code> protocol, the endpoint is a URL
            beginning with "https://"</p> </li> <li> <p>For the
            <code>email</code> protocol, the endpoint is an email address</p>
            </li> <li> <p>For the <code>email-json</code> protocol, the endpoint
            is an email address</p> </li> <li> <p>For the <code>sms</code>
            protocol, the endpoint is a phone number of an SMS-enabled
            device</p> </li> <li> <p>For the <code>sqs</code> protocol, the
            endpoint is the ARN of an Amazon SQS queue</p> </li> <li> <p>For the
            <code>application</code> protocol, the endpoint is the EndpointArn
            of a mobile app and device.</p> </li> <li> <p>For the
            <code>lambda</code> protocol, the endpoint is the ARN of an AWS
            Lambda function.</p> </li> </ul>
          schema:
            type: string
        - name: Attributes.0.key
          in: query
          schema:
            type: string
        - name: Attributes.0.value
          in: query
          schema:
            type: string
        - name: Attributes.1.key
          in: query
          schema:
            type: string
        - name: Attributes.1.value
          in: query
          schema:
            type: string
        - name: Attributes.2.key
          in: query
          schema:
            type: string
        - name: Attributes.2.value
          in: query
          schema:
            type: string
        - name: ReturnSubscriptionArn
          in: query
          required: false
          description: <p>Sets whether the response from the <code>Subscribe</code> request
            includes the subscription ARN, even if the subscription is not yet
            confirmed.</p> <p>If you set this parameter to <code>false</code>,
            the response includes the ARN for confirmed subscriptions, but it
            includes an ARN value of "pending subscription" for subscriptions
            that are not yet confirmed. A subscription becomes confirmed when
            the subscriber calls the <code>ConfirmSubscription</code> action
            with a confirmation token.</p> <p>If you set this parameter to
            <code>true</code>, the response includes the ARN in all cases, even
            if the subscription is not yet confirmed.</p> <p>The default value
            is <code>false</code>.</p>
          schema:
            type: boolean
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - Subscribe
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2010-03-31
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: Subscribe
      operationId: POST Subscribe
      description: <p>Prepares to subscribe an endpoint by sending the endpoint a
        confirmation message. To actually create a subscription, the endpoint
        owner must call the <code>ConfirmSubscription</code> action with the
        token from the confirmation message. Confirmation tokens are valid for
        three days.</p> <p>This action is throttled at 100 transactions per
        second (TPS).</p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/SubscribeResponse"
        "480":
          description: SubscriptionLimitExceededException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/SubscriptionLimitExceededException"
        "481":
          description: FilterPolicyLimitExceededException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/FilterPolicyLimitExceededException"
        "482":
          description: InvalidParameterException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidParameterException"
        "483":
          description: InternalErrorException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InternalErrorException"
        "484":
          description: NotFoundException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "485":
          description: AuthorizationErrorException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/AuthorizationErrorException"
        "486":
          description: InvalidSecurityException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidSecurityException"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - Subscribe
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2010-03-31
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                TopicArn:
                  description: The ARN of the topic you want to subscribe to.
                  type: string
                Protocol:
                  description: <p>The protocol you want to use. Supported protocols
                    include:</p> <ul> <li> <p> <code>http</code> – delivery of
                    JSON-encoded message via HTTP POST</p> </li> <li> <p>
                    <code>https</code> – delivery of JSON-encoded message via
                    HTTPS POST</p> </li> <li> <p> <code>email</code> – delivery
                    of message via SMTP</p> </li> <li> <p>
                    <code>email-json</code> – delivery of JSON-encoded message
                    via SMTP</p> </li> <li> <p> <code>sms</code> – delivery of
                    message via SMS</p> </li> <li> <p> <code>sqs</code> –
                    delivery of JSON-encoded message to an Amazon SQS queue</p>
                    </li> <li> <p> <code>application</code> – delivery of
                    JSON-encoded message to an EndpointArn for a mobile app and
                    device.</p> </li> <li> <p> <code>lambda</code> – delivery of
                    JSON-encoded message to an AWS Lambda function.</p> </li>
                    </ul>
                  type: string
                Endpoint:
                  description: <p>The endpoint that you want to receive notifications.
                    Endpoints vary by protocol:</p> <ul> <li> <p>For the
                    <code>http</code> protocol, the endpoint is an URL beginning
                    with "https://"</p> </li> <li> <p>For the <code>https</code>
                    protocol, the endpoint is a URL beginning with
                    "https://"</p> </li> <li> <p>For the <code>email</code>
                    protocol, the endpoint is an email address</p> </li> <li>
                    <p>For the <code>email-json</code> protocol, the endpoint is
                    an email address</p> </li> <li> <p>For the <code>sms</code>
                    protocol, the endpoint is a phone number of an SMS-enabled
                    device</p> </li> <li> <p>For the <code>sqs</code> protocol,
                    the endpoint is the ARN of an Amazon SQS queue</p> </li>
                    <li> <p>For the <code>application</code> protocol, the
                    endpoint is the EndpointArn of a mobile app and device.</p>
                    </li> <li> <p>For the <code>lambda</code> protocol, the
                    endpoint is the ARN of an AWS Lambda function.</p> </li>
                    </ul>
                  type: string
                Attributes.0.key:
                  type: string
                Attributes.0.value:
                  type: string
                Attributes.1.key:
                  type: string
                Attributes.1.value:
                  type: string
                Attributes.2.key:
                  type: string
                Attributes.2.value:
                  type: string
                ReturnSubscriptionArn:
                  description: <p>Sets whether the response from the <code>Subscribe</code>
                    request includes the subscription ARN, even if the
                    subscription is not yet confirmed.</p> <p>If you set this
                    parameter to <code>false</code>, the response includes the
                    ARN for confirmed subscriptions, but it includes an ARN
                    value of "pending subscription" for subscriptions that are
                    not yet confirmed. A subscription becomes confirmed when the
                    subscriber calls the <code>ConfirmSubscription</code> action
                    with a confirmation token.</p> <p>If you set this parameter
                    to <code>true</code>, the response includes the ARN in all
                    cases, even if the subscription is not yet confirmed.</p>
                    <p>The default value is <code>false</code>.</p>
                  type: boolean
              required:
                - TopicArn
                - Protocol
  /#Action=TagResource:
    get:
      x-aws-operation-name: TagResource
      operationId: GET TagResource
      description: <p>Add tags to the specified Amazon SNS topic. For an overview, see <a
        href="https://docs.aws.amazon.com/sns/latest/dg/sns-tags.html">Amazon
        SNS Tags</a> in the <i>Amazon SNS Developer Guide</i>.</p> <p>When you
        use topic tags, keep the following guidelines in mind:</p> <ul> <li>
        <p>Adding more than 50 tags to a topic isn't recommended.</p> </li> <li>
        <p>Tags don't have any semantic meaning. Amazon SNS interprets tags as
        character strings.</p> </li> <li> <p>Tags are case-sensitive.</p> </li>
        <li> <p>A new tag with a key identical to that of an existing tag
        overwrites the existing tag.</p> </li> <li> <p>Tagging actions are
        limited to 10 TPS per AWS account. If your application requires a higher
        throughput, file a <a
        href="https://console.aws.amazon.com/support/home#/case/create?issueType=technical">technical
        support request</a>.</p> </li> </ul> <p>For a full list of tag
        restrictions, see <a
        href="https://docs.aws.amazon.com/sns/latest/dg/sns-limits.html#limits-topics">Limits
        Related to Topics</a> in the <i>Amazon SNS Developer Guide</i>.</p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/TagResourceResponse"
        "480":
          description: ResourceNotFoundException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "481":
          description: TagLimitExceededException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/TagLimitExceededException"
        "482":
          description: StaleTagException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/StaleTagException"
        "483":
          description: TagPolicyException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/TagPolicyException"
        "484":
          description: InvalidParameterException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidParameterException"
        "485":
          description: AuthorizationErrorException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/AuthorizationErrorException"
        "486":
          description: ConcurrentAccessException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ConcurrentAccessException"
      parameters:
        - name: ResourceArn
          in: query
          required: true
          description: The ARN of the topic to which to add tags.
          schema:
            type: string
            minLength: 1
            maxLength: 1011
        - name: Tags
          in: query
          required: true
          description: The tags to be added to the specified topic. A tag consists of a
            required key and an optional value.
          schema:
            type: array
            items:
              type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - TagResource
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2010-03-31
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: TagResource
      operationId: POST TagResource
      description: <p>Add tags to the specified Amazon SNS topic. For an overview, see <a
        href="https://docs.aws.amazon.com/sns/latest/dg/sns-tags.html">Amazon
        SNS Tags</a> in the <i>Amazon SNS Developer Guide</i>.</p> <p>When you
        use topic tags, keep the following guidelines in mind:</p> <ul> <li>
        <p>Adding more than 50 tags to a topic isn't recommended.</p> </li> <li>
        <p>Tags don't have any semantic meaning. Amazon SNS interprets tags as
        character strings.</p> </li> <li> <p>Tags are case-sensitive.</p> </li>
        <li> <p>A new tag with a key identical to that of an existing tag
        overwrites the existing tag.</p> </li> <li> <p>Tagging actions are
        limited to 10 TPS per AWS account. If your application requires a higher
        throughput, file a <a
        href="https://console.aws.amazon.com/support/home#/case/create?issueType=technical">technical
        support request</a>.</p> </li> </ul> <p>For a full list of tag
        restrictions, see <a
        href="https://docs.aws.amazon.com/sns/latest/dg/sns-limits.html#limits-topics">Limits
        Related to Topics</a> in the <i>Amazon SNS Developer Guide</i>.</p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/TagResourceResponse"
        "480":
          description: ResourceNotFoundException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "481":
          description: TagLimitExceededException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/TagLimitExceededException"
        "482":
          description: StaleTagException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/StaleTagException"
        "483":
          description: TagPolicyException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/TagPolicyException"
        "484":
          description: InvalidParameterException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidParameterException"
        "485":
          description: AuthorizationErrorException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/AuthorizationErrorException"
        "486":
          description: ConcurrentAccessException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ConcurrentAccessException"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - TagResource
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2010-03-31
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                ResourceArn:
                  description: The ARN of the topic to which to add tags.
                  type: string
                  minLength: 1
                  maxLength: 1011
                Tags:
                  description: The tags to be added to the specified topic. A tag consists
                    of a required key and an optional value.
                  type: array
                  items:
                    type: string
              required:
                - ResourceArn
                - Tags
  /#Action=Unsubscribe:
    get:
      x-aws-operation-name: Unsubscribe
      operationId: GET Unsubscribe
      description: <p>Deletes a subscription. If the subscription requires authentication
        for deletion, only the owner of the subscription or the topic's owner
        can unsubscribe, and an AWS signature is required. If the
        <code>Unsubscribe</code> call does not require authentication and the
        requester is not the subscription owner, a final cancellation message is
        delivered to the endpoint, so that the endpoint owner can easily
        resubscribe to the topic if the <code>Unsubscribe</code> request was
        unintended.</p> <p>This action is throttled at 100 transactions per
        second (TPS).</p>
      responses:
        "200":
          description: Success
        "480":
          description: InvalidParameterException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidParameterException"
        "481":
          description: InternalErrorException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InternalErrorException"
        "482":
          description: AuthorizationErrorException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/AuthorizationErrorException"
        "483":
          description: NotFoundException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "484":
          description: InvalidSecurityException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidSecurityException"
      parameters:
        - name: SubscriptionArn
          in: query
          required: true
          description: The ARN of the subscription to be deleted.
          schema:
            type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - Unsubscribe
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2010-03-31
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: Unsubscribe
      operationId: POST Unsubscribe
      description: <p>Deletes a subscription. If the subscription requires authentication
        for deletion, only the owner of the subscription or the topic's owner
        can unsubscribe, and an AWS signature is required. If the
        <code>Unsubscribe</code> call does not require authentication and the
        requester is not the subscription owner, a final cancellation message is
        delivered to the endpoint, so that the endpoint owner can easily
        resubscribe to the topic if the <code>Unsubscribe</code> request was
        unintended.</p> <p>This action is throttled at 100 transactions per
        second (TPS).</p>
      responses:
        "200":
          description: Success
        "480":
          description: InvalidParameterException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidParameterException"
        "481":
          description: InternalErrorException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InternalErrorException"
        "482":
          description: AuthorizationErrorException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/AuthorizationErrorException"
        "483":
          description: NotFoundException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "484":
          description: InvalidSecurityException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidSecurityException"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - Unsubscribe
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2010-03-31
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                SubscriptionArn:
                  description: The ARN of the subscription to be deleted.
                  type: string
              required:
                - SubscriptionArn
  /#Action=UntagResource:
    get:
      x-aws-operation-name: UntagResource
      operationId: GET UntagResource
      description: Remove tags from the specified Amazon SNS topic. For an overview, see <a
        href="https://docs.aws.amazon.com/sns/latest/dg/sns-tags.html">Amazon
        SNS Tags</a> in the <i>Amazon SNS Developer Guide</i>.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/UntagResourceResponse"
        "480":
          description: ResourceNotFoundException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "481":
          description: TagLimitExceededException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/TagLimitExceededException"
        "482":
          description: StaleTagException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/StaleTagException"
        "483":
          description: TagPolicyException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/TagPolicyException"
        "484":
          description: InvalidParameterException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidParameterException"
        "485":
          description: AuthorizationErrorException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/AuthorizationErrorException"
        "486":
          description: ConcurrentAccessException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ConcurrentAccessException"
      parameters:
        - name: ResourceArn
          in: query
          required: true
          description: The ARN of the topic from which to remove tags.
          schema:
            type: string
            minLength: 1
            maxLength: 1011
        - name: TagKeys
          in: query
          required: true
          description: The list of tag keys to remove from the specified topic.
          schema:
            type: array
            items:
              type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - UntagResource
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2010-03-31
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: UntagResource
      operationId: POST UntagResource
      description: Remove tags from the specified Amazon SNS topic. For an overview, see <a
        href="https://docs.aws.amazon.com/sns/latest/dg/sns-tags.html">Amazon
        SNS Tags</a> in the <i>Amazon SNS Developer Guide</i>.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/UntagResourceResponse"
        "480":
          description: ResourceNotFoundException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "481":
          description: TagLimitExceededException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/TagLimitExceededException"
        "482":
          description: StaleTagException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/StaleTagException"
        "483":
          description: TagPolicyException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/TagPolicyException"
        "484":
          description: InvalidParameterException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidParameterException"
        "485":
          description: AuthorizationErrorException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/AuthorizationErrorException"
        "486":
          description: ConcurrentAccessException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ConcurrentAccessException"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - UntagResource
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2010-03-31
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                ResourceArn:
                  description: The ARN of the topic from which to remove tags.
                  type: string
                  minLength: 1
                  maxLength: 1011
                TagKeys:
                  description: The list of tag keys to remove from the specified topic.
                  type: array
                  items:
                    type: string
              required:
                - ResourceArn
                - TagKeys
servers:
  - url: http://sns.{region}.amazonaws.com
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-south-1
          - sa-east-1
        default: us-east-1
    description: The Amazon SNS multi-region endpoint
  - url: https://sns.{region}.amazonaws.com
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-south-1
          - sa-east-1
        default: us-east-1
    description: The Amazon SNS multi-region endpoint
  - url: http://sns.{region}.amazonaws.com.cn
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The Amazon SNS endpoint for China (Beijing) and China (Ningxia)
  - url: https://sns.{region}.amazonaws.com.cn
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The Amazon SNS endpoint for China (Beijing) and China (Ningxia)
components:
  parameters:
    X-Amz-Content-Sha256:
      name: X-Amz-Content-Sha256
      in: header
      required: false
      schema:
        type: string
    X-Amz-Date:
      name: X-Amz-Date
      in: header
      required: false
      schema:
        type: string
    X-Amz-Algorithm:
      name: X-Amz-Algorithm
      in: header
      required: false
      schema:
        type: string
    X-Amz-Credential:
      name: X-Amz-Credential
      in: header
      required: false
      schema:
        type: string
    X-Amz-Security-Token:
      name: X-Amz-Security-Token
      in: header
      required: false
      schema:
        type: string
    X-Amz-Signature:
      name: X-Amz-Signature
      in: header
      required: false
      schema:
        type: string
    X-Amz-SignedHeaders:
      name: X-Amz-SignedHeaders
      in: header
      required: false
      schema:
        type: string
  securitySchemes:
    hmac:
      type: apiKey
      name: Authorization
      in: header
      description: Amazon Signature authorization v4
      x-amazon-apigateway-authtype: awsSigv4
  schemas:
    delegate:
      type: string
    action:
      type: string
    InvalidParameterException: {}
    InternalErrorException: {}
    AuthorizationErrorException: {}
    NotFoundException: {}
    CheckIfPhoneNumberIsOptedOutResponse:
      type: object
      properties:
        isOptedOut:
          $ref: "#/components/schemas/boolean"
      description: The response from the <code>CheckIfPhoneNumberIsOptedOut</code> action.
    ThrottledException: {}
    ConfirmSubscriptionResponse:
      type: object
      properties:
        SubscriptionArn:
          $ref: "#/components/schemas/subscriptionARN"
      description: Response for ConfirmSubscriptions action.
    SubscriptionLimitExceededException: {}
    FilterPolicyLimitExceededException: {}
    CreatePlatformApplicationResponse:
      type: object
      properties:
        PlatformApplicationArn:
          $ref: "#/components/schemas/String"
      description: Response from CreatePlatformApplication action.
    String:
      type: string
    CreateEndpointResponse:
      type: object
      properties:
        EndpointArn:
          $ref: "#/components/schemas/String"
      description: Response from CreateEndpoint action.
    CreateTopicResponse:
      type: object
      properties:
        TopicArn:
          $ref: "#/components/schemas/topicARN"
      description: Response from CreateTopic action.
    attributeValue:
      type: string
    Tag:
      type: object
      required:
        - Key
        - Value
      properties:
        Key:
          $ref: "#/components/schemas/TagKey"
        Value:
          $ref: "#/components/schemas/TagValue"
      description: The list of tags to be added to the specified topic.
    TopicLimitExceededException: {}
    InvalidSecurityException: {}
    TagLimitExceededException: {}
    StaleTagException: {}
    TagPolicyException: {}
    ConcurrentAccessException: {}
    GetEndpointAttributesResponse:
      type: object
      properties:
        Attributes:
          $ref: "#/components/schemas/MapStringToString"
      description: Response from GetEndpointAttributes of the EndpointArn.
    GetPlatformApplicationAttributesResponse:
      type: object
      properties:
        Attributes:
          $ref: "#/components/schemas/MapStringToString"
      description: Response for GetPlatformApplicationAttributes action.
    GetSMSAttributesResponse:
      type: object
      properties:
        attributes:
          $ref: "#/components/schemas/MapStringToString"
      description: The response from the <code>GetSMSAttributes</code> request.
    GetSubscriptionAttributesResponse:
      type: object
      properties:
        Attributes:
          $ref: "#/components/schemas/SubscriptionAttributesMap"
      description: Response for GetSubscriptionAttributes action.
    GetTopicAttributesResponse:
      type: object
      properties:
        Attributes:
          $ref: "#/components/schemas/TopicAttributesMap"
      description: Response for GetTopicAttributes action.
    ListEndpointsByPlatformApplicationResponse:
      type: object
      properties:
        Endpoints:
          $ref: "#/components/schemas/ListOfEndpoints"
        NextToken:
          $ref: "#/components/schemas/String"
      description: Response for ListEndpointsByPlatformApplication action.
    ListPhoneNumbersOptedOutResponse:
      type: object
      properties:
        phoneNumbers:
          $ref: "#/components/schemas/PhoneNumberList"
        nextToken:
          $ref: "#/components/schemas/string"
      description: The response from the <code>ListPhoneNumbersOptedOut</code> action.
    ListPlatformApplicationsResponse:
      type: object
      properties:
        PlatformApplications:
          $ref: "#/components/schemas/ListOfPlatformApplications"
        NextToken:
          $ref: "#/components/schemas/String"
      description: Response for ListPlatformApplications action.
    ListSubscriptionsResponse:
      type: object
      properties:
        Subscriptions:
          $ref: "#/components/schemas/SubscriptionsList"
        NextToken:
          $ref: "#/components/schemas/nextToken"
      description: Response for ListSubscriptions action
    ListSubscriptionsByTopicResponse:
      type: object
      properties:
        Subscriptions:
          $ref: "#/components/schemas/SubscriptionsList"
        NextToken:
          $ref: "#/components/schemas/nextToken"
      description: Response for ListSubscriptionsByTopic action.
    ListTagsForResourceResponse:
      type: object
      properties:
        Tags:
          $ref: "#/components/schemas/TagList"
    ResourceNotFoundException: {}
    ListTopicsResponse:
      type: object
      properties:
        Topics:
          $ref: "#/components/schemas/TopicsList"
        NextToken:
          $ref: "#/components/schemas/nextToken"
      description: Response for ListTopics action.
    OptInPhoneNumberResponse:
      type: object
      properties: {}
      description: The response for the OptInPhoneNumber action.
    PublishResponse:
      type: object
      properties:
        MessageId:
          $ref: "#/components/schemas/messageId"
      description: Response for Publish action.
    MessageAttributeValue:
      type: object
      required:
        - DataType
      properties:
        DataType:
          $ref: "#/components/schemas/String"
        StringValue:
          $ref: "#/components/schemas/String"
        BinaryValue:
          $ref: "#/components/schemas/Binary"
      description: <p>The user-specified message attribute value. For string data types,
        the value attribute has the same restrictions on the content as the
        message body. For more information, see <a
        href="https://docs.aws.amazon.com/sns/latest/api/API_Publish.html">Publish</a>.</p>
        <p>Name, type, and value must not be empty or null. In addition, the
        message body should not be empty or null. All parts of the message
        attribute, including name, type, and value, are included in the message
        size restriction, which is currently 256 KB (262,144 bytes). For more
        information, see <a
        href="https://docs.aws.amazon.com/sns/latest/dg/SNSMessageAttributes.html">Using
        Amazon SNS Message Attributes</a>.</p>
    InvalidParameterValueException: {}
    EndpointDisabledException: {}
    PlatformApplicationDisabledException: {}
    KMSDisabledException: {}
    KMSInvalidStateException: {}
    KMSNotFoundException: {}
    KMSOptInRequired: {}
    KMSThrottlingException: {}
    KMSAccessDeniedException: {}
    SetSMSAttributesResponse:
      type: object
      properties: {}
      description: The response for the SetSMSAttributes action.
    SubscribeResponse:
      type: object
      properties:
        SubscriptionArn:
          $ref: "#/components/schemas/subscriptionARN"
      description: Response for Subscribe action.
    TagResourceResponse:
      type: object
      properties: {}
    UntagResourceResponse:
      type: object
      properties: {}
    TagKey:
      type: string
      minLength: 1
      maxLength: 128
    ActionsList:
      type: array
      items:
        $ref: "#/components/schemas/action"
    topicARN:
      type: string
    label:
      type: string
    DelegatesList:
      type: array
      items:
        $ref: "#/components/schemas/delegate"
    AddPermissionInput:
      type: object
      required:
        - TopicArn
        - Label
        - AWSAccountId
        - ActionName
      properties:
        TopicArn:
          $ref: "#/components/schemas/topicARN"
        Label:
          $ref: "#/components/schemas/label"
        AWSAccountId:
          $ref: "#/components/schemas/DelegatesList"
        ActionName:
          $ref: "#/components/schemas/ActionsList"
    AmazonResourceName:
      type: string
      minLength: 1
      maxLength: 1011
    Binary:
      type: string
    PhoneNumber:
      type: string
    CheckIfPhoneNumberIsOptedOutInput:
      type: object
      required:
        - phoneNumber
      properties:
        phoneNumber:
          $ref: "#/components/schemas/PhoneNumber"
      description: The input for the <code>CheckIfPhoneNumberIsOptedOut</code> action.
    boolean:
      type: boolean
    token:
      type: string
    authenticateOnUnsubscribe:
      type: string
    ConfirmSubscriptionInput:
      type: object
      required:
        - TopicArn
        - Token
      properties:
        TopicArn:
          $ref: "#/components/schemas/topicARN"
        Token:
          $ref: "#/components/schemas/token"
        AuthenticateOnUnsubscribe:
          $ref: "#/components/schemas/authenticateOnUnsubscribe"
      description: Input for ConfirmSubscription action.
    subscriptionARN:
      type: string
    MapStringToString:
      type: object
      additionalProperties:
        $ref: "#/components/schemas/String"
    CreatePlatformApplicationInput:
      type: object
      required:
        - Name
        - Platform
        - Attributes
      properties:
        Name:
          $ref: "#/components/schemas/String"
        Platform:
          $ref: "#/components/schemas/String"
        Attributes:
          $ref: "#/components/schemas/MapStringToString"
      description: Input for CreatePlatformApplication action.
    CreatePlatformEndpointInput:
      type: object
      required:
        - PlatformApplicationArn
        - Token
      properties:
        PlatformApplicationArn:
          $ref: "#/components/schemas/String"
        Token:
          $ref: "#/components/schemas/String"
        CustomUserData:
          $ref: "#/components/schemas/String"
        Attributes:
          $ref: "#/components/schemas/MapStringToString"
      description: Input for CreatePlatformEndpoint action.
    topicName:
      type: string
    TopicAttributesMap:
      type: object
      additionalProperties:
        $ref: "#/components/schemas/attributeValue"
    TagList:
      type: array
      items:
        $ref: "#/components/schemas/Tag"
    CreateTopicInput:
      type: object
      required:
        - Name
      properties:
        Name:
          $ref: "#/components/schemas/topicName"
        Attributes:
          $ref: "#/components/schemas/TopicAttributesMap"
        Tags:
          $ref: "#/components/schemas/TagList"
      description: Input for CreateTopic action.
    DeleteEndpointInput:
      type: object
      required:
        - EndpointArn
      properties:
        EndpointArn:
          $ref: "#/components/schemas/String"
      description: Input for DeleteEndpoint action.
    DeletePlatformApplicationInput:
      type: object
      required:
        - PlatformApplicationArn
      properties:
        PlatformApplicationArn:
          $ref: "#/components/schemas/String"
      description: Input for DeletePlatformApplication action.
    DeleteTopicInput:
      type: object
      required:
        - TopicArn
      properties:
        TopicArn:
          $ref: "#/components/schemas/topicARN"
    Endpoint:
      type: object
      properties:
        EndpointArn:
          $ref: "#/components/schemas/String"
        Attributes:
          $ref: "#/components/schemas/MapStringToString"
      description: Endpoint for mobile app and device.
    GetEndpointAttributesInput:
      type: object
      required:
        - EndpointArn
      properties:
        EndpointArn:
          $ref: "#/components/schemas/String"
      description: Input for GetEndpointAttributes action.
    GetPlatformApplicationAttributesInput:
      type: object
      required:
        - PlatformApplicationArn
      properties:
        PlatformApplicationArn:
          $ref: "#/components/schemas/String"
      description: Input for GetPlatformApplicationAttributes action.
    ListString:
      type: array
      items:
        $ref: "#/components/schemas/String"
    GetSMSAttributesInput:
      type: object
      properties:
        attributes:
          $ref: "#/components/schemas/ListString"
      description: The input for the <code>GetSMSAttributes</code> request.
    GetSubscriptionAttributesInput:
      type: object
      required:
        - SubscriptionArn
      properties:
        SubscriptionArn:
          $ref: "#/components/schemas/subscriptionARN"
      description: Input for GetSubscriptionAttributes.
    SubscriptionAttributesMap:
      type: object
      additionalProperties:
        $ref: "#/components/schemas/attributeValue"
    GetTopicAttributesInput:
      type: object
      required:
        - TopicArn
      properties:
        TopicArn:
          $ref: "#/components/schemas/topicARN"
      description: Input for GetTopicAttributes action.
    ListEndpointsByPlatformApplicationInput:
      type: object
      required:
        - PlatformApplicationArn
      properties:
        PlatformApplicationArn:
          $ref: "#/components/schemas/String"
        NextToken:
          $ref: "#/components/schemas/String"
      description: Input for ListEndpointsByPlatformApplication action.
    ListOfEndpoints:
      type: array
      items:
        $ref: "#/components/schemas/Endpoint"
    PlatformApplication:
      type: object
      properties:
        PlatformApplicationArn:
          $ref: "#/components/schemas/String"
        Attributes:
          $ref: "#/components/schemas/MapStringToString"
      description: Platform application object.
    ListOfPlatformApplications:
      type: array
      items:
        $ref: "#/components/schemas/PlatformApplication"
    string:
      type: string
    ListPhoneNumbersOptedOutInput:
      type: object
      properties:
        nextToken:
          $ref: "#/components/schemas/string"
      description: The input for the <code>ListPhoneNumbersOptedOut</code> action.
    PhoneNumberList:
      type: array
      items:
        $ref: "#/components/schemas/PhoneNumber"
    ListPlatformApplicationsInput:
      type: object
      properties:
        NextToken:
          $ref: "#/components/schemas/String"
      description: Input for ListPlatformApplications action.
    nextToken:
      type: string
    ListSubscriptionsByTopicInput:
      type: object
      required:
        - TopicArn
      properties:
        TopicArn:
          $ref: "#/components/schemas/topicARN"
        NextToken:
          $ref: "#/components/schemas/nextToken"
      description: Input for ListSubscriptionsByTopic action.
    SubscriptionsList:
      type: array
      items:
        $ref: "#/components/schemas/Subscription"
    ListSubscriptionsInput:
      type: object
      properties:
        NextToken:
          $ref: "#/components/schemas/nextToken"
      description: Input for ListSubscriptions action.
    ListTagsForResourceRequest:
      type: object
      required:
        - ResourceArn
      properties:
        ResourceArn:
          $ref: "#/components/schemas/AmazonResourceName"
    ListTopicsInput:
      type: object
      properties:
        NextToken:
          $ref: "#/components/schemas/nextToken"
    TopicsList:
      type: array
      items:
        $ref: "#/components/schemas/Topic"
    MessageAttributeMap:
      type: object
      additionalProperties:
        $ref: "#/components/schemas/MessageAttributeValue"
    OptInPhoneNumberInput:
      type: object
      required:
        - phoneNumber
      properties:
        phoneNumber:
          $ref: "#/components/schemas/PhoneNumber"
      description: Input for the OptInPhoneNumber action.
    message:
      type: string
    subject:
      type: string
    messageStructure:
      type: string
    PublishInput:
      type: object
      required:
        - Message
      properties:
        TopicArn:
          $ref: "#/components/schemas/topicARN"
        TargetArn:
          $ref: "#/components/schemas/String"
        PhoneNumber:
          $ref: "#/components/schemas/String"
        Message:
          $ref: "#/components/schemas/message"
        Subject:
          $ref: "#/components/schemas/subject"
        MessageStructure:
          $ref: "#/components/schemas/messageStructure"
        MessageAttributes:
          $ref: "#/components/schemas/MessageAttributeMap"
      description: Input for Publish action.
    messageId:
      type: string
    RemovePermissionInput:
      type: object
      required:
        - TopicArn
        - Label
      properties:
        TopicArn:
          $ref: "#/components/schemas/topicARN"
        Label:
          $ref: "#/components/schemas/label"
      description: Input for RemovePermission action.
    SetEndpointAttributesInput:
      type: object
      required:
        - EndpointArn
        - Attributes
      properties:
        EndpointArn:
          $ref: "#/components/schemas/String"
        Attributes:
          $ref: "#/components/schemas/MapStringToString"
      description: Input for SetEndpointAttributes action.
    SetPlatformApplicationAttributesInput:
      type: object
      required:
        - PlatformApplicationArn
        - Attributes
      properties:
        PlatformApplicationArn:
          $ref: "#/components/schemas/String"
        Attributes:
          $ref: "#/components/schemas/MapStringToString"
      description: Input for SetPlatformApplicationAttributes action.
    SetSMSAttributesInput:
      type: object
      required:
        - attributes
      properties:
        attributes:
          $ref: "#/components/schemas/MapStringToString"
      description: The input for the SetSMSAttributes action.
    attributeName:
      type: string
    SetSubscriptionAttributesInput:
      type: object
      required:
        - SubscriptionArn
        - AttributeName
      properties:
        SubscriptionArn:
          $ref: "#/components/schemas/subscriptionARN"
        AttributeName:
          $ref: "#/components/schemas/attributeName"
        AttributeValue:
          $ref: "#/components/schemas/attributeValue"
      description: Input for SetSubscriptionAttributes action.
    SetTopicAttributesInput:
      type: object
      required:
        - TopicArn
        - AttributeName
      properties:
        TopicArn:
          $ref: "#/components/schemas/topicARN"
        AttributeName:
          $ref: "#/components/schemas/attributeName"
        AttributeValue:
          $ref: "#/components/schemas/attributeValue"
      description: Input for SetTopicAttributes action.
    protocol:
      type: string
    endpoint:
      type: string
    SubscribeInput:
      type: object
      required:
        - TopicArn
        - Protocol
      properties:
        TopicArn:
          $ref: "#/components/schemas/topicARN"
        Protocol:
          $ref: "#/components/schemas/protocol"
        Endpoint:
          $ref: "#/components/schemas/endpoint"
        Attributes:
          $ref: "#/components/schemas/SubscriptionAttributesMap"
        ReturnSubscriptionArn:
          $ref: "#/components/schemas/boolean"
      description: Input for Subscribe action.
    account:
      type: string
    Subscription:
      type: object
      properties:
        SubscriptionArn:
          $ref: "#/components/schemas/subscriptionARN"
        Owner:
          $ref: "#/components/schemas/account"
        Protocol:
          $ref: "#/components/schemas/protocol"
        Endpoint:
          $ref: "#/components/schemas/endpoint"
        TopicArn:
          $ref: "#/components/schemas/topicARN"
      description: A wrapper type for the attributes of an Amazon SNS subscription.
    TagValue:
      type: string
      minLength: 0
      maxLength: 256
    TagKeyList:
      type: array
      items:
        $ref: "#/components/schemas/TagKey"
    TagResourceRequest:
      type: object
      required:
        - ResourceArn
        - Tags
      properties:
        ResourceArn:
          $ref: "#/components/schemas/AmazonResourceName"
        Tags:
          $ref: "#/components/schemas/TagList"
    Topic:
      type: object
      properties:
        TopicArn:
          $ref: "#/components/schemas/topicARN"
      description: A wrapper type for the topic's Amazon Resource Name (ARN). To retrieve a
        topic's attributes, use <code>GetTopicAttributes</code>.
    UnsubscribeInput:
      type: object
      required:
        - SubscriptionArn
      properties:
        SubscriptionArn:
          $ref: "#/components/schemas/subscriptionARN"
      description: Input for Unsubscribe action.
    UntagResourceRequest:
      type: object
      required:
        - ResourceArn
        - TagKeys
      properties:
        ResourceArn:
          $ref: "#/components/schemas/AmazonResourceName"
        TagKeys:
          $ref: "#/components/schemas/TagKeyList"
