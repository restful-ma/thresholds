openapi: 3.0.0
info:
  description: Creates an Azure Data Lake Store account management client.
  title: DataLakeStoreAccountManagementClient
  version: 2016-11-01
  x-apisguru-categories:
    - cloud
  x-logo:
    url: https://assets.onestore.ms/cdnfiles/onestorerolling-1606-01000/shell/v3/images/logo/microsoft.png
  x-origin:
    - format: swagger
      url: https://raw.githubusercontent.com/Azure/azure-rest-api-specs/master/specification/datalake-store/resource-manager/Microsoft.DataLakeStore/stable/2016-11-01/account.json
      version: "2.0"
  x-preferred: true
  x-providerName: azure.com
  x-serviceName: datalake-store-account
  x-tags:
    - Azure
    - Microsoft
security:
  - azure_auth:
      - user_impersonation
paths:
  /providers/Microsoft.DataLakeStore/operations:
    get:
      description: Lists all of the available Data Lake Store REST API operations.
      operationId: Operations_List
      parameters:
        - $ref: "#/components/parameters/ApiVersionParameter"
      responses:
        "200":
          description: Successfully listed the available operations for Data Lake Store.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationListResult"
              examples:
                Lists all of the available Data Lake Store REST API operations:
                  $ref: "#/components/examples/Lists_all_of_the_available_Data_Lake\
                    _Store_REST_API_operations"
      tags:
        - Operations
  "/subscriptions/{subscriptionId}/providers/Microsoft.DataLakeStore/accounts":
    get:
      description: Lists the Data Lake Store accounts within the subscription. The response
        includes a link to the next page of results, if any.
      operationId: Accounts_List
      parameters:
        - $ref: "#/components/parameters/SubscriptionIdParameter"
        - description: OData filter. Optional.
          in: query
          name: $filter
          required: false
          schema:
            type: string
          examples:
            Lists the Data Lake Store accounts within the subscription:
              value: test_filter
        - description: The number of items to return. Optional.
          in: query
          name: $top
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
          examples:
            Lists the Data Lake Store accounts within the subscription:
              value: 1
        - description: The number of items to skip over before returning elements. Optional.
          in: query
          name: $skip
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
          examples:
            Lists the Data Lake Store accounts within the subscription:
              value: 1
        - description: OData Select statement. Limits the properties on each entry to just
            those requested, e.g. Categories?$select=CategoryName,Description.
            Optional.
          in: query
          name: $select
          required: false
          schema:
            type: string
          examples:
            Lists the Data Lake Store accounts within the subscription:
              value: test_select
        - description: OrderBy clause. One or more comma-separated expressions with an
            optional "asc" (the default) or "desc" depending on the order you'd
            like the values sorted, e.g. Categories?$orderby=CategoryName desc.
            Optional.
          in: query
          name: $orderby
          required: false
          schema:
            type: string
          examples:
            Lists the Data Lake Store accounts within the subscription:
              value: test_orderby
        - description: The Boolean value of true or false to request a count of the
            matching resources included with the resources in the response, e.g.
            Categories?$count=true. Optional.
          in: query
          name: $count
          required: false
          schema:
            type: boolean
          examples:
            Lists the Data Lake Store accounts within the subscription:
              value: false
        - $ref: "#/components/parameters/ApiVersionParameter"
      responses:
        "200":
          description: Successfully retrieved the list of accounts.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DataLakeStoreAccountListResult"
              examples:
                Lists the Data Lake Store accounts within the subscription:
                  $ref: "#/components/examples/Lists_the_Data_Lake_Store_accounts_w\
                    ithin_the_subscription"
      tags:
        - Accounts
      x-ms-odata: "#/components/schemas/DataLakeStoreAccountBasic"
      x-ms-pageable:
        nextLinkName: nextLink
  "/subscriptions/{subscriptionId}/providers/Microsoft.DataLakeStore/locations/{location}/capability":
    get:
      description: Gets subscription-level properties and limits for Data Lake Store
        specified by resource location.
      operationId: Locations_GetCapability
      parameters:
        - $ref: "#/components/parameters/SubscriptionIdParameter"
        - description: The resource location without whitespace.
          in: path
          name: location
          required: true
          schema:
            type: string
          examples:
            Gets subscription-level properties and limits for Data Lake Store specified by resource location:
              value: EastUS2
        - $ref: "#/components/parameters/ApiVersionParameter"
      responses:
        "200":
          description: Successfully retrieved the subscription-level properties and limits
            for Data Lake Store specified by resource location.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CapabilityInformation"
              examples:
                Gets subscription-level properties and limits for Data Lake Store specified by resource location:
                  $ref: "#/components/examples/Gets_subscription-level_properties_a\
                    nd_limits_for_Data_Lake_Store_specified_by_resource_locatio\
                    n"
        "404":
          description: Subscription not found.
      tags:
        - Locations
  "/subscriptions/{subscriptionId}/providers/Microsoft.DataLakeStore/locations/{location}/checkNameAvailability":
    post:
      description: Checks whether the specified account name is available or taken.
      operationId: Accounts_CheckNameAvailability
      parameters:
        - $ref: "#/components/parameters/SubscriptionIdParameter"
        - description: The resource location without whitespace.
          in: path
          name: location
          required: true
          schema:
            type: string
          examples:
            Checks whether the specified account name is available or taken:
              value: EastUS2
        - $ref: "#/components/parameters/ApiVersionParameter"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CheckNameAvailabilityParameters"
        description: Parameters supplied to check the Data Lake Store account name
          availability.
        required: true
      responses:
        "200":
          description: Successfully retrieved the Data Lake Store account name availability
            information.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NameAvailabilityInformation"
              examples:
                Checks whether the specified account name is available or taken:
                  $ref: "#/components/examples/Checks_whether_the_specified_account\
                    _name_is_available_or_taken"
      tags:
        - Accounts
  "/subscriptions/{subscriptionId}/providers/Microsoft.DataLakeStore/locations/{location}/usages":
    get:
      description: Gets the current usage count and the limit for the resources of the
        location under the subscription.
      operationId: Locations_GetUsage
      parameters:
        - $ref: "#/components/parameters/ApiVersionParameter"
        - $ref: "#/components/parameters/SubscriptionIdParameter"
        - description: The resource location without whitespace.
          in: path
          name: location
          required: true
          schema:
            type: string
          examples:
            UsageList:
              value: WestUS
      responses:
        "200":
          description: OK -- current usage count and limit retrieved and returned
            successfully.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UsageListResult"
              examples:
                UsageList:
                  $ref: "#/components/examples/UsageList"
      tags:
        - LocationUsage
      x-ms-pageable: {}
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataLakeStore/accounts":
    get:
      description: Lists the Data Lake Store accounts within a specific resource group. The
        response includes a link to the next page of results, if any.
      operationId: Accounts_ListByResourceGroup
      parameters:
        - $ref: "#/components/parameters/SubscriptionIdParameter"
        - $ref: "#/components/parameters/ResourceGroupNameParameter"
        - description: OData filter. Optional.
          in: query
          name: $filter
          required: false
          schema:
            type: string
          examples:
            Lists the Data Lake Store accounts within a specific resource group:
              value: test_filter
        - description: The number of items to return. Optional.
          in: query
          name: $top
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
          examples:
            Lists the Data Lake Store accounts within a specific resource group:
              value: 1
        - description: The number of items to skip over before returning elements. Optional.
          in: query
          name: $skip
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
          examples:
            Lists the Data Lake Store accounts within a specific resource group:
              value: 1
        - description: OData Select statement. Limits the properties on each entry to just
            those requested, e.g. Categories?$select=CategoryName,Description.
            Optional.
          in: query
          name: $select
          required: false
          schema:
            type: string
          examples:
            Lists the Data Lake Store accounts within a specific resource group:
              value: test_select
        - description: OrderBy clause. One or more comma-separated expressions with an
            optional "asc" (the default) or "desc" depending on the order you'd
            like the values sorted, e.g. Categories?$orderby=CategoryName desc.
            Optional.
          in: query
          name: $orderby
          required: false
          schema:
            type: string
          examples:
            Lists the Data Lake Store accounts within a specific resource group:
              value: test_orderby
        - description: A Boolean value of true or false to request a count of the matching
            resources included with the resources in the response, e.g.
            Categories?$count=true. Optional.
          in: query
          name: $count
          required: false
          schema:
            type: boolean
          examples:
            Lists the Data Lake Store accounts within a specific resource group:
              value: false
        - $ref: "#/components/parameters/ApiVersionParameter"
      responses:
        "200":
          description: Successfully retrieved the list of accounts in the specified
            resource group.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DataLakeStoreAccountListResult"
              examples:
                Lists the Data Lake Store accounts within a specific resource group:
                  $ref: "#/components/examples/Lists_the_Data_Lake_Store_accounts_w\
                    ithin_a_specific_resource_group"
      tags:
        - Accounts
      x-ms-odata: "#/components/schemas/DataLakeStoreAccountBasic"
      x-ms-pageable:
        nextLinkName: nextLink
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataLakeStore/accounts/{accountName}":
    delete:
      description: Deletes the specified Data Lake Store account.
      operationId: Accounts_Delete
      parameters:
        - $ref: "#/components/parameters/SubscriptionIdParameter"
        - $ref: "#/components/parameters/ResourceGroupNameParameter"
        - $ref: "#/components/parameters/AccountNameParameter"
        - $ref: "#/components/parameters/ApiVersionParameter"
      responses:
        "200":
          description: Successfully deleted the specified account.
        "202":
          description: Successfully initiated the deletion of the specified account.
        "204":
          description: The specified account was not found.
      tags:
        - Accounts
      x-ms-long-running-operation: true
    get:
      description: Gets the specified Data Lake Store account.
      operationId: Accounts_Get
      parameters:
        - $ref: "#/components/parameters/SubscriptionIdParameter"
        - $ref: "#/components/parameters/ResourceGroupNameParameter"
        - $ref: "#/components/parameters/AccountNameParameter"
        - $ref: "#/components/parameters/ApiVersionParameter"
      responses:
        "200":
          description: Successfully retrieved details of the specified account.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DataLakeStoreAccount"
              examples:
                Gets the specified Data Lake Store account:
                  $ref: "#/components/examples/Gets_the_specified_Data_Lake_Store_a\
                    ccount"
      tags:
        - Accounts
    patch:
      description: Updates the specified Data Lake Store account information.
      operationId: Accounts_Update
      parameters:
        - $ref: "#/components/parameters/SubscriptionIdParameter"
        - $ref: "#/components/parameters/ResourceGroupNameParameter"
        - $ref: "#/components/parameters/AccountNameParameter"
        - $ref: "#/components/parameters/ApiVersionParameter"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateDataLakeStoreAccountParameters"
        description: Parameters supplied to update the Data Lake Store account.
        required: true
      responses:
        "200":
          description: Successfully updated the account details.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DataLakeStoreAccount"
              examples:
                Updates the specified Data Lake Store account information:
                  $ref: "#/components/examples/Updates_the_specified_Data_Lake_Stor\
                    e_account_information"
        "201":
          description: Successfully initiated the update of the account details.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DataLakeStoreAccount"
              examples:
                Updates the specified Data Lake Store account information:
                  $ref: "#/components/examples/Updates_the_specified_Data_Lake_Stor\
                    e_account_information"
        "202":
          description: Successfully initiated the update of the account details.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DataLakeStoreAccount"
              examples:
                Updates the specified Data Lake Store account information:
                  $ref: "#/components/examples/Updates_the_specified_Data_Lake_Stor\
                    e_account_information"
      tags:
        - Accounts
      x-ms-long-running-operation: true
    put:
      description: Creates the specified Data Lake Store account.
      operationId: Accounts_Create
      parameters:
        - $ref: "#/components/parameters/SubscriptionIdParameter"
        - $ref: "#/components/parameters/ResourceGroupNameParameter"
        - $ref: "#/components/parameters/AccountNameParameter"
        - $ref: "#/components/parameters/ApiVersionParameter"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateDataLakeStoreAccountParameters"
        description: Parameters supplied to create the Data Lake Store account.
        required: true
      responses:
        "200":
          description: Successfully created the account.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DataLakeStoreAccount"
              examples:
                Creates the specified Data Lake Store account:
                  $ref: "#/components/examples/Creates_the_specified_Data_Lake_Stor\
                    e_account"
        "201":
          description: Successfully initiated creation of the account.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DataLakeStoreAccount"
              examples:
                Creates the specified Data Lake Store account:
                  $ref: "#/components/examples/Creates_the_specified_Data_Lake_Stor\
                    e_account"
      tags:
        - Accounts
      x-ms-long-running-operation: true
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataLakeStore/accounts/{accountName}/enableKeyVault":
    post:
      description: Attempts to enable a user managed Key Vault for encryption of the
        specified Data Lake Store account.
      operationId: Accounts_EnableKeyVault
      parameters:
        - $ref: "#/components/parameters/SubscriptionIdParameter"
        - $ref: "#/components/parameters/ResourceGroupNameParameter"
        - $ref: "#/components/parameters/AccountNameParameter"
        - $ref: "#/components/parameters/ApiVersionParameter"
      responses:
        "200":
          description: Successfully enabled the user-managed Key Vault settings used for
            encrypting this Data Lake Store account.
      tags:
        - Accounts
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataLakeStore/accounts/{accountName}/firewallRules":
    get:
      description: Lists the Data Lake Store firewall rules within the specified Data Lake
        Store account.
      operationId: FirewallRules_ListByAccount
      parameters:
        - $ref: "#/components/parameters/SubscriptionIdParameter"
        - $ref: "#/components/parameters/ResourceGroupNameParameter"
        - $ref: "#/components/parameters/AccountNameParameter"
        - $ref: "#/components/parameters/ApiVersionParameter"
      responses:
        "200":
          description: Successfully retrieved the list of firewall rules.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FirewallRuleListResult"
              examples:
                Lists the Data Lake Store firewall rules within the specified Data Lake Store account.:
                  $ref: "#/components/examples/Lists_the_Data_Lake_Store_firewall_r\
                    ules_within_the_specified_Data_Lake_Store_account."
      tags:
        - FirewallRules
      x-ms-pageable:
        nextLinkName: nextLink
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataLakeStore/accounts/{accountName}/firewallRules/{firewallRuleName}":
    delete:
      description: Deletes the specified firewall rule from the specified Data Lake Store
        account.
      operationId: FirewallRules_Delete
      parameters:
        - $ref: "#/components/parameters/SubscriptionIdParameter"
        - $ref: "#/components/parameters/ResourceGroupNameParameter"
        - $ref: "#/components/parameters/AccountNameParameter"
        - description: The name of the firewall rule to delete.
          in: path
          name: firewallRuleName
          required: true
          schema:
            type: string
          examples:
            Deletes the specified firewall rule from the specified Data Lake Store account.:
              value: test_rule
        - $ref: "#/components/parameters/ApiVersionParameter"
      responses:
        "200":
          description: Successfully deleted the specified firewall rule.
        "204":
          description: The specified firewall rule does not exist or was already deleted.
      tags:
        - FirewallRules
    get:
      description: Gets the specified Data Lake Store firewall rule.
      operationId: FirewallRules_Get
      parameters:
        - $ref: "#/components/parameters/SubscriptionIdParameter"
        - $ref: "#/components/parameters/ResourceGroupNameParameter"
        - $ref: "#/components/parameters/AccountNameParameter"
        - description: The name of the firewall rule to retrieve.
          in: path
          name: firewallRuleName
          required: true
          schema:
            type: string
          examples:
            Gets the specified Data Lake Store firewall rule.:
              value: test_rule
        - $ref: "#/components/parameters/ApiVersionParameter"
      responses:
        "200":
          description: Successfully retrieved the firewall rule.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FirewallRule"
              examples:
                Gets the specified Data Lake Store firewall rule.:
                  $ref: "#/components/examples/Gets_the_specified_Data_Lake_Store_f\
                    irewall_rule."
      tags:
        - FirewallRules
    patch:
      description: Updates the specified firewall rule.
      operationId: FirewallRules_Update
      parameters:
        - $ref: "#/components/parameters/SubscriptionIdParameter"
        - $ref: "#/components/parameters/ResourceGroupNameParameter"
        - $ref: "#/components/parameters/AccountNameParameter"
        - description: The name of the firewall rule to update.
          in: path
          name: firewallRuleName
          required: true
          schema:
            type: string
          examples:
            Updates the specified firewall rule.:
              value: test_rule
        - $ref: "#/components/parameters/ApiVersionParameter"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateFirewallRuleParameters"
        description: Parameters supplied to update the firewall rule.
      responses:
        "200":
          description: Successfully updated the specified firewall rule.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FirewallRule"
              examples:
                Updates the specified firewall rule.:
                  $ref: "#/components/examples/Updates_the_specified_firewall_rule."
      tags:
        - FirewallRules
    put:
      description: Creates or updates the specified firewall rule. During update, the
        firewall rule with the specified name will be replaced with this new
        firewall rule.
      operationId: FirewallRules_CreateOrUpdate
      parameters:
        - $ref: "#/components/parameters/SubscriptionIdParameter"
        - $ref: "#/components/parameters/ResourceGroupNameParameter"
        - $ref: "#/components/parameters/AccountNameParameter"
        - description: The name of the firewall rule to create or update.
          in: path
          name: firewallRuleName
          required: true
          schema:
            type: string
          examples:
            "Creates or updates the specified firewall rule. During update, the firewall rule with the specified name will be replaced with this new firewall rule":
              value: test_rule
        - $ref: "#/components/parameters/ApiVersionParameter"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateOrUpdateFirewallRuleParameters"
        description: Parameters supplied to create or update the firewall rule.
        required: true
      responses:
        "200":
          description: Successfully created or updated the specified firewall rule.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FirewallRule"
              examples:
                "Creates or updates the specified firewall rule. During update, the firewall rule with the specified name will be replaced with this new firewall rule":
                  $ref: "#/components/examples/Creates_or_updates_the_specified_fir\
                    ewall_rule._During_update_the_firewall_rule_with_the_specif\
                    ied_name_will_be_replaced_with_this_new_firewall_rule"
      tags:
        - FirewallRules
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataLakeStore/accounts/{accountName}/trustedIdProviders":
    get:
      description: Lists the Data Lake Store trusted identity providers within the
        specified Data Lake Store account.
      operationId: TrustedIdProviders_ListByAccount
      parameters:
        - $ref: "#/components/parameters/SubscriptionIdParameter"
        - $ref: "#/components/parameters/ResourceGroupNameParameter"
        - $ref: "#/components/parameters/AccountNameParameter"
        - $ref: "#/components/parameters/ApiVersionParameter"
      responses:
        "200":
          description: Successfully retrieved the list of trusted identity providers.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TrustedIdProviderListResult"
              examples:
                Lists the Data Lake Store trusted identity providers within the specified Data Lake Store account:
                  $ref: "#/components/examples/Lists_the_Data_Lake_Store_trusted_id\
                    entity_providers_within_the_specified_Data_Lake_Store_accou\
                    nt"
      tags:
        - TrustedIdProviders
      x-ms-pageable:
        nextLinkName: nextLink
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataLakeStore/accounts/{accountName}/trustedIdProviders/{trustedIdProviderName}":
    delete:
      description: Deletes the specified trusted identity provider from the specified Data
        Lake Store account
      operationId: TrustedIdProviders_Delete
      parameters:
        - $ref: "#/components/parameters/SubscriptionIdParameter"
        - $ref: "#/components/parameters/ResourceGroupNameParameter"
        - $ref: "#/components/parameters/AccountNameParameter"
        - description: The name of the trusted identity provider to delete.
          in: path
          name: trustedIdProviderName
          required: true
          schema:
            type: string
          examples:
            Deletes the specified trusted identity provider from the specified Data Lake Store account:
              value: test_trusted_id_provider_name
        - $ref: "#/components/parameters/ApiVersionParameter"
      responses:
        "200":
          description: Successfully deleted the specified trusted identity provider details.
        "204":
          description: The specified trusted identity provider was not found.
      tags:
        - TrustedIdProviders
    get:
      description: Gets the specified Data Lake Store trusted identity provider.
      operationId: TrustedIdProviders_Get
      parameters:
        - $ref: "#/components/parameters/SubscriptionIdParameter"
        - $ref: "#/components/parameters/ResourceGroupNameParameter"
        - $ref: "#/components/parameters/AccountNameParameter"
        - description: The name of the trusted identity provider to retrieve.
          in: path
          name: trustedIdProviderName
          required: true
          schema:
            type: string
          examples:
            Gets the specified Data Lake Store trusted identity provider:
              value: test_trusted_id_provider_name
        - $ref: "#/components/parameters/ApiVersionParameter"
      responses:
        "200":
          description: Successfully retrieved details of the specified trusted identity
            provider.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TrustedIdProvider"
              examples:
                Gets the specified Data Lake Store trusted identity provider:
                  $ref: "#/components/examples/Gets_the_specified_Data_Lake_Store_t\
                    rusted_identity_provider"
      tags:
        - TrustedIdProviders
    patch:
      description: Updates the specified trusted identity provider.
      operationId: TrustedIdProviders_Update
      parameters:
        - $ref: "#/components/parameters/SubscriptionIdParameter"
        - $ref: "#/components/parameters/ResourceGroupNameParameter"
        - $ref: "#/components/parameters/AccountNameParameter"
        - description: The name of the trusted identity provider. This is used for
            differentiation of providers in the account.
          in: path
          name: trustedIdProviderName
          required: true
          schema:
            type: string
          examples:
            Updates the specified trusted identity provider:
              value: test_trusted_id_provider_name
        - $ref: "#/components/parameters/ApiVersionParameter"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateTrustedIdProviderParameters"
        description: Parameters supplied to update the trusted identity provider.
      responses:
        "200":
          description: Successfully added the trusted identity provider.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TrustedIdProvider"
              examples:
                Updates the specified trusted identity provider:
                  $ref: "#/components/examples/Updates_the_specified_trusted_identi\
                    ty_provider"
      tags:
        - TrustedIdProviders
    put:
      description: Creates or updates the specified trusted identity provider. During
        update, the trusted identity provider with the specified name will be
        replaced with this new provider
      operationId: TrustedIdProviders_CreateOrUpdate
      parameters:
        - $ref: "#/components/parameters/SubscriptionIdParameter"
        - $ref: "#/components/parameters/ResourceGroupNameParameter"
        - $ref: "#/components/parameters/AccountNameParameter"
        - description: The name of the trusted identity provider. This is used for
            differentiation of providers in the account.
          in: path
          name: trustedIdProviderName
          required: true
          schema:
            type: string
          examples:
            "Creates or updates the specified trusted identity provider. During update, the trusted identity provider with the specified name will be replaced with this new provider":
              value: test_trusted_id_provider_name
        - $ref: "#/components/parameters/ApiVersionParameter"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateOrUpdateTrustedIdProviderParameters"
        description: Parameters supplied to create or replace the trusted identity provider.
        required: true
      responses:
        "200":
          description: Successfully added the trusted identity provider.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TrustedIdProvider"
              examples:
                "Creates or updates the specified trusted identity provider. During update, the trusted identity provider with the specified name will be replaced with this new provider":
                  $ref: "#/components/examples/Creates_or_updates_the_specified_tru\
                    sted_identity_provider._During_update_the_trusted_identity_\
                    provider_with_the_specified_name_will_be_replaced_with_this\
                    _new_provider"
      tags:
        - TrustedIdProviders
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataLakeStore/accounts/{accountName}/virtualNetworkRules":
    get:
      description: Lists the Data Lake Store virtual network rules within the specified
        Data Lake Store account.
      operationId: VirtualNetworkRules_ListByAccount
      parameters:
        - $ref: "#/components/parameters/SubscriptionIdParameter"
        - $ref: "#/components/parameters/ResourceGroupNameParameter"
        - $ref: "#/components/parameters/AccountNameParameter"
        - $ref: "#/components/parameters/ApiVersionParameter"
      responses:
        "200":
          description: Successfully retrieved the list of virtual network rules.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/VirtualNetworkRuleListResult"
              examples:
                Lists the Data Lake Store virtual network rules within the specified Data Lake Store account.:
                  $ref: "#/components/examples/Lists_the_Data_Lake_Store_virtual_ne\
                    twork_rules_within_the_specified_Data_Lake_Store_account."
      tags:
        - VirtualNetworkRules
      x-ms-pageable:
        nextLinkName: nextLink
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataLakeStore/accounts/{accountName}/virtualNetworkRules/{virtualNetworkRuleName}":
    delete:
      description: Deletes the specified virtual network rule from the specified Data Lake
        Store account.
      operationId: VirtualNetworkRules_Delete
      parameters:
        - $ref: "#/components/parameters/SubscriptionIdParameter"
        - $ref: "#/components/parameters/ResourceGroupNameParameter"
        - $ref: "#/components/parameters/AccountNameParameter"
        - description: The name of the virtual network rule to delete.
          in: path
          name: virtualNetworkRuleName
          required: true
          schema:
            type: string
          examples:
            Deletes the specified virtual network rule from the specified Data Lake Store account.:
              value: test_virtual_network_rules_name
        - $ref: "#/components/parameters/ApiVersionParameter"
      responses:
        "200":
          description: Successfully deleted the specified virtual network rule.
        "204":
          description: The specified virtual network rule does not exist or was already
            deleted.
      tags:
        - VirtualNetworkRules
    get:
      description: Gets the specified Data Lake Store virtual network rule.
      operationId: VirtualNetworkRules_Get
      parameters:
        - $ref: "#/components/parameters/SubscriptionIdParameter"
        - $ref: "#/components/parameters/ResourceGroupNameParameter"
        - $ref: "#/components/parameters/AccountNameParameter"
        - description: The name of the virtual network rule to retrieve.
          in: path
          name: virtualNetworkRuleName
          required: true
          schema:
            type: string
          examples:
            Gets the specified Data Lake Store virtual network rule.:
              value: test_virtual_network_rules_name
        - $ref: "#/components/parameters/ApiVersionParameter"
      responses:
        "200":
          description: Successfully retrieved the virtual network rule.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/VirtualNetworkRule"
              examples:
                Gets the specified Data Lake Store virtual network rule.:
                  $ref: "#/components/examples/Gets_the_specified_Data_Lake_Store_v\
                    irtual_network_rule."
      tags:
        - VirtualNetworkRules
    patch:
      description: Updates the specified virtual network rule.
      operationId: VirtualNetworkRules_Update
      parameters:
        - $ref: "#/components/parameters/SubscriptionIdParameter"
        - $ref: "#/components/parameters/ResourceGroupNameParameter"
        - $ref: "#/components/parameters/AccountNameParameter"
        - description: The name of the virtual network rule to update.
          in: path
          name: virtualNetworkRuleName
          required: true
          schema:
            type: string
          examples:
            Updates the specified virtual network rule.:
              value: test_virtual_network_rules_name
        - $ref: "#/components/parameters/ApiVersionParameter"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateVirtualNetworkRuleParameters"
        description: Parameters supplied to update the virtual network rule.
      responses:
        "200":
          description: Successfully updated the specified virtual network rule.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/VirtualNetworkRule"
              examples:
                Updates the specified virtual network rule.:
                  $ref: "#/components/examples/Updates_the_specified_virtual_networ\
                    k_rule."
      tags:
        - VirtualNetworkRules
    put:
      description: Creates or updates the specified virtual network rule. During update,
        the virtual network rule with the specified name will be replaced with
        this new virtual network rule.
      operationId: VirtualNetworkRules_CreateOrUpdate
      parameters:
        - $ref: "#/components/parameters/SubscriptionIdParameter"
        - $ref: "#/components/parameters/ResourceGroupNameParameter"
        - $ref: "#/components/parameters/AccountNameParameter"
        - description: The name of the virtual network rule to create or update.
          in: path
          name: virtualNetworkRuleName
          required: true
          schema:
            type: string
          examples:
            "Creates or updates the specified virtual network rule. During update, the virtual network rule with the specified name will be replaced with this new virtual network rule.":
              value: test_virtual_network_rules_name
        - $ref: "#/components/parameters/ApiVersionParameter"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateOrUpdateVirtualNetworkRuleParameters"
        description: Parameters supplied to create or update the virtual network rule.
        required: true
      responses:
        "200":
          description: Successfully created or updated the specified virtual network rule.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/VirtualNetworkRule"
              examples:
                "Creates or updates the specified virtual network rule. During update, the virtual network rule with the specified name will be replaced with this new virtual network rule.":
                  $ref: "#/components/examples/Creates_or_updates_the_specified_vir\
                    tual_network_rule._During_update_the_virtual_network_rule_w\
                    ith_the_specified_name_will_be_replaced_with_this_new_virtu\
                    al_network_rule."
      tags:
        - VirtualNetworkRules
servers:
  - url: https://management.azure.com
components:
  examples:
    Lists_all_of_the_available_Data_Lake_Store_REST_API_operations:
      value:
        nextLink: https://management.azure.com/subscriptions/34adfa4f-cedf-4dc0-ba29-b6d1a69ab345/resourceGroups/contosorg/providers/Microsoft.DataLakeAnalytics/accounts/contosoadla/jobPolicies?api-version=2016-11-01&%24skiptoken=<token>
        value:
          - display:
              description: Get available operations of DataLakeStore.
              operation: Get Available Operations
              provider: Microsoft DataLakeStore
              resource: Available Operations
            name: Microsoft.DataLakeStore/operations/read
    Lists_the_Data_Lake_Store_accounts_within_the_subscription:
      value:
        nextLink: https://management.azure.com/subscriptions/34adfa4f-cedf-4dc0-ba29-b6d1a69ab345/resourceGroups/contosorg/providers/Microsoft.DataLakeStore/accounts/contosoadla/jobPolicies?api-version=2016-11-01&%24skiptoken=<token>
        value:
          - id: 34adfa4f-cedf-4dc0-ba29-b6d1a69ab345
            location: eastus2
            name: contosoadla
            properties:
              accountId: 94f4bf5d-78a9-4c31-8aa7-b34d07bad898
              creationTime: 2017-04-14T13:21:56.6819037-07:00
              endpoint: testadlfs17607.azuredatalakestore.net
              lastModifiedTime: 2017-04-14T13:21:56.6819037-07:00
              provisioningState: Succeeded
              state: Active
            tags:
              test_key: test_value
            type: test_type
    Gets_subscription-level_properties_and_limits_for_Data_Lake_Store_specified_by_resource_location:
      value:
        accountCount: 100
        maxAccountCount: 150
        migrationState: false
        state: Registered
        subscriptionId: 34adfa4f-cedf-4dc0-ba29-b6d1a69ab345
    Checks_whether_the_specified_account_name_is_available_or_taken:
      value:
        message: An account named 'abc' already exists.
        nameAvailable: false
        reason: AlreadyExists
    UsageList:
      value:
        value:
          - currentValue: 69
            id: /subscriptions/0f936178-0d48-4777-a7ab-47860b604941/providers/Microsoft.DataLakeStore/locations/WestUS/usages/DataLakeStoreAccounts
            limit: -1
            name:
              localizedValue: Data Lake Store Accounts
              value: DataLakeStoreAccounts
            unit: Count
    Lists_the_Data_Lake_Store_accounts_within_a_specific_resource_group:
      value:
        nextLink: https://management.azure.com/subscriptions/34adfa4f-cedf-4dc0-ba29-b6d1a69ab345/resourceGroups/contosorg/providers/Microsoft.DataLakeStore/accounts/contosoadla/jobPolicies?api-version=2016-11-01&%24skiptoken=<token>
        value:
          - id: 34adfa4f-cedf-4dc0-ba29-b6d1a69ab345
            location: eastus2
            name: contosoadla
            properties:
              accountId: 94f4bf5d-78a9-4c31-8aa7-b34d07bad898
              creationTime: 2017-04-14T13:21:56.6819037-07:00
              endpoint: testadlfs17607.azuredatalakestore.net
              lastModifiedTime: 2017-04-14T13:21:56.6819037-07:00
              provisioningState: Succeeded
              state: Active
            tags:
              test_key: test_value
            type: test_type
    Gets_the_specified_Data_Lake_Store_account:
      value:
        id: 34adfa4f-cedf-4dc0-ba29-b6d1a69ab345
        identity:
          principalId: 34adfa4f-cedf-4dc0-ba29-b6d1a69ab345
          tenantId: 34adfa4f-cedf-4dc0-ba29-b6d1a69ab346
          type: SystemAssigned
        location: eastus2
        name: contosoadla
        properties:
          accountId: 94f4bf5d-78a9-4c31-8aa7-b34d07bad898
          creationTime: 2017-04-14T13:21:56.6819037-07:00
          currentTier: Consumption
          defaultGroup: test_default_group
          encryptionConfig:
            keyVaultMetaInfo:
              encryptionKeyName: test_encryption_key_name
              encryptionKeyVersion: encryption_key_version
              keyVaultResourceId: 34adfa4f-cedf-4dc0-ba29-b6d1a69ab345
            type: UserManaged
          encryptionProvisioningState: Succeeded
          encryptionState: Enabled
          endpoint: testadlfs17607.azuredatalakestore.net
          firewallAllowAzureIps: Enabled
          firewallRules:
            - id: 34adfa4f-cedf-4dc0-ba29-b6d1a69ab345
              name: test_rule
              properties:
                endIpAddress: 2.2.2.2
                startIpAddress: 1.1.1.1
              type: test_type
          firewallState: Enabled
          lastModifiedTime: 2017-04-14T13:21:56.6819037-07:00
          newTier: Consumption
          provisioningState: Succeeded
          state: Active
          trustedIdProviderState: Enabled
          trustedIdProviders:
            - id: 34adfa4f-cedf-4dc0-ba29-b6d1a69ab345
              name: test_trusted_id_provider_name
              properties:
                idProvider: https://sts.windows.net/ea9ec534-a3e3-4e45-ad36-3afc5bb291c1
              type: test_type
        tags:
          test_key: test_value
        type: test_type
    Updates_the_specified_Data_Lake_Store_account_information:
      value:
        id: 34adfa4f-cedf-4dc0-ba29-b6d1a69ab345
        identity:
          principalId: 34adfa4f-cedf-4dc0-ba29-b6d1a69ab345
          tenantId: 34adfa4f-cedf-4dc0-ba29-b6d1a69ab346
          type: SystemAssigned
        location: eastus2
        name: contosoadla
        properties:
          accountId: 94f4bf5d-78a9-4c31-8aa7-b34d07bad898
          creationTime: 2017-04-14T13:21:56.6819037-07:00
          currentTier: Consumption
          defaultGroup: test_default_group
          encryptionConfig:
            keyVaultMetaInfo:
              encryptionKeyName: test_encryption_key_name
              encryptionKeyVersion: encryption_key_version
              keyVaultResourceId: 34adfa4f-cedf-4dc0-ba29-b6d1a69ab345
            type: UserManaged
          encryptionProvisioningState: Succeeded
          encryptionState: Enabled
          endpoint: testadlfs17607.azuredatalakestore.net
          firewallAllowAzureIps: Enabled
          firewallRules:
            - id: 34adfa4f-cedf-4dc0-ba29-b6d1a69ab345
              name: test_rule
              properties:
                endIpAddress: 2.2.2.2
                startIpAddress: 1.1.1.1
              type: test_type
          firewallState: Enabled
          lastModifiedTime: 2017-04-14T13:21:56.6819037-07:00
          newTier: Consumption
          provisioningState: Succeeded
          state: Active
          trustedIdProviderState: Enabled
          trustedIdProviders:
            - id: 34adfa4f-cedf-4dc0-ba29-b6d1a69ab345
              name: test_trusted_id_provider_name
              properties:
                idProvider: https://sts.windows.net/ea9ec534-a3e3-4e45-ad36-3afc5bb291c1
              type: test_type
        tags:
          test_key: test_value
        type: test_type
    Creates_the_specified_Data_Lake_Store_account:
      value:
        id: 34adfa4f-cedf-4dc0-ba29-b6d1a69ab345
        identity:
          principalId: 34adfa4f-cedf-4dc0-ba29-b6d1a69ab345
          tenantId: 34adfa4f-cedf-4dc0-ba29-b6d1a69ab346
          type: SystemAssigned
        location: eastus2
        name: contosoadla
        properties:
          accountId: 94f4bf5d-78a9-4c31-8aa7-b34d07bad898
          creationTime: 2017-04-14T13:21:56.6819037-07:00
          currentTier: Consumption
          defaultGroup: test_default_group
          encryptionConfig:
            keyVaultMetaInfo:
              encryptionKeyName: test_encryption_key_name
              encryptionKeyVersion: encryption_key_version
              keyVaultResourceId: 34adfa4f-cedf-4dc0-ba29-b6d1a69ab345
            type: UserManaged
          encryptionProvisioningState: Succeeded
          encryptionState: Enabled
          endpoint: testadlfs17607.azuredatalakestore.net
          firewallAllowAzureIps: Enabled
          firewallRules:
            - id: 34adfa4f-cedf-4dc0-ba29-b6d1a69ab345
              name: test_rule
              properties:
                endIpAddress: 2.2.2.2
                startIpAddress: 1.1.1.1
              type: test_type
          firewallState: Enabled
          lastModifiedTime: 2017-04-14T13:21:56.6819037-07:00
          newTier: Consumption
          provisioningState: Succeeded
          state: Active
          trustedIdProviderState: Enabled
          trustedIdProviders:
            - id: 34adfa4f-cedf-4dc0-ba29-b6d1a69ab345
              name: test_trusted_id_provider_name
              properties:
                idProvider: https://sts.windows.net/ea9ec534-a3e3-4e45-ad36-3afc5bb291c1
              type: test_type
        tags:
          test_key: test_value
        type: test_type
    Lists_the_Data_Lake_Store_firewall_rules_within_the_specified_Data_Lake_Store_account.:
      value:
        nextLink: https://management.azure.com/subscriptions/34adfa4f-cedf-4dc0-ba29-b6d1a69ab345/resourceGroups/contosorg/providers/Microsoft.DataLakeStore/accounts/contosoadla/jobPolicies?api-version=2016-11-01&%24skiptoken=<token>
        value:
          - id: 34adfa4f-cedf-4dc0-ba29-b6d1a69ab345
            name: test_rule
            properties:
              endIpAddress: 2.2.2.2
              startIpAddress: 1.1.1.1
            type: test_type
    Gets_the_specified_Data_Lake_Store_firewall_rule.:
      value:
        id: 34adfa4f-cedf-4dc0-ba29-b6d1a69ab345
        name: test_rule
        properties:
          endIpAddress: 2.2.2.2
          startIpAddress: 1.1.1.1
        type: test_type
    Updates_the_specified_firewall_rule.:
      value:
        id: 34adfa4f-cedf-4dc0-ba29-b6d1a69ab345
        name: test_rule
        properties:
          endIpAddress: 2.2.2.2
          startIpAddress: 1.1.1.1
        type: test_type
    Creates_or_updates_the_specified_firewall_rule._During_update_the_firewall_rule_with_the_specified_name_will_be_replaced_with_this_new_firewall_rule:
      value:
        id: 34adfa4f-cedf-4dc0-ba29-b6d1a69ab345
        name: test_rule
        properties:
          endIpAddress: 2.2.2.2
          startIpAddress: 1.1.1.1
        type: test_type
    Lists_the_Data_Lake_Store_trusted_identity_providers_within_the_specified_Data_Lake_Store_account:
      value:
        nextLink: https://management.azure.com/subscriptions/34adfa4f-cedf-4dc0-ba29-b6d1a69ab345/resourceGroups/contosorg/providers/Microsoft.DataLakeStore/accounts/contosoadla/jobPolicies?api-version=2016-11-01&%24skiptoken=<token>
        value:
          - id: 34adfa4f-cedf-4dc0-ba29-b6d1a69ab345
            name: test_trusted_id_provider_name
            properties:
              idProvider: https://sts.windows.net/ea9ec534-a3e3-4e45-ad36-3afc5bb291c1
            type: test_type
    Gets_the_specified_Data_Lake_Store_trusted_identity_provider:
      value:
        id: 34adfa4f-cedf-4dc0-ba29-b6d1a69ab345
        name: test_trusted_id_provider_name
        properties:
          idProvider: https://sts.windows.net/ea9ec534-a3e3-4e45-ad36-3afc5bb291c1
        type: test_type
    Updates_the_specified_trusted_identity_provider:
      value:
        id: 34adfa4f-cedf-4dc0-ba29-b6d1a69ab345
        name: test_trusted_id_provider_name
        properties:
          idProvider: https://sts.windows.net/ea9ec534-a3e3-4e45-ad36-3afc5bb291c1
        type: test_type
    Creates_or_updates_the_specified_trusted_identity_provider._During_update_the_trusted_identity_provider_with_the_specified_name_will_be_replaced_with_this_new_provider:
      value:
        id: 34adfa4f-cedf-4dc0-ba29-b6d1a69ab345
        name: test_trusted_id_provider_name
        properties:
          idProvider: https://sts.windows.net/ea9ec534-a3e3-4e45-ad36-3afc5bb291c1
        type: test_type
    Lists_the_Data_Lake_Store_virtual_network_rules_within_the_specified_Data_Lake_Store_account.:
      value:
        nextLink: https://management.azure.com/subscriptions/34adfa4f-cedf-4dc0-ba29-b6d1a69ab345/resourceGroups/contosorg/providers/Microsoft.DataLakeStore/accounts/contosoadla/jobPolicies?api-version=2016-11-01&%24skiptoken=<token>
        value:
          - id: 34adfa4f-cedf-4dc0-ba29-b6d1a69ab345
            name: test_virtual_network_rules_name
            properties:
              subnetId: test_subnetId
            type: test_type
    Gets_the_specified_Data_Lake_Store_virtual_network_rule.:
      value:
        id: 34adfa4f-cedf-4dc0-ba29-b6d1a69ab345
        name: test_virtual_network_rules_name
        properties:
          subnetId: test_subnetId
        type: test_type
    Updates_the_specified_virtual_network_rule.:
      value:
        id: 34adfa4f-cedf-4dc0-ba29-b6d1a69ab345
        name: test_virtual_network_rules_name
        properties:
          subnetId: test_subnetId
        type: test_type
    Creates_or_updates_the_specified_virtual_network_rule._During_update_the_virtual_network_rule_with_the_specified_name_will_be_replaced_with_this_new_virtual_network_rule.:
      value:
        id: 34adfa4f-cedf-4dc0-ba29-b6d1a69ab345
        name: test_virtual_network_rules_name
        properties:
          subnetId: test_subnetId
        type: test_type
  parameters:
    AccountNameParameter:
      description: The name of the Data Lake Store account.
      in: path
      name: accountName
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
      examples:
        Deletes the specified Data Lake Store account:
          value: contosoadla
        Gets the specified Data Lake Store account:
          value: contosoadla
        Updates the specified Data Lake Store account information:
          value: contosoadla
        Creates the specified Data Lake Store account:
          value: contosoadla
        Attempts to enable a user managed Key Vault for encryption of the specified Data Lake Store account:
          value: contosoadla
        Lists the Data Lake Store firewall rules within the specified Data Lake Store account.:
          value: contosoadla
        Deletes the specified firewall rule from the specified Data Lake Store account.:
          value: contosoadla
        Gets the specified Data Lake Store firewall rule.:
          value: contosoadla
        Updates the specified firewall rule.:
          value: contosoadla
        "Creates or updates the specified firewall rule. During update, the firewall rule with the specified name will be replaced with this new firewall rule":
          value: contosoadla
        Lists the Data Lake Store trusted identity providers within the specified Data Lake Store account:
          value: contosoadla
        Deletes the specified trusted identity provider from the specified Data Lake Store account:
          value: contosoadla
        Gets the specified Data Lake Store trusted identity provider:
          value: contosoadla
        Updates the specified trusted identity provider:
          value: contosoadla
        "Creates or updates the specified trusted identity provider. During update, the trusted identity provider with the specified name will be replaced with this new provider":
          value: contosoadla
        Lists the Data Lake Store virtual network rules within the specified Data Lake Store account.:
          value: contosoadla
        Deletes the specified virtual network rule from the specified Data Lake Store account.:
          value: contosoadla
        Gets the specified Data Lake Store virtual network rule.:
          value: contosoadla
        Updates the specified virtual network rule.:
          value: contosoadla
        "Creates or updates the specified virtual network rule. During update, the virtual network rule with the specified name will be replaced with this new virtual network rule.":
          value: contosoadla
    ApiVersionParameter:
      description: Client Api Version.
      in: query
      name: api-version
      required: true
      schema:
        type: string
      examples:
        Lists all of the available Data Lake Store REST API operations:
          value: 2016-11-01
        Lists the Data Lake Store accounts within the subscription:
          value: 2016-11-01
        Gets subscription-level properties and limits for Data Lake Store specified by resource location:
          value: 2016-11-01
        Checks whether the specified account name is available or taken:
          value: 2016-11-01
        UsageList:
          value: 2016-11-01
        Lists the Data Lake Store accounts within a specific resource group:
          value: 2016-11-01
        Deletes the specified Data Lake Store account:
          value: 2016-11-01
        Gets the specified Data Lake Store account:
          value: 2016-11-01
        Updates the specified Data Lake Store account information:
          value: 2016-11-01
        Creates the specified Data Lake Store account:
          value: 2016-11-01
        Attempts to enable a user managed Key Vault for encryption of the specified Data Lake Store account:
          value: 2016-11-01
        Lists the Data Lake Store firewall rules within the specified Data Lake Store account.:
          value: 2016-11-01
        Deletes the specified firewall rule from the specified Data Lake Store account.:
          value: 2016-11-01
        Gets the specified Data Lake Store firewall rule.:
          value: 2016-11-01
        Updates the specified firewall rule.:
          value: 2016-11-01
        "Creates or updates the specified firewall rule. During update, the firewall rule with the specified name will be replaced with this new firewall rule":
          value: 2016-11-01
        Lists the Data Lake Store trusted identity providers within the specified Data Lake Store account:
          value: 2016-11-01
        Deletes the specified trusted identity provider from the specified Data Lake Store account:
          value: 2016-11-01
        Gets the specified Data Lake Store trusted identity provider:
          value: 2016-11-01
        Updates the specified trusted identity provider:
          value: 2016-11-01
        "Creates or updates the specified trusted identity provider. During update, the trusted identity provider with the specified name will be replaced with this new provider":
          value: 2016-11-01
        Lists the Data Lake Store virtual network rules within the specified Data Lake Store account.:
          value: 2016-11-01
        Deletes the specified virtual network rule from the specified Data Lake Store account.:
          value: 2016-11-01
        Gets the specified Data Lake Store virtual network rule.:
          value: 2016-11-01
        Updates the specified virtual network rule.:
          value: 2016-11-01
        "Creates or updates the specified virtual network rule. During update, the virtual network rule with the specified name will be replaced with this new virtual network rule.":
          value: 2016-11-01
    ResourceGroupNameParameter:
      description: The name of the Azure resource group.
      in: path
      name: resourceGroupName
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
      examples:
        Lists the Data Lake Store accounts within a specific resource group:
          value: contosorg
        Deletes the specified Data Lake Store account:
          value: contosorg
        Gets the specified Data Lake Store account:
          value: contosorg
        Updates the specified Data Lake Store account information:
          value: contosorg
        Creates the specified Data Lake Store account:
          value: contosorg
        Attempts to enable a user managed Key Vault for encryption of the specified Data Lake Store account:
          value: contosorg
        Lists the Data Lake Store firewall rules within the specified Data Lake Store account.:
          value: contosorg
        Deletes the specified firewall rule from the specified Data Lake Store account.:
          value: contosorg
        Gets the specified Data Lake Store firewall rule.:
          value: contosorg
        Updates the specified firewall rule.:
          value: contosorg
        "Creates or updates the specified firewall rule. During update, the firewall rule with the specified name will be replaced with this new firewall rule":
          value: contosorg
        Lists the Data Lake Store trusted identity providers within the specified Data Lake Store account:
          value: contosorg
        Deletes the specified trusted identity provider from the specified Data Lake Store account:
          value: contosorg
        Gets the specified Data Lake Store trusted identity provider:
          value: contosorg
        Updates the specified trusted identity provider:
          value: contosorg
        "Creates or updates the specified trusted identity provider. During update, the trusted identity provider with the specified name will be replaced with this new provider":
          value: contosorg
        Lists the Data Lake Store virtual network rules within the specified Data Lake Store account.:
          value: contosorg
        Deletes the specified virtual network rule from the specified Data Lake Store account.:
          value: contosorg
        Gets the specified Data Lake Store virtual network rule.:
          value: contosorg
        Updates the specified virtual network rule.:
          value: contosorg
        "Creates or updates the specified virtual network rule. During update, the virtual network rule with the specified name will be replaced with this new virtual network rule.":
          value: contosorg
    SubscriptionIdParameter:
      description: Gets subscription credentials which uniquely identify Microsoft Azure
        subscription. The subscription ID forms part of the URI for every
        service call.
      in: path
      name: subscriptionId
      required: true
      schema:
        type: string
      examples:
        Lists the Data Lake Store accounts within the subscription:
          value: 34adfa4f-cedf-4dc0-ba29-b6d1a69ab345
        Gets subscription-level properties and limits for Data Lake Store specified by resource location:
          value: 34adfa4f-cedf-4dc0-ba29-b6d1a69ab345
        Checks whether the specified account name is available or taken:
          value: 34adfa4f-cedf-4dc0-ba29-b6d1a69ab345
        UsageList:
          value: "{subscription-id}"
        Lists the Data Lake Store accounts within a specific resource group:
          value: 34adfa4f-cedf-4dc0-ba29-b6d1a69ab345
        Deletes the specified Data Lake Store account:
          value: 34adfa4f-cedf-4dc0-ba29-b6d1a69ab345
        Gets the specified Data Lake Store account:
          value: 34adfa4f-cedf-4dc0-ba29-b6d1a69ab345
        Updates the specified Data Lake Store account information:
          value: 34adfa4f-cedf-4dc0-ba29-b6d1a69ab345
        Creates the specified Data Lake Store account:
          value: 34adfa4f-cedf-4dc0-ba29-b6d1a69ab345
        Attempts to enable a user managed Key Vault for encryption of the specified Data Lake Store account:
          value: 34adfa4f-cedf-4dc0-ba29-b6d1a69ab345
        Lists the Data Lake Store firewall rules within the specified Data Lake Store account.:
          value: 34adfa4f-cedf-4dc0-ba29-b6d1a69ab345
        Deletes the specified firewall rule from the specified Data Lake Store account.:
          value: 34adfa4f-cedf-4dc0-ba29-b6d1a69ab345
        Gets the specified Data Lake Store firewall rule.:
          value: 34adfa4f-cedf-4dc0-ba29-b6d1a69ab345
        Updates the specified firewall rule.:
          value: 34adfa4f-cedf-4dc0-ba29-b6d1a69ab345
        "Creates or updates the specified firewall rule. During update, the firewall rule with the specified name will be replaced with this new firewall rule":
          value: 34adfa4f-cedf-4dc0-ba29-b6d1a69ab345
        Lists the Data Lake Store trusted identity providers within the specified Data Lake Store account:
          value: 34adfa4f-cedf-4dc0-ba29-b6d1a69ab345
        Deletes the specified trusted identity provider from the specified Data Lake Store account:
          value: 34adfa4f-cedf-4dc0-ba29-b6d1a69ab345
        Gets the specified Data Lake Store trusted identity provider:
          value: 34adfa4f-cedf-4dc0-ba29-b6d1a69ab345
        Updates the specified trusted identity provider:
          value: 34adfa4f-cedf-4dc0-ba29-b6d1a69ab345
        "Creates or updates the specified trusted identity provider. During update, the trusted identity provider with the specified name will be replaced with this new provider":
          value: 34adfa4f-cedf-4dc0-ba29-b6d1a69ab345
        Lists the Data Lake Store virtual network rules within the specified Data Lake Store account.:
          value: 34adfa4f-cedf-4dc0-ba29-b6d1a69ab345
        Deletes the specified virtual network rule from the specified Data Lake Store account.:
          value: 34adfa4f-cedf-4dc0-ba29-b6d1a69ab345
        Gets the specified Data Lake Store virtual network rule.:
          value: 34adfa4f-cedf-4dc0-ba29-b6d1a69ab345
        Updates the specified virtual network rule.:
          value: 34adfa4f-cedf-4dc0-ba29-b6d1a69ab345
        "Creates or updates the specified virtual network rule. During update, the virtual network rule with the specified name will be replaced with this new virtual network rule.":
          value: 34adfa4f-cedf-4dc0-ba29-b6d1a69ab345
  securitySchemes:
    azure_auth:
      description: Azure Active Directory OAuth2 Flow
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
          scopes:
            user_impersonation: impersonate your user account
  schemas:
    CapabilityInformation:
      description: Subscription-level properties and limits for Data Lake Store.
      properties:
        accountCount:
          description: The current number of accounts under this subscription.
          format: int32
          readOnly: true
          type: integer
        maxAccountCount:
          description: The maximum supported number of accounts under this subscription.
          format: int32
          readOnly: true
          type: integer
        migrationState:
          description: The Boolean value of true or false to indicate the maintenance state.
          readOnly: true
          type: boolean
        state:
          description: The subscription state.
          enum:
            - Registered
            - Suspended
            - Deleted
            - Unregistered
            - Warned
          readOnly: true
          type: string
          x-ms-enum:
            modelAsString: true
            name: SubscriptionState
        subscriptionId:
          description: The subscription credentials that uniquely identifies the
            subscription.
          format: uuid
          readOnly: true
          type: string
    CheckNameAvailabilityParameters:
      description: Data Lake Store account name availability check parameters.
      properties:
        name:
          description: The Data Lake Store name to check availability for.
          type: string
        type:
          description: "The resource type. Note: This should not be set by the user, as the
            constant value is Microsoft.DataLakeStore/accounts"
          enum:
            - Microsoft.DataLakeStore/accounts
          type: string
      required:
        - name
        - type
    CreateDataLakeStoreAccountParameters:
      properties:
        identity:
          $ref: "#/components/schemas/EncryptionIdentity"
        location:
          description: The resource location.
          type: string
        properties:
          $ref: "#/components/schemas/CreateDataLakeStoreAccountProperties"
        tags:
          additionalProperties:
            type: string
          description: The resource tags.
          type: object
      required:
        - location
    CreateDataLakeStoreAccountProperties:
      properties:
        defaultGroup:
          description: The default owner group for all new folders and files created in the
            Data Lake Store account.
          type: string
        encryptionConfig:
          $ref: "#/components/schemas/EncryptionConfig"
        encryptionState:
          description: The current state of encryption for this Data Lake Store account.
          enum:
            - Enabled
            - Disabled
          type: string
          x-ms-enum:
            modelAsString: false
            name: EncryptionState
        firewallAllowAzureIps:
          description: The current state of allowing or disallowing IPs originating within
            Azure through the firewall. If the firewall is disabled, this is not
            enforced.
          enum:
            - Enabled
            - Disabled
          type: string
          x-ms-enum:
            modelAsString: false
            name: FirewallAllowAzureIpsState
        firewallRules:
          description: The list of firewall rules associated with this Data Lake Store
            account.
          items:
            $ref: "#/components/schemas/CreateFirewallRuleWithAccountParameters"
          type: array
        firewallState:
          description: The current state of the IP address firewall for this Data Lake
            Store account.
          enum:
            - Enabled
            - Disabled
          type: string
          x-ms-enum:
            modelAsString: false
            name: FirewallState
        newTier:
          description: The commitment tier to use for next month.
          enum:
            - Consumption
            - Commitment_1TB
            - Commitment_10TB
            - Commitment_100TB
            - Commitment_500TB
            - Commitment_1PB
            - Commitment_5PB
          type: string
          x-ms-enum:
            modelAsString: false
            name: TierType
        trustedIdProviderState:
          description: The current state of the trusted identity provider feature for this
            Data Lake Store account.
          enum:
            - Enabled
            - Disabled
          type: string
          x-ms-enum:
            modelAsString: false
            name: TrustedIdProviderState
        trustedIdProviders:
          description: The list of trusted identity providers associated with this Data
            Lake Store account.
          items:
            $ref: "#/components/schemas/CreateTrustedIdProviderWithAccountParameters"
          type: array
        virtualNetworkRules:
          description: The list of virtual network rules associated with this Data Lake
            Store account.
          items:
            $ref: "#/components/schemas/CreateVirtualNetworkRuleWithAccountParamete\
              rs"
          type: array
    CreateFirewallRuleWithAccountParameters:
      description: The parameters used to create a new firewall rule while creating a new
        Data Lake Store account.
      properties:
        name:
          description: The unique name of the firewall rule to create.
          type: string
        properties:
          $ref: "#/components/schemas/CreateOrUpdateFirewallRuleProperties"
      required:
        - name
        - properties
    CreateOrUpdateFirewallRuleParameters:
      description: The parameters used to create a new firewall rule.
      properties:
        properties:
          $ref: "#/components/schemas/CreateOrUpdateFirewallRuleProperties"
      required:
        - properties
    CreateOrUpdateFirewallRuleProperties:
      description: The firewall rule properties to use when creating a new firewall rule.
      properties:
        endIpAddress:
          description: The end IP address for the firewall rule. This can be either ipv4 or
            ipv6. Start and End should be in the same protocol.
          type: string
        startIpAddress:
          description: The start IP address for the firewall rule. This can be either ipv4
            or ipv6. Start and End should be in the same protocol.
          type: string
      required:
        - startIpAddress
        - endIpAddress
    CreateOrUpdateTrustedIdProviderParameters:
      description: The parameters used to create a new trusted identity provider.
      properties:
        properties:
          $ref: "#/components/schemas/CreateOrUpdateTrustedIdProviderProperties"
      required:
        - properties
    CreateOrUpdateTrustedIdProviderProperties:
      description: The trusted identity provider properties to use when creating a new
        trusted identity provider.
      properties:
        idProvider:
          description: The URL of this trusted identity provider.
          type: string
      required:
        - idProvider
    CreateOrUpdateVirtualNetworkRuleParameters:
      description: The parameters used to create a new virtual network rule.
      properties:
        properties:
          $ref: "#/components/schemas/CreateOrUpdateVirtualNetworkRuleProperties"
      required:
        - properties
    CreateOrUpdateVirtualNetworkRuleProperties:
      description: The virtual network rule properties to use when creating a new virtual
        network rule.
      properties:
        subnetId:
          description: The resource identifier for the subnet.
          type: string
      required:
        - subnetId
    CreateTrustedIdProviderWithAccountParameters:
      description: The parameters used to create a new trusted identity provider while
        creating a new Data Lake Store account.
      properties:
        name:
          description: The unique name of the trusted identity provider to create.
          type: string
        properties:
          $ref: "#/components/schemas/CreateOrUpdateTrustedIdProviderProperties"
      required:
        - name
        - properties
    CreateVirtualNetworkRuleWithAccountParameters:
      description: The parameters used to create a new virtual network rule while creating
        a new Data Lake Store account.
      properties:
        name:
          description: The unique name of the virtual network rule to create.
          type: string
        properties:
          $ref: "#/components/schemas/CreateOrUpdateVirtualNetworkRuleProperties"
      required:
        - name
        - properties
    DataLakeStoreAccount:
      allOf:
        - $ref: "#/components/schemas/Resource"
      description: Data Lake Store account information.
      properties:
        identity:
          $ref: "#/components/schemas/EncryptionIdentity"
        properties:
          $ref: "#/components/schemas/DataLakeStoreAccountProperties"
    DataLakeStoreAccountBasic:
      allOf:
        - $ref: "#/components/schemas/Resource"
      description: Basic Data Lake Store account information, returned on list calls.
      properties:
        properties:
          $ref: "#/components/schemas/DataLakeStoreAccountPropertiesBasic"
    DataLakeStoreAccountListResult:
      description: Data Lake Store account list information response.
      properties:
        nextLink:
          description: The link (url) to the next page of results.
          readOnly: true
          type: string
        value:
          description: The results of the list operation.
          items:
            $ref: "#/components/schemas/DataLakeStoreAccountBasic"
          readOnly: true
          type: array
    DataLakeStoreAccountProperties:
      allOf:
        - $ref: "#/components/schemas/DataLakeStoreAccountPropertiesBasic"
      description: Data Lake Store account properties information.
      properties:
        currentTier:
          description: The commitment tier in use for the current month.
          enum:
            - Consumption
            - Commitment_1TB
            - Commitment_10TB
            - Commitment_100TB
            - Commitment_500TB
            - Commitment_1PB
            - Commitment_5PB
          readOnly: true
          type: string
          x-ms-enum:
            modelAsString: false
            name: TierType
        defaultGroup:
          description: The default owner group for all new folders and files created in the
            Data Lake Store account.
          readOnly: true
          type: string
        encryptionConfig:
          $ref: "#/components/schemas/EncryptionConfig"
        encryptionProvisioningState:
          description: The current state of encryption provisioning for this Data Lake
            Store account.
          enum:
            - Creating
            - Succeeded
          readOnly: true
          type: string
          x-ms-enum:
            modelAsString: false
            name: EncryptionProvisioningState
        encryptionState:
          description: The current state of encryption for this Data Lake Store account.
          enum:
            - Enabled
            - Disabled
          readOnly: true
          type: string
          x-ms-enum:
            modelAsString: false
            name: EncryptionState
        firewallAllowAzureIps:
          description: The current state of allowing or disallowing IPs originating within
            Azure through the firewall. If the firewall is disabled, this is not
            enforced.
          enum:
            - Enabled
            - Disabled
          readOnly: true
          type: string
          x-ms-enum:
            modelAsString: false
            name: FirewallAllowAzureIpsState
        firewallRules:
          description: The list of firewall rules associated with this Data Lake Store
            account.
          items:
            $ref: "#/components/schemas/FirewallRule"
          readOnly: true
          type: array
        firewallState:
          description: The current state of the IP address firewall for this Data Lake
            Store account.
          enum:
            - Enabled
            - Disabled
          readOnly: true
          type: string
          x-ms-enum:
            modelAsString: false
            name: FirewallState
        newTier:
          description: The commitment tier to use for next month.
          enum:
            - Consumption
            - Commitment_1TB
            - Commitment_10TB
            - Commitment_100TB
            - Commitment_500TB
            - Commitment_1PB
            - Commitment_5PB
          readOnly: true
          type: string
          x-ms-enum:
            modelAsString: false
            name: TierType
        trustedIdProviderState:
          description: The current state of the trusted identity provider feature for this
            Data Lake Store account.
          enum:
            - Enabled
            - Disabled
          readOnly: true
          type: string
          x-ms-enum:
            modelAsString: false
            name: TrustedIdProviderState
        trustedIdProviders:
          description: The list of trusted identity providers associated with this Data
            Lake Store account.
          items:
            $ref: "#/components/schemas/TrustedIdProvider"
          readOnly: true
          type: array
        virtualNetworkRules:
          description: The list of virtual network rules associated with this Data Lake
            Store account.
          items:
            $ref: "#/components/schemas/VirtualNetworkRule"
          readOnly: true
          type: array
    DataLakeStoreAccountPropertiesBasic:
      description: The basic account specific properties that are associated with an
        underlying Data Lake Store account.
      properties:
        accountId:
          description: The unique identifier associated with this Data Lake Store account.
          format: uuid
          readOnly: true
          type: string
        creationTime:
          description: The account creation time.
          format: date-time
          readOnly: true
          type: string
        endpoint:
          description: The full CName endpoint for this account.
          readOnly: true
          type: string
        lastModifiedTime:
          description: The account last modified time.
          format: date-time
          readOnly: true
          type: string
        provisioningState:
          description: The provisioning status of the Data Lake Store account.
          enum:
            - Failed
            - Creating
            - Running
            - Succeeded
            - Patching
            - Suspending
            - Resuming
            - Deleting
            - Deleted
            - Undeleting
            - Canceled
          readOnly: true
          type: string
          x-ms-enum:
            modelAsString: false
            name: DataLakeStoreAccountStatus
        state:
          description: The state of the Data Lake Store account.
          enum:
            - Active
            - Suspended
          readOnly: true
          type: string
          x-ms-enum:
            modelAsString: false
            name: DataLakeStoreAccountState
    EncryptionConfig:
      description: The encryption configuration for the account.
      properties:
        keyVaultMetaInfo:
          $ref: "#/components/schemas/KeyVaultMetaInfo"
        type:
          description: The type of encryption configuration being used. Currently the only
            supported types are 'UserManaged' and 'ServiceManaged'.
          enum:
            - UserManaged
            - ServiceManaged
          type: string
          x-ms-enum:
            modelAsString: false
            name: EncryptionConfigType
      required:
        - type
    EncryptionIdentity:
      description: The encryption identity properties.
      properties:
        principalId:
          description: The principal identifier associated with the encryption.
          format: uuid
          readOnly: true
          type: string
        tenantId:
          description: The tenant identifier associated with the encryption.
          format: uuid
          readOnly: true
          type: string
        type:
          description: The type of encryption being used. Currently the only supported type
            is 'SystemAssigned'.
          enum:
            - SystemAssigned
          type: string
          x-ms-enum:
            modelAsString: false
            name: EncryptionIdentityType
      required:
        - type
    FirewallRule:
      allOf:
        - $ref: "#/components/schemas/SubResource"
      description: Data Lake Store firewall rule information.
      properties:
        properties:
          $ref: "#/components/schemas/FirewallRuleProperties"
    FirewallRuleListResult:
      description: Data Lake Store firewall rule list information.
      properties:
        nextLink:
          description: The link (url) to the next page of results.
          readOnly: true
          type: string
        value:
          description: The results of the list operation.
          items:
            $ref: "#/components/schemas/FirewallRule"
          readOnly: true
          type: array
    FirewallRuleProperties:
      description: The firewall rule properties.
      properties:
        endIpAddress:
          description: The end IP address for the firewall rule. This can be either ipv4 or
            ipv6. Start and End should be in the same protocol.
          readOnly: true
          type: string
        startIpAddress:
          description: The start IP address for the firewall rule. This can be either ipv4
            or ipv6. Start and End should be in the same protocol.
          readOnly: true
          type: string
    KeyVaultMetaInfo:
      description: Metadata information used by account encryption.
      properties:
        encryptionKeyName:
          description: The name of the user managed encryption key.
          type: string
        encryptionKeyVersion:
          description: The version of the user managed encryption key.
          type: string
        keyVaultResourceId:
          description: The resource identifier for the user managed Key Vault being used to
            encrypt.
          type: string
      required:
        - keyVaultResourceId
        - encryptionKeyName
        - encryptionKeyVersion
    NameAvailabilityInformation:
      description: Data Lake Store account name availability result information.
      properties:
        message:
          description: The message describing why the Data Lake Store account name is not
            available, if nameAvailable is false.
          readOnly: true
          type: string
        nameAvailable:
          description: The Boolean value of true or false to indicate whether the Data Lake
            Store account name is available or not.
          readOnly: true
          type: boolean
        reason:
          description: The reason why the Data Lake Store account name is not available, if
            nameAvailable is false.
          readOnly: true
          type: string
    Operation:
      description: An available operation for Data Lake Store.
      properties:
        display:
          $ref: "#/components/schemas/OperationDisplay"
        name:
          description: The name of the operation.
          readOnly: true
          type: string
        origin:
          description: The intended executor of the operation.
          enum:
            - user
            - system
            - user,system
          readOnly: true
          type: string
          x-ms-enum:
            modelAsString: true
            name: OperationOrigin
    OperationDisplay:
      description: The display information for a particular operation.
      properties:
        description:
          description: A friendly description of the operation.
          readOnly: true
          type: string
        operation:
          description: A friendly name of the operation.
          readOnly: true
          type: string
        provider:
          description: The resource provider of the operation.
          readOnly: true
          type: string
        resource:
          description: The resource type of the operation.
          readOnly: true
          type: string
    OperationListResult:
      description: The list of available operations for Data Lake Store.
      properties:
        nextLink:
          description: The link (url) to the next page of results.
          readOnly: true
          type: string
        value:
          description: The results of the list operation.
          items:
            $ref: "#/components/schemas/Operation"
          readOnly: true
          type: array
    Resource:
      description: The resource model definition.
      properties:
        id:
          description: The resource identifier.
          readOnly: true
          type: string
        location:
          description: The resource location.
          readOnly: true
          type: string
        name:
          description: The resource name.
          readOnly: true
          type: string
        tags:
          additionalProperties:
            type: string
          description: The resource tags.
          readOnly: true
          type: object
        type:
          description: The resource type.
          readOnly: true
          type: string
      x-ms-azure-resource: true
    SubResource:
      description: The resource model definition for a nested resource.
      properties:
        id:
          description: The resource identifier.
          readOnly: true
          type: string
        name:
          description: The resource name.
          readOnly: true
          type: string
        type:
          description: The resource type.
          readOnly: true
          type: string
      x-ms-azure-resource: true
    TrustedIdProvider:
      allOf:
        - $ref: "#/components/schemas/SubResource"
      description: Data Lake Store trusted identity provider information.
      properties:
        properties:
          $ref: "#/components/schemas/TrustedIdProviderProperties"
    TrustedIdProviderListResult:
      description: Data Lake Store trusted identity provider list information.
      properties:
        nextLink:
          description: The link (url) to the next page of results.
          readOnly: true
          type: string
        value:
          description: The results of the list operation.
          items:
            $ref: "#/components/schemas/TrustedIdProvider"
          readOnly: true
          type: array
    TrustedIdProviderProperties:
      description: The trusted identity provider properties.
      properties:
        idProvider:
          description: The URL of this trusted identity provider.
          readOnly: true
          type: string
    UpdateDataLakeStoreAccountParameters:
      description: Data Lake Store account information to update.
      properties:
        properties:
          $ref: "#/components/schemas/UpdateDataLakeStoreAccountProperties"
        tags:
          additionalProperties:
            type: string
          description: Resource tags
          type: object
    UpdateDataLakeStoreAccountProperties:
      description: Data Lake Store account properties information to be updated.
      properties:
        defaultGroup:
          description: The default owner group for all new folders and files created in the
            Data Lake Store account.
          type: string
        encryptionConfig:
          $ref: "#/components/schemas/UpdateEncryptionConfig"
        firewallAllowAzureIps:
          description: The current state of allowing or disallowing IPs originating within
            Azure through the firewall. If the firewall is disabled, this is not
            enforced.
          enum:
            - Enabled
            - Disabled
          type: string
          x-ms-enum:
            modelAsString: false
            name: FirewallAllowAzureIpsState
        firewallRules:
          description: The list of firewall rules associated with this Data Lake Store
            account.
          items:
            $ref: "#/components/schemas/UpdateFirewallRuleWithAccountParameters"
          type: array
        firewallState:
          description: The current state of the IP address firewall for this Data Lake
            Store account. Disabling the firewall does not remove existing
            rules, they will just be ignored until the firewall is re-enabled.
          enum:
            - Enabled
            - Disabled
          type: string
          x-ms-enum:
            modelAsString: false
            name: FirewallState
        newTier:
          description: The commitment tier to use for next month.
          enum:
            - Consumption
            - Commitment_1TB
            - Commitment_10TB
            - Commitment_100TB
            - Commitment_500TB
            - Commitment_1PB
            - Commitment_5PB
          type: string
          x-ms-enum:
            modelAsString: false
            name: TierType
        trustedIdProviderState:
          description: The current state of the trusted identity provider feature for this
            Data Lake Store account. Disabling trusted identity provider
            functionality does not remove the providers, they will just be
            ignored until this feature is re-enabled.
          enum:
            - Enabled
            - Disabled
          type: string
          x-ms-enum:
            modelAsString: false
            name: TrustedIdProviderState
        trustedIdProviders:
          description: The list of trusted identity providers associated with this Data
            Lake Store account.
          items:
            $ref: "#/components/schemas/UpdateTrustedIdProviderWithAccountParameters"
          type: array
        virtualNetworkRules:
          description: The list of virtual network rules associated with this Data Lake
            Store account.
          items:
            $ref: "#/components/schemas/UpdateVirtualNetworkRuleWithAccountParamete\
              rs"
          type: array
    UpdateEncryptionConfig:
      description: The encryption configuration used to update a user managed Key Vault key.
      properties:
        keyVaultMetaInfo:
          $ref: "#/components/schemas/UpdateKeyVaultMetaInfo"
    UpdateFirewallRuleParameters:
      description: The parameters used to update a firewall rule.
      properties:
        properties:
          $ref: "#/components/schemas/UpdateFirewallRuleProperties"
    UpdateFirewallRuleProperties:
      description: The firewall rule properties to use when updating a firewall rule.
      properties:
        endIpAddress:
          description: The end IP address for the firewall rule. This can be either ipv4 or
            ipv6. Start and End should be in the same protocol.
          type: string
        startIpAddress:
          description: The start IP address for the firewall rule. This can be either ipv4
            or ipv6. Start and End should be in the same protocol.
          type: string
    UpdateFirewallRuleWithAccountParameters:
      description: The parameters used to update a firewall rule while updating a Data Lake
        Store account.
      properties:
        name:
          description: The unique name of the firewall rule to update.
          type: string
        properties:
          $ref: "#/components/schemas/UpdateFirewallRuleProperties"
      required:
        - name
    UpdateKeyVaultMetaInfo:
      description: The Key Vault update information used for user managed key rotation.
      properties:
        encryptionKeyVersion:
          description: The version of the user managed encryption key to update through a
            key rotation.
          type: string
    UpdateTrustedIdProviderParameters:
      description: The parameters used to update a trusted identity provider.
      properties:
        properties:
          $ref: "#/components/schemas/UpdateTrustedIdProviderProperties"
    UpdateTrustedIdProviderProperties:
      description: The trusted identity provider properties to use when updating a trusted
        identity provider.
      properties:
        idProvider:
          description: The URL of this trusted identity provider.
          type: string
    UpdateTrustedIdProviderWithAccountParameters:
      description: The parameters used to update a trusted identity provider while updating
        a Data Lake Store account.
      properties:
        name:
          description: The unique name of the trusted identity provider to update.
          type: string
        properties:
          $ref: "#/components/schemas/UpdateTrustedIdProviderProperties"
      required:
        - name
    UpdateVirtualNetworkRuleParameters:
      description: The parameters used to update a virtual network rule.
      properties:
        properties:
          $ref: "#/components/schemas/UpdateVirtualNetworkRuleProperties"
    UpdateVirtualNetworkRuleProperties:
      description: The virtual network rule properties to use when updating a virtual
        network rule.
      properties:
        subnetId:
          description: The resource identifier for the subnet.
          type: string
    UpdateVirtualNetworkRuleWithAccountParameters:
      description: The parameters used to update a virtual network rule while updating a
        Data Lake Store account.
      properties:
        name:
          description: The unique name of the virtual network rule to update.
          type: string
        properties:
          $ref: "#/components/schemas/UpdateVirtualNetworkRuleProperties"
      required:
        - name
    Usage:
      description: Describes the Resource Usage.
      properties:
        currentValue:
          description: Gets the current count of the allocated resources in the
            subscription.
          format: int32
          readOnly: true
          type: integer
        id:
          description: Resource identifier.
          readOnly: true
          type: string
        limit:
          description: Gets the maximum count of the resources that can be allocated in the
            subscription.
          format: int32
          readOnly: true
          type: integer
        name:
          $ref: "#/components/schemas/UsageName"
        unit:
          description: Gets the unit of measurement.
          enum:
            - Count
            - Bytes
            - Seconds
            - Percent
            - CountsPerSecond
            - BytesPerSecond
          readOnly: true
          type: string
          x-ms-enum:
            modelAsString: false
            name: UsageUnit
    UsageListResult:
      description: The response from the List Usages operation.
      properties:
        value:
          description: Gets or sets the list of Storage Resource Usages.
          items:
            $ref: "#/components/schemas/Usage"
          type: array
    UsageName:
      description: The usage names that can be used.
      properties:
        localizedValue:
          description: Gets a localized string describing the resource name.
          readOnly: true
          type: string
        value:
          description: Gets a string describing the resource name.
          readOnly: true
          type: string
    VirtualNetworkRule:
      allOf:
        - $ref: "#/components/schemas/SubResource"
      description: Data Lake Store virtual network rule information.
      properties:
        properties:
          $ref: "#/components/schemas/VirtualNetworkRuleProperties"
    VirtualNetworkRuleListResult:
      description: Data Lake Store virtual network rule list information.
      properties:
        nextLink:
          description: The link (url) to the next page of results.
          readOnly: true
          type: string
        value:
          description: The results of the list operation.
          items:
            $ref: "#/components/schemas/VirtualNetworkRule"
          readOnly: true
          type: array
    VirtualNetworkRuleProperties:
      description: The virtual network rule properties.
      properties:
        subnetId:
          description: The resource identifier for the subnet.
          readOnly: true
          type: string
