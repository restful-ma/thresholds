openapi: 3.0.0
info:
  version: 2015-04-16
  x-release: v4
  title: AWS Directory Service
  description: <fullname>AWS Directory Service</fullname> <p>AWS Directory Service is a web
    service that makes it easy for you to setup and run directories in the AWS
    cloud, or connect your AWS resources with an existing on-premises Microsoft
    Active Directory. This guide provides detailed information about AWS
    Directory Service operations, data types, parameters, and errors. For
    information about AWS Directory Services features, see <a
    href="https://aws.amazon.com/directoryservice/">AWS Directory Service</a>
    and the <a
    href="http://docs.aws.amazon.com/directoryservice/latest/admin-guide/what_is.html">AWS
    Directory Service Administration Guide</a>.</p> <note> <p>AWS provides SDKs
    that consist of libraries and sample code for various programming languages
    and platforms (Java, Ruby, .Net, iOS, Android, etc.). The SDKs provide a
    convenient way to create programmatic access to AWS Directory Service and
    other AWS services. For more information about the AWS SDKs, including how
    to download and install them, see <a
    href="http://aws.amazon.com/tools/">Tools for Amazon Web Services</a>.</p>
    </note>
  x-logo:
    url: https://twitter.com/awscloud/profile_image?size=original
    backgroundColor: "#FFFFFF"
  termsOfService: https://aws.amazon.com/service-terms/
  contact:
    name: Mike Ralphson
    email: mike.ralphson@gmail.com
    url: https://github.com/mermade/aws2openapi
    x-twitter: PermittedSoc
  license:
    name: Apache 2.0 License
    url: http://www.apache.org/licenses/
  x-providerName: amazonaws.com
  x-serviceName: ds
  x-origin:
    - contentType: application/json
      url: https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/ds-2015-04-16.normal.json
      converter:
        url: https://github.com/mermade/aws2openapi
        version: 1.0.0
      x-apisguru-direct: true
  x-apiClientRegistration:
    url: https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct
  x-apisguru-categories:
    - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: https://docs.aws.amazon.com/ds/
x-hasEquivalentPaths: true
security:
  - hmac: []
paths:
  /#X-Amz-Target=DirectoryService_20150416.AcceptSharedDirectory:
    post:
      operationId: AcceptSharedDirectory
      description: Accepts a directory sharing request that was sent from the directory
        owner account.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AcceptSharedDirectoryResult"
        "480":
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterException"
        "481":
          description: EntityDoesNotExistException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EntityDoesNotExistException"
        "482":
          description: DirectoryAlreadySharedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DirectoryAlreadySharedException"
        "483":
          description: ClientException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ClientException"
        "484":
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - DirectoryService_20150416.AcceptSharedDirectory
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AcceptSharedDirectoryRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=DirectoryService_20150416.AddIpRoutes:
    post:
      operationId: AddIpRoutes
      description: '<p>If the DNS server for your on-premises domain uses a publicly
        addressable IP address, you must add a CIDR address block to correctly
        route traffic to and from your Microsoft AD on Amazon Web Services.
        <i>AddIpRoutes</i> adds this address block. You can also use
        <i>AddIpRoutes</i> to facilitate routing traffic that uses public IP
        ranges from your Microsoft AD on AWS to a peer VPC. </p> <p>Before you
        call <i>AddIpRoutes</i>, ensure that all of the required permissions
        have been explicitly granted through a policy. For details about what
        permissions are required to run the <i>AddIpRoutes</i> operation, see <a
        href="http://docs.aws.amazon.com/directoryservice/latest/admin-guide/UsingWithDS_IAM_ResourcePermissions.html">AWS
        Directory Service API Permissions: Actions, Resources, and Conditions
        Reference</a>.</p>'
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AddIpRoutesResult"
        "480":
          description: EntityDoesNotExistException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EntityDoesNotExistException"
        "481":
          description: EntityAlreadyExistsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EntityAlreadyExistsException"
        "482":
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterException"
        "483":
          description: DirectoryUnavailableException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DirectoryUnavailableException"
        "484":
          description: IpRouteLimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/IpRouteLimitExceededException"
        "485":
          description: ClientException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ClientException"
        "486":
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - DirectoryService_20150416.AddIpRoutes
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AddIpRoutesRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=DirectoryService_20150416.AddTagsToResource:
    post:
      operationId: AddTagsToResource
      description: Adds or overwrites one or more tags for the specified directory. Each
        directory can have a maximum of 50 tags. Each tag consists of a key and
        optional value. Tag keys must be unique to each resource.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AddTagsToResourceResult"
        "480":
          description: EntityDoesNotExistException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EntityDoesNotExistException"
        "481":
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterException"
        "482":
          description: TagLimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TagLimitExceededException"
        "483":
          description: ClientException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ClientException"
        "484":
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - DirectoryService_20150416.AddTagsToResource
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AddTagsToResourceRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=DirectoryService_20150416.CancelSchemaExtension:
    post:
      operationId: CancelSchemaExtension
      description: Cancels an in-progress schema extension to a Microsoft AD directory.
        Once a schema extension has started replicating to all domain
        controllers, the task can no longer be canceled. A schema extension can
        be canceled during any of the following states;
        <code>Initializing</code>, <code>CreatingSnapshot</code>, and
        <code>UpdatingSchema</code>.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CancelSchemaExtensionResult"
        "480":
          description: EntityDoesNotExistException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EntityDoesNotExistException"
        "481":
          description: ClientException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ClientException"
        "482":
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - DirectoryService_20150416.CancelSchemaExtension
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CancelSchemaExtensionRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=DirectoryService_20150416.ConnectDirectory:
    post:
      operationId: ConnectDirectory
      description: '<p>Creates an AD Connector to connect to an on-premises directory.</p>
        <p>Before you call <code>ConnectDirectory</code>, ensure that all of the
        required permissions have been explicitly granted through a policy. For
        details about what permissions are required to run the
        <code>ConnectDirectory</code> operation, see <a
        href="http://docs.aws.amazon.com/directoryservice/latest/admin-guide/UsingWithDS_IAM_ResourcePermissions.html">AWS
        Directory Service API Permissions: Actions, Resources, and Conditions
        Reference</a>.</p>'
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConnectDirectoryResult"
        "480":
          description: DirectoryLimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DirectoryLimitExceededException"
        "481":
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterException"
        "482":
          description: ClientException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ClientException"
        "483":
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - DirectoryService_20150416.ConnectDirectory
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ConnectDirectoryRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=DirectoryService_20150416.CreateAlias:
    post:
      operationId: CreateAlias
      description: <p>Creates an alias for a directory and assigns the alias to the
        directory. The alias is used to construct the access URL for the
        directory, such as <code>http://&lt;alias&gt;.awsapps.com</code>.</p>
        <important> <p>After an alias has been created, it cannot be deleted or
        reused, so this operation should only be used when absolutely
        necessary.</p> </important>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateAliasResult"
        "480":
          description: EntityAlreadyExistsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EntityAlreadyExistsException"
        "481":
          description: EntityDoesNotExistException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EntityDoesNotExistException"
        "482":
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterException"
        "483":
          description: ClientException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ClientException"
        "484":
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - DirectoryService_20150416.CreateAlias
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateAliasRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=DirectoryService_20150416.CreateComputer:
    post:
      operationId: CreateComputer
      description: Creates a computer account in the specified directory, and joins the
        computer to the directory.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateComputerResult"
        "480":
          description: AuthenticationFailedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthenticationFailedException"
        "481":
          description: DirectoryUnavailableException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DirectoryUnavailableException"
        "482":
          description: EntityAlreadyExistsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EntityAlreadyExistsException"
        "483":
          description: EntityDoesNotExistException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EntityDoesNotExistException"
        "484":
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterException"
        "485":
          description: UnsupportedOperationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnsupportedOperationException"
        "486":
          description: ClientException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ClientException"
        "487":
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - DirectoryService_20150416.CreateComputer
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateComputerRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=DirectoryService_20150416.CreateConditionalForwarder:
    post:
      operationId: CreateConditionalForwarder
      description: Creates a conditional forwarder associated with your AWS directory.
        Conditional forwarders are required in order to set up a trust
        relationship with another domain. The conditional forwarder points to
        the trusted domain.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateConditionalForwarderResult"
        "480":
          description: EntityAlreadyExistsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EntityAlreadyExistsException"
        "481":
          description: EntityDoesNotExistException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EntityDoesNotExistException"
        "482":
          description: DirectoryUnavailableException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DirectoryUnavailableException"
        "483":
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterException"
        "484":
          description: UnsupportedOperationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnsupportedOperationException"
        "485":
          description: ClientException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ClientException"
        "486":
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - DirectoryService_20150416.CreateConditionalForwarder
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateConditionalForwarderRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=DirectoryService_20150416.CreateDirectory:
    post:
      operationId: CreateDirectory
      description: '<p>Creates a Simple AD directory.</p> <p>Before you call
        <code>CreateDirectory</code>, ensure that all of the required
        permissions have been explicitly granted through a policy. For details
        about what permissions are required to run the
        <code>CreateDirectory</code> operation, see <a
        href="http://docs.aws.amazon.com/directoryservice/latest/admin-guide/UsingWithDS_IAM_ResourcePermissions.html">AWS
        Directory Service API Permissions: Actions, Resources, and Conditions
        Reference</a>.</p>'
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateDirectoryResult"
        "480":
          description: DirectoryLimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DirectoryLimitExceededException"
        "481":
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterException"
        "482":
          description: ClientException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ClientException"
        "483":
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - DirectoryService_20150416.CreateDirectory
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateDirectoryRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=DirectoryService_20150416.CreateLogSubscription:
    post:
      operationId: CreateLogSubscription
      description: Creates a subscription to forward real time Directory Service domain
        controller security logs to the specified CloudWatch log group in your
        AWS account.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateLogSubscriptionResult"
        "480":
          description: EntityAlreadyExistsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EntityAlreadyExistsException"
        "481":
          description: EntityDoesNotExistException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EntityDoesNotExistException"
        "482":
          description: UnsupportedOperationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnsupportedOperationException"
        "483":
          description: InsufficientPermissionsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InsufficientPermissionsException"
        "484":
          description: ClientException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ClientException"
        "485":
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - DirectoryService_20150416.CreateLogSubscription
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateLogSubscriptionRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=DirectoryService_20150416.CreateMicrosoftAD:
    post:
      operationId: CreateMicrosoftAD
      description: '<p>Creates an AWS Managed Microsoft AD directory.</p> <p>Before you
        call <i>CreateMicrosoftAD</i>, ensure that all of the required
        permissions have been explicitly granted through a policy. For details
        about what permissions are required to run the <i>CreateMicrosoftAD</i>
        operation, see <a
        href="http://docs.aws.amazon.com/directoryservice/latest/admin-guide/UsingWithDS_IAM_ResourcePermissions.html">AWS
        Directory Service API Permissions: Actions, Resources, and Conditions
        Reference</a>.</p>'
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateMicrosoftADResult"
        "480":
          description: DirectoryLimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DirectoryLimitExceededException"
        "481":
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterException"
        "482":
          description: ClientException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ClientException"
        "483":
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceException"
        "484":
          description: UnsupportedOperationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnsupportedOperationException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - DirectoryService_20150416.CreateMicrosoftAD
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateMicrosoftADRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=DirectoryService_20150416.CreateSnapshot:
    post:
      operationId: CreateSnapshot
      description: <p>Creates a snapshot of a Simple AD or Microsoft AD directory in the
        AWS cloud.</p> <note> <p>You cannot take snapshots of AD Connector
        directories.</p> </note>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateSnapshotResult"
        "480":
          description: EntityDoesNotExistException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EntityDoesNotExistException"
        "481":
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterException"
        "482":
          description: SnapshotLimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SnapshotLimitExceededException"
        "483":
          description: ClientException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ClientException"
        "484":
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - DirectoryService_20150416.CreateSnapshot
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateSnapshotRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=DirectoryService_20150416.CreateTrust:
    post:
      operationId: CreateTrust
      description: <p>AWS Directory Service for Microsoft Active Directory allows you to
        configure trust relationships. For example, you can establish a trust
        between your AWS Managed Microsoft AD directory, and your existing
        on-premises Microsoft Active Directory. This would allow you to provide
        users and groups access to resources in either domain, with a single set
        of credentials.</p> <p>This action initiates the creation of the AWS
        side of a trust relationship between an AWS Managed Microsoft AD
        directory and an external domain. You can create either a forest trust
        or an external trust.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateTrustResult"
        "480":
          description: EntityAlreadyExistsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EntityAlreadyExistsException"
        "481":
          description: EntityDoesNotExistException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EntityDoesNotExistException"
        "482":
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterException"
        "483":
          description: ClientException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ClientException"
        "484":
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceException"
        "485":
          description: UnsupportedOperationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnsupportedOperationException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - DirectoryService_20150416.CreateTrust
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateTrustRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=DirectoryService_20150416.DeleteConditionalForwarder:
    post:
      operationId: DeleteConditionalForwarder
      description: Deletes a conditional forwarder that has been set up for your AWS
        directory.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteConditionalForwarderResult"
        "480":
          description: EntityDoesNotExistException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EntityDoesNotExistException"
        "481":
          description: DirectoryUnavailableException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DirectoryUnavailableException"
        "482":
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterException"
        "483":
          description: UnsupportedOperationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnsupportedOperationException"
        "484":
          description: ClientException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ClientException"
        "485":
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - DirectoryService_20150416.DeleteConditionalForwarder
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeleteConditionalForwarderRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=DirectoryService_20150416.DeleteDirectory:
    post:
      operationId: DeleteDirectory
      description: '<p>Deletes an AWS Directory Service directory.</p> <p>Before you call
        <code>DeleteDirectory</code>, ensure that all of the required
        permissions have been explicitly granted through a policy. For details
        about what permissions are required to run the
        <code>DeleteDirectory</code> operation, see <a
        href="http://docs.aws.amazon.com/directoryservice/latest/admin-guide/UsingWithDS_IAM_ResourcePermissions.html">AWS
        Directory Service API Permissions: Actions, Resources, and Conditions
        Reference</a>.</p>'
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteDirectoryResult"
        "480":
          description: EntityDoesNotExistException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EntityDoesNotExistException"
        "481":
          description: ClientException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ClientException"
        "482":
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - DirectoryService_20150416.DeleteDirectory
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeleteDirectoryRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=DirectoryService_20150416.DeleteLogSubscription:
    post:
      operationId: DeleteLogSubscription
      description: Deletes the specified log subscription.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteLogSubscriptionResult"
        "480":
          description: EntityDoesNotExistException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EntityDoesNotExistException"
        "481":
          description: UnsupportedOperationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnsupportedOperationException"
        "482":
          description: ClientException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ClientException"
        "483":
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - DirectoryService_20150416.DeleteLogSubscription
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeleteLogSubscriptionRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=DirectoryService_20150416.DeleteSnapshot:
    post:
      operationId: DeleteSnapshot
      description: Deletes a directory snapshot.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteSnapshotResult"
        "480":
          description: EntityDoesNotExistException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EntityDoesNotExistException"
        "481":
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterException"
        "482":
          description: ClientException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ClientException"
        "483":
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - DirectoryService_20150416.DeleteSnapshot
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeleteSnapshotRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=DirectoryService_20150416.DeleteTrust:
    post:
      operationId: DeleteTrust
      description: Deletes an existing trust relationship between your AWS Managed
        Microsoft AD directory and an external domain.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteTrustResult"
        "480":
          description: EntityDoesNotExistException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EntityDoesNotExistException"
        "481":
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterException"
        "482":
          description: ClientException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ClientException"
        "483":
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceException"
        "484":
          description: UnsupportedOperationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnsupportedOperationException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - DirectoryService_20150416.DeleteTrust
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeleteTrustRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=DirectoryService_20150416.DeregisterEventTopic:
    post:
      operationId: DeregisterEventTopic
      description: Removes the specified directory as a publisher to the specified SNS
        topic.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeregisterEventTopicResult"
        "480":
          description: EntityDoesNotExistException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EntityDoesNotExistException"
        "481":
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterException"
        "482":
          description: ClientException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ClientException"
        "483":
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - DirectoryService_20150416.DeregisterEventTopic
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeregisterEventTopicRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=DirectoryService_20150416.DescribeConditionalForwarders:
    post:
      operationId: DescribeConditionalForwarders
      description: <p>Obtains information about the conditional forwarders for this
        account.</p> <p>If no input parameters are provided for
        RemoteDomainNames, this request describes all conditional forwarders for
        the specified directory ID.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeConditionalForwardersResult"
        "480":
          description: EntityDoesNotExistException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EntityDoesNotExistException"
        "481":
          description: DirectoryUnavailableException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DirectoryUnavailableException"
        "482":
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterException"
        "483":
          description: UnsupportedOperationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnsupportedOperationException"
        "484":
          description: ClientException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ClientException"
        "485":
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - DirectoryService_20150416.DescribeConditionalForwarders
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DescribeConditionalForwardersRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=DirectoryService_20150416.DescribeDirectories:
    post:
      operationId: DescribeDirectories
      description: <p>Obtains information about the directories that belong to this
        account.</p> <p>You can retrieve information about specific directories
        by passing the directory identifiers in the <code>DirectoryIds</code>
        parameter. Otherwise, all directories that belong to the current account
        are returned.</p> <p>This operation supports pagination with the use of
        the <code>NextToken</code> request and response parameters. If more
        results are available, the
        <code>DescribeDirectoriesResult.NextToken</code> member contains a token
        that you pass in the next call to <a>DescribeDirectories</a> to retrieve
        the next set of items.</p> <p>You can also specify a maximum number of
        return results with the <code>Limit</code> parameter.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeDirectoriesResult"
        "480":
          description: EntityDoesNotExistException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EntityDoesNotExistException"
        "481":
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterException"
        "482":
          description: InvalidNextTokenException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidNextTokenException"
        "483":
          description: ClientException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ClientException"
        "484":
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - DirectoryService_20150416.DescribeDirectories
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DescribeDirectoriesRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=DirectoryService_20150416.DescribeDomainControllers:
    post:
      operationId: DescribeDomainControllers
      description: Provides information about any domain controllers in your directory.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeDomainControllersResult"
        "480":
          description: EntityDoesNotExistException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EntityDoesNotExistException"
        "481":
          description: InvalidNextTokenException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidNextTokenException"
        "482":
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterException"
        "483":
          description: ClientException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ClientException"
        "484":
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceException"
        "485":
          description: UnsupportedOperationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnsupportedOperationException"
      parameters:
        - name: Limit
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: NextToken
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - DirectoryService_20150416.DescribeDomainControllers
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DescribeDomainControllersRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=DirectoryService_20150416.DescribeEventTopics:
    post:
      operationId: DescribeEventTopics
      description: <p>Obtains information about which SNS topics receive status messages
        from the specified directory.</p> <p>If no input parameters are
        provided, such as DirectoryId or TopicName, this request describes all
        of the associations in the account.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeEventTopicsResult"
        "480":
          description: EntityDoesNotExistException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EntityDoesNotExistException"
        "481":
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterException"
        "482":
          description: ClientException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ClientException"
        "483":
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - DirectoryService_20150416.DescribeEventTopics
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DescribeEventTopicsRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=DirectoryService_20150416.DescribeSharedDirectories:
    post:
      operationId: DescribeSharedDirectories
      description: "Returns the shared directories in your account. "
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeSharedDirectoriesResult"
        "480":
          description: EntityDoesNotExistException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EntityDoesNotExistException"
        "481":
          description: InvalidNextTokenException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidNextTokenException"
        "482":
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterException"
        "483":
          description: UnsupportedOperationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnsupportedOperationException"
        "484":
          description: ClientException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ClientException"
        "485":
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - DirectoryService_20150416.DescribeSharedDirectories
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DescribeSharedDirectoriesRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=DirectoryService_20150416.DescribeSnapshots:
    post:
      operationId: DescribeSnapshots
      description: <p>Obtains information about the directory snapshots that belong to this
        account.</p> <p>This operation supports pagination with the use of the
        <i>NextToken</i> request and response parameters. If more results are
        available, the <i>DescribeSnapshots.NextToken</i> member contains a
        token that you pass in the next call to <a>DescribeSnapshots</a> to
        retrieve the next set of items.</p> <p>You can also specify a maximum
        number of return results with the <i>Limit</i> parameter.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeSnapshotsResult"
        "480":
          description: EntityDoesNotExistException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EntityDoesNotExistException"
        "481":
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterException"
        "482":
          description: InvalidNextTokenException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidNextTokenException"
        "483":
          description: ClientException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ClientException"
        "484":
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - DirectoryService_20150416.DescribeSnapshots
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DescribeSnapshotsRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=DirectoryService_20150416.DescribeTrusts:
    post:
      operationId: DescribeTrusts
      description: <p>Obtains information about the trust relationships for this
        account.</p> <p>If no input parameters are provided, such as DirectoryId
        or TrustIds, this request describes all the trust relationships
        belonging to the account.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeTrustsResult"
        "480":
          description: EntityDoesNotExistException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EntityDoesNotExistException"
        "481":
          description: InvalidNextTokenException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidNextTokenException"
        "482":
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterException"
        "483":
          description: ClientException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ClientException"
        "484":
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceException"
        "485":
          description: UnsupportedOperationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnsupportedOperationException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - DirectoryService_20150416.DescribeTrusts
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DescribeTrustsRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=DirectoryService_20150416.DisableRadius:
    post:
      operationId: DisableRadius
      description: Disables multi-factor authentication (MFA) with the Remote
        Authentication Dial In User Service (RADIUS) server for an AD Connector
        or Microsoft AD directory.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DisableRadiusResult"
        "480":
          description: EntityDoesNotExistException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EntityDoesNotExistException"
        "481":
          description: ClientException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ClientException"
        "482":
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - DirectoryService_20150416.DisableRadius
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DisableRadiusRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=DirectoryService_20150416.DisableSso:
    post:
      operationId: DisableSso
      description: Disables single-sign on for a directory.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DisableSsoResult"
        "480":
          description: EntityDoesNotExistException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EntityDoesNotExistException"
        "481":
          description: InsufficientPermissionsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InsufficientPermissionsException"
        "482":
          description: AuthenticationFailedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthenticationFailedException"
        "483":
          description: ClientException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ClientException"
        "484":
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - DirectoryService_20150416.DisableSso
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DisableSsoRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=DirectoryService_20150416.EnableRadius:
    post:
      operationId: EnableRadius
      description: Enables multi-factor authentication (MFA) with the Remote Authentication
        Dial In User Service (RADIUS) server for an AD Connector or Microsoft AD
        directory.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EnableRadiusResult"
        "480":
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterException"
        "481":
          description: EntityAlreadyExistsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EntityAlreadyExistsException"
        "482":
          description: EntityDoesNotExistException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EntityDoesNotExistException"
        "483":
          description: ClientException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ClientException"
        "484":
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - DirectoryService_20150416.EnableRadius
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EnableRadiusRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=DirectoryService_20150416.EnableSso:
    post:
      operationId: EnableSso
      description: Enables single sign-on for a directory.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EnableSsoResult"
        "480":
          description: EntityDoesNotExistException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EntityDoesNotExistException"
        "481":
          description: InsufficientPermissionsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InsufficientPermissionsException"
        "482":
          description: AuthenticationFailedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthenticationFailedException"
        "483":
          description: ClientException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ClientException"
        "484":
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - DirectoryService_20150416.EnableSso
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EnableSsoRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=DirectoryService_20150416.GetDirectoryLimits:
    post:
      operationId: GetDirectoryLimits
      description: Obtains directory limit information for the current region.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetDirectoryLimitsResult"
        "480":
          description: EntityDoesNotExistException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EntityDoesNotExistException"
        "481":
          description: ClientException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ClientException"
        "482":
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - DirectoryService_20150416.GetDirectoryLimits
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GetDirectoryLimitsRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=DirectoryService_20150416.GetSnapshotLimits:
    post:
      operationId: GetSnapshotLimits
      description: Obtains the manual snapshot limits for a directory.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetSnapshotLimitsResult"
        "480":
          description: EntityDoesNotExistException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EntityDoesNotExistException"
        "481":
          description: ClientException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ClientException"
        "482":
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - DirectoryService_20150416.GetSnapshotLimits
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GetSnapshotLimitsRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=DirectoryService_20150416.ListIpRoutes:
    post:
      operationId: ListIpRoutes
      description: Lists the address blocks that you have added to a directory.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListIpRoutesResult"
        "480":
          description: EntityDoesNotExistException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EntityDoesNotExistException"
        "481":
          description: InvalidNextTokenException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidNextTokenException"
        "482":
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterException"
        "483":
          description: ClientException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ClientException"
        "484":
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - DirectoryService_20150416.ListIpRoutes
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ListIpRoutesRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=DirectoryService_20150416.ListLogSubscriptions:
    post:
      operationId: ListLogSubscriptions
      description: Lists the active log subscriptions for the AWS account.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListLogSubscriptionsResult"
        "480":
          description: EntityDoesNotExistException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EntityDoesNotExistException"
        "481":
          description: InvalidNextTokenException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidNextTokenException"
        "482":
          description: ClientException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ClientException"
        "483":
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - DirectoryService_20150416.ListLogSubscriptions
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ListLogSubscriptionsRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=DirectoryService_20150416.ListSchemaExtensions:
    post:
      operationId: ListSchemaExtensions
      description: Lists all schema extensions applied to a Microsoft AD Directory.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListSchemaExtensionsResult"
        "480":
          description: InvalidNextTokenException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidNextTokenException"
        "481":
          description: EntityDoesNotExistException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EntityDoesNotExistException"
        "482":
          description: ClientException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ClientException"
        "483":
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - DirectoryService_20150416.ListSchemaExtensions
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ListSchemaExtensionsRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=DirectoryService_20150416.ListTagsForResource:
    post:
      operationId: ListTagsForResource
      description: Lists all tags on a directory.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListTagsForResourceResult"
        "480":
          description: EntityDoesNotExistException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EntityDoesNotExistException"
        "481":
          description: InvalidNextTokenException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidNextTokenException"
        "482":
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterException"
        "483":
          description: ClientException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ClientException"
        "484":
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - DirectoryService_20150416.ListTagsForResource
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ListTagsForResourceRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=DirectoryService_20150416.RegisterEventTopic:
    post:
      operationId: RegisterEventTopic
      description: Associates a directory with an SNS topic. This establishes the directory
        as a publisher to the specified SNS topic. You can then receive email or
        text (SMS) messages when the status of your directory changes. You get
        notified if your directory goes from an Active status to an Impaired or
        Inoperable status. You also receive a notification when the directory
        returns to an Active status.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RegisterEventTopicResult"
        "480":
          description: EntityDoesNotExistException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EntityDoesNotExistException"
        "481":
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterException"
        "482":
          description: ClientException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ClientException"
        "483":
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - DirectoryService_20150416.RegisterEventTopic
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RegisterEventTopicRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=DirectoryService_20150416.RejectSharedDirectory:
    post:
      operationId: RejectSharedDirectory
      description: Rejects a directory sharing request that was sent from the directory
        owner account.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RejectSharedDirectoryResult"
        "480":
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterException"
        "481":
          description: EntityDoesNotExistException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EntityDoesNotExistException"
        "482":
          description: DirectoryAlreadySharedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DirectoryAlreadySharedException"
        "483":
          description: ClientException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ClientException"
        "484":
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - DirectoryService_20150416.RejectSharedDirectory
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RejectSharedDirectoryRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=DirectoryService_20150416.RemoveIpRoutes:
    post:
      operationId: RemoveIpRoutes
      description: Removes IP address blocks from a directory.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RemoveIpRoutesResult"
        "480":
          description: EntityDoesNotExistException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EntityDoesNotExistException"
        "481":
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterException"
        "482":
          description: DirectoryUnavailableException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DirectoryUnavailableException"
        "483":
          description: ClientException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ClientException"
        "484":
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - DirectoryService_20150416.RemoveIpRoutes
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RemoveIpRoutesRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=DirectoryService_20150416.RemoveTagsFromResource:
    post:
      operationId: RemoveTagsFromResource
      description: Removes tags from a directory.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RemoveTagsFromResourceResult"
        "480":
          description: EntityDoesNotExistException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EntityDoesNotExistException"
        "481":
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterException"
        "482":
          description: ClientException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ClientException"
        "483":
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - DirectoryService_20150416.RemoveTagsFromResource
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RemoveTagsFromResourceRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=DirectoryService_20150416.ResetUserPassword:
    post:
      operationId: ResetUserPassword
      description: Resets the password for any user in your AWS Managed Microsoft AD or
        Simple AD directory.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResetUserPasswordResult"
        "480":
          description: DirectoryUnavailableException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DirectoryUnavailableException"
        "481":
          description: UserDoesNotExistException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserDoesNotExistException"
        "482":
          description: InvalidPasswordException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidPasswordException"
        "483":
          description: UnsupportedOperationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnsupportedOperationException"
        "484":
          description: EntityDoesNotExistException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EntityDoesNotExistException"
        "485":
          description: ClientException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ClientException"
        "486":
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - DirectoryService_20150416.ResetUserPassword
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ResetUserPasswordRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=DirectoryService_20150416.RestoreFromSnapshot:
    post:
      operationId: RestoreFromSnapshot
      description: <p>Restores a directory using an existing directory snapshot.</p>
        <p>When you restore a directory from a snapshot, any changes made to the
        directory after the snapshot date are overwritten.</p> <p>This action
        returns as soon as the restore operation is initiated. You can monitor
        the progress of the restore operation by calling the
        <a>DescribeDirectories</a> operation with the directory identifier. When
        the <b>DirectoryDescription.Stage</b> value changes to
        <code>Active</code>, the restore operation is complete.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestoreFromSnapshotResult"
        "480":
          description: EntityDoesNotExistException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EntityDoesNotExistException"
        "481":
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterException"
        "482":
          description: ClientException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ClientException"
        "483":
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - DirectoryService_20150416.RestoreFromSnapshot
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RestoreFromSnapshotRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=DirectoryService_20150416.ShareDirectory:
    post:
      operationId: ShareDirectory
      description: <p>Shares a specified directory (<code>DirectoryId</code>) in your AWS
        account (directory owner) with another AWS account (directory consumer).
        With this operation you can use your directory from any AWS account and
        from any Amazon VPC within an AWS Region.</p> <p>When you share your AWS
        Managed Microsoft AD directory, AWS Directory Service creates a shared
        directory in the directory consumer account. This shared directory
        contains the metadata to provide access to the directory within the
        directory owner account. The shared directory is visible in all VPCs in
        the directory consumer account.</p> <p>The <code>ShareMethod</code>
        parameter determines whether the specified directory can be shared
        between AWS accounts inside the same AWS organization
        (<code>ORGANIZATIONS</code>). It also determines whether you can share
        the directory with any other AWS account either inside or outside of the
        organization (<code>HANDSHAKE</code>).</p> <p>The
        <code>ShareNotes</code> parameter is only used when
        <code>HANDSHAKE</code> is called, which sends a directory sharing
        request to the directory consumer. </p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ShareDirectoryResult"
        "480":
          description: DirectoryAlreadySharedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DirectoryAlreadySharedException"
        "481":
          description: EntityDoesNotExistException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EntityDoesNotExistException"
        "482":
          description: InvalidTargetException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidTargetException"
        "483":
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterException"
        "484":
          description: ClientException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ClientException"
        "485":
          description: ShareLimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ShareLimitExceededException"
        "486":
          description: OrganizationsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OrganizationsException"
        "487":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "488":
          description: UnsupportedOperationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnsupportedOperationException"
        "489":
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - DirectoryService_20150416.ShareDirectory
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ShareDirectoryRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=DirectoryService_20150416.StartSchemaExtension:
    post:
      operationId: StartSchemaExtension
      description: Applies a schema extension to a Microsoft AD directory.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StartSchemaExtensionResult"
        "480":
          description: DirectoryUnavailableException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DirectoryUnavailableException"
        "481":
          description: EntityDoesNotExistException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EntityDoesNotExistException"
        "482":
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterException"
        "483":
          description: SnapshotLimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SnapshotLimitExceededException"
        "484":
          description: ClientException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ClientException"
        "485":
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - DirectoryService_20150416.StartSchemaExtension
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/StartSchemaExtensionRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=DirectoryService_20150416.UnshareDirectory:
    post:
      operationId: UnshareDirectory
      description: "Stops the directory sharing between the directory owner and consumer
        accounts. "
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnshareDirectoryResult"
        "480":
          description: EntityDoesNotExistException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EntityDoesNotExistException"
        "481":
          description: InvalidTargetException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidTargetException"
        "482":
          description: DirectoryNotSharedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DirectoryNotSharedException"
        "483":
          description: ClientException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ClientException"
        "484":
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - DirectoryService_20150416.UnshareDirectory
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UnshareDirectoryRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=DirectoryService_20150416.UpdateConditionalForwarder:
    post:
      operationId: UpdateConditionalForwarder
      description: Updates a conditional forwarder that has been set up for your AWS
        directory.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateConditionalForwarderResult"
        "480":
          description: EntityDoesNotExistException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EntityDoesNotExistException"
        "481":
          description: DirectoryUnavailableException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DirectoryUnavailableException"
        "482":
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterException"
        "483":
          description: UnsupportedOperationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnsupportedOperationException"
        "484":
          description: ClientException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ClientException"
        "485":
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - DirectoryService_20150416.UpdateConditionalForwarder
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateConditionalForwarderRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=DirectoryService_20150416.UpdateNumberOfDomainControllers:
    post:
      operationId: UpdateNumberOfDomainControllers
      description: Adds or removes domain controllers to or from the directory. Based on
        the difference between current value and new value (provided through
        this API call), domain controllers will be added or removed. It may take
        up to 45 minutes for any new domain controllers to become fully active
        once the requested number of domain controllers is updated. During this
        time, you cannot make another update request.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateNumberOfDomainControllersResult"
        "480":
          description: EntityDoesNotExistException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EntityDoesNotExistException"
        "481":
          description: DirectoryUnavailableException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DirectoryUnavailableException"
        "482":
          description: DomainControllerLimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DomainControllerLimitExceededException"
        "483":
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterException"
        "484":
          description: UnsupportedOperationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnsupportedOperationException"
        "485":
          description: ClientException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ClientException"
        "486":
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - DirectoryService_20150416.UpdateNumberOfDomainControllers
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateNumberOfDomainControllersRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=DirectoryService_20150416.UpdateRadius:
    post:
      operationId: UpdateRadius
      description: Updates the Remote Authentication Dial In User Service (RADIUS) server
        information for an AD Connector or Microsoft AD directory.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateRadiusResult"
        "480":
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterException"
        "481":
          description: EntityDoesNotExistException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EntityDoesNotExistException"
        "482":
          description: ClientException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ClientException"
        "483":
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - DirectoryService_20150416.UpdateRadius
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateRadiusRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=DirectoryService_20150416.UpdateTrust:
    post:
      operationId: UpdateTrust
      description: Updates the trust that has been set up between your AWS Managed
        Microsoft AD directory and an on-premises Active Directory.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateTrustResult"
        "480":
          description: EntityDoesNotExistException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EntityDoesNotExistException"
        "481":
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterException"
        "482":
          description: ClientException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ClientException"
        "483":
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - DirectoryService_20150416.UpdateTrust
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateTrustRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=DirectoryService_20150416.VerifyTrust:
    post:
      operationId: VerifyTrust
      description: <p>AWS Directory Service for Microsoft Active Directory allows you to
        configure and verify trust relationships.</p> <p>This action verifies a
        trust relationship between your AWS Managed Microsoft AD directory and
        an external domain.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/VerifyTrustResult"
        "480":
          description: EntityDoesNotExistException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EntityDoesNotExistException"
        "481":
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterException"
        "482":
          description: ClientException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ClientException"
        "483":
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceException"
        "484":
          description: UnsupportedOperationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnsupportedOperationException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - DirectoryService_20150416.VerifyTrust
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/VerifyTrustRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
servers:
  - url: http://ds.{region}.amazonaws.com
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-south-1
          - sa-east-1
        default: us-east-1
    description: The Directory Service multi-region endpoint
  - url: https://ds.{region}.amazonaws.com
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-south-1
          - sa-east-1
        default: us-east-1
    description: The Directory Service multi-region endpoint
  - url: http://ds.{region}.amazonaws.com.cn
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The Directory Service endpoint for China (Beijing) and China (Ningxia)
  - url: https://ds.{region}.amazonaws.com.cn
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The Directory Service endpoint for China (Beijing) and China (Ningxia)
components:
  parameters:
    X-Amz-Content-Sha256:
      name: X-Amz-Content-Sha256
      in: header
      required: false
      schema:
        type: string
    X-Amz-Date:
      name: X-Amz-Date
      in: header
      required: false
      schema:
        type: string
    X-Amz-Algorithm:
      name: X-Amz-Algorithm
      in: header
      required: false
      schema:
        type: string
    X-Amz-Credential:
      name: X-Amz-Credential
      in: header
      required: false
      schema:
        type: string
    X-Amz-Security-Token:
      name: X-Amz-Security-Token
      in: header
      required: false
      schema:
        type: string
    X-Amz-Signature:
      name: X-Amz-Signature
      in: header
      required: false
      schema:
        type: string
    X-Amz-SignedHeaders:
      name: X-Amz-SignedHeaders
      in: header
      required: false
      schema:
        type: string
  securitySchemes:
    hmac:
      type: apiKey
      name: Authorization
      in: header
      description: Amazon Signature authorization v4
      x-amazon-apigateway-authtype: awsSigv4
  schemas:
    AcceptSharedDirectoryResult:
      type: object
      properties:
        SharedDirectory:
          $ref: "#/components/schemas/SharedDirectory"
    AcceptSharedDirectoryRequest:
      type: object
      required:
        - SharedDirectoryId
      properties:
        SharedDirectoryId:
          $ref: "#/components/schemas/DirectoryId"
    InvalidParameterException: {}
    EntityDoesNotExistException: {}
    DirectoryAlreadySharedException: {}
    ClientException: {}
    ServiceException: {}
    AddIpRoutesResult:
      type: object
      properties: {}
    AddIpRoutesRequest:
      type: object
      required:
        - DirectoryId
        - IpRoutes
      properties:
        DirectoryId:
          $ref: "#/components/schemas/DirectoryId"
        IpRoutes:
          $ref: "#/components/schemas/IpRoutes"
        UpdateSecurityGroupForDirectoryControllers:
          $ref: "#/components/schemas/UpdateSecurityGroupForDirectoryControllers"
    EntityAlreadyExistsException: {}
    DirectoryUnavailableException: {}
    IpRouteLimitExceededException: {}
    AddTagsToResourceResult:
      type: object
      properties: {}
    AddTagsToResourceRequest:
      type: object
      required:
        - ResourceId
        - Tags
      properties:
        ResourceId:
          $ref: "#/components/schemas/ResourceId"
        Tags:
          $ref: "#/components/schemas/Tags"
    TagLimitExceededException: {}
    CancelSchemaExtensionResult:
      type: object
      properties: {}
    CancelSchemaExtensionRequest:
      type: object
      required:
        - DirectoryId
        - SchemaExtensionId
      properties:
        DirectoryId:
          $ref: "#/components/schemas/DirectoryId"
        SchemaExtensionId:
          $ref: "#/components/schemas/SchemaExtensionId"
    ConnectDirectoryResult:
      type: object
      properties:
        DirectoryId:
          $ref: "#/components/schemas/DirectoryId"
      description: Contains the results of the <a>ConnectDirectory</a> operation.
    ConnectDirectoryRequest:
      type: object
      required:
        - Name
        - Password
        - Size
        - ConnectSettings
      properties:
        Name:
          $ref: "#/components/schemas/DirectoryName"
        ShortName:
          $ref: "#/components/schemas/DirectoryShortName"
        Password:
          $ref: "#/components/schemas/ConnectPassword"
        Description:
          $ref: "#/components/schemas/Description"
        Size:
          $ref: "#/components/schemas/DirectorySize"
        ConnectSettings:
          $ref: "#/components/schemas/DirectoryConnectSettings"
        Tags:
          $ref: "#/components/schemas/Tags"
      description: Contains the inputs for the <a>ConnectDirectory</a> operation.
    DirectoryLimitExceededException: {}
    CreateAliasResult:
      type: object
      properties:
        DirectoryId:
          $ref: "#/components/schemas/DirectoryId"
        Alias:
          $ref: "#/components/schemas/AliasName"
      description: Contains the results of the <a>CreateAlias</a> operation.
    CreateAliasRequest:
      type: object
      required:
        - DirectoryId
        - Alias
      properties:
        DirectoryId:
          $ref: "#/components/schemas/DirectoryId"
        Alias:
          $ref: "#/components/schemas/AliasName"
      description: Contains the inputs for the <a>CreateAlias</a> operation.
    CreateComputerResult:
      type: object
      properties:
        Computer:
          $ref: "#/components/schemas/Computer"
      description: Contains the results for the <a>CreateComputer</a> operation.
    CreateComputerRequest:
      type: object
      required:
        - DirectoryId
        - ComputerName
        - Password
      properties:
        DirectoryId:
          $ref: "#/components/schemas/DirectoryId"
        ComputerName:
          $ref: "#/components/schemas/ComputerName"
        Password:
          $ref: "#/components/schemas/ComputerPassword"
        OrganizationalUnitDistinguishedName:
          $ref: "#/components/schemas/OrganizationalUnitDN"
        ComputerAttributes:
          $ref: "#/components/schemas/Attributes"
      description: Contains the inputs for the <a>CreateComputer</a> operation.
    AuthenticationFailedException: {}
    UnsupportedOperationException: {}
    CreateConditionalForwarderResult:
      type: object
      properties: {}
      description: The result of a CreateConditinalForwarder request.
    CreateConditionalForwarderRequest:
      type: object
      required:
        - DirectoryId
        - RemoteDomainName
        - DnsIpAddrs
      properties:
        DirectoryId:
          $ref: "#/components/schemas/DirectoryId"
        RemoteDomainName:
          $ref: "#/components/schemas/RemoteDomainName"
        DnsIpAddrs:
          $ref: "#/components/schemas/DnsIpAddrs"
      description: Initiates the creation of a conditional forwarder for your AWS Directory
        Service for Microsoft Active Directory. Conditional forwarders are
        required in order to set up a trust relationship with another domain.
    CreateDirectoryResult:
      type: object
      properties:
        DirectoryId:
          $ref: "#/components/schemas/DirectoryId"
      description: Contains the results of the <a>CreateDirectory</a> operation.
    CreateDirectoryRequest:
      type: object
      required:
        - Name
        - Password
        - Size
      properties:
        Name:
          $ref: "#/components/schemas/DirectoryName"
        ShortName:
          $ref: "#/components/schemas/DirectoryShortName"
        Password:
          $ref: "#/components/schemas/Password"
        Description:
          $ref: "#/components/schemas/Description"
        Size:
          $ref: "#/components/schemas/DirectorySize"
        VpcSettings:
          $ref: "#/components/schemas/DirectoryVpcSettings"
        Tags:
          $ref: "#/components/schemas/Tags"
      description: "Contains the inputs for the <a>CreateDirectory</a> operation. "
    CreateLogSubscriptionResult:
      type: object
      properties: {}
    CreateLogSubscriptionRequest:
      type: object
      required:
        - DirectoryId
        - LogGroupName
      properties:
        DirectoryId:
          $ref: "#/components/schemas/DirectoryId"
        LogGroupName:
          $ref: "#/components/schemas/LogGroupName"
    InsufficientPermissionsException: {}
    CreateMicrosoftADResult:
      type: object
      properties:
        DirectoryId:
          $ref: "#/components/schemas/DirectoryId"
      description: Result of a CreateMicrosoftAD request.
    CreateMicrosoftADRequest:
      type: object
      required:
        - Name
        - Password
        - VpcSettings
      properties:
        Name:
          $ref: "#/components/schemas/DirectoryName"
        ShortName:
          $ref: "#/components/schemas/DirectoryShortName"
        Password:
          $ref: "#/components/schemas/Password"
        Description:
          $ref: "#/components/schemas/Description"
        VpcSettings:
          $ref: "#/components/schemas/DirectoryVpcSettings"
        Edition:
          $ref: "#/components/schemas/DirectoryEdition"
        Tags:
          $ref: "#/components/schemas/Tags"
      description: Creates an AWS Managed Microsoft AD directory.
    CreateSnapshotResult:
      type: object
      properties:
        SnapshotId:
          $ref: "#/components/schemas/SnapshotId"
      description: Contains the results of the <a>CreateSnapshot</a> operation.
    CreateSnapshotRequest:
      type: object
      required:
        - DirectoryId
      properties:
        DirectoryId:
          $ref: "#/components/schemas/DirectoryId"
        Name:
          $ref: "#/components/schemas/SnapshotName"
      description: Contains the inputs for the <a>CreateSnapshot</a> operation.
    SnapshotLimitExceededException: {}
    CreateTrustResult:
      type: object
      properties:
        TrustId:
          $ref: "#/components/schemas/TrustId"
      description: The result of a CreateTrust request.
    CreateTrustRequest:
      type: object
      required:
        - DirectoryId
        - RemoteDomainName
        - TrustPassword
        - TrustDirection
      properties:
        DirectoryId:
          $ref: "#/components/schemas/DirectoryId"
        RemoteDomainName:
          $ref: "#/components/schemas/RemoteDomainName"
        TrustPassword:
          $ref: "#/components/schemas/TrustPassword"
        TrustDirection:
          $ref: "#/components/schemas/TrustDirection"
        TrustType:
          $ref: "#/components/schemas/TrustType"
        ConditionalForwarderIpAddrs:
          $ref: "#/components/schemas/DnsIpAddrs"
        SelectiveAuth:
          $ref: "#/components/schemas/SelectiveAuth"
      description: <p>AWS Directory Service for Microsoft Active Directory allows you to
        configure trust relationships. For example, you can establish a trust
        between your AWS Managed Microsoft AD directory, and your existing
        on-premises Microsoft Active Directory. This would allow you to provide
        users and groups access to resources in either domain, with a single set
        of credentials.</p> <p>This action initiates the creation of the AWS
        side of a trust relationship between an AWS Managed Microsoft AD
        directory and an external domain.</p>
    DeleteConditionalForwarderResult:
      type: object
      properties: {}
      description: The result of a DeleteConditionalForwarder request.
    DeleteConditionalForwarderRequest:
      type: object
      required:
        - DirectoryId
        - RemoteDomainName
      properties:
        DirectoryId:
          $ref: "#/components/schemas/DirectoryId"
        RemoteDomainName:
          $ref: "#/components/schemas/RemoteDomainName"
      description: Deletes a conditional forwarder.
    DeleteDirectoryResult:
      type: object
      properties:
        DirectoryId:
          $ref: "#/components/schemas/DirectoryId"
      description: Contains the results of the <a>DeleteDirectory</a> operation.
    DeleteDirectoryRequest:
      type: object
      required:
        - DirectoryId
      properties:
        DirectoryId:
          $ref: "#/components/schemas/DirectoryId"
      description: Contains the inputs for the <a>DeleteDirectory</a> operation.
    DeleteLogSubscriptionResult:
      type: object
      properties: {}
    DeleteLogSubscriptionRequest:
      type: object
      required:
        - DirectoryId
      properties:
        DirectoryId:
          $ref: "#/components/schemas/DirectoryId"
    DeleteSnapshotResult:
      type: object
      properties:
        SnapshotId:
          $ref: "#/components/schemas/SnapshotId"
      description: Contains the results of the <a>DeleteSnapshot</a> operation.
    DeleteSnapshotRequest:
      type: object
      required:
        - SnapshotId
      properties:
        SnapshotId:
          $ref: "#/components/schemas/SnapshotId"
      description: Contains the inputs for the <a>DeleteSnapshot</a> operation.
    DeleteTrustResult:
      type: object
      properties:
        TrustId:
          $ref: "#/components/schemas/TrustId"
      description: The result of a DeleteTrust request.
    DeleteTrustRequest:
      type: object
      required:
        - TrustId
      properties:
        TrustId:
          $ref: "#/components/schemas/TrustId"
        DeleteAssociatedConditionalForwarder:
          $ref: "#/components/schemas/DeleteAssociatedConditionalForwarder"
      description: Deletes the local side of an existing trust relationship between the AWS
        Managed Microsoft AD directory and the external domain.
    DeregisterEventTopicResult:
      type: object
      properties: {}
      description: The result of a DeregisterEventTopic request.
    DeregisterEventTopicRequest:
      type: object
      required:
        - DirectoryId
        - TopicName
      properties:
        DirectoryId:
          $ref: "#/components/schemas/DirectoryId"
        TopicName:
          $ref: "#/components/schemas/TopicName"
      description: Removes the specified directory as a publisher to the specified SNS
        topic.
    DescribeConditionalForwardersResult:
      type: object
      properties:
        ConditionalForwarders:
          $ref: "#/components/schemas/ConditionalForwarders"
      description: The result of a DescribeConditionalForwarder request.
    DescribeConditionalForwardersRequest:
      type: object
      required:
        - DirectoryId
      properties:
        DirectoryId:
          $ref: "#/components/schemas/DirectoryId"
        RemoteDomainNames:
          $ref: "#/components/schemas/RemoteDomainNames"
      description: Describes a conditional forwarder.
    DescribeDirectoriesResult:
      type: object
      properties:
        DirectoryDescriptions:
          $ref: "#/components/schemas/DirectoryDescriptions"
        NextToken:
          $ref: "#/components/schemas/NextToken"
      description: Contains the results of the <a>DescribeDirectories</a> operation.
    DescribeDirectoriesRequest:
      type: object
      properties:
        DirectoryIds:
          $ref: "#/components/schemas/DirectoryIds"
        NextToken:
          $ref: "#/components/schemas/NextToken"
        Limit:
          $ref: "#/components/schemas/Limit"
      description: Contains the inputs for the <a>DescribeDirectories</a> operation.
    InvalidNextTokenException: {}
    DescribeDomainControllersResult:
      type: object
      properties:
        DomainControllers:
          $ref: "#/components/schemas/DomainControllers"
        NextToken:
          $ref: "#/components/schemas/NextToken"
    DescribeDomainControllersRequest:
      type: object
      required:
        - DirectoryId
      properties:
        DirectoryId:
          $ref: "#/components/schemas/DirectoryId"
        DomainControllerIds:
          $ref: "#/components/schemas/DomainControllerIds"
        NextToken:
          $ref: "#/components/schemas/NextToken"
        Limit:
          $ref: "#/components/schemas/Limit"
    DescribeEventTopicsResult:
      type: object
      properties:
        EventTopics:
          $ref: "#/components/schemas/EventTopics"
      description: The result of a DescribeEventTopic request.
    DescribeEventTopicsRequest:
      type: object
      properties:
        DirectoryId:
          $ref: "#/components/schemas/DirectoryId"
        TopicNames:
          $ref: "#/components/schemas/TopicNames"
      description: Describes event topics.
    DescribeSharedDirectoriesResult:
      type: object
      properties:
        SharedDirectories:
          $ref: "#/components/schemas/SharedDirectories"
        NextToken:
          $ref: "#/components/schemas/NextToken"
    DescribeSharedDirectoriesRequest:
      type: object
      required:
        - OwnerDirectoryId
      properties:
        OwnerDirectoryId:
          $ref: "#/components/schemas/DirectoryId"
        SharedDirectoryIds:
          $ref: "#/components/schemas/DirectoryIds"
        NextToken:
          $ref: "#/components/schemas/NextToken"
        Limit:
          $ref: "#/components/schemas/Limit"
    DescribeSnapshotsResult:
      type: object
      properties:
        Snapshots:
          $ref: "#/components/schemas/Snapshots"
        NextToken:
          $ref: "#/components/schemas/NextToken"
      description: Contains the results of the <a>DescribeSnapshots</a> operation.
    DescribeSnapshotsRequest:
      type: object
      properties:
        DirectoryId:
          $ref: "#/components/schemas/DirectoryId"
        SnapshotIds:
          $ref: "#/components/schemas/SnapshotIds"
        NextToken:
          $ref: "#/components/schemas/NextToken"
        Limit:
          $ref: "#/components/schemas/Limit"
      description: Contains the inputs for the <a>DescribeSnapshots</a> operation.
    DescribeTrustsResult:
      type: object
      properties:
        Trusts:
          $ref: "#/components/schemas/Trusts"
        NextToken:
          $ref: "#/components/schemas/NextToken"
      description: The result of a DescribeTrust request.
    DescribeTrustsRequest:
      type: object
      properties:
        DirectoryId:
          $ref: "#/components/schemas/DirectoryId"
        TrustIds:
          $ref: "#/components/schemas/TrustIds"
        NextToken:
          $ref: "#/components/schemas/NextToken"
        Limit:
          $ref: "#/components/schemas/Limit"
      description: Describes the trust relationships for a particular AWS Managed Microsoft
        AD directory. If no input parameters are are provided, such as directory
        ID or trust ID, this request describes all the trust relationships.
    DisableRadiusResult:
      type: object
      properties: {}
      description: Contains the results of the <a>DisableRadius</a> operation.
    DisableRadiusRequest:
      type: object
      required:
        - DirectoryId
      properties:
        DirectoryId:
          $ref: "#/components/schemas/DirectoryId"
      description: Contains the inputs for the <a>DisableRadius</a> operation.
    DisableSsoResult:
      type: object
      properties: {}
      description: Contains the results of the <a>DisableSso</a> operation.
    DisableSsoRequest:
      type: object
      required:
        - DirectoryId
      properties:
        DirectoryId:
          $ref: "#/components/schemas/DirectoryId"
        UserName:
          $ref: "#/components/schemas/UserName"
        Password:
          $ref: "#/components/schemas/ConnectPassword"
      description: Contains the inputs for the <a>DisableSso</a> operation.
    EnableRadiusResult:
      type: object
      properties: {}
      description: Contains the results of the <a>EnableRadius</a> operation.
    EnableRadiusRequest:
      type: object
      required:
        - DirectoryId
        - RadiusSettings
      properties:
        DirectoryId:
          $ref: "#/components/schemas/DirectoryId"
        RadiusSettings:
          $ref: "#/components/schemas/RadiusSettings"
      description: Contains the inputs for the <a>EnableRadius</a> operation.
    EnableSsoResult:
      type: object
      properties: {}
      description: Contains the results of the <a>EnableSso</a> operation.
    EnableSsoRequest:
      type: object
      required:
        - DirectoryId
      properties:
        DirectoryId:
          $ref: "#/components/schemas/DirectoryId"
        UserName:
          $ref: "#/components/schemas/UserName"
        Password:
          $ref: "#/components/schemas/ConnectPassword"
      description: Contains the inputs for the <a>EnableSso</a> operation.
    GetDirectoryLimitsResult:
      type: object
      properties:
        DirectoryLimits:
          $ref: "#/components/schemas/DirectoryLimits"
      description: Contains the results of the <a>GetDirectoryLimits</a> operation.
    GetDirectoryLimitsRequest:
      type: object
      properties: {}
      description: Contains the inputs for the <a>GetDirectoryLimits</a> operation.
    GetSnapshotLimitsResult:
      type: object
      properties:
        SnapshotLimits:
          $ref: "#/components/schemas/SnapshotLimits"
      description: Contains the results of the <a>GetSnapshotLimits</a> operation.
    GetSnapshotLimitsRequest:
      type: object
      required:
        - DirectoryId
      properties:
        DirectoryId:
          $ref: "#/components/schemas/DirectoryId"
      description: Contains the inputs for the <a>GetSnapshotLimits</a> operation.
    ListIpRoutesResult:
      type: object
      properties:
        IpRoutesInfo:
          $ref: "#/components/schemas/IpRoutesInfo"
        NextToken:
          $ref: "#/components/schemas/NextToken"
    ListIpRoutesRequest:
      type: object
      required:
        - DirectoryId
      properties:
        DirectoryId:
          $ref: "#/components/schemas/DirectoryId"
        NextToken:
          $ref: "#/components/schemas/NextToken"
        Limit:
          $ref: "#/components/schemas/Limit"
    ListLogSubscriptionsResult:
      type: object
      properties:
        LogSubscriptions:
          $ref: "#/components/schemas/LogSubscriptions"
        NextToken:
          $ref: "#/components/schemas/NextToken"
    ListLogSubscriptionsRequest:
      type: object
      properties:
        DirectoryId:
          $ref: "#/components/schemas/DirectoryId"
        NextToken:
          $ref: "#/components/schemas/NextToken"
        Limit:
          $ref: "#/components/schemas/Limit"
    ListSchemaExtensionsResult:
      type: object
      properties:
        SchemaExtensionsInfo:
          $ref: "#/components/schemas/SchemaExtensionsInfo"
        NextToken:
          $ref: "#/components/schemas/NextToken"
    ListSchemaExtensionsRequest:
      type: object
      required:
        - DirectoryId
      properties:
        DirectoryId:
          $ref: "#/components/schemas/DirectoryId"
        NextToken:
          $ref: "#/components/schemas/NextToken"
        Limit:
          $ref: "#/components/schemas/Limit"
    ListTagsForResourceResult:
      type: object
      properties:
        Tags:
          $ref: "#/components/schemas/Tags"
        NextToken:
          $ref: "#/components/schemas/NextToken"
    ListTagsForResourceRequest:
      type: object
      required:
        - ResourceId
      properties:
        ResourceId:
          $ref: "#/components/schemas/ResourceId"
        NextToken:
          $ref: "#/components/schemas/NextToken"
        Limit:
          $ref: "#/components/schemas/Limit"
    RegisterEventTopicResult:
      type: object
      properties: {}
      description: The result of a RegisterEventTopic request.
    RegisterEventTopicRequest:
      type: object
      required:
        - DirectoryId
        - TopicName
      properties:
        DirectoryId:
          $ref: "#/components/schemas/DirectoryId"
        TopicName:
          $ref: "#/components/schemas/TopicName"
      description: Registers a new event topic.
    RejectSharedDirectoryResult:
      type: object
      properties:
        SharedDirectoryId:
          $ref: "#/components/schemas/DirectoryId"
    RejectSharedDirectoryRequest:
      type: object
      required:
        - SharedDirectoryId
      properties:
        SharedDirectoryId:
          $ref: "#/components/schemas/DirectoryId"
    RemoveIpRoutesResult:
      type: object
      properties: {}
    RemoveIpRoutesRequest:
      type: object
      required:
        - DirectoryId
        - CidrIps
      properties:
        DirectoryId:
          $ref: "#/components/schemas/DirectoryId"
        CidrIps:
          $ref: "#/components/schemas/CidrIps"
    RemoveTagsFromResourceResult:
      type: object
      properties: {}
    RemoveTagsFromResourceRequest:
      type: object
      required:
        - ResourceId
        - TagKeys
      properties:
        ResourceId:
          $ref: "#/components/schemas/ResourceId"
        TagKeys:
          $ref: "#/components/schemas/TagKeys"
    ResetUserPasswordResult:
      type: object
      properties: {}
    ResetUserPasswordRequest:
      type: object
      required:
        - DirectoryId
        - UserName
        - NewPassword
      properties:
        DirectoryId:
          $ref: "#/components/schemas/DirectoryId"
        UserName:
          $ref: "#/components/schemas/CustomerUserName"
        NewPassword:
          $ref: "#/components/schemas/UserPassword"
    UserDoesNotExistException: {}
    InvalidPasswordException: {}
    RestoreFromSnapshotResult:
      type: object
      properties: {}
      description: Contains the results of the <a>RestoreFromSnapshot</a> operation.
    RestoreFromSnapshotRequest:
      type: object
      required:
        - SnapshotId
      properties:
        SnapshotId:
          $ref: "#/components/schemas/SnapshotId"
      description: An object representing the inputs for the <a>RestoreFromSnapshot</a>
        operation.
    ShareDirectoryResult:
      type: object
      properties:
        SharedDirectoryId:
          $ref: "#/components/schemas/DirectoryId"
    ShareDirectoryRequest:
      type: object
      required:
        - DirectoryId
        - ShareTarget
        - ShareMethod
      properties:
        DirectoryId:
          $ref: "#/components/schemas/DirectoryId"
        ShareNotes:
          $ref: "#/components/schemas/Notes"
        ShareTarget:
          $ref: "#/components/schemas/ShareTarget"
        ShareMethod:
          $ref: "#/components/schemas/ShareMethod"
    InvalidTargetException: {}
    ShareLimitExceededException: {}
    OrganizationsException: {}
    AccessDeniedException: {}
    StartSchemaExtensionResult:
      type: object
      properties:
        SchemaExtensionId:
          $ref: "#/components/schemas/SchemaExtensionId"
    StartSchemaExtensionRequest:
      type: object
      required:
        - DirectoryId
        - CreateSnapshotBeforeSchemaExtension
        - LdifContent
        - Description
      properties:
        DirectoryId:
          $ref: "#/components/schemas/DirectoryId"
        CreateSnapshotBeforeSchemaExtension:
          $ref: "#/components/schemas/CreateSnapshotBeforeSchemaExtension"
        LdifContent:
          $ref: "#/components/schemas/LdifContent"
        Description:
          $ref: "#/components/schemas/Description"
    UnshareDirectoryResult:
      type: object
      properties:
        SharedDirectoryId:
          $ref: "#/components/schemas/DirectoryId"
    UnshareDirectoryRequest:
      type: object
      required:
        - DirectoryId
        - UnshareTarget
      properties:
        DirectoryId:
          $ref: "#/components/schemas/DirectoryId"
        UnshareTarget:
          $ref: "#/components/schemas/UnshareTarget"
    DirectoryNotSharedException: {}
    UpdateConditionalForwarderResult:
      type: object
      properties: {}
      description: The result of an UpdateConditionalForwarder request.
    UpdateConditionalForwarderRequest:
      type: object
      required:
        - DirectoryId
        - RemoteDomainName
        - DnsIpAddrs
      properties:
        DirectoryId:
          $ref: "#/components/schemas/DirectoryId"
        RemoteDomainName:
          $ref: "#/components/schemas/RemoteDomainName"
        DnsIpAddrs:
          $ref: "#/components/schemas/DnsIpAddrs"
      description: Updates a conditional forwarder.
    UpdateNumberOfDomainControllersResult:
      type: object
      properties: {}
    UpdateNumberOfDomainControllersRequest:
      type: object
      required:
        - DirectoryId
        - DesiredNumber
      properties:
        DirectoryId:
          $ref: "#/components/schemas/DirectoryId"
        DesiredNumber:
          $ref: "#/components/schemas/DesiredNumberOfDomainControllers"
    DomainControllerLimitExceededException: {}
    UpdateRadiusResult:
      type: object
      properties: {}
      description: Contains the results of the <a>UpdateRadius</a> operation.
    UpdateRadiusRequest:
      type: object
      required:
        - DirectoryId
        - RadiusSettings
      properties:
        DirectoryId:
          $ref: "#/components/schemas/DirectoryId"
        RadiusSettings:
          $ref: "#/components/schemas/RadiusSettings"
      description: Contains the inputs for the <a>UpdateRadius</a> operation.
    UpdateTrustResult:
      type: object
      properties:
        RequestId:
          $ref: "#/components/schemas/RequestId"
        TrustId:
          $ref: "#/components/schemas/TrustId"
    UpdateTrustRequest:
      type: object
      required:
        - TrustId
      properties:
        TrustId:
          $ref: "#/components/schemas/TrustId"
        SelectiveAuth:
          $ref: "#/components/schemas/SelectiveAuth"
    VerifyTrustResult:
      type: object
      properties:
        TrustId:
          $ref: "#/components/schemas/TrustId"
      description: Result of a VerifyTrust request.
    VerifyTrustRequest:
      type: object
      required:
        - TrustId
      properties:
        TrustId:
          $ref: "#/components/schemas/TrustId"
      description: Initiates the verification of an existing trust relationship between an
        AWS Managed Microsoft AD directory and an external domain.
    DirectoryId:
      type: string
      pattern: ^d-[0-9a-f]{10}$
    SharedDirectory:
      type: object
      properties:
        OwnerAccountId:
          $ref: "#/components/schemas/CustomerId"
        OwnerDirectoryId:
          $ref: "#/components/schemas/DirectoryId"
        ShareMethod:
          $ref: "#/components/schemas/ShareMethod"
        SharedAccountId:
          $ref: "#/components/schemas/CustomerId"
        SharedDirectoryId:
          $ref: "#/components/schemas/DirectoryId"
        ShareStatus:
          $ref: "#/components/schemas/ShareStatus"
        ShareNotes:
          $ref: "#/components/schemas/Notes"
        CreatedDateTime:
          $ref: "#/components/schemas/CreatedDateTime"
        LastUpdatedDateTime:
          $ref: "#/components/schemas/LastUpdatedDateTime"
      description: Details about the shared directory in the directory owner account for
        which the share request in the directory consumer account has been
        accepted.
    AccessUrl:
      type: string
      minLength: 1
      maxLength: 128
    IpRoutes:
      type: array
      items:
        $ref: "#/components/schemas/IpRoute"
    UpdateSecurityGroupForDirectoryControllers:
      type: boolean
    ResourceId:
      type: string
      pattern: ^[d]-[0-9a-f]{10}$
    Tags:
      type: array
      items:
        $ref: "#/components/schemas/Tag"
    AddedDateTime:
      type: string
      format: date-time
    AliasName:
      type: string
      pattern: ^(?!d-)([\da-zA-Z]+)([-]*[\da-zA-Z])*
      minLength: 1
      maxLength: 62
    AttributeName:
      type: string
      minLength: 1
    AttributeValue:
      type: string
    Attribute:
      type: object
      properties:
        Name:
          $ref: "#/components/schemas/AttributeName"
        Value:
          $ref: "#/components/schemas/AttributeValue"
      description: Represents a named directory attribute.
    Attributes:
      type: array
      items:
        $ref: "#/components/schemas/Attribute"
    AvailabilityZone:
      type: string
    AvailabilityZones:
      type: array
      items:
        $ref: "#/components/schemas/AvailabilityZone"
    SchemaExtensionId:
      type: string
      pattern: ^e-[0-9a-f]{10}$
    CidrIp:
      type: string
      pattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/([1-9]|[1-2][0-9]|3[0-2]))$
    CidrIps:
      type: array
      items:
        $ref: "#/components/schemas/CidrIp"
    CloudOnlyDirectoriesLimitReached:
      type: boolean
    SID:
      type: string
      pattern: "[&\\w+-.@]+"
      minLength: 1
      maxLength: 256
    ComputerName:
      type: string
      minLength: 1
      maxLength: 15
    Computer:
      type: object
      properties:
        ComputerId:
          $ref: "#/components/schemas/SID"
        ComputerName:
          $ref: "#/components/schemas/ComputerName"
        ComputerAttributes:
          $ref: "#/components/schemas/Attributes"
      description: Contains information about a computer account in a directory.
    ComputerPassword:
      type: string
      pattern: "[\\u0020-\\u00FF]+"
      minLength: 8
      maxLength: 64
      format: password
    RemoteDomainName:
      type: string
      pattern: ^([a-zA-Z0-9]+[\\.-])+([a-zA-Z0-9])+[.]?$
    DnsIpAddrs:
      type: array
      items:
        $ref: "#/components/schemas/IpAddr"
    ReplicationScope:
      type: string
      enum:
        - Domain
    ConditionalForwarder:
      type: object
      properties:
        RemoteDomainName:
          $ref: "#/components/schemas/RemoteDomainName"
        DnsIpAddrs:
          $ref: "#/components/schemas/DnsIpAddrs"
        ReplicationScope:
          $ref: "#/components/schemas/ReplicationScope"
      description: Points to a remote domain with which you are setting up a trust
        relationship. Conditional forwarders are required in order to set up a
        trust relationship with another domain.
    ConditionalForwarders:
      type: array
      items:
        $ref: "#/components/schemas/ConditionalForwarder"
    DirectoryName:
      type: string
      pattern: ^([a-zA-Z0-9]+[\\.-])+([a-zA-Z0-9])+$
    DirectoryShortName:
      type: string
      pattern: ^[^\\/:*?\"\<\>|.]+[^\\/:*?\"<>|]*$
    ConnectPassword:
      type: string
      minLength: 1
      maxLength: 128
      format: password
    Description:
      type: string
      pattern: ^([a-zA-Z0-9_])[\\a-zA-Z0-9_@#%*+=:?./!\s-]*$
      minLength: 0
      maxLength: 128
    DirectorySize:
      type: string
      enum:
        - Small
        - Large
    DirectoryConnectSettings:
      type: object
      required:
        - VpcId
        - SubnetIds
        - CustomerDnsIps
        - CustomerUserName
      properties:
        VpcId:
          $ref: "#/components/schemas/VpcId"
        SubnetIds:
          $ref: "#/components/schemas/SubnetIds"
        CustomerDnsIps:
          $ref: "#/components/schemas/DnsIpAddrs"
        CustomerUserName:
          $ref: "#/components/schemas/UserName"
      description: Contains information for the <a>ConnectDirectory</a> operation when an
        AD Connector directory is being created.
    ConnectedDirectoriesLimitReached:
      type: boolean
    OrganizationalUnitDN:
      type: string
      minLength: 1
      maxLength: 2000
    Password:
      type: string
      pattern: (?=^.{8,64}$)((?=.*\d)(?=.*[A-Z])(?=.*[a-z])|(?=.*\d)(?=.*[^A-Za-z0-9\s])(?=.*[a-z])|(?=.*[^A-Za-z0-9\s])(?=.*[A-Z])(?=.*[a-z])|(?=.*\d)(?=.*[A-Z])(?=.*[^A-Za-z0-9\s]))^.*
      format: password
    DirectoryVpcSettings:
      type: object
      required:
        - VpcId
        - SubnetIds
      properties:
        VpcId:
          $ref: "#/components/schemas/VpcId"
        SubnetIds:
          $ref: "#/components/schemas/SubnetIds"
      description: Contains VPC information for the <a>CreateDirectory</a> or
        <a>CreateMicrosoftAD</a> operation.
    LogGroupName:
      type: string
      pattern: "[-._/#A-Za-z0-9]+"
      minLength: 1
      maxLength: 512
    DirectoryEdition:
      type: string
      enum:
        - Enterprise
        - Standard
    CreateSnapshotBeforeSchemaExtension:
      type: boolean
    SnapshotName:
      type: string
      pattern: ^([a-zA-Z0-9_])[\\a-zA-Z0-9_@#%*+=:?./!\s-]*$
      minLength: 0
      maxLength: 128
    SnapshotId:
      type: string
      pattern: ^s-[0-9a-f]{10}$
    TrustPassword:
      type: string
      pattern: (.|\s)*\S(.|\s)*
      minLength: 1
      maxLength: 128
      format: password
    TrustDirection:
      type: string
      enum:
        - "One-Way: Outgoing"
        - "One-Way: Incoming"
        - Two-Way
    TrustType:
      type: string
      enum:
        - Forest
        - External
    SelectiveAuth:
      type: string
      enum:
        - Enabled
        - Disabled
    TrustId:
      type: string
      pattern: ^t-[0-9a-f]{10}$
    CreatedDateTime:
      type: string
      format: date-time
    CustomerId:
      type: string
      pattern: ^(\d{12})$
    CustomerUserName:
      type: string
      pattern: ^(?!.*\\|.*"|.*\/|.*\[|.*\]|.*:|.*;|.*\||.*=|.*,|.*\+|.*\*|.*\?|.*<|.*>|.*@).*$
      minLength: 1
      maxLength: 64
    DeleteAssociatedConditionalForwarder:
      type: boolean
    TopicName:
      type: string
      pattern: "[a-zA-Z0-9_-]+"
      minLength: 1
      maxLength: 256
    RemoteDomainNames:
      type: array
      items:
        $ref: "#/components/schemas/RemoteDomainName"
    DirectoryIds:
      type: array
      description: A list of directory identifiers.
      items:
        $ref: "#/components/schemas/DirectoryId"
    NextToken:
      type: string
    Limit:
      type: integer
      minimum: 0
    DirectoryDescriptions:
      type: array
      description: A list of directory descriptions.
      items:
        $ref: "#/components/schemas/DirectoryDescription"
    DomainControllerIds:
      type: array
      items:
        $ref: "#/components/schemas/DomainControllerId"
    DomainControllers:
      type: array
      items:
        $ref: "#/components/schemas/DomainController"
    TopicNames:
      type: array
      items:
        $ref: "#/components/schemas/TopicName"
    EventTopics:
      type: array
      items:
        $ref: "#/components/schemas/EventTopic"
    SharedDirectories:
      type: array
      items:
        $ref: "#/components/schemas/SharedDirectory"
    SnapshotIds:
      type: array
      description: A list of directory snapshot identifiers.
      items:
        $ref: "#/components/schemas/SnapshotId"
    Snapshots:
      type: array
      description: A list of descriptions of directory snapshots.
      items:
        $ref: "#/components/schemas/Snapshot"
    TrustIds:
      type: array
      items:
        $ref: "#/components/schemas/TrustId"
    Trusts:
      type: array
      items:
        $ref: "#/components/schemas/Trust"
    DesiredNumberOfDomainControllers:
      type: integer
      minimum: 2
    VpcId:
      type: string
      pattern: ^(vpc-[0-9a-f]{8}|vpc-[0-9a-f]{17})$
    SubnetIds:
      type: array
      items:
        $ref: "#/components/schemas/SubnetId"
    UserName:
      type: string
      pattern: "[a-zA-Z0-9._-]+"
      minLength: 1
    SecurityGroupId:
      type: string
      pattern: ^(sg-[0-9a-f]{8}|sg-[0-9a-f]{17})$
    IpAddrs:
      type: array
      items:
        $ref: "#/components/schemas/IpAddr"
    DirectoryConnectSettingsDescription:
      type: object
      properties:
        VpcId:
          $ref: "#/components/schemas/VpcId"
        SubnetIds:
          $ref: "#/components/schemas/SubnetIds"
        CustomerUserName:
          $ref: "#/components/schemas/UserName"
        SecurityGroupId:
          $ref: "#/components/schemas/SecurityGroupId"
        AvailabilityZones:
          $ref: "#/components/schemas/AvailabilityZones"
        ConnectIps:
          $ref: "#/components/schemas/IpAddrs"
      description: Contains information about an AD Connector directory.
    DirectoryStage:
      type: string
      enum:
        - Requested
        - Creating
        - Created
        - Active
        - Inoperable
        - Impaired
        - Restoring
        - RestoreFailed
        - Deleting
        - Deleted
        - Failed
    ShareStatus:
      type: string
      enum:
        - Shared
        - PendingAcceptance
        - Rejected
        - Rejecting
        - RejectFailed
        - Sharing
        - ShareFailed
        - Deleted
        - Deleting
    ShareMethod:
      type: string
      enum:
        - ORGANIZATIONS
        - HANDSHAKE
    Notes:
      type: string
      maxLength: 1024
      format: password
    LaunchTime:
      type: string
      format: date-time
    LastUpdatedDateTime:
      type: string
      format: date-time
    DirectoryType:
      type: string
      enum:
        - SimpleAD
        - ADConnector
        - MicrosoftAD
        - SharedMicrosoftAD
    DirectoryVpcSettingsDescription:
      type: object
      properties:
        VpcId:
          $ref: "#/components/schemas/VpcId"
        SubnetIds:
          $ref: "#/components/schemas/SubnetIds"
        SecurityGroupId:
          $ref: "#/components/schemas/SecurityGroupId"
        AvailabilityZones:
          $ref: "#/components/schemas/AvailabilityZones"
      description: Contains information about the directory.
    RadiusSettings:
      type: object
      properties:
        RadiusServers:
          $ref: "#/components/schemas/Servers"
        RadiusPort:
          $ref: "#/components/schemas/PortNumber"
        RadiusTimeout:
          $ref: "#/components/schemas/RadiusTimeout"
        RadiusRetries:
          $ref: "#/components/schemas/RadiusRetries"
        SharedSecret:
          $ref: "#/components/schemas/RadiusSharedSecret"
        AuthenticationProtocol:
          $ref: "#/components/schemas/RadiusAuthenticationProtocol"
        DisplayLabel:
          $ref: "#/components/schemas/RadiusDisplayLabel"
        UseSameUsername:
          $ref: "#/components/schemas/UseSameUsername"
      description: Contains information about a Remote Authentication Dial In User Service
        (RADIUS) server.
    RadiusStatus:
      type: string
      enum:
        - Creating
        - Completed
        - Failed
    StageReason:
      type: string
    SsoEnabled:
      type: boolean
    OwnerDirectoryDescription:
      type: object
      properties:
        DirectoryId:
          $ref: "#/components/schemas/DirectoryId"
        AccountId:
          $ref: "#/components/schemas/CustomerId"
        DnsIpAddrs:
          $ref: "#/components/schemas/DnsIpAddrs"
        VpcSettings:
          $ref: "#/components/schemas/DirectoryVpcSettingsDescription"
        RadiusSettings:
          $ref: "#/components/schemas/RadiusSettings"
        RadiusStatus:
          $ref: "#/components/schemas/RadiusStatus"
      description: Describes the directory owner account details that have been shared to
        the directory consumer account.
    DirectoryDescription:
      type: object
      properties:
        DirectoryId:
          $ref: "#/components/schemas/DirectoryId"
        Name:
          $ref: "#/components/schemas/DirectoryName"
        ShortName:
          $ref: "#/components/schemas/DirectoryShortName"
        Size:
          $ref: "#/components/schemas/DirectorySize"
        Edition:
          $ref: "#/components/schemas/DirectoryEdition"
        Alias:
          $ref: "#/components/schemas/AliasName"
        AccessUrl:
          $ref: "#/components/schemas/AccessUrl"
        Description:
          $ref: "#/components/schemas/Description"
        DnsIpAddrs:
          $ref: "#/components/schemas/DnsIpAddrs"
        Stage:
          $ref: "#/components/schemas/DirectoryStage"
        ShareStatus:
          $ref: "#/components/schemas/ShareStatus"
        ShareMethod:
          $ref: "#/components/schemas/ShareMethod"
        ShareNotes:
          $ref: "#/components/schemas/Notes"
        LaunchTime:
          $ref: "#/components/schemas/LaunchTime"
        StageLastUpdatedDateTime:
          $ref: "#/components/schemas/LastUpdatedDateTime"
        Type:
          $ref: "#/components/schemas/DirectoryType"
        VpcSettings:
          $ref: "#/components/schemas/DirectoryVpcSettingsDescription"
        ConnectSettings:
          $ref: "#/components/schemas/DirectoryConnectSettingsDescription"
        RadiusSettings:
          $ref: "#/components/schemas/RadiusSettings"
        RadiusStatus:
          $ref: "#/components/schemas/RadiusStatus"
        StageReason:
          $ref: "#/components/schemas/StageReason"
        SsoEnabled:
          $ref: "#/components/schemas/SsoEnabled"
        DesiredNumberOfDomainControllers:
          $ref: "#/components/schemas/DesiredNumberOfDomainControllers"
        OwnerDirectoryDescription:
          $ref: "#/components/schemas/OwnerDirectoryDescription"
      description: Contains information about an AWS Directory Service directory.
    DirectoryLimits:
      type: object
      properties:
        CloudOnlyDirectoriesLimit:
          $ref: "#/components/schemas/Limit"
        CloudOnlyDirectoriesCurrentCount:
          $ref: "#/components/schemas/Limit"
        CloudOnlyDirectoriesLimitReached:
          $ref: "#/components/schemas/CloudOnlyDirectoriesLimitReached"
        CloudOnlyMicrosoftADLimit:
          $ref: "#/components/schemas/Limit"
        CloudOnlyMicrosoftADCurrentCount:
          $ref: "#/components/schemas/Limit"
        CloudOnlyMicrosoftADLimitReached:
          $ref: "#/components/schemas/CloudOnlyDirectoriesLimitReached"
        ConnectedDirectoriesLimit:
          $ref: "#/components/schemas/Limit"
        ConnectedDirectoriesCurrentCount:
          $ref: "#/components/schemas/Limit"
        ConnectedDirectoriesLimitReached:
          $ref: "#/components/schemas/ConnectedDirectoriesLimitReached"
      description: Contains directory limit information for a region.
    IpAddr:
      type: string
      pattern: ^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$
    DomainControllerId:
      type: string
      pattern: ^dc-[0-9a-f]{10}$
    SubnetId:
      type: string
      pattern: ^(subnet-[0-9a-f]{8}|subnet-[0-9a-f]{17})$
    DomainControllerStatus:
      type: string
      enum:
        - Creating
        - Active
        - Impaired
        - Restoring
        - Deleting
        - Deleted
        - Failed
    DomainControllerStatusReason:
      type: string
    DomainController:
      type: object
      properties:
        DirectoryId:
          $ref: "#/components/schemas/DirectoryId"
        DomainControllerId:
          $ref: "#/components/schemas/DomainControllerId"
        DnsIpAddr:
          $ref: "#/components/schemas/IpAddr"
        VpcId:
          $ref: "#/components/schemas/VpcId"
        SubnetId:
          $ref: "#/components/schemas/SubnetId"
        AvailabilityZone:
          $ref: "#/components/schemas/AvailabilityZone"
        Status:
          $ref: "#/components/schemas/DomainControllerStatus"
        StatusReason:
          $ref: "#/components/schemas/DomainControllerStatusReason"
        LaunchTime:
          $ref: "#/components/schemas/LaunchTime"
        StatusLastUpdatedDateTime:
          $ref: "#/components/schemas/LastUpdatedDateTime"
      description: Contains information about the domain controllers for a specified
        directory.
    EndDateTime:
      type: string
      format: date-time
    TopicArn:
      type: string
    TopicStatus:
      type: string
      enum:
        - Registered
        - Topic not found
        - Failed
        - Deleted
    EventTopic:
      type: object
      properties:
        DirectoryId:
          $ref: "#/components/schemas/DirectoryId"
        TopicName:
          $ref: "#/components/schemas/TopicName"
        TopicArn:
          $ref: "#/components/schemas/TopicArn"
        CreatedDateTime:
          $ref: "#/components/schemas/CreatedDateTime"
        Status:
          $ref: "#/components/schemas/TopicStatus"
      description: Information about SNS topic and AWS Directory Service directory
        associations.
    SnapshotLimits:
      type: object
      properties:
        ManualSnapshotsLimit:
          $ref: "#/components/schemas/Limit"
        ManualSnapshotsCurrentCount:
          $ref: "#/components/schemas/Limit"
        ManualSnapshotsLimitReached:
          $ref: "#/components/schemas/ManualSnapshotsLimitReached"
      description: Contains manual snapshot limit information for a directory.
    IpRoute:
      type: object
      properties:
        CidrIp:
          $ref: "#/components/schemas/CidrIp"
        Description:
          $ref: "#/components/schemas/Description"
      description: "IP address block. This is often the address block of the DNS server
        used for your on-premises domain. "
    IpRouteStatusMsg:
      type: string
      enum:
        - Adding
        - Added
        - Removing
        - Removed
        - AddFailed
        - RemoveFailed
    IpRouteStatusReason:
      type: string
    IpRouteInfo:
      type: object
      properties:
        DirectoryId:
          $ref: "#/components/schemas/DirectoryId"
        CidrIp:
          $ref: "#/components/schemas/CidrIp"
        IpRouteStatusMsg:
          $ref: "#/components/schemas/IpRouteStatusMsg"
        AddedDateTime:
          $ref: "#/components/schemas/AddedDateTime"
        IpRouteStatusReason:
          $ref: "#/components/schemas/IpRouteStatusReason"
        Description:
          $ref: "#/components/schemas/Description"
      description: Information about one or more IP address blocks.
    IpRoutesInfo:
      type: array
      items:
        $ref: "#/components/schemas/IpRouteInfo"
    LdifContent:
      type: string
      minLength: 1
      maxLength: 500000
    LogSubscriptions:
      type: array
      items:
        $ref: "#/components/schemas/LogSubscription"
    SchemaExtensionsInfo:
      type: array
      items:
        $ref: "#/components/schemas/SchemaExtensionInfo"
    SubscriptionCreatedDateTime:
      type: string
      format: date-time
    LogSubscription:
      type: object
      properties:
        DirectoryId:
          $ref: "#/components/schemas/DirectoryId"
        LogGroupName:
          $ref: "#/components/schemas/LogGroupName"
        SubscriptionCreatedDateTime:
          $ref: "#/components/schemas/SubscriptionCreatedDateTime"
      description: Represents a log subscription, which tracks real-time data from a chosen
        log group to a specified destination.
    ManualSnapshotsLimitReached:
      type: boolean
    PortNumber:
      type: integer
      minimum: 1025
      maximum: 65535
    RadiusAuthenticationProtocol:
      type: string
      enum:
        - PAP
        - CHAP
        - MS-CHAPv1
        - MS-CHAPv2
    RadiusDisplayLabel:
      type: string
      minLength: 1
      maxLength: 64
    RadiusRetries:
      type: integer
      minimum: 0
      maximum: 10
    Servers:
      type: array
      items:
        $ref: "#/components/schemas/Server"
    RadiusTimeout:
      type: integer
      minimum: 1
      maximum: 20
    RadiusSharedSecret:
      type: string
      minLength: 8
      maxLength: 512
      format: password
    UseSameUsername:
      type: boolean
    TagKeys:
      type: array
      items:
        $ref: "#/components/schemas/TagKey"
    RequestId:
      type: string
      pattern: ^([A-Fa-f0-9]{8}-[A-Fa-f0-9]{4}-[A-Fa-f0-9]{4}-[A-Fa-f0-9]{4}-[A-Fa-f0-9]{12})$
      description: The AWS request identifier.
    UserPassword:
      type: string
      minLength: 1
      maxLength: 127
      format: password
    SchemaExtensionStatus:
      type: string
      enum:
        - Initializing
        - CreatingSnapshot
        - UpdatingSchema
        - Replicating
        - CancelInProgress
        - RollbackInProgress
        - Cancelled
        - Failed
        - Completed
    SchemaExtensionStatusReason:
      type: string
    StartDateTime:
      type: string
      format: date-time
    SchemaExtensionInfo:
      type: object
      properties:
        DirectoryId:
          $ref: "#/components/schemas/DirectoryId"
        SchemaExtensionId:
          $ref: "#/components/schemas/SchemaExtensionId"
        Description:
          $ref: "#/components/schemas/Description"
        SchemaExtensionStatus:
          $ref: "#/components/schemas/SchemaExtensionStatus"
        SchemaExtensionStatusReason:
          $ref: "#/components/schemas/SchemaExtensionStatusReason"
        StartDateTime:
          $ref: "#/components/schemas/StartDateTime"
        EndDateTime:
          $ref: "#/components/schemas/EndDateTime"
      description: Information about a schema extension.
    Server:
      type: string
      minLength: 1
      maxLength: 256
    ShareTarget:
      type: object
      required:
        - Id
        - Type
      properties:
        Id:
          $ref: "#/components/schemas/TargetId"
        Type:
          $ref: "#/components/schemas/TargetType"
      description: Identifier that contains details about the directory consumer account.
    TargetId:
      type: string
      minLength: 1
      maxLength: 64
    TargetType:
      type: string
      enum:
        - ACCOUNT
    SnapshotType:
      type: string
      enum:
        - Auto
        - Manual
    SnapshotStatus:
      type: string
      enum:
        - Creating
        - Completed
        - Failed
    StartTime:
      type: string
      format: date-time
    Snapshot:
      type: object
      properties:
        DirectoryId:
          $ref: "#/components/schemas/DirectoryId"
        SnapshotId:
          $ref: "#/components/schemas/SnapshotId"
        Type:
          $ref: "#/components/schemas/SnapshotType"
        Name:
          $ref: "#/components/schemas/SnapshotName"
        Status:
          $ref: "#/components/schemas/SnapshotStatus"
        StartTime:
          $ref: "#/components/schemas/StartTime"
      description: Describes a directory snapshot.
    StateLastUpdatedDateTime:
      type: string
      format: date-time
    TagKey:
      type: string
      pattern: ^([\p{L}\p{Z}\p{N}_.:/=+\-@]*)$
      minLength: 1
      maxLength: 128
    TagValue:
      type: string
      pattern: ^([\p{L}\p{Z}\p{N}_.:/=+\-@]*)$
      minLength: 0
      maxLength: 256
    Tag:
      type: object
      required:
        - Key
        - Value
      properties:
        Key:
          $ref: "#/components/schemas/TagKey"
        Value:
          $ref: "#/components/schemas/TagValue"
      description: Metadata assigned to a directory consisting of a key-value pair.
    TrustState:
      type: string
      enum:
        - Creating
        - Created
        - Verifying
        - VerifyFailed
        - Verified
        - Updating
        - UpdateFailed
        - Updated
        - Deleting
        - Deleted
        - Failed
    TrustStateReason:
      type: string
    Trust:
      type: object
      properties:
        DirectoryId:
          $ref: "#/components/schemas/DirectoryId"
        TrustId:
          $ref: "#/components/schemas/TrustId"
        RemoteDomainName:
          $ref: "#/components/schemas/RemoteDomainName"
        TrustType:
          $ref: "#/components/schemas/TrustType"
        TrustDirection:
          $ref: "#/components/schemas/TrustDirection"
        TrustState:
          $ref: "#/components/schemas/TrustState"
        CreatedDateTime:
          $ref: "#/components/schemas/CreatedDateTime"
        LastUpdatedDateTime:
          $ref: "#/components/schemas/LastUpdatedDateTime"
        StateLastUpdatedDateTime:
          $ref: "#/components/schemas/StateLastUpdatedDateTime"
        TrustStateReason:
          $ref: "#/components/schemas/TrustStateReason"
        SelectiveAuth:
          $ref: "#/components/schemas/SelectiveAuth"
      description: Describes a trust relationship between an AWS Managed Microsoft AD
        directory and an external domain.
    UnshareTarget:
      type: object
      required:
        - Id
        - Type
      properties:
        Id:
          $ref: "#/components/schemas/TargetId"
        Type:
          $ref: "#/components/schemas/TargetType"
      description: Identifier that contains details about the directory consumer account
        with whom the directory is being unshared.
