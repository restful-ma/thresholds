openapi: 3.0.0
info:
  description: Use these REST APIs for performing operations on API entity and their
    Operations associated with your Azure API Management deployment.
  title: ApiManagementClient
  version: 2017-03-01
  x-apisguru-categories:
    - cloud
  x-logo:
    url: https://assets.onestore.ms/cdnfiles/onestorerolling-1606-01000/shell/v3/images/logo/microsoft.png
  x-origin:
    - format: swagger
      url: https://raw.githubusercontent.com/Azure/azure-rest-api-specs/master/specification/apimanagement/control-plane/Microsoft.ApiManagement/preview/2017-03-01/apimapis.json
      version: "2.0"
  x-preferred: false
  x-providerName: azure.com
  x-serviceName: apimanagement-apimapis
  x-tags:
    - Azure
    - Microsoft
security:
  - apim_key: []
paths:
  /apis:
    get:
      description: Lists all APIs of the API Management service instance.
      externalDocs:
        url: https://docs.microsoft.com/en-us/azure/api-management/api-management-howto-create-apis
      operationId: Api_List
      parameters:
        - description: >-
            | Field       | Supported operators    | Supported
            functions               |

            |-------------|------------------------|-----------------------------------|

            | id          | ge, le, eq, ne, gt, lt | substringof, startswith, endswith |

            | name        | ge, le, eq, ne, gt, lt | substringof, startswith, endswith |

            | description | ge, le, eq, ne, gt, lt | substringof, startswith, endswith |

            | serviceUrl  | ge, le, eq, ne, gt, lt | substringof, startswith, endswith |

            | path        | ge, le, eq, ne, gt, lt | substringof, startswith, endswith |
          in: query
          name: $filter
          required: false
          schema:
            type: string
        - description: Number of records to return.
          in: query
          name: $top
          required: false
          x-ms-parameter-location: method
          schema:
            type: integer
            format: int32
            minimum: 1
        - description: Number of records to skip.
          in: query
          name: $skip
          required: false
          x-ms-parameter-location: method
          schema:
            type: integer
            format: int32
            minimum: 0
        - description: Version of the API to be used with the client request.
          in: query
          name: api-version
          required: true
          schema:
            type: string
          examples:
            ApiManagementListApis:
              value: 2017-03-01
      responses:
        "200":
          description: Paged Result response of Apis.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiCollection"
              examples:
                ApiManagementListApis:
                  $ref: "#/components/examples/ApiManagementListApis"
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                description: Error Body contract.
                properties:
                  code:
                    description: Service-defined error code. This code serves as a
                      sub-status for the HTTP error code specified in the
                      response.
                    type: string
                  details:
                    description: The list of invalid fields send in request, in case of
                      validation error.
                    items:
                      description: Error Field contract.
                      properties:
                        code:
                          description: Property level error code.
                          type: string
                        message:
                          description: Human-readable representation of property-level
                            error.
                          type: string
                        target:
                          description: Property name.
                          type: string
                    type: array
                  message:
                    description: Human-readable representation of the error.
                    type: string
      tags:
        - Apis
      x-ms-odata: "#/components/schemas/ApiContract"
      x-ms-pageable:
        nextLinkName: nextLink
  "/apis/{apiId}":
    delete:
      description: Deletes the specified API of the API Management service instance.
      operationId: Api_Delete
      parameters:
        - $ref: "#/components/parameters/ApiIdParameter"
        - description: ETag of the API Entity. ETag should match the current entity state
            from the header response of the GET request or it should be * for
            unconditional update.
          in: header
          name: If-Match
          required: true
          schema:
            type: string
          examples:
            ApiManagementDeleteApis:
              value: '"AAAAAAAAD08="'
        - description: Version of the API to be used with the client request.
          in: query
          name: api-version
          required: true
          schema:
            type: string
          examples:
            ApiManagementDeleteApis:
              value: 2017-03-01
      responses:
        "204":
          description: The API was successfully deleted.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                description: Error Body contract.
                properties:
                  code:
                    description: Service-defined error code. This code serves as a
                      sub-status for the HTTP error code specified in the
                      response.
                    type: string
                  details:
                    description: The list of invalid fields send in request, in case of
                      validation error.
                    items:
                      description: Error Field contract.
                      properties:
                        code:
                          description: Property level error code.
                          type: string
                        message:
                          description: Human-readable representation of property-level
                            error.
                          type: string
                        target:
                          description: Property name.
                          type: string
                    type: array
                  message:
                    description: Human-readable representation of the error.
                    type: string
      tags:
        - Apis
    get:
      description: Gets the details of the API specified by its identifier.
      operationId: Api_Get
      parameters:
        - $ref: "#/components/parameters/ApiIdParameter"
        - description: Version of the API to be used with the client request.
          in: query
          name: api-version
          required: true
          schema:
            type: string
          examples:
            ApiManagementGetApis:
              value: 2017-03-01
      responses:
        "200":
          description: The response body contains the specified API entity.
          headers:
            ETag:
              description: Current entity state version. Should be treated as opaque and
                used to make conditional HTTP requests.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiContract"
              examples:
                ApiManagementGetApis:
                  $ref: "#/components/examples/ApiManagementGetApis"
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                description: Error Body contract.
                properties:
                  code:
                    description: Service-defined error code. This code serves as a
                      sub-status for the HTTP error code specified in the
                      response.
                    type: string
                  details:
                    description: The list of invalid fields send in request, in case of
                      validation error.
                    items:
                      description: Error Field contract.
                      properties:
                        code:
                          description: Property level error code.
                          type: string
                        message:
                          description: Human-readable representation of property-level
                            error.
                          type: string
                        target:
                          description: Property name.
                          type: string
                    type: array
                  message:
                    description: Human-readable representation of the error.
                    type: string
      tags:
        - Apis
    patch:
      description: Updates the specified API of the API Management service instance.
      operationId: Api_Update
      parameters:
        - $ref: "#/components/parameters/ApiIdParameter"
        - description: ETag of the API entity. ETag should match the current entity state
            in the header response of the GET request or it should be * for
            unconditional update.
          in: header
          name: If-Match
          required: true
          schema:
            type: string
          examples:
            ApiManagementPatchApis:
              value: '"AAAAAAAACFc="'
        - description: Version of the API to be used with the client request.
          in: query
          name: api-version
          required: true
          schema:
            type: string
          examples:
            ApiManagementPatchApis:
              value: 2017-03-01
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ApiUpdateContract"
        description: API Update Contract parameters.
        required: true
      responses:
        "204":
          description: The API was successfully updated.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                description: Error Body contract.
                properties:
                  code:
                    description: Service-defined error code. This code serves as a
                      sub-status for the HTTP error code specified in the
                      response.
                    type: string
                  details:
                    description: The list of invalid fields send in request, in case of
                      validation error.
                    items:
                      description: Error Field contract.
                      properties:
                        code:
                          description: Property level error code.
                          type: string
                        message:
                          description: Human-readable representation of property-level
                            error.
                          type: string
                        target:
                          description: Property name.
                          type: string
                    type: array
                  message:
                    description: Human-readable representation of the error.
                    type: string
      tags:
        - Apis
    put:
      description: Creates new or updates existing specified API of the API Management
        service instance.
      operationId: Api_CreateOrUpdate
      parameters:
        - $ref: "#/components/parameters/ApiIdParameter"
        - description: ETag of the Api Entity. For Create Api Etag should not be specified.
            For Update Etag should match the existing Entity or it can be * for
            unconditional update.
          in: header
          name: If-Match
          required: false
          schema:
            type: string
        - description: Version of the API to be used with the client request.
          in: query
          name: api-version
          required: true
          schema:
            type: string
          examples:
            ApiManagementPutApis:
              value: 2017-03-01
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ApiCreateOrUpdateParameter"
        description: Create or update parameters.
        required: true
      responses:
        "200":
          description: API was successfully updated.
          headers:
            ETag:
              description: Current entity state version. Should be treated as opaque and
                used to make conditional HTTP requests.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiContract"
              examples:
                ApiManagementPutApis:
                  $ref: "#/components/examples/ApiManagementPutApis"
        "201":
          description: API was successfully created.
          headers:
            ETag:
              description: Current entity state version. Should be treated as opaque and
                used to make conditional HTTP requests.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiContract"
              examples:
                ApiManagementPutApis:
                  $ref: "#/components/examples/ApiManagementPutApis"
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                description: Error Body contract.
                properties:
                  code:
                    description: Service-defined error code. This code serves as a
                      sub-status for the HTTP error code specified in the
                      response.
                    type: string
                  details:
                    description: The list of invalid fields send in request, in case of
                      validation error.
                    items:
                      description: Error Field contract.
                      properties:
                        code:
                          description: Property level error code.
                          type: string
                        message:
                          description: Human-readable representation of property-level
                            error.
                          type: string
                        target:
                          description: Property name.
                          type: string
                    type: array
                  message:
                    description: Human-readable representation of the error.
                    type: string
      tags:
        - Apis
  "/apis/{apiId}/operations":
    get:
      description: Lists a collection of the operations for the specified API.
      operationId: ApiOperation_ListByApi
      parameters:
        - $ref: "#/components/parameters/ApiIdParameter"
        - description: >-
            | Field       | Supported operators    | Supported
            functions               |

            |-------------|------------------------|-----------------------------------|

            | name        | ge, le, eq, ne, gt, lt | substringof, startswith, endswith |

            | method      | ge, le, eq, ne, gt, lt | substringof, startswith, endswith |

            | description | ge, le, eq, ne, gt, lt | substringof, startswith, endswith |

            | urlTemplate | ge, le, eq, ne, gt, lt | substringof, startswith, endswith |
          in: query
          name: $filter
          required: false
          schema:
            type: string
        - description: Number of records to return.
          in: query
          name: $top
          required: false
          x-ms-parameter-location: method
          schema:
            type: integer
            format: int32
            minimum: 1
        - description: Number of records to skip.
          in: query
          name: $skip
          required: false
          x-ms-parameter-location: method
          schema:
            type: integer
            format: int32
            minimum: 0
        - description: Version of the API to be used with the client request.
          in: query
          name: api-version
          required: true
          schema:
            type: string
          examples:
            ApiManagementListApisOperations:
              value: 2017-03-01
      responses:
        "200":
          description: A collection of operation summary entities at the API level.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationCollection"
              examples:
                ApiManagementListApisOperations:
                  $ref: "#/components/examples/ApiManagementListApisOperations"
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                description: Error Body contract.
                properties:
                  code:
                    description: Service-defined error code. This code serves as a
                      sub-status for the HTTP error code specified in the
                      response.
                    type: string
                  details:
                    description: The list of invalid fields send in request, in case of
                      validation error.
                    items:
                      description: Error Field contract.
                      properties:
                        code:
                          description: Property level error code.
                          type: string
                        message:
                          description: Human-readable representation of property-level
                            error.
                          type: string
                        target:
                          description: Property name.
                          type: string
                    type: array
                  message:
                    description: Human-readable representation of the error.
                    type: string
      tags:
        - Operations
      x-ms-odata: "#/components/schemas/OperationContract"
      x-ms-pageable:
        nextLinkName: nextLink
  "/apis/{apiId}/operations/{operationId}":
    delete:
      description: Deletes the specified operation in the API.
      operationId: ApiOperation_Delete
      parameters:
        - $ref: "#/components/parameters/ApiIdParameter"
        - $ref: "#/components/parameters/OperationIdParameter"
        - description: ETag of the API Operation Entity. ETag should match the current
            entity state from the header response of the GET request or it
            should be * for unconditional update.
          in: header
          name: If-Match
          required: true
          schema:
            type: string
          examples:
            ApiManagementDeleteApisOperations:
              value: "*"
        - description: Version of the API to be used with the client request.
          in: query
          name: api-version
          required: true
          schema:
            type: string
          examples:
            ApiManagementDeleteApisOperations:
              value: 2017-03-01
      responses:
        "204":
          description: The operation was successfully deleted.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                description: Error Body contract.
                properties:
                  code:
                    description: Service-defined error code. This code serves as a
                      sub-status for the HTTP error code specified in the
                      response.
                    type: string
                  details:
                    description: The list of invalid fields send in request, in case of
                      validation error.
                    items:
                      description: Error Field contract.
                      properties:
                        code:
                          description: Property level error code.
                          type: string
                        message:
                          description: Human-readable representation of property-level
                            error.
                          type: string
                        target:
                          description: Property name.
                          type: string
                    type: array
                  message:
                    description: Human-readable representation of the error.
                    type: string
      tags:
        - Operations
    get:
      description: Gets the details of the API Operation specified by its identifier.
      operationId: ApiOperation_Get
      parameters:
        - $ref: "#/components/parameters/ApiIdParameter"
        - $ref: "#/components/parameters/OperationIdParameter"
        - description: Version of the API to be used with the client request.
          in: query
          name: api-version
          required: true
          schema:
            type: string
          examples:
            ApiManagementGetApisOperations:
              value: 2017-03-01
      responses:
        "200":
          description: The response body contains the specified Operation entity.
          headers:
            ETag:
              description: Current entity state version. Should be treated as opaque and
                used to make conditional HTTP requests.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationContract"
              examples:
                ApiManagementGetApisOperations:
                  $ref: "#/components/examples/ApiManagementGetApisOperations"
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                description: Error Body contract.
                properties:
                  code:
                    description: Service-defined error code. This code serves as a
                      sub-status for the HTTP error code specified in the
                      response.
                    type: string
                  details:
                    description: The list of invalid fields send in request, in case of
                      validation error.
                    items:
                      description: Error Field contract.
                      properties:
                        code:
                          description: Property level error code.
                          type: string
                        message:
                          description: Human-readable representation of property-level
                            error.
                          type: string
                        target:
                          description: Property name.
                          type: string
                    type: array
                  message:
                    description: Human-readable representation of the error.
                    type: string
      tags:
        - Operations
    patch:
      description: Updates the details of the operation in the API specified by its
        identifier.
      operationId: ApiOperation_Update
      parameters:
        - $ref: "#/components/parameters/ApiIdParameter"
        - $ref: "#/components/parameters/OperationIdParameter"
        - description: ETag of the API Operation Entity. ETag should match the current
            entity state from the header response of the GET request or it
            should be * for unconditional update.
          in: header
          name: If-Match
          required: true
          schema:
            type: string
          examples:
            ApiManagementPatchApisOperations:
              value: '"AAAAAAAADfY="'
        - description: Version of the API to be used with the client request.
          in: query
          name: api-version
          required: true
          schema:
            type: string
          examples:
            ApiManagementPatchApisOperations:
              value: 2017-03-01
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OperationUpdateContract"
        description: API Operation Update parameters.
        required: true
      responses:
        "204":
          description: The operation was successfully updated.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                description: Error Body contract.
                properties:
                  code:
                    description: Service-defined error code. This code serves as a
                      sub-status for the HTTP error code specified in the
                      response.
                    type: string
                  details:
                    description: The list of invalid fields send in request, in case of
                      validation error.
                    items:
                      description: Error Field contract.
                      properties:
                        code:
                          description: Property level error code.
                          type: string
                        message:
                          description: Human-readable representation of property-level
                            error.
                          type: string
                        target:
                          description: Property name.
                          type: string
                    type: array
                  message:
                    description: Human-readable representation of the error.
                    type: string
      tags:
        - Operations
    put:
      description: Creates a new operation in the API or updates an existing one.
      operationId: ApiOperation_CreateOrUpdate
      parameters:
        - $ref: "#/components/parameters/ApiIdParameter"
        - $ref: "#/components/parameters/OperationIdParameter"
        - description: Version of the API to be used with the client request.
          in: query
          name: api-version
          required: true
          schema:
            type: string
          examples:
            ApiManagementPutApisOperations:
              value: 2017-03-01
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OperationContract"
        description: Create parameters.
        required: true
      responses:
        "200":
          description: Operation was successfully updated.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationContract"
              examples:
                ApiManagementPutApisOperations:
                  $ref: "#/components/examples/ApiManagementPutApisOperations"
        "201":
          description: Operation was successfully created.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationContract"
              examples:
                ApiManagementPutApisOperations:
                  $ref: "#/components/examples/ApiManagementPutApisOperations"
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                description: Error Body contract.
                properties:
                  code:
                    description: Service-defined error code. This code serves as a
                      sub-status for the HTTP error code specified in the
                      response.
                    type: string
                  details:
                    description: The list of invalid fields send in request, in case of
                      validation error.
                    items:
                      description: Error Field contract.
                      properties:
                        code:
                          description: Property level error code.
                          type: string
                        message:
                          description: Human-readable representation of property-level
                            error.
                          type: string
                        target:
                          description: Property name.
                          type: string
                    type: array
                  message:
                    description: Human-readable representation of the error.
                    type: string
      tags:
        - Operations
  "/apis/{apiId}/operations/{operationId}/policies":
    get:
      description: Get the list of policy configuration at the API Operation level.
      operationId: ApiOperationPolicy_ListByOperation
      parameters:
        - $ref: "#/components/parameters/ApiIdParameter"
        - $ref: "#/components/parameters/OperationIdParameter"
        - description: Version of the API to be used with the client request.
          in: query
          name: api-version
          required: true
          schema:
            type: string
          examples:
            ApiManagementListApisOperationsPolicies:
              value: 2017-03-01
      responses:
        "200":
          description: Api Operations Policy Collection.
          content:
            application/json:
              schema:
                description: The response of the list policy operation.
                properties:
                  count:
                    description: Total number of records
                    type: integer
                  nextLink:
                    description: Next page link if any.
                    type: string
                  value:
                    description: Policy Contract value.
                    items:
                      description: Policy contract Properties.
                      properties:
                        id:
                          description: Policy identifier.
                          type: string
                        policyContent:
                          description: Json escaped Xml Encoded contents of the Policy.
                          type: string
                      required:
                        - policyContent
                    type: array
              examples:
                ApiManagementListApisOperationsPolicies:
                  $ref: "#/components/examples/ApiManagementListApisOperationsPolic\
                    ies"
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                description: Error Body contract.
                properties:
                  code:
                    description: Service-defined error code. This code serves as a
                      sub-status for the HTTP error code specified in the
                      response.
                    type: string
                  details:
                    description: The list of invalid fields send in request, in case of
                      validation error.
                    items:
                      description: Error Field contract.
                      properties:
                        code:
                          description: Property level error code.
                          type: string
                        message:
                          description: Human-readable representation of property-level
                            error.
                          type: string
                        target:
                          description: Property name.
                          type: string
                    type: array
                  message:
                    description: Human-readable representation of the error.
                    type: string
      tags:
        - ApiOperationPolicies
  "/apis/{apiId}/operations/{operationId}/policies/{policyId}":
    delete:
      description: Deletes the policy configuration at the Api Operation.
      operationId: ApiOperationPolicy_Delete
      parameters:
        - $ref: "#/components/parameters/ApiIdParameter"
        - $ref: "#/components/parameters/OperationIdParameter"
        - description: The entity state (Etag) version of the Api Operation Policy to
            delete. A value of "*" can be used for If-Match to unconditionally
            apply the operation.
          in: header
          name: If-Match
          required: true
          schema:
            type: string
          examples:
            ApiManagementDeleteApisOperationsPolicies:
              value: "*"
        - description: The identifier of the Policy.
          in: path
          name: policyId
          required: true
          x-ms-enum:
            modelAsString: true
            name: PolicyIdName
          x-ms-parameter-location: method
          schema:
            type: string
            enum:
              - policy
          examples:
            ApiManagementDeleteApisOperationsPolicies:
              value: policy
        - description: Version of the API to be used with the client request.
          in: query
          name: api-version
          required: true
          schema:
            type: string
          examples:
            ApiManagementDeleteApisOperationsPolicies:
              value: 2017-03-01
      responses:
        "204":
          description: Successfully deleted the policy configuration at the API Operation
            level.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                description: Error Body contract.
                properties:
                  code:
                    description: Service-defined error code. This code serves as a
                      sub-status for the HTTP error code specified in the
                      response.
                    type: string
                  details:
                    description: The list of invalid fields send in request, in case of
                      validation error.
                    items:
                      description: Error Field contract.
                      properties:
                        code:
                          description: Property level error code.
                          type: string
                        message:
                          description: Human-readable representation of property-level
                            error.
                          type: string
                        target:
                          description: Property name.
                          type: string
                    type: array
                  message:
                    description: Human-readable representation of the error.
                    type: string
      tags:
        - ApiOperationPolicies
    get:
      description: Get the policy configuration at the API Operation level.
      operationId: ApiOperationPolicy_Get
      parameters:
        - $ref: "#/components/parameters/ApiIdParameter"
        - $ref: "#/components/parameters/OperationIdParameter"
        - description: The identifier of the Policy.
          in: path
          name: policyId
          required: true
          x-ms-enum:
            modelAsString: true
            name: PolicyIdName
          x-ms-parameter-location: method
          schema:
            type: string
            enum:
              - policy
          examples:
            ApiManagementGetApisOperationsPolicies:
              value: policy
        - description: Version of the API to be used with the client request.
          in: query
          name: api-version
          required: true
          schema:
            type: string
          examples:
            ApiManagementGetApisOperationsPolicies:
              value: 2017-03-01
      responses:
        "200":
          description: Api Operation Policy information.
          headers:
            ETag:
              description: Current entity state version. Should be treated as opaque and
                used to make conditional HTTP requests.
              schema:
                type: string
          content:
            application/json:
              schema:
                description: Policy contract Properties.
                properties:
                  id:
                    description: Policy identifier.
                    type: string
                  policyContent:
                    description: Json escaped Xml Encoded contents of the Policy.
                    type: string
                required:
                  - policyContent
              examples:
                ApiManagementGetApisOperationsPolicies:
                  $ref: "#/components/examples/ApiManagementGetApisOperationsPolici\
                    es"
            application/vnd.ms-azure-apim.policy+xml:
              schema:
                description: Policy contract Properties.
                properties:
                  id:
                    description: Policy identifier.
                    type: string
                  policyContent:
                    description: Json escaped Xml Encoded contents of the Policy.
                    type: string
                required:
                  - policyContent
              examples:
                ApiManagementGetApisOperationsPolicies:
                  $ref: "#/components/examples/ApiManagementGetApisOperationsPolici\
                    es"
            application/vnd.ms-azure-apim.policy.raw+xml:
              schema:
                description: Policy contract Properties.
                properties:
                  id:
                    description: Policy identifier.
                    type: string
                  policyContent:
                    description: Json escaped Xml Encoded contents of the Policy.
                    type: string
                required:
                  - policyContent
              examples:
                ApiManagementGetApisOperationsPolicies:
                  $ref: "#/components/examples/ApiManagementGetApisOperationsPolici\
                    es"
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                description: Error Body contract.
                properties:
                  code:
                    description: Service-defined error code. This code serves as a
                      sub-status for the HTTP error code specified in the
                      response.
                    type: string
                  details:
                    description: The list of invalid fields send in request, in case of
                      validation error.
                    items:
                      description: Error Field contract.
                      properties:
                        code:
                          description: Property level error code.
                          type: string
                        message:
                          description: Human-readable representation of property-level
                            error.
                          type: string
                        target:
                          description: Property name.
                          type: string
                    type: array
                  message:
                    description: Human-readable representation of the error.
                    type: string
            application/vnd.ms-azure-apim.policy+xml:
              schema:
                description: Error Body contract.
                properties:
                  code:
                    description: Service-defined error code. This code serves as a
                      sub-status for the HTTP error code specified in the
                      response.
                    type: string
                  details:
                    description: The list of invalid fields send in request, in case of
                      validation error.
                    items:
                      description: Error Field contract.
                      properties:
                        code:
                          description: Property level error code.
                          type: string
                        message:
                          description: Human-readable representation of property-level
                            error.
                          type: string
                        target:
                          description: Property name.
                          type: string
                    type: array
                  message:
                    description: Human-readable representation of the error.
                    type: string
            application/vnd.ms-azure-apim.policy.raw+xml:
              schema:
                description: Error Body contract.
                properties:
                  code:
                    description: Service-defined error code. This code serves as a
                      sub-status for the HTTP error code specified in the
                      response.
                    type: string
                  details:
                    description: The list of invalid fields send in request, in case of
                      validation error.
                    items:
                      description: Error Field contract.
                      properties:
                        code:
                          description: Property level error code.
                          type: string
                        message:
                          description: Human-readable representation of property-level
                            error.
                          type: string
                        target:
                          description: Property name.
                          type: string
                    type: array
                  message:
                    description: Human-readable representation of the error.
                    type: string
      tags:
        - ApiOperationPolicies
    put:
      description: Creates or updates policy configuration for the API Operation level.
      operationId: ApiOperationPolicy_CreateOrUpdate
      parameters:
        - $ref: "#/components/parameters/ApiIdParameter"
        - $ref: "#/components/parameters/OperationIdParameter"
        - description: The identifier of the Policy.
          in: path
          name: policyId
          required: true
          x-ms-enum:
            modelAsString: true
            name: PolicyIdName
          x-ms-parameter-location: method
          schema:
            type: string
            enum:
              - policy
          examples:
            ApiManagementPutApisOperationsPolicies:
              value: policy
        - description: The entity state (Etag) version of the Api Operation policy to
            update. A value of "*" can be used for If-Match to unconditionally
            apply the operation.
          in: header
          name: If-Match
          required: true
          schema:
            type: string
          examples:
            ApiManagementPutApisOperationsPolicies:
              value: "*"
        - description: Version of the API to be used with the client request.
          in: query
          name: api-version
          required: true
          schema:
            type: string
          examples:
            ApiManagementPutApisOperationsPolicies:
              value: 2017-03-01
      requestBody:
        $ref: "#/components/requestBodies/ApiOperationPolicy_CreateOrUpdateParamete\
          rs"
      responses:
        "200":
          description: Api Operation policy configuration of the tenant was successfully
            updated.
          content:
            application/json:
              schema:
                description: Policy contract Properties.
                properties:
                  id:
                    description: Policy identifier.
                    type: string
                  policyContent:
                    description: Json escaped Xml Encoded contents of the Policy.
                    type: string
                required:
                  - policyContent
              examples:
                ApiManagementPutApisOperationsPolicies:
                  $ref: "#/components/examples/ApiManagementPutApisOperationsPolici\
                    es"
        "201":
          description: Api Operation policy configuration was successfully created.
          content:
            application/json:
              schema:
                description: Policy contract Properties.
                properties:
                  id:
                    description: Policy identifier.
                    type: string
                  policyContent:
                    description: Json escaped Xml Encoded contents of the Policy.
                    type: string
                required:
                  - policyContent
              examples:
                ApiManagementPutApisOperationsPolicies:
                  $ref: "#/components/examples/ApiManagementPutApisOperationsPolici\
                    es"
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                description: Error Body contract.
                properties:
                  code:
                    description: Service-defined error code. This code serves as a
                      sub-status for the HTTP error code specified in the
                      response.
                    type: string
                  details:
                    description: The list of invalid fields send in request, in case of
                      validation error.
                    items:
                      description: Error Field contract.
                      properties:
                        code:
                          description: Property level error code.
                          type: string
                        message:
                          description: Human-readable representation of property-level
                            error.
                          type: string
                        target:
                          description: Property name.
                          type: string
                    type: array
                  message:
                    description: Human-readable representation of the error.
                    type: string
      tags:
        - ApiOperationPolicies
  "/apis/{apiId}/policies":
    get:
      description: Get the policy configuration at the API level.
      operationId: ApiPolicy_ListByApi
      parameters:
        - $ref: "#/components/parameters/ApiIdParameter"
        - description: Version of the API to be used with the client request.
          in: query
          name: api-version
          required: true
          schema:
            type: string
          examples:
            ApiManagementListApisPolicies:
              value: 2017-03-01
      responses:
        "200":
          description: Apis Policy Collection.
          headers:
            ETag:
              description: Current entity state version. Should be treated as opaque and
                used to make conditional HTTP requests.
              schema:
                type: string
          content:
            application/json:
              schema:
                description: The response of the list policy operation.
                properties:
                  count:
                    description: Total number of records
                    type: integer
                  nextLink:
                    description: Next page link if any.
                    type: string
                  value:
                    description: Policy Contract value.
                    items:
                      description: Policy contract Properties.
                      properties:
                        id:
                          description: Policy identifier.
                          type: string
                        policyContent:
                          description: Json escaped Xml Encoded contents of the Policy.
                          type: string
                      required:
                        - policyContent
                    type: array
              examples:
                ApiManagementListApisPolicies:
                  $ref: "#/components/examples/ApiManagementListApisPolicies"
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                description: Error Body contract.
                properties:
                  code:
                    description: Service-defined error code. This code serves as a
                      sub-status for the HTTP error code specified in the
                      response.
                    type: string
                  details:
                    description: The list of invalid fields send in request, in case of
                      validation error.
                    items:
                      description: Error Field contract.
                      properties:
                        code:
                          description: Property level error code.
                          type: string
                        message:
                          description: Human-readable representation of property-level
                            error.
                          type: string
                        target:
                          description: Property name.
                          type: string
                    type: array
                  message:
                    description: Human-readable representation of the error.
                    type: string
      tags:
        - ApiPolicy
  "/apis/{apiId}/policies/{policyId}":
    delete:
      description: Deletes the policy configuration at the Api.
      operationId: ApiPolicy_Delete
      parameters:
        - $ref: "#/components/parameters/ApiIdParameter"
        - description: The identifier of the Policy.
          in: path
          name: policyId
          required: true
          x-ms-enum:
            modelAsString: true
            name: PolicyIdName
          x-ms-parameter-location: method
          schema:
            type: string
            enum:
              - policy
          examples:
            ApiManagementDeleteApisPolicies:
              value: policy
        - description: The entity state (Etag) version of the Api policy to update. A value
            of "*" can be used for If-Match to unconditionally apply the
            operation.
          in: header
          name: If-Match
          required: true
          schema:
            type: string
          examples:
            ApiManagementDeleteApisPolicies:
              value: "*"
        - description: Version of the API to be used with the client request.
          in: query
          name: api-version
          required: true
          schema:
            type: string
          examples:
            ApiManagementDeleteApisPolicies:
              value: 2017-03-01
      responses:
        "204":
          description: Successfully deleted the policy configuration at the API level.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                description: Error Body contract.
                properties:
                  code:
                    description: Service-defined error code. This code serves as a
                      sub-status for the HTTP error code specified in the
                      response.
                    type: string
                  details:
                    description: The list of invalid fields send in request, in case of
                      validation error.
                    items:
                      description: Error Field contract.
                      properties:
                        code:
                          description: Property level error code.
                          type: string
                        message:
                          description: Human-readable representation of property-level
                            error.
                          type: string
                        target:
                          description: Property name.
                          type: string
                    type: array
                  message:
                    description: Human-readable representation of the error.
                    type: string
      tags:
        - ApiPolicy
    get:
      description: Get the policy configuration at the API level.
      operationId: ApiPolicy_Get
      parameters:
        - $ref: "#/components/parameters/ApiIdParameter"
        - description: The identifier of the Policy.
          in: path
          name: policyId
          required: true
          x-ms-enum:
            modelAsString: true
            name: PolicyIdName
          x-ms-parameter-location: method
          schema:
            type: string
            enum:
              - policy
          examples:
            ApiManagementGetApisPolicies:
              value: policy
        - description: Version of the API to be used with the client request.
          in: query
          name: api-version
          required: true
          schema:
            type: string
          examples:
            ApiManagementGetApisPolicies:
              value: 2017-03-01
      responses:
        "200":
          description: Api Policy information.
          headers:
            ETag:
              description: Current entity state version. Should be treated as opaque and
                used to make conditional HTTP requests.
              schema:
                type: string
          content:
            application/json:
              schema:
                description: Policy contract Properties.
                properties:
                  id:
                    description: Policy identifier.
                    type: string
                  policyContent:
                    description: Json escaped Xml Encoded contents of the Policy.
                    type: string
                required:
                  - policyContent
              examples:
                ApiManagementGetApisPolicies:
                  $ref: "#/components/examples/ApiManagementGetApisPolicies"
            application/vnd.ms-azure-apim.policy+xml:
              schema:
                description: Policy contract Properties.
                properties:
                  id:
                    description: Policy identifier.
                    type: string
                  policyContent:
                    description: Json escaped Xml Encoded contents of the Policy.
                    type: string
                required:
                  - policyContent
              examples:
                ApiManagementGetApisPolicies:
                  $ref: "#/components/examples/ApiManagementGetApisPolicies"
            application/vnd.ms-azure-apim.policy.raw+xml:
              schema:
                description: Policy contract Properties.
                properties:
                  id:
                    description: Policy identifier.
                    type: string
                  policyContent:
                    description: Json escaped Xml Encoded contents of the Policy.
                    type: string
                required:
                  - policyContent
              examples:
                ApiManagementGetApisPolicies:
                  $ref: "#/components/examples/ApiManagementGetApisPolicies"
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                description: Error Body contract.
                properties:
                  code:
                    description: Service-defined error code. This code serves as a
                      sub-status for the HTTP error code specified in the
                      response.
                    type: string
                  details:
                    description: The list of invalid fields send in request, in case of
                      validation error.
                    items:
                      description: Error Field contract.
                      properties:
                        code:
                          description: Property level error code.
                          type: string
                        message:
                          description: Human-readable representation of property-level
                            error.
                          type: string
                        target:
                          description: Property name.
                          type: string
                    type: array
                  message:
                    description: Human-readable representation of the error.
                    type: string
            application/vnd.ms-azure-apim.policy+xml:
              schema:
                description: Error Body contract.
                properties:
                  code:
                    description: Service-defined error code. This code serves as a
                      sub-status for the HTTP error code specified in the
                      response.
                    type: string
                  details:
                    description: The list of invalid fields send in request, in case of
                      validation error.
                    items:
                      description: Error Field contract.
                      properties:
                        code:
                          description: Property level error code.
                          type: string
                        message:
                          description: Human-readable representation of property-level
                            error.
                          type: string
                        target:
                          description: Property name.
                          type: string
                    type: array
                  message:
                    description: Human-readable representation of the error.
                    type: string
            application/vnd.ms-azure-apim.policy.raw+xml:
              schema:
                description: Error Body contract.
                properties:
                  code:
                    description: Service-defined error code. This code serves as a
                      sub-status for the HTTP error code specified in the
                      response.
                    type: string
                  details:
                    description: The list of invalid fields send in request, in case of
                      validation error.
                    items:
                      description: Error Field contract.
                      properties:
                        code:
                          description: Property level error code.
                          type: string
                        message:
                          description: Human-readable representation of property-level
                            error.
                          type: string
                        target:
                          description: Property name.
                          type: string
                    type: array
                  message:
                    description: Human-readable representation of the error.
                    type: string
      tags:
        - ApiPolicy
    put:
      description: Creates or updates policy configuration for the API.
      operationId: ApiPolicy_CreateOrUpdate
      parameters:
        - $ref: "#/components/parameters/ApiIdParameter"
        - description: The identifier of the Policy.
          in: path
          name: policyId
          required: true
          x-ms-enum:
            modelAsString: true
            name: PolicyIdName
          x-ms-parameter-location: method
          schema:
            type: string
            enum:
              - policy
          examples:
            ApiManagementPutApisPolicies:
              value: policy
        - description: The entity state (Etag) version of the Api Policy to update. A value
            of "*" can be used for If-Match to unconditionally apply the
            operation.
          in: header
          name: If-Match
          required: true
          schema:
            type: string
          examples:
            ApiManagementPutApisPolicies:
              value: "*"
        - description: Version of the API to be used with the client request.
          in: query
          name: api-version
          required: true
          schema:
            type: string
          examples:
            ApiManagementPutApisPolicies:
              value: 2017-03-01
      requestBody:
        $ref: "#/components/requestBodies/ApiOperationPolicy_CreateOrUpdateParamete\
          rs"
      responses:
        "200":
          description: Api policy configuration of the tenant was successfully updated.
          content:
            application/json:
              schema:
                description: Policy contract Properties.
                properties:
                  id:
                    description: Policy identifier.
                    type: string
                  policyContent:
                    description: Json escaped Xml Encoded contents of the Policy.
                    type: string
                required:
                  - policyContent
              examples:
                ApiManagementPutApisPolicies:
                  $ref: "#/components/examples/ApiManagementPutApisPolicies"
        "201":
          description: Api policy configuration was successfully created.
          content:
            application/json:
              schema:
                description: Policy contract Properties.
                properties:
                  id:
                    description: Policy identifier.
                    type: string
                  policyContent:
                    description: Json escaped Xml Encoded contents of the Policy.
                    type: string
                required:
                  - policyContent
              examples:
                ApiManagementPutApisPolicies:
                  $ref: "#/components/examples/ApiManagementPutApisPolicies"
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                description: Error Body contract.
                properties:
                  code:
                    description: Service-defined error code. This code serves as a
                      sub-status for the HTTP error code specified in the
                      response.
                    type: string
                  details:
                    description: The list of invalid fields send in request, in case of
                      validation error.
                    items:
                      description: Error Field contract.
                      properties:
                        code:
                          description: Property level error code.
                          type: string
                        message:
                          description: Human-readable representation of property-level
                            error.
                          type: string
                        target:
                          description: Property name.
                          type: string
                    type: array
                  message:
                    description: Human-readable representation of the error.
                    type: string
      tags:
        - ApiPolicy
  "/apis/{apiId}/products":
    get:
      description: Lists all Products, which the API is part of.
      operationId: ApiProduct_ListByApis
      parameters:
        - $ref: "#/components/parameters/ApiIdParameter"
        - description: >-
            | Field | Supported operators    | Supported
            functions                         |

            |-------|------------------------|---------------------------------------------|

            | name  | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |
          in: query
          name: $filter
          required: false
          schema:
            type: string
        - description: Number of records to return.
          in: query
          name: $top
          required: false
          x-ms-parameter-location: method
          schema:
            type: integer
            format: int32
            minimum: 1
        - description: Number of records to skip.
          in: query
          name: $skip
          required: false
          x-ms-parameter-location: method
          schema:
            type: integer
            format: int32
            minimum: 0
        - description: Version of the API to be used with the client request.
          in: query
          name: api-version
          required: true
          schema:
            type: string
          examples:
            ApiManagementListApisProducts:
              value: 2017-03-01
      responses:
        "200":
          description: The operation returns a collection of products which have the Api
            entity.
          content:
            application/json:
              schema:
                description: Paged Products list representation.
                properties:
                  count:
                    description: Total number of entities
                    type: integer
                  nextLink:
                    description: Next page link if any.
                    type: string
                  value:
                    description: Page values.
                    items:
                      allOf:
                        - allOf:
                            - description: Product Entity Base Parameters
                              properties:
                                approvalRequired:
                                  description: whether subscription approval is required.
                                    If false, new subscriptions will be approved
                                    automatically enabling developers to call
                                    the product’s APIs immediately after
                                    subscribing. If true, administrators must
                                    manually approve the subscription before the
                                    developer can any of the product’s APIs. Can
                                    be present only if subscriptionRequired
                                    property is present and has a value of
                                    false.
                                  type: boolean
                                description:
                                  description: Product description. May include HTML
                                    formatting tags.
                                  maxLength: 1000
                                  minLength: 1
                                  type: string
                                state:
                                  description: whether product is published or not.
                                    Published products are discoverable by users
                                    of developer portal. Non published products
                                    are visible only to administrators. Default
                                    state of Product is notPublished.
                                  enum:
                                    - notPublished
                                    - published
                                  type: string
                                  x-ms-enum:
                                    modelAsString: false
                                    name: ProductState
                                subscriptionRequired:
                                  description: Whether a product subscription is required
                                    for accessing APIs included in this product.
                                    If true, the product is referred to as
                                    "protected" and a valid subscription key is
                                    required for a request to an API included in
                                    the product to succeed. If false, the
                                    product is referred to as "open" and
                                    requests to an API included in the product
                                    can be made without a subscription key. If
                                    property is omitted when creating a new
                                    product it's value is assumed to be true.
                                  type: boolean
                                subscriptionsLimit:
                                  description: Whether the number of subscriptions a user
                                    can have to this product at the same time.
                                    Set to null or omit to allow unlimited per
                                    user subscriptions. Can be present only if
                                    subscriptionRequired property is present and
                                    has a value of false.
                                  format: int32
                                  type: integer
                                terms:
                                  description: Product terms of use. Developers trying to
                                    subscribe to the product will be presented
                                    and required to accept these terms before
                                    they can complete the subscription process.
                                  type: string
                          description: Product profile.
                          properties:
                            name:
                              description: Product name.
                              maxLength: 300
                              minLength: 1
                              type: string
                          required:
                            - name
                      description: Product details.
                      properties:
                        id:
                          description: Identifier of the Product entity.
                          type: string
                    type: array
              examples:
                ApiManagementListApisProducts:
                  $ref: "#/components/examples/ApiManagementListApisProducts"
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                description: Error Body contract.
                properties:
                  code:
                    description: Service-defined error code. This code serves as a
                      sub-status for the HTTP error code specified in the
                      response.
                    type: string
                  details:
                    description: The list of invalid fields send in request, in case of
                      validation error.
                    items:
                      description: Error Field contract.
                      properties:
                        code:
                          description: Property level error code.
                          type: string
                        message:
                          description: Human-readable representation of property-level
                            error.
                          type: string
                        target:
                          description: Property name.
                          type: string
                    type: array
                  message:
                    description: Human-readable representation of the error.
                    type: string
      tags:
        - ApiProduct
      x-ms-odata: ./apimproducts.json#/definitions/ProductContract
      x-ms-pageable:
        nextLinkName: nextLink
  "/apis/{apiId}/schemas":
    get:
      description: Get the schema configuration at the API level.
      operationId: ApiSchema_ListByApi
      parameters:
        - $ref: "#/components/parameters/ApiIdParameter"
        - description: Version of the API to be used with the client request.
          in: query
          name: api-version
          required: true
          schema:
            type: string
          examples:
            ApiManagementListApisSchemas:
              value: 2017-03-01
      responses:
        "200":
          description: Apis Schema Collection.
          headers:
            ETag:
              description: Current entity state version. Should be treated as opaque and
                used to make conditional HTTP requests.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SchemaCollection"
              examples:
                ApiManagementListApisSchemas:
                  $ref: "#/components/examples/ApiManagementListApisSchemas"
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                description: Error Body contract.
                properties:
                  code:
                    description: Service-defined error code. This code serves as a
                      sub-status for the HTTP error code specified in the
                      response.
                    type: string
                  details:
                    description: The list of invalid fields send in request, in case of
                      validation error.
                    items:
                      description: Error Field contract.
                      properties:
                        code:
                          description: Property level error code.
                          type: string
                        message:
                          description: Human-readable representation of property-level
                            error.
                          type: string
                        target:
                          description: Property name.
                          type: string
                    type: array
                  message:
                    description: Human-readable representation of the error.
                    type: string
      tags:
        - ApiSchema
      x-ms-pageable:
        nextLinkName: nextLink
  "/apis/{apiId}/schemas/{schemaId}":
    delete:
      description: Deletes the schema configuration at the Api.
      operationId: ApiSchema_Delete
      parameters:
        - $ref: "#/components/parameters/ApiIdParameter"
        - $ref: "#/components/parameters/SchemaIdParameter"
        - description: The entity state (Etag) version of the Api schema to update. A value
            of "*" can be used for If-Match to unconditionally apply the
            operation.
          in: header
          name: If-Match
          required: true
          schema:
            type: string
          examples:
            ApiManagementDeleteApisSchemas:
              value: '"AAAAAAAAKhk="'
        - description: Version of the API to be used with the client request.
          in: query
          name: api-version
          required: true
          schema:
            type: string
          examples:
            ApiManagementDeleteApisSchemas:
              value: 2017-03-01
      responses:
        "204":
          description: Successfully deleted the schema configuration at the API level.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                description: Error Body contract.
                properties:
                  code:
                    description: Service-defined error code. This code serves as a
                      sub-status for the HTTP error code specified in the
                      response.
                    type: string
                  details:
                    description: The list of invalid fields send in request, in case of
                      validation error.
                    items:
                      description: Error Field contract.
                      properties:
                        code:
                          description: Property level error code.
                          type: string
                        message:
                          description: Human-readable representation of property-level
                            error.
                          type: string
                        target:
                          description: Property name.
                          type: string
                    type: array
                  message:
                    description: Human-readable representation of the error.
                    type: string
      tags:
        - ApiSchema
    get:
      description: Get the schema configuration at the API level.
      operationId: ApiSchema_Get
      parameters:
        - $ref: "#/components/parameters/ApiIdParameter"
        - $ref: "#/components/parameters/SchemaIdParameter"
        - description: Version of the API to be used with the client request.
          in: query
          name: api-version
          required: true
          schema:
            type: string
          examples:
            ApiManagementGetApisSchemas:
              value: 2017-03-01
      responses:
        "200":
          description: Api Schema information.
          headers:
            ETag:
              description: Current entity state version. Should be treated as opaque and
                used to make conditional HTTP requests.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SchemaContract"
              examples:
                ApiManagementGetApisSchemas:
                  $ref: "#/components/examples/ApiManagementGetApisSchemas"
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                description: Error Body contract.
                properties:
                  code:
                    description: Service-defined error code. This code serves as a
                      sub-status for the HTTP error code specified in the
                      response.
                    type: string
                  details:
                    description: The list of invalid fields send in request, in case of
                      validation error.
                    items:
                      description: Error Field contract.
                      properties:
                        code:
                          description: Property level error code.
                          type: string
                        message:
                          description: Human-readable representation of property-level
                            error.
                          type: string
                        target:
                          description: Property name.
                          type: string
                    type: array
                  message:
                    description: Human-readable representation of the error.
                    type: string
      tags:
        - ApiSchema
    put:
      description: Creates or updates schema configuration for the API.
      operationId: ApiSchema_CreateOrUpdate
      parameters:
        - $ref: "#/components/parameters/ApiIdParameter"
        - $ref: "#/components/parameters/SchemaIdParameter"
        - description: The entity state (Etag) version of the Api Schema to update. A value
            of "*" can be used for If-Match to unconditionally apply the
            operation.
          in: header
          name: If-Match
          required: false
          schema:
            type: string
        - description: Version of the API to be used with the client request.
          in: query
          name: api-version
          required: true
          schema:
            type: string
          examples:
            ApiManagementPutApisSchemas:
              value: 2017-03-01
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SchemaContract"
        description: The schema contents to apply.
        required: true
      responses:
        "200":
          description: Api schema configuration of the tenant was successfully updated.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SchemaContract"
              examples:
                ApiManagementPutApisSchemas:
                  $ref: "#/components/examples/ApiManagementPutApisSchemas"
        "201":
          description: Api schema configuration was successfully created.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SchemaContract"
              examples:
                ApiManagementPutApisSchemas:
                  $ref: "#/components/examples/ApiManagementPutApisSchemas"
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                description: Error Body contract.
                properties:
                  code:
                    description: Service-defined error code. This code serves as a
                      sub-status for the HTTP error code specified in the
                      response.
                    type: string
                  details:
                    description: The list of invalid fields send in request, in case of
                      validation error.
                    items:
                      description: Error Field contract.
                      properties:
                        code:
                          description: Property level error code.
                          type: string
                        message:
                          description: Human-readable representation of property-level
                            error.
                          type: string
                        target:
                          description: Property name.
                          type: string
                    type: array
                  message:
                    description: Human-readable representation of the error.
                    type: string
      tags:
        - ApiSchema
x-ms-paths:
  "/apis/{apiId}?export=true":
    get:
      description: Gets the details of the API specified by its identifier in the format
        specified to the Storage Blob with SAS Key valid for 5 minutes.
      operationId: ApiExport_Get
      parameters:
        - $ref: "#/components/parameters/ApiIdParameter"
        - description: Format in which to export the Api Details to the Storage Blob with
            Sas Key valid for 5 minutes.
          in: header
          name: Accept
          required: true
          x-ms-enum:
            modelAsString: true
            name: ExportFormat
            values:
              - description: Export the Api Definition in OpenApi Specification 2.0 format
                  to the Storage Blob.
                name: OpenApi2
                value: application/vnd.swagger.link+json
              - description: Export the Api Definition in WSDL Schema to Storage Blob.
                name: Wsdl
                value: application/vnd.ms.wsdl.link+xml
              - description: Export the Api Definition in WADL Schema to Storage Blob.
                name: Wadl
                value: application/vnd.sun.wadl.link+json
          schema:
            type: string
            enum:
              - application/vnd.swagger.link+json
              - application/vnd.sun.wadl.link+json
              - application/vnd.ms.wsdl.link+xml
        - description: Query parameter required to export the API details.
          in: query
          name: export
          required: true
          x-ms-enum:
            modelAsString: true
            name: ExportApi
          schema:
            type: string
            enum:
              - "true"
        - description: Version of the API to be used with the client request.
          in: query
          name: api-version
          required: true
          schema:
            type: string
      responses:
        "200":
          description: The response contains a stream with a full set of API metadata and
            includes API entity with an embedded array of operation entities.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiExportResult"
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                description: Error Body contract.
                properties:
                  code:
                    description: Service-defined error code. This code serves as a
                      sub-status for the HTTP error code specified in the
                      response.
                    type: string
                  details:
                    description: The list of invalid fields send in request, in case of
                      validation error.
                    items:
                      description: Error Field contract.
                      properties:
                        code:
                          description: Property level error code.
                          type: string
                        message:
                          description: Human-readable representation of property-level
                            error.
                          type: string
                        target:
                          description: Property name.
                          type: string
                    type: array
                  message:
                    description: Human-readable representation of the error.
                    type: string
      tags:
        - Apis
servers:
  - url: https://azure.local
  - url: "{apimBaseUrl}"
    variables:
      apimBaseUrl:
        description: The management endpoint of the API Management service, for example
          https://myapimservice.management.azure-api.net.
        x-ms-skip-url-encoding: true
        default: ""
components:
  examples:
    ApiManagementListApis:
      value:
        count: 71
        value:
          - apiRevision: "1"
            id: /apis/5a58bac3a40f7ef2e05bc7db
            isCurrent: true
            name: 5a58bac3a40f7ef2e05bc7d7
            path: suffix_5a58bac3a40f7ef2e05bc7dd
            protocols:
              - https
            serviceUrl: https://5a58bac3a40f7ef2e05bc7dc
          - apiRevision: "1"
            id: /apis/5a58bac3a40f7ef2e05bc7de
            isCurrent: true
            name: 5a58bac3a40f7ef2e05bc7d8
            path: suffix_5a58bac3a40f7ef2e05bc7e0
            protocols:
              - https
            serviceUrl: https://5a58bac3a40f7ef2e05bc7df
          - apiRevision: "1"
            description: description_5a58babfa40f7ef2e05bc7bd
            id: /apis/5a58babfa40f7ef2e05bc7bb
            isCurrent: true
            name: api_5a58babfa40f7ef2e05bc7bc
            path: suffix_5a58babfa40f7ef2e05bc7bf
            protocols:
              - https
            serviceUrl: http://contoso/5a58babfa40f7ef2e05bc7be
    ApiManagementGetApis:
      value:
        apiRevision: "1"
        description: description_5a58bafaa40f7ef2e05bcfc0
        id: /apis/5a58bafaa40f7ef2e05bcfbe
        isCurrent: true
        name: api_5a58bafaa40f7ef2e05bcfbf
        path: suffix_5a58bafaa40f7ef2e05bcfc2
        protocols:
          - https
        serviceUrl: http://contoso/5a58bafaa40f7ef2e05bcfc1
        subscriptionKeyParameterNames:
          header: Ocp-Apim-Subscription-Key
          query: subscription-key
    ApiManagementPutApis:
      value:
        apiRevision: "1"
        description: description_5a58bab6a40f7ef2e05bc76b
        id: /apis/5a58bab6a40f7ef2e05bc769
        isCurrent: true
        name: api_5a58bab6a40f7ef2e05bc76a
        path: suffix_5a58bab6a40f7ef2e05bc76d
        protocols:
          - https
        serviceUrl: http://contoso/5a58bab6a40f7ef2e05bc76c
        subscriptionKeyParameterNames:
          header: Ocp-Apim-Subscription-Key
          query: subscription-key
    ApiManagementListApisOperations:
      value:
        count: 8
        value:
          - description: description_5a58bad4a40f7ef2e05bcce6
            id: /apis/5a58bac3a40f7ef2e05bc7db/operations/5a58bad4a40f7ef2e05bccf2
            method: PUT
            name: operation_5a58bad4a40f7ef2e05bcce5
            urlTemplate: /template_5a58bad4a40f7ef2e05bcce7
          - id: /apis/5a58bac3a40f7ef2e05bc7db/operations/5a58bad9a40f7ef2e05bcd0b
            method: PATCH
            name: operation_5a58bad9a40f7ef2e05bcd09
            urlTemplate: /template_5a58bad9a40f7ef2e05bcd0a
          - id: /apis/5a58bac3a40f7ef2e05bc7db/operations/5a58bad9a40f7ef2e05bcd0f
            method: PATCH
            name: operation_5a58bad9a40f7ef2e05bcd0d
            urlTemplate: /template_5a58bad9a40f7ef2e05bcd0e
          - description: description_5a58badaa40f7ef2e05bcd12
            id: /apis/5a58bac3a40f7ef2e05bc7db/operations/5a58badaa40f7ef2e05bcd1e
            method: POST
            name: operation_5a58badaa40f7ef2e05bcd11
            urlTemplate: /template_5a58badaa40f7ef2e05bcd13
          - description: description_5a58badea40f7ef2e05bcd33
            id: /apis/5a58bac3a40f7ef2e05bc7db/operations/5a58badea40f7ef2e05bcd35
            method: POST
            name: operation_5a58badea40f7ef2e05bcd32
            urlTemplate: /template_5a58badea40f7ef2e05bcd34
          - description: description_5a58bb39a40f7ef2e05bd90f
            id: /apis/5a58bac3a40f7ef2e05bc7db/operations/5a58bb39a40f7ef2e05bd91b
            method: CONNECT
            name: operation_5a58bb39a40f7ef2e05bd90e
            urlTemplate: /template_5a58bb39a40f7ef2e05bd910
          - description: description_5a58bb46a40f7ef2e05bd96f
            id: /apis/5a58bac3a40f7ef2e05bc7db/operations/5a58bb46a40f7ef2e05bd97b
            method: DELETE
            name: operation_5a58bb46a40f7ef2e05bd96e
            urlTemplate: /template_5a58bb46a40f7ef2e05bd970
          - description: description_5a58bb5ba40f7ef2e05bdbf4
            id: /apis/5a58bac3a40f7ef2e05bc7db/operations/5a58bb5ba40f7ef2e05bdc00
            method: DELETE
            name: operation_5a58bb5ba40f7ef2e05bdbf3
            urlTemplate: /template_5a58bb5ba40f7ef2e05bdbf5
    ApiManagementGetApisOperations:
      value:
        id: /apis/5a58bac3a40f7ef2e05bc7db/operations/5a58bad9a40f7ef2e05bcd0f
        method: PATCH
        name: operation_5a58bad9a40f7ef2e05bcd0d
        request:
          headers: []
          queryParameters: []
          representations: []
        responses: []
        templateParameters: []
        urlTemplate: /template_5a58bad9a40f7ef2e05bcd0e
    ApiManagementPutApisOperations:
      value:
        description: description_5a58bab8a40f7ef2e05bc7a8
        id: /apis/5a58bab8a40f7ef2e05bc7a1/operations/5a58bab8a40f7ef2e05bc7aa
        method: PATCH
        name: operation_5a58bab8a40f7ef2e05bc7a7
        request:
          headers: []
          queryParameters: []
          representations: []
        responses: []
        templateParameters: []
        urlTemplate: /template_5a58bab8a40f7ef2e05bc7a9
    ApiManagementListApisOperationsPolicies:
      value:
        nextLink: ""
        value:
          - id: /apis/599e2953193c3c0bd0b3e2fa/operations/599e29ab193c3c0bd0b3e2fb/policies/policy
            policyContent: "<!--\r

              \    IMPORTANT:\r

              \    - Policy elements can appear only within the
              <inbound>, <outbound>, <backend> section elements.\r

              \    - Only the <forward-request> policy element can
              appear within the <backend> section element.\r

              \    - To apply a policy to the incoming request
              (before it is forwarded to the backend service), place a
              corresponding policy element within the <inbound> section
              element.\r

              \    - To apply a policy to the outgoing response
              (before it is sent back to the caller), place a corresponding
              policy element within the <outbound> section element.\r

              \    - To add a policy position the cursor at the
              desired insertion point and click on the round button associated
              with the policy.\r

              \    - To remove a policy, delete the corresponding
              policy statement from the policy document.\r

              \    - Position the <base> element within a section
              element to inherit all policies from the corresponding section
              element in the enclosing scope.\r

              \    - Remove the <base> element to prevent
              inheriting policies from the corresponding section element in the
              enclosing scope.\r

              \    - Policies are applied in the order of their
              appearance, from the top down.\r

              -->\r

              <policies>\r

              \  <inbound>\r

              \    <validate-jwt header-name=\"dd\">\r

              \      <required-claims>\r

              \        <claim name=\"bla\" separator=\"\">\r

              \          <value>xxx</value>\r

              \        </claim>\r

              \      </required-claims>\r

              \    </validate-jwt>\r

              \    <base />\r

              \  </inbound>\r

              \  <backend>\r

              \    <base />\r

              \  </backend>\r

              \  <outbound>\r

              \    <base />\r

              \  </outbound>\r

              </policies>"
    ApiManagementGetApisOperationsPolicies:
      value:
        id: /apis/5a58bfeea40f7e104892c5b6/operations/5a58bfeea40f7e104892c5c9/policies/policy
        policyContent: "<policies>\r

          \  <inbound>\r

          \    <base />\r

          \    <rewrite-uri template=\"/resource\" />\r

          \  </inbound>\r

          \  <backend>\r

          \    <base />\r

          \  </backend>\r

          \  <outbound>\r

          \    <base />\r

          \  </outbound>\r

          </policies>"
    ApiManagementPutApisOperationsPolicies:
      value:
        id: /apis/5a58bc94a40f7e10489299ac/operations/5a58bc94a40f7e10489299bf/policies/policy
        policyContent: "<policies>\r

          \  <inbound>\r

          \    <base />\r

          \    <rewrite-uri template=\"/resource\" />\r

          \  </inbound>\r

          \  <backend>\r

          \    <base />\r

          \  </backend>\r

          \  <outbound>\r

          \    <base />\r

          \  </outbound>\r

          </policies>"
    ApiManagementListApisPolicies:
      value:
        count: 1
        value:
          - id: /policies/policy
            policyContent: "<!--\r

              \    IMPORTANT:\r

              \    - Policy elements can appear only within the
              <inbound>, <outbound>, <backend> section elements.\r

              \    - Only the <forward-request> policy element can
              appear within the <backend> section element.\r

              \    - To apply a policy to the incoming request
              (before it is forwarded to the backend service), place a
              corresponding policy element within the <inbound> section
              element.\r

              \    - To apply a policy to the outgoing response
              (before it is sent back to the caller), place a corresponding
              policy element within the <outbound> section element.\r

              \    - To add a policy position the cursor at the
              desired insertion point and click on the round button associated
              with the policy.\r

              \    - To remove a policy, delete the corresponding
              policy statement from the policy document.\r

              \    - Policies are applied in the order of their
              appearance, from the top down.\r

              -->\r

              <policies>\r

              \  <inbound />\r

              \  <backend>\r

              \    <forward-request />\r

              \  </backend>\r

              \  <outbound />\r

              </policies>"
    ApiManagementGetApisPolicies:
      value:
        id: /apis/5a58bf63a40f7e104892bdaf/policies/policy
        policyContent: "<policies>\r

          \  <inbound>\r

          \    <base />\r

          \    <cache-lookup vary-by-developer=\"false\"
          vary-by-developer-groups=\"false\" downstream-caching-type=\"none\">\r

          \      <vary-by-query-parameter>version</vary-by-query-para\
          meter>\r

          \      <vary-by-header>Accept</vary-by-header>\r

          \      <vary-by-header>Accept-Charset</vary-by-header>\r

          \    </cache-lookup>\r

          \  </inbound>\r

          \  <backend>\r

          \    <base />\r

          \  </backend>\r

          \  <outbound>\r

          \    <cache-store duration=\"@(10)\" />\r

          \    <base />\r

          \  </outbound>\r

          </policies>"
    ApiManagementPutApisPolicies:
      value:
        id: /apis/5a58bd43a40f7e104892a398/policies/policy
        policyContent: "<policies>\r

          \  <inbound>\r

          \    <base />\r

          \    <cache-lookup vary-by-developer=\"false\"
          vary-by-developer-groups=\"false\" downstream-caching-type=\"none\">\r

          \      <vary-by-query-parameter>version</vary-by-query-para\
          meter>\r

          \      <vary-by-header>Accept</vary-by-header>\r

          \      <vary-by-header>Accept-Charset</vary-by-header>\r

          \    </cache-lookup>\r

          \  </inbound>\r

          \  <backend>\r

          \    <base />\r

          \  </backend>\r

          \  <outbound>\r

          \    <cache-store duration=\"@(10)\" />\r

          \    <base />\r

          \  </outbound>\r

          </policies>"
    ApiManagementListApisProducts:
      value:
        count: 2
        value:
          - approvalRequired: false
            description: product_description_5a58bddfa40f7e104892ac1a
            id: /products/5a58bddfa40f7e104892ac18
            name: product_5a58bddfa40f7e104892ac19
            state: notPublished
            subscriptionRequired: true
          - approvalRequired: false
            description: product_description_5a58bddfa40f7e104892ac1f
            id: /products/5a58bddfa40f7e104892ac1d
            name: product_5a58bddfa40f7e104892ac1e
            state: notPublished
            subscriptionRequired: true
    ApiManagementListApisSchemas:
      value:
        count: 0
        value: []
    ApiManagementGetApisSchemas:
      value:
        contentType: application/vnd.ms-azure-apim.xsd+xml
        document:
          value: "<s:schema elementFormDefault=\"qualified\"
            targetNamespace=\"http://ws.cdyne.com/WeatherWS/\"
            xmlns:tns=\"http://ws.cdyne.com/WeatherWS/\"
            xmlns:s=\"http://www.w3.org/2001/XMLSchema\"
            xmlns:soap12=\"http://schemas.xmlsoap.org/wsdl/soap12/\"
            xmlns:mime=\"http://schemas.xmlsoap.org/wsdl/mime/\"
            xmlns:soap=\"http://schemas.xmlsoap.org/wsdl/soap/\"
            xmlns:tm=\"http://microsoft.com/wsdl/mime/textMatching/\"
            xmlns:http=\"http://schemas.xmlsoap.org/wsdl/http/\"
            xmlns:soapenc=\"http://schemas.xmlsoap.org/soap/encoding/\"
            xmlns:wsdl=\"http://schemas.xmlsoap.org/wsdl/\"
            xmlns:apim-wsdltns=\"http://ws.cdyne.com/WeatherWS/\">\r

            \  <s:element name=\"GetWeatherInformation\">\r

            \    <s:complexType />\r

            \  </s:element>\r

            \  <s:element name=\"GetWeatherInformationResponse\">\r

            \    <s:complexType>\r

            \      <s:sequence>\r

            \        <s:element minOccurs=\"0\" maxOccurs=\"1\"
            name=\"GetWeatherInformationResult\"
            type=\"tns:ArrayOfWeatherDescription\" />\r

            \      </s:sequence>\r

            \    </s:complexType>\r

            \  </s:element>\r

            \  <s:complexType name=\"ArrayOfWeatherDescription\">\r

            \    <s:sequence>\r

            \      <s:element minOccurs=\"0\"
            maxOccurs=\"unbounded\" name=\"WeatherDescription\"
            type=\"tns:WeatherDescription\" />\r

            \    </s:sequence>\r

            \  </s:complexType>\r

            \  <s:complexType name=\"WeatherDescription\">\r

            \    <s:sequence>\r

            \      <s:element minOccurs=\"1\" maxOccurs=\"1\"
            name=\"WeatherID\" type=\"s:short\" />\r

            \      <s:element minOccurs=\"0\" maxOccurs=\"1\"
            name=\"Description\" type=\"s:string\" />\r

            \      <s:element minOccurs=\"0\" maxOccurs=\"1\"
            name=\"PictureURL\" type=\"s:string\" />\r

            \    </s:sequence>\r

            \  </s:complexType>\r

            \  <s:element name=\"GetCityForecastByZIP\">\r

            \    <s:complexType>\r

            \      <s:sequence>\r

            \        <s:element minOccurs=\"0\" maxOccurs=\"1\"
            name=\"ZIP\" type=\"s:string\" />\r

            \      </s:sequence>\r

            \    </s:complexType>\r

            \  </s:element>\r

            \  <s:element name=\"GetCityForecastByZIPResponse\">\r

            \    <s:complexType>\r

            \      <s:sequence>\r

            \        <s:element minOccurs=\"0\" maxOccurs=\"1\"
            name=\"GetCityForecastByZIPResult\" type=\"tns:ForecastReturn\" />\r

            \      </s:sequence>\r

            \    </s:complexType>\r

            \  </s:element>\r

            \  <s:complexType name=\"ForecastReturn\">\r

            \    <s:sequence>\r

            \      <s:element minOccurs=\"1\" maxOccurs=\"1\"
            name=\"Success\" type=\"s:boolean\" />\r

            \      <s:element minOccurs=\"0\" maxOccurs=\"1\"
            name=\"ResponseText\" type=\"s:string\" />\r

            \      <s:element minOccurs=\"0\" maxOccurs=\"1\"
            name=\"State\" type=\"s:string\" />\r

            \      <s:element minOccurs=\"0\" maxOccurs=\"1\"
            name=\"City\" type=\"s:string\" />\r

            \      <s:element minOccurs=\"0\" maxOccurs=\"1\"
            name=\"WeatherStationCity\" type=\"s:string\" />\r

            \      <s:element minOccurs=\"0\" maxOccurs=\"1\"
            name=\"ForecastResult\" type=\"tns:ArrayOfForecast\" />\r

            \    </s:sequence>\r

            \  </s:complexType>\r

            \  <s:complexType name=\"ArrayOfForecast\">\r

            \    <s:sequence>\r

            \      <s:element minOccurs=\"0\"
            maxOccurs=\"unbounded\" name=\"Forecast\" nillable=\"true\"
            type=\"tns:Forecast\" />\r

            \    </s:sequence>\r

            \  </s:complexType>\r

            \  <s:complexType name=\"Forecast\">\r

            \    <s:sequence>\r

            \      <s:element minOccurs=\"1\" maxOccurs=\"1\"
            name=\"Date\" type=\"s:dateTime\" />\r

            \      <s:element minOccurs=\"1\" maxOccurs=\"1\"
            name=\"WeatherID\" type=\"s:short\" />\r

            \      <s:element minOccurs=\"0\" maxOccurs=\"1\"
            name=\"Desciption\" type=\"s:string\" />\r

            \      <s:element minOccurs=\"1\" maxOccurs=\"1\"
            name=\"Temperatures\" type=\"tns:temp\" />\r

            \      <s:element minOccurs=\"1\" maxOccurs=\"1\"
            name=\"ProbabilityOfPrecipiation\" type=\"tns:POP\" />\r

            \    </s:sequence>\r

            \  </s:complexType>\r

            \  <s:complexType name=\"temp\">\r

            \    <s:sequence>\r

            \      <s:element minOccurs=\"0\" maxOccurs=\"1\"
            name=\"MorningLow\" type=\"s:string\" />\r

            \      <s:element minOccurs=\"0\" maxOccurs=\"1\"
            name=\"DaytimeHigh\" type=\"s:string\" />\r

            \    </s:sequence>\r

            \  </s:complexType>\r

            \  <s:complexType name=\"POP\">\r

            \    <s:sequence>\r

            \      <s:element minOccurs=\"0\" maxOccurs=\"1\"
            name=\"Nighttime\" type=\"s:string\" />\r

            \      <s:element minOccurs=\"0\" maxOccurs=\"1\"
            name=\"Daytime\" type=\"s:string\" />\r

            \    </s:sequence>\r

            \  </s:complexType>\r

            \  <s:element name=\"GetCityWeatherByZIP\">\r

            \    <s:complexType>\r

            \      <s:sequence>\r

            \        <s:element minOccurs=\"0\" maxOccurs=\"1\"
            name=\"ZIP\" type=\"s:string\" />\r

            \      </s:sequence>\r

            \    </s:complexType>\r

            \  </s:element>\r

            \  <s:element name=\"GetCityWeatherByZIPResponse\">\r

            \    <s:complexType>\r

            \      <s:sequence>\r

            \        <s:element minOccurs=\"1\" maxOccurs=\"1\"
            name=\"GetCityWeatherByZIPResult\" type=\"tns:WeatherReturn\" />\r

            \      </s:sequence>\r

            \    </s:complexType>\r

            \  </s:element>\r

            \  <s:complexType name=\"WeatherReturn\">\r

            \    <s:sequence>\r

            \      <s:element minOccurs=\"1\" maxOccurs=\"1\"
            name=\"Success\" type=\"s:boolean\" />\r

            \      <s:element minOccurs=\"0\" maxOccurs=\"1\"
            name=\"ResponseText\" type=\"s:string\" />\r

            \      <s:element minOccurs=\"0\" maxOccurs=\"1\"
            name=\"State\" type=\"s:string\" />\r

            \      <s:element minOccurs=\"0\" maxOccurs=\"1\"
            name=\"City\" type=\"s:string\" />\r

            \      <s:element minOccurs=\"0\" maxOccurs=\"1\"
            name=\"WeatherStationCity\" type=\"s:string\" />\r

            \      <s:element minOccurs=\"1\" maxOccurs=\"1\"
            name=\"WeatherID\" type=\"s:short\" />\r

            \      <s:element minOccurs=\"0\" maxOccurs=\"1\"
            name=\"Description\" type=\"s:string\" />\r

            \      <s:element minOccurs=\"0\" maxOccurs=\"1\"
            name=\"Temperature\" type=\"s:string\" />\r

            \      <s:element minOccurs=\"0\" maxOccurs=\"1\"
            name=\"RelativeHumidity\" type=\"s:string\" />\r

            \      <s:element minOccurs=\"0\" maxOccurs=\"1\"
            name=\"Wind\" type=\"s:string\" />\r

            \      <s:element minOccurs=\"0\" maxOccurs=\"1\"
            name=\"Pressure\" type=\"s:string\" />\r

            \      <s:element minOccurs=\"0\" maxOccurs=\"1\"
            name=\"Visibility\" type=\"s:string\" />\r

            \      <s:element minOccurs=\"0\" maxOccurs=\"1\"
            name=\"WindChill\" type=\"s:string\" />\r

            \      <s:element minOccurs=\"0\" maxOccurs=\"1\"
            name=\"Remarks\" type=\"s:string\" />\r

            \    </s:sequence>\r

            \  </s:complexType>\r

            \  <s:element name=\"ArrayOfWeatherDescription\"
            nillable=\"true\" type=\"tns:ArrayOfWeatherDescription\" />\r

            \  <s:element name=\"ForecastReturn\" nillable=\"true\"
            type=\"tns:ForecastReturn\" />\r

            \  <s:element name=\"WeatherReturn\"
            type=\"tns:WeatherReturn\" />\r

            </s:schema>"
        id: /apis/5a58bde0a40f7e104892ac24/schemas/5a58bde0a40f7e104892ac25
    ApiManagementPutApisSchemas:
      value:
        contentType: application/vnd.ms-azure-apim.xsd+xml
        document:
          value: "<s:schema elementFormDefault=\"qualified\"
            targetNamespace=\"http://ws.cdyne.com/WeatherWS/\"
            xmlns:tns=\"http://ws.cdyne.com/WeatherWS/\"
            xmlns:s=\"http://www.w3.org/2001/XMLSchema\"
            xmlns:soap12=\"http://schemas.xmlsoap.org/wsdl/soap12/\"
            xmlns:mime=\"http://schemas.xmlsoap.org/wsdl/mime/\"
            xmlns:soap=\"http://schemas.xmlsoap.org/wsdl/soap/\"
            xmlns:tm=\"http://microsoft.com/wsdl/mime/textMatching/\"
            xmlns:http=\"http://schemas.xmlsoap.org/wsdl/http/\"
            xmlns:soapenc=\"http://schemas.xmlsoap.org/soap/encoding/\"
            xmlns:wsdl=\"http://schemas.xmlsoap.org/wsdl/\"
            xmlns:apim-wsdltns=\"http://ws.cdyne.com/WeatherWS/\">\r

            \  <s:element name=\"GetWeatherInformation\">\r

            \    <s:complexType />\r

            \  </s:element>\r

            \  <s:element name=\"GetWeatherInformationResponse\">\r

            \    <s:complexType>\r

            \      <s:sequence>\r

            \        <s:element minOccurs=\"0\" maxOccurs=\"1\"
            name=\"GetWeatherInformationResult\"
            type=\"tns:ArrayOfWeatherDescription\" />\r

            \      </s:sequence>\r

            \    </s:complexType>\r

            \  </s:element>\r

            \  <s:complexType name=\"ArrayOfWeatherDescription\">\r

            \    <s:sequence>\r

            \      <s:element minOccurs=\"0\"
            maxOccurs=\"unbounded\" name=\"WeatherDescription\"
            type=\"tns:WeatherDescription\" />\r

            \    </s:sequence>\r

            \  </s:complexType>\r

            \  <s:complexType name=\"WeatherDescription\">\r

            \    <s:sequence>\r

            \      <s:element minOccurs=\"1\" maxOccurs=\"1\"
            name=\"WeatherID\" type=\"s:short\" />\r

            \      <s:element minOccurs=\"0\" maxOccurs=\"1\"
            name=\"Description\" type=\"s:string\" />\r

            \      <s:element minOccurs=\"0\" maxOccurs=\"1\"
            name=\"PictureURL\" type=\"s:string\" />\r

            \    </s:sequence>\r

            \  </s:complexType>\r

            \  <s:element name=\"GetCityForecastByZIP\">\r

            \    <s:complexType>\r

            \      <s:sequence>\r

            \        <s:element minOccurs=\"0\" maxOccurs=\"1\"
            name=\"ZIP\" type=\"s:string\" />\r

            \      </s:sequence>\r

            \    </s:complexType>\r

            \  </s:element>\r

            \  <s:element name=\"GetCityForecastByZIPResponse\">\r

            \    <s:complexType>\r

            \      <s:sequence>\r

            \        <s:element minOccurs=\"0\" maxOccurs=\"1\"
            name=\"GetCityForecastByZIPResult\" type=\"tns:ForecastReturn\" />\r

            \      </s:sequence>\r

            \    </s:complexType>\r

            \  </s:element>\r

            \  <s:complexType name=\"ForecastReturn\">\r

            \    <s:sequence>\r

            \      <s:element minOccurs=\"1\" maxOccurs=\"1\"
            name=\"Success\" type=\"s:boolean\" />\r

            \      <s:element minOccurs=\"0\" maxOccurs=\"1\"
            name=\"ResponseText\" type=\"s:string\" />\r

            \      <s:element minOccurs=\"0\" maxOccurs=\"1\"
            name=\"State\" type=\"s:string\" />\r

            \      <s:element minOccurs=\"0\" maxOccurs=\"1\"
            name=\"City\" type=\"s:string\" />\r

            \      <s:element minOccurs=\"0\" maxOccurs=\"1\"
            name=\"WeatherStationCity\" type=\"s:string\" />\r

            \      <s:element minOccurs=\"0\" maxOccurs=\"1\"
            name=\"ForecastResult\" type=\"tns:ArrayOfForecast\" />\r

            \    </s:sequence>\r

            \  </s:complexType>\r

            \  <s:complexType name=\"ArrayOfForecast\">\r

            \    <s:sequence>\r

            \      <s:element minOccurs=\"0\"
            maxOccurs=\"unbounded\" name=\"Forecast\" nillable=\"true\"
            type=\"tns:Forecast\" />\r

            \    </s:sequence>\r

            \  </s:complexType>\r

            \  <s:complexType name=\"Forecast\">\r

            \    <s:sequence>\r

            \      <s:element minOccurs=\"1\" maxOccurs=\"1\"
            name=\"Date\" type=\"s:dateTime\" />\r

            \      <s:element minOccurs=\"1\" maxOccurs=\"1\"
            name=\"WeatherID\" type=\"s:short\" />\r

            \      <s:element minOccurs=\"0\" maxOccurs=\"1\"
            name=\"Desciption\" type=\"s:string\" />\r

            \      <s:element minOccurs=\"1\" maxOccurs=\"1\"
            name=\"Temperatures\" type=\"tns:temp\" />\r

            \      <s:element minOccurs=\"1\" maxOccurs=\"1\"
            name=\"ProbabilityOfPrecipiation\" type=\"tns:POP\" />\r

            \    </s:sequence>\r

            \  </s:complexType>\r

            \  <s:complexType name=\"temp\">\r

            \    <s:sequence>\r

            \      <s:element minOccurs=\"0\" maxOccurs=\"1\"
            name=\"MorningLow\" type=\"s:string\" />\r

            \      <s:element minOccurs=\"0\" maxOccurs=\"1\"
            name=\"DaytimeHigh\" type=\"s:string\" />\r

            \    </s:sequence>\r

            \  </s:complexType>\r

            \  <s:complexType name=\"POP\">\r

            \    <s:sequence>\r

            \      <s:element minOccurs=\"0\" maxOccurs=\"1\"
            name=\"Nighttime\" type=\"s:string\" />\r

            \      <s:element minOccurs=\"0\" maxOccurs=\"1\"
            name=\"Daytime\" type=\"s:string\" />\r

            \    </s:sequence>\r

            \  </s:complexType>\r

            \  <s:element name=\"GetCityWeatherByZIP\">\r

            \    <s:complexType>\r

            \      <s:sequence>\r

            \        <s:element minOccurs=\"0\" maxOccurs=\"1\"
            name=\"ZIP\" type=\"s:string\" />\r

            \      </s:sequence>\r

            \    </s:complexType>\r

            \  </s:element>\r

            \  <s:element name=\"GetCityWeatherByZIPResponse\">\r

            \    <s:complexType>\r

            \      <s:sequence>\r

            \        <s:element minOccurs=\"1\" maxOccurs=\"1\"
            name=\"GetCityWeatherByZIPResult\" type=\"tns:WeatherReturn\" />\r

            \      </s:sequence>\r

            \    </s:complexType>\r

            \  </s:element>\r

            \  <s:complexType name=\"WeatherReturn\">\r

            \    <s:sequence>\r

            \      <s:element minOccurs=\"1\" maxOccurs=\"1\"
            name=\"Success\" type=\"s:boolean\" />\r

            \      <s:element minOccurs=\"0\" maxOccurs=\"1\"
            name=\"ResponseText\" type=\"s:string\" />\r

            \      <s:element minOccurs=\"0\" maxOccurs=\"1\"
            name=\"State\" type=\"s:string\" />\r

            \      <s:element minOccurs=\"0\" maxOccurs=\"1\"
            name=\"City\" type=\"s:string\" />\r

            \      <s:element minOccurs=\"0\" maxOccurs=\"1\"
            name=\"WeatherStationCity\" type=\"s:string\" />\r

            \      <s:element minOccurs=\"1\" maxOccurs=\"1\"
            name=\"WeatherID\" type=\"s:short\" />\r

            \      <s:element minOccurs=\"0\" maxOccurs=\"1\"
            name=\"Description\" type=\"s:string\" />\r

            \      <s:element minOccurs=\"0\" maxOccurs=\"1\"
            name=\"Temperature\" type=\"s:string\" />\r

            \      <s:element minOccurs=\"0\" maxOccurs=\"1\"
            name=\"RelativeHumidity\" type=\"s:string\" />\r

            \      <s:element minOccurs=\"0\" maxOccurs=\"1\"
            name=\"Wind\" type=\"s:string\" />\r

            \      <s:element minOccurs=\"0\" maxOccurs=\"1\"
            name=\"Pressure\" type=\"s:string\" />\r

            \      <s:element minOccurs=\"0\" maxOccurs=\"1\"
            name=\"Visibility\" type=\"s:string\" />\r

            \      <s:element minOccurs=\"0\" maxOccurs=\"1\"
            name=\"WindChill\" type=\"s:string\" />\r

            \      <s:element minOccurs=\"0\" maxOccurs=\"1\"
            name=\"Remarks\" type=\"s:string\" />\r

            \    </s:sequence>\r

            \  </s:complexType>\r

            \  <s:element name=\"ArrayOfWeatherDescription\"
            nillable=\"true\" type=\"tns:ArrayOfWeatherDescription\" />\r

            \  <s:element name=\"ForecastReturn\" nillable=\"true\"
            type=\"tns:ForecastReturn\" />\r

            \  <s:element name=\"WeatherReturn\"
            type=\"tns:WeatherReturn\" />\r

            </s:schema>"
        id: /apis/5a58bdf5a40f7e104892acda/schemas/5a58bdf5a40f7e104892ace0
  parameters:
    ApiIdParameter:
      description: API identifier. Must be unique in the current API Management service
        instance.
      in: path
      name: apiId
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
        minLength: 1
        maxLength: 256
        pattern: ^[^*#&+:<>?]+$
      examples:
        ApiManagementDeleteApis:
          value: 5a58bb37a40f7ef2e05bd7f2
        ApiManagementGetApis:
          value: 5a58bafaa40f7ef2e05bcfbe
        ApiManagementPatchApis:
          value: 5a58bac3a40f7ef2e05bc7db
        ApiManagementPutApis:
          value: 5a58bab6a40f7ef2e05bc769
        ApiManagementListApisOperations:
          value: 5a58bac3a40f7ef2e05bc7db
        ApiManagementDeleteApisOperations:
          value: 5a58bb3ea40f7ef2e05bd937
        ApiManagementGetApisOperations:
          value: 5a58bac3a40f7ef2e05bc7db
        ApiManagementPatchApisOperations:
          value: 5a58bb25a40f7ef2e05bd5b2
        ApiManagementPutApisOperations:
          value: 5a58bab8a40f7ef2e05bc7a1
        ApiManagementListApisOperationsPolicies:
          value: 599e2953193c3c0bd0b3e2fa
        ApiManagementDeleteApisOperationsPolicies:
          value: testapi
        ApiManagementGetApisOperationsPolicies:
          value: 5a58bfeea40f7e104892c5b6
        ApiManagementPutApisOperationsPolicies:
          value: 5a58bc94a40f7e10489299ac
        ApiManagementListApisPolicies:
          value: echo-api
        ApiManagementDeleteApisPolicies:
          value: loggerId
        ApiManagementGetApisPolicies:
          value: 5a58bf63a40f7e104892bdaf
        ApiManagementPutApisPolicies:
          value: 5a58bd43a40f7e104892a398
        ApiManagementListApisProducts:
          value: 5a58bddea40f7e104892ac12
        ApiManagementListApisSchemas:
          value: 5a58bde0a40f7e104892ac2c
        ApiManagementDeleteApisSchemas:
          value: 5a58bfd4a40f7e104892c4d2
        ApiManagementGetApisSchemas:
          value: 5a58bde0a40f7e104892ac24
        ApiManagementPutApisSchemas:
          value: 5a58bdf5a40f7e104892acda
    OperationIdParameter:
      description: Operation identifier within an API. Must be unique in the current API
        Management service instance.
      in: path
      name: operationId
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
        minLength: 1
        maxLength: 256
        pattern: ^[^*#&+:<>?]+$
      examples:
        ApiManagementDeleteApisOperations:
          value: 5a58bb3ea40f7ef2e05bd938
        ApiManagementGetApisOperations:
          value: 5a58bad9a40f7ef2e05bcd0f
        ApiManagementPatchApisOperations:
          value: 5a58bb25a40f7ef2e05bd5c5
        ApiManagementPutApisOperations:
          value: 5a58bab8a40f7ef2e05bc7aa
        ApiManagementListApisOperationsPolicies:
          value: 599e29ab193c3c0bd0b3e2fb
        ApiManagementDeleteApisOperationsPolicies:
          value: testoperation
        ApiManagementGetApisOperationsPolicies:
          value: 5a58bfeea40f7e104892c5c9
        ApiManagementPutApisOperationsPolicies:
          value: 5a58bc94a40f7e10489299bf
    SchemaIdParameter:
      description: Schema identifier within an API. Must be unique in the current API
        Management service instance.
      in: path
      name: schemaId
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
        minLength: 1
        maxLength: 256
        pattern: ^[^*#&+:<>?]+$
      examples:
        ApiManagementDeleteApisSchemas:
          value: 5a58bfd4a40f7e104892c4d3
        ApiManagementGetApisSchemas:
          value: 5a58bde0a40f7e104892ac25
        ApiManagementPutApisSchemas:
          value: 5a58bdf5a40f7e104892ace0
  requestBodies:
    ApiOperationPolicy_CreateOrUpdateParameters:
      content:
        application/json:
          schema:
            description: Policy contract Properties.
            properties:
              id:
                description: Policy identifier.
                type: string
              policyContent:
                description: Json escaped Xml Encoded contents of the Policy.
                type: string
            required:
              - policyContent
        application/vnd.ms-azure-apim.policy+xml:
          schema:
            description: Policy contract Properties.
            properties:
              id:
                description: Policy identifier.
                type: string
              policyContent:
                description: Json escaped Xml Encoded contents of the Policy.
                type: string
            required:
              - policyContent
        application/vnd.ms-azure-apim.policy.raw+xml:
          schema:
            description: Policy contract Properties.
            properties:
              id:
                description: Policy identifier.
                type: string
              policyContent:
                description: Json escaped Xml Encoded contents of the Policy.
                type: string
            required:
              - policyContent
      description: The policy contents to apply.
      required: true
  securitySchemes:
    apim_key:
      in: header
      name: Authorization
      type: apiKey
  schemas:
    ApiCollection:
      description: Paged Api list representation.
      properties:
        count:
          description: Total number of entities
          type: integer
        nextLink:
          description: Next page link if any.
          type: string
        value:
          items:
            $ref: "#/components/schemas/ApiContract"
          type: array
    ApiContract:
      allOf:
        - $ref: "#/components/schemas/ApiContractProperties"
      description: Api Contract Details
      properties:
        id:
          description: Identifier of the Entity
          type: string
    ApiContractProperties:
      allOf:
        - $ref: "#/components/schemas/ApiEntityBaseContract"
      description: Api Entity Properties
      properties:
        name:
          description: API name.
          maxLength: 300
          minLength: 1
          type: string
        path:
          description: Relative URL uniquely identifying this API and all of its resource
            paths within the API Management service instance. It is appended to
            the API endpoint base URL specified during the service instance
            creation to form a public URL for this API.
          maxLength: 400
          minLength: 0
          type: string
        protocols:
          description: Describes on which protocols the operations in this API can be
            invoked.
          items:
            enum:
              - http
              - https
            type: string
            x-ms-enum:
              modelAsString: false
              name: Protocol
          type: array
        serviceUrl:
          description: Absolute URL of the backend service implementing this API.
          maxLength: 2000
          minLength: 1
          type: string
      required:
        - path
    ApiCreateOrUpdateParameter:
      allOf:
        - $ref: "#/components/schemas/ApiContractProperties"
      description: Api Create or Update Properties.
      properties:
        contentFormat:
          description: Format of the Content in which the API is getting imported.
          enum:
            - wadl-xml
            - wadl-link-json
            - swagger-json
            - swagger-link-json
            - wsdl
            - wsdl-link
          type: string
          x-ms-enum:
            modelAsString: true
            name: ContentFormat
            values:
              - description: The contents are inline and Content type is a WADL document.
                value: wadl-xml
              - description: The WADL document is hosted on a publicly accessible internet
                  address.
                value: wadl-link-json
              - description: The contents are inline and Content Type if a OpenApi 2.0
                  Document.
                value: swagger-json
              - description: The Open Api 2.0 document is hosted on a publicly accessible
                  internet address.
                value: swagger-link-json
              - description: The contents are inline and the document is a WSDL/Soap
                  document.
                value: wsdl
              - description: The WSDL document is hosted on a publicly accessible internet
                  address.
                value: wsdl-link
        contentValue:
          description: Content value when Importing an API.
          type: string
        id:
          description: Identifier of the entity
          type: string
        wsdlSelector:
          description: Criteria to limit import of WSDL to a subset of the document.
          properties:
            wsdlEndpointName:
              description: Name of endpoint(port) to import from WSDL
              type: string
            wsdlServiceName:
              description: Name of service to import from WSDL
              type: string
          type: object
    ApiEntityBaseContract:
      description: API base contract details.
      properties:
        apiRevision:
          description: Describes the Revision of the Api. If no value is provided, default
            revision 1 is created
          maxLength: 100
          minLength: 1
          type: string
        authenticationSettings:
          $ref: "#/components/schemas/AuthenticationSettingsContract"
        description:
          description: Description of the API. May include HTML formatting tags.
          type: string
        isCurrent:
          description: Indicates if API revision is current api revision.
          type: boolean
        isOnline:
          description: Indicates if API revision is accessible via the gateway.
          type: boolean
        subscriptionKeyParameterNames:
          $ref: "#/components/schemas/SubscriptionKeyParameterNamesContract"
        type:
          description: Type of API.
          enum:
            - http
            - soap
          type: string
          x-ms-client-name: ApiType
          x-ms-enum:
            modelAsString: true
            name: ApiType
    ApiExportResult:
      description: API Export result Blob Uri.
      properties:
        link:
          description: Link to the Storage Blob containing the result of the export
            operation. The Blob Uri is only valid for 5 minutes.
          type: string
    ApiUpdateContract:
      allOf:
        - $ref: "#/components/schemas/ApiEntityBaseContract"
      description: API update contract properties.
      properties:
        name:
          description: API name.
          maxLength: 300
          minLength: 1
          type: string
        path:
          description: Relative URL uniquely identifying this API and all of its resource
            paths within the API Management service instance. It is appended to
            the API endpoint base URL specified during the service instance
            creation to form a public URL for this API.
          maxLength: 400
          minLength: 0
          type: string
        protocols:
          description: Describes on which protocols the operations in this API can be
            invoked.
          items:
            enum:
              - http
              - https
            type: string
            x-ms-enum:
              modelAsString: false
              name: Protocol
          type: array
        serviceUrl:
          description: Absolute URL of the backend service implementing this API.
          maxLength: 2000
          minLength: 1
          type: string
    AuthenticationSettingsContract:
      description: API Authentication Settings.
      properties:
        oAuth2:
          $ref: "#/components/schemas/OAuth2AuthenticationSettingsContract"
    OAuth2AuthenticationSettingsContract:
      description: API OAuth2 Authentication settings details.
      properties:
        authorizationServerId:
          description: OAuth authorization server identifier.
          type: string
        scope:
          description: operations scope.
          type: string
    OperationCollection:
      description: Paged Operation list representation.
      properties:
        count:
          description: Total number of entities
          type: integer
        nextLink:
          description: Next page link if any.
          type: string
        value:
          description: Page values.
          items:
            $ref: "#/components/schemas/OperationContract"
          type: array
    OperationContract:
      allOf:
        - $ref: "#/components/schemas/OperationContractProperties"
      description: Api Operation details.
      properties:
        id:
          description: Identifier of the Operation.
          type: string
    OperationContractProperties:
      allOf:
        - $ref: "#/components/schemas/OperationEntityBaseContract"
      description: Operation Contract Properties
      properties:
        method:
          description: A Valid HTTP Operation Method. Typical Http Methods like GET, PUT,
            POST but not limited by only them.
          externalDocs:
            description: As defined by RFC.
            url: http://www.rfc-editor.org/rfc/rfc7230.txt
          type: string
        name:
          description: Operation Name.
          maxLength: 300
          minLength: 1
          type: string
        urlTemplate:
          description: "Relative URL template identifying the target resource for this
            operation. May include parameters. Example:
            /customers/{cid}/orders/{oid}/?date={date}"
          maxLength: 1000
          minLength: 1
          type: string
      required:
        - name
        - method
        - urlTemplate
    OperationEntityBaseContract:
      description: Api Operation Entity Base Contract details.
      properties:
        description:
          description: Description of the operation. May include HTML formatting tags.
          maxLength: 1000
          type: string
        policies:
          description: Operation Policies
          type: string
        request:
          $ref: "#/components/schemas/RequestContract"
        responses:
          description: Array of Operation responses.
          items:
            $ref: "#/components/schemas/ResponseContract"
          type: array
        templateParameters:
          description: Collection of URL template parameters.
          items:
            $ref: "#/components/schemas/ParameterContract"
          type: array
    OperationUpdateContract:
      allOf:
        - $ref: "#/components/schemas/OperationEntityBaseContract"
      description: Operation Update Contract Properties.
      properties:
        method:
          description: A Valid HTTP Operation Method. Typical Http Methods like GET, PUT,
            POST but not limited by only them.
          externalDocs:
            description: As defined by RFC.
            url: http://www.rfc-editor.org/rfc/rfc7230.txt
          type: string
        name:
          description: Operation Name.
          maxLength: 300
          minLength: 1
          type: string
        urlTemplate:
          description: "Relative URL template identifying the target resource for this
            operation. May include parameters. Example:
            /customers/{cid}/orders/{oid}/?date={date}"
          maxLength: 1000
          minLength: 1
          type: string
    ParameterContract:
      description: Operation parameters details.
      properties:
        defaultValue:
          description: Default parameter value.
          type: string
        description:
          description: Parameter description.
          type: string
        name:
          description: Parameter name.
          type: string
        required:
          description: whether parameter is required or not.
          type: boolean
        type:
          description: Parameter type.
          type: string
        values:
          description: Parameter values.
          items:
            type: string
          type: array
      required:
        - name
        - type
    RepresentationContract:
      description: Operation request/response representation details.
      properties:
        contentType:
          description: Specifies a registered or custom content type for this
            representation, e.g. application/xml.
          type: string
        formParameters:
          description: Collection of form parameters. Required if 'contentType' value is
            either 'application/x-www-form-urlencoded' or
            'multipart/form-data'..
          items:
            $ref: "#/components/schemas/ParameterContract"
          type: array
        sample:
          description: An example of the representation.
          type: string
        schemaId:
          description: Schema identifier. Applicable only if 'contentType' value is neither
            'application/x-www-form-urlencoded' nor 'multipart/form-data'.
          type: string
        typeName:
          description: Type name defined by the schema. Applicable only if 'contentType'
            value is neither 'application/x-www-form-urlencoded' nor
            'multipart/form-data'.
          type: string
      required:
        - contentType
    RequestContract:
      description: Operation request details.
      properties:
        description:
          description: Operation request description.
          type: string
        headers:
          description: Collection of operation request headers.
          items:
            $ref: "#/components/schemas/ParameterContract"
          type: array
        queryParameters:
          description: Collection of operation request query parameters.
          items:
            $ref: "#/components/schemas/ParameterContract"
          type: array
        representations:
          description: Collection of operation request representations.
          items:
            $ref: "#/components/schemas/RepresentationContract"
          type: array
    ResponseContract:
      description: Operation response details.
      properties:
        description:
          description: Operation response description.
          type: string
        headers:
          description: Collection of operation response headers.
          items:
            $ref: "#/components/schemas/ParameterContract"
          type: array
        representations:
          description: Collection of operation response representations.
          items:
            $ref: "#/components/schemas/RepresentationContract"
          type: array
        statusCode:
          description: Operation response HTTP status code.
          format: int32
          type: integer
      required:
        - statusCode
    SchemaCollection:
      description: The response of the list schema operation.
      properties:
        count:
          description: Total number of entities
          type: integer
        nextLink:
          description: Next page link if any.
          type: string
        value:
          description: Api Schema Contract value.
          items:
            $ref: "#/components/schemas/SchemaContract"
          type: array
    SchemaContract:
      allOf:
        - $ref: "#/components/schemas/SchemaContractProperties"
      description: Schema Contract details.
      properties:
        id:
          description: Identifier of the Schema.
          type: string
    SchemaContractProperties:
      description: Schema contract Properties.
      properties:
        contentType:
          description: Must be a valid a media type used in a Content-Type header as
            defined in the RFC 2616. Media type of the schema document (e.g.
            application/json, application/xml).
          type: string
        document:
          $ref: "#/components/schemas/SchemaDocumentProperties"
      required:
        - contentType
    SchemaDocumentProperties:
      description: Schema Document Properties.
      properties:
        value:
          description: Json escaped string defining the document representing the Schema.
          type: string
    SubscriptionKeyParameterNamesContract:
      description: Subscription key parameter names details.
      example:
        subscriptionKeyParameterNames:
          header: customHeaderParameterName
          query: customQueryParameterName
      properties:
        header:
          description: Subscription key header name.
          type: string
        query:
          description: Subscription key query string parameter name.
          type: string
