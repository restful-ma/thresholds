openapi: 3.0.0
info:
  description: The Storage Management Client.
  title: StorageManagementClient
  version: 2016-01-01
  x-apisguru-categories:
    - cloud
  x-logo:
    url: https://assets.onestore.ms/cdnfiles/onestorerolling-1606-01000/shell/v3/images/logo/microsoft.png
  x-origin:
    - format: swagger
      url: https://raw.githubusercontent.com/Azure/azure-rest-api-specs/master/specification/storage/resource-manager/Microsoft.Storage/stable/2016-01-01/storage.json
      version: "2.0"
  x-preferred: false
  x-providerName: azure.com
  x-serviceName: storage
  x-tags:
    - Azure
    - Microsoft
paths:
  "/subscriptions/{subscriptionId}/providers/Microsoft.Storage/checkNameAvailability":
    post:
      description: Checks that the storage account name is valid and is not already in use.
      operationId: StorageAccounts_CheckNameAvailability
      parameters:
        - $ref: "#/components/parameters/ApiVersionParameter"
        - $ref: "#/components/parameters/SubscriptionIdParameter"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/StorageAccountCheckNameAvailabilityParame\
                ters"
          text/json:
            schema:
              $ref: "#/components/schemas/StorageAccountCheckNameAvailabilityParame\
                ters"
        description: The name of the storage account within the specified resource group.
          Storage account names must be between 3 and 24 characters in length
          and use numbers and lower-case letters only.
        required: true
      responses:
        "200":
          description: OK -- Operation to check the storage account name availability was
            successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CheckNameAvailabilityResult"
            text/json:
              schema:
                $ref: "#/components/schemas/CheckNameAvailabilityResult"
      tags:
        - StorageAccounts
  "/subscriptions/{subscriptionId}/providers/Microsoft.Storage/storageAccounts":
    get:
      description: Lists all the storage accounts available under the subscription. Note
        that storage keys are not returned; use the ListKeys operation for this.
      operationId: StorageAccounts_List
      parameters:
        - $ref: "#/components/parameters/ApiVersionParameter"
        - $ref: "#/components/parameters/SubscriptionIdParameter"
      responses:
        "200":
          description: OK -- List of storage accounts was retrieved and returned
            successfully.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StorageAccountListResult"
            text/json:
              schema:
                $ref: "#/components/schemas/StorageAccountListResult"
      tags:
        - StorageAccounts
      x-ms-pageable: {}
  "/subscriptions/{subscriptionId}/providers/Microsoft.Storage/usages":
    get:
      description: Gets the current usage count and the limit for the resources under the
        subscription.
      operationId: Usage_List
      parameters:
        - $ref: "#/components/parameters/ApiVersionParameter"
        - $ref: "#/components/parameters/SubscriptionIdParameter"
      responses:
        "200":
          description: OK -- current usage account and limit retrieved and returned
            successfully.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UsageListResult"
            text/json:
              schema:
                $ref: "#/components/schemas/UsageListResult"
      tags:
        - Usage
      x-ms-pageable: {}
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts":
    get:
      description: Lists all the storage accounts available under the given resource group.
        Note that storage keys are not returned; use the ListKeys operation for
        this.
      operationId: StorageAccounts_ListByResourceGroup
      parameters:
        - description: The name of the resource group within the user's subscription.
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/ApiVersionParameter"
        - $ref: "#/components/parameters/SubscriptionIdParameter"
      responses:
        "200":
          description: OK -- List of storage accounts in the given resource group retrieved
            and returned successfully.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StorageAccountListResult"
            text/json:
              schema:
                $ref: "#/components/schemas/StorageAccountListResult"
      tags:
        - StorageAccounts
      x-ms-pageable: {}
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}":
    delete:
      description: Deletes a storage account in Microsoft Azure.
      operationId: StorageAccounts_Delete
      parameters:
        - description: The name of the resource group within the user's subscription.
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length
            and use numbers and lower-case letters only.
          in: path
          name: accountName
          required: true
          schema:
            type: string
            minLength: 3
            maxLength: 24
        - $ref: "#/components/parameters/ApiVersionParameter"
        - $ref: "#/components/parameters/SubscriptionIdParameter"
      responses:
        "200":
          description: OK -- storage account deleted successfully.
        "204":
          description: NoContent -- account does not exist in the subscription.
      tags:
        - StorageAccounts
    get:
      description: Returns the properties for the specified storage account including but
        not limited to name, SKU name, location, and account status. The
        ListKeys operation should be used to retrieve storage keys.
      operationId: StorageAccounts_GetProperties
      parameters:
        - description: The name of the resource group within the user's subscription.
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: "The name of the storage account within the specified resource
            group. Storage account names must be between 3 and 24 characters in
            length and use numbers and lower-case letters only.  "
          in: path
          name: accountName
          required: true
          schema:
            type: string
            minLength: 3
            maxLength: 24
        - $ref: "#/components/parameters/ApiVersionParameter"
        - $ref: "#/components/parameters/SubscriptionIdParameter"
      responses:
        "200":
          description: OK -- properties retrieved successfully for the storage account.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StorageAccount"
            text/json:
              schema:
                $ref: "#/components/schemas/StorageAccount"
      tags:
        - StorageAccounts
    patch:
      description: The update operation can be used to update the SKU, encryption, access
        tier, or tags for a storage account. It can also be used to map the
        account to a custom domain. Only one custom domain is supported per
        storage account; the replacement/change of custom domain is not
        supported. In order to replace an old custom domain, the old value must
        be cleared/unregistered before a new value can be set. The update of
        multiple properties is supported. This call does not change the storage
        keys for the account. If you want to change the storage account keys,
        use the regenerate keys operation. The location and name of the storage
        account cannot be changed after creation.
      operationId: StorageAccounts_Update
      parameters:
        - description: The name of the resource group within the user's subscription.
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length
            and use numbers and lower-case letters only.
          in: path
          name: accountName
          required: true
          schema:
            type: string
            minLength: 3
            maxLength: 24
        - $ref: "#/components/parameters/ApiVersionParameter"
        - $ref: "#/components/parameters/SubscriptionIdParameter"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/StorageAccountUpdateParameters"
          text/json:
            schema:
              $ref: "#/components/schemas/StorageAccountUpdateParameters"
        description: The parameters to provide for the updated account.
        required: true
      responses:
        "200":
          description: OK -- storage account properties updated successfully.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StorageAccount"
            text/json:
              schema:
                $ref: "#/components/schemas/StorageAccount"
      tags:
        - StorageAccounts
    put:
      description: Asynchronously creates a new storage account with the specified
        parameters. If an account is already created and a subsequent create
        request is issued with different properties, the account properties will
        be updated. If an account is already created and a subsequent create or
        update request is issued with the exact same set of properties, the
        request will succeed.
      operationId: StorageAccounts_Create
      parameters:
        - description: The name of the resource group within the user's subscription.
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length
            and use numbers and lower-case letters only.
          in: path
          name: accountName
          required: true
          schema:
            type: string
            minLength: 3
            maxLength: 24
        - $ref: "#/components/parameters/ApiVersionParameter"
        - $ref: "#/components/parameters/SubscriptionIdParameter"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/StorageAccountCreateParameters"
          text/json:
            schema:
              $ref: "#/components/schemas/StorageAccountCreateParameters"
        description: The parameters to provide for the created account.
        required: true
      responses:
        "200":
          description: OK -- returned when the storage account was already created from a
            previous request with the same properties specified in the request
            body.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StorageAccount"
            text/json:
              schema:
                $ref: "#/components/schemas/StorageAccount"
        "202":
          description: Accepted -- Create or update request accepted; operation will
            complete asynchronously.
      tags:
        - StorageAccounts
      x-ms-long-running-operation: true
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/listKeys":
    post:
      description: Lists the access keys for the specified storage account.
      operationId: StorageAccounts_ListKeys
      parameters:
        - description: The name of the resource group within the user's subscription.
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length
            and use numbers and lower-case letters only.
          in: path
          name: accountName
          required: true
          schema:
            type: string
            minLength: 3
            maxLength: 24
        - $ref: "#/components/parameters/ApiVersionParameter"
        - $ref: "#/components/parameters/SubscriptionIdParameter"
      responses:
        "200":
          description: OK -- list of keys retrieved and returned successfully.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StorageAccountListKeysResult"
            text/json:
              schema:
                $ref: "#/components/schemas/StorageAccountListKeysResult"
      tags:
        - StorageAccounts
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/regenerateKey":
    post:
      description: Regenerates one of the access keys for the specified storage account.
      operationId: StorageAccounts_RegenerateKey
      parameters:
        - description: The name of the resource group within the user's subscription.
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length
            and use numbers and lower-case letters only.
          in: path
          name: accountName
          required: true
          schema:
            type: string
            minLength: 3
            maxLength: 24
        - $ref: "#/components/parameters/ApiVersionParameter"
        - $ref: "#/components/parameters/SubscriptionIdParameter"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/StorageAccountRegenerateKeyParameters"
          text/json:
            schema:
              $ref: "#/components/schemas/StorageAccountRegenerateKeyParameters"
        description: Specifies name of the key which should be regenerated -- key1 or key2.
        required: true
      responses:
        "200":
          description: OK -- specified key regenerated successfully.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StorageAccountListKeysResult"
            text/json:
              schema:
                $ref: "#/components/schemas/StorageAccountListKeysResult"
      tags:
        - StorageAccounts
servers:
  - url: https://management.azure.com
components:
  parameters:
    ApiVersionParameter:
      description: Client Api Version.
      in: query
      name: api-version
      required: true
      schema:
        type: string
    SubscriptionIdParameter:
      description: Gets subscription credentials which uniquely identify the Microsoft
        Azure subscription. The subscription ID forms part of the URI for every
        service call.
      in: path
      name: subscriptionId
      required: true
      schema:
        type: string
  schemas:
    CheckNameAvailabilityResult:
      description: The CheckNameAvailability operation response.
      properties:
        message:
          description: Gets an error message explaining the Reason value in more detail.
          readOnly: true
          type: string
        nameAvailable:
          description: Gets a boolean value that indicates whether the name is available
            for you to use. If true, the name is available. If false, the name
            has already been taken or is invalid and cannot be used.
          readOnly: true
          type: boolean
        reason:
          description: Gets the reason that a storage account name could not be used. The
            Reason element is only returned if NameAvailable is false.
          enum:
            - AccountNameInvalid
            - AlreadyExists
          readOnly: true
          type: string
          x-ms-enum:
            modelAsString: false
            name: Reason
    CustomDomain:
      description: The custom domain assigned to this storage account. This can be set via
        Update.
      properties:
        name:
          description: Gets or sets the custom domain name assigned to the storage account.
            Name is the CNAME source.
          type: string
        useSubDomainName:
          description: Indicates whether indirect CName validation is enabled. Default
            value is false. This should only be set on updates.
          type: boolean
      required:
        - name
    Encryption:
      description: The encryption settings on the storage account.
      properties:
        keySource:
          description: "The encryption keySource (provider). Possible values
            (case-insensitive):  Microsoft.Storage"
          enum:
            - Microsoft.Storage
          type: string
        services:
          $ref: "#/components/schemas/EncryptionServices"
      required:
        - keySource
    EncryptionService:
      description: A service that allows server-side encryption to be used.
      properties:
        enabled:
          description: A boolean indicating whether or not the service encrypts the data as
            it is stored.
          type: boolean
        lastEnabledTime:
          description: Gets a rough estimate of the date/time when the encryption was last
            enabled by the user. Only returned when encryption is enabled. There
            might be some unencrypted blobs which were written after this time,
            as it is just a rough estimate.
          format: date-time
          readOnly: true
          type: string
    EncryptionServices:
      description: A list of services that support encryption.
      properties:
        blob:
          $ref: "#/components/schemas/EncryptionService"
    Endpoints:
      description: The URIs that are used to perform a retrieval of a public blob, queue,
        or table object.
      properties:
        blob:
          description: Gets the blob endpoint.
          readOnly: true
          type: string
        file:
          description: Gets the file endpoint.
          readOnly: true
          type: string
        queue:
          description: Gets the queue endpoint.
          readOnly: true
          type: string
        table:
          description: Gets the table endpoint.
          readOnly: true
          type: string
    Resource:
      properties:
        id:
          description: Resource Id
          readOnly: true
          type: string
        location:
          description: Resource location
          type: string
        name:
          description: Resource name
          readOnly: true
          type: string
        tags:
          additionalProperties:
            type: string
          description: Tags assigned to a resource; can be used for viewing and grouping a
            resource (across resource groups).
          type: object
        type:
          description: Resource type
          readOnly: true
          type: string
      x-ms-azure-resource: true
    Sku:
      description: The SKU of the storage account.
      properties:
        name:
          description: Gets or sets the sku name. Required for account creation; optional
            for update. Note that in older versions, sku name was called
            accountType.
          enum:
            - Standard_LRS
            - Standard_GRS
            - Standard_RAGRS
            - Standard_ZRS
            - Premium_LRS
          type: string
          x-ms-enum:
            modelAsString: false
            name: SkuName
        tier:
          description: Gets the sku tier. This is based on the SKU name.
          enum:
            - Standard
            - Premium
          readOnly: true
          type: string
          x-ms-enum:
            modelAsString: false
            name: SkuTier
      required:
        - name
    StorageAccount:
      allOf:
        - $ref: "#/components/schemas/Resource"
      description: The storage account.
      properties:
        kind:
          description: Gets the Kind.
          enum:
            - Storage
            - BlobStorage
          readOnly: true
          type: string
          x-ms-enum:
            modelAsString: false
            name: Kind
        properties:
          $ref: "#/components/schemas/StorageAccountProperties"
        sku:
          $ref: "#/components/schemas/Sku"
    StorageAccountCheckNameAvailabilityParameters:
      properties:
        name:
          type: string
        type:
          enum:
            - Microsoft.Storage/storageAccounts
          type: string
      required:
        - name
        - type
    StorageAccountCreateParameters:
      description: The parameters used when creating a storage account.
      properties:
        kind:
          description: Required. Indicates the type of storage account.
          enum:
            - Storage
            - BlobStorage
          type: string
          x-ms-enum:
            modelAsString: false
            name: Kind
        location:
          description: Required. Gets or sets the location of the resource. This will be
            one of the supported and registered Azure Geo Regions (e.g. West US,
            East US, Southeast Asia, etc.). The geo region of a resource cannot
            be changed once it is created, but if an identical geo region is
            specified on update, the request will succeed.
          type: string
        properties:
          $ref: "#/components/schemas/StorageAccountPropertiesCreateParameters"
        sku:
          $ref: "#/components/schemas/Sku"
        tags:
          additionalProperties:
            type: string
          description: Gets or sets a list of key value pairs that describe the resource.
            These tags can be used for viewing and grouping this resource
            (across resource groups). A maximum of 15 tags can be provided for a
            resource. Each tag must have a key with a length no greater than 128
            characters and a value with a length no greater than 256 characters.
          type: object
      required:
        - sku
        - kind
        - location
    StorageAccountKey:
      description: An access key for the storage account.
      properties:
        keyName:
          description: Name of the key.
          readOnly: true
          type: string
        permissions:
          description: Permissions for the key -- read-only or full permissions.
          enum:
            - READ
            - FULL
          readOnly: true
          type: string
          x-ms-enum:
            modelAsString: false
            name: KeyPermission
        value:
          description: Base 64-encoded value of the key.
          readOnly: true
          type: string
    StorageAccountListKeysResult:
      description: The response from the ListKeys operation.
      properties:
        keys:
          description: Gets the list of storage account keys and their properties for the
            specified storage account.
          items:
            $ref: "#/components/schemas/StorageAccountKey"
          readOnly: true
          type: array
    StorageAccountListResult:
      description: The response from the List Storage Accounts operation.
      properties:
        value:
          description: Gets the list of storage accounts and their properties.
          items:
            $ref: "#/components/schemas/StorageAccount"
          readOnly: true
          type: array
    StorageAccountProperties:
      properties:
        accessTier:
          description: Required for storage accounts where kind = BlobStorage. The access
            tier used for billing.
          enum:
            - Hot
            - Cool
          readOnly: true
          type: string
          x-ms-enum:
            modelAsString: false
            name: AccessTier
        creationTime:
          description: Gets the creation date and time of the storage account in UTC.
          format: date-time
          readOnly: true
          type: string
        customDomain:
          $ref: "#/components/schemas/CustomDomain"
        encryption:
          $ref: "#/components/schemas/Encryption"
        lastGeoFailoverTime:
          description: Gets the timestamp of the most recent instance of a failover to the
            secondary location. Only the most recent timestamp is retained. This
            element is not returned if there has never been a failover instance.
            Only available if the accountType is Standard_GRS or Standard_RAGRS.
          format: date-time
          readOnly: true
          type: string
        primaryEndpoints:
          $ref: "#/components/schemas/Endpoints"
        primaryLocation:
          description: Gets the location of the primary data center for the storage account.
          readOnly: true
          type: string
        provisioningState:
          description: Gets the status of the storage account at the time the operation was
            called.
          enum:
            - Creating
            - ResolvingDNS
            - Succeeded
          readOnly: true
          type: string
          x-ms-enum:
            modelAsString: false
            name: ProvisioningState
        secondaryEndpoints:
          $ref: "#/components/schemas/Endpoints"
        secondaryLocation:
          description: Gets the location of the geo-replicated secondary for the storage
            account. Only available if the accountType is Standard_GRS or
            Standard_RAGRS.
          readOnly: true
          type: string
        statusOfPrimary:
          description: Gets the status indicating whether the primary location of the
            storage account is available or unavailable.
          enum:
            - Available
            - Unavailable
          readOnly: true
          type: string
          x-ms-enum:
            modelAsString: false
            name: AccountStatus
        statusOfSecondary:
          description: Gets the status indicating whether the secondary location of the
            storage account is available or unavailable. Only available if the
            SKU name is Standard_GRS or Standard_RAGRS.
          enum:
            - Available
            - Unavailable
          readOnly: true
          type: string
          x-ms-enum:
            modelAsString: false
            name: AccountStatus
    StorageAccountPropertiesCreateParameters:
      properties:
        accessTier:
          description: Required for storage accounts where kind = BlobStorage. The access
            tier used for billing.
          enum:
            - Hot
            - Cool
          type: string
          x-ms-enum:
            modelAsString: false
            name: AccessTier
        customDomain:
          $ref: "#/components/schemas/CustomDomain"
        encryption:
          $ref: "#/components/schemas/Encryption"
    StorageAccountPropertiesUpdateParameters:
      properties:
        accessTier:
          description: Required for storage accounts where kind = BlobStorage. The access
            tier used for billing.
          enum:
            - Hot
            - Cool
          type: string
          x-ms-enum:
            modelAsString: false
            name: AccessTier
        customDomain:
          $ref: "#/components/schemas/CustomDomain"
        encryption:
          $ref: "#/components/schemas/Encryption"
    StorageAccountRegenerateKeyParameters:
      properties:
        keyName:
          type: string
      required:
        - keyName
    StorageAccountUpdateParameters:
      description: The parameters that can be provided when updating the storage account
        properties.
      properties:
        properties:
          $ref: "#/components/schemas/StorageAccountPropertiesUpdateParameters"
        sku:
          $ref: "#/components/schemas/Sku"
        tags:
          additionalProperties:
            type: string
          description: Gets or sets a list of key value pairs that describe the resource.
            These tags can be used in viewing and grouping this resource (across
            resource groups). A maximum of 15 tags can be provided for a
            resource. Each tag must have a key no greater in length than 128
            characters and a value no greater in length than 256 characters.
          type: object
    Usage:
      description: Describes Storage Resource Usage.
      properties:
        currentValue:
          description: Gets the current count of the allocated resources in the
            subscription.
          format: int32
          readOnly: true
          type: integer
        limit:
          description: Gets the maximum count of the resources that can be allocated in the
            subscription.
          format: int32
          readOnly: true
          type: integer
        name:
          $ref: "#/components/schemas/UsageName"
        unit:
          description: Gets the unit of measurement.
          enum:
            - Count
            - Bytes
            - Seconds
            - Percent
            - CountsPerSecond
            - BytesPerSecond
          readOnly: true
          type: string
          x-ms-enum:
            modelAsString: false
            name: UsageUnit
    UsageListResult:
      description: The response from the List Usages operation.
      properties:
        value:
          description: Gets or sets the list of Storage Resource Usages.
          items:
            $ref: "#/components/schemas/Usage"
          type: array
    UsageName:
      description: The usage names that can be used; currently limited to StorageAccount.
      properties:
        localizedValue:
          description: Gets a localized string describing the resource name.
          readOnly: true
          type: string
        value:
          description: Gets a string describing the resource name.
          readOnly: true
          type: string
