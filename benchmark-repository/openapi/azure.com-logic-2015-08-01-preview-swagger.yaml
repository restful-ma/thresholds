openapi: 3.0.0
info:
  description: REST API for Azure Logic Apps.
  title: LogicManagementClient
  version: 2015-08-01-preview
  x-apisguru-categories:
    - cloud
  x-logo:
    url: https://assets.onestore.ms/cdnfiles/onestorerolling-1606-01000/shell/v3/images/logo/microsoft.png
  x-origin:
    - format: swagger
      url: https://raw.githubusercontent.com/Azure/azure-rest-api-specs/master/specification/logic/resource-manager/Microsoft.Logic/preview/2015-08-01-preview/logic.json
      version: "2.0"
  x-preferred: false
  x-providerName: azure.com
  x-serviceName: logic
  x-tags:
    - Azure
    - Microsoft
paths:
  "/subscriptions/{subscriptionId}/providers/Microsoft.Logic/integrationAccounts":
    get:
      description: Gets a list of integration accounts by subscription.
      operationId: IntegrationAccounts_ListBySubscription
      parameters:
        - $ref: "#/components/parameters/subscriptionId"
        - $ref: "#/components/parameters/api-version"
        - description: The number of items to be included in the result.
          in: query
          name: $top
          required: false
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/IntegrationAccountListResult"
            text/json:
              schema:
                $ref: "#/components/schemas/IntegrationAccountListResult"
      tags:
        - IntegrationAccounts
      x-ms-pageable:
        nextLinkName: nextLink
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/integrationAccounts":
    get:
      description: Gets a list of integration accounts by resource group.
      operationId: IntegrationAccounts_ListByResourceGroup
      parameters:
        - $ref: "#/components/parameters/subscriptionId"
        - description: The resource group name.
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/api-version"
        - description: The number of items to be included in the result.
          in: query
          name: $top
          required: false
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/IntegrationAccountListResult"
            text/json:
              schema:
                $ref: "#/components/schemas/IntegrationAccountListResult"
      tags:
        - IntegrationAccounts
      x-ms-pageable:
        nextLinkName: nextLink
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/integrationAccounts/{integrationAccountName}":
    delete:
      description: Deletes an integration account.
      operationId: IntegrationAccounts_Delete
      parameters:
        - $ref: "#/components/parameters/subscriptionId"
        - description: The resource group name.
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: The integration account name.
          in: path
          name: integrationAccountName
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/api-version"
      responses:
        "200":
          description: OK
        "204":
          description: No Content
      tags:
        - IntegrationAccounts
    get:
      description: Gets an integration account.
      operationId: IntegrationAccounts_Get
      parameters:
        - $ref: "#/components/parameters/subscriptionId"
        - description: The resource group name.
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: The integration account name.
          in: path
          name: integrationAccountName
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/api-version"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/IntegrationAccount"
            text/json:
              schema:
                $ref: "#/components/schemas/IntegrationAccount"
      tags:
        - IntegrationAccounts
    patch:
      description: Updates an integration account.
      operationId: IntegrationAccounts_Update
      parameters:
        - $ref: "#/components/parameters/subscriptionId"
        - description: The resource group name.
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: The integration account name.
          in: path
          name: integrationAccountName
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/api-version"
      requestBody:
        $ref: "#/components/requestBodies/IntegrationAccount"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/IntegrationAccount"
            text/json:
              schema:
                $ref: "#/components/schemas/IntegrationAccount"
      tags:
        - IntegrationAccounts
    put:
      description: Creates or updates an integration account.
      operationId: IntegrationAccounts_CreateOrUpdate
      parameters:
        - $ref: "#/components/parameters/subscriptionId"
        - description: The resource group name.
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: The integration account name.
          in: path
          name: integrationAccountName
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/api-version"
      requestBody:
        $ref: "#/components/requestBodies/IntegrationAccount"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/IntegrationAccount"
            text/json:
              schema:
                $ref: "#/components/schemas/IntegrationAccount"
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/IntegrationAccount"
            text/json:
              schema:
                $ref: "#/components/schemas/IntegrationAccount"
      tags:
        - IntegrationAccounts
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/integrationAccounts/{integrationAccountName}/agreements":
    get:
      description: Gets a list of integration account agreements.
      operationId: IntegrationAccountAgreements_List
      parameters:
        - $ref: "#/components/parameters/subscriptionId"
        - description: The resource group name.
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: The integration account name.
          in: path
          name: integrationAccountName
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/api-version"
        - description: The number of items to be included in the result.
          in: query
          name: $top
          required: false
          schema:
            type: integer
            format: int32
        - description: The filter to apply on the operation.
          in: query
          name: $filter
          required: false
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/IntegrationAccountAgreementListResult"
            text/json:
              schema:
                $ref: "#/components/schemas/IntegrationAccountAgreementListResult"
      tags:
        - IntegrationAccountAgreements
      x-ms-odata: "#/components/schemas/IntegrationAccountAgreementFilter"
      x-ms-pageable:
        nextLinkName: nextLink
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/integrationAccounts/{integrationAccountName}/agreements/{agreementName}":
    delete:
      description: Deletes an integration account agreement.
      operationId: IntegrationAccountAgreements_Delete
      parameters:
        - $ref: "#/components/parameters/subscriptionId"
        - description: The resource group name.
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: The integration account name.
          in: path
          name: integrationAccountName
          required: true
          schema:
            type: string
        - description: The integration account agreement name.
          in: path
          name: agreementName
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/api-version"
      responses:
        "200":
          description: OK
        "204":
          description: No Content
      tags:
        - IntegrationAccountAgreements
    get:
      description: Gets an integration account agreement.
      operationId: IntegrationAccountAgreements_Get
      parameters:
        - $ref: "#/components/parameters/subscriptionId"
        - description: The resource group name.
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: The integration account name.
          in: path
          name: integrationAccountName
          required: true
          schema:
            type: string
        - description: The integration account agreement name.
          in: path
          name: agreementName
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/api-version"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/IntegrationAccountAgreement"
            text/json:
              schema:
                $ref: "#/components/schemas/IntegrationAccountAgreement"
      tags:
        - IntegrationAccountAgreements
    put:
      description: Creates or updates an integration account agreement.
      operationId: IntegrationAccountAgreements_CreateOrUpdate
      parameters:
        - $ref: "#/components/parameters/subscriptionId"
        - description: The resource group name.
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: The integration account name.
          in: path
          name: integrationAccountName
          required: true
          schema:
            type: string
        - description: The integration account agreement name.
          in: path
          name: agreementName
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/api-version"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/IntegrationAccountAgreement"
          text/json:
            schema:
              $ref: "#/components/schemas/IntegrationAccountAgreement"
        description: The integration account agreement.
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/IntegrationAccountAgreement"
            text/json:
              schema:
                $ref: "#/components/schemas/IntegrationAccountAgreement"
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/IntegrationAccountAgreement"
            text/json:
              schema:
                $ref: "#/components/schemas/IntegrationAccountAgreement"
      tags:
        - IntegrationAccountAgreements
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/integrationAccounts/{integrationAccountName}/certificates":
    get:
      description: Gets a list of integration account certificates.
      operationId: IntegrationAccountCertificates_List
      parameters:
        - $ref: "#/components/parameters/subscriptionId"
        - description: The resource group name.
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: The integration account name.
          in: path
          name: integrationAccountName
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/api-version"
        - description: The number of items to be included in the result.
          in: query
          name: $top
          required: false
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/IntegrationAccountCertificateListResult"
            text/json:
              schema:
                $ref: "#/components/schemas/IntegrationAccountCertificateListResult"
      tags:
        - IntegrationAccountCertificates
      x-ms-pageable:
        nextLinkName: nextLink
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/integrationAccounts/{integrationAccountName}/certificates/{certificateName}":
    delete:
      description: Deletes an integration account certificate.
      operationId: IntegrationAccountCertificates_Delete
      parameters:
        - $ref: "#/components/parameters/subscriptionId"
        - description: The resource group name.
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: The integration account name.
          in: path
          name: integrationAccountName
          required: true
          schema:
            type: string
        - description: The integration account certificate name.
          in: path
          name: certificateName
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/api-version"
      responses:
        "200":
          description: OK
        "204":
          description: No Content
      tags:
        - IntegrationAccountCertificates
    get:
      description: Gets an integration account certificate.
      operationId: IntegrationAccountCertificates_Get
      parameters:
        - $ref: "#/components/parameters/subscriptionId"
        - description: The resource group name.
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: The integration account name.
          in: path
          name: integrationAccountName
          required: true
          schema:
            type: string
        - description: The integration account certificate name.
          in: path
          name: certificateName
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/api-version"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/IntegrationAccountCertificate"
            text/json:
              schema:
                $ref: "#/components/schemas/IntegrationAccountCertificate"
      tags:
        - IntegrationAccountCertificates
    put:
      description: Creates or updates an integration account certificate.
      operationId: IntegrationAccountCertificates_CreateOrUpdate
      parameters:
        - $ref: "#/components/parameters/subscriptionId"
        - description: The resource group name.
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: The integration account name.
          in: path
          name: integrationAccountName
          required: true
          schema:
            type: string
        - description: The integration account certificate name.
          in: path
          name: certificateName
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/api-version"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/IntegrationAccountCertificate"
          text/json:
            schema:
              $ref: "#/components/schemas/IntegrationAccountCertificate"
        description: The integration account certificate.
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/IntegrationAccountCertificate"
            text/json:
              schema:
                $ref: "#/components/schemas/IntegrationAccountCertificate"
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/IntegrationAccountCertificate"
            text/json:
              schema:
                $ref: "#/components/schemas/IntegrationAccountCertificate"
      tags:
        - IntegrationAccountCertificates
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/integrationAccounts/{integrationAccountName}/listCallbackUrl":
    post:
      description: Lists the integration account callback URL.
      operationId: IntegrationAccounts_ListCallbackUrl
      parameters:
        - $ref: "#/components/parameters/subscriptionId"
        - description: The resource group name.
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: The integration account name.
          in: path
          name: integrationAccountName
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/api-version"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ListCallbackUrlParameters"
          text/json:
            schema:
              $ref: "#/components/schemas/ListCallbackUrlParameters"
        description: The callback URL parameters.
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CallbackUrl"
            text/json:
              schema:
                $ref: "#/components/schemas/CallbackUrl"
      tags:
        - IntegrationAccounts
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/integrationAccounts/{integrationAccountName}/maps":
    get:
      description: Gets a list of integration account maps.
      operationId: IntegrationAccountMaps_List
      parameters:
        - $ref: "#/components/parameters/subscriptionId"
        - description: The resource group name.
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: The integration account name.
          in: path
          name: integrationAccountName
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/api-version"
        - description: The number of items to be included in the result.
          in: query
          name: $top
          required: false
          schema:
            type: integer
            format: int32
        - description: The filter to apply on the operation.
          in: query
          name: $filter
          required: false
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/IntegrationAccountMapListResult"
            text/json:
              schema:
                $ref: "#/components/schemas/IntegrationAccountMapListResult"
      tags:
        - IntegrationAccountMaps
      x-ms-odata: "#/components/schemas/IntegrationAccountMapFilter"
      x-ms-pageable:
        nextLinkName: nextLink
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/integrationAccounts/{integrationAccountName}/maps/{mapName}":
    delete:
      description: Deletes an integration account map.
      operationId: IntegrationAccountMaps_Delete
      parameters:
        - $ref: "#/components/parameters/subscriptionId"
        - description: The resource group name.
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: The integration account name.
          in: path
          name: integrationAccountName
          required: true
          schema:
            type: string
        - description: The integration account map name.
          in: path
          name: mapName
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/api-version"
      responses:
        "200":
          description: OK
        "204":
          description: No Content
      tags:
        - IntegrationAccountMaps
    get:
      description: Gets an integration account map.
      operationId: IntegrationAccountMaps_Get
      parameters:
        - $ref: "#/components/parameters/subscriptionId"
        - description: The resource group name.
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: The integration account name.
          in: path
          name: integrationAccountName
          required: true
          schema:
            type: string
        - description: The integration account map name.
          in: path
          name: mapName
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/api-version"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/IntegrationAccountMap"
            text/json:
              schema:
                $ref: "#/components/schemas/IntegrationAccountMap"
      tags:
        - IntegrationAccountMaps
    put:
      description: Creates or updates an integration account map.
      operationId: IntegrationAccountMaps_CreateOrUpdate
      parameters:
        - $ref: "#/components/parameters/subscriptionId"
        - description: The resource group name.
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: The integration account name.
          in: path
          name: integrationAccountName
          required: true
          schema:
            type: string
        - description: The integration account map name.
          in: path
          name: mapName
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/api-version"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/IntegrationAccountMap"
          text/json:
            schema:
              $ref: "#/components/schemas/IntegrationAccountMap"
        description: The integration account map.
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/IntegrationAccountMap"
            text/json:
              schema:
                $ref: "#/components/schemas/IntegrationAccountMap"
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/IntegrationAccountMap"
            text/json:
              schema:
                $ref: "#/components/schemas/IntegrationAccountMap"
      tags:
        - IntegrationAccountMaps
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/integrationAccounts/{integrationAccountName}/partners":
    get:
      description: Gets a list of integration account partners.
      operationId: IntegrationAccountPartners_List
      parameters:
        - $ref: "#/components/parameters/subscriptionId"
        - description: The resource group name.
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: The integration account name.
          in: path
          name: integrationAccountName
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/api-version"
        - description: The number of items to be included in the result.
          in: query
          name: $top
          required: false
          schema:
            type: integer
            format: int32
        - description: The filter to apply on the operation.
          in: query
          name: $filter
          required: false
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/IntegrationAccountPartnerListResult"
            text/json:
              schema:
                $ref: "#/components/schemas/IntegrationAccountPartnerListResult"
      tags:
        - IntegrationAccountPartners
      x-ms-odata: "#/components/schemas/IntegrationAccountPartnerFilter"
      x-ms-pageable:
        nextLinkName: nextLink
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/integrationAccounts/{integrationAccountName}/partners/{partnerName}":
    delete:
      description: Deletes an integration account partner.
      operationId: IntegrationAccountPartners_Delete
      parameters:
        - $ref: "#/components/parameters/subscriptionId"
        - description: The resource group name.
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: The integration account name.
          in: path
          name: integrationAccountName
          required: true
          schema:
            type: string
        - description: The integration account partner name.
          in: path
          name: partnerName
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/api-version"
      responses:
        "200":
          description: OK
        "204":
          description: No Content
      tags:
        - IntegrationAccountPartners
    get:
      description: Gets an integration account partner.
      operationId: IntegrationAccountPartners_Get
      parameters:
        - $ref: "#/components/parameters/subscriptionId"
        - description: The resource group name.
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: The integration account name.
          in: path
          name: integrationAccountName
          required: true
          schema:
            type: string
        - description: The integration account partner name.
          in: path
          name: partnerName
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/api-version"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/IntegrationAccountPartner"
            text/json:
              schema:
                $ref: "#/components/schemas/IntegrationAccountPartner"
      tags:
        - IntegrationAccountPartners
    put:
      description: Creates or updates an integration account partner.
      operationId: IntegrationAccountPartners_CreateOrUpdate
      parameters:
        - $ref: "#/components/parameters/subscriptionId"
        - description: The resource group name.
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: The integration account name.
          in: path
          name: integrationAccountName
          required: true
          schema:
            type: string
        - description: The integration account partner name.
          in: path
          name: partnerName
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/api-version"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/IntegrationAccountPartner"
          text/json:
            schema:
              $ref: "#/components/schemas/IntegrationAccountPartner"
        description: The integration account partner.
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/IntegrationAccountPartner"
            text/json:
              schema:
                $ref: "#/components/schemas/IntegrationAccountPartner"
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/IntegrationAccountPartner"
            text/json:
              schema:
                $ref: "#/components/schemas/IntegrationAccountPartner"
      tags:
        - IntegrationAccountPartners
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/integrationAccounts/{integrationAccountName}/schemas":
    get:
      description: Gets a list of integration account schemas.
      operationId: IntegrationAccountSchemas_List
      parameters:
        - $ref: "#/components/parameters/subscriptionId"
        - description: The resource group name.
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: The integration account name.
          in: path
          name: integrationAccountName
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/api-version"
        - description: The number of items to be included in the result.
          in: query
          name: $top
          required: false
          schema:
            type: integer
            format: int32
        - description: The filter to apply on the operation.
          in: query
          name: $filter
          required: false
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/IntegrationAccountSchemaListResult"
            text/json:
              schema:
                $ref: "#/components/schemas/IntegrationAccountSchemaListResult"
      tags:
        - IntegrationAccountSchemas
      x-ms-odata: "#/components/schemas/IntegrationAccountSchemaFilter"
      x-ms-pageable:
        nextLinkName: nextLink
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/integrationAccounts/{integrationAccountName}/schemas/{schemaName}":
    delete:
      description: Deletes an integration account schema.
      operationId: IntegrationAccountSchemas_Delete
      parameters:
        - $ref: "#/components/parameters/subscriptionId"
        - description: The resource group name.
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: The integration account name.
          in: path
          name: integrationAccountName
          required: true
          schema:
            type: string
        - description: The integration account schema name.
          in: path
          name: schemaName
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/api-version"
      responses:
        "200":
          description: OK
        "204":
          description: No Content
      tags:
        - IntegrationAccountSchemas
    get:
      description: Gets an integration account schema.
      operationId: IntegrationAccountSchemas_Get
      parameters:
        - $ref: "#/components/parameters/subscriptionId"
        - description: The resource group name.
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: The integration account name.
          in: path
          name: integrationAccountName
          required: true
          schema:
            type: string
        - description: The integration account schema name.
          in: path
          name: schemaName
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/api-version"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/IntegrationAccountSchema"
            text/json:
              schema:
                $ref: "#/components/schemas/IntegrationAccountSchema"
      tags:
        - IntegrationAccountSchemas
    put:
      description: Creates or updates an integration account schema.
      operationId: IntegrationAccountSchemas_CreateOrUpdate
      parameters:
        - $ref: "#/components/parameters/subscriptionId"
        - description: The resource group name.
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: The integration account name.
          in: path
          name: integrationAccountName
          required: true
          schema:
            type: string
        - description: The integration account schema name.
          in: path
          name: schemaName
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/api-version"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/IntegrationAccountSchema"
          text/json:
            schema:
              $ref: "#/components/schemas/IntegrationAccountSchema"
        description: The integration account schema.
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/IntegrationAccountSchema"
            text/json:
              schema:
                $ref: "#/components/schemas/IntegrationAccountSchema"
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/IntegrationAccountSchema"
            text/json:
              schema:
                $ref: "#/components/schemas/IntegrationAccountSchema"
      tags:
        - IntegrationAccountSchemas
servers:
  - url: https://management.azure.com
components:
  parameters:
    api-version:
      description: The API version.
      in: query
      name: api-version
      required: true
      schema:
        type: string
    subscriptionId:
      description: The subscription id.
      in: path
      name: subscriptionId
      required: true
      schema:
        type: string
  requestBodies:
    IntegrationAccount:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/IntegrationAccount"
        text/json:
          schema:
            $ref: "#/components/schemas/IntegrationAccount"
      description: The integration account.
      required: true
  schemas:
    AS2AcknowledgementConnectionSettings:
      properties:
        ignoreCertificateNameMismatch:
          description: The value indicating whether to ignore mismatch in certificate name.
          type: boolean
        keepHttpConnectionAlive:
          description: The value indicating whether to keep the connection alive.
          type: boolean
        supportHttpStatusCodeContinue:
          description: The value indicating whether to support HTTP status code 'CONTINUE'.
          type: boolean
        unfoldHttpHeaders:
          description: The value indicating whether to unfold the HTTP headers.
          type: boolean
      type: object
    AS2AgreementContent:
      properties:
        receiveAgreement:
          $ref: "#/components/schemas/AS2OneWayAgreement"
        sendAgreement:
          $ref: "#/components/schemas/AS2OneWayAgreement"
      type: object
    AS2EnvelopeSettings:
      properties:
        AutogenerateFileName:
          description: The value indicating whether to auto generate file name.
          type: boolean
        SuspendMessageOnFileNameGenerationError:
          description: The value indicating whether to suspend message on file name
            generation error.
          type: boolean
        fileNameTemplate:
          description: The template for file name.
          type: string
        messageContentType:
          description: The message content type.
          type: string
        transmitFileNameInMimeHeader:
          description: The value indicating whether to transmit file name in mime header.
          type: boolean
      type: object
    AS2ErrorSettings:
      properties:
        ResendIfMdnNotReceived:
          description: The value indicating whether to resend message If MDN is not
            received.
          type: boolean
        SuspendDuplicateMessage:
          description: The value indicating whether to suspend duplicate message.
          type: boolean
      type: object
    AS2MdnSettings:
      properties:
        dispositionNotificationTo:
          description: The disposition notification to header value.
          type: string
        mdnText:
          description: The MDN text.
          type: string
        micHashingAlgorithm:
          $ref: "#/components/schemas/HashingAlgorithm"
        needMdn:
          description: The value indicating whether to send or request a MDN.
          type: boolean
        receiptDeliveryUrl:
          description: The receipt delivery URL.
          type: string
        sendInboundMdnToMessageBox:
          description: The value indicating whether to send inbound MDN to message box.
          type: boolean
        sendMdnAsynchronously:
          description: The value indicating whether to send the asynchronous MDN.
          type: boolean
        signMdn:
          description: The value indicating whether the MDN needs to be signed or not.
          type: boolean
        signOutboundMdnIfOptional:
          description: The value indicating whether to sign the outbound MDN if optional.
          type: boolean
      type: object
    AS2MessageConnectionSettings:
      properties:
        ignoreCertificateNameMismatch:
          description: The value indicating whether to ignore mismatch in certificate name.
          type: boolean
        keepHttpConnectionAlive:
          description: The value indicating whether to keep the connection alive.
          type: boolean
        supportHttpStatusCodeContinue:
          description: The value indicating whether to support HTTP status code 'CONTINUE'.
          type: boolean
        unfoldHttpHeaders:
          description: The value indicating whether to unfold the HTTP headers.
          type: boolean
      type: object
    AS2OneWayAgreement:
      properties:
        protocolSettings:
          $ref: "#/components/schemas/AS2ProtocolSettings"
        receiverBusinessIdentity:
          $ref: "#/components/schemas/BusinessIdentity"
        senderBusinessIdentity:
          $ref: "#/components/schemas/BusinessIdentity"
      type: object
    AS2ProtocolSettings:
      properties:
        acknowledgementConnectionSettings:
          $ref: "#/components/schemas/AS2AcknowledgementConnectionSettings"
        envelopeSettings:
          $ref: "#/components/schemas/AS2EnvelopeSettings"
        errorSettings:
          $ref: "#/components/schemas/AS2ErrorSettings"
        mdnSettings:
          $ref: "#/components/schemas/AS2MdnSettings"
        messageConnectionSettings:
          $ref: "#/components/schemas/AS2MessageConnectionSettings"
        securitySettings:
          $ref: "#/components/schemas/AS2SecuritySettings"
        validationSettings:
          $ref: "#/components/schemas/AS2ValidationSettings"
      type: object
    AS2SecuritySettings:
      properties:
        enableNrrForInboundDecodedMessages:
          description: The value indicating whether to enable NRR for inbound decoded
            messages.
          type: boolean
        enableNrrForInboundEncodedMessages:
          description: The value indicating whether to enable NRR for inbound encoded
            messages.
          type: boolean
        enableNrrForInboundMdn:
          description: The value indicating whether to enable NRR for inbound MDN.
          type: boolean
        enableNrrForOutboundDecodedMessages:
          description: The value indicating whether to enable NRR for outbound decoded
            messages.
          type: boolean
        enableNrrForOutboundEncodedMessages:
          description: The value indicating whether to enable NRR for outbound encoded
            messages.
          type: boolean
        enableNrrForOutboundMdn:
          description: The value indicating whether to enable NRR for outbound MDN.
          type: boolean
        encryptionCertificateName:
          description: The name of the encryption certificate.
          type: string
        overrideGroupSigningCertificate:
          description: The value indicating whether to send or request a MDN.
          type: boolean
        signingCertificateName:
          description: The name of the signing certificate.
          type: string
      type: object
    AS2ValidationSettings:
      properties:
        checkCertificateRevocationListOnReceive:
          description: The value indicating whether to check for certificate revocation
            list on receive.
          type: boolean
        checkCertificateRevocationListOnSend:
          description: The value indicating whether to check for certificate revocation
            list on send.
          type: boolean
        checkDuplicateMessage:
          description: The value indicating whether to check for duplicate message.
          type: boolean
        compressMessage:
          description: The value indicating whether the message has to be compressed.
          type: boolean
        encryptMessage:
          description: The value indicating whether the message has to be encrypted.
          type: boolean
        encryptionAlgorithm:
          $ref: "#/components/schemas/EncryptionAlgorithm"
        interchangeDuplicatesValidityDays:
          description: The number of days to look back for duplicate interchange.
          format: int32
          type: integer
        overrideMessageProperties:
          description: The value indicating whether to override incoming message properties
            with those in agreement.
          type: boolean
        signMessage:
          description: The value indicating whether the message has to be signed.
          type: boolean
      type: object
    AgreementContent:
      properties:
        AS2:
          $ref: "#/components/schemas/AS2AgreementContent"
        Edifact:
          $ref: "#/components/schemas/EdifactAgreementContent"
        X12:
          $ref: "#/components/schemas/X12AgreementContent"
      type: object
    AgreementType:
      enum:
        - NotSpecified
        - AS2
        - X12
        - Edifact
      type: string
      x-ms-enum:
        modelAsString: false
        name: AgreementType
    B2BPartnerContent:
      properties:
        businessIdentities:
          description: The list of partner business identities.
          items:
            $ref: "#/components/schemas/BusinessIdentity"
          type: array
      type: object
    BusinessIdentity:
      properties:
        Qualifier:
          description: The business identity qualifier.
          type: string
        Value:
          description: The business identity value.
          type: string
      type: object
    CallbackUrl:
      properties:
        value:
          description: The URL value.
          type: string
      type: object
    EdifactAcknowledgementSettings:
      properties:
        acknowledgementControlNumberLowerBound:
          description: The acknowledgement control number lower bound.
          format: int32
          type: integer
        acknowledgementControlNumberPrefix:
          description: The acknowledgement control number prefix.
          type: string
        acknowledgementControlNumberSuffix:
          description: The acknowledgement control number suffix.
          type: string
        acknowledgementControlNumberUpperBound:
          description: The acknowledgement control number upper bound.
          format: int32
          type: integer
        batchFunctionalAcknowledgements:
          description: The value indicating whether to batch functional acknowledgements.
          type: boolean
        batchTechnicalAcknowledgements:
          description: The value indicating whether to batch the technical acknowledgements.
          type: boolean
        needFunctionalAcknowledgement:
          description: The value indicating whether functional acknowledgement is needed.
          type: boolean
        needLoopForValidMessages:
          description: The value indicating whether a loop is needed for valid messages.
          type: boolean
        needTechnicalAcknowledgement:
          description: The value indicating whether technical acknowledgement is needed.
          type: boolean
        rolloverAcknowledgementControlNumber:
          description: The value indicating whether to rollover acknowledgement control
            number.
          type: boolean
        sendSynchronousAcknowledgement:
          description: The value indicating whether to send synchronous acknowledgement.
          type: boolean
      type: object
    EdifactAgreementContent:
      properties:
        receiveAgreement:
          $ref: "#/components/schemas/EdifactOneWayAgreement"
        sendAgreement:
          $ref: "#/components/schemas/EdifactOneWayAgreement"
      type: object
    EdifactCharacterSet:
      enum:
        - NotSpecified
        - UNOB
        - UNOA
        - UNOC
        - UNOD
        - UNOE
        - UNOF
        - UNOG
        - UNOH
        - UNOI
        - UNOJ
        - UNOK
        - UNOX
        - UNOY
        - KECA
      type: string
      x-ms-enum:
        modelAsString: false
        name: EdifactCharacterSet
    EdifactDecimalIndicator:
      enum:
        - NotSpecified
        - Comma
        - Decimal
      type: string
      x-ms-enum:
        modelAsString: false
        name: EdifactDecimalIndicator
    EdifactDelimiterOverride:
      properties:
        componentSeparator:
          description: The component separator.
          format: int32
          type: integer
        dataElementSeparator:
          description: The data element separator.
          format: int32
          type: integer
        decimalPointIndicator:
          $ref: "#/components/schemas/EdifactDecimalIndicator"
        messageAssociationAssignedCode:
          description: The message association assigned code.
          type: string
        messageId:
          description: The message id.
          type: string
        messageRelease:
          description: The message release version.
          type: string
        messageVersion:
          description: The message version.
          type: string
        releaseIndicator:
          description: The release indicator.
          format: int32
          type: integer
        repetitionSeparator:
          description: The repetition separator.
          format: int32
          type: integer
        segmentTerminator:
          description: The segment terminator.
          format: int32
          type: integer
        segmentTerminatorSuffix:
          $ref: "#/components/schemas/SegmentTerminatorSuffix"
        targetNamespace:
          description: The target namespace on which this delimiter settings has to be
            applied.
          type: string
      type: object
    EdifactEnvelopeOverride:
      properties:
        applicationPassword:
          description: The application password.
          type: string
        associationAssignedCode:
          description: The association assigned code.
          type: string
        controllingAgencyCode:
          description: The controlling agency code.
          type: string
        functionalGroupId:
          description: The functional group id.
          type: string
        groupHeaderMessageRelease:
          description: The group header message release.
          type: string
        groupHeaderMessageVersion:
          description: The group header message version.
          type: string
        messageAssociationAssignedCode:
          description: The message association assigned code.
          type: string
        messageId:
          description: The message id on which this envelope settings has to be applied.
          type: string
        messageRelease:
          description: The message release version on which this envelope settings has to
            be applied.
          type: string
        messageVersion:
          description: The message version on which this envelope settings has to be
            applied.
          type: string
        receiverApplicationId:
          description: The receiver application id.
          type: string
        receiverApplicationQualifier:
          description: The receiver application qualifier.
          type: string
        senderApplicationId:
          description: The sender application id.
          type: string
        senderApplicationQualifier:
          description: The sender application qualifier.
          type: string
        targetNamespace:
          description: The target namespace on which this envelope settings has to be
            applied.
          type: string
      type: object
    EdifactEnvelopeSettings:
      properties:
        applicationReferenceId:
          description: The application reference id.
          type: string
        applyDelimiterStringAdvice:
          description: The value indicating whether to apply delimiter string advice.
          type: boolean
        communicationAgreementId:
          description: The communication agreement id.
          type: string
        createGroupingSegments:
          description: The value indicating whether to create grouping segments.
          type: boolean
        enableDefaultGroupHeaders:
          description: The value indicating whether to enable default group headers.
          type: boolean
        functionalGroupId:
          description: The functional group id.
          type: string
        groupApplicationPassword:
          description: The group application password.
          type: string
        groupApplicationReceiverId:
          description: The group application receiver id.
          type: string
        groupApplicationReceiverQualifier:
          description: The group application receiver qualifier.
          type: string
        groupApplicationSenderId:
          description: The group application sender id.
          type: string
        groupApplicationSenderQualifier:
          description: The group application sender qualifier.
          type: string
        groupAssociationAssignedCode:
          description: The group association assigned code.
          type: string
        groupControlNumberLowerBound:
          description: The group control number lower bound.
          format: int64
          type: integer
        groupControlNumberPrefix:
          description: The group control number prefix.
          type: string
        groupControlNumberSuffix:
          description: The group control number suffix.
          type: string
        groupControlNumberUpperBound:
          description: The group control number upper bound.
          format: int64
          type: integer
        groupControllingAgencyCode:
          description: The group controlling agency code.
          type: string
        groupMessageRelease:
          description: The group message release.
          type: string
        groupMessageVersion:
          description: The group message version.
          type: string
        interchangeControlNumberLowerBound:
          description: The interchange control number lower bound.
          format: int64
          type: integer
        interchangeControlNumberPrefix:
          description: The interchange control number prefix.
          type: string
        interchangeControlNumberSuffix:
          description: The interchange control number suffix.
          type: string
        interchangeControlNumberUpperBound:
          description: The interchange control number upper bound.
          format: int64
          type: integer
        isTestInterchange:
          description: The value indicating whether the message is a test interchange.
          type: boolean
        overwriteExistingTransactionSetControlNumber:
          description: The value indicating whether to overwrite existing transaction set
            control number.
          type: boolean
        processingPriorityCode:
          description: The processing priority code.
          type: string
        receiverInternalIdentification:
          description: The receiver internal identification.
          type: string
        receiverInternalSubIdentification:
          description: The receiver internal sub identification.
          type: string
        receiverReverseRoutingAddress:
          description: The receiver reverse routing address.
          type: string
        recipientReferencePasswordQualifier:
          description: The recipient reference password qualifier.
          type: string
        recipientReferencePasswordValue:
          description: The recipient reference password value.
          type: string
        rolloverGroupControlNumber:
          description: The value indicating whether to rollover group control number.
          type: boolean
        rolloverInterchangeControlNumber:
          description: The value indicating whether to rollover interchange control number.
          type: boolean
        rolloverTransactionSetControlNumber:
          description: The value indicating whether to rollover transaction set control
            number.
          type: boolean
        senderInternalIdentification:
          description: The sender internal identification.
          type: string
        senderInternalSubIdentification:
          description: The sender internal sub identification.
          type: string
        senderReverseRoutingAddress:
          description: The sender reverse routing address.
          type: string
        transactionSetControlNumberLowerBound:
          description: The transaction set control number lower bound.
          format: int64
          type: integer
        transactionSetControlNumberPrefix:
          description: The transaction set control number prefix.
          type: string
        transactionSetControlNumberSuffix:
          description: The transaction set control number suffix.
          type: string
        transactionSetControlNumberUpperBound:
          description: The transaction set control number upper bound.
          format: int64
          type: integer
      type: object
    EdifactFramingSettings:
      properties:
        characterEncoding:
          description: The character encoding.
          type: string
        characterSet:
          $ref: "#/components/schemas/EdifactCharacterSet"
        componentSeparator:
          description: The component separator.
          format: int32
          type: integer
        dataElementSeparator:
          description: The data element separator.
          format: int32
          type: integer
        decimalPointIndicator:
          $ref: "#/components/schemas/EdifactDecimalIndicator"
        protocolVersion:
          description: The protocol version.
          format: int32
          type: integer
        releaseIndicator:
          description: The release indicator.
          format: int32
          type: integer
        repetitionSeparator:
          description: The repetition separator.
          format: int32
          type: integer
        segmentTerminator:
          description: The segment terminator.
          format: int32
          type: integer
        segmentTerminatorSuffix:
          $ref: "#/components/schemas/SegmentTerminatorSuffix"
        serviceCodeListDirectoryVersion:
          description: The service code list directory version.
          type: string
      type: object
    EdifactMessageFilter:
      properties:
        messageFilterType:
          $ref: "#/components/schemas/MessageFilterType"
      type: object
    EdifactMessageIdentifier:
      properties:
        messageId:
          description: The message id on which this envelope settings has to be applied.
          type: string
      type: object
    EdifactOneWayAgreement:
      properties:
        protocolSettings:
          $ref: "#/components/schemas/EdifactProtocolSettings"
        receiverBusinessIdentity:
          $ref: "#/components/schemas/BusinessIdentity"
        senderBusinessIdentity:
          $ref: "#/components/schemas/BusinessIdentity"
      type: object
    EdifactProcessingSettings:
      properties:
        createEmptyXmlTagsForTrailingSeparators:
          description: The value indicating whether to create empty xml tags for trailing
            separators.
          type: boolean
        maskSecurityInfo:
          description: The value indicating whether to mask security information.
          type: boolean
        preserveInterchange:
          description: The value indicating whether to preserve interchange.
          type: boolean
        suspendInterchangeOnError:
          description: The value indicating whether to suspend interchange on error.
          type: boolean
        useDotAsDecimalSeparator:
          description: The value indicating whether to use dot as decimal separator.
          type: boolean
      type: object
    EdifactProtocolSettings:
      properties:
        acknowledgementSettings:
          $ref: "#/components/schemas/EdifactAcknowledgementSettings"
        edifactDelimiterOverrides:
          description: The EDIFACT delimiter override settings.
          items:
            $ref: "#/components/schemas/EdifactDelimiterOverride"
          type: array
        envelopeOverrides:
          description: The EDIFACT envelope override settings.
          items:
            $ref: "#/components/schemas/EdifactEnvelopeOverride"
          type: array
        envelopeSettings:
          $ref: "#/components/schemas/EdifactEnvelopeSettings"
        framingSettings:
          $ref: "#/components/schemas/EdifactFramingSettings"
        messageFilter:
          $ref: "#/components/schemas/EdifactMessageFilter"
        messageFilterList:
          description: The EDIFACT message filter list.
          items:
            $ref: "#/components/schemas/EdifactMessageIdentifier"
          type: array
        processingSettings:
          $ref: "#/components/schemas/EdifactProcessingSettings"
        schemaReferences:
          description: The EDIFACT schema references.
          items:
            $ref: "#/components/schemas/EdifactSchemaReference"
          type: array
        validationOverrides:
          description: The EDIFACT validation override settings.
          items:
            $ref: "#/components/schemas/EdifactValidationOverride"
          type: array
        validationSettings:
          $ref: "#/components/schemas/EdifactValidationSettings"
      type: object
    EdifactSchemaReference:
      properties:
        associationAssignedCode:
          description: The association assigned code.
          type: string
        messageId:
          description: The message id.
          type: string
        messageRelease:
          description: The message release version.
          type: string
        messageVersion:
          description: The message version.
          type: string
        schemaName:
          description: The schema name.
          type: string
        senderApplicationId:
          description: The sender application id.
          type: string
        senderApplicationQualifier:
          description: The sender application qualifier.
          type: string
      type: object
    EdifactValidationOverride:
      properties:
        allowLeadingAndTrailingSpacesAndZeroes:
          description: The value indicating whether to allow leading and trailing spaces
            and zeroes.
          type: boolean
        enforceCharacterSet:
          description: The value indicating whether to validate character Set.
          type: boolean
        messageId:
          description: The message id on which the validation settings has to be applied.
          type: string
        trailingSeparatorPolicy:
          $ref: "#/components/schemas/TrailingSeparatorPolicy"
        trimLeadingAndTrailingSpacesAndZeroes:
          description: The value indicating whether to trim leading and trailing spaces and
            zeroes.
          type: boolean
        validateEDITypes:
          description: The value indicating whether to validate EDI types.
          type: boolean
        validateXSDTypes:
          description: The value indicating whether to validate XSD types.
          type: boolean
      type: object
    EdifactValidationSettings:
      properties:
        allowLeadingAndTrailingSpacesAndZeroes:
          description: The value indicating whether to allow leading and trailing spaces
            and zeroes.
          type: boolean
        checkDuplicateGroupControlNumber:
          description: The value indicating whether to check for duplicate group control
            number.
          type: boolean
        checkDuplicateInterchangeControlNumber:
          description: The value indicating whether to check for duplicate interchange
            control number.
          type: boolean
        checkDuplicateTransactionSetControlNumber:
          description: The value indicating whether to check for duplicate transaction set
            control number.
          type: boolean
        interchangeControlNumberValidityDays:
          description: The validity period of interchange control number.
          format: int32
          type: integer
        trailingSeparatorPolicy:
          $ref: "#/components/schemas/TrailingSeparatorPolicy"
        trimLeadingAndTrailingSpacesAndZeroes:
          description: The value indicating whether to trim leading and trailing spaces and
            zeroes.
          type: boolean
        validateCharacterSet:
          description: The value indicating whether to validate character set in the
            message.
          type: boolean
        validateEDITypes:
          description: The value indicating whether to Whether to validate EDI types.
          type: boolean
        validateXSDTypes:
          description: The value indicating whether to Whether to validate XSD types.
          type: boolean
      type: object
    EncryptionAlgorithm:
      enum:
        - NotSpecified
        - None
        - DES3
        - RC2
        - AES128
        - AES192
        - AES256
      type: string
      x-ms-enum:
        modelAsString: false
        name: EncryptionAlgorithm
    HashingAlgorithm:
      enum:
        - NotSpecified
        - None
        - SHA2256
        - SHA2384
        - SHA2512
      type: string
      x-ms-enum:
        modelAsString: false
        name: HashingAlgorithm
    IntegrationAccount:
      allOf:
        - $ref: "#/components/schemas/IntegrationAccountResource"
      properties:
        properties:
          $ref: "#/components/schemas/IntegrationAccountProperties"
        sku:
          $ref: "#/components/schemas/IntegrationAccountSku"
      type: object
    IntegrationAccountAgreement:
      allOf:
        - $ref: "#/components/schemas/IntegrationAccountResource"
      properties:
        properties:
          $ref: "#/components/schemas/IntegrationAccountAgreementProperties"
      type: object
    IntegrationAccountAgreementFilter:
      properties:
        agreementType:
          $ref: "#/components/schemas/AgreementType"
      type: object
    IntegrationAccountAgreementListResult:
      properties:
        nextLink:
          description: The URL to get the next set of results.
          type: string
        value:
          description: The list of integration account agreements.
          items:
            $ref: "#/components/schemas/IntegrationAccountAgreement"
          type: array
      type: object
    IntegrationAccountAgreementProperties:
      properties:
        agreementType:
          $ref: "#/components/schemas/AgreementType"
        changedTime:
          description: The changed time.
          format: date-time
          readOnly: true
          type: string
        content:
          $ref: "#/components/schemas/AgreementContent"
        createdTime:
          description: The created time.
          format: date-time
          readOnly: true
          type: string
        guestIdentity:
          $ref: "#/components/schemas/BusinessIdentity"
        guestPartner:
          description: The guest partner.
          type: string
        hostIdentity:
          $ref: "#/components/schemas/BusinessIdentity"
        hostPartner:
          description: The host partner.
          type: string
        metadata:
          description: The metadata.
          properties: {}
          type: object
      type: object
    IntegrationAccountCertificate:
      allOf:
        - $ref: "#/components/schemas/IntegrationAccountResource"
      properties:
        properties:
          $ref: "#/components/schemas/IntegrationAccountCertificateProperties"
      type: object
    IntegrationAccountCertificateListResult:
      properties:
        nextLink:
          description: The URL to get the next set of results.
          type: string
        value:
          description: The list of integration account certificates.
          items:
            $ref: "#/components/schemas/IntegrationAccountCertificate"
          type: array
      type: object
    IntegrationAccountCertificateProperties:
      properties:
        changedTime:
          description: The changed time.
          format: date-time
          readOnly: true
          type: string
        createdTime:
          description: The created time.
          format: date-time
          readOnly: true
          type: string
        key:
          $ref: "#/components/schemas/KeyVaultKeyReference"
        metadata:
          description: The metadata.
          properties: {}
          type: object
        publicCertificate:
          description: The public certificate.
          type: string
      type: object
    IntegrationAccountContentHash:
      properties:
        algorithm:
          description: The content hash algorithm.
          type: string
        value:
          description: The content hash value.
          type: string
      type: object
    IntegrationAccountContentLink:
      properties:
        contentHash:
          $ref: "#/components/schemas/IntegrationAccountContentHash"
        contentSize:
          description: The content size.
          format: int64
          type: integer
        contentVersion:
          description: The content version.
          type: string
        metadata:
          description: The metadata.
          properties: {}
          type: object
        uri:
          description: The content link URI.
          type: string
      type: object
    IntegrationAccountListResult:
      properties:
        nextLink:
          description: The URL to get the next set of results.
          type: string
        value:
          description: The list of integration accounts.
          items:
            $ref: "#/components/schemas/IntegrationAccount"
          type: array
      type: object
    IntegrationAccountMap:
      allOf:
        - $ref: "#/components/schemas/IntegrationAccountResource"
      properties:
        properties:
          $ref: "#/components/schemas/IntegrationAccountMapProperties"
      type: object
    IntegrationAccountMapFilter:
      properties:
        schemaType:
          $ref: "#/components/schemas/MapType"
      type: object
    IntegrationAccountMapListResult:
      properties:
        nextLink:
          description: The URL to get the next set of results.
          type: string
        value:
          description: The list of integration account maps.
          items:
            $ref: "#/components/schemas/IntegrationAccountMap"
          type: array
      type: object
    IntegrationAccountMapProperties:
      properties:
        changedTime:
          description: The changed time.
          format: date-time
          readOnly: true
          type: string
        content:
          description: The content.
          properties: {}
          type: object
        contentLink:
          $ref: "#/components/schemas/IntegrationAccountContentLink"
        contentType:
          description: The content type.
          type: string
        createdTime:
          description: The created time.
          format: date-time
          readOnly: true
          type: string
        mapType:
          $ref: "#/components/schemas/MapType"
        metadata:
          description: The metadata.
          properties: {}
          type: object
      type: object
    IntegrationAccountPartner:
      allOf:
        - $ref: "#/components/schemas/IntegrationAccountResource"
      properties:
        properties:
          $ref: "#/components/schemas/IntegrationAccountPartnerProperties"
      type: object
    IntegrationAccountPartnerFilter:
      properties:
        partnerType:
          $ref: "#/components/schemas/PartnerType"
      type: object
    IntegrationAccountPartnerListResult:
      properties:
        nextLink:
          description: The URL to get the next set of results.
          type: string
        value:
          description: The list of integration account partners.
          items:
            $ref: "#/components/schemas/IntegrationAccountPartner"
          type: array
      type: object
    IntegrationAccountPartnerProperties:
      properties:
        changedTime:
          description: The changed time.
          format: date-time
          readOnly: true
          type: string
        content:
          $ref: "#/components/schemas/PartnerContent"
        createdTime:
          description: The created time.
          format: date-time
          readOnly: true
          type: string
        metadata:
          description: The metadata.
          properties: {}
          type: object
        partnerType:
          $ref: "#/components/schemas/PartnerType"
      type: object
    IntegrationAccountProperties:
      type: object
    IntegrationAccountResource:
      properties:
        id:
          description: The resource id.
          type: string
        location:
          description: The resource location.
          type: string
        name:
          description: The resource name.
          type: string
        tags:
          additionalProperties:
            type: string
          description: The resource tags.
          type: object
        type:
          description: The resource type.
          type: string
      x-ms-azure-resource: true
    IntegrationAccountSchema:
      allOf:
        - $ref: "#/components/schemas/IntegrationAccountResource"
      properties:
        properties:
          $ref: "#/components/schemas/IntegrationAccountSchemaProperties"
      type: object
    IntegrationAccountSchemaFilter:
      properties:
        schemaType:
          $ref: "#/components/schemas/SchemaType"
      type: object
    IntegrationAccountSchemaListResult:
      properties:
        nextLink:
          description: The URL to get the next set of results.
          type: string
        value:
          description: The list of integration account schemas.
          items:
            $ref: "#/components/schemas/IntegrationAccountSchema"
          type: array
      type: object
    IntegrationAccountSchemaProperties:
      properties:
        changedTime:
          description: The changed time.
          format: date-time
          readOnly: true
          type: string
        content:
          description: The content.
          properties: {}
          type: object
        contentLink:
          $ref: "#/components/schemas/IntegrationAccountContentLink"
        contentType:
          description: The content type.
          type: string
        createdTime:
          description: The created time.
          format: date-time
          readOnly: true
          type: string
        metadata:
          description: The metadata.
          properties: {}
          type: object
        schemaType:
          $ref: "#/components/schemas/SchemaType"
        targetNamespace:
          description: The target namespace.
          type: string
      type: object
    IntegrationAccountSku:
      properties:
        name:
          $ref: "#/components/schemas/IntegrationAccountSkuName"
      type: object
    IntegrationAccountSkuName:
      enum:
        - NotSpecified
        - Free
        - Shared
        - Basic
        - Standard
        - Premium
      type: string
      x-ms-enum:
        modelAsString: false
        name: SkuName
    KeyVaultKeyReference:
      properties:
        keyName:
          description: The private key name in key vault.
          type: string
        keyVault:
          description: The key vault reference.
          properties:
            id:
              description: The resource id.
              type: string
            name:
              description: The resource name.
              readOnly: true
              type: string
            type:
              description: The resource type.
              readOnly: true
              type: string
          type: object
        keyVersion:
          description: The private key version in key vault.
          type: string
      type: object
    ListCallbackUrlParameters:
      properties:
        NotAfter:
          description: The expiry time.
          format: date-time
          type: string
      type: object
    MapType:
      enum:
        - NotSpecified
        - Xslt
      type: string
      x-ms-enum:
        modelAsString: false
        name: MapType
    MessageFilterType:
      enum:
        - NotSpecified
        - Include
        - Exclude
      type: string
      x-ms-enum:
        modelAsString: false
        name: MessageFilterType
    PartnerContent:
      properties:
        b2b:
          $ref: "#/components/schemas/B2BPartnerContent"
      type: object
    PartnerType:
      enum:
        - NotSpecified
        - B2B
      type: string
      x-ms-enum:
        modelAsString: false
        name: PartnerType
    SchemaType:
      enum:
        - NotSpecified
        - Xml
      type: string
      x-ms-enum:
        modelAsString: false
        name: SchemaType
    SegmentTerminatorSuffix:
      enum:
        - NotSpecified
        - None
        - CR
        - LF
        - CRLF
      type: string
      x-ms-enum:
        modelAsString: false
        name: SegmentTerminatorSuffix
    TrailingSeparatorPolicy:
      enum:
        - NotSpecified
        - NotAllowed
        - Optional
        - Mandatory
      type: string
      x-ms-enum:
        modelAsString: false
        name: TrailingSeparatorPolicy
    UsageIndicator:
      enum:
        - NotSpecified
        - Test
        - Information
        - Production
      type: string
      x-ms-enum:
        modelAsString: false
        name: UsageIndicator
    X12AcknowledgementSettings:
      properties:
        acknowledgementControlNumberLowerBound:
          description: The acknowledgement control number lower bound.
          format: int32
          type: integer
        acknowledgementControlNumberPrefix:
          description: The acknowledgement control number prefix.
          type: string
        acknowledgementControlNumberSuffix:
          description: The acknowledgement control number suffix.
          type: string
        acknowledgementControlNumberUpperBound:
          description: The acknowledgement control number upper bound.
          format: int32
          type: integer
        batchFunctionalAcknowledgements:
          description: The value indicating whether to batch functional acknowledgements.
          type: boolean
        batchImplementationAcknowledgements:
          description: The value indicating whether to batch implementation
            acknowledgements.
          type: boolean
        batchTechnicalAcknowledgements:
          description: The value indicating whether to batch the technical acknowledgements.
          type: boolean
        functionalAcknowledgementVersion:
          description: The functional acknowledgement version.
          type: string
        implementationAcknowledgementVersion:
          description: The implementation acknowledgement version.
          type: string
        needFunctionalAcknowledgement:
          description: The value indicating whether functional acknowledgement is needed.
          type: boolean
        needImplementationAcknowledgement:
          description: The value indicating whether implementation acknowledgement is
            needed.
          type: boolean
        needLoopForValidMessages:
          description: The value indicating whether a loop is needed for valid messages.
          type: boolean
        needTechnicalAcknowledgement:
          description: The value indicating whether technical acknowledgement is needed.
          type: boolean
        rolloverAcknowledgementControlNumber:
          description: The value indicating whether to rollover acknowledgement control
            number.
          type: boolean
        sendSynchronousAcknowledgement:
          description: The value indicating whether to send synchronous acknowledgement.
          type: boolean
      type: object
    X12AgreementContent:
      properties:
        receiveAgreement:
          $ref: "#/components/schemas/X12OneWayAgreement"
        sendAgreement:
          $ref: "#/components/schemas/X12OneWayAgreement"
      type: object
    X12CharacterSet:
      enum:
        - NotSpecified
        - Basic
        - Extended
        - UTF8
      type: string
      x-ms-enum:
        modelAsString: false
        name: X12CharacterSet
    X12DateFormat:
      enum:
        - NotSpecified
        - CCYYMMDD
        - YYMMDD
      type: string
      x-ms-enum:
        modelAsString: false
        name: X12DateFormat
    X12DelimiterOverrides:
      properties:
        componentSeparator:
          description: The component separator.
          format: int32
          type: integer
        dataElementSeparator:
          description: The data element separator.
          format: int32
          type: integer
        messageId:
          description: The message id.
          type: string
        protocolVersion:
          description: The protocol version.
          type: string
        replaceCharacter:
          description: The replacement character.
          format: int32
          type: integer
        replaceSeparatorsInPayload:
          description: The value indicating whether to replace separators in payload.
          type: boolean
        segmentTerminator:
          description: The segment terminator.
          format: int32
          type: integer
        segmentTerminatorSuffix:
          $ref: "#/components/schemas/SegmentTerminatorSuffix"
        targetNamespace:
          description: The target namespace on which this delimiter settings has to be
            applied.
          type: string
      type: object
    X12EnvelopeOverride:
      properties:
        dateFormat:
          $ref: "#/components/schemas/X12DateFormat"
        functionalIdentifierCode:
          description: The functional identifier code.
          type: string
        headerVersion:
          description: The header version.
          type: string
        messageId:
          description: The message id on which this envelope settings has to be applied.
          type: string
        protocolVersion:
          description: The protocol version on which this envelope settings has to be
            applied.
          type: string
        receiverApplicationId:
          description: The receiver application id.
          type: string
        responsibleAgencyCode:
          description: The responsible agency code.
          format: int32
          type: integer
        senderApplicationId:
          description: The sender application id.
          type: string
        targetNamespace:
          description: The target namespace on which this envelope settings has to be
            applied.
          type: string
        timeFormat:
          $ref: "#/components/schemas/X12TimeFormat"
      type: object
    X12EnvelopeSettings:
      properties:
        controlStandardsId:
          description: The controls standards id.
          format: int32
          type: integer
        controlVersionNumber:
          description: The control version number.
          type: string
        enableDefaultGroupHeaders:
          description: The value indicating whether to enable default group headers.
          type: boolean
        functionalGroupId:
          description: The functional group id.
          type: string
        groupControlNumberLowerBound:
          description: The group control number lower bound.
          format: int32
          type: integer
        groupControlNumberUpperBound:
          description: The group control number upper bound.
          format: int32
          type: integer
        groupHeaderAgencyCode:
          description: The group header agency code.
          type: string
        groupHeaderDateFormat:
          $ref: "#/components/schemas/X12DateFormat"
        groupHeaderTimeFormat:
          $ref: "#/components/schemas/X12TimeFormat"
        groupHeaderVersion:
          description: The group header version.
          type: string
        interchangeControlNumberLowerBound:
          description: The interchange  control number lower bound.
          format: int32
          type: integer
        interchangeControlNumberUpperBound:
          description: The interchange  control number upper bound.
          format: int32
          type: integer
        overwriteExistingTransactionSetControlNumber:
          description: The value indicating whether to overwrite existing transaction set
            control number.
          type: boolean
        receiverApplicationId:
          description: The receiver application id.
          type: string
        rolloverGroupControlNumber:
          description: The value indicating whether to rollover group control number.
          type: boolean
        rolloverInterchangeControlNumber:
          description: The value indicating whether to rollover interchange control number.
          type: boolean
        rolloverTransactionSetControlNumber:
          description: The value indicating whether to rollover transaction set control
            number.
          type: boolean
        senderApplicationId:
          description: The sender application id.
          type: string
        transactionSetControlNumberLowerBound:
          description: The transaction set control number lower bound.
          format: int32
          type: integer
        transactionSetControlNumberPrefix:
          description: The transaction set control number prefix.
          type: string
        transactionSetControlNumberSuffix:
          description: The transaction set control number suffix.
          type: string
        transactionSetControlNumberUpperBound:
          description: The transaction set control number upper bound.
          format: int32
          type: integer
        usageIndicator:
          $ref: "#/components/schemas/UsageIndicator"
        useControlStandardsIdAsRepetitionCharacter:
          description: The value indicating whether to use control standards id as
            repetition character.
          type: boolean
      type: object
    X12FramingSettings:
      properties:
        characterSet:
          $ref: "#/components/schemas/X12CharacterSet"
        componentSeparator:
          description: The component separator.
          format: int32
          type: integer
        dataElementSeparator:
          description: The data element separator.
          format: int32
          type: integer
        replaceCharacter:
          description: The replacement character.
          format: int32
          type: integer
        replaceSeparatorsInPayload:
          description: The value indicating whether to replace separators in payload.
          type: boolean
        segmentTerminator:
          description: The segment terminator.
          format: int32
          type: integer
        segmentTerminatorSuffix:
          $ref: "#/components/schemas/SegmentTerminatorSuffix"
      type: object
    X12MessageFilter:
      properties:
        messageFilterType:
          $ref: "#/components/schemas/MessageFilterType"
      type: object
    X12MessageIdentifier:
      properties:
        messageId:
          description: The message id.
          type: string
      type: object
    X12OneWayAgreement:
      properties:
        protocolSettings:
          $ref: "#/components/schemas/X12ProtocolSettings"
        receiverBusinessIdentity:
          $ref: "#/components/schemas/BusinessIdentity"
        senderBusinessIdentity:
          $ref: "#/components/schemas/BusinessIdentity"
      type: object
    X12ProcessingSettings:
      properties:
        convertImpliedDecimal:
          description: The value indicating whether to convert numerical type to implied
            decimal.
          type: boolean
        createEmptyXmlTagsForTrailingSeparators:
          description: The value indicating whether to create empty xml tags for trailing
            separators.
          type: boolean
        maskSecurityInfo:
          description: The value indicating whether to mask security information.
          type: boolean
        preserveInterchange:
          description: The value indicating whether to preserve interchange.
          type: boolean
        suspendInterchangeOnError:
          description: The value indicating whether to suspend interchange on error.
          type: boolean
        useDotAsDecimalSeparator:
          description: The value indicating whether to use dot as decimal separator.
          type: boolean
      type: object
    X12ProtocolSettings:
      properties:
        acknowledgementSettings:
          $ref: "#/components/schemas/X12AcknowledgementSettings"
        envelopeOverrides:
          description: The X12 envelope override settings.
          items:
            $ref: "#/components/schemas/X12EnvelopeOverride"
          type: array
        envelopeSettings:
          $ref: "#/components/schemas/X12EnvelopeSettings"
        framingSettings:
          $ref: "#/components/schemas/X12FramingSettings"
        messageFilter:
          $ref: "#/components/schemas/X12MessageFilter"
        messageFilterList:
          description: The X12 message filter list.
          items:
            $ref: "#/components/schemas/X12MessageIdentifier"
          type: array
        processingSettings:
          $ref: "#/components/schemas/X12ProcessingSettings"
        schemaReferences:
          description: The X12 schema references.
          items:
            $ref: "#/components/schemas/X12SchemaReference"
          type: array
        securitySettings:
          $ref: "#/components/schemas/X12SecuritySettings"
        validationOverrides:
          description: The X12 validation override settings.
          items:
            $ref: "#/components/schemas/X12ValidationOverride"
          type: array
        validationSettings:
          $ref: "#/components/schemas/X12ValidationSettings"
        x12DelimiterOverrides:
          description: The X12 delimiter override settings.
          items:
            $ref: "#/components/schemas/X12DelimiterOverrides"
          type: array
      type: object
    X12SchemaReference:
      properties:
        messageId:
          description: The message id.
          type: string
        schemaName:
          description: The schema name.
          type: string
        schemaVersion:
          description: The schema version.
          type: string
        senderApplicationId:
          description: The sender application id.
          type: string
      type: object
    X12SecuritySettings:
      properties:
        authorizationQualifier:
          description: The authorization qualifier.
          type: string
        authorizationValue:
          description: The authorization value.
          type: string
        passwordValue:
          description: The password value.
          type: string
        securityQualifier:
          description: The security qualifier.
          type: string
      type: object
    X12TimeFormat:
      enum:
        - NotSpecified
        - HHMM
        - HHMMSS
        - HHMMSSdd
        - HHMMSSd
      type: string
      x-ms-enum:
        modelAsString: false
        name: X12TimeFormat
    X12ValidationOverride:
      properties:
        allowLeadingAndTrailingSpacesAndZeroes:
          description: The value indicating whether to allow leading and trailing spaces
            and zeroes.
          type: boolean
        messageId:
          description: The message id on which the validation settings has to be applied.
          type: string
        trailingSeparatorPolicy:
          $ref: "#/components/schemas/TrailingSeparatorPolicy"
        trimLeadingAndTrailingSpacesAndZeroes:
          description: The value indicating whether to trim leading and trailing spaces and
            zeroes.
          type: boolean
        validateCharacterSet:
          description: The value indicating whether to validate character Set.
          type: boolean
        validateEDITypes:
          description: The value indicating whether to validate EDI types.
          type: boolean
        validateXSDTypes:
          description: The value indicating whether to validate XSD types.
          type: boolean
      type: object
    X12ValidationSettings:
      properties:
        allowLeadingAndTrailingSpacesAndZeroes:
          description: The value indicating whether to allow leading and trailing spaces
            and zeroes.
          type: boolean
        checkDuplicateGroupControlNumber:
          description: The value indicating whether to check for duplicate group control
            number.
          type: boolean
        checkDuplicateInterchangeControlNumber:
          description: The value indicating whether to check for duplicate interchange
            control number.
          type: boolean
        checkDuplicateTransactionSetControlNumber:
          description: The value indicating whether to check for duplicate transaction set
            control number.
          type: boolean
        interchangeControlNumberValidityDays:
          description: The validity period of interchange control number.
          format: int32
          type: integer
        trailingSeparatorPolicy:
          $ref: "#/components/schemas/TrailingSeparatorPolicy"
        trimLeadingAndTrailingSpacesAndZeroes:
          description: The value indicating whether to trim leading and trailing spaces and
            zeroes.
          type: boolean
        validateCharacterSet:
          description: The value indicating whether to validate character set in the
            message.
          type: boolean
        validateEDITypes:
          description: The value indicating whether to Whether to validate EDI types.
          type: boolean
        validateXSDTypes:
          description: The value indicating whether to Whether to validate XSD types.
          type: boolean
      type: object
