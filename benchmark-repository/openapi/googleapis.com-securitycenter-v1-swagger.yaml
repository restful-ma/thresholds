openapi: 3.0.0
info:
  contact:
    name: Google
    url: https://google.com
  description: Cloud Security Command Center API provides access to temporal views of
    assets and findings within an organization.
  license:
    name: Creative Commons Attribution 3.0
    url: http://creativecommons.org/licenses/by/3.0/
  termsOfService: https://developers.google.com/terms/
  title: Cloud Security Command Center
  version: v1
  x-apiClientRegistration:
    url: https://console.developers.google.com
  x-logo:
    url: https://www.google.com/images/branding/googlelogo/2x/googlelogo_color_272x92dp.png
  x-origin:
    - converter:
        url: https://github.com/lucybot/api-spec-converter
        version: 2.7.31
      format: google
      url: https://securitycenter.googleapis.com/$discovery/rest?version=v1
      version: v1
  x-preferred: true
  x-providerName: googleapis.com
  x-serviceName: securitycenter
externalDocs:
  url: https://console.cloud.google.com/apis/api/securitycenter.googleapis.com/overview
tags:
  - name: organizations
paths:
  "/v1/{name}":
    delete:
      description: >-
        Deletes a long-running operation. This method indicates that the client
        is

        no longer interested in the operation result. It does not cancel the

        operation. If the server doesn't support this method, it returns

        `google.rpc.Code.UNIMPLEMENTED`.
      operationId: securitycenter.organizations.operations.delete
      parameters:
        - description: The name of the operation resource to be deleted.
          in: path
          name: name
          required: true
          x-reservedExpansion: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Empty"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - organizations
    get:
      description: >-
        Gets the latest state of a long-running operation.  Clients can use this

        method to poll the operation result at intervals as recommended by the API

        service.
      operationId: securitycenter.organizations.operations.get
      parameters:
        - description: The name of the operation resource.
          in: path
          name: name
          required: true
          x-reservedExpansion: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - organizations
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/upload_protocol"
    patch:
      description: Updates security marks.
      operationId: securitycenter.organizations.assets.updateSecurityMarks
      parameters:
        - description: >-
            The relative resource name of the SecurityMarks. See:

            https://cloud.google.com/apis/design/resource_names#relative_resource_name

            Examples:

            "organizations/123/assets/456/securityMarks"

            "organizations/123/sources/456/findings/789/securityMarks".
          in: path
          name: name
          required: true
          x-reservedExpansion: true
          schema:
            type: string
        - description: |-
            The time at which the updated SecurityMarks take effect.
            If not set uses current server time.  Updates will be applied to the
            SecurityMarks that are active immediately preceding this time.
          in: query
          name: startTime
          schema:
            type: string
        - description: |-
            The FieldMask to use when updating the security marks resource.

            The field mask must not contain duplicate fields.
            If empty or set to "marks", all marks will be replaced.  Individual
            marks can be updated using "marks.<mark_key>".
          in: query
          name: updateMask
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SecurityMarks"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/SecurityMarks"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - organizations
  "/v1/{name}:cancel":
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/upload_protocol"
    post:
      description: >-
        Starts asynchronous cancellation on a long-running operation.  The
        server

        makes a best effort to cancel the operation, but success is not

        guaranteed.  If the server doesn't support this method, it returns

        `google.rpc.Code.UNIMPLEMENTED`.  Clients can use

        Operations.GetOperation or

        other methods to check whether the cancellation succeeded or whether the

        operation completed despite cancellation. On successful cancellation,

        the operation is not deleted; instead, it becomes an operation with

        an Operation.error value with a google.rpc.Status.code of 1,

        corresponding to `Code.CANCELLED`.
      operationId: securitycenter.organizations.operations.cancel
      parameters:
        - description: The name of the operation resource to be cancelled.
          in: path
          name: name
          required: true
          x-reservedExpansion: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Empty"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - organizations
  "/v1/{name}:setState":
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/upload_protocol"
    post:
      description: Updates the state of a finding.
      operationId: securitycenter.organizations.sources.findings.setState
      parameters:
        - description: >-
            Required. The relative resource name of the finding. See:

            https://cloud.google.com/apis/design/resource_names#relative_resource_name

            Example:

            "organizations/123/sources/456/finding/789".
          in: path
          name: name
          required: true
          x-reservedExpansion: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SetFindingStateRequest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Finding"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - organizations
  "/v1/{parent}/assets":
    get:
      description: Lists an organization's assets.
      operationId: securitycenter.organizations.assets.list
      parameters:
        - description: >-
            When compare_duration is set, the ListAssetsResult's "state_change"

            attribute is updated to indicate whether the asset was added, removed, or

            remained present during the compare_duration period of time that precedes

            the read_time. This is the time between (read_time - compare_duration) and

            read_time.


            The state_change value is derived based on the presence of the asset at the

            two points in time. Intermediate state changes between the two times don't

            affect the result. For example, the results aren't affected if the asset is

            removed and re-created again.


            Possible "state_change" values when compare_duration is specified:


            * "ADDED":   indicates that the asset was not present at the start of
                           compare_duration, but present at read_time.
            * "REMOVED": indicates that the asset was present at the start of
                           compare_duration, but not present at read_time.
            * "ACTIVE":  indicates that the asset was present at both the
                           start and the end of the time period defined by
                           compare_duration and read_time.

            If compare_duration is not specified, then the only possible state_change

            is "UNUSED",  which will be the state_change set for all assets present at

            read_time.
          in: query
          name: compareDuration
          schema:
            type: string
        - description: >-
            Optional. A field mask to specify the ListAssetsResult fields to be
            listed in the

            response.

            An empty field mask will list all fields.
          in: query
          name: fieldMask
          schema:
            type: string
        - description: >-
            Expression that defines the filter to apply across assets.

            The expression is a list of zero or more restrictions combined via logical

            operators `AND` and `OR`.

            Parentheses are supported, and `OR` has higher precedence than `AND`.


            Restrictions have the form `<field> <operator> <value>` and may have a `-`

            character in front of them to indicate negation. The fields map to those

            defined in the Asset resource. Examples include:


            * name

            * security_center_properties.resource_name

            * resource_properties.a_property

            * security_marks.marks.marka


            The supported operators are:


            * `=` for all value types.

            * `>`, `<`, `>=`, `<=` for integer values.

            * `:`, meaning substring matching, for strings.


            The supported value types are:


            * string literals in quotes.

            * integer literals without quotes.

            * boolean literals `true` and `false` without quotes.


            The following are the allowed field and operator combinations:


            * name: `=`

            * update_time: `=`, `>`, `<`, `>=`, `<=`

              Usage: This should be milliseconds since epoch or an RFC3339 string.
              Examples:
                "update_time = \"2019-06-10T16:07:18-07:00\""
                "update_time = 1560208038000"

            * create_time: `=`, `>`, `<`, `>=`, `<=`

              Usage: This should be milliseconds since epoch or an RFC3339 string.
              Examples:
                "create_time = \"2019-06-10T16:07:18-07:00\""
                "create_time = 1560208038000"

            * iam_policy.policy_blob: `=`, `:`

            * resource_properties: `=`, `:`, `>`, `<`, `>=`, `<=`

            * security_marks.marks: `=`, `:`

            * security_center_properties.resource_name: `=`, `:`

            * security_center_properties.resource_type: `=`, `:`

            * security_center_properties.resource_parent: `=`, `:`

            * security_center_properties.resource_project: `=`, `:`

            * security_center_properties.resource_owners: `=`, `:`


            For example, `resource_properties.size = 100` is a valid filter string.
          in: query
          name: filter
          schema:
            type: string
        - description: >-
            Expression that defines what fields and order to use for sorting.
            The

            string value should follow SQL syntax: comma separated list of fields. For

            example: "name,resource_properties.a_property". The default sorting order

            is ascending. To specify descending order for a field, a suffix " desc"

            should be appended to the field name. For example: "name

            desc,resource_properties.a_property". Redundant space characters in the

            syntax are insignificant. "name desc,resource_properties.a_property" and "

            name     desc  ,   resource_properties.a_property  " are equivalent.


            The following fields are supported:

            name

            update_time

            resource_properties

            security_marks.marks

            security_center_properties.resource_name

            security_center_properties.resource_parent

            security_center_properties.resource_project

            security_center_properties.resource_type
          in: query
          name: orderBy
          schema:
            type: string
        - description: >-
            The maximum number of results to return in a single response.
            Default is

            10, minimum is 1, maximum is 1000.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: |-
            The value returned by the last `ListAssetsResponse`; indicates
            that this is a continuation of a prior `ListAssets` call, and
            that the system should return the next page of data.
          in: query
          name: pageToken
          schema:
            type: string
        - description: >-
            Required. Name of the organization assets should belong to. Its
            format is

            "organizations/[organization_id]".
          in: path
          name: parent
          required: true
          x-reservedExpansion: true
          schema:
            type: string
        - description: >-
            Time used as a reference point when filtering assets. The filter is
            limited

            to assets existing at the supplied time and their values are those at that

            specific time. Absence of this field will default to the API's version of

            NOW.
          in: query
          name: readTime
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ListAssetsResponse"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - organizations
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/upload_protocol"
  "/v1/{parent}/assets:group":
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/upload_protocol"
    post:
      description: |-
        Filters an organization's assets and  groups them by their specified
        properties.
      operationId: securitycenter.organizations.assets.group
      parameters:
        - description: |-
            Required. Name of the organization to groupBy. Its format is
            "organizations/[organization_id]".
          in: path
          name: parent
          required: true
          x-reservedExpansion: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GroupAssetsRequest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/GroupAssetsResponse"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - organizations
  "/v1/{parent}/assets:runDiscovery":
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/upload_protocol"
    post:
      description: >-
        Runs asset discovery. The discovery is tracked with a long-running

        operation.


        This API can only be called with limited frequency for an organization. If

        it is called too frequently the caller will receive a TOO_MANY_REQUESTS

        error.
      operationId: securitycenter.organizations.assets.runDiscovery
      parameters:
        - description: >-
            Required. Name of the organization to run asset discovery for. Its
            format is

            "organizations/[organization_id]".
          in: path
          name: parent
          required: true
          x-reservedExpansion: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RunAssetDiscoveryRequest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - organizations
  "/v1/{parent}/findings":
    get:
      description: |-
        Lists an organization or source's findings.

        To list across all sources provide a `-` as the source id.
        Example: /v1/organizations/123/sources/-/findings
      operationId: securitycenter.organizations.sources.findings.list
      parameters:
        - description: >-
            When compare_duration is set, the ListFindingsResult's
            "state_change"

            attribute is updated to indicate whether the finding had its state changed,

            the finding's state remained unchanged, or if the finding was added in any

            state during the compare_duration period of time that precedes the

            read_time. This is the time between (read_time - compare_duration) and

            read_time.


            The state_change value is derived based on the presence and state of the

            finding at the two points in time. Intermediate state changes between the

            two times don't affect the result. For example, the results aren't affected

            if the finding is made inactive and then active again.


            Possible "state_change" values when compare_duration is specified:


            * "CHANGED":   indicates that the finding was present at the start of
                             compare_duration, but changed its state at read_time.
            * "UNCHANGED": indicates that the finding was present at the start of
                             compare_duration and did not change state at read_time.
            * "ADDED":     indicates that the finding was not present at the start
                             of compare_duration, but was present at read_time.

            If compare_duration is not specified, then the only possible state_change

            is "UNUSED", which will be the state_change set for all findings present at

            read_time.
          in: query
          name: compareDuration
          schema:
            type: string
        - description: >-
            Optional. A field mask to specify the Finding fields to be listed in
            the response.

            An empty field mask will list all fields.
          in: query
          name: fieldMask
          schema:
            type: string
        - description: >-
            Expression that defines the filter to apply across findings.

            The expression is a list of one or more restrictions combined via logical

            operators `AND` and `OR`.

            Parentheses are supported, and `OR` has higher precedence than `AND`.


            Restrictions have the form `<field> <operator> <value>` and may have a `-`

            character in front of them to indicate negation. Examples include:

             * name
             * source_properties.a_property
             * security_marks.marks.marka

            The supported operators are:


            * `=` for all value types.

            * `>`, `<`, `>=`, `<=` for integer values.

            * `:`, meaning substring matching, for strings.


            The supported value types are:


            * string literals in quotes.

            * integer literals without quotes.

            * boolean literals `true` and `false` without quotes.


            The following field and operator combinations are supported:


            name: `=`

            parent: `=`, `:`

            resource_name: `=`, `:`

            state: `=`, `:`

            category: `=`, `:`

            external_uri: `=`, `:`

            event_time: `=`, `>`, `<`, `>=`, `<=`

              Usage: This should be milliseconds since epoch or an RFC3339 string.
              Examples:
                "event_time = \"2019-06-10T16:07:18-07:00\""
                "event_time = 1560208038000"

            security_marks.marks: `=`, `:`

            source_properties: `=`, `:`, `>`, `<`, `>=`, `<=`


            For example, `source_properties.size = 100` is a valid filter string.
          in: query
          name: filter
          schema:
            type: string
        - description: >-
            Expression that defines what fields and order to use for sorting.
            The

            string value should follow SQL syntax: comma separated list of fields. For

            example: "name,resource_properties.a_property". The default sorting order

            is ascending. To specify descending order for a field, a suffix " desc"

            should be appended to the field name. For example: "name

            desc,source_properties.a_property". Redundant space characters in the

            syntax are insignificant. "name desc,source_properties.a_property" and "

            name     desc  ,   source_properties.a_property  " are equivalent.


            The following fields are supported:

            name

            parent

            state

            category

            resource_name

            event_time

            source_properties

            security_marks.marks
          in: query
          name: orderBy
          schema:
            type: string
        - description: >-
            The maximum number of results to return in a single response.
            Default is

            10, minimum is 1, maximum is 1000.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: |-
            The value returned by the last `ListFindingsResponse`; indicates
            that this is a continuation of a prior `ListFindings` call, and
            that the system should return the next page of data.
          in: query
          name: pageToken
          schema:
            type: string
        - description: >-
            Required. Name of the source the findings belong to. Its format is

            "organizations/[organization_id]/sources/[source_id]". To list across all

            sources provide a source_id of `-`. For example:

            organizations/123/sources/-
          in: path
          name: parent
          required: true
          x-reservedExpansion: true
          schema:
            type: string
        - description: >-
            Time used as a reference point when filtering findings. The filter
            is

            limited to findings existing at the supplied time and their values are

            those at that specific time. Absence of this field will default to the

            API's version of NOW.
          in: query
          name: readTime
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ListFindingsResponse"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - organizations
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/upload_protocol"
    post:
      description: >-
        Creates a finding. The corresponding source must exist for finding
        creation

        to succeed.
      operationId: securitycenter.organizations.sources.findings.create
      parameters:
        - description: >-
            Required. Unique identifier provided by the client within the parent
            scope.

            It must be alphanumeric and less than or equal to 32 characters and

            greater than 0 characters in length.
          in: query
          name: findingId
          schema:
            type: string
        - description: >-
            Required. Resource name of the new finding's parent. Its format
            should be

            "organizations/[organization_id]/sources/[source_id]".
          in: path
          name: parent
          required: true
          x-reservedExpansion: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Finding"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Finding"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - organizations
  "/v1/{parent}/findings:group":
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/upload_protocol"
    post:
      description: |-
        Filters an organization or source's findings and  groups them by their
        specified properties.

        To group across all sources provide a `-` as the source id.
        Example: /v1/organizations/123/sources/-/findings
      operationId: securitycenter.organizations.sources.findings.group
      parameters:
        - description: >-
            Required. Name of the source to groupBy. Its format is

            "organizations/[organization_id]/sources/[source_id]". To groupBy across

            all sources provide a source_id of `-`. For example:

            organizations/123/sources/-
          in: path
          name: parent
          required: true
          x-reservedExpansion: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GroupFindingsRequest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/GroupFindingsResponse"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - organizations
  "/v1/{parent}/sources":
    get:
      description: Lists all sources belonging to an organization.
      operationId: securitycenter.organizations.sources.list
      parameters:
        - description: >-
            The maximum number of results to return in a single response.
            Default is

            10, minimum is 1, maximum is 1000.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: |-
            The value returned by the last `ListSourcesResponse`; indicates
            that this is a continuation of a prior `ListSources` call, and
            that the system should return the next page of data.
          in: query
          name: pageToken
          schema:
            type: string
        - description: >-
            Required. Resource name of the parent of sources to list. Its format
            should be

            "organizations/[organization_id]".
          in: path
          name: parent
          required: true
          x-reservedExpansion: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ListSourcesResponse"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - organizations
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/upload_protocol"
    post:
      description: Creates a source.
      operationId: securitycenter.organizations.sources.create
      parameters:
        - description: >-
            Required. Resource name of the new source's parent. Its format
            should be

            "organizations/[organization_id]".
          in: path
          name: parent
          required: true
          x-reservedExpansion: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Source"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Source"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - organizations
  "/v1/{resource}:getIamPolicy":
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/upload_protocol"
    post:
      description: Gets the access control policy on the specified Source.
      operationId: securitycenter.organizations.sources.getIamPolicy
      parameters:
        - description: >-
            REQUIRED: The resource for which the policy is being requested.

            See the operation documentation for the appropriate value for this field.
          in: path
          name: resource
          required: true
          x-reservedExpansion: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GetIamPolicyRequest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Policy"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - organizations
  "/v1/{resource}:setIamPolicy":
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/upload_protocol"
    post:
      description: Sets the access control policy on the specified Source.
      operationId: securitycenter.organizations.sources.setIamPolicy
      parameters:
        - description: >-
            REQUIRED: The resource for which the policy is being specified.

            See the operation documentation for the appropriate value for this field.
          in: path
          name: resource
          required: true
          x-reservedExpansion: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SetIamPolicyRequest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Policy"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - organizations
  "/v1/{resource}:testIamPermissions":
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/upload_protocol"
    post:
      description: Returns the permissions that a caller has on the specified source.
      operationId: securitycenter.organizations.sources.testIamPermissions
      parameters:
        - description: >-
            REQUIRED: The resource for which the policy detail is being
            requested.

            See the operation documentation for the appropriate value for this field.
          in: path
          name: resource
          required: true
          x-reservedExpansion: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TestIamPermissionsRequest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/TestIamPermissionsResponse"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - organizations
servers:
  - url: https://securitycenter.googleapis.com/
components:
  parameters:
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
          - media
          - proto
        default: json
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    key:
      description: API key. Your API key identifies your project and provides you with API
        access, quota, and reports. Required unless you provide an OAuth 2.0
        token.
      in: query
      name: key
      schema:
        type: string
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
        default: true
    quotaUser:
      description: Available to use for quota purposes for server-side applications. Can be
        any arbitrary string assigned to a user, but should not exceed 40
        characters.
      in: query
      name: quotaUser
      schema:
        type: string
    uploadType:
      description: Legacy upload protocol for media (e.g. "media", "multipart").
      in: query
      name: uploadType
      schema:
        type: string
    upload_protocol:
      description: Upload protocol for media (e.g. "raw", "multipart").
      in: query
      name: upload_protocol
      schema:
        type: string
    _.xgafv:
      description: V1 error format.
      in: query
      name: $.xgafv
      schema:
        type: string
        enum:
          - "1"
          - "2"
  securitySchemes:
    Oauth2:
      description: Oauth 2.0 implicit authentication
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes:
            https://www.googleapis.com/auth/cloud-platform: View and manage your data across Google Cloud Platform services
    Oauth2c:
      description: Oauth 2.0 accessCode authentication
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          tokenUrl: https://accounts.google.com/o/oauth2/token
          scopes:
            https://www.googleapis.com/auth/cloud-platform: View and manage your data across Google Cloud Platform services
  schemas:
    Asset:
      description: >-
        Cloud Security Command Center's (Cloud SCC) representation of a Google
        Cloud

        Platform (GCP) resource.


        The Asset is a Cloud SCC resource that captures information about a single

        GCP resource. All modifications to an Asset are only within the context of

        Cloud SCC and don't affect the referenced GCP resource.
      properties:
        createTime:
          description: The time at which the asset was created in Cloud SCC.
          format: google-datetime
          type: string
        iamPolicy:
          $ref: "#/components/schemas/IamPolicy"
        name:
          description: >-
            The relative resource name of this asset. See:

            https://cloud.google.com/apis/design/resource_names#relative_resource_name

            Example:

            "organizations/123/assets/456".
          type: string
        resourceProperties:
          additionalProperties: {}
          description: >-
            Resource managed properties. These properties are managed and
            defined by

            the GCP resource and cannot be modified by the user.
          type: object
        securityCenterProperties:
          $ref: "#/components/schemas/SecurityCenterProperties"
        securityMarks:
          $ref: "#/components/schemas/SecurityMarks"
        updateTime:
          description: >-
            The time at which the asset was last updated, added, or deleted in
            Cloud

            SCC.
          format: google-datetime
          type: string
      type: object
    AssetDiscoveryConfig:
      description: The configuration used for Asset Discovery runs.
      properties:
        inclusionMode:
          description: The mode to use for filtering asset discovery.
          enum:
            - INCLUSION_MODE_UNSPECIFIED
            - INCLUDE_ONLY
            - EXCLUDE
          type: string
        projectIds:
          description: The project ids to use for filtering asset discovery.
          items:
            type: string
          type: array
      type: object
    AuditConfig:
      description: >-
        Specifies the audit configuration for a service.

        The configuration determines which permission types are logged, and what

        identities, if any, are exempted from logging.

        An AuditConfig must have one or more AuditLogConfigs.


        If there are AuditConfigs for both `allServices` and a specific service,

        the union of the two AuditConfigs is used for that service: the log_types

        specified in each AuditConfig are enabled, and the exempted_members in each

        AuditLogConfig are exempted.


        Example Policy with multiple AuditConfigs:

            {
              "audit_configs": [
                {
                  "service": "allServices"
                  "audit_log_configs": [
                    {
                      "log_type": "DATA_READ",
                      "exempted_members": [
                        "user:jose@example.com"
                      ]
                    },
                    {
                      "log_type": "DATA_WRITE",
                    },
                    {
                      "log_type": "ADMIN_READ",
                    }
                  ]
                },
                {
                  "service": "sampleservice.googleapis.com"
                  "audit_log_configs": [
                    {
                      "log_type": "DATA_READ",
                    },
                    {
                      "log_type": "DATA_WRITE",
                      "exempted_members": [
                        "user:aliya@example.com"
                      ]
                    }
                  ]
                }
              ]
            }

        For sampleservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ

        logging. It also exempts jose@example.com from DATA_READ logging, and

        aliya@example.com from DATA_WRITE logging.
      properties:
        auditLogConfigs:
          description: The configuration for logging of each type of permission.
          items:
            $ref: "#/components/schemas/AuditLogConfig"
          type: array
        service:
          description: |-
            Specifies a service that will be enabled for audit logging.
            For example, `storage.googleapis.com`, `cloudsql.googleapis.com`.
            `allServices` is a special value that covers all services.
          type: string
      type: object
    AuditLogConfig:
      description: |-
        Provides the configuration for logging a type of permissions.
        Example:

            {
              "audit_log_configs": [
                {
                  "log_type": "DATA_READ",
                  "exempted_members": [
                    "user:jose@example.com"
                  ]
                },
                {
                  "log_type": "DATA_WRITE",
                }
              ]
            }

        This enables 'DATA_READ' and 'DATA_WRITE' logging, while exempting
        jose@example.com from DATA_READ logging.
      properties:
        exemptedMembers:
          description: |-
            Specifies the identities that do not cause logging for this type of
            permission.
            Follows the same format of Binding.members.
          items:
            type: string
          type: array
        logType:
          description: The log type that this config enables.
          enum:
            - LOG_TYPE_UNSPECIFIED
            - ADMIN_READ
            - DATA_WRITE
            - DATA_READ
          type: string
      type: object
    Binding:
      description: Associates `members` with a `role`.
      properties:
        condition:
          $ref: "#/components/schemas/Expr"
        members:
          description: >+
            Specifies the identities requesting access for a Cloud Platform
            resource.

            `members` can have the following values:


            * `allUsers`: A special identifier that represents anyone who is
               on the internet; with or without a Google account.

            * `allAuthenticatedUsers`: A special identifier that represents anyone
               who is authenticated with a Google account or a service account.

            * `user:{emailid}`: An email address that represents a specific Google
               account. For example, `alice@example.com` .


            * `serviceAccount:{emailid}`: An email address that represents a service
               account. For example, `my-other-app@appspot.gserviceaccount.com`.

            * `group:{emailid}`: An email address that represents a Google group.
               For example, `admins@example.com`.


            * `domain:{domain}`: The G Suite domain (primary) that represents all the
               users of that domain. For example, `google.com` or `example.com`.

          items:
            type: string
          type: array
        role:
          description: |-
            Role that is assigned to `members`.
            For example, `roles/viewer`, `roles/editor`, or `roles/owner`.
          type: string
      type: object
    Empty:
      description: >-
        A generic empty message that you can re-use to avoid defining duplicated

        empty messages in your APIs. A typical example is to use it as the request

        or the response type of an API method. For instance:

            service Foo {
              rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);
            }

        The JSON representation for `Empty` is empty JSON object `{}`.
      properties: {}
      type: object
    Expr:
      description: |-
        Represents an expression text. Example:

            title: "User account presence"
            description: "Determines whether the request has a user account"
            expression: "size(request.user) > 0"
      properties:
        description:
          description: >-
            An optional description of the expression. This is a longer text
            which

            describes the expression, e.g. when hovered over it in a UI.
          type: string
        expression:
          description: |-
            Textual representation of an expression in
            Common Expression Language syntax.

            The application context of the containing message determines which
            well-known feature set of CEL is supported.
          type: string
        location:
          description: >-
            An optional string indicating the location of the expression for
            error

            reporting, e.g. a file name and a position in the file.
          type: string
        title:
          description: |-
            An optional title for the expression, i.e. a short string describing
            its purpose. This can be used e.g. in UIs which allow to enter the
            expression.
          type: string
      type: object
    Finding:
      description: >-
        Cloud Security Command Center (Cloud SCC) finding.


        A finding is a record of assessment data (security, risk, health or privacy)

        ingested into Cloud SCC for presentation, notification, analysis,

        policy testing, and enforcement. For example, an XSS vulnerability in an

        App Engine application is a finding.
      properties:
        category:
          description: |-
            The additional taxonomy group within findings from a given source.
            This field is immutable after creation time.
            Example: "XSS_FLASH_INJECTION"
          type: string
        createTime:
          description: The time at which the finding was created in Cloud SCC.
          format: google-datetime
          type: string
        eventTime:
          description: >-
            The time at which the event took place. For example, if the finding

            represents an open firewall it would capture the time the detector believes

            the firewall became open. The accuracy is determined by the detector.
          format: google-datetime
          type: string
        externalUri:
          description: >-
            The URI that, if available, points to a web page outside of Cloud
            SCC

            where additional information about the finding can be found. This field is

            guaranteed to be either empty or a well formed URL.
          type: string
        name:
          description: >-
            The relative resource name of this finding. See:

            https://cloud.google.com/apis/design/resource_names#relative_resource_name

            Example:

            "organizations/123/sources/456/findings/789"
          type: string
        parent:
          description: >-
            The relative resource name of the source the finding belongs to.
            See:

            https://cloud.google.com/apis/design/resource_names#relative_resource_name

            This field is immutable after creation time.

            For example:

            "organizations/123/sources/456"
          type: string
        resourceName:
          description: >-
            The full resource name of the Google Cloud Platform (GCP) resource
            this

            finding is for. See:

            https://cloud.google.com/apis/design/resource_names#full_resource_name

            This field is immutable after creation time.
          type: string
        securityMarks:
          $ref: "#/components/schemas/SecurityMarks"
        sourceProperties:
          additionalProperties: {}
          description: >-
            Source specific properties. These properties are managed by the
            source

            that writes the finding. The key names in the source_properties map must be

            between 1 and 255 characters, and must start with a letter and contain

            alphanumeric characters or underscores only.
          type: object
        state:
          description: The state of the finding.
          enum:
            - STATE_UNSPECIFIED
            - ACTIVE
            - INACTIVE
          type: string
      type: object
    GetIamPolicyRequest:
      description: Request message for `GetIamPolicy` method.
      properties:
        options:
          $ref: "#/components/schemas/GetPolicyOptions"
      type: object
    GetPolicyOptions:
      description: Encapsulates settings provided to GetIamPolicy.
      properties:
        requestedPolicyVersion:
          description: >-
            Optional. The policy format version to be returned.


            Valid values are 0, 1, and 3. Requests specifying an invalid value will be

            rejected.


            Requests for policies with any conditional bindings must specify version 3.

            Policies without any conditional bindings may specify any valid value or

            leave the field unset.
          format: int32
          type: integer
      type: object
    GoogleCloudSecuritycenterV1RunAssetDiscoveryResponse:
      description: Response of asset discovery run
      properties:
        duration:
          description: The duration between asset discovery run start and end
          format: google-duration
          type: string
        state:
          description: The state of an asset discovery run.
          enum:
            - STATE_UNSPECIFIED
            - COMPLETED
            - SUPERSEDED
            - TERMINATED
          type: string
      type: object
    GoogleCloudSecuritycenterV1beta1RunAssetDiscoveryResponse:
      description: Response of asset discovery run
      properties:
        duration:
          description: The duration between asset discovery run start and end
          format: google-duration
          type: string
        state:
          description: The state of an asset discovery run.
          enum:
            - STATE_UNSPECIFIED
            - COMPLETED
            - SUPERSEDED
            - TERMINATED
          type: string
      type: object
    GroupAssetsRequest:
      description: Request message for grouping by assets.
      properties:
        compareDuration:
          description: >-
            When compare_duration is set, the GroupResult's "state_change"
            property is

            updated to indicate whether the asset was added, removed, or remained

            present during the compare_duration period of time that precedes the

            read_time. This is the time between (read_time - compare_duration) and

            read_time.


            The state change value is derived based on the presence of the asset at the

            two points in time. Intermediate state changes between the two times don't

            affect the result. For example, the results aren't affected if the asset is

            removed and re-created again.


            Possible "state_change" values when compare_duration is specified:


            * "ADDED":   indicates that the asset was not present at the start of
                           compare_duration, but present at reference_time.
            * "REMOVED": indicates that the asset was present at the start of
                           compare_duration, but not present at reference_time.
            * "ACTIVE":  indicates that the asset was present at both the
                           start and the end of the time period defined by
                           compare_duration and reference_time.

            If compare_duration is not specified, then the only possible state_change

            is "UNUSED", which will be the state_change set for all assets present at

            read_time.


            If this field is set then `state_change` must be a specified field in

            `group_by`.
          format: google-duration
          type: string
        filter:
          description: >-
            Expression that defines the filter to apply across assets.

            The expression is a list of zero or more restrictions combined via logical

            operators `AND` and `OR`.

            Parentheses are supported, and `OR` has higher precedence than `AND`.


            Restrictions have the form `<field> <operator> <value>` and may have a `-`

            character in front of them to indicate negation. The fields map to those

            defined in the Asset resource. Examples include:


            * name

            * security_center_properties.resource_name

            * resource_properties.a_property

            * security_marks.marks.marka


            The supported operators are:


            * `=` for all value types.

            * `>`, `<`, `>=`, `<=` for integer values.

            * `:`, meaning substring matching, for strings.


            The supported value types are:


            * string literals in quotes.

            * integer literals without quotes.

            * boolean literals `true` and `false` without quotes.


            The following field and operator combinations are supported:


            * name: `=`

            * update_time: `=`, `>`, `<`, `>=`, `<=`

              Usage: This should be milliseconds since epoch or an RFC3339 string.
              Examples:
                "update_time = \"2019-06-10T16:07:18-07:00\""
                "update_time = 1560208038000"

            * create_time: `=`, `>`, `<`, `>=`, `<=`

              Usage: This should be milliseconds since epoch or an RFC3339 string.
              Examples:
                "create_time = \"2019-06-10T16:07:18-07:00\""
                "create_time = 1560208038000"

            * iam_policy.policy_blob: `=`, `:`

            * resource_properties: `=`, `:`, `>`, `<`, `>=`, `<=`

            * security_marks.marks: `=`, `:`

            * security_center_properties.resource_name: `=`, `:`

            * security_center_properties.resource_type: `=`, `:`

            * security_center_properties.resource_parent: `=`, `:`

            * security_center_properties.resource_project: `=`, `:`

            * security_center_properties.resource_owners: `=`, `:`


            For example, `resource_properties.size = 100` is a valid filter string.
          type: string
        groupBy:
          description: >-
            Required. Expression that defines what assets fields to use for
            grouping. The string

            value should follow SQL syntax: comma separated list of fields. For

            example:

            "security_center_properties.resource_project,security_center_properties.project".


            The following fields are supported when compare_duration is not set:


            * security_center_properties.resource_project

            * security_center_properties.resource_type

            * security_center_properties.resource_parent


            The following fields are supported when compare_duration is set:


            * security_center_properties.resource_type
          type: string
        pageSize:
          description: >-
            The maximum number of results to return in a single response.
            Default is

            10, minimum is 1, maximum is 1000.
          format: int32
          type: integer
        pageToken:
          description: >-
            The value returned by the last `GroupAssetsResponse`; indicates

            that this is a continuation of a prior `GroupAssets` call, and that the

            system should return the next page of data.
          type: string
        readTime:
          description: >-
            Time used as a reference point when filtering assets. The filter is
            limited

            to assets existing at the supplied time and their values are those at that

            specific time. Absence of this field will default to the API's version of

            NOW.
          format: google-datetime
          type: string
      type: object
    GroupAssetsResponse:
      description: Response message for grouping by assets.
      properties:
        groupByResults:
          description: >-
            Group results. There exists an element for each existing unique

            combination of property/values. The element contains a count for the number

            of times those specific property/values appear.
          items:
            $ref: "#/components/schemas/GroupResult"
          type: array
        nextPageToken:
          description: >-
            Token to retrieve the next page of results, or empty if there are no
            more

            results.
          type: string
        readTime:
          description: Time used for executing the groupBy request.
          format: google-datetime
          type: string
        totalSize:
          description: The total number of results matching the query.
          format: int32
          type: integer
      type: object
    GroupFindingsRequest:
      description: Request message for grouping by findings.
      properties:
        compareDuration:
          description: >-
            When compare_duration is set, the GroupResult's "state_change"
            attribute is

            updated to indicate whether the finding had its state changed, the

            finding's state remained unchanged, or if the finding was added during the

            compare_duration period of time that precedes the read_time. This is the

            time between (read_time - compare_duration) and read_time.


            The state_change value is derived based on the presence and state of the

            finding at the two points in time. Intermediate state changes between the

            two times don't affect the result. For example, the results aren't affected

            if the finding is made inactive and then active again.


            Possible "state_change" values when compare_duration is specified:


            * "CHANGED":   indicates that the finding was present at the start of
                             compare_duration, but changed its state at read_time.
            * "UNCHANGED": indicates that the finding was present at the start of
                             compare_duration and did not change state at read_time.
            * "ADDED":     indicates that the finding was not present at the start
                             of compare_duration, but was present at read_time.

            If compare_duration is not specified, then the only possible state_change

            is "UNUSED",  which will be the state_change set for all findings present

            at read_time.


            If this field is set then `state_change` must be a specified field in

            `group_by`.
          format: google-duration
          type: string
        filter:
          description: >-
            Expression that defines the filter to apply across findings.

            The expression is a list of one or more restrictions combined via logical

            operators `AND` and `OR`.

            Parentheses are supported, and `OR` has higher precedence than `AND`.


            Restrictions have the form `<field> <operator> <value>` and may have a `-`

            character in front of them to indicate negation. Examples include:

             * name
             * source_properties.a_property
             * security_marks.marks.marka

            The supported operators are:


            * `=` for all value types.

            * `>`, `<`, `>=`, `<=` for integer values.

            * `:`, meaning substring matching, for strings.


            The supported value types are:


            * string literals in quotes.

            * integer literals without quotes.

            * boolean literals `true` and `false` without quotes.


            The following field and operator combinations are supported:


            * name: `=`

            * parent: `=`, `:`

            * resource_name: `=`, `:`

            * state: `=`, `:`

            * category: `=`, `:`

            * external_uri: `=`, `:`

            * event_time: `=`, `>`, `<`, `>=`, `<=`

              Usage: This should be milliseconds since epoch or an RFC3339 string.
              Examples:
                "event_time = \"2019-06-10T16:07:18-07:00\""
                "event_time = 1560208038000"

            * security_marks.marks: `=`, `:`

            * source_properties: `=`, `:`, `>`, `<`, `>=`, `<=`


            For example, `source_properties.size = 100` is a valid filter string.
          type: string
        groupBy:
          description: >-
            Required. Expression that defines what assets fields to use for
            grouping (including

            `state_change`). The string value should follow SQL syntax: comma separated

            list of fields. For example: "parent,resource_name".


            The following fields are supported:


            * resource_name

            * category

            * state

            * parent


            The following fields are supported when compare_duration is set:


            * state_change
          type: string
        pageSize:
          description: >-
            The maximum number of results to return in a single response.
            Default is

            10, minimum is 1, maximum is 1000.
          format: int32
          type: integer
        pageToken:
          description: |-
            The value returned by the last `GroupFindingsResponse`; indicates
            that this is a continuation of a prior `GroupFindings` call, and
            that the system should return the next page of data.
          type: string
        readTime:
          description: >-
            Time used as a reference point when filtering findings. The filter
            is

            limited to findings existing at the supplied time and their values are

            those at that specific time. Absence of this field will default to the

            API's version of NOW.
          format: google-datetime
          type: string
      type: object
    GroupFindingsResponse:
      description: Response message for group by findings.
      properties:
        groupByResults:
          description: >-
            Group results. There exists an element for each existing unique

            combination of property/values. The element contains a count for the number

            of times those specific property/values appear.
          items:
            $ref: "#/components/schemas/GroupResult"
          type: array
        nextPageToken:
          description: >-
            Token to retrieve the next page of results, or empty if there are no
            more

            results.
          type: string
        readTime:
          description: Time used for executing the groupBy request.
          format: google-datetime
          type: string
        totalSize:
          description: The total number of results matching the query.
          format: int32
          type: integer
      type: object
    GroupResult:
      description: Result containing the properties and count of a groupBy request.
      properties:
        count:
          description: Total count of resources for the given properties.
          format: int64
          type: string
        properties:
          additionalProperties: {}
          description: Properties matching the groupBy fields in the request.
          type: object
      type: object
    IamPolicy:
      description: |-
        IAM Policy information associated with the GCP resource described by the
        Cloud SCC asset. This information is managed and defined by the GCP
        resource and cannot be modified by the user.
      properties:
        policyBlob:
          description: |-
            The JSON representation of the Policy associated with the asset.
            See https://cloud.google.com/iam/reference/rest/v1/Policy for format
            details.
          type: string
      type: object
    ListAssetsResponse:
      description: Response message for listing assets.
      properties:
        listAssetsResults:
          description: Assets matching the list request.
          items:
            $ref: "#/components/schemas/ListAssetsResult"
          type: array
        nextPageToken:
          description: >-
            Token to retrieve the next page of results, or empty if there are no
            more

            results.
          type: string
        readTime:
          description: Time used for executing the list request.
          format: google-datetime
          type: string
        totalSize:
          description: The total number of assets matching the query.
          format: int32
          type: integer
      type: object
    ListAssetsResult:
      description: Result containing the Asset and its State.
      properties:
        asset:
          $ref: "#/components/schemas/Asset"
        stateChange:
          description: State change of the asset between the points in time.
          enum:
            - UNUSED
            - ADDED
            - REMOVED
            - ACTIVE
          type: string
      type: object
    ListFindingsResponse:
      description: Response message for listing findings.
      properties:
        listFindingsResults:
          description: Findings matching the list request.
          items:
            $ref: "#/components/schemas/ListFindingsResult"
          type: array
        nextPageToken:
          description: >-
            Token to retrieve the next page of results, or empty if there are no
            more

            results.
          type: string
        readTime:
          description: Time used for executing the list request.
          format: google-datetime
          type: string
        totalSize:
          description: The total number of findings matching the query.
          format: int32
          type: integer
      type: object
    ListFindingsResult:
      description: Result containing the Finding and its StateChange.
      properties:
        finding:
          $ref: "#/components/schemas/Finding"
        stateChange:
          description: State change of the finding between the points in time.
          enum:
            - UNUSED
            - CHANGED
            - UNCHANGED
            - ADDED
            - REMOVED
          type: string
      type: object
    ListOperationsResponse:
      description: The response message for Operations.ListOperations.
      properties:
        nextPageToken:
          description: The standard List next-page token.
          type: string
        operations:
          description: A list of operations that matches the specified filter in the
            request.
          items:
            $ref: "#/components/schemas/Operation"
          type: array
      type: object
    ListSourcesResponse:
      description: Response message for listing sources.
      properties:
        nextPageToken:
          description: >-
            Token to retrieve the next page of results, or empty if there are no
            more

            results.
          type: string
        sources:
          description: Sources belonging to the requested parent.
          items:
            $ref: "#/components/schemas/Source"
          type: array
      type: object
    Operation:
      description: >-
        This resource represents a long-running operation that is the result of
        a

        network API call.
      properties:
        done:
          description: >-
            If the value is `false`, it means the operation is still in
            progress.

            If `true`, the operation is completed, and either `error` or `response` is

            available.
          type: boolean
        error:
          $ref: "#/components/schemas/Status"
        metadata:
          additionalProperties:
            description: Properties of the object. Contains field @type with type URL.
          description: >-
            Service-specific metadata associated with the operation.  It
            typically

            contains progress information and common metadata such as create time.

            Some services might not provide such metadata.  Any method that returns a

            long-running operation should document the metadata type, if any.
          type: object
        name:
          description: >-
            The server-assigned name, which is only unique within the same
            service that

            originally returns it. If you use the default HTTP mapping, the

            `name` should be a resource name ending with `operations/{unique_id}`.
          type: string
        response:
          additionalProperties:
            description: Properties of the object. Contains field @type with type URL.
          description: >-
            The normal response of the operation in case of success.  If the
            original

            method returns no data on success, such as `Delete`, the response is

            `google.protobuf.Empty`.  If the original method is standard

            `Get`/`Create`/`Update`, the response should be the resource.  For other

            methods, the response should have the type `XxxResponse`, where `Xxx`

            is the original method name.  For example, if the original method name

            is `TakeSnapshot()`, the inferred response type is

            `TakeSnapshotResponse`.
          type: object
      type: object
    OrganizationSettings:
      description: |-
        User specified settings that are attached to the Cloud Security Command
        Center (Cloud SCC) organization.
      properties:
        assetDiscoveryConfig:
          $ref: "#/components/schemas/AssetDiscoveryConfig"
        enableAssetDiscovery:
          description: >-
            A flag that indicates if Asset Discovery should be enabled. If the
            flag is

            set to `true`, then discovery of assets will occur. If it is set to `false,

            all historical assets will remain, but discovery of future assets will not

            occur.
          type: boolean
        name:
          description: >-
            The relative resource name of the settings. See:

            https://cloud.google.com/apis/design/resource_names#relative_resource_name

            Example:

            "organizations/123/organizationSettings".
          type: string
      type: object
    Policy:
      description: >-
        Defines an Identity and Access Management (IAM) policy. It is used to

        specify access control policies for Cloud Platform resources.



        A `Policy` is a collection of `bindings`. A `binding` binds one or more

        `members` to a single `role`. Members can be user accounts, service accounts,

        Google groups, and domains (such as G Suite). A `role` is a named list of

        permissions (defined by IAM or configured by users). A `binding` can

        optionally specify a `condition`, which is a logic expression that further

        constrains the role binding based on attributes about the request and/or

        target resource.


        **JSON Example**

            {
              "bindings": [
                {
                  "role": "role/resourcemanager.organizationAdmin",
                  "members": [
                    "user:mike@example.com",
                    "group:admins@example.com",
                    "domain:google.com",
                    "serviceAccount:my-project-id@appspot.gserviceaccount.com"
                  ]
                },
                {
                  "role": "roles/resourcemanager.organizationViewer",
                  "members": ["user:eve@example.com"],
                  "condition": {
                    "title": "expirable access",
                    "description": "Does not grant access after Sep 2020",
                    "expression": "request.time <
                    timestamp('2020-10-01T00:00:00.000Z')",
                  }
                }
              ]
            }

        **YAML Example**

            bindings:
            - members:
              - user:mike@example.com
              - group:admins@example.com
              - domain:google.com
              - serviceAccount:my-project-id@appspot.gserviceaccount.com
              role: roles/resourcemanager.organizationAdmin
            - members:
              - user:eve@example.com
              role: roles/resourcemanager.organizationViewer
              condition:
                title: expirable access
                description: Does not grant access after Sep 2020
                expression: request.time < timestamp('2020-10-01T00:00:00.000Z')

        For a description of IAM and its features, see the

        [IAM developer's guide](https://cloud.google.com/iam/docs).
      properties:
        auditConfigs:
          description: Specifies cloud audit logging configuration for this policy.
          items:
            $ref: "#/components/schemas/AuditConfig"
          type: array
        bindings:
          description: |-
            Associates a list of `members` to a `role`. Optionally may specify a
            `condition` that determines when binding is in effect.
            `bindings` with no members will result in an error.
          items:
            $ref: "#/components/schemas/Binding"
          type: array
        etag:
          description: >-
            `etag` is used for optimistic concurrency control as a way to help

            prevent simultaneous updates of a policy from overwriting each other.

            It is strongly suggested that systems make use of the `etag` in the

            read-modify-write cycle to perform policy updates in order to avoid race

            conditions: An `etag` is returned in the response to `getIamPolicy`, and

            systems are expected to put that etag in the request to `setIamPolicy` to

            ensure that their change will be applied to the same version of the policy.


            If no `etag` is provided in the call to `setIamPolicy`, then the existing

            policy is overwritten. Due to blind-set semantics of an etag-less policy,

            'setIamPolicy' will not fail even if either of incoming or stored policy

            does not meet the version requirements.
          format: byte
          type: string
        version:
          description: >-
            Specifies the format of the policy.


            Valid values are 0, 1, and 3. Requests specifying an invalid value will be

            rejected.


            Operations affecting conditional bindings must specify version 3. This can

            be either setting a conditional policy, modifying a conditional binding,

            or removing a conditional binding from the stored conditional policy.

            Operations on non-conditional policies may specify any valid value or

            leave the field unset.


            If no etag is provided in the call to `setIamPolicy`, any version

            compliance checks on the incoming and/or stored policy is skipped.
          format: int32
          type: integer
      type: object
    RunAssetDiscoveryRequest:
      description: Request message for running asset discovery for an organization.
      properties: {}
      type: object
    SecurityCenterProperties:
      description: >-
        Cloud SCC managed properties. These properties are managed by Cloud SCC
        and

        cannot be modified by the user.
      properties:
        resourceName:
          description: >-
            The full resource name of the GCP resource this asset

            represents. This field is immutable after create time. See:

            https://cloud.google.com/apis/design/resource_names#full_resource_name
          type: string
        resourceOwners:
          description: Owners of the Google Cloud resource.
          items:
            type: string
          type: array
        resourceParent:
          description: >-
            The full resource name of the immediate parent of the resource. See:

            https://cloud.google.com/apis/design/resource_names#full_resource_name
          type: string
        resourceProject:
          description: >-
            The full resource name of the project the resource belongs to. See:

            https://cloud.google.com/apis/design/resource_names#full_resource_name
          type: string
        resourceType:
          description: >-
            The type of the GCP resource. Examples include: APPLICATION,

            PROJECT, and ORGANIZATION. This is a case insensitive field defined by

            Cloud SCC and/or the producer of the resource and is immutable

            after create time.
          type: string
      type: object
    SecurityMarks:
      description: >-
        User specified security marks that are attached to the parent Cloud
        Security

        Command Center (Cloud SCC) resource. Security marks are scoped within a Cloud

        SCC organization -- they can be modified and viewed by all users who have

        proper permissions on the organization.
      properties:
        marks:
          additionalProperties:
            type: string
          description: >-
            Mutable user specified security marks belonging to the parent
            resource.

            Constraints are as follows:
              - Keys and values are treated as case insensitive
              - Keys must be between 1 - 256 characters (inclusive)
              - Keys must be letters, numbers, underscores, or dashes
              - Values have leading and trailing whitespace trimmed, remaining
                characters must be between 1 - 4096 characters (inclusive)
          type: object
        name:
          description: >-
            The relative resource name of the SecurityMarks. See:

            https://cloud.google.com/apis/design/resource_names#relative_resource_name

            Examples:

            "organizations/123/assets/456/securityMarks"

            "organizations/123/sources/456/findings/789/securityMarks".
          type: string
      type: object
    SetFindingStateRequest:
      description: Request message for updating a finding's state.
      properties:
        startTime:
          description: Required. The time at which the updated state takes effect.
          format: google-datetime
          type: string
        state:
          description: Required. The desired State of the finding.
          enum:
            - STATE_UNSPECIFIED
            - ACTIVE
            - INACTIVE
          type: string
      type: object
    SetIamPolicyRequest:
      description: Request message for `SetIamPolicy` method.
      properties:
        policy:
          $ref: "#/components/schemas/Policy"
        updateMask:
          description: >-
            OPTIONAL: A FieldMask specifying which fields of the policy to
            modify. Only

            the fields in the mask will be modified. If no mask is provided, the

            following default mask is used:

            paths: "bindings, etag"

            This field is only used by Cloud IAM.
          format: google-fieldmask
          type: string
      type: object
    Source:
      description: >-
        Cloud Security Command Center's (Cloud SCC) finding source. A finding
        source

        is an entity or a mechanism that can produce a finding. A source is like a

        container of findings that come from the same scanner, logger, monitor, etc.
      properties:
        description:
          description: >-
            The description of the source (max of 1024 characters).

            Example:

            "Cloud Security Scanner is a web security scanner for common

            vulnerabilities in App Engine applications. It can automatically

            scan and detect four common vulnerabilities, including cross-site-scripting

            (XSS), Flash injection, mixed content (HTTP in HTTPS), and

            outdated/insecure libraries."
          type: string
        displayName:
          description: >-
            The source's display name.

            A source's display name must be unique amongst its siblings, for example,

            two sources with the same parent can't share the same display name.

            The display name must have a length between 1 and 64 characters

            (inclusive).
          type: string
        name:
          description: >-
            The relative resource name of this source. See:

            https://cloud.google.com/apis/design/resource_names#relative_resource_name

            Example:

            "organizations/123/sources/456"
          type: string
      type: object
    Status:
      description: >-
        The `Status` type defines a logical error model that is suitable for

        different programming environments, including REST APIs and RPC APIs. It is

        used by [gRPC](https://github.com/grpc). Each `Status` message contains

        three pieces of data: error code, error message, and error details.


        You can find out more about this error model and how to work with it in the

        [API Design Guide](https://cloud.google.com/apis/design/errors).
      properties:
        code:
          description: The status code, which should be an enum value of google.rpc.Code.
          format: int32
          type: integer
        details:
          description: >-
            A list of messages that carry the error details.  There is a common
            set of

            message types for APIs to use.
          items:
            additionalProperties:
              description: Properties of the object. Contains field @type with type URL.
            type: object
          type: array
        message:
          description: |-
            A developer-facing error message, which should be in English. Any
            user-facing error message should be localized and sent in the
            google.rpc.Status.details field, or localized by the client.
          type: string
      type: object
    TestIamPermissionsRequest:
      description: Request message for `TestIamPermissions` method.
      properties:
        permissions:
          description: >-
            The set of permissions to check for the `resource`. Permissions with

            wildcards (such as '*' or 'storage.*') are not allowed. For more

            information see

            [IAM Overview](https://cloud.google.com/iam/docs/overview#permissions).
          items:
            type: string
          type: array
      type: object
    TestIamPermissionsResponse:
      description: Response message for `TestIamPermissions` method.
      properties:
        permissions:
          description: |-
            A subset of `TestPermissionsRequest.permissions` that the caller is
            allowed.
          items:
            type: string
          type: array
      type: object
