openapi: 3.0.0
info:
  contact:
    name: Google
    url: https://google.com
  description: >
    Manages keys and performs cryptographic operations in a central cloud
    service, for direct use by other cloud resources and applications.
  license:
    name: Creative Commons Attribution 3.0
    url: http://creativecommons.org/licenses/by/3.0/
  termsOfService: https://developers.google.com/terms/
  title: Cloud Key Management Service (KMS)
  version: v1
  x-apiClientRegistration:
    url: https://console.developers.google.com
  x-apisguru-categories:
    - security
  x-logo:
    url: https://www.google.com/images/branding/googlelogo/2x/googlelogo_color_272x92dp.png
  x-origin:
    - converter:
        url: https://github.com/lucybot/api-spec-converter
        version: 2.7.31
      format: google
      url: https://cloudkms.googleapis.com/$discovery/rest?version=v1
      version: v1
  x-preferred: true
  x-providerName: googleapis.com
  x-serviceName: cloudkms
externalDocs:
  url: https://cloud.google.com/kms/
tags:
  - name: projects
paths:
  "/v1/{name}":
    get:
      description: Returns metadata for a given ImportJob.
      operationId: cloudkms.projects.locations.keyRings.importJobs.get
      parameters:
        - description: The name of the ImportJob to get.
          in: path
          name: name
          required: true
          x-reservedExpansion: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ImportJob"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloudkms
          Oauth2c:
            - https://www.googleapis.com/auth/cloudkms
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/upload_protocol"
    patch:
      description: |-
        Update a CryptoKeyVersion's metadata.

        state may be changed between
        ENABLED and
        DISABLED using this
        method. See DestroyCryptoKeyVersion and RestoreCryptoKeyVersion to
        move between other states.
      operationId: cloudkms.projects.locations.keyRings.cryptoKeys.cryptoKeyVersions.patch
      parameters:
        - description: >-
            Output only. The resource name for this CryptoKeyVersion in the
            format

            `projects/*/locations/*/keyRings/*/cryptoKeys/*/cryptoKeyVersions/*`.
          in: path
          name: name
          required: true
          x-reservedExpansion: true
          schema:
            type: string
        - description: Required list of fields to be updated in this request.
          in: query
          name: updateMask
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/CryptoKeyVersion"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/CryptoKeyVersion"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloudkms
          Oauth2c:
            - https://www.googleapis.com/auth/cloudkms
      tags:
        - projects
  "/v1/{name}/locations":
    get:
      description: Lists information about the supported locations for this service.
      operationId: cloudkms.projects.locations.list
      parameters:
        - description: The standard list filter.
          in: query
          name: filter
          schema:
            type: string
        - description: The resource that owns the locations collection, if applicable.
          in: path
          name: name
          required: true
          x-reservedExpansion: true
          schema:
            type: string
        - description: The standard list page size.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: The standard list page token.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ListLocationsResponse"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloudkms
          Oauth2c:
            - https://www.googleapis.com/auth/cloudkms
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/upload_protocol"
  "/v1/{name}/publicKey":
    get:
      description: |-
        Returns the public key for the given CryptoKeyVersion. The
        CryptoKey.purpose must be
        ASYMMETRIC_SIGN or
        ASYMMETRIC_DECRYPT.
      operationId: cloudkms.projects.locations.keyRings.cryptoKeys.cryptoKeyVersions.getPublicKey
      parameters:
        - description: |-
            The name of the CryptoKeyVersion public key to
            get.
          in: path
          name: name
          required: true
          x-reservedExpansion: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/PublicKey"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloudkms
          Oauth2c:
            - https://www.googleapis.com/auth/cloudkms
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/upload_protocol"
  "/v1/{name}:asymmetricDecrypt":
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/upload_protocol"
    post:
      description: |-
        Decrypts data that was encrypted with a public key retrieved from
        GetPublicKey corresponding to a CryptoKeyVersion with
        CryptoKey.purpose ASYMMETRIC_DECRYPT.
      operationId: cloudkms.projects.locations.keyRings.cryptoKeys.cryptoKeyVersions.asymmetricDecrypt
      parameters:
        - description: |-
            Required. The resource name of the CryptoKeyVersion to use for
            decryption.
          in: path
          name: name
          required: true
          x-reservedExpansion: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AsymmetricDecryptRequest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/AsymmetricDecryptResponse"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloudkms
          Oauth2c:
            - https://www.googleapis.com/auth/cloudkms
      tags:
        - projects
  "/v1/{name}:asymmetricSign":
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/upload_protocol"
    post:
      description: >-
        Signs data using a CryptoKeyVersion with CryptoKey.purpose

        ASYMMETRIC_SIGN, producing a signature that can be verified with the public

        key retrieved from GetPublicKey.
      operationId: cloudkms.projects.locations.keyRings.cryptoKeys.cryptoKeyVersions.asymmetricSign
      parameters:
        - description: Required. The resource name of the CryptoKeyVersion to use for
            signing.
          in: path
          name: name
          required: true
          x-reservedExpansion: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AsymmetricSignRequest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/AsymmetricSignResponse"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloudkms
          Oauth2c:
            - https://www.googleapis.com/auth/cloudkms
      tags:
        - projects
  "/v1/{name}:decrypt":
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/upload_protocol"
    post:
      description: |-
        Decrypts data that was protected by Encrypt. The CryptoKey.purpose
        must be ENCRYPT_DECRYPT.
      operationId: cloudkms.projects.locations.keyRings.cryptoKeys.decrypt
      parameters:
        - description: |-
            Required. The resource name of the CryptoKey to use for decryption.
            The server will choose the appropriate version.
          in: path
          name: name
          required: true
          x-reservedExpansion: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DecryptRequest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/DecryptResponse"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloudkms
          Oauth2c:
            - https://www.googleapis.com/auth/cloudkms
      tags:
        - projects
  "/v1/{name}:destroy":
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/upload_protocol"
    post:
      description: |-
        Schedule a CryptoKeyVersion for destruction.

        Upon calling this method, CryptoKeyVersion.state will be set to
        DESTROY_SCHEDULED
        and destroy_time will be set to a time 24
        hours in the future, at which point the state
        will be changed to
        DESTROYED, and the key
        material will be irrevocably destroyed.

        Before the destroy_time is reached,
        RestoreCryptoKeyVersion may be called to reverse the process.
      operationId: cloudkms.projects.locations.keyRings.cryptoKeys.cryptoKeyVersions.destroy
      parameters:
        - description: The resource name of the CryptoKeyVersion to destroy.
          in: path
          name: name
          required: true
          x-reservedExpansion: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DestroyCryptoKeyVersionRequest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/CryptoKeyVersion"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloudkms
          Oauth2c:
            - https://www.googleapis.com/auth/cloudkms
      tags:
        - projects
  "/v1/{name}:encrypt":
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/upload_protocol"
    post:
      description: |-
        Encrypts data, so that it can only be recovered by a call to Decrypt.
        The CryptoKey.purpose must be
        ENCRYPT_DECRYPT.
      operationId: cloudkms.projects.locations.keyRings.cryptoKeys.encrypt
      parameters:
        - description: |-
            Required. The resource name of the CryptoKey or CryptoKeyVersion
            to use for encryption.

            If a CryptoKey is specified, the server will use its
            primary version.
          in: path
          name: name
          required: true
          x-reservedExpansion: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EncryptRequest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/EncryptResponse"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloudkms
          Oauth2c:
            - https://www.googleapis.com/auth/cloudkms
      tags:
        - projects
  "/v1/{name}:restore":
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/upload_protocol"
    post:
      description: |-
        Restore a CryptoKeyVersion in the
        DESTROY_SCHEDULED
        state.

        Upon restoration of the CryptoKeyVersion, state
        will be set to DISABLED,
        and destroy_time will be cleared.
      operationId: cloudkms.projects.locations.keyRings.cryptoKeys.cryptoKeyVersions.restore
      parameters:
        - description: The resource name of the CryptoKeyVersion to restore.
          in: path
          name: name
          required: true
          x-reservedExpansion: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RestoreCryptoKeyVersionRequest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/CryptoKeyVersion"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloudkms
          Oauth2c:
            - https://www.googleapis.com/auth/cloudkms
      tags:
        - projects
  "/v1/{name}:updatePrimaryVersion":
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/upload_protocol"
    post:
      description: |-
        Update the version of a CryptoKey that will be used in Encrypt.

        Returns an error if called on an asymmetric key.
      operationId: cloudkms.projects.locations.keyRings.cryptoKeys.updatePrimaryVersion
      parameters:
        - description: The resource name of the CryptoKey to update.
          in: path
          name: name
          required: true
          x-reservedExpansion: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateCryptoKeyPrimaryVersionRequest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/CryptoKey"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloudkms
          Oauth2c:
            - https://www.googleapis.com/auth/cloudkms
      tags:
        - projects
  "/v1/{parent}/cryptoKeyVersions":
    get:
      description: Lists CryptoKeyVersions.
      operationId: cloudkms.projects.locations.keyRings.cryptoKeys.cryptoKeyVersions.list
      parameters:
        - description: >-
            Optional. Only include resources that match the filter in the
            response. For

            more information, see

            [Sorting and filtering list

            results](https://cloud.google.com/kms/docs/sorting-and-filtering).
          in: query
          name: filter
          schema:
            type: string
        - description: >-
            Optional. Specify how the results should be sorted. If not
            specified, the

            results will be sorted in the default order. For more information, see

            [Sorting and filtering list

            results](https://cloud.google.com/kms/docs/sorting-and-filtering).
          in: query
          name: orderBy
          schema:
            type: string
        - description: >-
            Optional limit on the number of CryptoKeyVersions to

            include in the response. Further CryptoKeyVersions can

            subsequently be obtained by including the

            ListCryptoKeyVersionsResponse.next_page_token in a subsequent request.

            If unspecified, the server will pick an appropriate default.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: |-
            Optional pagination token, returned earlier via
            ListCryptoKeyVersionsResponse.next_page_token.
          in: query
          name: pageToken
          schema:
            type: string
        - description: |-
            Required. The resource name of the CryptoKey to list, in the format
            `projects/*/locations/*/keyRings/*/cryptoKeys/*`.
          in: path
          name: parent
          required: true
          x-reservedExpansion: true
          schema:
            type: string
        - description: The fields to include in the response.
          in: query
          name: view
          schema:
            type: string
            enum:
              - CRYPTO_KEY_VERSION_VIEW_UNSPECIFIED
              - FULL
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ListCryptoKeyVersionsResponse"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloudkms
          Oauth2c:
            - https://www.googleapis.com/auth/cloudkms
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/upload_protocol"
    post:
      description: |-
        Create a new CryptoKeyVersion in a CryptoKey.

        The server will assign the next sequential id. If unset,
        state will be set to
        ENABLED.
      operationId: cloudkms.projects.locations.keyRings.cryptoKeys.cryptoKeyVersions.create
      parameters:
        - description: |-
            Required. The name of the CryptoKey associated with
            the CryptoKeyVersions.
          in: path
          name: parent
          required: true
          x-reservedExpansion: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/CryptoKeyVersion"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/CryptoKeyVersion"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloudkms
          Oauth2c:
            - https://www.googleapis.com/auth/cloudkms
      tags:
        - projects
  "/v1/{parent}/cryptoKeyVersions:import":
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/upload_protocol"
    post:
      description: |-
        Imports a new CryptoKeyVersion into an existing CryptoKey using the
        wrapped key material provided in the request.

        The version ID will be assigned the next sequential id within the
        CryptoKey.
      operationId: cloudkms.projects.locations.keyRings.cryptoKeys.cryptoKeyVersions.import
      parameters:
        - description: |-
            Required. The name of the CryptoKey to
            be imported into.
          in: path
          name: parent
          required: true
          x-reservedExpansion: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ImportCryptoKeyVersionRequest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/CryptoKeyVersion"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloudkms
          Oauth2c:
            - https://www.googleapis.com/auth/cloudkms
      tags:
        - projects
  "/v1/{parent}/cryptoKeys":
    get:
      description: Lists CryptoKeys.
      operationId: cloudkms.projects.locations.keyRings.cryptoKeys.list
      parameters:
        - description: >-
            Optional. Only include resources that match the filter in the
            response. For

            more information, see

            [Sorting and filtering list

            results](https://cloud.google.com/kms/docs/sorting-and-filtering).
          in: query
          name: filter
          schema:
            type: string
        - description: >-
            Optional. Specify how the results should be sorted. If not
            specified, the

            results will be sorted in the default order. For more information, see

            [Sorting and filtering list

            results](https://cloud.google.com/kms/docs/sorting-and-filtering).
          in: query
          name: orderBy
          schema:
            type: string
        - description: >-
            Optional limit on the number of CryptoKeys to include in the

            response.  Further CryptoKeys can subsequently be obtained by

            including the ListCryptoKeysResponse.next_page_token in a subsequent

            request.  If unspecified, the server will pick an appropriate default.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: |-
            Optional pagination token, returned earlier via
            ListCryptoKeysResponse.next_page_token.
          in: query
          name: pageToken
          schema:
            type: string
        - description: |-
            Required. The resource name of the KeyRing to list, in the format
            `projects/*/locations/*/keyRings/*`.
          in: path
          name: parent
          required: true
          x-reservedExpansion: true
          schema:
            type: string
        - description: The fields of the primary version to include in the response.
          in: query
          name: versionView
          schema:
            type: string
            enum:
              - CRYPTO_KEY_VERSION_VIEW_UNSPECIFIED
              - FULL
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ListCryptoKeysResponse"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloudkms
          Oauth2c:
            - https://www.googleapis.com/auth/cloudkms
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/upload_protocol"
    post:
      description: |-
        Create a new CryptoKey within a KeyRing.

        CryptoKey.purpose and
        CryptoKey.version_template.algorithm
        are required.
      operationId: cloudkms.projects.locations.keyRings.cryptoKeys.create
      parameters:
        - description: |-
            Required. It must be unique within a KeyRing and match the regular
            expression `[a-zA-Z0-9_-]{1,63}`
          in: query
          name: cryptoKeyId
          schema:
            type: string
        - description: |-
            Required. The name of the KeyRing associated with the
            CryptoKeys.
          in: path
          name: parent
          required: true
          x-reservedExpansion: true
          schema:
            type: string
        - description: |-
            If set to true, the request will create a CryptoKey without any
            CryptoKeyVersions. You must manually call
            CreateCryptoKeyVersion or
            ImportCryptoKeyVersion
            before you can use this CryptoKey.
          in: query
          name: skipInitialVersionCreation
          schema:
            type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CryptoKey"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/CryptoKey"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloudkms
          Oauth2c:
            - https://www.googleapis.com/auth/cloudkms
      tags:
        - projects
  "/v1/{parent}/importJobs":
    get:
      description: Lists ImportJobs.
      operationId: cloudkms.projects.locations.keyRings.importJobs.list
      parameters:
        - description: >-
            Optional. Only include resources that match the filter in the
            response. For

            more information, see

            [Sorting and filtering list

            results](https://cloud.google.com/kms/docs/sorting-and-filtering).
          in: query
          name: filter
          schema:
            type: string
        - description: >-
            Optional. Specify how the results should be sorted. If not
            specified, the

            results will be sorted in the default order. For more information, see

            [Sorting and filtering list

            results](https://cloud.google.com/kms/docs/sorting-and-filtering).
          in: query
          name: orderBy
          schema:
            type: string
        - description: >-
            Optional limit on the number of ImportJobs to include in the

            response. Further ImportJobs can subsequently be obtained by

            including the ListImportJobsResponse.next_page_token in a subsequent

            request. If unspecified, the server will pick an appropriate default.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: |-
            Optional pagination token, returned earlier via
            ListImportJobsResponse.next_page_token.
          in: query
          name: pageToken
          schema:
            type: string
        - description: |-
            Required. The resource name of the KeyRing to list, in the format
            `projects/*/locations/*/keyRings/*`.
          in: path
          name: parent
          required: true
          x-reservedExpansion: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ListImportJobsResponse"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloudkms
          Oauth2c:
            - https://www.googleapis.com/auth/cloudkms
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/upload_protocol"
    post:
      description: |-
        Create a new ImportJob within a KeyRing.

        ImportJob.import_method is required.
      operationId: cloudkms.projects.locations.keyRings.importJobs.create
      parameters:
        - description: |-
            Required. It must be unique within a KeyRing and match the regular
            expression `[a-zA-Z0-9_-]{1,63}`
          in: query
          name: importJobId
          schema:
            type: string
        - description: |-
            Required. The name of the KeyRing associated with the
            ImportJobs.
          in: path
          name: parent
          required: true
          x-reservedExpansion: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ImportJob"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ImportJob"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloudkms
          Oauth2c:
            - https://www.googleapis.com/auth/cloudkms
      tags:
        - projects
  "/v1/{parent}/keyRings":
    get:
      description: Lists KeyRings.
      operationId: cloudkms.projects.locations.keyRings.list
      parameters:
        - description: >-
            Optional. Only include resources that match the filter in the
            response. For

            more information, see

            [Sorting and filtering list

            results](https://cloud.google.com/kms/docs/sorting-and-filtering).
          in: query
          name: filter
          schema:
            type: string
        - description: >-
            Optional. Specify how the results should be sorted. If not
            specified, the

            results will be sorted in the default order.  For more information, see

            [Sorting and filtering list

            results](https://cloud.google.com/kms/docs/sorting-and-filtering).
          in: query
          name: orderBy
          schema:
            type: string
        - description: >-
            Optional limit on the number of KeyRings to include in the

            response.  Further KeyRings can subsequently be obtained by

            including the ListKeyRingsResponse.next_page_token in a subsequent

            request.  If unspecified, the server will pick an appropriate default.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: |-
            Optional pagination token, returned earlier via
            ListKeyRingsResponse.next_page_token.
          in: query
          name: pageToken
          schema:
            type: string
        - description: |-
            Required. The resource name of the location associated with the
            KeyRings, in the format `projects/*/locations/*`.
          in: path
          name: parent
          required: true
          x-reservedExpansion: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ListKeyRingsResponse"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloudkms
          Oauth2c:
            - https://www.googleapis.com/auth/cloudkms
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/upload_protocol"
    post:
      description: Create a new KeyRing in a given Project and Location.
      operationId: cloudkms.projects.locations.keyRings.create
      parameters:
        - description: |-
            Required. It must be unique within a location and match the regular
            expression `[a-zA-Z0-9_-]{1,63}`
          in: query
          name: keyRingId
          schema:
            type: string
        - description: |-
            Required. The resource name of the location associated with the
            KeyRings, in the format `projects/*/locations/*`.
          in: path
          name: parent
          required: true
          x-reservedExpansion: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/KeyRing"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/KeyRing"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloudkms
          Oauth2c:
            - https://www.googleapis.com/auth/cloudkms
      tags:
        - projects
  "/v1/{resource}:getIamPolicy":
    get:
      description: >-
        Gets the access control policy for a resource.

        Returns an empty policy if the resource exists and does not have a policy

        set.
      operationId: cloudkms.projects.locations.keyRings.importJobs.getIamPolicy
      parameters:
        - description: >-
            Optional. The policy format version to be returned.


            Valid values are 0, 1, and 3. Requests specifying an invalid value will be

            rejected.


            Requests for policies with any conditional bindings must specify version 3.

            Policies without any conditional bindings may specify any valid value or

            leave the field unset.
          in: query
          name: options.requestedPolicyVersion
          schema:
            type: integer
        - description: >-
            REQUIRED: The resource for which the policy is being requested.

            See the operation documentation for the appropriate value for this field.
          in: path
          name: resource
          required: true
          x-reservedExpansion: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Policy"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloudkms
          Oauth2c:
            - https://www.googleapis.com/auth/cloudkms
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/upload_protocol"
  "/v1/{resource}:setIamPolicy":
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/upload_protocol"
    post:
      description: |-
        Sets the access control policy on the specified resource. Replaces any
        existing policy.
      operationId: cloudkms.projects.locations.keyRings.importJobs.setIamPolicy
      parameters:
        - description: >-
            REQUIRED: The resource for which the policy is being specified.

            See the operation documentation for the appropriate value for this field.
          in: path
          name: resource
          required: true
          x-reservedExpansion: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SetIamPolicyRequest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Policy"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloudkms
          Oauth2c:
            - https://www.googleapis.com/auth/cloudkms
      tags:
        - projects
  "/v1/{resource}:testIamPermissions":
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/upload_protocol"
    post:
      description: >-
        Returns permissions that a caller has on the specified resource.

        If the resource does not exist, this will return an empty set of

        permissions, not a NOT_FOUND error.


        Note: This operation is designed to be used for building permission-aware

        UIs and command-line tools, not for authorization checking. This operation

        may "fail open" without warning.
      operationId: cloudkms.projects.locations.keyRings.importJobs.testIamPermissions
      parameters:
        - description: >-
            REQUIRED: The resource for which the policy detail is being
            requested.

            See the operation documentation for the appropriate value for this field.
          in: path
          name: resource
          required: true
          x-reservedExpansion: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TestIamPermissionsRequest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/TestIamPermissionsResponse"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloudkms
          Oauth2c:
            - https://www.googleapis.com/auth/cloudkms
      tags:
        - projects
servers:
  - url: https://cloudkms.googleapis.com/
components:
  parameters:
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
          - media
          - proto
        default: json
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    key:
      description: API key. Your API key identifies your project and provides you with API
        access, quota, and reports. Required unless you provide an OAuth 2.0
        token.
      in: query
      name: key
      schema:
        type: string
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
        default: true
    quotaUser:
      description: Available to use for quota purposes for server-side applications. Can be
        any arbitrary string assigned to a user, but should not exceed 40
        characters.
      in: query
      name: quotaUser
      schema:
        type: string
    uploadType:
      description: Legacy upload protocol for media (e.g. "media", "multipart").
      in: query
      name: uploadType
      schema:
        type: string
    upload_protocol:
      description: Upload protocol for media (e.g. "raw", "multipart").
      in: query
      name: upload_protocol
      schema:
        type: string
    _.xgafv:
      description: V1 error format.
      in: query
      name: $.xgafv
      schema:
        type: string
        enum:
          - "1"
          - "2"
  requestBodies:
    CryptoKeyVersion:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/CryptoKeyVersion"
  securitySchemes:
    Oauth2:
      description: Oauth 2.0 implicit authentication
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes:
            https://www.googleapis.com/auth/cloud-platform: View and manage your data across Google Cloud Platform services
            https://www.googleapis.com/auth/cloudkms: View and manage your keys and secrets stored in Cloud Key
              Management Service
    Oauth2c:
      description: Oauth 2.0 accessCode authentication
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          tokenUrl: https://accounts.google.com/o/oauth2/token
          scopes:
            https://www.googleapis.com/auth/cloud-platform: View and manage your data across Google Cloud Platform services
            https://www.googleapis.com/auth/cloudkms: View and manage your keys and secrets stored in Cloud Key
              Management Service
  schemas:
    AsymmetricDecryptRequest:
      description: Request message for KeyManagementService.AsymmetricDecrypt.
      properties:
        ciphertext:
          description: >-
            Required. The data encrypted with the named CryptoKeyVersion's
            public

            key using OAEP.
          format: byte
          type: string
      type: object
    AsymmetricDecryptResponse:
      description: Response message for KeyManagementService.AsymmetricDecrypt.
      properties:
        plaintext:
          description: The decrypted data originally encrypted with the matching public key.
          format: byte
          type: string
      type: object
    AsymmetricSignRequest:
      description: Request message for KeyManagementService.AsymmetricSign.
      properties:
        digest:
          $ref: "#/components/schemas/Digest"
      type: object
    AsymmetricSignResponse:
      description: Response message for KeyManagementService.AsymmetricSign.
      properties:
        signature:
          description: The created signature.
          format: byte
          type: string
      type: object
    AuditConfig:
      description: >-
        Specifies the audit configuration for a service.

        The configuration determines which permission types are logged, and what

        identities, if any, are exempted from logging.

        An AuditConfig must have one or more AuditLogConfigs.


        If there are AuditConfigs for both `allServices` and a specific service,

        the union of the two AuditConfigs is used for that service: the log_types

        specified in each AuditConfig are enabled, and the exempted_members in each

        AuditLogConfig are exempted.


        Example Policy with multiple AuditConfigs:

            {
              "audit_configs": [
                {
                  "service": "allServices"
                  "audit_log_configs": [
                    {
                      "log_type": "DATA_READ",
                      "exempted_members": [
                        "user:jose@example.com"
                      ]
                    },
                    {
                      "log_type": "DATA_WRITE",
                    },
                    {
                      "log_type": "ADMIN_READ",
                    }
                  ]
                },
                {
                  "service": "sampleservice.googleapis.com"
                  "audit_log_configs": [
                    {
                      "log_type": "DATA_READ",
                    },
                    {
                      "log_type": "DATA_WRITE",
                      "exempted_members": [
                        "user:aliya@example.com"
                      ]
                    }
                  ]
                }
              ]
            }

        For sampleservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ

        logging. It also exempts jose@example.com from DATA_READ logging, and

        aliya@example.com from DATA_WRITE logging.
      properties:
        auditLogConfigs:
          description: The configuration for logging of each type of permission.
          items:
            $ref: "#/components/schemas/AuditLogConfig"
          type: array
        service:
          description: |-
            Specifies a service that will be enabled for audit logging.
            For example, `storage.googleapis.com`, `cloudsql.googleapis.com`.
            `allServices` is a special value that covers all services.
          type: string
      type: object
    AuditLogConfig:
      description: |-
        Provides the configuration for logging a type of permissions.
        Example:

            {
              "audit_log_configs": [
                {
                  "log_type": "DATA_READ",
                  "exempted_members": [
                    "user:jose@example.com"
                  ]
                },
                {
                  "log_type": "DATA_WRITE",
                }
              ]
            }

        This enables 'DATA_READ' and 'DATA_WRITE' logging, while exempting
        jose@example.com from DATA_READ logging.
      properties:
        exemptedMembers:
          description: |-
            Specifies the identities that do not cause logging for this type of
            permission.
            Follows the same format of Binding.members.
          items:
            type: string
          type: array
        logType:
          description: The log type that this config enables.
          enum:
            - LOG_TYPE_UNSPECIFIED
            - ADMIN_READ
            - DATA_WRITE
            - DATA_READ
          type: string
      type: object
    Binding:
      description: Associates `members` with a `role`.
      properties:
        condition:
          $ref: "#/components/schemas/Expr"
        members:
          description: >+
            Specifies the identities requesting access for a Cloud Platform
            resource.

            `members` can have the following values:


            * `allUsers`: A special identifier that represents anyone who is
               on the internet; with or without a Google account.

            * `allAuthenticatedUsers`: A special identifier that represents anyone
               who is authenticated with a Google account or a service account.

            * `user:{emailid}`: An email address that represents a specific Google
               account. For example, `alice@example.com` .


            * `serviceAccount:{emailid}`: An email address that represents a service
               account. For example, `my-other-app@appspot.gserviceaccount.com`.

            * `group:{emailid}`: An email address that represents a Google group.
               For example, `admins@example.com`.


            * `domain:{domain}`: The G Suite domain (primary) that represents all the
               users of that domain. For example, `google.com` or `example.com`.

          items:
            type: string
          type: array
        role:
          description: |-
            Role that is assigned to `members`.
            For example, `roles/viewer`, `roles/editor`, or `roles/owner`.
          type: string
      type: object
    CryptoKey:
      description: |-
        A CryptoKey represents a logical key that can be used for cryptographic
        operations.

        A CryptoKey is made up of one or more versions, which
        represent the actual key material used in cryptographic operations.
      properties:
        createTime:
          description: Output only. The time at which this CryptoKey was created.
          format: google-datetime
          type: string
        labels:
          additionalProperties:
            type: string
          description: |-
            Labels with user-defined metadata. For more information, see
            [Labeling Keys](/kms/docs/labeling-keys).
          type: object
        name:
          description: |-
            Output only. The resource name for this CryptoKey in the format
            `projects/*/locations/*/keyRings/*/cryptoKeys/*`.
          type: string
        nextRotationTime:
          description: >-
            At next_rotation_time, the Key Management Service will
            automatically:


            1. Create a new version of this CryptoKey.

            2. Mark the new version as primary.


            Key rotations performed manually via

            CreateCryptoKeyVersion and

            UpdateCryptoKeyPrimaryVersion

            do not affect next_rotation_time.


            Keys with purpose

            ENCRYPT_DECRYPT support

            automatic rotation. For other keys, this field must be omitted.
          format: google-datetime
          type: string
        primary:
          $ref: "#/components/schemas/CryptoKeyVersion"
        purpose:
          description: The immutable purpose of this CryptoKey.
          enum:
            - CRYPTO_KEY_PURPOSE_UNSPECIFIED
            - ENCRYPT_DECRYPT
            - ASYMMETRIC_SIGN
            - ASYMMETRIC_DECRYPT
          type: string
        rotationPeriod:
          description: |-
            next_rotation_time will be advanced by this period when the service
            automatically rotates a key. Must be at least 24 hours and at most
            876,000 hours.

            If rotation_period is set, next_rotation_time must also be set.

            Keys with purpose
            ENCRYPT_DECRYPT support
            automatic rotation. For other keys, this field must be omitted.
          format: google-duration
          type: string
        versionTemplate:
          $ref: "#/components/schemas/CryptoKeyVersionTemplate"
      type: object
    CryptoKeyVersion:
      description: >-
        A CryptoKeyVersion represents an individual cryptographic key, and the

        associated key material.


        An ENABLED version can be

        used for cryptographic operations.


        For security reasons, the raw cryptographic key material represented by a

        CryptoKeyVersion can never be viewed or exported. It can only be used to

        encrypt, decrypt, or sign data when an authorized user or application invokes

        Cloud KMS.
      properties:
        algorithm:
          description: |-
            Output only. The CryptoKeyVersionAlgorithm that this
            CryptoKeyVersion supports.
          enum:
            - CRYPTO_KEY_VERSION_ALGORITHM_UNSPECIFIED
            - GOOGLE_SYMMETRIC_ENCRYPTION
            - RSA_SIGN_PSS_2048_SHA256
            - RSA_SIGN_PSS_3072_SHA256
            - RSA_SIGN_PSS_4096_SHA256
            - RSA_SIGN_PSS_4096_SHA512
            - RSA_SIGN_PKCS1_2048_SHA256
            - RSA_SIGN_PKCS1_3072_SHA256
            - RSA_SIGN_PKCS1_4096_SHA256
            - RSA_SIGN_PKCS1_4096_SHA512
            - RSA_DECRYPT_OAEP_2048_SHA256
            - RSA_DECRYPT_OAEP_3072_SHA256
            - RSA_DECRYPT_OAEP_4096_SHA256
            - RSA_DECRYPT_OAEP_4096_SHA512
            - EC_SIGN_P256_SHA256
            - EC_SIGN_P384_SHA384
          type: string
        attestation:
          $ref: "#/components/schemas/KeyOperationAttestation"
        createTime:
          description: Output only. The time at which this CryptoKeyVersion was created.
          format: google-datetime
          type: string
        destroyEventTime:
          description: |-
            Output only. The time this CryptoKeyVersion's key material was
            destroyed. Only present if state is
            DESTROYED.
          format: google-datetime
          type: string
        destroyTime:
          description: >-
            Output only. The time this CryptoKeyVersion's key material is
            scheduled

            for destruction. Only present if state is

            DESTROY_SCHEDULED.
          format: google-datetime
          type: string
        generateTime:
          description: |-
            Output only. The time this CryptoKeyVersion's key material was
            generated.
          format: google-datetime
          type: string
        importFailureReason:
          description: |-
            Output only. The root cause of an import failure. Only present if
            state is
            IMPORT_FAILED.
          type: string
        importJob:
          description: |-
            Output only. The name of the ImportJob used to import this
            CryptoKeyVersion. Only present if the underlying key material was
            imported.
          type: string
        importTime:
          description: |-
            Output only. The time at which this CryptoKeyVersion's key material
            was imported.
          format: google-datetime
          type: string
        name:
          description: >-
            Output only. The resource name for this CryptoKeyVersion in the
            format

            `projects/*/locations/*/keyRings/*/cryptoKeys/*/cryptoKeyVersions/*`.
          type: string
        protectionLevel:
          description: >-
            Output only. The ProtectionLevel describing how crypto operations
            are

            performed with this CryptoKeyVersion.
          enum:
            - PROTECTION_LEVEL_UNSPECIFIED
            - SOFTWARE
            - HSM
          type: string
        state:
          description: The current state of the CryptoKeyVersion.
          enum:
            - CRYPTO_KEY_VERSION_STATE_UNSPECIFIED
            - PENDING_GENERATION
            - ENABLED
            - DISABLED
            - DESTROYED
            - DESTROY_SCHEDULED
            - PENDING_IMPORT
            - IMPORT_FAILED
          type: string
      type: object
    CryptoKeyVersionTemplate:
      description: |-
        A CryptoKeyVersionTemplate specifies the properties to use when creating
        a new CryptoKeyVersion, either manually with
        CreateCryptoKeyVersion or
        automatically as a result of auto-rotation.
      properties:
        algorithm:
          description: >-
            Required. Algorithm to use

            when creating a CryptoKeyVersion based on this template.


            For backwards compatibility, GOOGLE_SYMMETRIC_ENCRYPTION is implied if both

            this field is omitted and CryptoKey.purpose is

            ENCRYPT_DECRYPT.
          enum:
            - CRYPTO_KEY_VERSION_ALGORITHM_UNSPECIFIED
            - GOOGLE_SYMMETRIC_ENCRYPTION
            - RSA_SIGN_PSS_2048_SHA256
            - RSA_SIGN_PSS_3072_SHA256
            - RSA_SIGN_PSS_4096_SHA256
            - RSA_SIGN_PSS_4096_SHA512
            - RSA_SIGN_PKCS1_2048_SHA256
            - RSA_SIGN_PKCS1_3072_SHA256
            - RSA_SIGN_PKCS1_4096_SHA256
            - RSA_SIGN_PKCS1_4096_SHA512
            - RSA_DECRYPT_OAEP_2048_SHA256
            - RSA_DECRYPT_OAEP_3072_SHA256
            - RSA_DECRYPT_OAEP_4096_SHA256
            - RSA_DECRYPT_OAEP_4096_SHA512
            - EC_SIGN_P256_SHA256
            - EC_SIGN_P384_SHA384
          type: string
        protectionLevel:
          description: |-
            ProtectionLevel to use when creating a CryptoKeyVersion based on
            this template. Immutable. Defaults to SOFTWARE.
          enum:
            - PROTECTION_LEVEL_UNSPECIFIED
            - SOFTWARE
            - HSM
          type: string
      type: object
    DecryptRequest:
      description: Request message for KeyManagementService.Decrypt.
      properties:
        additionalAuthenticatedData:
          description: |-
            Optional data that must match the data originally supplied in
            EncryptRequest.additional_authenticated_data.
          format: byte
          type: string
        ciphertext:
          description: |-
            Required. The encrypted data originally returned in
            EncryptResponse.ciphertext.
          format: byte
          type: string
      type: object
    DecryptResponse:
      description: Response message for KeyManagementService.Decrypt.
      properties:
        plaintext:
          description: The decrypted data originally supplied in EncryptRequest.plaintext.
          format: byte
          type: string
      type: object
    DestroyCryptoKeyVersionRequest:
      description: Request message for KeyManagementService.DestroyCryptoKeyVersion.
      properties: {}
      type: object
    Digest:
      description: A Digest holds a cryptographic message digest.
      properties:
        sha256:
          description: A message digest produced with the SHA-256 algorithm.
          format: byte
          type: string
        sha384:
          description: A message digest produced with the SHA-384 algorithm.
          format: byte
          type: string
        sha512:
          description: A message digest produced with the SHA-512 algorithm.
          format: byte
          type: string
      type: object
    EncryptRequest:
      description: Request message for KeyManagementService.Encrypt.
      properties:
        additionalAuthenticatedData:
          description: >-
            Optional data that, if specified, must also be provided during
            decryption

            through DecryptRequest.additional_authenticated_data.


            The maximum size depends on the key version's

            protection_level. For

            SOFTWARE keys, the AAD must be no larger than

            64KiB. For HSM keys, the combined length of the

            plaintext and additional_authenticated_data fields must be no larger than

            8KiB.
          format: byte
          type: string
        plaintext:
          description: >-
            Required. The data to encrypt. Must be no larger than 64KiB.


            The maximum size depends on the key version's

            protection_level. For

            SOFTWARE keys, the plaintext must be no larger

            than 64KiB. For HSM keys, the combined length of the

            plaintext and additional_authenticated_data fields must be no larger than

            8KiB.
          format: byte
          type: string
      type: object
    EncryptResponse:
      description: Response message for KeyManagementService.Encrypt.
      properties:
        ciphertext:
          description: The encrypted data.
          format: byte
          type: string
        name:
          description: >-
            The resource name of the CryptoKeyVersion used in encryption. Check

            this field to verify that the intended resource was used for encryption.
          type: string
      type: object
    Expr:
      description: |-
        Represents an expression text. Example:

            title: "User account presence"
            description: "Determines whether the request has a user account"
            expression: "size(request.user) > 0"
      properties:
        description:
          description: >-
            An optional description of the expression. This is a longer text
            which

            describes the expression, e.g. when hovered over it in a UI.
          type: string
        expression:
          description: |-
            Textual representation of an expression in
            Common Expression Language syntax.

            The application context of the containing message determines which
            well-known feature set of CEL is supported.
          type: string
        location:
          description: >-
            An optional string indicating the location of the expression for
            error

            reporting, e.g. a file name and a position in the file.
          type: string
        title:
          description: |-
            An optional title for the expression, i.e. a short string describing
            its purpose. This can be used e.g. in UIs which allow to enter the
            expression.
          type: string
      type: object
    ImportCryptoKeyVersionRequest:
      description: Request message for KeyManagementService.ImportCryptoKeyVersion.
      properties:
        algorithm:
          description: |-
            Required. The algorithm of
            the key being imported. This does not need to match the
            version_template of the CryptoKey this
            version imports into.
          enum:
            - CRYPTO_KEY_VERSION_ALGORITHM_UNSPECIFIED
            - GOOGLE_SYMMETRIC_ENCRYPTION
            - RSA_SIGN_PSS_2048_SHA256
            - RSA_SIGN_PSS_3072_SHA256
            - RSA_SIGN_PSS_4096_SHA256
            - RSA_SIGN_PSS_4096_SHA512
            - RSA_SIGN_PKCS1_2048_SHA256
            - RSA_SIGN_PKCS1_3072_SHA256
            - RSA_SIGN_PKCS1_4096_SHA256
            - RSA_SIGN_PKCS1_4096_SHA512
            - RSA_DECRYPT_OAEP_2048_SHA256
            - RSA_DECRYPT_OAEP_3072_SHA256
            - RSA_DECRYPT_OAEP_4096_SHA256
            - RSA_DECRYPT_OAEP_4096_SHA512
            - EC_SIGN_P256_SHA256
            - EC_SIGN_P384_SHA384
          type: string
        importJob:
          description: |-
            Required. The name of the ImportJob that was used to
            wrap this key material.
          type: string
        rsaAesWrappedKey:
          description: |-
            Wrapped key material produced with
            RSA_OAEP_3072_SHA1_AES_256
            or
            RSA_OAEP_4096_SHA1_AES_256.

            This field contains the concatenation of two wrapped keys:
            <ol>
              <li>An ephemeral AES-256 wrapping key wrapped with the
                  public_key using RSAES-OAEP with SHA-1,
                  MGF1 with SHA-1, and an empty label.
              </li>
              <li>The key to be imported, wrapped with the ephemeral AES-256 key
                  using AES-KWP (RFC 5649).
              </li>
            </ol>

            This format is the same as the format produced by PKCS#11 mechanism
            CKM_RSA_AES_KEY_WRAP.
          format: byte
          type: string
      type: object
    ImportJob:
      description: >-
        An ImportJob can be used to create CryptoKeys and

        CryptoKeyVersions using pre-existing key material,

        generated outside of Cloud KMS.


        When an ImportJob is created, Cloud KMS will generate a "wrapping key",

        which is a public/private key pair. You use the wrapping key to encrypt (also

        known as wrap) the pre-existing key material to protect it during the import

        process. The nature of the wrapping key depends on the choice of

        import_method. When the wrapping key generation

        is complete, the state will be set to

        ACTIVE and the public_key

        can be fetched. The fetched public key can then be used to wrap your

        pre-existing key material.


        Once the key material is wrapped, it can be imported into a new

        CryptoKeyVersion in an existing CryptoKey by calling

        ImportCryptoKeyVersion.

        Multiple CryptoKeyVersions can be imported with a single

        ImportJob. Cloud KMS uses the private key portion of the wrapping key to

        unwrap the key material. Only Cloud KMS has access to the private key.


        An ImportJob expires 3 days after it is created. Once expired, Cloud KMS

        will no longer be able to import or unwrap any key material that was wrapped

        with the ImportJob's public key.


        For more information, see

        [Importing a key](https://cloud.google.com/kms/docs/importing-a-key).
      properties:
        attestation:
          $ref: "#/components/schemas/KeyOperationAttestation"
        createTime:
          description: Output only. The time at which this ImportJob was created.
          format: google-datetime
          type: string
        expireEventTime:
          description: |-
            Output only. The time this ImportJob expired. Only present if
            state is EXPIRED.
          format: google-datetime
          type: string
        expireTime:
          description: |-
            Output only. The time at which this ImportJob is scheduled for
            expiration and can no longer be used to import key material.
          format: google-datetime
          type: string
        generateTime:
          description: Output only. The time this ImportJob's key material was generated.
          format: google-datetime
          type: string
        importMethod:
          description: |-
            Required and immutable. The wrapping method to be used for incoming
            key material.
          enum:
            - IMPORT_METHOD_UNSPECIFIED
            - RSA_OAEP_3072_SHA1_AES_256
            - RSA_OAEP_4096_SHA1_AES_256
          type: string
        name:
          description: |-
            Output only. The resource name for this ImportJob in the format
            `projects/*/locations/*/keyRings/*/importJobs/*`.
          type: string
        protectionLevel:
          description: |-
            Required and immutable. The protection level of the ImportJob. This
            must match the
            protection_level of the
            version_template on the CryptoKey you
            attempt to import into.
          enum:
            - PROTECTION_LEVEL_UNSPECIFIED
            - SOFTWARE
            - HSM
          type: string
        publicKey:
          $ref: "#/components/schemas/WrappingPublicKey"
        state:
          description: >-
            Output only. The current state of the ImportJob, indicating if it
            can

            be used.
          enum:
            - IMPORT_JOB_STATE_UNSPECIFIED
            - PENDING_GENERATION
            - ACTIVE
            - EXPIRED
          type: string
      type: object
    KeyOperationAttestation:
      description: |-
        Contains an HSM-generated attestation about a key operation. For more
        information, see [Verifying attestations]
        (https://cloud.google.com/kms/docs/attest-key).
      properties:
        content:
          description: |-
            Output only. The attestation data provided by the HSM when the key
            operation was performed.
          format: byte
          type: string
        format:
          description: Output only. The format of the attestation data.
          enum:
            - ATTESTATION_FORMAT_UNSPECIFIED
            - CAVIUM_V1_COMPRESSED
            - CAVIUM_V2_COMPRESSED
          type: string
      type: object
    KeyRing:
      description: A KeyRing is a toplevel logical grouping of CryptoKeys.
      properties:
        createTime:
          description: Output only. The time at which this KeyRing was created.
          format: google-datetime
          type: string
        name:
          description: |-
            Output only. The resource name for the KeyRing in the format
            `projects/*/locations/*/keyRings/*`.
          type: string
      type: object
    ListCryptoKeyVersionsResponse:
      description: Response message for KeyManagementService.ListCryptoKeyVersions.
      properties:
        cryptoKeyVersions:
          description: The list of CryptoKeyVersions.
          items:
            $ref: "#/components/schemas/CryptoKeyVersion"
          type: array
        nextPageToken:
          description: |-
            A token to retrieve next page of results. Pass this value in
            ListCryptoKeyVersionsRequest.page_token to retrieve the next page of
            results.
          type: string
        totalSize:
          description: |-
            The total number of CryptoKeyVersions that matched the
            query.
          format: int32
          type: integer
      type: object
    ListCryptoKeysResponse:
      description: Response message for KeyManagementService.ListCryptoKeys.
      properties:
        cryptoKeys:
          description: The list of CryptoKeys.
          items:
            $ref: "#/components/schemas/CryptoKey"
          type: array
        nextPageToken:
          description: >-
            A token to retrieve next page of results. Pass this value in

            ListCryptoKeysRequest.page_token to retrieve the next page of results.
          type: string
        totalSize:
          description: The total number of CryptoKeys that matched the query.
          format: int32
          type: integer
      type: object
    ListImportJobsResponse:
      description: Response message for KeyManagementService.ListImportJobs.
      properties:
        importJobs:
          description: The list of ImportJobs.
          items:
            $ref: "#/components/schemas/ImportJob"
          type: array
        nextPageToken:
          description: >-
            A token to retrieve next page of results. Pass this value in

            ListImportJobsRequest.page_token to retrieve the next page of results.
          type: string
        totalSize:
          description: The total number of ImportJobs that matched the query.
          format: int32
          type: integer
      type: object
    ListKeyRingsResponse:
      description: Response message for KeyManagementService.ListKeyRings.
      properties:
        keyRings:
          description: The list of KeyRings.
          items:
            $ref: "#/components/schemas/KeyRing"
          type: array
        nextPageToken:
          description: |-
            A token to retrieve next page of results. Pass this value in
            ListKeyRingsRequest.page_token to retrieve the next page of results.
          type: string
        totalSize:
          description: The total number of KeyRings that matched the query.
          format: int32
          type: integer
      type: object
    ListLocationsResponse:
      description: The response message for Locations.ListLocations.
      properties:
        locations:
          description: A list of locations that matches the specified filter in the request.
          items:
            $ref: "#/components/schemas/Location"
          type: array
        nextPageToken:
          description: The standard List next-page token.
          type: string
      type: object
    Location:
      description: A resource that represents Google Cloud Platform location.
      properties:
        displayName:
          description: |-
            The friendly name for this location, typically a nearby city name.
            For example, "Tokyo".
          type: string
        labels:
          additionalProperties:
            type: string
          description: |-
            Cross-service attributes for the location. For example

                {"cloud.googleapis.com/region": "us-east1"}
          type: object
        locationId:
          description: 'The canonical id for this location. For example: `"us-east1"`.'
          type: string
        metadata:
          additionalProperties:
            description: Properties of the object. Contains field @type with type URL.
          description: >-
            Service-specific metadata. For example the available capacity at the
            given

            location.
          type: object
        name:
          description: >-
            Resource name for the location, which may vary between
            implementations.

            For example: `"projects/example-project/locations/us-east1"`
          type: string
      type: object
    LocationMetadata:
      description: Cloud KMS metadata for the given google.cloud.location.Location.
      properties:
        hsmAvailable:
          description: |-
            Indicates whether CryptoKeys with
            protection_level
            HSM can be created in this location.
          type: boolean
      type: object
    Policy:
      description: >-
        Defines an Identity and Access Management (IAM) policy. It is used to

        specify access control policies for Cloud Platform resources.



        A `Policy` consists of a list of `bindings`. A `binding` binds a list of

        `members` to a `role`, where the members can be user accounts, Google groups,

        Google domains, and service accounts. A `role` is a named list of permissions

        defined by IAM.


        **JSON Example**

            {
              "bindings": [
                {
                  "role": "roles/owner",
                  "members": [
                    "user:mike@example.com",
                    "group:admins@example.com",
                    "domain:google.com",
                    "serviceAccount:my-other-app@appspot.gserviceaccount.com"
                  ]
                },
                {
                  "role": "roles/viewer",
                  "members": ["user:sean@example.com"]
                }
              ]
            }

        **YAML Example**

            bindings:
            - members:
              - user:mike@example.com
              - group:admins@example.com
              - domain:google.com
              - serviceAccount:my-other-app@appspot.gserviceaccount.com
              role: roles/owner
            - members:
              - user:sean@example.com
              role: roles/viewer


        For a description of IAM and its features, see the

        [IAM developer's guide](https://cloud.google.com/iam/docs).
      properties:
        auditConfigs:
          description: Specifies cloud audit logging configuration for this policy.
          items:
            $ref: "#/components/schemas/AuditConfig"
          type: array
        bindings:
          description: |-
            Associates a list of `members` to a `role`.
            `bindings` with no members will result in an error.
          items:
            $ref: "#/components/schemas/Binding"
          type: array
        etag:
          description: >-
            `etag` is used for optimistic concurrency control as a way to help

            prevent simultaneous updates of a policy from overwriting each other.

            It is strongly suggested that systems make use of the `etag` in the

            read-modify-write cycle to perform policy updates in order to avoid race

            conditions: An `etag` is returned in the response to `getIamPolicy`, and

            systems are expected to put that etag in the request to `setIamPolicy` to

            ensure that their change will be applied to the same version of the policy.


            If no `etag` is provided in the call to `setIamPolicy`, then the existing

            policy is overwritten.
          format: byte
          type: string
        version:
          description: >-
            Specifies the format of the policy.


            Valid values are 0, 1, and 3. Requests specifying an invalid value will be

            rejected.


            Policies with any conditional bindings must specify version 3. Policies

            without any conditional bindings may specify any valid value or leave the

            field unset.
          format: int32
          type: integer
      type: object
    PublicKey:
      description: |-
        The public key for a given CryptoKeyVersion. Obtained via
        GetPublicKey.
      properties:
        algorithm:
          description: |-
            The Algorithm associated
            with this key.
          enum:
            - CRYPTO_KEY_VERSION_ALGORITHM_UNSPECIFIED
            - GOOGLE_SYMMETRIC_ENCRYPTION
            - RSA_SIGN_PSS_2048_SHA256
            - RSA_SIGN_PSS_3072_SHA256
            - RSA_SIGN_PSS_4096_SHA256
            - RSA_SIGN_PSS_4096_SHA512
            - RSA_SIGN_PKCS1_2048_SHA256
            - RSA_SIGN_PKCS1_3072_SHA256
            - RSA_SIGN_PKCS1_4096_SHA256
            - RSA_SIGN_PKCS1_4096_SHA512
            - RSA_DECRYPT_OAEP_2048_SHA256
            - RSA_DECRYPT_OAEP_3072_SHA256
            - RSA_DECRYPT_OAEP_4096_SHA256
            - RSA_DECRYPT_OAEP_4096_SHA512
            - EC_SIGN_P256_SHA256
            - EC_SIGN_P384_SHA384
          type: string
        pem:
          description: >-
            The public key, encoded in PEM format. For more information, see the

            [RFC 7468](https://tools.ietf.org/html/rfc7468) sections for

            [General Considerations](https://tools.ietf.org/html/rfc7468#section-2) and

            [Textual Encoding of Subject Public Key Info]

            (https://tools.ietf.org/html/rfc7468#section-13).
          type: string
      type: object
    RestoreCryptoKeyVersionRequest:
      description: Request message for KeyManagementService.RestoreCryptoKeyVersion.
      properties: {}
      type: object
    SetIamPolicyRequest:
      description: Request message for `SetIamPolicy` method.
      properties:
        policy:
          $ref: "#/components/schemas/Policy"
        updateMask:
          description: >-
            OPTIONAL: A FieldMask specifying which fields of the policy to
            modify. Only

            the fields in the mask will be modified. If no mask is provided, the

            following default mask is used:

            paths: "bindings, etag"

            This field is only used by Cloud IAM.
          format: google-fieldmask
          type: string
      type: object
    TestIamPermissionsRequest:
      description: Request message for `TestIamPermissions` method.
      properties:
        permissions:
          description: >-
            The set of permissions to check for the `resource`. Permissions with

            wildcards (such as '*' or 'storage.*') are not allowed. For more

            information see

            [IAM Overview](https://cloud.google.com/iam/docs/overview#permissions).
          items:
            type: string
          type: array
      type: object
    TestIamPermissionsResponse:
      description: Response message for `TestIamPermissions` method.
      properties:
        permissions:
          description: |-
            A subset of `TestPermissionsRequest.permissions` that the caller is
            allowed.
          items:
            type: string
          type: array
      type: object
    UpdateCryptoKeyPrimaryVersionRequest:
      description: Request message for KeyManagementService.UpdateCryptoKeyPrimaryVersion.
      properties:
        cryptoKeyVersionId:
          description: The id of the child CryptoKeyVersion to use as primary.
          type: string
      type: object
    WrappingPublicKey:
      description: |-
        The public key component of the wrapping key. For details of the type of
        key this public key corresponds to, see the ImportMethod.
      properties:
        pem:
          description: >-
            The public key, encoded in PEM format. For more information, see the
            [RFC

            7468](https://tools.ietf.org/html/rfc7468) sections for [General

            Considerations](https://tools.ietf.org/html/rfc7468#section-2) and

            [Textual Encoding of Subject Public Key Info]

            (https://tools.ietf.org/html/rfc7468#section-13).
          type: string
      type: object
