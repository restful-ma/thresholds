openapi: 3.0.0
info:
  contact:
    name: Google
    url: https://google.com
  description: Lets you access a cloud hosted machine learning service that makes it easy
    to build smart apps
  license:
    name: Creative Commons Attribution 3.0
    url: http://creativecommons.org/licenses/by/3.0/
  termsOfService: https://developers.google.com/terms/
  title: Prediction
  version: v1.5
  x-apiClientRegistration:
    url: https://console.developers.google.com
  x-apisguru-categories:
    - machine_learning
  x-logo:
    url: https://www.google.com/images/icons/feature/predictionapi-64.png
  x-origin:
    - converter:
        url: https://github.com/lucybot/api-spec-converter
        version: 2.6.0
      format: google
      url: https://www.googleapis.com/discovery/v1/apis/prediction/v1.5/rest
      version: v1
  x-preferred: false
  x-providerName: googleapis.com
  x-serviceName: prediction
externalDocs:
  url: https://developers.google.com/prediction/docs/developer-guide
tags:
  - name: hostedmodels
  - name: trainedmodels
paths:
  "/hostedmodels/{hostedModelName}/predict":
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Submit input and request an output against a hosted model.
      operationId: prediction.hostedmodels.predict
      parameters:
        - description: The name of a hosted model.
          in: path
          name: hostedModelName
          required: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/Input"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Output"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/prediction
          Oauth2c:
            - https://www.googleapis.com/auth/prediction
      tags:
        - hostedmodels
  /trainedmodels:
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Begin training your model.
      operationId: prediction.trainedmodels.insert
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Training"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Training"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/devstorage.full_control
          Oauth2c:
            - https://www.googleapis.com/auth/devstorage.full_control
        - Oauth2:
            - https://www.googleapis.com/auth/devstorage.read_only
          Oauth2c:
            - https://www.googleapis.com/auth/devstorage.read_only
        - Oauth2:
            - https://www.googleapis.com/auth/devstorage.read_write
          Oauth2c:
            - https://www.googleapis.com/auth/devstorage.read_write
        - Oauth2:
            - https://www.googleapis.com/auth/prediction
          Oauth2c:
            - https://www.googleapis.com/auth/prediction
      tags:
        - trainedmodels
  /trainedmodels/list:
    get:
      description: List available models.
      operationId: prediction.trainedmodels.list
      parameters:
        - description: Maximum number of results to return
          in: query
          name: maxResults
          schema:
            type: integer
            minimum: 0
        - description: Pagination token
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/List"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/prediction
          Oauth2c:
            - https://www.googleapis.com/auth/prediction
      tags:
        - trainedmodels
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
  "/trainedmodels/{id}":
    delete:
      description: Delete a trained model.
      operationId: prediction.trainedmodels.delete
      parameters:
        - description: The unique name for the predictive model.
          in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/prediction
          Oauth2c:
            - https://www.googleapis.com/auth/prediction
      tags:
        - trainedmodels
    get:
      description: Check training status of your model.
      operationId: prediction.trainedmodels.get
      parameters:
        - description: The unique name for the predictive model.
          in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Training"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/prediction
          Oauth2c:
            - https://www.googleapis.com/auth/prediction
      tags:
        - trainedmodels
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    put:
      description: Add new data to a trained model.
      operationId: prediction.trainedmodels.update
      parameters:
        - description: The unique name for the predictive model.
          in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Update"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Training"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/prediction
          Oauth2c:
            - https://www.googleapis.com/auth/prediction
      tags:
        - trainedmodels
  "/trainedmodels/{id}/analyze":
    get:
      description: Get analysis of the model and the data the model was trained on.
      operationId: prediction.trainedmodels.analyze
      parameters:
        - description: The unique name for the predictive model.
          in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Analyze"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/prediction
          Oauth2c:
            - https://www.googleapis.com/auth/prediction
      tags:
        - trainedmodels
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
  "/trainedmodels/{id}/predict":
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Submit model id and request a prediction.
      operationId: prediction.trainedmodels.predict
      parameters:
        - description: The unique name for the predictive model.
          in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/Input"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Output"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/prediction
          Oauth2c:
            - https://www.googleapis.com/auth/prediction
      tags:
        - trainedmodels
servers:
  - url: https://www.googleapis.com/prediction/v1.5
components:
  parameters:
    alt:
      description: Data format for the response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
        default: json
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    key:
      description: API key. Your API key identifies your project and provides you with API
        access, quota, and reports. Required unless you provide an OAuth 2.0
        token.
      in: query
      name: key
      schema:
        type: string
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
        default: true
    quotaUser:
      description: Available to use for quota purposes for server-side applications. Can be
        any arbitrary string assigned to a user, but should not exceed 40
        characters. Overrides userIp if both are provided.
      in: query
      name: quotaUser
      schema:
        type: string
    userIp:
      description: IP address of the site where the request originates. Use this if you
        want to enforce per-user limits.
      in: query
      name: userIp
      schema:
        type: string
  requestBodies:
    Input:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Input"
  securitySchemes:
    Oauth2:
      description: Oauth 2.0 implicit authentication
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes:
            https://www.googleapis.com/auth/devstorage.full_control: Manage your data and permissions in Google Cloud Storage
            https://www.googleapis.com/auth/devstorage.read_only: View your data in Google Cloud Storage
            https://www.googleapis.com/auth/devstorage.read_write: Manage your data in Google Cloud Storage
            https://www.googleapis.com/auth/prediction: Manage your data in the Google Prediction API
    Oauth2c:
      description: Oauth 2.0 accessCode authentication
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          tokenUrl: https://accounts.google.com/o/oauth2/token
          scopes:
            https://www.googleapis.com/auth/devstorage.full_control: Manage your data and permissions in Google Cloud Storage
            https://www.googleapis.com/auth/devstorage.read_only: View your data in Google Cloud Storage
            https://www.googleapis.com/auth/devstorage.read_write: Manage your data in Google Cloud Storage
            https://www.googleapis.com/auth/prediction: Manage your data in the Google Prediction API
  schemas:
    Analyze:
      properties:
        dataDescription:
          description: Description of the data the model was trained on.
          properties:
            features:
              description: Description of the input features in the data set.
              items:
                properties:
                  categorical:
                    description: Description of the categorical values of this feature.
                    properties:
                      count:
                        description: Number of categorical values for this feature in the
                          data.
                        format: int64
                        type: string
                      values:
                        description: List of all the categories for this feature in the
                          data set.
                        items:
                          properties:
                            count:
                              description: Number of times this feature had this value.
                              format: int64
                              type: string
                            value:
                              description: The category name.
                              type: string
                          type: object
                        type: array
                    type: object
                  index:
                    description: The feature index.
                    format: int64
                    type: string
                  numeric:
                    description: Description of the numeric values of this feature.
                    properties:
                      count:
                        description: Number of numeric values for this feature in the data
                          set.
                        format: int64
                        type: string
                      mean:
                        description: Mean of the numeric values of this feature in the data
                          set.
                        format: double
                        type: number
                      variance:
                        description: Variance of the numeric values of this feature in the
                          data set.
                        format: double
                        type: number
                    type: object
                  text:
                    description: Description of multiple-word text values of this feature.
                    properties:
                      count:
                        description: Number of multiple-word text values for this feature.
                        format: int64
                        type: string
                    type: object
                type: object
              type: array
            outputFeature:
              description: Description of the output value or label.
              properties:
                numeric:
                  description: Description of the output values in the data set.
                  properties:
                    count:
                      description: Number of numeric output values in the data set.
                      format: int64
                      type: string
                    mean:
                      description: Mean of the output values in the data set.
                      format: double
                      type: number
                    variance:
                      description: Variance of the output values in the data set.
                      format: double
                      type: number
                  type: object
                text:
                  description: Description of the output labels in the data set.
                  items:
                    properties:
                      count:
                        description: Number of times the output label occurred in the data
                          set.
                        format: int64
                        type: string
                      value:
                        description: The output label.
                        type: string
                    type: object
                  type: array
              type: object
          type: object
        errors:
          description: List of errors with the data.
          items:
            additionalProperties:
              description: Error level followed by a detailed error message.
              type: string
            type: object
          type: array
        id:
          description: The unique name for the predictive model.
          type: string
        kind:
          default: prediction#analyze
          description: What kind of resource this is.
          type: string
        modelDescription:
          description: Description of the model.
          properties:
            confusionMatrix:
              additionalProperties:
                additionalProperties:
                  format: double
                  type: number
                type: object
              description: An output confusion matrix. This shows an estimate for how this
                model will do in predictions. This is first indexed by the true
                class label. For each true class label, this provides a pair
                {predicted_label, count}, where count is the estimated number of
                times the model will predict the predicted label given the true
                label. Will not output if more then 100 classes [Categorical
                models only].
              type: object
            confusionMatrixRowTotals:
              additionalProperties:
                format: double
                type: number
              description: A list of the confusion matrix row totals
              type: object
            modelinfo:
              $ref: "#/components/schemas/Training"
          type: object
        selfLink:
          description: A URL to re-request this resource.
          type: string
      type: object
    Input:
      properties:
        input:
          description: Input to the model for a prediction
          properties:
            csvInstance:
              description: A list of input features, these can be strings or doubles.
              items: {}
              type: array
          type: object
      type: object
    List:
      properties:
        items:
          description: List of models.
          items:
            $ref: "#/components/schemas/Training"
          type: array
        kind:
          default: prediction#list
          description: What kind of resource this is.
          type: string
        nextPageToken:
          description: Pagination token to fetch the next page, if one exists.
          type: string
        selfLink:
          description: A URL to re-request this resource.
          type: string
      type: object
    Output:
      properties:
        id:
          description: The unique name for the predictive model.
          type: string
        kind:
          default: prediction#output
          description: What kind of resource this is.
          type: string
        outputLabel:
          description: The most likely class label [Categorical models only].
          type: string
        outputMulti:
          description: A list of class labels with their estimated probabilities
            [Categorical models only].
          items:
            properties:
              label:
                description: The class label.
                type: string
              score:
                description: The probability of the class label.
                format: double
                type: number
            type: object
          type: array
        outputValue:
          description: The estimated regression value [Regression models only].
          format: double
          type: number
        selfLink:
          description: A URL to re-request this resource.
          type: string
      type: object
    Training:
      properties:
        created:
          description: Insert time of the model (as a RFC 3339 timestamp).
          format: date-time
          type: string
        id:
          description: The unique name for the predictive model.
          type: string
        kind:
          default: prediction#training
          description: What kind of resource this is.
          type: string
        modelInfo:
          description: Model metadata.
          properties:
            classWeightedAccuracy:
              description: Estimated accuracy of model taking utility weights into account
                [Categorical models only].
              format: double
              type: number
            classificationAccuracy:
              description: A number between 0.0 and 1.0, where 1.0 is 100% accurate. This
                is an estimate, based on the amount and quality of the training
                data, of the estimated prediction accuracy. You can use this is
                a guide to decide whether the results are accurate enough for
                your needs. This estimate will be more reliable if your real
                input data is similar to your training data [Categorical models
                only].
              format: double
              type: number
            meanSquaredError:
              description: An estimated mean squared error. The can be used to measure the
                quality of the predicted model [Regression models only].
              format: double
              type: number
            modelType:
              description: Type of predictive model (CLASSIFICATION or REGRESSION)
              type: string
            numberInstances:
              description: Number of valid data instances used in the trained model.
              format: int64
              type: string
            numberLabels:
              description: Number of class labels in the trained model [Categorical models
                only].
              format: int64
              type: string
          type: object
        modelType:
          description: Type of predictive model (classification or regression)
          type: string
        selfLink:
          description: A URL to re-request this resource.
          type: string
        storageDataLocation:
          description: Google storage location of the training data file.
          type: string
        storagePMMLLocation:
          description: Google storage location of the preprocessing pmml file.
          type: string
        storagePMMLModelLocation:
          description: Google storage location of the pmml model file.
          type: string
        trainingComplete:
          description: Training completion time (as a RFC 3339 timestamp).
          format: date-time
          type: string
        trainingInstances:
          description: Instances to train model on.
          items:
            properties:
              csvInstance:
                description: The input features for this instance
                items: {}
                type: array
              output:
                description: The generic output value - could be regression or class label
                type: string
            type: object
          type: array
        trainingStatus:
          description: "The current status of the training job. This can be one of
            following: RUNNING; DONE; ERROR; ERROR: TRAINING JOB NOT FOUND"
          type: string
        utility:
          description: A class weighting function, which allows the importance weights for
            class labels to be specified [Categorical models only].
          items:
            additionalProperties:
              format: double
              type: number
            description: Class label (string).
            type: object
          type: array
      type: object
    Update:
      properties:
        csvInstance:
          description: The input features for this instance
          items: {}
          type: array
        label:
          description: The class label of this instance
          type: string
        output:
          description: The generic output value - could be regression value or class label
          type: string
      type: object
