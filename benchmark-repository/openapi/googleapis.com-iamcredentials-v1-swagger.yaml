openapi: 3.0.0
info:
  contact:
    name: Google
    url: https://google.com
  description: Creates short-lived, limited-privilege credentials for IAM service accounts.
  license:
    name: Creative Commons Attribution 3.0
    url: http://creativecommons.org/licenses/by/3.0/
  termsOfService: https://developers.google.com/terms/
  title: IAM Service Account Credentials
  version: v1
  x-apiClientRegistration:
    url: https://console.developers.google.com
  x-logo:
    url: https://www.google.com/images/branding/googlelogo/2x/googlelogo_color_272x92dp.png
  x-origin:
    - converter:
        url: https://github.com/lucybot/api-spec-converter
        version: 2.7.31
      format: google
      url: https://iamcredentials.googleapis.com/$discovery/rest?version=v1
      version: v1
  x-preferred: true
  x-providerName: googleapis.com
  x-serviceName: iamcredentials
externalDocs:
  url: https://cloud.google.com/iam/docs/creating-short-lived-service-account-credentials
tags:
  - name: projects
paths:
  "/v1/{name}:generateAccessToken":
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/upload_protocol"
    post:
      description: Generates an OAuth 2.0 access token for a service account.
      operationId: iamcredentials.projects.serviceAccounts.generateAccessToken
      parameters:
        - description: >-
            The resource name of the service account for which the credentials

            are requested, in the following format:

            `projects/-/serviceAccounts/{ACCOUNT_EMAIL_OR_UNIQUEID}`. The `-` wildcard

            character is required; replacing it with a project ID is invalid.
          in: path
          name: name
          required: true
          x-reservedExpansion: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GenerateAccessTokenRequest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/GenerateAccessTokenResponse"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  "/v1/{name}:generateIdToken":
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/upload_protocol"
    post:
      description: Generates an OpenID Connect ID token for a service account.
      operationId: iamcredentials.projects.serviceAccounts.generateIdToken
      parameters:
        - description: >-
            The resource name of the service account for which the credentials

            are requested, in the following format:

            `projects/-/serviceAccounts/{ACCOUNT_EMAIL_OR_UNIQUEID}`. The `-` wildcard

            character is required; replacing it with a project ID is invalid.
          in: path
          name: name
          required: true
          x-reservedExpansion: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GenerateIdTokenRequest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/GenerateIdTokenResponse"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  "/v1/{name}:signBlob":
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/upload_protocol"
    post:
      description: Signs a blob using a service account's system-managed private key.
      operationId: iamcredentials.projects.serviceAccounts.signBlob
      parameters:
        - description: >-
            The resource name of the service account for which the credentials

            are requested, in the following format:

            `projects/-/serviceAccounts/{ACCOUNT_EMAIL_OR_UNIQUEID}`. The `-` wildcard

            character is required; replacing it with a project ID is invalid.
          in: path
          name: name
          required: true
          x-reservedExpansion: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SignBlobRequest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/SignBlobResponse"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  "/v1/{name}:signJwt":
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/upload_protocol"
    post:
      description: Signs a JWT using a service account's system-managed private key.
      operationId: iamcredentials.projects.serviceAccounts.signJwt
      parameters:
        - description: >-
            The resource name of the service account for which the credentials

            are requested, in the following format:

            `projects/-/serviceAccounts/{ACCOUNT_EMAIL_OR_UNIQUEID}`. The `-` wildcard

            character is required; replacing it with a project ID is invalid.
          in: path
          name: name
          required: true
          x-reservedExpansion: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SignJwtRequest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/SignJwtResponse"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
servers:
  - url: https://iamcredentials.googleapis.com/
components:
  parameters:
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
          - media
          - proto
        default: json
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    key:
      description: API key. Your API key identifies your project and provides you with API
        access, quota, and reports. Required unless you provide an OAuth 2.0
        token.
      in: query
      name: key
      schema:
        type: string
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
        default: true
    quotaUser:
      description: Available to use for quota purposes for server-side applications. Can be
        any arbitrary string assigned to a user, but should not exceed 40
        characters.
      in: query
      name: quotaUser
      schema:
        type: string
    uploadType:
      description: Legacy upload protocol for media (e.g. "media", "multipart").
      in: query
      name: uploadType
      schema:
        type: string
    upload_protocol:
      description: Upload protocol for media (e.g. "raw", "multipart").
      in: query
      name: upload_protocol
      schema:
        type: string
    _.xgafv:
      description: V1 error format.
      in: query
      name: $.xgafv
      schema:
        type: string
        enum:
          - "1"
          - "2"
  securitySchemes:
    Oauth2:
      description: Oauth 2.0 implicit authentication
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes:
            https://www.googleapis.com/auth/cloud-platform: View and manage your data across Google Cloud Platform services
    Oauth2c:
      description: Oauth 2.0 accessCode authentication
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          tokenUrl: https://accounts.google.com/o/oauth2/token
          scopes:
            https://www.googleapis.com/auth/cloud-platform: View and manage your data across Google Cloud Platform services
  schemas:
    GenerateAccessTokenRequest:
      properties:
        delegates:
          description: >-
            The sequence of service accounts in a delegation chain. Each service

            account must be granted the `roles/iam.serviceAccountTokenCreator` role

            on its next service account in the chain. The last service account in the

            chain must be granted the `roles/iam.serviceAccountTokenCreator` role

            on the service account that is specified in the `name` field of the

            request.


            The delegates must have the following format:

            `projects/-/serviceAccounts/{ACCOUNT_EMAIL_OR_UNIQUEID}`. The `-` wildcard

            character is required; replacing it with a project ID is invalid.
          items:
            type: string
          type: array
        lifetime:
          description: >-
            The desired lifetime duration of the access token in seconds.

            Must be set to a value less than or equal to 3600 (1 hour). If a value is

            not specified, the token's lifetime will be set to a default value of one

            hour.
          format: google-duration
          type: string
        scope:
          description: >-
            Code to identify the scopes to be included in the OAuth 2.0 access
            token.

            See https://developers.google.com/identity/protocols/googlescopes for more

            information.

            At least one value required.
          items:
            type: string
          type: array
      type: object
    GenerateAccessTokenResponse:
      properties:
        accessToken:
          description: The OAuth 2.0 access token.
          type: string
        expireTime:
          description: |-
            Token expiration time.
            The expiration time is always set.
          format: google-datetime
          type: string
      type: object
    GenerateIdTokenRequest:
      properties:
        audience:
          description: >-
            The audience for the token, such as the API or account that this
            token

            grants access to.
          type: string
        delegates:
          description: >-
            The sequence of service accounts in a delegation chain. Each service

            account must be granted the `roles/iam.serviceAccountTokenCreator` role

            on its next service account in the chain. The last service account in the

            chain must be granted the `roles/iam.serviceAccountTokenCreator` role

            on the service account that is specified in the `name` field of the

            request.


            The delegates must have the following format:

            `projects/-/serviceAccounts/{ACCOUNT_EMAIL_OR_UNIQUEID}`. The `-` wildcard

            character is required; replacing it with a project ID is invalid.
          items:
            type: string
          type: array
        includeEmail:
          description: >-
            Include the service account email in the token. If set to `true`,
            the

            token will contain `email` and `email_verified` claims.
          type: boolean
      type: object
    GenerateIdTokenResponse:
      properties:
        token:
          description: The OpenId Connect ID token.
          type: string
      type: object
    SignBlobRequest:
      properties:
        delegates:
          description: >-
            The sequence of service accounts in a delegation chain. Each service

            account must be granted the `roles/iam.serviceAccountTokenCreator` role

            on its next service account in the chain. The last service account in the

            chain must be granted the `roles/iam.serviceAccountTokenCreator` role

            on the service account that is specified in the `name` field of the

            request.


            The delegates must have the following format:

            `projects/-/serviceAccounts/{ACCOUNT_EMAIL_OR_UNIQUEID}`. The `-` wildcard

            character is required; replacing it with a project ID is invalid.
          items:
            type: string
          type: array
        payload:
          description: The bytes to sign.
          format: byte
          type: string
      type: object
    SignBlobResponse:
      properties:
        keyId:
          description: The ID of the key used to sign the blob.
          type: string
        signedBlob:
          description: The signed blob.
          format: byte
          type: string
      type: object
    SignJwtRequest:
      properties:
        delegates:
          description: >-
            The sequence of service accounts in a delegation chain. Each service

            account must be granted the `roles/iam.serviceAccountTokenCreator` role

            on its next service account in the chain. The last service account in the

            chain must be granted the `roles/iam.serviceAccountTokenCreator` role

            on the service account that is specified in the `name` field of the

            request.


            The delegates must have the following format:

            `projects/-/serviceAccounts/{ACCOUNT_EMAIL_OR_UNIQUEID}`. The `-` wildcard

            character is required; replacing it with a project ID is invalid.
          items:
            type: string
          type: array
        payload:
          description: "The JWT payload to sign: a JSON object that contains a JWT Claims
            Set."
          type: string
      type: object
    SignJwtResponse:
      properties:
        keyId:
          description: The ID of the key used to sign the JWT.
          type: string
        signedJwt:
          description: The signed JWT.
          type: string
      type: object
