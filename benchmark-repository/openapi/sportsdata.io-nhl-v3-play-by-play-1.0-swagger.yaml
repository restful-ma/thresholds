openapi: 3.0.0
info:
  contact:
    x-twitter: nfldata
  description: NHL play-by-play API.
  title: NHL v3 Play-by-Play
  version: "1.0"
  x-apisguru-categories:
    - entertainment
  x-logo:
    url: https://twitter.com/nfldata/profile_image?size=original
  x-origin:
    - format: swagger
      url: https://fantasydata.com/downloads/swagger/nhl-v3-play-by-play.json
      version: "2.0"
  x-providerName: sportsdata.io
  x-serviceName: nhl-v3-play-by-play
security:
  - apiKeyHeader: []
  - apiKeyQuery: []
tags: []
paths:
  "/{format}/PlayByPlay/{gameid}":
    get:
      operationId: PlayByPlay
      parameters:
        - description: Desired response format. Valid entries are <code>XML</code> or
            <code>JSON</code>.
          in: path
          name: format
          required: true
          schema:
            type: string
            enum:
              - XML
              - JSON
            default: XML
        - description: The GameID of an MLB game.  GameIDs can be found in the Games
            API.  Valid entries are <code>14620</code> or <code>16905</code>
          in: path
          name: gameid
          required: true
          schema:
            type: string
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PlayByPlay"
      summary: Play By Play
  "/{format}/PlayByPlayDelta/{date}/{minutes}":
    get:
      operationId: PlayByPlayDelta
      parameters:
        - description: Desired response format. Valid entries are <code>XML</code> or
            <code>JSON</code>.
          in: path
          name: format
          required: true
          schema:
            type: string
            enum:
              - XML
              - JSON
            default: XML
        - description: |-
            The date of the game(s).
            <br>Examples: <code>2018-JAN-31</code>, <code>2017-OCT-01</code>.
          in: path
          name: date
          required: true
          schema:
            type: string
        - description: >-
            Only returns plays that have changed in the last X minutes.  You
            specify how many minutes in time to go back.  Valid entries are:

            <code>1</code>, <code>2</code> ... <code>all</code>.
          in: path
          name: minutes
          required: true
          schema:
            type: string
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/PlayByPlay"
                type: array
      summary: Play By Play Delta
servers:
  - url: http://api.sportsdata.io
  - url: https://api.sportsdata.io
  - url: http://api.fantasydata.net
  - url: https://api.fantasydata.net
components:
  securitySchemes:
    apiKeyHeader:
      in: header
      name: Ocp-Apim-Subscription-Key
      type: apiKey
    apiKeyQuery:
      in: query
      name: subscription-key
      type: apiKey
  schemas:
    Game:
      properties:
        Attendance:
          type: integer
        AwayTeam:
          type: string
        AwayTeamID:
          type: integer
        AwayTeamMoneyLine:
          type: integer
        AwayTeamScore:
          type: integer
        Channel:
          type: string
        DateTime:
          type: string
        Day:
          type: string
        GameEndDateTime:
          type: string
        GameID:
          type: integer
        GlobalAwayTeamID:
          type: integer
        GlobalGameID:
          type: integer
        GlobalHomeTeamID:
          type: integer
        HomeTeam:
          type: string
        HomeTeamID:
          type: integer
        HomeTeamMoneyLine:
          type: integer
        HomeTeamScore:
          type: integer
        IsClosed:
          type: boolean
        LastPlay:
          type: string
        OverUnder:
          type: number
        Period:
          type: string
        Periods:
          items:
            $ref: "#/components/schemas/Period"
          type: array
        PointSpread:
          type: number
        PointSpreadAwayTeamMoneyLine:
          type: integer
        PointSpreadHomeTeamMoneyLine:
          type: integer
        Season:
          type: integer
        SeasonType:
          type: integer
        StadiumID:
          type: integer
        Status:
          type: string
        TimeRemainingMinutes:
          type: integer
        TimeRemainingSeconds:
          type: integer
        Updated:
          type: string
    Penalty:
      properties:
        BenchPenaltyServedByPlayerID:
          type: integer
        Description:
          type: string
        DrawnByPlayerID:
          type: integer
        DrawnByTeamID:
          type: integer
        IsBenchPenalty:
          type: boolean
        PenalizedPlayerID:
          type: integer
        PenalizedTeamID:
          type: integer
        PenaltyID:
          type: integer
        PenaltyMinutes:
          type: integer
        PeriodID:
          type: integer
        Sequence:
          type: integer
        TimeRemainingMinutes:
          type: integer
        TimeRemainingSeconds:
          type: integer
    Period:
      properties:
        AwayScore:
          type: integer
        GameID:
          type: integer
        HomeScore:
          type: integer
        Name:
          type: string
        Penalties:
          items:
            $ref: "#/components/schemas/Penalty"
          type: array
        PeriodID:
          type: integer
        ScoringPlays:
          items:
            $ref: "#/components/schemas/ScoringPlay"
          type: array
    Play:
      properties:
        AwayTeamScore:
          type: integer
        Category:
          type: string
        ClockMinutes:
          type: integer
        ClockSeconds:
          type: integer
        Created:
          type: string
        Description:
          type: string
        FirstAssistedByPlayerID:
          type: integer
        HomeTeamScore:
          type: integer
        Opponent:
          type: string
        OpponentID:
          type: integer
        OpposingPlayerID:
          type: integer
        PeriodID:
          type: integer
        PeriodName:
          type: string
        PlayID:
          type: integer
        PlayerID:
          type: integer
        PowerPlayTeam:
          type: string
        PowerPlayTeamID:
          type: integer
        SecondAssistedByPlayerID:
          type: integer
        Sequence:
          type: integer
        Team:
          type: string
        TeamID:
          type: integer
        Type:
          type: string
        Updated:
          type: string
    PlayByPlay:
      properties:
        Game:
          $ref: "#/components/schemas/Game"
        Plays:
          items:
            $ref: "#/components/schemas/Play"
          type: array
    ScoringPlay:
      properties:
        AllowedByTeamID:
          type: integer
        AssistedByPlayerID1:
          type: integer
        AssistedByPlayerID2:
          type: integer
        AwayTeamScore:
          type: integer
        EmptyNet:
          type: boolean
        HomeTeamScore:
          type: integer
        PeriodID:
          type: integer
        PowerPlay:
          type: boolean
        ScoredByPlayerID:
          type: integer
        ScoredByTeamID:
          type: integer
        ScoringPlayID:
          type: integer
        Sequence:
          type: integer
        ShortHanded:
          type: boolean
        TimeRemainingMinutes:
          type: integer
        TimeRemainingSeconds:
          type: integer
