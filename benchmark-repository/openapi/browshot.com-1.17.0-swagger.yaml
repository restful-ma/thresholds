openapi: 3.0.0
info:
  contact:
    email: support@browshot.com
    name: API Support
    url: https://browshot.com/contact
  description: Take screenshots of any website in real time
  termsOfService: https://browshot.com/terms
  title: Browshot
  version: 1.17.0
  x-apisguru-categories:
    - tools
  x-logo:
    url: https://cdn.browshot.com/static/images/logo.png
  x-origin:
    - format: swagger
      url: https://raw.githubusercontent.com/juliensobrier/browshot-api-spec/master/browshot.yaml
      version: "2.0"
  x-providerName: browshot.com
security:
  - apiKeyQuery: []
paths:
  /account/info:
    get:
      description: Get information about your account.
      operationId: GetAccountInfo
      parameters:
        - description: level of information returned
          in: query
          name: details
          schema:
            type: integer
            minimum: 1
            maximum: 3
            default: 1
      responses:
        "200":
          description: Account information
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Account"
        default:
          description: Account not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccountError"
      summary: Get information about your account
      tags:
        - Account
      x-ms-trigger: single
  /batch/ceate:
    post:
      description: >
        Get hundreds or thousands of screenshots from a text file. You can use
        this API call or the dashboard. Unlike the other API calls, you must
        issue a POST request with the Content-Type "multipart/form-data" in
        order to upload the text file. The text file must contain the list of
        URLs to request, 1 URL per line. Failed screenshots will be tried up to
        3 times before giving up.
      operationId: CreateBatch
      parameters:
        - description: hosting option - s3 or browshot
          in: query
          name: hosting
          schema:
            type: string
            enum:
              - s3
        - description: maximum height of the thumbnail to host
          in: query
          name: hosting_height
          schema:
            type: integer
            minimum: 1
            maximum: 15000
        - description: maximum height of the thumbnail to host
          in: query
          name: hosting_width
          schema:
            type: integer
            minimum: 1
            maximum: 2000
        - description: scale of the thumbnail to host
          in: query
          name: hosting_scale
          schema:
            type: number
            format: float
            default: 1
        - description: S3 bucket to upload the screenshot or thumbnail (required for S3)
          in: query
          name: hosting_bucket
          schema:
            type: string
        - description: file name to use (for S3 only)
          in: query
          name: hosting_file
          schema:
            type: string
        - description: list of headers to add to the S3 object (for S3 only)
          in: query
          name: hosting_headers
          schema:
            type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                instance_id:
                  description: instance ID to use
                  type: integer
                file:
                  description: text file to use
                  type: string
                  format: binary
                size:
                  description: screenshots size - "screen" (default) or "page"
                  type: string
                  enum:
                    - screen
                    - page
                  default: screen
                name:
                  description: name of the batch
                  type: string
                width:
                  description: thumbnail width.
                  type: integer
                  minimum: 1
                  maximum: 2000
                  default: 1024
                height:
                  description: thumbnail height
                  type: integer
                  minimum: 1
                  maximum: 15000
                delay:
                  description: number of seconds to wait after the page has loaded. This is
                    used to let JavaScript run longer before taking the
                    screenshot. Use delay=0 to take screenshots faster.
                  type: integer
                  minimum: 0
                  maximum: 60
                  default: 5
                flash_delay:
                  description: number of seconds to wait after the page has loaded if Flash
                    elements are present. Use flash_delay=0 to take screenshots
                    faster.
                  type: integer
                  minimum: 0
                  maximum: 30
                  default: 10
                screen_width:
                  description: width of the browser window. For desktop browsers only.
                  type: integer
                  minimum: 1
                  maximum: 2000
                  default: 1024
                screen_height:
                  description: "height of the browser window. For desktop browsers only.
                    (Note: full-page screenshots can have a height of up to
                    15,000px)"
                  type: integer
                  minimum: 1
                  maximum: 2000
                  default: 768
                priority:
                  description: assign priority to the screenshot (for private instances
                    only)
                  type: integer
                  minimum: 1
                  maximum: 3
                referer:
                  description: use a custom referrer header - paid screenshots only
                  type: string
                post_data:
                  description: send a POST requests with post_data, useful for filling out
                    forms - paid screenshots only
                  type: string
                cookie:
                  description: set a cookie for the URL requested (see Custom POST Data,
                    Referer and Cookie) Cookies should be separated by a ; -
                    paid screenshots only
                  type: string
                script:
                  description: URL of javascript file to execute after the page load event
                  type: string
                details:
                  description: level of information available with screenshot/info
                  type: integer
                  minimum: 1
                  maximum: 3
                  default: 2
                html:
                  description: saves the HTML of the rendered page which can be retrieved
                    by the API call screenshot/html. This feature costs *1
                    credit* per screenshot.
                  type: integer
                  minimum: 0
                  maximum: 1
                  default: 0
                max_wait:
                  description: "maximum number of seconds to wait before triggering the
                    PageLoad event. Note that delay will still be used.
                    (default: 0 = disabled)"
                  type: integer
                  minimum: 0
                  maximum: 60
                  default: 0
                headers:
                  description: any custom HTTP headers. (Not supported with Internet
                    Explorer)
                  type: string
                format:
                  description: image as PNG or JPEG
                  type: string
                  enum:
                    - png
                    - jpeg
                  default: png
              required:
                - instance_id
      responses:
        "200":
          description: batch information
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/Batch"
                type: array
        default:
          description: Batch not created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BatchError"
      summary: Requests thousands of screenshtos at once
      tags:
        - Batch
      x-ms-trigger: none
  /batch/info:
    get:
      description: >
        Get the status of a batch requested through the API or through the
        dashboard.
      operationId: GetBatchInfo
      parameters:
        - description: batch ID
          in: query
          name: id
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: batch information
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Batch"
        default:
          description: Batch not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BatchError"
      summary: Get the batch status
      tags:
        - Batch
  /browser/info:
    get:
      description: Get information about a browser.
      operationId: GetBrowserInfo
      parameters:
        - description: browser ID
          in: query
          name: id
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Browser information
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Browser"
        default:
          description: Browser not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BrowserError"
      summary: Get information about a browser
      tags:
        - Browser
      x-ms-visibility: none
  /browser/list:
    get:
      description: Get all browsers.
      operationId: GetBrowsersInfo
      responses:
        "200":
          description: Instance information
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BrowserList"
        default:
          description: Account not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BrowserError"
      summary: Get all browsers
      tags:
        - Browser
      x-ms-visibility: none
  /instance/info:
    get:
      description: Get information about an instance.
      operationId: GetInstanceInfo
      parameters:
        - description: instance ID
          in: query
          name: id
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Instance information
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Instance"
        default:
          description: Account not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InstanceError"
      summary: Get information about an instance
      tags:
        - Instance
      x-ms-visibility: none
  /instance/list:
    get:
      description: Get all instances.
      operationId: GetInstancesInfo
      responses:
        "200":
          description: Instance information
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InstanceList"
        default:
          description: Account not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InstanceError"
      summary: Get all instances
      tags:
        - Instance
      x-ms-visibility: none
  /screenshot/create:
    get:
      description: >
        Screenshots requests to private and shared instances require a positive
        balance.


        *IMPORTANT*: Remember that you can only do 100 free screenshots per month. To used a premium instance, use instance_id=65 for example.
      operationId: CreateScreenshot
      parameters:
        - description: URL of the page to get a screenshot for
          in: query
          name: url
          required: true
          schema:
            type: string
        - description: instance ID to use
          in: query
          name: instance_id
          required: true
          schema:
            type: integer
        - description: screenshot size - "screen" (default) or "page"
          in: query
          name: size
          schema:
            type: string
            enum:
              - screen
              - page
            default: screen
        - description: use a previous screenshot (same URL, same instance) if it was done
            within <cache_value> seconds. The default value is 24hours. Specify
            cache=0 if you want a new screenshot.
          in: query
          name: cache
          schema:
            type: integer
            default: 86400
        - description: number of seconds to wait after the page has loaded. This is used to
            let JavaScript run longer before taking the screenshot. Use delay=0
            to take screenshots faster.
          in: query
          name: delay
          schema:
            type: integer
            minimum: 0
            maximum: 60
            default: 5
        - description: number of seconds to wait after the page has loaded if Flash
            elements are present. Use flash_delay=0 to take screenshots faster.
          in: query
          name: flash_delay
          schema:
            type: integer
            minimum: 0
            maximum: 30
            default: 10
        - description: width of the browser window. For desktop browsers only.
          in: query
          name: screen_width
          schema:
            type: integer
            minimum: 1
            maximum: 2000
            default: 1024
        - description: "height of the browser window. For desktop browsers only. (Note:
            full-page screenshots can have a height of up to 15,000px)"
          in: query
          name: screen_height
          schema:
            type: integer
            minimum: 1
            maximum: 2000
            default: 768
        - description: assign priority to the screenshot (for private instances only)
          in: query
          name: priority
          schema:
            type: integer
            minimum: 1
            maximum: 3
        - description: use a custom referrer header - paid screenshots only
          in: query
          name: referer
          schema:
            type: string
        - description: send a POST requests with post_data, useful for filling out forms -
            paid screenshots only
          in: query
          name: post_data
          schema:
            type: string
        - description: set a cookie for the URL requested (see Custom POST Data, Referer
            and Cookie) Cookies should be separated by a ; - paid screenshots
            only
          in: query
          name: cookie
          schema:
            type: string
        - description: URL of javascript file to execute after the page load event
          in: query
          name: script
          schema:
            type: string
        - description: level of information available with screenshot/info
          in: query
          name: details
          schema:
            type: integer
            minimum: 1
            maximum: 3
            default: 2
        - description: saves the HTML of the rendered page which can be retrieved by the
            API call screenshot/html. This feature costs *1 credit* per
            screenshot.
          in: query
          name: html
          schema:
            type: integer
            minimum: 0
            maximum: 1
            default: 0
        - description: "maximum number of seconds to wait before triggering the PageLoad
            event. Note that delay will still be used. (default: 0 = disabled)"
          in: query
          name: max_wait
          schema:
            type: integer
            minimum: 0
            maximum: 60
            default: 0
        - description: any custom HTTP headers. (Not supported with Internet Explorer)
          in: query
          name: headers
          schema:
            type: string
        - description: take multiple screenshots of the same page. This costs 1 additional
            credit for every 2 additional screenshots.
          in: query
          name: shots
          schema:
            type: integer
            minimum: 1
            maximum: 10
            default: 1
        - description: number of seconds between 2 screenshots
          in: query
          name: shot_interval
          schema:
            type: integer
            minimum: 1
            maximum: 10
            default: 5
        - description: hosting option - s3 or browshot
          in: query
          name: hosting
          schema:
            type: string
            enum:
              - s3
              - browshot
        - description: maximum height of the thumbnail to host
          in: query
          name: hosting_height
          schema:
            type: integer
            minimum: 1
            maximum: 15000
        - description: maximum height of the thumbnail to host
          in: query
          name: hosting_width
          schema:
            type: integer
            minimum: 1
            maximum: 2000
        - description: scale of the thumbnail to host
          in: query
          name: hosting_scale
          schema:
            type: number
            format: float
            default: 1
        - description: S3 bucket to upload the screenshot or thumbnail (required for S3)
          in: query
          name: hosting_bucket
          schema:
            type: string
        - description: file name to use (for S3 only)
          in: query
          name: hosting_file
          schema:
            type: string
        - description: list of headers to add to the S3 object (for S3 only)
          in: query
          name: hosting_headers
          schema:
            type: string
      responses:
        "200":
          description: Request accepted
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Screenshot"
        "403":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ScreenshotError"
      summary: Request a screenshot
      tags:
        - Screenshot
      x-ms-trigger: none
  /screenshot/delete:
    get:
      description: >
        You can delete details of your screenshots to remove any confidential
        information.
      operationId: DeleteScreenshot
      parameters:
        - description: screenshot ID
          in: query
          name: id
          required: true
          schema:
            type: integer
        - description: >
            data to remove. You can specify multiple of them (separated by a ,):
            *image* (image files), *url* (url requested), *metadata* (time
            added, time finished, post data, cookie and referer used for the
            screenshot), *all* (all data and files)
          in: query
          name: data
          schema:
            type: string
            default: image
      responses:
        "200":
          description: list of screenshot information
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/ScreenshotShort"
                type: array
        default:
          description: Screenshot not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ScreenshotError"
      summary: Delete screenshot data
      tags:
        - Screenshot
      x-ms-trigger: none
  /screenshot/host:
    get:
      description: You can host screenshots and thumbnails on your own S3 account or on
        Browshot.
      operationId: HostScreenshot
      parameters:
        - description: screenshot ID
          in: query
          name: id
          required: true
          schema:
            type: integer
        - description: "hosting option: s3 or browshot"
          in: query
          name: hosting
          required: true
          schema:
            type: string
            enum:
              - s3
              - browshot
        - description: width of the thumbnail
          in: query
          name: width
          schema:
            type: integer
            minimum: 1
            maximum: 2000
        - description: height of the thumbnail
          in: query
          name: height
          schema:
            type: integer
            minimum: 1
            maximum: 15000
        - description: scale of the thumbnail
          in: query
          name: scale
          schema:
            type: number
            format: double
            default: 1
        - description: S3 bucket to upload the screenshot or thumbnail - required with
            hosting=s3
          in: query
          name: bucket
          schema:
            type: string
        - description: file name to use - optional, used with hosting=s3
          in: query
          name: file
          schema:
            type: string
        - description: HTTP headers to add to your S3 object - optional, used with
            hosting=s3
          in: query
          name: headers
          schema:
            type: string
      responses:
        "200":
          description: list of screenshot information
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/ScreenshotHost"
                type: array
        default:
          description: Screenshot not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ScreenshotInfoError"
      summary: Host thumbnails on your own S3 account or on Browshot.
      tags:
        - Screenshot
      x-ms-trigger: none
  /screenshot/html:
    get:
      description: >
        Retrieve the HTML code of the rendered page. This API call should be
        used when html=1 was specified in the screenshot request.
      operationId: GetHTML
      parameters:
        - description: screenshot ID
          in: query
          name: id
          required: true
          schema:
            type: integer
      responses:
        default:
          description: HTML code
      summary: Get the HTML code
      tags:
        - Screenshot
  /screenshot/info:
    get:
      description: Once a screenshot has been requested, its status must be checked until
        it is either "error" or "finished".
      operationId: GetScreenshotInfo
      parameters:
        - description: screenshot ID received from /api/v1/screenshot/create
          in: query
          name: id
          required: true
          schema:
            type: integer
        - description: level of details about the screenshot and the page
          in: query
          name: details
          schema:
            type: integer
            minimum: 0
            maximum: 3
            default: 2
      responses:
        "200":
          description: Screenshot found
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/Screenshot"
                type: array
        default:
          description: Screenshot not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ScreenshotInfoError"
      summary: Query screenshot status
      tags:
        - Screenshot
  /screenshot/list:
    get:
      description: Get information about the last 100 screenshots requested.
      operationId: GetMultipleScreenshotsInfo
      parameters:
        - description: maximum number of screenshots' information to return
          in: query
          name: limit
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 100
        - description: get list of screenshot in a given status (error, finished,
            in_process)
          in: query
          name: status
          schema:
            type: string
            enum:
              - error
              - finished
              - in_process
      responses:
        "200":
          description: list of screenshot information
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/ScreenshotList"
                type: array
        default:
          description: Screenshot not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ScreenshotError"
      summary: Get information about screenshots
      tags:
        - Screenshot
      x-ms-visibility: none
  /screenshot/multiple:
    get:
      description: >
        Request multiple screenshots in one API call. The API call accepts all
        the parameters supported by screenshot/create.

        You can specify up to 10 URLs and 10 instances for a total of 100 screenshots in one API call.
      operationId: CreateMultipleScreenshots
      parameters:
        - description: URL of the page to get a screenshot for. You can specify multiple
            url parameters (up to 10).
          in: query
          name: url
          required: true
          schema:
            type: string
        - description: instance ID to use. You can specify multiple instance_id parameters
            (up to 10).
          in: query
          name: instance_id
          required: true
          schema:
            type: integer
        - description: screenshot size - "screen" (default) or "page"
          in: query
          name: size
          schema:
            type: string
            enum:
              - screen
              - page
            default: screen
        - description: use a previous screenshot (same URL, same instance) if it was done
            within <cache_value> seconds. The default value is 24hours. Specify
            cache=0 if you want a new screenshot.
          in: query
          name: cache
          schema:
            type: integer
            default: 86400
        - description: number of seconds to wait after the page has loaded. This is used to
            let JavaScript run longer before taking the screenshot. Use delay=0
            to take screenshots faster.
          in: query
          name: delay
          schema:
            type: integer
            minimum: 0
            maximum: 60
            default: 5
        - description: number of seconds to wait after the page has loaded if Flash
            elements are present. Use flash_delay=0 to take screenshots faster.
          in: query
          name: flash_delay
          schema:
            type: integer
            minimum: 0
            maximum: 30
            default: 10
        - description: width of the browser window. For desktop browsers only.
          in: query
          name: screen_width
          schema:
            type: integer
            minimum: 1
            maximum: 2000
            default: 1024
        - description: "height of the browser window. For desktop browsers only. (Note:
            full-page screenshots can have a height of up to 15,000px)"
          in: query
          name: screen_height
          schema:
            type: integer
            minimum: 1
            maximum: 2000
            default: 768
        - description: assign priority to the screenshot (for private instances only)
          in: query
          name: priority
          schema:
            type: integer
            minimum: 1
            maximum: 3
        - description: use a custom referrer header - paid screenshots only
          in: query
          name: referer
          schema:
            type: string
        - description: send a POST requests with post_data, useful for filling out forms -
            paid screenshots only
          in: query
          name: post_data
          schema:
            type: string
        - description: set a cookie for the URL requested (see Custom POST Data, Referer
            and Cookie) Cookies should be separated by a ; - paid screenshots
            only
          in: query
          name: cookie
          schema:
            type: string
        - description: URL of javascript file to execute after the page load event
          in: query
          name: script
          schema:
            type: string
        - description: level of information available with screenshot/info
          in: query
          name: details
          schema:
            type: integer
            minimum: 1
            maximum: 3
            default: 2
        - description: saves the HTML of the rendered page which can be retrieved by the
            API call screenshot/html. This feature costs *1 credit* per
            screenshot.
          in: query
          name: html
          schema:
            type: integer
            minimum: 0
            maximum: 1
            default: 0
        - description: "maximum number of seconds to wait before triggering the PageLoad
            event. Note that delay will still be used. (default: 0 = disabled)"
          in: query
          name: max_wait
          schema:
            type: integer
            minimum: 0
            maximum: 60
            default: 0
        - description: any custom HTTP headers. (Not supported with Internet Explorer)
          in: query
          name: headers
          schema:
            type: string
        - description: hosting option - s3 or browshot
          in: query
          name: hosting
          schema:
            type: string
            enum:
              - s3
              - browshot
        - description: maximum height of the thumbnail to host
          in: query
          name: hosting_height
          schema:
            type: integer
            minimum: 1
            maximum: 15000
        - description: maximum height of the thumbnail to host
          in: query
          name: hosting_width
          schema:
            type: integer
            minimum: 1
            maximum: 2000
        - description: scale of the thumbnail to host
          in: query
          name: hosting_scale
          schema:
            type: number
            format: float
            default: 1
        - description: S3 bucket to upload the screenshot or thumbnail (required for S3)
          in: query
          name: hosting_bucket
          schema:
            type: string
        - description: file name to use (for S3 only)
          in: query
          name: hosting_file
          schema:
            type: string
        - description: list of headers to add to the S3 object (for S3 only)
          in: query
          name: hosting_headers
          schema:
            type: string
      responses:
        "200":
          description: Request accepted
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ScreenshotList"
        "403":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ScreenshotError"
      summary: Request multiple screenshots
      tags:
        - Screenshot
      x-ms-trigger: none
  /screenshot/search:
    get:
      description: Search for screenshots of a specific URL.
      operationId: SearchScreenshot
      parameters:
        - description: look for a string matching the URL requested
          in: query
          name: url
          required: true
          schema:
            type: string
        - description: maximum number of screenshots' information to return
          in: query
          name: limit
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 50
        - description: get list of screenshot in a given status (error, finished,
            in_process)
          in: query
          name: status
          schema:
            type: string
            enum:
              - error
              - finished
              - in_process
      responses:
        "200":
          description: list of screenshot information
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/ScreenshotList"
                type: array
        default:
          description: Screenshot not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ScreenshotError"
      summary: Search for screenshots
      tags:
        - Screenshot
      x-ms-visibility: none
  /screenshot/share:
    get:
      description: >
        You can make your screenshots public, add notes, and share it with your
        friends and colleagues. Only screenshots which are successfully
        completed can be shared.n the thumbnail. You can take a 1024x768
        screenshot, crop it to 768x768, and get it scaled down to 300x300.
      operationId: ShareScreenshot
      parameters:
        - description: screenshot ID
          in: query
          name: id
          required: true
          schema:
            type: integer
        - description: note to add on the sharing page
          in: query
          name: note
          schema:
            type: string
      responses:
        "200":
          description: list of screenshot information
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/ScreenshotHost"
                type: array
        default:
          description: Screenshot not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ScreenshotInfoError"
      summary: Share a screenshot
      tags:
        - Screenshot
      x-ms-trigger: none
  /screenshot/thumbnail:
    get:
      description: >
        Unlike the other API calls, this API sends back the thumbnail as a PNG
        file, not JSON. The HTTP response code indicates whether the screenshot
        was successful (200), or incomplete (404) or failed (404). If the
        screenshot failed or is not finished, a default image "Not found" is
        sent.


        You can crop your screenshots. The crop is done first, then the thumbnail. You can take a 1024x768 screenshot, crop it to 768x768, and get it scaled down to 300x300.
      operationId: GetThumbnail
      parameters:
        - description: screenshot ID
          in: query
          name: id
          required: true
          schema:
            type: integer
        - description: width of the thumbnail
          in: query
          name: width
          schema:
            type: integer
            minimum: 1
            maximum: 2000
        - description: height of the thumbnail
          in: query
          name: height
          schema:
            type: integer
            minimum: 1
            maximum: 15000
        - description: scale of the thumbnail
          in: query
          name: scale
          schema:
            type: number
            format: double
            default: 1
        - description: zoom 1 to 100 percent
          in: query
          name: zoom
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 100
        - description: "Use fit to keep the original page ration, and fill to get a
            thumbnail for the exact width and height.  specified. If you provide
            both width and height, you need to specify the ratio: fit to keep
            the original width/height ratio (the thumbnail might be smaller than
            the specified width and height), or fill to crop the image if
            necessary."
          in: query
          name: ratio
          schema:
            type: string
            enum:
              - fit
              - fill
            default: fit
        - description: left edge of the area to be cropped
          in: query
          name: left
          schema:
            type: integer
            minimum: 0
            default: 0
        - description: right edge of the area to be cropped
          in: query
          name: right
          schema:
            type: integer
            minimum: 0
            default: 0
        - description: top edge of the area to be cropped
          in: query
          name: top
          schema:
            type: integer
            minimum: 0
            default: 0
        - description: bottom edge of the area to be cropped
          in: query
          name: bottom
          schema:
            type: integer
        - description: image as PNG or JPEG
          in: query
          name: format
          schema:
            type: string
            enum:
              - png
              - jpeg
            default: png
        - description: get the second or third screenshot if multiple screenshots were
            requested
          in: query
          name: shot
          schema:
            type: integer
            minimum: 1
            maximum: 10
            default: 1
        - description: JPEG quality factor (for JPEG thumbnails only)
          in: query
          name: quality
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 100
      responses:
        "200":
          description: thumbnail
        "404":
          description: Screenshot not found
      summary: Retrieve a thumbnail image
      tags:
        - Screenshot
      x-ms-trigger: none
servers:
  - url: https://api.browshot.com/api/v1
components:
  securitySchemes:
    apiKeyQuery:
      in: query
      name: key
      type: apiKey
  schemas:
    Account:
      properties:
        balance:
          description: number of credits left on your account
          type: integer
        browsers:
          description: list of custom browsers as returned by /api/v1/browser/list
          items:
            $ref: "#/components/schemas/Browser"
          type: array
        free_screenshots_left:
          description: number of free screenshots available for the current month
          type: integer
        hosting_browshot:
          default: 0
          description: 1 is your account is authorized to request hosting on Browshot, 0
            otherwise (default)
          maximum: 1
          minimum: 0
          type: integer
        instances:
          description: list of private instances as returned by /api/v1/instance/list
          items:
            $ref: "#/components/schemas/Instance"
          type: array
        private_instances:
          default: 0
          description: 1 is your account is authorized to create and use private instances,
            0 otherwise (default)
          maximum: 1
          minimum: 0
          type: integer
        screenshots:
          description: list of 10 latest screenshots requests as returned by
            /api/v1/screenshot/list
          items:
            $ref: "#/components/schemas/Screenshot"
          type: array
      required:
        - balance
        - free_screenshots_left
        - private_instances
        - hosting_browshot
      type: object
    AccountError:
      properties:
        error:
          description: description of the problem that occurred
          type: string
        status:
          description: status of the request - error
          type: string
      type: object
    Batch:
      properties:
        count:
          description: number of unique URLs in the batch
          type: integer
        failed:
          description: number of screenshots failed
          type: integer
        finished:
          description: time of batch completed (UNIX timestamp)
          type: integer
        id:
          description: batch ID
          type: integer
        processed:
          description: number of screenshots finishe
          type: integer
        started:
          description: time of processing (UNIX timestamp)
          type: integer
        status:
          description: status of the request - "in_queue", "processing", "finished", "error"
          enum:
            - in_queue
            - processing
            - finished
            - error
          type: string
        urls:
          description: URLs to download the batch
          items:
            type: string
          type: array
      type: object
    BatchError:
      properties:
        error:
          description: description of the problem that occurred
          type: string
        status:
          description: status of the request - "in_queue", "processing", "finished", "error"
          type: string
      type: object
    Browser:
      properties:
        flash:
          description: "Flash support: 1 if enabled, 0 if disabled"
          maximum: 1
          minimum: 0
          type: integer
        id:
          description: browser ID
          type: integer
        javascript:
          description: "JavaScript support: 1 if enabled, 0 if disabled"
          maximum: 1
          minimum: 0
          type: integer
        mobile:
          description: "Mobile browser: 1 if true, 0 if false"
          maximum: 1
          minimum: 0
          type: integer
        name:
          description: "browser name and version: Firefox 45, etc."
          type: string
      type: object
    BrowserError:
      properties:
        error:
          description: description of the problem that occurred
          type: string
        status:
          description: status of the request - error
          type: string
      type: object
    BrowserList:
      additionalProperties:
        $ref: "#/components/schemas/Browser"
      properties:
        default:
          type: integer
      type: object
    Instance:
      properties:
        browser:
          $ref: "#/components/schemas/Browser"
        country:
          description: instance's country of origin
          type: string
        height:
          description: screen height in pixels
          type: integer
        id:
          description: instance ID (required to requests screenshots)
          type: integer
        load:
          description: >
            instance load: 

            < 1: new screenshot requests will be processed immediately, 

            1-2: new screenshot requests will be processed in about two minutes, 

            2-3: new screenshot requests will be processed in about four minutes, 

            3-4: new screenshot requests will be processed in about six minutes, 

            etc.
          format: float
          type: number
        screenshot_cost:
          description: number of credits for each screenshot
          type: integer
        type:
          description: public, shared or private
          enum:
            - public
            - shared
            - private
          type: string
        width:
          description: screen width in pixels
          type: integer
      type: object
    InstanceError:
      properties:
        error:
          description: description of the problem that occurred
          type: string
        status:
          description: status of the request - error
          type: string
      type: object
    InstanceList:
      properties:
        free:
          items:
            $ref: "#/components/schemas/Instance"
          type: array
        private:
          items:
            $ref: "#/components/schemas/Instance"
          type: array
        shared:
          items:
            $ref: "#/components/schemas/Instance"
          type: array
      type: object
    Screenshot:
      properties:
        cookie:
          description: custom cookie used (see Custom POST Data, Referer and Cookie)
          type: string
        cost:
          description: number of credits spent for the screenshot
          type: integer
        delay:
          description: number of seconds to wait after page load
          type: integer
        details:
          description: level of details about the screenshot and the page
          maximum: 3
          minimum: 0
          type: integer
        error:
          description: description of the problem that occurred
          type: string
        final_url:
          description: URL of the screenshot (redirections can occur)
          type: string
        flash_delay:
          description: number of seconds to wait after page load if Flash elements are
            present
          type: integer
        height:
          description: screenshot height
          type: integer
        id:
          description: screenshot ID
          type: integer
        instance_id:
          description: instance ID used for the screenshot
          type: integer
        post_data:
          description: POST data sent (see Custom POST Data, Referer and Cookie)
          type: string
        priority:
          description: "priority given to the screenshot: high (1) to low (3)"
          maximum: 3
          minimum: 1
          type: integer
        referer:
          description: custom referrer used (see Custom POST Data, Referer and Cookie)
          type: string
        scale:
          description: image scale. Always 1 for desktop browsers; mobiles may change the
            scale (zoom in or zoom out) to fit the page on the screen
          format: double
          type: number
        screenshot_url:
          description: URL to download the screenshot
          format: string
        script:
          description: URL of optional javascript file executed after the page load event
          type: string
        shared_url:
          description: if the screenshot was shared, show the public URL
          type: string
        size:
          description: screenshot size requested
          enum:
            - screen
            - page
          type: string
        status:
          description: |
            status of the request: "in_queue", "processing", "finished", "error"
          enum:
            - in_queue
            - processing
            - finished
            - error
          type: string
        url:
          description: original URL requested
          type: string
        width:
          description: screenshot width
          type: integer
      required:
        - id
        - status
        - url
        - instance_id
      type: object
    ScreenshotError:
      properties:
        cost:
          description: number of credits taken
          type: number
        error:
          description: description of the problem that occurred
          type: string
        priority:
          description: priority given to the screenshot - high (1) to low (3)
          type: number
        status:
          description: status of the request - "in_queue", "processing", "finished", "error"
          type: string
      type: object
    ScreenshotHost:
      properties:
        id:
          description: screenshot ID
          type: integer
        status:
          description: |
            status of the request: "error", "ok" or "in_queue"
          enum:
            - error
            - ok
            - in_queue
          type: string
        url:
          description: URL to the hosted screenshot or thumbnail
          type: string
      type: object
    ScreenshotInfoError:
      properties:
        error:
          description: description of the problem that occurred
          type: string
        id:
          description: screenshot ID
          type: integer
        status:
          description: status of the request - "in_queue", "processing", "finished", "error"
          type: string
      type: object
    ScreenshotList:
      additionalProperties:
        $ref: "#/components/schemas/Screenshot"
      properties:
        default:
          type: number
      type: object
    ScreenshotShort:
      properties:
        id:
          description: screenshot ID
          type: integer
        status:
          description: |
            status of the request
          enum:
            - ok
            - error
          type: string
      type: object
