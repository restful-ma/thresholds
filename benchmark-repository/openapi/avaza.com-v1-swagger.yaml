openapi: 3.0.0
info:
  contact:
    x-twitter: AvazaHq
  description: "Welcome to the autogenerated documentation & test tool for Avaza's API.
    <br/><br/><strong>API Security & Authentication</strong><br/>Authentication
    options include OAuth2 Implicit and Authorization Code flows, and Personal
    Access Token. All connections should be encrypted over SSL/TLS <br/><br/>You
    can set up and manage your api authentication credentials from within your
    Avaza account. (requires Administrator permissions on your Avaza
    account).<br/><br/> OAuth2 Authorization endpoint:
    https://any.avaza.com/oauth2/authorize  <br/>OAuth2 Token endpoint:
    https://any.avaza.com/oauth2/token<br/>Base URL for subsequent API Requests:
    https://api.avaza.com/ <br/><br/>Blogpost about authenticating with Avaza's
    API:  https://www.avaza.com/avaza-api-oauth2-authentication/ <br/>Blogpost
    on using Avaza's webhooks:
    https://www.avaza.com/avaza-api-webhook-notifications/<br/>The OAuth flow
    currently issues Access Tokens that last 1 day, and Refresh tokens that last
    180 days<br/>The Api respects the security Roles assigned to the
    authenticating Avaza user and filters the data return appropriately.
    <br/><br><strong>Support</strong><br/>For API Support, and to request access
    please contact Avaza Support Team via our support chat.
    <br/><br/><strong>User Contributed Libraries:</strong><br/>Graciously
    contributed by 3rd party users like you. <br/>Note these are not tested or
    endorsesd by Avaza. We encourage you to review before use, and use at own
    risk.<br/> <ul><li> - <a target='blank'
    href='https://packagist.org/packages/debiprasad/oauth2-avaza'>PHP OAuth
    Client Package for Azava API (by Debiprasad Sahoo)</a></li></ul>"
  title: Avaza
  version: v1
  x-apisguru-categories:
    - collaboration
  x-logo:
    url: https://twitter.com/AvazaHq/profile_image?size=original
  x-origin:
    - format: swagger
      url: https://api.avaza.com/swagger/docs/v1
      version: "2.0"
  x-providerName: avaza.com
paths:
  /api/Account:
    get:
      operationId: Account_Get
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccountDetails"
            text/json:
              schema:
                $ref: "#/components/schemas/AccountDetails"
            application/xml:
              schema:
                $ref: "#/components/schemas/AccountDetails"
            text/xml:
              schema:
                $ref: "#/components/schemas/AccountDetails"
        "401":
          description: Unauthorized
      security:
        - oauth2:
            - read_account
      summary: Account Details
      tags:
        - Account
  /api/Company:
    get:
      operationId: Company_Get
      parameters:
        - in: query
          name: UpdatedAfter
          required: false
          schema:
            type: string
            format: date-time
        - description: Number of results per page
          in: query
          name: pageSize
          required: false
          schema:
            type: integer
            format: int32
        - description: 1 based page number to retrieve
          in: query
          name: pageNumber
          required: false
          schema:
            type: integer
            format: int32
        - in: query
          name: Sort
          required: false
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CompanyList"
            text/json:
              schema:
                $ref: "#/components/schemas/CompanyList"
            application/xml:
              schema:
                $ref: "#/components/schemas/CompanyList"
            text/xml:
              schema:
                $ref: "#/components/schemas/CompanyList"
        "401":
          description: Unauthorized
      security:
        - oauth2:
            - read_contacts
      summary: Gets list of Companies
      tags:
        - Company
    post:
      operationId: Company_Post
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NewCompany"
          text/json:
            schema:
              $ref: "#/components/schemas/NewCompany"
          application/xml:
            schema:
              $ref: "#/components/schemas/NewCompany"
          text/xml:
            schema:
              $ref: "#/components/schemas/NewCompany"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/NewCompany"
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Company"
            text/json:
              schema:
                $ref: "#/components/schemas/Company"
            application/xml:
              schema:
                $ref: "#/components/schemas/Company"
            text/xml:
              schema:
                $ref: "#/components/schemas/Company"
        "401":
          description: Unauthorized
      security:
        - oauth2:
            - write_contacts
      summary: Create a Company
      tags:
        - Company
    put:
      description: Requires CompanyID and a list of field names to update. The
        FieldsToUpdate field accepts a string array containing field names that
        should be updated.
      operationId: Company_Put
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateCompany"
          text/json:
            schema:
              $ref: "#/components/schemas/UpdateCompany"
          application/xml:
            schema:
              $ref: "#/components/schemas/UpdateCompany"
          text/xml:
            schema:
              $ref: "#/components/schemas/UpdateCompany"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/UpdateCompany"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Company"
            text/json:
              schema:
                $ref: "#/components/schemas/Company"
            application/xml:
              schema:
                $ref: "#/components/schemas/Company"
            text/xml:
              schema:
                $ref: "#/components/schemas/Company"
      security:
        - oauth2:
            - write_contacts
      summary: Update a Company record.
      tags:
        - Company
  "/api/Company/{id}":
    get:
      operationId: Company_GetByID
      parameters:
        - description: Company ID Number
          in: path
          name: id
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Company"
            text/json:
              schema:
                $ref: "#/components/schemas/Company"
            application/xml:
              schema:
                $ref: "#/components/schemas/Company"
            text/xml:
              schema:
                $ref: "#/components/schemas/Company"
        "401":
          description: Unauthorized
        "404":
          description: Not Found
      security:
        - oauth2:
            - read_contacts
      summary: Gets Company by Company ID
      tags:
        - Company
  /api/Contact:
    get:
      operationId: Contact_Get
      parameters:
        - in: query
          name: UpdatedAfter
          required: false
          schema:
            type: string
            format: date-time
        - description: Number of items per page (max 1000)
          in: query
          name: pageSize
          required: false
          schema:
            type: integer
            format: int32
        - description: Page to display. Starts from 1.
          in: query
          name: pageNumber
          required: false
          schema:
            type: integer
            format: int32
        - in: query
          name: Sort
          required: false
          schema:
            type: string
        - in: query
          name: CompanyIDFK
          required: false
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ContactList"
            text/json:
              schema:
                $ref: "#/components/schemas/ContactList"
            application/xml:
              schema:
                $ref: "#/components/schemas/ContactList"
            text/xml:
              schema:
                $ref: "#/components/schemas/ContactList"
        "401":
          description: Unauthorized
      security:
        - oauth2:
            - read_contacts
      summary: Gets list of Contacts
      tags:
        - Contact
    post:
      operationId: Contact_Post
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NewCompanyContact"
          text/json:
            schema:
              $ref: "#/components/schemas/NewCompanyContact"
          application/xml:
            schema:
              $ref: "#/components/schemas/NewCompanyContact"
          text/xml:
            schema:
              $ref: "#/components/schemas/NewCompanyContact"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/NewCompanyContact"
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CompanyContact"
            text/json:
              schema:
                $ref: "#/components/schemas/CompanyContact"
            application/xml:
              schema:
                $ref: "#/components/schemas/CompanyContact"
            text/xml:
              schema:
                $ref: "#/components/schemas/CompanyContact"
        "401":
          description: Unauthorized
      security:
        - oauth2:
            - write_contacts
      summary: Create a Contact
      tags:
        - Contact
  "/api/Contact/{id}":
    get:
      operationId: Contact_GetByID
      parameters:
        - description: Contact ID number
          in: path
          name: id
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CompanyContact"
            text/json:
              schema:
                $ref: "#/components/schemas/CompanyContact"
            application/xml:
              schema:
                $ref: "#/components/schemas/CompanyContact"
            text/xml:
              schema:
                $ref: "#/components/schemas/CompanyContact"
        "401":
          description: Unauthorized
        "404":
          description: Not Found
      security:
        - oauth2:
            - read_contacts
      summary: Gets Contact by Contact ID
      tags:
        - Contact
  /api/CreditNote:
    get:
      operationId: CreditNote_Get
      parameters:
        - in: query
          name: UpdatedAfter
          required: false
          schema:
            type: string
            format: date-time
        - description: Number of items per page (max 1000)
          in: query
          name: pageSize
          required: false
          schema:
            type: integer
            format: int32
        - description: Page to display. Starts from 1.
          in: query
          name: pageNumber
          required: false
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreditNoteList"
            text/json:
              schema:
                $ref: "#/components/schemas/CreditNoteList"
            application/xml:
              schema:
                $ref: "#/components/schemas/CreditNoteList"
            text/xml:
              schema:
                $ref: "#/components/schemas/CreditNoteList"
        "401":
          description: Unauthorized
      security:
        - oauth2:
            - read_financials
      summary: Gets list of CreditNotes
      tags:
        - CreditNote
  "/api/CreditNote/{id}":
    get:
      operationId: CreditNote_GetByID
      parameters:
        - description: Credit Note ID Number
          in: path
          name: id
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreditNote"
            text/json:
              schema:
                $ref: "#/components/schemas/CreditNote"
            application/xml:
              schema:
                $ref: "#/components/schemas/CreditNote"
            text/xml:
              schema:
                $ref: "#/components/schemas/CreditNote"
        "401":
          description: Unauthorized
        "404":
          description: Not Found
      security:
        - oauth2:
            - read_financials
      summary: Gets Credit Note by CreditNoteID
      tags:
        - CreditNote
  /api/Currency:
    get:
      operationId: Currency_Get
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CurrencyList"
            text/json:
              schema:
                $ref: "#/components/schemas/CurrencyList"
            application/xml:
              schema:
                $ref: "#/components/schemas/CurrencyList"
            text/xml:
              schema:
                $ref: "#/components/schemas/CurrencyList"
      summary: Gets list of Currencies
      tags:
        - Currency
  /api/Estimate:
    get:
      description: 'EstimateStatusCode values are: "Draft", "Sent", "Late", "Paid",
        "Partial", "Void"'
      operationId: Estimate_Get
      parameters:
        - in: query
          name: UpdatedAfter
          required: false
          schema:
            type: string
            format: date-time
        - description: Number of items per page (max 1000)
          in: query
          name: pageSize
          required: false
          schema:
            type: integer
            format: int32
        - description: Page to display. Starts from 1.
          in: query
          name: pageNumber
          required: false
          schema:
            type: integer
            format: int32
        - in: query
          name: Sort
          required: false
          schema:
            type: string
        - in: query
          name: CompanyIDFK
          required: false
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EstimateList"
            text/json:
              schema:
                $ref: "#/components/schemas/EstimateList"
            application/xml:
              schema:
                $ref: "#/components/schemas/EstimateList"
            text/xml:
              schema:
                $ref: "#/components/schemas/EstimateList"
        "401":
          description: Unauthorized
      security:
        - oauth2:
            - read_financials
      summary: Gets list of Estimates
      tags:
        - Estimate
  "/api/Estimate/{id}":
    get:
      operationId: Estimate_GetByID
      parameters:
        - description: Estimate Estimate ID number
          in: path
          name: id
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "401":
          description: Unauthorized
        "404":
          description: Not Found
      security:
        - oauth2:
            - read_financials
      summary: Gets Estimate by Estimate ID
      tags:
        - Estimate
  /api/Expense:
    get:
      operationId: Expense_Get
      parameters:
        - in: query
          name: UpdatedAfter
          required: false
          schema:
            type: string
            format: date-time
        - in: query
          name: ExpenseDateFrom
          required: false
          schema:
            type: string
            format: date-time
        - in: query
          name: ExpenseDateTo
          required: false
          schema:
            type: string
            format: date-time
        - in: query
          name: UserEmail
          required: false
          schema:
            type: string
        - in: query
          name: CategoryName
          required: false
          schema:
            type: string
        - in: query
          name: CustomerID
          required: false
          schema:
            type: integer
            format: int32
        - in: query
          name: ProjectID
          required: false
          schema:
            type: integer
            format: int32
        - in: query
          name: isChargeable
          required: false
          schema:
            type: boolean
        - in: query
          name: isInvoiced
          required: false
          schema:
            type: boolean
        - description: Number of items per page (max 1000)
          in: query
          name: pageSize
          required: false
          schema:
            type: integer
            format: int32
        - description: Page to display. Starts from 1.
          in: query
          name: pageNumber
          required: false
          schema:
            type: integer
            format: int32
        - in: query
          name: Sort
          required: false
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ExpenseList"
            text/json:
              schema:
                $ref: "#/components/schemas/ExpenseList"
            application/xml:
              schema:
                $ref: "#/components/schemas/ExpenseList"
            text/xml:
              schema:
                $ref: "#/components/schemas/ExpenseList"
        "401":
          description: Unauthorized
      security:
        - oauth2:
            - read_expenses
      summary: Gets list of Expenses
      tags:
        - Expense
    post:
      description: Create an Expense
      operationId: Expense_Post
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NewExpense"
          text/json:
            schema:
              $ref: "#/components/schemas/NewExpense"
          application/xml:
            schema:
              $ref: "#/components/schemas/NewExpense"
          text/xml:
            schema:
              $ref: "#/components/schemas/NewExpense"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/NewExpense"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ExpenseDetails"
            text/json:
              schema:
                $ref: "#/components/schemas/ExpenseDetails"
            application/xml:
              schema:
                $ref: "#/components/schemas/ExpenseDetails"
            text/xml:
              schema:
                $ref: "#/components/schemas/ExpenseDetails"
      security:
        - oauth2:
            - write_expenses
      summary: Create an Expense
      tags:
        - Expense
  "/api/Expense/{id}":
    get:
      operationId: Expense_GetByID
      parameters:
        - description: Expense ID number
          in: path
          name: id
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ExpenseDetails"
            text/json:
              schema:
                $ref: "#/components/schemas/ExpenseDetails"
            application/xml:
              schema:
                $ref: "#/components/schemas/ExpenseDetails"
            text/xml:
              schema:
                $ref: "#/components/schemas/ExpenseDetails"
        "401":
          description: Unauthorized
        "404":
          description: Not Found
      security:
        - oauth2:
            - read_expenses
      summary: Gets an Expense Entry by Expense ID
      tags:
        - Expense
  /api/Inventory:
    get:
      description: ""
      operationId: Inventory_Get
      parameters:
        - in: query
          name: UpdatedAfter
          required: false
          schema:
            type: string
            format: date-time
        - description: Number of items per page (max 1000)
          in: query
          name: pageSize
          required: false
          schema:
            type: integer
            format: int32
        - description: Page to display. Starts from 1.
          in: query
          name: pageNumber
          required: false
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InventoryList"
            text/json:
              schema:
                $ref: "#/components/schemas/InventoryList"
            application/xml:
              schema:
                $ref: "#/components/schemas/InventoryList"
            text/xml:
              schema:
                $ref: "#/components/schemas/InventoryList"
        "401":
          description: Unauthorized
      security:
        - oauth2:
            - read_financials
      summary: Gets list of Inventory
      tags:
        - Inventory
  "/api/Inventory/{id}":
    get:
      operationId: Inventory_GetByID
      parameters:
        - description: InventoryItem ID number
          in: path
          name: id
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "401":
          description: Unauthorized
        "404":
          description: Not Found
      security:
        - oauth2:
            - read_financials
      summary: Gets InventoryItem by InventoryItem ID
      tags:
        - Inventory
  /api/Invoice:
    get:
      description: 'TransactionStatusCode values are: "Draft", "Sent", "Late", "Paid",
        "Partial", "Void"'
      operationId: Invoice_Get
      parameters:
        - in: query
          name: UpdatedAfter
          required: false
          schema:
            type: string
            format: date-time
        - description: Number of items per page (max 1000)
          in: query
          name: pageSize
          required: false
          schema:
            type: integer
            format: int32
        - description: Page to display. Starts from 1.
          in: query
          name: pageNumber
          required: false
          schema:
            type: integer
            format: int32
        - in: query
          name: Sort
          required: false
          schema:
            type: string
        - in: query
          name: CompanyIDFK
          required: false
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvoiceList"
            text/json:
              schema:
                $ref: "#/components/schemas/InvoiceList"
            application/xml:
              schema:
                $ref: "#/components/schemas/InvoiceList"
            text/xml:
              schema:
                $ref: "#/components/schemas/InvoiceList"
        "401":
          description: Unauthorized
      security:
        - oauth2:
            - read_financials
      summary: Gets list of Invoices
      tags:
        - Invoice
    post:
      operationId: Invoice_Post
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NewInvoice"
          text/json:
            schema:
              $ref: "#/components/schemas/NewInvoice"
          application/xml:
            schema:
              $ref: "#/components/schemas/NewInvoice"
          text/xml:
            schema:
              $ref: "#/components/schemas/NewInvoice"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/NewInvoice"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Invoice"
            text/json:
              schema:
                $ref: "#/components/schemas/Invoice"
            application/xml:
              schema:
                $ref: "#/components/schemas/Invoice"
            text/xml:
              schema:
                $ref: "#/components/schemas/Invoice"
      security:
        - oauth2:
            - write_financials
      summary: Create a new draft invoice
      tags:
        - Invoice
  "/api/Invoice/{id}":
    get:
      operationId: Invoice_GetByID
      parameters:
        - description: Invoice Transaction ID number
          in: path
          name: id
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "401":
          description: Unauthorized
        "404":
          description: Not Found
      security:
        - oauth2:
            - read_financials
      summary: Gets Invoice by Invoice ID
      tags:
        - Invoice
  /api/Payment:
    get:
      operationId: Payment_Get
      parameters:
        - in: query
          name: UpdatedAfter
          required: false
          schema:
            type: string
            format: date-time
        - description: Number of items per page (max 1000)
          in: query
          name: pageSize
          required: false
          schema:
            type: integer
            format: int32
        - description: Page to display. Starts from 1.
          in: query
          name: pageNumber
          required: false
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PaymentList"
            text/json:
              schema:
                $ref: "#/components/schemas/PaymentList"
            application/xml:
              schema:
                $ref: "#/components/schemas/PaymentList"
            text/xml:
              schema:
                $ref: "#/components/schemas/PaymentList"
        "401":
          description: Unauthorized
      security:
        - oauth2:
            - read_financials
      summary: Gets list of Payments
      tags:
        - Payment
    post:
      operationId: Payment_Post
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NewPayment"
          text/json:
            schema:
              $ref: "#/components/schemas/NewPayment"
          application/xml:
            schema:
              $ref: "#/components/schemas/NewPayment"
          text/xml:
            schema:
              $ref: "#/components/schemas/NewPayment"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/NewPayment"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Payment"
            text/json:
              schema:
                $ref: "#/components/schemas/Payment"
            application/xml:
              schema:
                $ref: "#/components/schemas/Payment"
            text/xml:
              schema:
                $ref: "#/components/schemas/Payment"
      security:
        - oauth2:
            - write_financials
      summary: Create new Payment and optionally assign payment allocations to Invoices
      tags:
        - Payment
  "/api/Payment/{id}":
    get:
      operationId: Payment_GetByID
      parameters:
        - description: Invoice Transaction ID Number
          in: path
          name: id
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Payment"
            text/json:
              schema:
                $ref: "#/components/schemas/Payment"
            application/xml:
              schema:
                $ref: "#/components/schemas/Payment"
            text/xml:
              schema:
                $ref: "#/components/schemas/Payment"
        "401":
          description: Unauthorized
        "404":
          description: Not Found
      security:
        - oauth2:
            - read_financials
      summary: Gets Payment by Payment Transaction ID
      tags:
        - Payment
  /api/Project:
    get:
      operationId: Project_Get
      parameters:
        - description: Only show project records updated after a certain date (UTC)
          in: query
          name: UpdatedAfter
          required: false
          schema:
            type: string
            format: date-time
        - description: Number of items per page (max 1000)
          in: query
          name: pageSize
          required: false
          schema:
            type: integer
            format: int32
        - description: Page to display. Starts from 1.
          in: query
          name: pageNumber
          required: false
          schema:
            type: integer
            format: int32
        - description: 'A column to sort on. Current possible values: "DateUpdated",
            "DateCreated", "DateUpdated desc", "DateCreated desc"'
          in: query
          name: Sort
          required: false
          schema:
            type: string
        - description: Filter to the projects that the supplied UserID can add timesheets to
          in: query
          name: TimesheetUserID
          required: false
          schema:
            type: integer
            format: int32
        - description: Include Archived Projects in the results
          in: query
          name: includeArchived
          required: false
          schema:
            type: boolean
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProjectList"
            text/json:
              schema:
                $ref: "#/components/schemas/ProjectList"
            application/xml:
              schema:
                $ref: "#/components/schemas/ProjectList"
            text/xml:
              schema:
                $ref: "#/components/schemas/ProjectList"
      security:
        - oauth2:
            - read_projects
      summary: Gets list of Projects
      tags:
        - Project
    post:
      operationId: Project_Post
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NewProjectModel"
          text/json:
            schema:
              $ref: "#/components/schemas/NewProjectModel"
          application/xml:
            schema:
              $ref: "#/components/schemas/NewProjectModel"
          text/xml:
            schema:
              $ref: "#/components/schemas/NewProjectModel"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/NewProjectModel"
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProjectDetails"
            text/json:
              schema:
                $ref: "#/components/schemas/ProjectDetails"
            application/xml:
              schema:
                $ref: "#/components/schemas/ProjectDetails"
            text/xml:
              schema:
                $ref: "#/components/schemas/ProjectDetails"
        "401":
          description: Unauthorized
      security:
        - oauth2:
            - write_projects
      summary: Create a Project
      tags:
        - Project
  "/api/Project/{id}":
    get:
      operationId: Project_GetByID
      parameters:
        - description: Project ID number
          in: path
          name: id
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProjectDetails"
            text/json:
              schema:
                $ref: "#/components/schemas/ProjectDetails"
            application/xml:
              schema:
                $ref: "#/components/schemas/ProjectDetails"
            text/xml:
              schema:
                $ref: "#/components/schemas/ProjectDetails"
        "401":
          description: Unauthorized
        "404":
          description: Not Found
      security:
        - oauth2:
            - read_projects
      summary: Gets Project by Project ID
      tags:
        - Project
  /api/ProjectTimesheetCategory:
    get:
      operationId: ProjectTimesheetCategory_Get
      parameters:
        - description: Get categories filtered by ProjectID
          in: query
          name: ProjectID
          required: false
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProjectTimesheetCategoryList"
            text/json:
              schema:
                $ref: "#/components/schemas/ProjectTimesheetCategoryList"
            application/xml:
              schema:
                $ref: "#/components/schemas/ProjectTimesheetCategoryList"
            text/xml:
              schema:
                $ref: "#/components/schemas/ProjectTimesheetCategoryList"
        "401":
          description: Unauthorized
      security:
        - oauth2:
            - read_timesheets
      summary: Gets list of Project Timesheet Categories
      tags:
        - ProjectTimesheetCategory
  /api/ScheduleAssignment:
    get:
      description: Schedule assignments are per-day, and link to a parent Schedule Series.
      operationId: ScheduleAssignment_Get
      parameters:
        - description: Limit results to records updated after the specified date
          in: query
          name: UpdatedAfter
          required: false
          schema:
            type: string
            format: date-time
        - description: Filter for schedule assignement  that are  on or after a specific
            date
          in: query
          name: ScheduleDateFrom
          required: false
          schema:
            type: string
            format: date-time
        - description: Filter for schedules that are on or before a specific date
          in: query
          name: ScheduleDateTo
          required: false
          schema:
            type: string
            format: date-time
        - description: Filter to records for a particular Schedule Series
          in: query
          name: ScheduleSeriesID
          required: false
          schema:
            type: integer
            format: int64
        - description: The UserID of a schedule user to filter assignments for. Only api
            users with Admin role can see all schedules across all users. Users
            with ScheduleUser role can access their own ScheduleSeries.
          in: query
          name: UserID
          required: false
          schema:
            type: integer
            format: int32
        - description: The email of the user who has been scheduled
          in: query
          name: UserEmail
          required: false
          schema:
            type: string
        - description: Number of items per page (max 1000)
          in: query
          name: pageSize
          required: false
          schema:
            type: integer
            format: int32
        - description: Page to display. Starts from 1.
          in: query
          name: pageNumber
          required: false
          schema:
            type: integer
            format: int32
        - description: 'Optional sorting instruction. Currently possible values:
            "DateUpdated", "DateCreated", "DateUpdated desc", "DateCreated
            desc"'
          in: query
          name: Sort
          required: false
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ScheduleAssignmentList"
            text/json:
              schema:
                $ref: "#/components/schemas/ScheduleAssignmentList"
            application/xml:
              schema:
                $ref: "#/components/schemas/ScheduleAssignmentList"
            text/xml:
              schema:
                $ref: "#/components/schemas/ScheduleAssignmentList"
        "401":
          description: Unauthorized
      security:
        - oauth2:
            - read_schedule
      summary: Gets list of Schedule Assignments.
      tags:
        - ScheduleAssignment
  /api/ScheduleSeries:
    get:
      description: Schedule Series represents a strip of time assigned to a user over a
        date range, for a certain number of hours per day. They can be for Leave
        or for project work Bookings.
      operationId: ScheduleSeries_Get
      parameters:
        - description: Limit results to records updated after the specified date
          in: query
          name: UpdatedAfter
          required: false
          schema:
            type: string
            format: date-time
        - description: Filter for schedules that start on or after a specific date
          in: query
          name: ScheduleStartDateFrom
          required: false
          schema:
            type: string
            format: date-time
        - description: Filter for schedules that start on or before a specific date
          in: query
          name: ScheduleStartDateTo
          required: false
          schema:
            type: string
            format: date-time
        - description: Filter for schedules that end on or after a specific date
          in: query
          name: ScheduleEndDateFrom
          required: false
          schema:
            type: string
            format: date-time
        - description: Filter for schedules that end on or before a specific date
          in: query
          name: ScheduleEndDateTo
          required: false
          schema:
            type: string
            format: date-time
        - description: The UserID of a schedule user to filter assignments for. Only api
            users with Admin role can see all schedules across all users. Users
            with ScheduleUser role can access their own ScheduleSeries.
          in: query
          name: UserID
          required: false
          schema:
            type: integer
            format: int32
        - description: The email of the user who has been scheduled
          in: query
          name: UserEmail
          required: false
          schema:
            type: string
        - description: Filter for schedule records linked to a specific timesheeet category
          in: query
          name: TimeSheetCategoryID
          required: false
          schema:
            type: integer
            format: int32
        - description: Filter for schedule records with a specific timesheeet category name
            (exact string match)
          in: query
          name: TimeSheetCategoryName
          required: false
          schema:
            type: string
        - description: Filter to records of a particular leave type
          in: query
          name: LeaveTypeID
          required: false
          schema:
            type: integer
            format: int32
        - description: Filter to only include books linked to a specific project
          in: query
          name: ProjectID
          required: false
          schema:
            type: integer
            format: int32
        - description: Filter to only include records linked to projects, where that
            project belongs to a specific customer company
          in: query
          name: CompanyID
          required: false
          schema:
            type: integer
            format: int32
        - description: Number of items per page (max 1000)
          in: query
          name: pageSize
          required: false
          schema:
            type: integer
            format: int32
        - description: Page to display. Starts from 1.
          in: query
          name: pageNumber
          required: false
          schema:
            type: integer
            format: int32
        - description: 'Optional sorting instruction. Currently possible values:
            "DateUpdated", "DateCreated", "DateUpdated desc", "DateCreated
            desc"'
          in: query
          name: Sort
          required: false
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ScheduleSeriesList"
            text/json:
              schema:
                $ref: "#/components/schemas/ScheduleSeriesList"
            application/xml:
              schema:
                $ref: "#/components/schemas/ScheduleSeriesList"
            text/xml:
              schema:
                $ref: "#/components/schemas/ScheduleSeriesList"
        "401":
          description: Unauthorized
      security:
        - oauth2:
            - read_schedule
      summary: Gets list of Schedule Series
      tags:
        - ScheduleSeries
  /api/Section:
    get:
      operationId: Section_Get
      parameters:
        - description: Get sections for Project with ProjectID
          in: query
          name: ProjectID
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SectionList"
            text/json:
              schema:
                $ref: "#/components/schemas/SectionList"
            application/xml:
              schema:
                $ref: "#/components/schemas/SectionList"
            text/xml:
              schema:
                $ref: "#/components/schemas/SectionList"
        "401":
          description: Unauthorized
      security:
        - oauth2:
            - read_projects
      summary: Gets list of Sections
      tags:
        - Section
    post:
      operationId: Section_Post
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NewSection"
          text/json:
            schema:
              $ref: "#/components/schemas/NewSection"
          application/xml:
            schema:
              $ref: "#/components/schemas/NewSection"
          text/xml:
            schema:
              $ref: "#/components/schemas/NewSection"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/NewSection"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SectionDetails"
            text/json:
              schema:
                $ref: "#/components/schemas/SectionDetails"
            application/xml:
              schema:
                $ref: "#/components/schemas/SectionDetails"
            text/xml:
              schema:
                $ref: "#/components/schemas/SectionDetails"
      security:
        - oauth2:
            - write_projects
      summary: Create a Section
      tags:
        - Section
  /api/Task:
    get:
      operationId: Task_Get
      parameters:
        - description: Optional filter to records updated after a specific date.
          in: query
          name: UpdatedAfter
          required: false
          schema:
            type: string
            format: date-time
        - description: Number of items per page. Defaults to 20.
          in: query
          name: pageSize
          required: false
          schema:
            type: integer
            format: int32
        - description: Page to display. Starts from 1. Defaults to 1
          in: query
          name: pageNumber
          required: false
          schema:
            type: integer
            format: int32
        - description: 'Optional sorting instruction. Currently possible values:
            "DateUpdated", "DateCreated", "DateUpdated desc", "DateCreated
            desc", "SectionTitle", "Title"'
          in: query
          name: Sort
          required: false
          schema:
            type: string
        - description: Optional filter to only display tasks linked to a Task Status where
            isComplete=false, or where isComplete=true
          in: query
          name: isComplete
          required: false
          schema:
            type: boolean
        - description: Optional filter to only display tasks belonging to a specific
            ProjectID
          in: query
          name: ProjectID
          required: false
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TaskList"
            text/json:
              schema:
                $ref: "#/components/schemas/TaskList"
            application/xml:
              schema:
                $ref: "#/components/schemas/TaskList"
            text/xml:
              schema:
                $ref: "#/components/schemas/TaskList"
        "401":
          description: Unauthorized
      security:
        - oauth2:
            - read_projects
      summary: Gets list of Tasks
      tags:
        - Task
    post:
      operationId: Task_Post
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NewTask"
          text/json:
            schema:
              $ref: "#/components/schemas/NewTask"
          application/xml:
            schema:
              $ref: "#/components/schemas/NewTask"
          text/xml:
            schema:
              $ref: "#/components/schemas/NewTask"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/NewTask"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TaskDetails"
            text/json:
              schema:
                $ref: "#/components/schemas/TaskDetails"
            application/xml:
              schema:
                $ref: "#/components/schemas/TaskDetails"
            text/xml:
              schema:
                $ref: "#/components/schemas/TaskDetails"
      security:
        - oauth2:
            - write_projects
      summary: Create a Task
      tags:
        - Task
    put:
      description: Requires TaskID and a list of field names to update. The FieldsToUpdate
        field accepts a string array containing field names that should be
        updated.
      operationId: Task_Put
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateTask"
          text/json:
            schema:
              $ref: "#/components/schemas/UpdateTask"
          application/xml:
            schema:
              $ref: "#/components/schemas/UpdateTask"
          text/xml:
            schema:
              $ref: "#/components/schemas/UpdateTask"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/UpdateTask"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TaskDetails"
            text/json:
              schema:
                $ref: "#/components/schemas/TaskDetails"
            application/xml:
              schema:
                $ref: "#/components/schemas/TaskDetails"
            text/xml:
              schema:
                $ref: "#/components/schemas/TaskDetails"
      security:
        - oauth2:
            - write_projects
      summary: Update a Task.
      tags:
        - Task
  "/api/Task/{id}":
    get:
      operationId: Task_GetByID
      parameters:
        - description: Task ID number
          in: path
          name: id
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TaskDetails"
            text/json:
              schema:
                $ref: "#/components/schemas/TaskDetails"
            application/xml:
              schema:
                $ref: "#/components/schemas/TaskDetails"
            text/xml:
              schema:
                $ref: "#/components/schemas/TaskDetails"
        "401":
          description: Unauthorized
        "404":
          description: Not Found
      security:
        - oauth2:
            - read_projects
      summary: Gets Task by Task ID
      tags:
        - Task
  /api/TaskStatus:
    get:
      operationId: TaskStatus_Get
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TaskStatusList"
            text/json:
              schema:
                $ref: "#/components/schemas/TaskStatusList"
            application/xml:
              schema:
                $ref: "#/components/schemas/TaskStatusList"
            text/xml:
              schema:
                $ref: "#/components/schemas/TaskStatusList"
      security:
        - oauth2:
            - read_projects
      summary: Gets list of Task Statuses
      tags:
        - TaskStatus
  /api/TaskType:
    get:
      operationId: TaskType_Get
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TaskTypeList"
            text/json:
              schema:
                $ref: "#/components/schemas/TaskTypeList"
            application/xml:
              schema:
                $ref: "#/components/schemas/TaskTypeList"
            text/xml:
              schema:
                $ref: "#/components/schemas/TaskTypeList"
      security:
        - oauth2:
            - read_projects
      summary: Gets list of Task Types
      tags:
        - TaskType
  /api/Tax:
    get:
      operationId: Tax_Get
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TaxList"
            text/json:
              schema:
                $ref: "#/components/schemas/TaxList"
            application/xml:
              schema:
                $ref: "#/components/schemas/TaxList"
            text/xml:
              schema:
                $ref: "#/components/schemas/TaxList"
      security:
        - oauth2:
            - read_financials
      summary: Get List of Taxes configured in the Avaza account.
      tags:
        - Tax
  /api/Timesheet:
    get:
      operationId: Timesheet_Get
      parameters:
        - in: query
          name: UpdatedAfter
          required: false
          schema:
            type: string
            format: date-time
        - in: query
          name: EntryDateFrom
          required: false
          schema:
            type: string
            format: date-time
        - in: query
          name: EntryDateTo
          required: false
          schema:
            type: string
            format: date-time
        - description: The UserID of a timesheet user to filter timesheets for. Only api
            users with certain higher roles can see timesheets across multiple
            users.
          in: query
          name: UserID
          required: false
          schema:
            type: integer
            format: int32
        - in: query
          name: UserEmail
          required: false
          schema:
            type: string
        - in: query
          name: CategoryName
          required: false
          schema:
            type: string
        - in: query
          name: ProjectID
          required: false
          schema:
            type: integer
            format: int32
        - in: query
          name: isBillable
          required: false
          schema:
            type: boolean
        - in: query
          name: isInvoiced
          required: false
          schema:
            type: boolean
        - in: query
          name: isTimerRunning
          required: false
          schema:
            type: boolean
        - description: Number of items per page (max 1000)
          in: query
          name: pageSize
          required: false
          schema:
            type: integer
            format: int32
        - description: Page to display. Starts from 1.
          in: query
          name: pageNumber
          required: false
          schema:
            type: integer
            format: int32
        - description: 'Optional sorting instruction. Currently possible values:
            "DateUpdated", "DateCreated", "DateUpdated desc", "DateCreated
            desc","EntryDate", "EntryDate desc",
            "StartTimeLocal","StartTimeLocal desc", "TimeSheetEntryID",
            "TimeSheetEntryID desc"'
          in: query
          name: Sort
          required: false
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TimesheetList"
            text/json:
              schema:
                $ref: "#/components/schemas/TimesheetList"
            application/xml:
              schema:
                $ref: "#/components/schemas/TimesheetList"
            text/xml:
              schema:
                $ref: "#/components/schemas/TimesheetList"
        "401":
          description: Unauthorized
      security:
        - oauth2:
            - read_timesheets
      summary: Gets list of Timsheets
      tags:
        - Timesheet
    post:
      operationId: Timesheet_Post
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NewTimesheet"
          text/json:
            schema:
              $ref: "#/components/schemas/NewTimesheet"
          application/xml:
            schema:
              $ref: "#/components/schemas/NewTimesheet"
          text/xml:
            schema:
              $ref: "#/components/schemas/NewTimesheet"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/NewTimesheet"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TimesheetDetails"
            text/json:
              schema:
                $ref: "#/components/schemas/TimesheetDetails"
            application/xml:
              schema:
                $ref: "#/components/schemas/TimesheetDetails"
            text/xml:
              schema:
                $ref: "#/components/schemas/TimesheetDetails"
      security:
        - oauth2:
            - write_timesheets
      summary: Create a new Timesheet Entry
      tags:
        - Timesheet
    put:
      description: The FieldsToUpdate field expects a string array collection of the field
        names you would like updated. Valid fields to update inlcude
        "ProjectIDFK", "TimeSheetCategoryIDFK", "TaskIDFK", "Duration",
        "EntryDate", "Notes", "hasStartEndTime". If you intend to provide
        start/end times on timesheets, this is achieved by including the start
        time in the EntryDate field (Iso date format), along with a Duration
        (decimal format).
      operationId: Timesheet_Put
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateTimesheetModel"
          text/json:
            schema:
              $ref: "#/components/schemas/UpdateTimesheetModel"
          application/xml:
            schema:
              $ref: "#/components/schemas/UpdateTimesheetModel"
          text/xml:
            schema:
              $ref: "#/components/schemas/UpdateTimesheetModel"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/UpdateTimesheetModel"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TimesheetDetails"
            text/json:
              schema:
                $ref: "#/components/schemas/TimesheetDetails"
            application/xml:
              schema:
                $ref: "#/components/schemas/TimesheetDetails"
            text/xml:
              schema:
                $ref: "#/components/schemas/TimesheetDetails"
      security:
        - oauth2:
            - write_timesheets
      summary: Update a Timesheet
      tags:
        - Timesheet
  "/api/Timesheet/{id}":
    delete:
      operationId: Timesheet_Delete
      parameters:
        - description: The TimesheetEntryID of the Timesheet Entry
          in: path
          name: id
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
            application/xml:
              schema:
                type: object
            text/xml:
              schema:
                type: object
      security:
        - oauth2:
            - write_timesheets
      summary: Delete a Timesheet Entry
      tags:
        - Timesheet
    get:
      operationId: Timesheet_GetByID
      parameters:
        - description: Timesheet ID number
          in: path
          name: id
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TimesheetDetails"
            text/json:
              schema:
                $ref: "#/components/schemas/TimesheetDetails"
            application/xml:
              schema:
                $ref: "#/components/schemas/TimesheetDetails"
            text/xml:
              schema:
                $ref: "#/components/schemas/TimesheetDetails"
        "401":
          description: Unauthorized
        "404":
          description: Not Found
      security:
        - oauth2:
            - read_timesheets
      summary: Gets a Timesheet Entry by Timesheet ID
      tags:
        - Timesheet
  /api/TimesheetSubmission:
    post:
      description: Either provide a a specific Day (WholeDayOf) or any day in a Week
        (WholeWeekOf) to submit all draft timesheets in that day or week
      operationId: TimesheetSubmission_Post
      parameters:
        - description: Send email alerts to timesheet approvers. Defaults to true
          in: query
          name: SendNotifications
          required: false
          schema:
            type: boolean
        - description: A date (yyyy-MM-dd) that falls within  a Week to have all timesheets
            in that week submitted. Respects the First Day of Week setting in
            your account Timesheet Settings to determine the week range.
          in: query
          name: WholeWeekOf
          required: false
          schema:
            type: string
            format: date-time
        - description: A date (yyyy-MM-dd) to submit all timesheets on this day
          in: query
          name: WholeDayOf
          required: false
          schema:
            type: string
            format: date-time
        - description: The user to submit timesheets for. Defaults to current user. Only
            allowed to be different from the current user when the current user
            has rights to Impersonate other users.
          in: query
          name: UserID
          required: false
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
            application/xml:
              schema:
                type: object
            text/xml:
              schema:
                type: object
      security:
        - oauth2:
            - write_timesheets
      summary: Submit Timesheets for Approval.
      tags:
        - TimesheetSubmission
  /api/TimesheetTimer:
    get:
      operationId: TimesheetTimer_GetRunningTimer
      parameters:
        - description: Optional - User ID number if impersonating a different user.
            Otherwise assumes the current user. Only users with certain security
            roles have permission to impersonate other users
          in: query
          name: UserID
          required: false
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
            application/xml:
              schema:
                type: object
            text/xml:
              schema:
                type: object
        "401":
          description: Unauthorized
        "404":
          description: Not Found
      security:
        - oauth2:
            - read_timesheets
      summary: Gets the  Running Timer if there is one for a user.
      tags:
        - TimesheetTimer
  "/api/TimesheetTimer/{id}":
    delete:
      operationId: TimesheetTimer_StopTimer
      parameters:
        - description: The ID of the existing timesheet entry that needs its timer stopped
          in: path
          name: id
          required: true
          schema:
            type: integer
            format: int64
        - description: Optional - User ID number if impersonating a different user.
            Otherwise assumes the current user. Only users with certain security
            roles have permission to impersonate other users
          in: query
          name: UserID
          required: false
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
            application/xml:
              schema:
                type: object
            text/xml:
              schema:
                type: object
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "404":
          description: Not Found
      security:
        - oauth2:
            - write_timesheets
      summary: Stop the timer running on an existing Timesheet Entry
      tags:
        - TimesheetTimer
    post:
      operationId: TimesheetTimer_StartTimer
      parameters:
        - description: The ID of the existing timesheet entry on which to start a timer
          in: path
          name: id
          required: true
          schema:
            type: integer
            format: int64
        - description: Optional - User ID number if impersonating a different user.
            Otherwise assumes the current user. Only users with certain security
            roles have permission to impersonate other users
          in: query
          name: UserID
          required: false
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
            application/xml:
              schema:
                type: object
            text/xml:
              schema:
                type: object
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "404":
          description: Not Found
      security:
        - oauth2:
            - write_timesheets
      summary: Starts a Timer running on an existing Timesheet Entry
      tags:
        - TimesheetTimer
  /api/UserProfile:
    get:
      description: Admin and Invoice Managers can see all. Other users are limited to
        seeing their own profile.
      operationId: UserProfile_Get
      parameters:
        - description: Optional list of comma separated role codes to filter users by (e.g.
            "TimesheetUser,Admin")
          in: query
          name: Roles
          required: false
          schema:
            type: string
        - in: query
          name: Tags
          required: false
          schema:
            type: string
        - description: Optional boolean (true/false) to filter to only show current
            authenticated user (always true for non Admin/InvoiceManager users)
          in: query
          name: CurrentUserOnly
          required: false
          schema:
            type: boolean
        - description: Optionally filter by Company ID
          in: query
          name: CompanyIDFK
          required: false
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserList"
            text/json:
              schema:
                $ref: "#/components/schemas/UserList"
            application/xml:
              schema:
                $ref: "#/components/schemas/UserList"
            text/xml:
              schema:
                $ref: "#/components/schemas/UserList"
      security:
        - oauth2:
            - read_users
      summary: Get Collection of Users who have roles in the current Avaza account.
      tags:
        - UserProfile
  /api/Webhook:
    delete:
      operationId: Webhook_DeleteByUrl
      parameters:
        - description: Target URL that should be used to delete subscriptions
          in: query
          name: target_url
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Subscription Deleted OK
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
            application/xml:
              schema:
                type: object
            text/xml:
              schema:
                type: object
        "401":
          description: Unauthorized
      security:
        - oauth2:
            - webhook_notifications
      summary: Delete webhook subscription by URL
      tags:
        - Webhook
    get:
      operationId: Webhook_Get
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WebhookList"
            text/json:
              schema:
                $ref: "#/components/schemas/WebhookList"
            application/xml:
              schema:
                $ref: "#/components/schemas/WebhookList"
            text/xml:
              schema:
                $ref: "#/components/schemas/WebhookList"
      security:
        - oauth2:
            - webhook_notifications
      summary: Get list of Webhook Subscriptions
      tags:
        - Webhook
    post:
      description: 'When you receive a webhook, you should respond with Http 200 OK Status
        Code, otherwise we will retry. To create a webhook, you need both the
        webhook_notifications scope, as well as the scope for the required
        entity being monitored.  Event values are: "company_created",
        "company_deleted", "company_updated", "contact_created",
        "contact_deleted", "contact_updated", "invoice_created",
        "invoice_sent","invoice_updated","invoice_deleted", "project_created",
        "project_deleted", "project_updated", "task_created",
        "task_updated","task_deleted", "timesheet_created", "timesheet_deleted",
        "timesheet_updated".  You can subscribe to any webhook, but you will
        only receive notifications for data appropriate to the roles of your
        user account. There is an optional  Secret parameter (string 255 char
        max). This allows for webhook authentication. If provided, the Secret
        will be BASE 64 encoded and passed with notications as a basic
        authentication http header. i.e. Authorization Basic [BASE64 of
        Secret]"'
      operationId: Webhook_Post
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateSubscription"
          text/json:
            schema:
              $ref: "#/components/schemas/CreateSubscription"
          application/xml:
            schema:
              $ref: "#/components/schemas/CreateSubscription"
          text/xml:
            schema:
              $ref: "#/components/schemas/CreateSubscription"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/CreateSubscription"
        required: true
      responses:
        "201":
          description: Subscription created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SubscribeResult"
            text/json:
              schema:
                $ref: "#/components/schemas/SubscribeResult"
            application/xml:
              schema:
                $ref: "#/components/schemas/SubscribeResult"
            text/xml:
              schema:
                $ref: "#/components/schemas/SubscribeResult"
        "401":
          description: Unauthorized
        "409":
          description: Duplicate subscription already exists
      security:
        - oauth2:
            - webhook_notifications
            - read_contacts
            - read_account
            - read_users
            - read_financials
            - read_projects
            - read_schedule
            - read_timesheets
            - read_expenses
            - write_contacts
            - write_account
            - write_users
            - write_financials
            - write_projects
            - write_schedule
            - write_timesheets
            - write_expenses
      summary: Subscribe to Webhook. On success, returns ID of webhook subscription.
      tags:
        - Webhook
  "/api/Webhook/{id}":
    delete:
      operationId: Webhook_Delete
      parameters:
        - description: Subscription id to be deleted
          in: path
          name: id
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Subscription deleted ok
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
            application/xml:
              schema:
                type: object
            text/xml:
              schema:
                type: object
        "401":
          description: Unauthorized
      security:
        - oauth2:
            - webhook_notifications
      summary: Delete Webhook Subscription by ID
      tags:
        - Webhook
servers:
  - url: https://api.avaza.com
components:
  securitySchemes:
    oauth2:
      description: OAuth2 Implicit Grant
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://any.avaza.com/oauth2/authorize
          scopes:
            read_account: Read access to Account metadata
            read_contacts: Read access to Customers, Contacts
            read_expenses: Read access to Expense Details
            read_financials: Read access to Estimates, Invoices, Payments, Credit Notes
            read_projects: Read access to Projects, Project Settings, Tasks
            read_schedule: Read access to Schedule Details
            read_timesheets: Read access to Timesheet Details
            read_users: Read access to User Profiles
            webhook_notifications: Read access to webhook notification events
            write_account: Write access to Account metadata
            write_contacts: Write access to Customers, Contacts
            write_expenses: Write access to Expense module
            write_financials: Write access to Estimates, Invoices, Payments, Credit Notes
            write_projects: Write access to Projects, Project Settings, Tasks
            write_schedule: Write access to Schedule module
            write_timesheets: Write access to Timesheets module
            write_users: Write access to User Profiles
  schemas:
    AccountDetails:
      properties:
        AccountID:
          format: int32
          type: integer
        AllowHidingCompletedTasksOnTimesheet:
          type: boolean
        CompanyName:
          type: string
        CurrentServerTimeISO:
          description: 'Format: ISO "YYYY-MM-DD HH:mm:ss.SSS"'
          type: string
        LockApprovedTimesheets:
          type: boolean
        Subdomain:
          type: string
        TimesheetDayOfWeek:
          format: int32
          type: integer
        TimesheetDisplayFormatCode:
          type: string
        WeeklyTimesheetReminder:
          type: boolean
        has24HourTimesheetFormat:
          type: boolean
        hasStartEndTimesheets:
          type: boolean
      type: object
    AccountTaskTypeDetails:
      properties:
        AccountTaskTypeID:
          format: int32
          type: integer
        Icon:
          type: string
        IconType:
          type: string
        Name:
          type: string
        isDefault:
          type: boolean
      type: object
    Company:
      properties:
        BillingAddress:
          type: string
        BillingAddressCity:
          type: string
        BillingAddressLine:
          type: string
        BillingAddressPostCode:
          type: string
        BillingAddressState:
          type: string
        BillingCountryCode:
          type: string
        Comments:
          type: string
        CompanyID:
          format: int32
          type: integer
        CompanyName:
          type: string
        Contacts:
          items:
            $ref: "#/components/schemas/CompanyContact"
          type: array
        CurrencyCode:
          type: string
        DateCreated:
          format: date-time
          type: string
        DateUpdated:
          format: date-time
          type: string
        DefaultTradingTermIDFK:
          format: int32
          type: integer
        Fax:
          type: string
        Phone:
          type: string
        TaxNumber:
          type: string
        website:
          type: string
      type: object
    CompanyContact:
      properties:
        CompanyIDFK:
          format: int32
          type: integer
        CompanyName:
          type: string
        ContactID:
          format: int32
          type: integer
        DateCreated:
          format: date-time
          type: string
        DateUpdated:
          format: date-time
          type: string
        Email:
          type: string
        Firstname:
          type: string
        Lastname:
          type: string
        Mobile:
          type: string
        Phone:
          type: string
        PositionTitle:
          type: string
        TimeZone:
          type: string
      type: object
    CompanyList:
      properties:
        Companies:
          items:
            $ref: "#/components/schemas/Company"
          type: array
        PageNumber:
          format: int32
          type: integer
        PageSize:
          format: int32
          type: integer
        TotalCount:
          format: int32
          type: integer
      type: object
    ContactList:
      properties:
        Contacts:
          items:
            $ref: "#/components/schemas/CompanyContact"
          type: array
        PageNumber:
          format: int32
          type: integer
        PageSize:
          format: int32
          type: integer
        TotalCount:
          format: int32
          type: integer
      type: object
    CreateSubscription:
      description: New Subscription to be Created
      properties:
        event:
          description: "The event code to be notified about. Possible values:
            company_created, contact_created, invoice_created, invoice_sent,
            project_created, task_created"
          type: string
        secret:
          description: Optional Secret string (255 char max). If provided, the secret will
            be BASE 64 encoded and used as a basic authentication http header
            with webhook notifications. i.e. Authorization Basic [BASE64 of
            Secret]"
          type: string
        target_url:
          description: The URL that should be notified of the event.
          type: string
      required:
        - target_url
        - event
      type: object
    CreditNote:
      properties:
        Balance:
          format: double
          type: number
        CreditNoteAllocations:
          items:
            $ref: "#/components/schemas/CreditNoteAllocation"
          type: array
        CreditNoteLineItems:
          items:
            $ref: "#/components/schemas/CreditNoteLineItem"
          type: array
        CreditNoteNumber:
          type: string
        CurrencyCode:
          type: string
        CustomerIDFK:
          format: int32
          type: integer
        DateCreated:
          format: date-time
          type: string
        DateIssued:
          format: date-time
          type: string
        DateUpdated:
          format: date-time
          type: string
        Notes:
          type: string
        TotalAmount:
          format: double
          type: number
        TransactionID:
          format: int64
          type: integer
        TransactionPrefix:
          type: string
        TransactionStatusCode:
          type: string
      type: object
    CreditNoteAllocation:
      properties:
        AllocationAmount:
          format: double
          type: number
        AllocationDate:
          format: date-time
          type: string
        CreditNoteTransactionIDFK:
          format: int64
          type: integer
        InvoiceTransactionIDFK:
          format: int64
          type: integer
        TransactionAllocationID:
          format: int64
          type: integer
      type: object
    CreditNoteLineItem:
      properties:
        Amount:
          format: double
          type: number
        Description:
          type: string
        Discount:
          format: double
          type: number
        Quantity:
          format: double
          type: number
        TaxAmount:
          format: double
          type: number
        TaxIDFK:
          format: int32
          type: integer
        TransactionLineItemID:
          format: int64
          type: integer
        UnitPrice:
          format: double
          type: number
      type: object
    CreditNoteList:
      properties:
        CreditNotes:
          items:
            $ref: "#/components/schemas/CreditNote"
          type: array
        PageNumber:
          format: int32
          type: integer
        PageSize:
          format: int32
          type: integer
        TotalCount:
          format: int32
          type: integer
      type: object
    Currency:
      properties:
        CurrencyCode:
          type: string
        DecimalPlaces:
          format: int32
          type: integer
      type: object
    CurrencyList:
      properties:
        Currencies:
          items:
            $ref: "#/components/schemas/Currency"
          type: array
      type: object
    EstimateDetails:
      properties:
        AccountIDFK:
          format: int32
          type: integer
        Balance:
          format: double
          type: number
        CompanyIDFK:
          format: int32
          type: integer
        CompanyName:
          type: string
        CurrencyCode:
          type: string
        DateCreated:
          format: date-time
          type: string
        DateIssued:
          format: date-time
          type: string
        DateSent:
          format: date-time
          type: string
        DateUpdated:
          format: date-time
          type: string
        DueDate:
          format: date-time
          type: string
        EstimateID:
          format: int64
          type: integer
        EstimateItemNumber:
          type: string
        EstimatePrefix:
          type: string
        EstimateStatusCode:
          type: string
        EstimateTaxConfigCode:
          type: string
        ExchangeRate:
          format: double
          type: number
        Issuer:
          $ref: "#/components/schemas/IssuerDetails"
        LineItems:
          items:
            $ref: "#/components/schemas/EstimateLineItemDetails"
          type: array
        Links:
          $ref: "#/components/schemas/EstimateLinks"
        Notes:
          type: string
        Recipient:
          $ref: "#/components/schemas/RecipientDetails"
        Subject:
          type: string
        TaxAmount:
          format: double
          type: number
        TotalAmount:
          format: double
          type: number
      type: object
    EstimateLineItemDetails:
      properties:
        Amount:
          format: double
          type: number
        Description:
          type: string
        Discount:
          format: double
          type: number
        EstimateLineItemID:
          format: int64
          type: integer
        InventoryItemIDFK:
          format: int64
          type: integer
        InventoryItemName:
          type: string
        InventoryItemSKU:
          type: string
        Quantity:
          format: double
          type: number
        TaxAmount:
          format: double
          type: number
        TaxCode:
          type: string
        TaxIDFK:
          format: int32
          type: integer
        TaxName:
          type: string
        UnitPrice:
          format: double
          type: number
      type: object
    EstimateLinks:
      properties:
        ClientView:
          type: string
        Edit:
          type: string
        View:
          type: string
      type: object
    EstimateList:
      properties:
        Estimates:
          items:
            $ref: "#/components/schemas/EstimateDetails"
          type: array
        PageNumber:
          format: int32
          type: integer
        PageSize:
          format: int32
          type: integer
        TotalCount:
          format: int32
          type: integer
      type: object
    ExpenseDetails:
      properties:
        Amount:
          format: double
          type: number
        AttachmentURL:
          type: string
        ChargeableStatusCode:
          type: string
        CurrencyCode:
          type: string
        CustomerIDFK:
          format: int32
          type: integer
        CustomerName:
          type: string
        DateCreated:
          format: date-time
          type: string
        DateUpdated:
          format: date-time
          type: string
        Email:
          type: string
        ExchangeRate:
          format: double
          type: number
        ExpenseApprovalStatusCode:
          type: string
        ExpenseCategoryHasUnitPrice:
          type: boolean
        ExpenseCategoryIDFK:
          format: int32
          type: integer
        ExpenseCategoryName:
          type: string
        ExpenseCategoryUnitName:
          type: string
        ExpenseCategoryUnitPrice:
          format: double
          type: number
        ExpenseDate:
          format: date-time
          type: string
        ExpenseID:
          format: int64
          type: integer
        ExpenseReimbursementStatusCode:
          type: string
        ExpenseReportIDFK:
          format: int64
          type: integer
        ExpenseReportName:
          type: string
        Firstname:
          type: string
        Lastname:
          type: string
        Merchant:
          type: string
        MerchantTaxNumber:
          type: string
        Notes:
          type: string
        ProjectIDFK:
          format: int32
          type: integer
        ProjectTitle:
          type: string
        Quantity:
          format: double
          type: number
        TaxAmount:
          format: double
          type: number
        TaxIDFK:
          format: int32
          type: integer
        TransactionTaxConfigCode:
          type: string
        UserIDFK:
          format: int32
          type: integer
        isChargeable:
          type: boolean
        isReimbursable:
          type: boolean
      type: object
    ExpenseList:
      properties:
        Expenses:
          items:
            $ref: "#/components/schemas/ExpenseDetails"
          type: array
        PageNumber:
          format: int32
          type: integer
        PageSize:
          format: int32
          type: integer
        TotalCount:
          format: int32
          type: integer
      type: object
    InventoryItem:
      properties:
        CostPrice:
          format: double
          type: number
        DateCreated:
          format: date-time
          type: string
        DateUpdated:
          format: date-time
          type: string
        Description:
          type: string
        InventoryItemID:
          format: int64
          type: integer
        Name:
          type: string
        SKU:
          type: string
        SalePrice:
          format: double
          type: number
        SaleTaxIDFK:
          format: int32
          type: integer
        isHidden:
          type: boolean
      type: object
    InventoryList:
      properties:
        Inventory:
          items:
            $ref: "#/components/schemas/InventoryItem"
          type: array
        PageNumber:
          format: int32
          type: integer
        PageSize:
          format: int32
          type: integer
        TotalCount:
          format: int32
          type: integer
      type: object
    Invoice:
      properties:
        AccountIDFK:
          format: int32
          type: integer
        Balance:
          format: double
          type: number
        CompanyIDFK:
          format: int32
          type: integer
        CompanyName:
          type: string
        CurrencyCode:
          type: string
        CustomerPONumber:
          type: string
        DateCreated:
          format: date-time
          type: string
        DateIssued:
          format: date-time
          type: string
        DateSent:
          format: date-time
          type: string
        DateUpdated:
          format: date-time
          type: string
        DueDate:
          format: date-time
          type: string
        ExchangeRate:
          format: double
          type: number
        InvoiceNumber:
          type: string
        Issuer:
          $ref: "#/components/schemas/IssuerDetails"
        LineItems:
          items:
            $ref: "#/components/schemas/InvoiceLineItem"
          type: array
        Links:
          $ref: "#/components/schemas/InvoiceLinks"
        Notes:
          type: string
        Recipient:
          $ref: "#/components/schemas/RecipientDetails"
        Subject:
          type: string
        TaxAmount:
          format: double
          type: number
        TotalAmount:
          format: double
          type: number
        TransactionID:
          format: int64
          type: integer
        TransactionPrefix:
          type: string
        TransactionStatusCode:
          type: string
        TransactionTaxConfigCode:
          type: string
      type: object
    InvoiceLineItem:
      properties:
        Amount:
          format: double
          type: number
        Description:
          type: string
        Discount:
          format: double
          type: number
        InventoryItemIDFK:
          format: int64
          type: integer
        InventoryItemName:
          type: string
        InventoryItemSKU:
          type: string
        ProjectIDFK:
          format: int32
          type: integer
        ProjectTitle:
          type: string
        Quantity:
          format: double
          type: number
        TaxAmount:
          format: double
          type: number
        TaxCode:
          type: string
        TaxIDFK:
          format: int32
          type: integer
        TaxName:
          type: string
        TransactionLineItemID:
          format: int64
          type: integer
        UnitPrice:
          format: double
          type: number
      type: object
    InvoiceLinks:
      properties:
        ClientView:
          type: string
        Edit:
          type: string
        View:
          type: string
      type: object
    InvoiceList:
      properties:
        Invoices:
          items:
            $ref: "#/components/schemas/Invoice"
          type: array
        PageNumber:
          format: int32
          type: integer
        PageSize:
          format: int32
          type: integer
        TotalCount:
          format: int32
          type: integer
      type: object
    IssuerDetails:
      properties:
        BillingAddress:
          type: string
        BillingAddressCity:
          type: string
        BillingAddressLine:
          type: string
        BillingAddressPostCode:
          type: string
        BillingAddressState:
          type: string
        BillingCountryCode:
          type: string
        TaxNumber:
          type: string
      type: object
    NewCompany:
      properties:
        BillingAddress:
          type: string
        BillingAddressCity:
          type: string
        BillingAddressLine:
          type: string
        BillingAddressPostCode:
          type: string
        BillingAddressState:
          type: string
        BillingCountryCode:
          type: string
        Comments:
          type: string
        CompanyName:
          type: string
        CurrencyCode:
          type: string
        Fax:
          type: string
        Phone:
          type: string
        TaxNumber:
          type: string
        website:
          type: string
      required:
        - CompanyName
      type: object
    NewCompanyContact:
      properties:
        CompanyBillingAddress:
          type: string
        CompanyBillingAddressCity:
          type: string
        CompanyBillingAddressCountryCode:
          type: string
        CompanyBillingAddressLine:
          type: string
        CompanyBillingAddressPostCode:
          type: string
        CompanyBillingAddressState:
          type: string
        CompanyIDFK:
          format: int32
          type: integer
        CompanyName:
          type: string
        ContactEmail:
          type: string
        CurrencyCode:
          type: string
        Firstname:
          type: string
        Lastname:
          type: string
        Mobile:
          type: string
        Phone:
          type: string
        PositionTitle:
          type: string
        UpdateExisting:
          type: boolean
      required:
        - ContactEmail
        - Firstname
        - Lastname
      type: object
    NewExpense:
      properties:
        Amount:
          description: Expense Amount (Required). Must be &gt;= 0
          format: double
          type: number
        CurrencyCode:
          description: A 3-letter ISO CurrencyCode for the expense currency. (e.g. USD). If
            not provided, defaults to the Account base currency.
          type: string
        CustomerIDFK:
          description: The Avaza Customer ID to associate the Expense with. Either this
            field or CustomerName can be provided.
          format: int32
          type: integer
        CustomerName:
          description: The name of an existing customer in Avaza. Must be an exact (case
            insensitive) match.
          type: string
        ExchangeRate:
          description: Optional (Only relevant if the expense currency is different to your
            account currency. If not provided we will look up the market
            exchange rate for you based on the expense date.) Exchange Rate =
            Expense Currency Amount / Base Currency Amount (e.g. if Expense
            currency is in AUD, and Base Currency is in USD, Exchange Rate = AUD
            $140 / USD $100 = 1.4)
          format: double
          type: number
        ExpenseCategoryIDFK:
          description: The expense category to link the Expense to. If not provided,
            ExpenseCategoryName must be provided
          format: int32
          type: integer
        ExpenseCategoryName:
          description: Must match an existing expense category name otherwise a new
            category will be created. If left blank Expense Category ID must be
            provided.
          type: string
        ExpenseDate:
          description: The date of the expense entry (Required)
          format: date-time
          type: string
        GroupTripName:
          description: Links the expense to a Grouping/Trip report. If no matching name
            found, creates a new Group/Trip Report name.
          type: string
        Merchant:
          description: The name of the merchant.
          type: string
        MerchantTaxNumer:
          description: A Tax number identifier for the merchant.
          type: string
        Notes:
          description: Expense Notes
          type: string
        ProjectIDFK:
          description: The Avaza project ID to associate the Expense with.
          format: int32
          type: integer
        ProjectName:
          description: Can work for matching an expense to a project, but only if it's an
            exact match for a single project under the customer.
          type: string
        TaxIDFK:
          description: Avaza Tax ID the expense belongs to. If left blank then Tax Name
            must be provided.
          format: int32
          type: integer
        TaxName:
          description: Must exactly match an existing Tax Name that you have configured in
            Avaza Tax settings. If left blank then Tax ID must be provided.
          type: string
        TransactionTaxConfigCode:
          description: Optional - Enter "INC" if the tax amount is included in the expense
            amount otherwise enter "EX" when the amount exlcudes the tax.
            Defaults to "Ex". The tax amount on the expense will be
            autocalculated.
          type: string
        UserEmail:
          description: The email address of a Timesheet/Expense user in Avaza. If not
            provided, UserIDFK field must be provided.
          type: string
        UserIDFK:
          description: UserID for a Timesheet/Expense user in Avaza. If not provided,
            UserEmail field must be provided
          format: int32
          type: integer
        isChargeable:
          description: aka Billable. Defaults to false if not provided. If set to true, a
            CustomerIDFK or CustomerName must be provided.
          type: boolean
        isReimbursable:
          description: Defaults to false if not provided.
          type: boolean
      type: object
    NewInvoice:
      description: New invoice to be created
      properties:
        CompanyIDFK:
          description: If left blank then you must specify Company Name.
          format: int32
          type: integer
        CompanyName:
          description: If left blank then you must specify Company ID. Specified Name will
            be used to match existing customer record. If not matched then it
            will be used to create a new customer. First Name, Last Name and
            Email will only be used if it is a new company. If the Company name
            appears multiple times we will check the email address to find a
            matching company. If email address doesn't identify a matching
            company then the invoice creation will be rejected.
          type: string
        CurrencyCode:
          description: Expects ISO Standard 3 character currency code. If left blank the
            currency will default to account's currency in general setting. For
            existing companies this field will be ignored and the invoice will
            use the currency of the customer. For new customers if the currency
            is not specified then account currency will be used otherwise the
            specified currency will be used.
          type: string
        CustomerPONumber:
          description: Plain UTF8 text. 100 characters max
          type: string
        DateIssued:
          description: If not specified it will use today's date. The date should be
            specified as local date.
          format: date-time
          type: string
        DueDate:
          description: It will be auto calculated based on the payment term and issue date.
            Due Date must be greater than or equal to Issue Date. If the Due
            Date is specified then Payment Terms will be set to -1 (Custom)
          format: date-time
          type: string
        Email:
          type: string
        ExchangeRate:
          description: Exchange rate is only valid for invoices in currency other than
            default account currency. If not specified it will get the market
            rate based on the Date Issued.
          format: double
          type: number
        Firstname:
          description: Specified value will be used to create a new customer contact only
            if a new customer is being created.
          type: string
        InvoiceNumber:
          description: Pass any string. If left blank it will use the next number in the
            auto incrementing sequence. If an integer is passed then the largest
            integer will be use as the seed to auto generate the next invoice
            number in the sequence.
          type: string
        InvoiceTemplateIDFK:
          description: If left blank the account default invoice template will be used.
          format: int32
          type: integer
        Lastname:
          description: Specified value will be used to create a new customer contact only
            if a new customer is being created.
          type: string
        LineItems:
          items:
            $ref: "#/components/schemas/NewInvoiceLineItem"
          type: array
        Notes:
          description: Plain UTF8 text. (no HTML). Max 2000 characters
          type: string
        PaymentTerms:
          description: " \"If left blank we will set it to customer default. If specified
            then it must match one of your existing pre configured payment term
            periods. Your account starts with:\r

            (-1 --- Custom, 0 --- Upon Receipt, 7 --- 7 Days, 15 ---
            15 Days, 30 --- 30 Days, 45 --- 45 Days, 60 --- 60 Days)"
          format: int32
          type: integer
        Subject:
          description: Plain UTF8 text. (no HTML). 255 characters max
          type: string
        TransactionPrefix:
          description: A prefix for the Invoice number. e.g. 'INV'. If left blank it will
            be set to the account default. Max length 20 characters.
          type: string
        TransactionTaxConfigCode:
          description: Possible values are (EX --- Tax Exclusive, INC --- Tax Inclusive).
            If left empty it will use the account default.
          type: string
      type: object
    NewInvoiceLineItem:
      description: Line item to be added to new invoice
      properties:
        Description:
          description: Plain UTF8 text. (no HTML)
          type: string
        Discount:
          description: Enter 10.5 to give a 10.5% discount
          format: double
          type: number
        InventoryItemIDFK:
          description: If not specified then Inventory Item Name must be specified.
          format: int32
          type: integer
        InventoryItemName:
          description: If not specified then Inventory item ID must be specified. If
            specified and not matched to any existing inventory items then a new
            inventory item will be created. Max 200 characters.
          type: string
        ProjectIDFK:
          description: Optional. Project ID of an Avaza Project that belongs to this
            customer, so line item is attributed to that Project for reporting.
          format: int32
          type: integer
        Quantity:
          description: The quantity for the line item
          format: double
          type: number
        TaxIDFK:
          format: int32
          type: integer
        TaxName:
          description: Must be specified if the Tax ID is blank. If the Tax Name is
            specified it will be matched to an existing Tax Name or else a new
            Tax will be created.
          type: string
        TaxPercent:
          description: The Tax Percent will only be used if a new tax is being created.
          format: double
          type: number
        UnitPrice:
          description: The unit price for the lineitem.
          format: double
          type: number
      required:
        - Quantity
        - UnitPrice
      type: object
    NewPayment:
      properties:
        Amount:
          format: double
          type: number
        CustomerIDFK:
          description: Only required if no invoice allocations specified.
          format: int32
          type: integer
        DateIssued:
          description: Date of Payment. If not specified, assumes today.
          format: date-time
          type: string
        ExchangeRate:
          description: Optional. Only used when the Customer's currecy is different from
            the Avaza account's base currency. Specifies the exchange rate that
            should apply between the customer currency and base currency. If not
            provided we will obtain an up to date exchange rate for the Payment
            Issue Date.
          format: double
          type: number
        Notes:
          type: string
        PaymentAllocations:
          description: List of amounts within this payment that are allocated to invoices.
            The sum of these be less than or equal to the payment amount.
          items:
            $ref: "#/components/schemas/NewPaymentAllocation"
          type: array
        PaymentNumber:
          description: Optional. If not specified will be automatically generated
          type: string
        PaymentProviderCode:
          description: Optional for storing the payment provider who was the source of
            funds.
          type: string
        TransactionPrefix:
          description: Optional to override the default prefix added to Payment Numbers
          type: string
        TransactionReference:
          description: "Optional for storing the reference # of the payment method."
          type: string
      type: object
    NewPaymentAllocation:
      properties:
        AllocationAmount:
          description: The Amount being allocated to the invoice. Expects same currency as
            invoice currency
          format: double
          type: number
        AllocationDate:
          description: Optional. Defaults to the current time in the Avaza account's
            timezone. The date the allocation is applied to the invoice. Can be
            difference from the Payment Date when doing prepayments etc.
          format: date-time
          type: string
        InvoiceTransactionIDFK:
          description: The Avaza Invoice TransactionID that is having a payment amount
            allocated to it.
          format: int64
          type: integer
      type: object
    NewProjectModel:
      properties:
        BudgetAmount:
          format: double
          type: number
        BudgetHours:
          format: double
          type: number
        CompanyIDFK:
          description: An ID of a company in Avaza to create the Project under. You must
            provide either a CompanyID, or a CompanyName
          format: int32
          type: integer
        CompanyName:
          description: The name for a Company to create the project under. Will create
            company unless it matches an existing company name
          type: string
        CurrencyCode:
          description: The ISO 3 letter currency code to use when creating a new Company.
            If not provided, the account's default currency will be used.
          type: string
        EndDate:
          format: date-time
          type: string
        PopulateDefaultProjectMembers:
          type: boolean
        ProjectCategoryIDFK:
          format: int32
          type: integer
        ProjectNotes:
          description: Any descriptive notes about the project. (2000 characters max)
          type: string
        ProjectStatusCode:
          type: string
        ProjectTitle:
          description: The title of the new project. (255 characters max)
          type: string
        StartDate:
          format: date-time
          type: string
        TimesheetApprovalRequiredbyDefault:
          type: boolean
        isTaskRequiredOnTimesheet:
          type: boolean
      required:
        - ProjectTitle
      type: object
    NewSection:
      properties:
        EndDateUTC:
          format: date-time
          type: string
        ProjectIDFK:
          format: int32
          type: integer
        StartDateUTC:
          format: date-time
          type: string
        Title:
          type: string
      type: object
    NewTag:
      properties:
        Color:
          description: "Hex color code in format #000000"
          type: string
        Name:
          type: string
      type: object
    NewTask:
      properties:
        AccountTaskTypeIDFK:
          format: int32
          type: integer
        AssignedToUserIDFK:
          format: int32
          type: integer
        DateDue:
          format: date-time
          type: string
        DateDueUTC:
          format: date-time
          type: string
        DateStart:
          format: date-time
          type: string
        DateStartUTC:
          format: date-time
          type: string
        Description:
          type: string
        EstimatedEffort:
          description: Decimal hours
          format: double
          type: number
        ProjectIDFK:
          format: int32
          type: integer
        SectionIDFK:
          format: int32
          type: integer
        Tags:
          description: Collection of tags specifying Name and Color (Hex)
          items:
            $ref: "#/components/schemas/NewTag"
          type: array
        TaskPriorityCode:
          type: string
        Title:
          type: string
      required:
        - ProjectIDFK
        - SectionIDFK
        - Title
      type: object
    NewTimesheet:
      properties:
        Duration:
          description: The duration of the timesheet, in decimal hours. If null or 0, a
            timer will be started.
          format: double
          type: number
        EntryDate:
          description: The date of the timesheet entry, with an optional start time
            component.
          format: date-time
          type: string
        Notes:
          description: Timesheet Notes
          type: string
        ProjectIDFK:
          description: The project to associate the timesheet with.
          format: int32
          type: integer
        TaskIDFK:
          description: Optional. Link the timesheet to a specific task
          format: int32
          type: integer
        TimesheetCategoryIDFK:
          description: The Project timesheet category to link the timesheet to
          format: int32
          type: integer
        UserIDFK:
          description: UserID for a Timesheet user in Avaza
          format: int32
          type: integer
        hasStartEndTime:
          description: If true, the start time will be take from the time component of the
            Entry Date field, and the end time will be calculated by adding the
            Duration to the StartDate
          type: boolean
        isInvoiced:
          description: Optional. False by default. Allows you to mark the timesheet as
            invoiced in an external system.
          type: boolean
      type: object
    Payment:
      properties:
        AccountIDFK:
          format: int32
          type: integer
        Balance:
          format: double
          type: number
        CurrencyCode:
          type: string
        CustomerIDFK:
          format: int32
          type: integer
        DateCreated:
          format: date-time
          type: string
        DateIssued:
          format: date-time
          type: string
        DateUpdated:
          format: date-time
          type: string
        ExchangeRate:
          format: double
          type: number
        Notes:
          type: string
        PaymentAllocations:
          items:
            $ref: "#/components/schemas/PaymentAllocation"
          type: array
        PaymentNumber:
          type: string
        PaymentProviderCode:
          type: string
        TotalAmount:
          format: double
          type: number
        TransactionID:
          format: int64
          type: integer
        TransactionPrefix:
          type: string
        TransactionReference:
          type: string
        TransactionStatusCode:
          type: string
      type: object
    PaymentAllocation:
      properties:
        AllocationAmount:
          format: double
          type: number
        AllocationDate:
          format: date-time
          type: string
        InvoiceTransactionIDFK:
          format: int64
          type: integer
        PaymentTransactionIDFK:
          format: int64
          type: integer
        TransactionAllocationID:
          format: int64
          type: integer
      type: object
    PaymentList:
      properties:
        PageNumber:
          format: int32
          type: integer
        PageSize:
          format: int32
          type: integer
        Payments:
          items:
            $ref: "#/components/schemas/Payment"
          type: array
        TotalCount:
          format: int32
          type: integer
      type: object
    ProjectDetails:
      properties:
        BudgetAmount:
          format: double
          type: number
        BudgetHours:
          format: double
          type: number
        CompanyIDFK:
          format: int32
          type: integer
        CompanyName:
          type: string
        DateCreated:
          format: date-time
          type: string
        DateUpdated:
          format: date-time
          type: string
        DefaultAccountTaskTypeIDFK:
          format: int32
          type: integer
        DefaultAccountTaskTypeName:
          type: string
        EndDate:
          format: date-time
          type: string
        Members:
          items:
            $ref: "#/components/schemas/ProjectMemberDetails"
          type: array
        Notes:
          type: string
        ProjectBillableTypeCode:
          description: "Possible values: CategoryHourly, NoRate, NotBillable, PersonHourly,
            ProjectHourly"
          type: string
        ProjectBudgetTypeCode:
          description: "Possible Values: CategoryHours, NoBudget, PersonHours, ProjectFees,
            ProjectHours"
          type: string
        ProjectCategoryColor:
          description: "Html Hex Color Code starting with #"
          type: string
        ProjectCategoryIDFK:
          format: int32
          type: integer
        ProjectCategoryName:
          type: string
        ProjectHourlyRate:
          format: double
          type: number
        ProjectID:
          format: int32
          type: integer
        ProjectStatusCode:
          description: "Possible values: NotStarted, InProgress, Complete"
          type: string
        ProjectTags:
          items:
            $ref: "#/components/schemas/ProjectTagItem"
          type: array
        Sections:
          items:
            $ref: "#/components/schemas/ProjectSectionDetails"
          type: array
        StartDate:
          format: date-time
          type: string
        Title:
          type: string
        isArchived:
          type: boolean
        isTaskRequiredOnTimesheet:
          type: boolean
      type: object
    ProjectList:
      properties:
        PageNumber:
          format: int32
          type: integer
        PageSize:
          format: int32
          type: integer
        Projects:
          items:
            $ref: "#/components/schemas/ProjectListDetails"
          type: array
        TotalCount:
          format: int32
          type: integer
      type: object
    ProjectListDetails:
      properties:
        CompanyIDFK:
          format: int32
          type: integer
        CompanyName:
          type: string
        DateCreated:
          format: date-time
          type: string
        DateUpdated:
          format: date-time
          type: string
        DefaultAccountTaskTypeIDFK:
          format: int32
          type: integer
        DefaultAccountTaskTypeName:
          type: string
        Notes:
          type: string
        ProjectID:
          format: int32
          type: integer
        Title:
          type: string
        isArchived:
          type: boolean
        isTaskRequiredOnTimesheet:
          type: boolean
      type: object
    ProjectMemberDetails:
      properties:
        BudgetAmount:
          format: double
          type: number
        CostAmount:
          format: double
          type: number
        Email:
          type: string
        Firstname:
          type: string
        Fullname:
          type: string
        Lastname:
          type: string
        RateAmount:
          format: double
          type: number
        UserIDFK:
          format: int32
          type: integer
        canCommentOnTasks:
          type: boolean
        canCreateTasks:
          type: boolean
        canDeleteTasks:
          type: boolean
        canUpdateTasks:
          type: boolean
        isMemberDisabled:
          type: boolean
        isProjectManager:
          type: boolean
        isTimesheetAllowed:
          type: boolean
        isTimesheetApprovalRequired:
          type: boolean
        isTimesheetApprover:
          type: boolean
      type: object
    ProjectSectionDetails:
      properties:
        DisplayOrder:
          format: int32
          type: integer
        EndDate:
          format: date-time
          type: string
        SectionID:
          format: int32
          type: integer
        StartDate:
          format: date-time
          type: string
        Title:
          type: string
      type: object
    ProjectTagItem:
      properties:
        Name:
          type: string
        ProjectTagID:
          format: int32
          type: integer
      type: object
    ProjectTimesheetCategoryDetails:
      properties:
        AccountIDFK:
          format: int32
          type: integer
        BudgetHours:
          format: double
          type: number
        CostAmount:
          format: double
          type: number
        Name:
          type: string
        ProjectIDFK:
          format: int32
          type: integer
        RateAmount:
          format: double
          type: number
        TimeSheetCategoryIDFK:
          format: int32
          type: integer
        isBillable:
          type: boolean
      type: object
    ProjectTimesheetCategoryList:
      properties:
        Categories:
          items:
            $ref: "#/components/schemas/ProjectTimesheetCategoryDetails"
          type: array
      type: object
    RecipientDetails:
      properties:
        CompanyIDFK:
          format: int32
          type: integer
        CompanyName:
          type: string
        RecipientBillingAddressCity:
          type: string
        RecipientBillingAddressCountryCode:
          type: string
        RecipientBillingAddressLine:
          type: string
        RecipientBillingAddressPostCode:
          type: string
        RecipientBillingAddressState:
          type: string
        RecipientFormattedBillingAddress:
          type: string
      type: object
    RoleDetails:
      properties:
        RoleCode:
          type: string
        RoleName:
          type: string
      type: object
    ScheduleAssignmentDetails:
      properties:
        AccountIDFK:
          format: int32
          type: integer
        DateCreated:
          format: date-time
          type: string
        DateUpdated:
          format: date-time
          type: string
        Duration:
          format: double
          type: number
        ScheduleAssignmentID:
          format: int64
          type: integer
        ScheduleDate:
          format: date-time
          type: string
        ScheduleSeriesIDFK:
          format: int64
          type: integer
        UserIDFK:
          format: int32
          type: integer
      type: object
    ScheduleAssignmentList:
      properties:
        PageNumber:
          format: int32
          type: integer
        PageSize:
          format: int32
          type: integer
        ScheduleAssignments:
          items:
            $ref: "#/components/schemas/ScheduleAssignmentDetails"
          type: array
        TotalCount:
          format: int32
          type: integer
      type: object
    ScheduleSeriesDetails:
      properties:
        AccountIDFK:
          format: int32
          type: integer
        CompanyIDFK:
          format: int32
          type: integer
        CompanyName:
          type: string
        DateCreated:
          format: date-time
          type: string
        DateUpdated:
          format: date-time
          type: string
        EndDate:
          format: date-time
          type: string
        Firstname:
          type: string
        HoursPerDay:
          format: double
          type: number
        Lastname:
          type: string
        LeaveTypeIDFK:
          format: int32
          type: integer
        LeaveTypeName:
          type: string
        Notes:
          type: string
        ProjectIDFK:
          format: int32
          type: integer
        ProjectTitle:
          type: string
        ScheduleOnDaysOff:
          type: boolean
        ScheduleSeriesID:
          format: int64
          type: integer
        StartDate:
          format: date-time
          type: string
        TaskIDFK:
          format: int32
          type: integer
        TaskTitle:
          type: string
        TimeSheetCategoryIDFK:
          format: int32
          type: integer
        TimeSheetCategoryName:
          type: string
        TotalDuration:
          format: double
          type: number
        UpdatedByUserIDFK:
          format: int32
          type: integer
        UserIDFK:
          format: int32
          type: integer
      type: object
    ScheduleSeriesList:
      properties:
        PageNumber:
          format: int32
          type: integer
        PageSize:
          format: int32
          type: integer
        ScheduleSeries:
          items:
            $ref: "#/components/schemas/ScheduleSeriesDetails"
          type: array
        TotalCount:
          format: int32
          type: integer
      type: object
    SectionDetails:
      properties:
        DisplayOrder:
          format: int32
          type: integer
        EndDate:
          format: date-time
          type: string
        EndDateUTC:
          format: date-time
          type: string
        ProjectIDFK:
          format: int32
          type: integer
        SectionID:
          format: int32
          type: integer
        StartDate:
          format: date-time
          type: string
        StartDateUTC:
          format: date-time
          type: string
        Title:
          type: string
      type: object
    SectionList:
      properties:
        Sections:
          items:
            $ref: "#/components/schemas/SectionDetails"
          type: array
        TotalCount:
          format: int32
          type: integer
      type: object
    SubscribeResult:
      properties:
        ID:
          format: int32
          type: integer
      type: object
    TagItem:
      properties:
        Color:
          type: string
        Name:
          type: string
        TagID:
          format: int64
          type: integer
      type: object
    TaskDetails:
      properties:
        AccountTaskTypeIDFK:
          format: int32
          type: integer
        ActualTime:
          format: double
          type: number
        AssignedToEmail:
          type: string
        AssignedToFirstname:
          type: string
        AssignedToLastname:
          type: string
        AssignedToUserIDFK:
          type: string
        DateCreated:
          format: date-time
          type: string
        DateDue:
          format: date-time
          type: string
        DateDueUTC:
          format: date-time
          type: string
        DateStart:
          format: date-time
          type: string
        DateStartUTC:
          format: date-time
          type: string
        DateUpdated:
          format: date-time
          type: string
        Description:
          type: string
        DescriptionNoHTML:
          type: string
        EstimatedEffort:
          format: double
          type: number
        PercentComplete:
          format: double
          type: number
        ProjectIDFK:
          format: int32
          type: integer
        ProjectTitle:
          type: string
        SectionIDFK:
          format: int32
          type: integer
        SectionTitle:
          type: string
        Tags:
          items:
            $ref: "#/components/schemas/TagItem"
          type: array
        TaskID:
          format: int32
          type: integer
        TaskPriorityCode:
          type: string
        TaskPriorityName:
          type: string
        TaskStatusCode:
          type: string
        TaskStatusName:
          type: string
        Title:
          type: string
        isCompleteStatus:
          type: boolean
      type: object
    TaskList:
      properties:
        PageNumber:
          format: int32
          type: integer
        PageSize:
          format: int32
          type: integer
        Tasks:
          items:
            $ref: "#/components/schemas/TaskDetails"
          type: array
        TotalCount:
          format: int32
          type: integer
      type: object
    TaskStatusDetails:
      properties:
        AccountTaskTypeIDFK:
          format: int32
          type: integer
        Color:
          type: string
        DisplayOrder:
          format: int32
          type: integer
        Name:
          type: string
        TaskStatusCode:
          type: string
        TaskTypeName:
          type: string
        isComplete:
          type: boolean
      type: object
    TaskStatusList:
      properties:
        statuses:
          items:
            $ref: "#/components/schemas/TaskStatusDetails"
          type: array
      type: object
    TaskTypeList:
      properties:
        tasktypes:
          items:
            $ref: "#/components/schemas/AccountTaskTypeDetails"
          type: array
      type: object
    TaxComponent:
      properties:
        ComponentTaxCode:
          type: string
        Name:
          type: string
        Percentage:
          format: double
          type: number
        TaxComponentID:
          format: int32
          type: integer
        TaxIDFK:
          format: int32
          type: integer
        isCompound:
          type: boolean
      type: object
    TaxItem:
      properties:
        CalculatedPercent:
          format: double
          type: number
        Name:
          type: string
        TaxCode:
          type: string
        TaxComponents:
          items:
            $ref: "#/components/schemas/TaxComponent"
          type: array
        TaxID:
          format: int32
          type: integer
      type: object
    TaxList:
      properties:
        Taxes:
          items:
            $ref: "#/components/schemas/TaxItem"
          type: array
      type: object
    TimesheetDetails:
      properties:
        ApprovedBy:
          type: string
        CategoryName:
          type: string
        CustomerIDFK:
          format: int32
          type: integer
        CustomerName:
          type: string
        DateApproved:
          format: date-time
          type: string
        DateCreated:
          format: date-time
          type: string
        DateUpdated:
          format: date-time
          type: string
        Duration:
          format: double
          type: number
        Email:
          type: string
        EndTimeLocal:
          format: date-time
          type: string
        EndTimeUTC:
          format: date-time
          type: string
        EntryDate:
          format: date-time
          type: string
        Firstname:
          type: string
        HasTimer:
          type: boolean
        InvoiceIDFK:
          format: int64
          type: integer
        InvoiceLineItemIDFK:
          format: int64
          type: integer
        Lastname:
          type: string
        Notes:
          type: string
        ProjectIDFK:
          format: int32
          type: integer
        ProjectTitle:
          type: string
        StartTimeLocal:
          format: date-time
          type: string
        StartTimeUTC:
          format: date-time
          type: string
        TaskIDFK:
          format: int32
          type: integer
        TaskTitle:
          type: string
        TimerStartedAtUTC:
          format: date-time
          type: string
        TimesheetCategoryIDFK:
          format: int32
          type: integer
        TimesheetEntryApprovalStatusCode:
          type: string
        TimesheetEntryID:
          format: int64
          type: integer
        TimesheetUserTimeZone:
          type: string
        UserIDFK:
          format: int32
          type: integer
        isBillable:
          type: boolean
        isInvoiced:
          type: boolean
      type: object
    TimesheetList:
      properties:
        PageNumber:
          format: int32
          type: integer
        PageSize:
          format: int32
          type: integer
        Timesheets:
          items:
            $ref: "#/components/schemas/TimesheetDetails"
          type: array
        TotalCount:
          format: int32
          type: integer
      type: object
    UpdateCompany:
      properties:
        BillingAddress:
          type: string
        BillingAddressCity:
          type: string
        BillingAddressLine:
          type: string
        BillingAddressPostCode:
          type: string
        BillingAddressState:
          type: string
        BillingCountryCode:
          type: string
        Comments:
          type: string
        CompanyID:
          format: int32
          type: integer
        CompanyName:
          type: string
        Fax:
          type: string
        FieldsToUpdate:
          items:
            type: string
          type: array
        Phone:
          type: string
        TaxNumber:
          type: string
        website:
          type: string
      type: object
    UpdateTask:
      properties:
        AssignedToUserIDFK:
          format: int32
          type: integer
        DateDue:
          format: date-time
          type: string
        DateDueUTC:
          format: date-time
          type: string
        DateStart:
          format: date-time
          type: string
        DateStartUTC:
          format: date-time
          type: string
        Description:
          type: string
        EstimatedEffort:
          description: Decimal hours
          format: double
          type: number
        FieldsToUpdate:
          items:
            type: string
          type: array
        PercentComplete:
          format: int32
          type: integer
        SectionIDFK:
          format: int32
          type: integer
        Tags:
          items:
            $ref: "#/components/schemas/NewTag"
          type: array
        TaskID:
          format: int32
          type: integer
        TaskPriorityCode:
          type: string
        TaskStatusCode:
          type: string
        Title:
          type: string
      required:
        - TaskID
        - FieldsToUpdate
      type: object
    UpdateTimesheetModel:
      properties:
        Duration:
          format: double
          type: number
        EntryDate:
          format: date-time
          type: string
        FieldsToUpdate:
          items:
            type: string
          type: array
        Notes:
          type: string
        ProjectIDFK:
          format: int32
          type: integer
        TaskIDFK:
          format: int32
          type: integer
        TimeSheetEntryID:
          format: int64
          type: integer
        TimesheetCategoryIDFK:
          format: int32
          type: integer
        hasStartEndTime:
          type: boolean
      required:
        - TimeSheetEntryID
        - FieldsToUpdate
        - ProjectIDFK
      type: object
    UserDetails:
      properties:
        AccountIDFK:
          format: int32
          type: integer
        CompanyIDFK:
          format: int32
          type: integer
        CompanyName:
          type: string
        DefaultBillableRate:
          format: double
          type: number
        DefaultCostRate:
          format: double
          type: number
        Email:
          type: string
        Firstname:
          type: string
        FridayAvailableHours:
          format: double
          type: number
        Lastname:
          type: string
        Mobile:
          type: string
        MondayAvailableHours:
          format: double
          type: number
        Phone:
          type: string
        PositionTitle:
          type: string
        Roles:
          items:
            $ref: "#/components/schemas/RoleDetails"
          type: array
        SaturdayAvailableHours:
          format: double
          type: number
        SundayAvailableHours:
          format: double
          type: number
        Tags:
          items:
            $ref: "#/components/schemas/UserTagDetails"
          type: array
        ThursdayAvailableHours:
          format: double
          type: number
        TimeZone:
          type: string
        TuesdayAvailableHours:
          format: double
          type: number
        UserID:
          format: int32
          type: integer
        WednesdayAvailableHours:
          format: double
          type: number
        isTeamMember:
          type: boolean
      type: object
    UserList:
      properties:
        Users:
          items:
            $ref: "#/components/schemas/UserDetails"
          type: array
      type: object
    UserTagDetails:
      properties:
        UserTagID:
          format: int32
          type: integer
        UserTagName:
          type: string
      type: object
    WebhookDetails:
      properties:
        EventCode:
          type: string
        NotificationURL:
          type: string
        SubscriptionID:
          format: int32
          type: integer
        UserIDFK:
          format: int32
          type: integer
      type: object
    WebhookList:
      properties:
        Webhooks:
          items:
            $ref: "#/components/schemas/WebhookDetails"
          type: array
      type: object
