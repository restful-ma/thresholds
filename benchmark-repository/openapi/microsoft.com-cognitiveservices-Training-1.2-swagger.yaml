openapi: 3.0.0
info:
  contact:
    x-twitter: microsoft
  title: TrainingApi
  version: "1.2"
  x-apisguru-categories:
    - cloud
  x-logo:
    url: https://twitter.com/microsoft/profile_image?size=original
  x-origin:
    - format: swagger
      url: https://raw.githubusercontent.com/Azure/azure-rest-api-specs/master/specification/cognitiveservices/data-plane/CustomVision/Training/stable/v1.2/Training.json
      version: "2.0"
  x-preferred: false
  x-providerName: microsoft.com
  x-serviceName: cognitiveservices-Training
  x-tags:
    - Microsoft
paths:
  /account:
    get:
      operationId: GetAccountInfo
      parameters:
        - $ref: "#/components/parameters/ApiKey"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Account"
              examples:
                Successful GetAccountInfo request:
                  $ref: "#/components/examples/Successful_GetAccountInfo_request"
            text/json:
              schema:
                $ref: "#/components/schemas/Account"
              examples:
                Successful GetAccountInfo request:
                  $ref: "#/components/examples/Successful_GetAccountInfo_request"
            application/xml:
              schema:
                $ref: "#/components/schemas/Account"
              examples:
                Successful GetAccountInfo request:
                  $ref: "#/components/examples/Successful_GetAccountInfo_request"
            text/xml:
              schema:
                $ref: "#/components/schemas/Account"
              examples:
                Successful GetAccountInfo request:
                  $ref: "#/components/examples/Successful_GetAccountInfo_request"
      summary: Get basic information about your account
      tags:
        - AccountApi
  /domains:
    get:
      operationId: GetDomains
      parameters:
        - $ref: "#/components/parameters/ApiKey"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/Domain"
                type: array
                nullable: true
              examples:
                Successful GetDomains request:
                  $ref: "#/components/examples/Successful_GetDomains_request"
            text/json:
              schema:
                items:
                  $ref: "#/components/schemas/Domain"
                type: array
                nullable: true
              examples:
                Successful GetDomains request:
                  $ref: "#/components/examples/Successful_GetDomains_request"
            application/xml:
              schema:
                items:
                  $ref: "#/components/schemas/Domain"
                type: array
                nullable: true
              examples:
                Successful GetDomains request:
                  $ref: "#/components/examples/Successful_GetDomains_request"
            text/xml:
              schema:
                items:
                  $ref: "#/components/schemas/Domain"
                type: array
                nullable: true
              examples:
                Successful GetDomains request:
                  $ref: "#/components/examples/Successful_GetDomains_request"
      summary: Get a list of the available domains
      tags:
        - DomainsApi
  "/domains/{domainId}":
    get:
      operationId: GetDomain
      parameters:
        - description: The id of the domain to get information about
          in: path
          name: domainId
          required: true
          x-nullable: false
          schema:
            type: string
            format: uuid
          examples:
            Successful GetDomain request:
              value: b30a91ae-e3c1-4f73-a81e-c270bff27c39
        - $ref: "#/components/parameters/ApiKey"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Domain"
              examples:
                Successful GetDomain request:
                  $ref: "#/components/examples/Successful_GetDomain_request"
            text/json:
              schema:
                $ref: "#/components/schemas/Domain"
              examples:
                Successful GetDomain request:
                  $ref: "#/components/examples/Successful_GetDomain_request"
            application/xml:
              schema:
                $ref: "#/components/schemas/Domain"
              examples:
                Successful GetDomain request:
                  $ref: "#/components/examples/Successful_GetDomain_request"
            text/xml:
              schema:
                $ref: "#/components/schemas/Domain"
              examples:
                Successful GetDomain request:
                  $ref: "#/components/examples/Successful_GetDomain_request"
      summary: Get information about a specific domain
      tags:
        - DomainsApi
  /projects:
    get:
      operationId: GetProjects
      parameters:
        - $ref: "#/components/parameters/ApiKey"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/Project"
                type: array
                nullable: true
              examples:
                Successful GetProjects request:
                  $ref: "#/components/examples/Successful_GetProjects_request"
            text/json:
              schema:
                items:
                  $ref: "#/components/schemas/Project"
                type: array
                nullable: true
              examples:
                Successful GetProjects request:
                  $ref: "#/components/examples/Successful_GetProjects_request"
            application/xml:
              schema:
                items:
                  $ref: "#/components/schemas/Project"
                type: array
                nullable: true
              examples:
                Successful GetProjects request:
                  $ref: "#/components/examples/Successful_GetProjects_request"
            text/xml:
              schema:
                items:
                  $ref: "#/components/schemas/Project"
                type: array
                nullable: true
              examples:
                Successful GetProjects request:
                  $ref: "#/components/examples/Successful_GetProjects_request"
      summary: Get your projects
      tags:
        - ProjectApi
    post:
      operationId: CreateProject
      parameters:
        - description: Name of the project
          in: query
          name: name
          required: true
          x-nullable: true
          schema:
            type: string
          examples:
            Successful CreateProject request:
              value: My New Project
        - description: The description of the project
          in: query
          name: description
          required: false
          x-nullable: true
          schema:
            type: string
          examples:
            Successful CreateProject request:
              value: A test project
        - description: The id of the domain to use for this project. Defaults to General
          in: query
          name: domainId
          required: false
          x-nullable: true
          schema:
            type: string
            format: uuid
          examples:
            Successful CreateProject request:
              value: ee85a74c-405e-4adc-bb47-ffa8ca0c9f31
        - $ref: "#/components/parameters/ApiKey"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Project"
              examples:
                Successful CreateProject request:
                  $ref: "#/components/examples/Successful_CreateProject_request"
            text/json:
              schema:
                $ref: "#/components/schemas/Project"
              examples:
                Successful CreateProject request:
                  $ref: "#/components/examples/Successful_CreateProject_request"
            application/xml:
              schema:
                $ref: "#/components/schemas/Project"
              examples:
                Successful CreateProject request:
                  $ref: "#/components/examples/Successful_CreateProject_request"
            text/xml:
              schema:
                $ref: "#/components/schemas/Project"
              examples:
                Successful CreateProject request:
                  $ref: "#/components/examples/Successful_CreateProject_request"
      summary: Create a project
      tags:
        - ProjectApi
  "/projects/{projectId}":
    delete:
      operationId: DeleteProject
      parameters:
        - description: The project id
          in: path
          name: projectId
          required: true
          x-nullable: false
          schema:
            type: string
            format: uuid
          examples:
            Successful DeleteProject request:
              value: bc3f7dad-5544-468c-8573-3ef04d55463e
        - $ref: "#/components/parameters/ApiKey"
      responses:
        "204":
          description: No Content
      summary: Delete a specific project
      tags:
        - ProjectApi
    get:
      operationId: GetProject
      parameters:
        - description: The id of the project to get
          in: path
          name: projectId
          required: true
          x-nullable: false
          schema:
            type: string
            format: uuid
          examples:
            Successful GetProject request:
              value: bc3f7dad-5544-468c-8573-3ef04d55463e
        - $ref: "#/components/parameters/ApiKey"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Project"
              examples:
                Successful GetProject request:
                  $ref: "#/components/examples/Successful_GetProject_request"
            text/json:
              schema:
                $ref: "#/components/schemas/Project"
              examples:
                Successful GetProject request:
                  $ref: "#/components/examples/Successful_GetProject_request"
            application/xml:
              schema:
                $ref: "#/components/schemas/Project"
              examples:
                Successful GetProject request:
                  $ref: "#/components/examples/Successful_GetProject_request"
            text/xml:
              schema:
                $ref: "#/components/schemas/Project"
              examples:
                Successful GetProject request:
                  $ref: "#/components/examples/Successful_GetProject_request"
      summary: Get a specific project
      tags:
        - ProjectApi
    patch:
      operationId: UpdateProject
      parameters:
        - description: The id of the project to update
          in: path
          name: projectId
          required: true
          x-nullable: false
          schema:
            type: string
            format: uuid
          examples:
            Successful UpdateProject request:
              value: bc3f7dad-5544-468c-8573-3ef04d55463e
        - $ref: "#/components/parameters/ApiKey"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Project"
          text/json:
            schema:
              $ref: "#/components/schemas/Project"
          application/xml:
            schema:
              $ref: "#/components/schemas/Project"
          text/xml:
            schema:
              $ref: "#/components/schemas/Project"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/Project"
        description: The updated project model
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Project"
              examples:
                Successful UpdateProject request:
                  $ref: "#/components/examples/Successful_UpdateProject_request"
            text/json:
              schema:
                $ref: "#/components/schemas/Project"
              examples:
                Successful UpdateProject request:
                  $ref: "#/components/examples/Successful_UpdateProject_request"
            application/xml:
              schema:
                $ref: "#/components/schemas/Project"
              examples:
                Successful UpdateProject request:
                  $ref: "#/components/examples/Successful_UpdateProject_request"
            text/xml:
              schema:
                $ref: "#/components/schemas/Project"
              examples:
                Successful UpdateProject request:
                  $ref: "#/components/examples/Successful_UpdateProject_request"
      summary: Update a specific project
      tags:
        - ProjectApi
  "/projects/{projectId}/images":
    delete:
      operationId: DeleteImages
      parameters:
        - description: The project id
          in: path
          name: projectId
          required: true
          x-nullable: false
          schema:
            type: string
            format: uuid
          examples:
            Successful DeleteImages request:
              value: 64b822c5-8082-4b36-a426-27225f4aa18c
        - description: Ids of the images to be deleted. Limited to 256 images per batch
          in: query
          name: imageIds
          required: true
          x-nullable: true
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
              nullable: false
          examples:
            Successful DeleteImages request:
              value:
                - e31a14ab-5d78-4f7b-a267-3a1e4fd8a758
                - cf0f83fb-ebaa-4b25-8e34-613a6a0b8a12
        - $ref: "#/components/parameters/ApiKey"
      responses:
        "204":
          description: No Content
      summary: Delete images from the set of training images
      tags:
        - ImageApi
    post:
      description: "This API accepts body content as multipart/form-data and
        application/octet-stream. When using multipart\r

        multiple image files can be sent at once, with a maximum of 64
        files"
      operationId: CreateImagesFromData
      parameters:
        - description: The project id
          in: path
          name: projectId
          required: true
          x-nullable: false
          schema:
            type: string
            format: uuid
          examples:
            Successful CreateImagesFromData request:
              value: 64b822c5-8082-4b36-a426-27225f4aa18c
        - description: The tags ids with which to tag each image. Limited to 20
          in: query
          name: tagIds
          required: false
          x-nullable: true
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
              nullable: false
          examples:
            Successful CreateImagesFromData request:
              value:
                - b607964f-7bd6-4a3b-a869-6791fb6aab87
        - $ref: "#/components/parameters/ApiKey"
      requestBody:
        $ref: "#/components/requestBodies/CreateImagesFromData"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ImageCreateSummary"
              examples:
                Successful CreateImagesFromData request:
                  $ref: "#/components/examples/Successful_CreateImagesFromData_requ\
                    est"
            text/json:
              schema:
                $ref: "#/components/schemas/ImageCreateSummary"
              examples:
                Successful CreateImagesFromData request:
                  $ref: "#/components/examples/Successful_CreateImagesFromData_requ\
                    est"
            application/xml:
              schema:
                $ref: "#/components/schemas/ImageCreateSummary"
              examples:
                Successful CreateImagesFromData request:
                  $ref: "#/components/examples/Successful_CreateImagesFromData_requ\
                    est"
            text/xml:
              schema:
                $ref: "#/components/schemas/ImageCreateSummary"
              examples:
                Successful CreateImagesFromData request:
                  $ref: "#/components/examples/Successful_CreateImagesFromData_requ\
                    est"
      summary: Add the provided images to the set of training images
      tags:
        - ImageApi
  "/projects/{projectId}/images/files":
    post:
      operationId: CreateImagesFromFiles
      parameters:
        - description: The project id
          in: path
          name: projectId
          required: true
          x-nullable: false
          schema:
            type: string
            format: uuid
          examples:
            Successful CreateImagesFromFiles request:
              value: 64b822c5-8082-4b36-a426-27225f4aa18c
        - $ref: "#/components/parameters/ApiKey"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ImageFileCreateBatch"
          text/json:
            schema:
              $ref: "#/components/schemas/ImageFileCreateBatch"
          application/xml:
            schema:
              $ref: "#/components/schemas/ImageFileCreateBatch"
          text/xml:
            schema:
              $ref: "#/components/schemas/ImageFileCreateBatch"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/ImageFileCreateBatch"
        description: The batch of image files to add. Limited to 64 images and 20 tags per
          batch
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ImageCreateSummary"
              examples:
                Successful CreateImagesFromFiles request:
                  $ref: "#/components/examples/Successful_CreateImagesFromFiles_req\
                    uest"
            text/json:
              schema:
                $ref: "#/components/schemas/ImageCreateSummary"
              examples:
                Successful CreateImagesFromFiles request:
                  $ref: "#/components/examples/Successful_CreateImagesFromFiles_req\
                    uest"
            application/xml:
              schema:
                $ref: "#/components/schemas/ImageCreateSummary"
              examples:
                Successful CreateImagesFromFiles request:
                  $ref: "#/components/examples/Successful_CreateImagesFromFiles_req\
                    uest"
            text/xml:
              schema:
                $ref: "#/components/schemas/ImageCreateSummary"
              examples:
                Successful CreateImagesFromFiles request:
                  $ref: "#/components/examples/Successful_CreateImagesFromFiles_req\
                    uest"
      summary: Add the provided batch of images to the set of training images
      tags:
        - ImageApi
  "/projects/{projectId}/images/predictions":
    post:
      operationId: CreateImagesFromPredictions
      parameters:
        - description: The project id
          in: path
          name: projectId
          required: true
          x-nullable: false
          schema:
            type: string
            format: uuid
          examples:
            Successful CreateImagesFromPredictions request:
              value: 64b822c5-8082-4b36-a426-27225f4aa18c
        - $ref: "#/components/parameters/ApiKey"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ImageIdCreateBatch"
          text/json:
            schema:
              $ref: "#/components/schemas/ImageIdCreateBatch"
          application/xml:
            schema:
              $ref: "#/components/schemas/ImageIdCreateBatch"
          text/xml:
            schema:
              $ref: "#/components/schemas/ImageIdCreateBatch"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/ImageIdCreateBatch"
        description: Image and tag ids. Limited to 64 images and 20 tags per batch
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ImageCreateSummary"
              examples:
                Successful CreateImagesFromPredictions request:
                  $ref: "#/components/examples/Successful_CreateImagesFromPredictio\
                    ns_request"
            text/json:
              schema:
                $ref: "#/components/schemas/ImageCreateSummary"
              examples:
                Successful CreateImagesFromPredictions request:
                  $ref: "#/components/examples/Successful_CreateImagesFromPredictio\
                    ns_request"
            application/xml:
              schema:
                $ref: "#/components/schemas/ImageCreateSummary"
              examples:
                Successful CreateImagesFromPredictions request:
                  $ref: "#/components/examples/Successful_CreateImagesFromPredictio\
                    ns_request"
            text/xml:
              schema:
                $ref: "#/components/schemas/ImageCreateSummary"
              examples:
                Successful CreateImagesFromPredictions request:
                  $ref: "#/components/examples/Successful_CreateImagesFromPredictio\
                    ns_request"
      summary: Add the specified predicted images to the set of training images
      tags:
        - ImageApi
  "/projects/{projectId}/images/tagged":
    get:
      description: "This API supports batching and range selection. By default it will only
        return first 50 images matching images.\r

        Use the {take} and {skip} parameters to control how many images
        to return in a given batch.\r

        The filtering is on an and/or relationship. For example, if the
        provided tag ids are for the \"Dog\" and\r

        \"Cat\" tags, then only images tagged with Dog and/or Cat will
        be returned"
      operationId: GetTaggedImages
      parameters:
        - description: The project id
          in: path
          name: projectId
          required: true
          x-nullable: false
          schema:
            type: string
            format: uuid
          examples:
            Successful GetTaggedImages request:
              value: bc3f7dad-5544-468c-8573-3ef04d55463e
        - description: The iteration id. Defaults to workspace
          in: query
          name: iterationId
          required: false
          x-nullable: true
          schema:
            type: string
            format: uuid
          examples:
            Successful GetTaggedImages request:
              value: cf0f83fb-ebaa-4b25-8e34-613a6a0b8a12
        - description: An list of tags ids to filter the images. Defaults to all tagged
            images when null. Limited to 20
          in: query
          name: tagIds
          required: false
          x-nullable: true
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
              nullable: false
        - description: The ordering. Defaults to newest
          in: query
          name: orderBy
          required: false
          x-nullable: false
          schema:
            type: string
            enum:
              - Newest
              - Oldest
        - description: Maximum number of images to return. Defaults to 50, limited to 256
          in: query
          name: take
          required: false
          schema:
            type: integer
            format: int32
            default: 50
        - description: Number of images to skip before beginning the image batch. Defaults
            to 0
          in: query
          name: skip
          required: false
          schema:
            type: integer
            format: int32
            default: 0
        - $ref: "#/components/parameters/ApiKey"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/Image"
                type: array
                nullable: true
              examples:
                Successful GetTaggedImages request:
                  $ref: "#/components/examples/Successful_GetTaggedImages_request"
            text/json:
              schema:
                items:
                  $ref: "#/components/schemas/Image"
                type: array
                nullable: true
              examples:
                Successful GetTaggedImages request:
                  $ref: "#/components/examples/Successful_GetTaggedImages_request"
            application/xml:
              schema:
                items:
                  $ref: "#/components/schemas/Image"
                type: array
                nullable: true
              examples:
                Successful GetTaggedImages request:
                  $ref: "#/components/examples/Successful_GetTaggedImages_request"
            text/xml:
              schema:
                items:
                  $ref: "#/components/schemas/Image"
                type: array
                nullable: true
              examples:
                Successful GetTaggedImages request:
                  $ref: "#/components/examples/Successful_GetTaggedImages_request"
      summary: Get tagged images for a given project iteration
      tags:
        - ImageApi
  "/projects/{projectId}/images/tags":
    delete:
      operationId: DeleteImageTags
      parameters:
        - description: The project id
          in: path
          name: projectId
          required: true
          x-nullable: false
          schema:
            type: string
            format: uuid
          examples:
            Successful DeleteImageTags request:
              value: 64b822c5-8082-4b36-a426-27225f4aa18c
        - description: Image ids. Limited to 64 images
          in: query
          name: imageIds
          required: true
          x-nullable: true
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
              nullable: false
          examples:
            Successful DeleteImageTags request:
              value:
                - e31a14ab-5d78-4f7b-a267-3a1e4fd8a758
                - cf0f83fb-ebaa-4b25-8e34-613a6a0b8a12
        - description: Tags to be deleted from the specified images. Limited to 20 tags
          in: query
          name: tagIds
          required: true
          x-nullable: true
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
              nullable: false
          examples:
            Successful DeleteImageTags request:
              value:
                - e31a14ab-5d78-4f7b-a267-3a1e4fd8a758
                - cf0f83fb-ebaa-4b25-8e34-613a6a0b8a12
        - $ref: "#/components/parameters/ApiKey"
      responses:
        "204":
          description: No Content
      summary: Remove a set of tags from a set of images
      tags:
        - ImageApi
    post:
      operationId: PostImageTags
      parameters:
        - description: The project id
          in: path
          name: projectId
          required: true
          x-nullable: false
          schema:
            type: string
            format: uuid
          examples:
            Successful PostImageTags request:
              value: bc3f7dad-5544-468c-8573-3ef04d55463e
        - $ref: "#/components/parameters/ApiKey"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ImageTagCreateBatch"
          text/json:
            schema:
              $ref: "#/components/schemas/ImageTagCreateBatch"
          application/xml:
            schema:
              $ref: "#/components/schemas/ImageTagCreateBatch"
          text/xml:
            schema:
              $ref: "#/components/schemas/ImageTagCreateBatch"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/ImageTagCreateBatch"
        description: Batch of image tags. Limited to 128 tags per batch
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ImageTagCreateSummary"
              examples:
                Successful PostImageTags request:
                  $ref: "#/components/examples/Successful_PostImageTags_request"
            text/json:
              schema:
                $ref: "#/components/schemas/ImageTagCreateSummary"
              examples:
                Successful PostImageTags request:
                  $ref: "#/components/examples/Successful_PostImageTags_request"
            application/xml:
              schema:
                $ref: "#/components/schemas/ImageTagCreateSummary"
              examples:
                Successful PostImageTags request:
                  $ref: "#/components/examples/Successful_PostImageTags_request"
            text/xml:
              schema:
                $ref: "#/components/schemas/ImageTagCreateSummary"
              examples:
                Successful PostImageTags request:
                  $ref: "#/components/examples/Successful_PostImageTags_request"
      summary: Associate a set of images with a set of tags
      tags:
        - ImageApi
  "/projects/{projectId}/images/untagged":
    get:
      description: "This API supports batching and range selection. By default it will only
        return first 50 images matching images.\r

        Use the {take} and {skip} parameters to control how many images
        to return in a given batch."
      operationId: GetUntaggedImages
      parameters:
        - description: The project id
          in: path
          name: projectId
          required: true
          x-nullable: false
          schema:
            type: string
            format: uuid
          examples:
            Successful GetUntaggedImages request:
              value: bc3f7dad-5544-468c-8573-3ef04d55463e
        - description: The iteration id. Defaults to workspace
          in: query
          name: iterationId
          required: false
          x-nullable: true
          schema:
            type: string
            format: uuid
          examples:
            Successful GetUntaggedImages request:
              value: cf0f83fb-ebaa-4b25-8e34-613a6a0b8a12
        - description: The ordering. Defaults to newest
          in: query
          name: orderBy
          required: false
          x-nullable: false
          schema:
            type: string
            enum:
              - Newest
              - Oldest
        - description: Maximum number of images to return. Defaults to 50, limited to 256
          in: query
          name: take
          required: false
          schema:
            type: integer
            format: int32
            default: 50
        - description: Number of images to skip before beginning the image batch. Defaults
            to 0
          in: query
          name: skip
          required: false
          schema:
            type: integer
            format: int32
            default: 0
        - $ref: "#/components/parameters/ApiKey"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/Image"
                type: array
                nullable: true
              examples:
                Successful GetUntaggedImages request:
                  $ref: "#/components/examples/Successful_GetUntaggedImages_request"
            text/json:
              schema:
                items:
                  $ref: "#/components/schemas/Image"
                type: array
                nullable: true
              examples:
                Successful GetUntaggedImages request:
                  $ref: "#/components/examples/Successful_GetUntaggedImages_request"
            application/xml:
              schema:
                items:
                  $ref: "#/components/schemas/Image"
                type: array
                nullable: true
              examples:
                Successful GetUntaggedImages request:
                  $ref: "#/components/examples/Successful_GetUntaggedImages_request"
            text/xml:
              schema:
                items:
                  $ref: "#/components/schemas/Image"
                type: array
                nullable: true
              examples:
                Successful GetUntaggedImages request:
                  $ref: "#/components/examples/Successful_GetUntaggedImages_request"
      summary: Get untagged images for a given project iteration
      tags:
        - ImageApi
  "/projects/{projectId}/images/urls":
    post:
      operationId: CreateImagesFromUrls
      parameters:
        - description: The project id
          in: path
          name: projectId
          required: true
          x-nullable: false
          schema:
            type: string
            format: uuid
          examples:
            Successful CreateImagesFromUrls request:
              value: 64b822c5-8082-4b36-a426-27225f4aa18c
        - $ref: "#/components/parameters/ApiKey"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ImageUrlCreateBatch"
          text/json:
            schema:
              $ref: "#/components/schemas/ImageUrlCreateBatch"
          application/xml:
            schema:
              $ref: "#/components/schemas/ImageUrlCreateBatch"
          text/xml:
            schema:
              $ref: "#/components/schemas/ImageUrlCreateBatch"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/ImageUrlCreateBatch"
        description: Image urls and tag ids. Limited to 64 images and 20 tags per batch
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ImageCreateSummary"
              examples:
                Successful CreateImagesFromUrls request:
                  $ref: "#/components/examples/Successful_CreateImagesFromUrls_requ\
                    est"
            text/json:
              schema:
                $ref: "#/components/schemas/ImageCreateSummary"
              examples:
                Successful CreateImagesFromUrls request:
                  $ref: "#/components/examples/Successful_CreateImagesFromUrls_requ\
                    est"
            application/xml:
              schema:
                $ref: "#/components/schemas/ImageCreateSummary"
              examples:
                Successful CreateImagesFromUrls request:
                  $ref: "#/components/examples/Successful_CreateImagesFromUrls_requ\
                    est"
            text/xml:
              schema:
                $ref: "#/components/schemas/ImageCreateSummary"
              examples:
                Successful CreateImagesFromUrls request:
                  $ref: "#/components/examples/Successful_CreateImagesFromUrls_requ\
                    est"
      summary: Add the provided images urls to the set of training images
      tags:
        - ImageApi
  "/projects/{projectId}/iterations":
    get:
      operationId: GetIterations
      parameters:
        - description: The project id
          in: path
          name: projectId
          required: true
          x-nullable: false
          schema:
            type: string
            format: uuid
          examples:
            Successful GetIterations request:
              value: 64b822c5-8082-4b36-a426-27225f4aa18c
        - $ref: "#/components/parameters/ApiKey"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/Iteration"
                type: array
                nullable: true
              examples:
                Successful GetIterations request:
                  $ref: "#/components/examples/Successful_GetIterations_request"
            text/json:
              schema:
                items:
                  $ref: "#/components/schemas/Iteration"
                type: array
                nullable: true
              examples:
                Successful GetIterations request:
                  $ref: "#/components/examples/Successful_GetIterations_request"
            application/xml:
              schema:
                items:
                  $ref: "#/components/schemas/Iteration"
                type: array
                nullable: true
              examples:
                Successful GetIterations request:
                  $ref: "#/components/examples/Successful_GetIterations_request"
            text/xml:
              schema:
                items:
                  $ref: "#/components/schemas/Iteration"
                type: array
                nullable: true
              examples:
                Successful GetIterations request:
                  $ref: "#/components/examples/Successful_GetIterations_request"
      summary: Get iterations for the project
      tags:
        - ProjectApi
  "/projects/{projectId}/iterations/{iterationId}":
    delete:
      operationId: DeleteIteration
      parameters:
        - description: The project id
          in: path
          name: projectId
          required: true
          x-nullable: false
          schema:
            type: string
            format: uuid
          examples:
            Successful DeleteIteration request:
              value: 64b822c5-8082-4b36-a426-27225f4aa18c
        - description: The iteration id
          in: path
          name: iterationId
          required: true
          x-nullable: false
          schema:
            type: string
            format: uuid
          examples:
            Successful DeleteIteration request:
              value: e31a14ab-5d78-4f7b-a267-3a1e4fd8a758
        - $ref: "#/components/parameters/ApiKey"
      responses:
        "204":
          description: No Content
      summary: Delete a specific iteration of a project
      tags:
        - ProjectApi
    get:
      operationId: GetIteration
      parameters:
        - description: The id of the project the iteration belongs to
          in: path
          name: projectId
          required: true
          x-nullable: false
          schema:
            type: string
            format: uuid
          examples:
            Successful GetIteration request:
              value: 64b822c5-8082-4b36-a426-27225f4aa18c
        - description: The id of the iteration to get
          in: path
          name: iterationId
          required: true
          x-nullable: false
          schema:
            type: string
            format: uuid
          examples:
            Successful GetIteration request:
              value: e31a14ab-5d78-4f7b-a267-3a1e4fd8a758
        - $ref: "#/components/parameters/ApiKey"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Iteration"
              examples:
                Successful GetIteration request:
                  $ref: "#/components/examples/Successful_GetIteration_request"
            text/json:
              schema:
                $ref: "#/components/schemas/Iteration"
              examples:
                Successful GetIteration request:
                  $ref: "#/components/examples/Successful_GetIteration_request"
            application/xml:
              schema:
                $ref: "#/components/schemas/Iteration"
              examples:
                Successful GetIteration request:
                  $ref: "#/components/examples/Successful_GetIteration_request"
            text/xml:
              schema:
                $ref: "#/components/schemas/Iteration"
              examples:
                Successful GetIteration request:
                  $ref: "#/components/examples/Successful_GetIteration_request"
      summary: Get a specific iteration
      tags:
        - ProjectApi
    patch:
      operationId: UpdateIteration
      parameters:
        - description: Project id
          in: path
          name: projectId
          required: true
          x-nullable: false
          schema:
            type: string
            format: uuid
          examples:
            Successful UpdateIteration request:
              value: 64b822c5-8082-4b36-a426-27225f4aa18c
        - description: Iteration id
          in: path
          name: iterationId
          required: true
          x-nullable: false
          schema:
            type: string
            format: uuid
          examples:
            Successful UpdateIteration request:
              value: e31a14ab-5d78-4f7b-a267-3a1e4fd8a758
        - $ref: "#/components/parameters/ApiKey"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Iteration"
          text/json:
            schema:
              $ref: "#/components/schemas/Iteration"
          application/xml:
            schema:
              $ref: "#/components/schemas/Iteration"
          text/xml:
            schema:
              $ref: "#/components/schemas/Iteration"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/Iteration"
        description: The updated iteration model
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Iteration"
              examples:
                Successful UpdateIteration request:
                  $ref: "#/components/examples/Successful_UpdateIteration_request"
            text/json:
              schema:
                $ref: "#/components/schemas/Iteration"
              examples:
                Successful UpdateIteration request:
                  $ref: "#/components/examples/Successful_UpdateIteration_request"
            application/xml:
              schema:
                $ref: "#/components/schemas/Iteration"
              examples:
                Successful UpdateIteration request:
                  $ref: "#/components/examples/Successful_UpdateIteration_request"
            text/xml:
              schema:
                $ref: "#/components/schemas/Iteration"
              examples:
                Successful UpdateIteration request:
                  $ref: "#/components/examples/Successful_UpdateIteration_request"
      summary: Update a specific iteration
      tags:
        - ProjectApi
  "/projects/{projectId}/iterations/{iterationId}/export":
    get:
      operationId: GetExports
      parameters:
        - description: The project id
          in: path
          name: projectId
          required: true
          x-nullable: false
          schema:
            type: string
            format: uuid
          examples:
            Successful GetExports request:
              value: 64b822c5-8082-4b36-a426-27225f4aa18c
        - description: The iteration id
          in: path
          name: iterationId
          required: true
          x-nullable: false
          schema:
            type: string
            format: uuid
          examples:
            Successful GetExports request:
              value: e31a14ab-5d78-4f7b-a267-3a1e4fd8a758
        - $ref: "#/components/parameters/ApiKey"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/Export"
                type: array
                nullable: true
              examples:
                Successful GetExports request:
                  $ref: "#/components/examples/Successful_GetExports_request"
            text/json:
              schema:
                items:
                  $ref: "#/components/schemas/Export"
                type: array
                nullable: true
              examples:
                Successful GetExports request:
                  $ref: "#/components/examples/Successful_GetExports_request"
            application/xml:
              schema:
                items:
                  $ref: "#/components/schemas/Export"
                type: array
                nullable: true
              examples:
                Successful GetExports request:
                  $ref: "#/components/examples/Successful_GetExports_request"
            text/xml:
              schema:
                items:
                  $ref: "#/components/schemas/Export"
                type: array
                nullable: true
              examples:
                Successful GetExports request:
                  $ref: "#/components/examples/Successful_GetExports_request"
      summary: Get the list of exports for a specific iteration
      tags:
        - ProjectApi
    post:
      operationId: ExportIteration
      parameters:
        - description: The project id
          in: path
          name: projectId
          required: true
          x-nullable: false
          schema:
            type: string
            format: uuid
          examples:
            Successful ExportIteration request:
              value: 64b822c5-8082-4b36-a426-27225f4aa18c
        - description: The iteration id
          in: path
          name: iterationId
          required: true
          x-nullable: false
          schema:
            type: string
            format: uuid
          examples:
            Successful ExportIteration request:
              value: e31a14ab-5d78-4f7b-a267-3a1e4fd8a758
        - description: The target platform (coreml or tensorflow)
          in: query
          name: platform
          required: true
          x-nullable: true
          schema:
            type: string
          examples:
            Successful ExportIteration request:
              value: tensorflow
        - $ref: "#/components/parameters/ApiKey"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Export"
              examples:
                Successful ExportIteration request:
                  $ref: "#/components/examples/Successful_ExportIteration_request"
            text/json:
              schema:
                $ref: "#/components/schemas/Export"
              examples:
                Successful ExportIteration request:
                  $ref: "#/components/examples/Successful_ExportIteration_request"
            application/xml:
              schema:
                $ref: "#/components/schemas/Export"
              examples:
                Successful ExportIteration request:
                  $ref: "#/components/examples/Successful_ExportIteration_request"
            text/xml:
              schema:
                $ref: "#/components/schemas/Export"
              examples:
                Successful ExportIteration request:
                  $ref: "#/components/examples/Successful_ExportIteration_request"
      summary: Export a trained iteration
      tags:
        - ProjectApi
  "/projects/{projectId}/iterations/{iterationId}/performance":
    get:
      operationId: GetIterationPerformance
      parameters:
        - description: The project id
          in: path
          name: projectId
          required: true
          x-nullable: false
          schema:
            type: string
            format: uuid
          examples:
            Successful GetIterationPerformance request:
              value: bc3f7dad-5544-468c-8573-3ef04d55463e
        - description: The id of the trained iteration
          in: path
          name: iterationId
          required: true
          x-nullable: false
          schema:
            type: string
            format: uuid
          examples:
            Successful GetIterationPerformance request:
              value: fe1e83c4-6f50-4899-9544-6bb08cf0e15a
        - description: The 0 to 1 threshold to determine positive prediction
          in: query
          name: threshold
          required: true
          schema:
            type: number
            format: float
          examples:
            Successful GetIterationPerformance request:
              value: 0.9
        - $ref: "#/components/parameters/ApiKey"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/IterationPerformance"
              examples:
                Successful GetIterationPerformance request:
                  $ref: "#/components/examples/Successful_GetIterationPerformance_r\
                    equest"
            text/json:
              schema:
                $ref: "#/components/schemas/IterationPerformance"
              examples:
                Successful GetIterationPerformance request:
                  $ref: "#/components/examples/Successful_GetIterationPerformance_r\
                    equest"
            application/xml:
              schema:
                $ref: "#/components/schemas/IterationPerformance"
              examples:
                Successful GetIterationPerformance request:
                  $ref: "#/components/examples/Successful_GetIterationPerformance_r\
                    equest"
            text/xml:
              schema:
                $ref: "#/components/schemas/IterationPerformance"
              examples:
                Successful GetIterationPerformance request:
                  $ref: "#/components/examples/Successful_GetIterationPerformance_r\
                    equest"
      summary: Get detailed performance information about a trained iteration
      tags:
        - ProjectApi
  "/projects/{projectId}/predictions":
    delete:
      operationId: DeletePrediction
      parameters:
        - description: The project id
          in: path
          name: projectId
          required: true
          x-nullable: false
          schema:
            type: string
            format: uuid
          examples:
            Successful DeletePrediction request:
              value: 64b822c5-8082-4b36-a426-27225f4aa18c
        - description: The prediction ids. Limited to 64
          in: query
          name: ids
          required: true
          x-nullable: true
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
              nullable: false
          examples:
            Successful DeletePrediction request:
              value:
                - e31a14ab-5d78-4f7b-a267-3a1e4fd8a758
                - cf0f83fb-ebaa-4b25-8e34-613a6a0b8a12
        - $ref: "#/components/parameters/ApiKey"
      responses:
        "204":
          description: No Content
      summary: Delete a set of predicted images and their associated prediction results
      tags:
        - PredictionsApi
  "/projects/{projectId}/predictions/query":
    post:
      operationId: QueryPredictionResults
      parameters:
        - description: The project id
          in: path
          name: projectId
          required: true
          x-nullable: false
          schema:
            type: string
            format: uuid
          examples:
            Successful QueryPredictionResults request:
              value: bc3f7dad-5544-468c-8573-3ef04d55463e
        - $ref: "#/components/parameters/ApiKey"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PredictionQueryToken"
          text/json:
            schema:
              $ref: "#/components/schemas/PredictionQueryToken"
          application/xml:
            schema:
              $ref: "#/components/schemas/PredictionQueryToken"
          text/xml:
            schema:
              $ref: "#/components/schemas/PredictionQueryToken"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/PredictionQueryToken"
        description: Parameters used to query the predictions. Limited to combining 2 tags
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PredictionQuery"
              examples:
                Successful QueryPredictionResults request:
                  $ref: "#/components/examples/Successful_QueryPredictionResults_re\
                    quest"
            text/json:
              schema:
                $ref: "#/components/schemas/PredictionQuery"
              examples:
                Successful QueryPredictionResults request:
                  $ref: "#/components/examples/Successful_QueryPredictionResults_re\
                    quest"
            application/xml:
              schema:
                $ref: "#/components/schemas/PredictionQuery"
              examples:
                Successful QueryPredictionResults request:
                  $ref: "#/components/examples/Successful_QueryPredictionResults_re\
                    quest"
            text/xml:
              schema:
                $ref: "#/components/schemas/PredictionQuery"
              examples:
                Successful QueryPredictionResults request:
                  $ref: "#/components/examples/Successful_QueryPredictionResults_re\
                    quest"
      summary: Get images that were sent to your prediction endpoint
      tags:
        - PredictionsApi
  "/projects/{projectId}/quicktest/image":
    post:
      operationId: QuickTestImage
      parameters:
        - description: The project id
          in: path
          name: projectId
          required: true
          x-nullable: false
          schema:
            type: string
            format: uuid
          examples:
            Successful QuickTestImage request:
              value: 64b822c5-8082-4b36-a426-27225f4aa18c
        - description: "Optional. Specifies the id of a particular iteration to evaluate
            against.\r

            \            The default iteration for the project will
            be used when not specified."
          in: query
          name: iterationId
          required: false
          x-nullable: true
          schema:
            type: string
            format: uuid
          examples:
            Successful QuickTestImage request:
              value: fe1e83c4-6f50-4899-9544-6bb08cf0e15a
        - $ref: "#/components/parameters/ApiKey"
      requestBody:
        $ref: "#/components/requestBodies/CreateImagesFromData"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ImagePredictionResult"
              examples:
                Successful QuickTestImage request:
                  $ref: "#/components/examples/Successful_QuickTestImage_request"
            text/json:
              schema:
                $ref: "#/components/schemas/ImagePredictionResult"
              examples:
                Successful QuickTestImage request:
                  $ref: "#/components/examples/Successful_QuickTestImage_request"
            application/xml:
              schema:
                $ref: "#/components/schemas/ImagePredictionResult"
              examples:
                Successful QuickTestImage request:
                  $ref: "#/components/examples/Successful_QuickTestImage_request"
            text/xml:
              schema:
                $ref: "#/components/schemas/ImagePredictionResult"
              examples:
                Successful QuickTestImage request:
                  $ref: "#/components/examples/Successful_QuickTestImage_request"
      summary: Quick test an image
      tags:
        - PredictionsApi
  "/projects/{projectId}/quicktest/url":
    post:
      operationId: QuickTestImageUrl
      parameters:
        - description: The project to evaluate against
          in: path
          name: projectId
          required: true
          x-nullable: false
          schema:
            type: string
            format: uuid
          examples:
            Successful QuickTestImageUrl request:
              value: 64b822c5-8082-4b36-a426-27225f4aa18c
        - description: "Optional. Specifies the id of a particular iteration to evaluate
            against.\r

            \            The default iteration for the project will
            be used when not specified."
          in: query
          name: iterationId
          required: false
          x-nullable: true
          schema:
            type: string
            format: uuid
          examples:
            Successful QuickTestImageUrl request:
              value: fe1e83c4-6f50-4899-9544-6bb08cf0e15a
        - $ref: "#/components/parameters/ApiKey"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ImageUrl"
          text/json:
            schema:
              $ref: "#/components/schemas/ImageUrl"
          application/xml:
            schema:
              $ref: "#/components/schemas/ImageUrl"
          text/xml:
            schema:
              $ref: "#/components/schemas/ImageUrl"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/ImageUrl"
        description: An {Iris.Web.Api.Models.ImageUrl} that contains the url of the image
          to be evaluated
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ImagePredictionResult"
              examples:
                Successful QuickTestImageUrl request:
                  $ref: "#/components/examples/Successful_QuickTestImageUrl_request"
            text/json:
              schema:
                $ref: "#/components/schemas/ImagePredictionResult"
              examples:
                Successful QuickTestImageUrl request:
                  $ref: "#/components/examples/Successful_QuickTestImageUrl_request"
            application/xml:
              schema:
                $ref: "#/components/schemas/ImagePredictionResult"
              examples:
                Successful QuickTestImageUrl request:
                  $ref: "#/components/examples/Successful_QuickTestImageUrl_request"
            text/xml:
              schema:
                $ref: "#/components/schemas/ImagePredictionResult"
              examples:
                Successful QuickTestImageUrl request:
                  $ref: "#/components/examples/Successful_QuickTestImageUrl_request"
      summary: Quick test an image url
      tags:
        - PredictionsApi
  "/projects/{projectId}/tags":
    get:
      operationId: GetTags
      parameters:
        - description: The project id
          in: path
          name: projectId
          required: true
          x-nullable: false
          schema:
            type: string
            format: uuid
          examples:
            Successful GetTags request:
              value: bc3f7dad-5544-468c-8573-3ef04d55463e
        - description: The iteration id. Defaults to workspace
          in: query
          name: iterationId
          required: false
          x-nullable: true
          schema:
            type: string
            format: uuid
        - $ref: "#/components/parameters/ApiKey"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TagList"
              examples:
                Successful GetTags request:
                  $ref: "#/components/examples/Successful_GetTags_request"
            text/json:
              schema:
                $ref: "#/components/schemas/TagList"
              examples:
                Successful GetTags request:
                  $ref: "#/components/examples/Successful_GetTags_request"
            application/xml:
              schema:
                $ref: "#/components/schemas/TagList"
              examples:
                Successful GetTags request:
                  $ref: "#/components/examples/Successful_GetTags_request"
            text/xml:
              schema:
                $ref: "#/components/schemas/TagList"
              examples:
                Successful GetTags request:
                  $ref: "#/components/examples/Successful_GetTags_request"
      summary: Get the tags for a given project and iteration
      tags:
        - TagsApi
    post:
      operationId: CreateTag
      parameters:
        - description: The project id
          in: path
          name: projectId
          required: true
          x-nullable: false
          schema:
            type: string
            format: uuid
          examples:
            Successful CreateTag request:
              value: bc3f7dad-5544-468c-8573-3ef04d55463e
        - description: The tag name
          in: query
          name: name
          required: true
          x-nullable: true
          schema:
            type: string
          examples:
            Successful CreateTag request:
              value: Tag1
        - description: Optional description for the tag
          in: query
          name: description
          required: false
          x-nullable: true
          schema:
            type: string
          examples:
            Successful CreateTag request:
              value: Description of Tag1
        - $ref: "#/components/parameters/ApiKey"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Tag"
              examples:
                Successful CreateTag request:
                  $ref: "#/components/examples/Successful_CreateTag_request"
            text/json:
              schema:
                $ref: "#/components/schemas/Tag"
              examples:
                Successful CreateTag request:
                  $ref: "#/components/examples/Successful_CreateTag_request"
            application/xml:
              schema:
                $ref: "#/components/schemas/Tag"
              examples:
                Successful CreateTag request:
                  $ref: "#/components/examples/Successful_CreateTag_request"
            text/xml:
              schema:
                $ref: "#/components/schemas/Tag"
              examples:
                Successful CreateTag request:
                  $ref: "#/components/examples/Successful_CreateTag_request"
      summary: Create a tag for the project
      tags:
        - TagsApi
  "/projects/{projectId}/tags/{tagId}":
    delete:
      operationId: DeleteTag
      parameters:
        - description: The project id
          in: path
          name: projectId
          required: true
          x-nullable: false
          schema:
            type: string
            format: uuid
          examples:
            Successful DeleteTag request:
              value: bc3f7dad-5544-468c-8573-3ef04d55463e
        - description: Id of the tag to be deleted
          in: path
          name: tagId
          required: true
          x-nullable: false
          schema:
            type: string
            format: uuid
          examples:
            Successful DeleteTag request:
              value: 9e27bc1b-7ae7-4e3b-a4e5-36153479dc01
        - $ref: "#/components/parameters/ApiKey"
      responses:
        "204":
          description: No Content
      summary: Delete a tag from the project
      tags:
        - TagsApi
    get:
      operationId: GetTag
      parameters:
        - description: The project this tag belongs to
          in: path
          name: projectId
          required: true
          x-nullable: false
          schema:
            type: string
            format: uuid
          examples:
            Successful GetTag request:
              value: bc3f7dad-5544-468c-8573-3ef04d55463e
        - description: The tag id
          in: path
          name: tagId
          required: true
          x-nullable: false
          schema:
            type: string
            format: uuid
          examples:
            Successful GetTag request:
              value: 9e27bc1b-7ae7-4e3b-a4e5-36153479dc01
        - description: The iteration to retrieve this tag from. Optional, defaults to
            current training set
          in: query
          name: iterationId
          required: false
          x-nullable: true
          schema:
            type: string
            format: uuid
        - $ref: "#/components/parameters/ApiKey"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Tag"
              examples:
                Successful GetTag request:
                  $ref: "#/components/examples/Successful_GetTag_request"
            text/json:
              schema:
                $ref: "#/components/schemas/Tag"
              examples:
                Successful GetTag request:
                  $ref: "#/components/examples/Successful_GetTag_request"
            application/xml:
              schema:
                $ref: "#/components/schemas/Tag"
              examples:
                Successful GetTag request:
                  $ref: "#/components/examples/Successful_GetTag_request"
            text/xml:
              schema:
                $ref: "#/components/schemas/Tag"
              examples:
                Successful GetTag request:
                  $ref: "#/components/examples/Successful_GetTag_request"
      summary: Get information about a specific tag
      tags:
        - TagsApi
    patch:
      operationId: UpdateTag
      parameters:
        - description: The project id
          in: path
          name: projectId
          required: true
          x-nullable: false
          schema:
            type: string
            format: uuid
          examples:
            Successful UpdateTag request:
              value: bc3f7dad-5544-468c-8573-3ef04d55463e
        - description: The id of the target tag
          in: path
          name: tagId
          required: true
          x-nullable: false
          schema:
            type: string
            format: uuid
          examples:
            Successful UpdateTag request:
              value: 9e27bc1b-7ae7-4e3b-a4e5-36153479dc01
        - $ref: "#/components/parameters/ApiKey"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Tag"
          text/json:
            schema:
              $ref: "#/components/schemas/Tag"
          application/xml:
            schema:
              $ref: "#/components/schemas/Tag"
          text/xml:
            schema:
              $ref: "#/components/schemas/Tag"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/Tag"
        description: The updated tag model
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Tag"
              examples:
                Successful UpdateTag request:
                  $ref: "#/components/examples/Successful_UpdateTag_request"
            text/json:
              schema:
                $ref: "#/components/schemas/Tag"
              examples:
                Successful UpdateTag request:
                  $ref: "#/components/examples/Successful_UpdateTag_request"
            application/xml:
              schema:
                $ref: "#/components/schemas/Tag"
              examples:
                Successful UpdateTag request:
                  $ref: "#/components/examples/Successful_UpdateTag_request"
            text/xml:
              schema:
                $ref: "#/components/schemas/Tag"
              examples:
                Successful UpdateTag request:
                  $ref: "#/components/examples/Successful_UpdateTag_request"
      summary: Update a tag
      tags:
        - TagsApi
  "/projects/{projectId}/train":
    post:
      operationId: TrainProject
      parameters:
        - description: The project id
          in: path
          name: projectId
          required: true
          x-nullable: false
          schema:
            type: string
            format: uuid
          examples:
            Successful TrainProject request:
              value: 64b822c5-8082-4b36-a426-27225f4aa18c
        - $ref: "#/components/parameters/ApiKey"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Iteration"
              examples:
                Successful TrainProject request:
                  $ref: "#/components/examples/Successful_TrainProject_request"
            text/json:
              schema:
                $ref: "#/components/schemas/Iteration"
              examples:
                Successful TrainProject request:
                  $ref: "#/components/examples/Successful_TrainProject_request"
            application/xml:
              schema:
                $ref: "#/components/schemas/Iteration"
              examples:
                Successful TrainProject request:
                  $ref: "#/components/examples/Successful_TrainProject_request"
            text/xml:
              schema:
                $ref: "#/components/schemas/Iteration"
              examples:
                Successful TrainProject request:
                  $ref: "#/components/examples/Successful_TrainProject_request"
      summary: Queues project for training
      tags:
        - ProjectApi
servers:
  - url: https://southcentralus.api.cognitive.microsoft.com/customvision/v1.2/Training
components:
  examples:
    Successful_GetAccountInfo_request:
      value:
        Email: User@email.com
        Keys:
          PredictionKeys:
            PrimaryKey: "{API Key}"
            SecondaryKey: "{API Key}"
          TrainingKeys:
            PrimaryKey: "{API Key}"
            SecondaryKey: "{API Key}"
        Quotas:
          PerProject:
            - Images:
                Total: 1000
                Used: 0
              Iterations:
                Total: 20
                Used: 0
              ProjectId: bc3f7dad-5544-468c-8573-3ef04d55463e
              Tags:
                Total: 50
                Used: 2
          Predictions:
            Total: 1000
            Used: 0
          Projects:
            Total: 20
            Used: 9
          Tier: Free
        UserName: User Name
    Successful_GetDomains_request:
      value:
        - Exportable: false
          Id: ee85a74c-405e-4adc-bb47-ffa8ca0c9f31
          Name: General
        - Exportable: false
          Id: c151d5b5-dd07-472a-acc8-15d29dea8518
          Name: Food
        - Exportable: false
          Id: ca455789-012d-4b50-9fec-5bb63841c793
          Name: Landmarks
        - Exportable: false
          Id: b30a91ae-e3c1-4f73-a81e-c270bff27c39
          Name: Retail
        - Exportable: false
          Id: 45badf75-3591-4f26-a705-45678d3e9f5f
          Name: Adult
        - Exportable: true
          Id: 0732100f-1a38-4e49-a514-c9b44c697ab5
          Name: General (compact)
        - Exportable: true
          Id: b5cfd229-2ac7-4b2b-8d0a-2b0661344894
          Name: Landmarks (compact)
        - Exportable: true
          Id: 6b4faeda-8396-481b-9f8b-177b9fa3097f
          Name: Retail (compact)
    Successful_GetDomain_request:
      value:
        Exportable: false
        Id: b30a91ae-e3c1-4f73-a81e-c270bff27c39
        Name: Retail
    Successful_GetProjects_request:
      value:
        - Created: 2017-12-18T05:43:18.08Z
          CurrentIterationId: a2a64ff1-22e6-418b-aeea-75e3b43f122c
          Description: ""
          Id: bc3f7dad-5544-468c-8573-3ef04d55463e
          LastModified: 2017-12-18T05:43:18.0962423Z
          Name: My New Project
          Settings:
            DomainId: ee85a74c-405e-4adc-bb47-ffa8ca0c9f31
    Successful_CreateProject_request:
      value:
        Created: 2017-12-18T05:43:18.08Z
        CurrentIterationId: a2a64ff1-22e6-418b-aeea-75e3b43f122c
        Description: A test project
        Id: bc3f7dad-5544-468c-8573-3ef04d55463e
        LastModified: 2017-12-18T05:43:18.0962423Z
        Name: My New Project
        Settings:
          DomainId: ee85a74c-405e-4adc-bb47-ffa8ca0c9f31
    Successful_GetProject_request:
      value:
        Created: 2017-12-18T05:43:18.08Z
        CurrentIterationId: a2a64ff1-22e6-418b-aeea-75e3b43f122c
        Description: A test project
        Id: bc3f7dad-5544-468c-8573-3ef04d55463e
        LastModified: 2017-12-18T05:43:18.0962423Z
        Name: My New Project
        Settings:
          DomainId: ee85a74c-405e-4adc-bb47-ffa8ca0c9f31
    Successful_UpdateProject_request:
      value:
        Created: 2017-12-18T05:43:18.08Z
        CurrentIterationId: a2a64ff1-22e6-418b-aeea-75e3b43f122c
        Description: A new Description
        Id: bc3f7dad-5544-468c-8573-3ef04d55463e
        LastModified: 2017-12-18T05:43:18.0962423Z
        Name: New Project Name
        Settings:
          DomainId: ee85a74c-405e-4adc-bb47-ffa8ca0c9f31
    Successful_CreateImagesFromData_request:
      value:
        Images:
          - Image:
              Created: 2017-12-19T15:56:10.65Z
              Height: 900
              Id: 4d6eb844-42ee-42bc-bd6f-c32455ef07c9
              ImageUri: "{Image Uri}"
              Tags:
                - Created: 2017-12-19T15:56:09.6105895Z
                  TagId: b607964f-7bd6-4a3b-a869-6791fb6aab87
              ThumbnailUri: "{Thumbnail Uri}"
              Width: 1095
            SourceUrl: '"hemlock_10.jpg"'
            Status: OK
          - Image:
              Created: 2017-12-19T15:56:10.57Z
              Height: 1531
              Id: f1855a92-b873-47e7-b513-f07a667ceda1
              ImageUri: "{Image Uri}"
              Tags:
                - Created: 2017-12-19T15:56:09.5168568Z
                  TagId: b607964f-7bd6-4a3b-a869-6791fb6aab87
              ThumbnailUri: "{Thumbnail Uri}"
              Width: 900
            SourceUrl: '"hemlock_6.jpg"'
            Status: OK
        IsBatchSuccessful: true
    Successful_CreateImagesFromFiles_request:
      value:
        Images:
          - Image:
              Created: 2017-12-19T15:56:10.65Z
              Height: 900
              Id: 4d6eb844-42ee-42bc-bd6f-c32455ef07c9
              ImageUri: "{Image Uri}"
              Tags:
                - Created: 2017-12-19T15:56:09.6105895Z
                  TagId: b607964f-7bd6-4a3b-a869-6791fb6aab87
              ThumbnailUri: "{Thumbnail Uri}"
              Width: 1095
            SourceUrl: '"hemlock_10.jpg"'
            Status: OK
        IsBatchSuccessful: true
    Successful_CreateImagesFromPredictions_request:
      value:
        Images:
          - Image:
              Created: 2017-12-19T15:56:10.65Z
              Height: 900
              Id: 4d6eb844-42ee-42bc-bd6f-c32455ef07c9
              ImageUri: "{Image Uri}"
              Tags:
                - Created: 2017-12-19T15:56:09.6105895Z
                  TagId: b607964f-7bd6-4a3b-a869-6791fb6aab87
              ThumbnailUri: "{Thumbnail Uri}"
              Width: 1095
            SourceUrl: '"hemlock_10.jpg"'
            Status: OK
        IsBatchSuccessful: true
    Successful_GetTaggedImages_request:
      value: []
    Successful_PostImageTags_request:
      value:
        Created:
          - ImageId: e31a14ab-5d78-4f7b-a267-3a1e4fd8a758
            TagId: 349d72ac-0948-4d51-b1e4-c14a1f9b848a
    Successful_GetUntaggedImages_request:
      value: []
    Successful_CreateImagesFromUrls_request:
      value:
        Images:
          - Image:
              Created: 2017-12-19T15:56:10.65Z
              Height: 900
              Id: 4d6eb844-42ee-42bc-bd6f-c32455ef07c9
              ImageUri: "{Image Uri}"
              Tags:
                - Created: 2017-12-19T15:56:09.6105895Z
                  TagId: b607964f-7bd6-4a3b-a869-6791fb6aab87
              ThumbnailUri: "{Thumbnail Uri}"
              Width: 1095
            SourceUrl: "{url to image}"
            Status: OK
        IsBatchSuccessful: true
    Successful_GetIterations_request:
      value:
        - Created: 2017-12-18T22:40:29.7304213Z
          DomainId: ee85a74c-405e-4adc-bb47-ffa8ca0c9f31
          Exportable: false
          Id: fe1e83c4-6f50-4899-9544-6bb08cf0e15a
          IsDefault: true
          LastModified: 2017-12-18T22:40:41.3173903Z
          Name: Iteration 1
          ProjectId: 64b822c5-8082-4b36-a426-27225f4aa18c
          Status: Completed
          TrainedAt: 2017-12-18T22:40:41.0058589Z
        - Created: 2017-12-18T22:40:36.9066667Z
          DomainId: ee85a74c-405e-4adc-bb47-ffa8ca0c9f31
          Exportable: false
          Id: e31a14ab-5d78-4f7b-a267-3a1e4fd8a758
          IsDefault: false
          LastModified: 2017-12-19T15:47:02.9511889Z
          Name: Iteration 2
          ProjectId: 64b822c5-8082-4b36-a426-27225f4aa18c
          Status: Completed
          TrainedAt: 2017-12-19T15:47:02.9511889Z
        - Created: 2017-12-19T15:46:59.2533333Z
          Exportable: false
          Id: 3adaf7b2-18fc-4376-9da4-b5ea160a7cf5
          IsDefault: false
          LastModified: 2017-12-19T15:46:59.2699369Z
          Name: Iteration 3
          ProjectId: 64b822c5-8082-4b36-a426-27225f4aa18c
          Status: New
    Successful_GetIteration_request:
      value:
        Created: 2017-12-18T22:40:36.9066667Z
        DomainId: ee85a74c-405e-4adc-bb47-ffa8ca0c9f31
        Exportable: false
        Id: e31a14ab-5d78-4f7b-a267-3a1e4fd8a758
        IsDefault: false
        LastModified: 2017-12-19T15:47:02.9511889Z
        Name: Iteration 2
        ProjectId: 64b822c5-8082-4b36-a426-27225f4aa18c
        Status: Completed
        TrainedAt: 2017-12-19T15:47:02.9511889Z
    Successful_UpdateIteration_request:
      value:
        Created: 2017-12-18T22:40:36.9066667Z
        DomainId: ee85a74c-405e-4adc-bb47-ffa8ca0c9f31
        Exportable: false
        Id: e31a14ab-5d78-4f7b-a267-3a1e4fd8a758
        IsDefault: false
        LastModified: 2017-12-19T15:53:07.8782881Z
        Name: Best Iteration
        ProjectId: 64b822c5-8082-4b36-a426-27225f4aa18c
        Status: Completed
        TrainedAt: 2017-12-19T15:47:02.9511889Z
    Successful_GetExports_request:
      value:
        - DownloadUri: "{Download URI"
          Platform: TensorFlow
          Status: Done
    Successful_ExportIteration_request:
      value:
        Platform: TensorFlow
        Status: Exporting
    Successful_GetIterationPerformance_request:
      value:
        PerTagPerformance:
          - Id: e31ff107-5505-4753-be42-b369b21b026c
            Name: Hemlock
            Precision: 1
            PrecisionStdDeviation: 0
            Recall: 1
            RecallStdDeviation: 0
          - Id: 349d72ac-0948-4d51-b1e4-c14a1f9b848a
            Name: Japanese Cherry
            Precision: 1
            PrecisionStdDeviation: 0
            Recall: 1
            RecallStdDeviation: 0
        Precision: 1
        PrecisionStdDeviation: 0
        Recall: 1
        RecallStdDeviation: 0
    Successful_QueryPredictionResults_request:
      value:
        Results:
          - Created: 2018-01-31T20:18:26.5806336Z
            Id: dfd2d346-3ed5-4e1e-857d-af4e32cec042
            ImageUri: <image uri>
            Iteration: b7b9d99c-a2c6-4658-9900-a98d2ff5bc66
            Predictions:
              - Probability: 1
                Tag: Tag 1
                TagId: b5f7e6a2-a481-49a6-afec-a7cef1af3544
              - Probability: 3.60627153e-12
                Tag: Tag 2
                TagId: 45619cda-d1c9-4bc8-a3e1-87c5d81adbc3
            Project: 8988643a-ae70-447d-9a22-15c4255e5ecb
            ThumbnailUri: <thumbnail uri>
        Token:
          MaxCount: 0
          OrderBy: Newest
          Session: 1:286613
          Tags:
            - Id: b5f7e6a2-a481-49a6-afec-a7cef1af3544
              MaxThreshold: 1
              MinThreshold: 0.9
    Successful_QuickTestImage_request:
      value:
        Created: 2017-12-19T14:21:41.6789561Z
        Id: 951098b2-9b69-427b-bddb-d5cb618874e3
        Iteration: fe1e83c4-6f50-4899-9544-6bb08cf0e15a
        Predictions:
          - Probability: 0.05149666
            Tag: Hemlock
            TagId: e31ff107-5505-4753-be42-b369b21b026c
          - Probability: 0
            Tag: Japanese Cherry
            TagId: 349d72ac-0948-4d51-b1e4-c14a1f9b848a
        Project: 64b822c5-8082-4b36-a426-27225f4aa18c
    Successful_QuickTestImageUrl_request:
      value:
        Created: 2017-12-19T14:21:41.6789561Z
        Id: 951098b2-9b69-427b-bddb-d5cb618874e3
        Iteration: fe1e83c4-6f50-4899-9544-6bb08cf0e15a
        Predictions:
          - Probability: 0.05149666
            Tag: Hemlock
            TagId: e31ff107-5505-4753-be42-b369b21b026c
          - Probability: 0.000193528482
            Tag: Japanese Cherry
            TagId: 349d72ac-0948-4d51-b1e4-c14a1f9b848a
        Project: 64b822c5-8082-4b36-a426-27225f4aa18c
    Successful_GetTags_request:
      value:
        Tags:
          - Description: Description of Tag1
            Id: 9e27bc1b-7ae7-4e3b-a4e5-36153479dc01
            ImageCount: 0
            Name: Tag1
        TotalTaggedImages: 0
        TotalUntaggedImages: 0
    Successful_CreateTag_request:
      value:
        Description: Description of Tag1
        Id: 9e27bc1b-7ae7-4e3b-a4e5-36153479dc01
        ImageCount: 0
        Name: Tag1
    Successful_GetTag_request:
      value:
        Description: Description of Tag1
        Id: 9e27bc1b-7ae7-4e3b-a4e5-36153479dc01
        ImageCount: 0
        Name: Tag1
    Successful_UpdateTag_request:
      value:
        Description: Better description
        Id: 9e27bc1b-7ae7-4e3b-a4e5-36153479dc01
        ImageCount: 0
        Name: Better Tag Name
    Successful_TrainProject_request:
      value:
        Created: 2017-12-18T22:40:36.9066667Z
        Exportable: false
        Id: e31a14ab-5d78-4f7b-a267-3a1e4fd8a758
        IsDefault: false
        LastModified: 2017-12-19T15:46:58.197323Z
        Name: Iteration 2
        ProjectId: 64b822c5-8082-4b36-a426-27225f4aa18c
        Status: Training
  parameters:
    ApiKey:
      in: header
      name: Training-Key
      required: true
      x-ms-client-name: ApiKey
      x-ms-parameter-location: client
      schema:
        type: string
      examples:
        Successful GetAccountInfo request:
          value: "{API Key}"
        Successful GetDomains request:
          value: "{API Key}"
        Successful GetDomain request:
          value: "{API Key}"
        Successful GetProjects request:
          value: "{API Key}"
        Successful CreateProject request:
          value: "{API Key}"
        Successful DeleteProject request:
          value: "{API Key}"
        Successful GetProject request:
          value: "{API Key}"
        Successful UpdateProject request:
          value: "{API Key}"
        Successful DeleteImages request:
          value: "{API Key}"
        Successful CreateImagesFromData request:
          value: "{API Key}"
        Successful CreateImagesFromFiles request:
          value: "{API Key}"
        Successful CreateImagesFromPredictions request:
          value: "{API Key}"
        Successful GetTaggedImages request:
          value: "{API Key}"
        Successful DeleteImageTags request:
          value: "{API Key}"
        Successful PostImageTags request:
          value: "{API Key}"
        Successful GetUntaggedImages request:
          value: "{API Key}"
        Successful CreateImagesFromUrls request:
          value: "{API Key}"
        Successful GetIterations request:
          value: "{API Key}"
        Successful DeleteIteration request:
          value: "{API Key}"
        Successful GetIteration request:
          value: "{API Key}"
        Successful UpdateIteration request:
          value: "{API Key}"
        Successful GetExports request:
          value: "{API Key}"
        Successful ExportIteration request:
          value: "{API Key}"
        Successful GetIterationPerformance request:
          value: "{API Key}"
        Successful DeletePrediction request:
          value: "{API Key}"
        Successful QueryPredictionResults request:
          value: "{API Key}"
        Successful QuickTestImage request:
          value: "{API Key}"
        Successful QuickTestImageUrl request:
          value: "{API Key}"
        Successful GetTags request:
          value: "{API Key}"
        Successful CreateTag request:
          value: "{API Key}"
        Successful DeleteTag request:
          value: "{API Key}"
        Successful GetTag request:
          value: "{API Key}"
        Successful UpdateTag request:
          value: "{API Key}"
        Successful TrainProject request:
          value: "{API Key}"
  requestBodies:
    CreateImagesFromData:
      content:
        multipart/form-data:
          schema:
            type: object
            properties:
              imageData:
                type: string
                format: binary
            required:
              - imageData
  schemas:
    Account:
      description: Represents a user account
      properties:
        Email:
          description: Gets the email associated with this account
          readOnly: true
          type: string
          nullable: true
        Keys:
          $ref: "#/components/schemas/ApiKeys"
        Quotas:
          $ref: "#/components/schemas/AccountQuota"
        UserName:
          description: Gets the name of the account owner
          readOnly: true
          type: string
          nullable: true
      type: object
      nullable: true
    AccountQuota:
      description: Represents a set of quotas associated with an account
      properties:
        PerProject:
          description: Gets a list of quotas that apply per-project for each project
          items:
            $ref: "#/components/schemas/PerProjectQuota"
          readOnly: true
          type: array
          nullable: true
        Predictions:
          $ref: "#/components/schemas/Quota"
        Projects:
          $ref: "#/components/schemas/Quota"
        Tier:
          description: Gets the tier of user
          readOnly: true
          type: string
          nullable: true
      type: object
      nullable: true
    ApiKeys:
      properties:
        PredictionKeys:
          $ref: "#/components/schemas/KeyPair"
        TrainingKeys:
          $ref: "#/components/schemas/KeyPair"
      type: object
      nullable: true
    Domain:
      properties:
        Exportable:
          readOnly: true
          type: boolean
          nullable: false
        Id:
          format: uuid
          readOnly: true
          type: string
          nullable: false
        Name:
          readOnly: true
          type: string
          nullable: true
      type: object
      nullable: true
    Export:
      properties:
        DownloadUri:
          readOnly: true
          type: string
          nullable: true
        Platform:
          enum:
            - CoreML
            - TensorFlow
          readOnly: true
          type: string
          nullable: false
        Status:
          enum:
            - Exporting
            - Failed
            - Done
          readOnly: true
          type: string
          nullable: false
      type: object
      nullable: true
    Image:
      description: Image model to be sent as JSON
      properties:
        Created:
          format: date-time
          readOnly: true
          type: string
          nullable: false
        Height:
          format: int32
          readOnly: true
          type: integer
          nullable: false
        Id:
          format: uuid
          readOnly: true
          type: string
          nullable: false
        ImageUri:
          readOnly: true
          type: string
          nullable: true
        Predictions:
          items:
            $ref: "#/components/schemas/PredictionTag"
          readOnly: true
          type: array
          nullable: true
        Tags:
          items:
            $ref: "#/components/schemas/ImageTag"
          readOnly: true
          type: array
          nullable: true
        ThumbnailUri:
          readOnly: true
          type: string
          nullable: true
        Width:
          format: int32
          readOnly: true
          type: integer
          nullable: false
      type: object
      nullable: true
    ImageCreateResult:
      properties:
        Image:
          $ref: "#/components/schemas/Image"
        SourceUrl:
          readOnly: true
          type: string
          nullable: true
        Status:
          enum:
            - OK
            - OKDuplicate
            - ErrorSource
            - ErrorImageFormat
            - ErrorImageSize
            - ErrorStorage
            - ErrorLimitExceed
            - ErrorTagLimitExceed
            - ErrorUnknown
          readOnly: true
          type: string
          nullable: false
      type: object
      nullable: true
    ImageCreateSummary:
      properties:
        Images:
          items:
            $ref: "#/components/schemas/ImageCreateResult"
          readOnly: true
          type: array
          nullable: true
        IsBatchSuccessful:
          readOnly: true
          type: boolean
          nullable: false
      type: object
      nullable: true
    ImageFileCreateBatch:
      properties:
        Images:
          items:
            $ref: "#/components/schemas/ImageFileCreateEntry"
          type: array
          nullable: true
        TagIds:
          items:
            format: uuid
            type: string
            nullable: false
          type: array
          nullable: true
      type: object
      nullable: true
    ImageFileCreateEntry:
      properties:
        Contents:
          format: byte
          type: string
          nullable: true
        Name:
          type: string
          nullable: true
        TagIds:
          items:
            format: uuid
            type: string
            nullable: false
          type: array
          nullable: true
      type: object
      nullable: true
    ImageIdCreateBatch:
      properties:
        Images:
          items:
            $ref: "#/components/schemas/ImageIdCreateEntry"
          type: array
          nullable: true
        TagIds:
          items:
            format: uuid
            type: string
            nullable: false
          type: array
          nullable: true
      type: object
      nullable: true
    ImageIdCreateEntry:
      properties:
        Id:
          format: uuid
          type: string
          nullable: false
        TagIds:
          items:
            format: uuid
            type: string
            nullable: false
          type: array
          nullable: true
      type: object
      nullable: true
    ImagePredictionResult:
      description: result of an image prediction request
      properties:
        Created:
          format: date-time
          readOnly: true
          type: string
          nullable: false
        Id:
          format: uuid
          readOnly: true
          type: string
          nullable: false
        Iteration:
          format: uuid
          readOnly: true
          type: string
          nullable: false
        Predictions:
          items:
            $ref: "#/components/schemas/ImageTagPrediction"
          readOnly: true
          type: array
          nullable: true
        Project:
          format: uuid
          readOnly: true
          type: string
          nullable: false
      type: object
      nullable: true
    ImageTag:
      properties:
        Created:
          format: date-time
          readOnly: true
          type: string
          nullable: false
        TagId:
          format: uuid
          readOnly: true
          type: string
          nullable: false
      type: object
      nullable: true
    ImageTagCreateBatch:
      properties:
        Tags:
          items:
            $ref: "#/components/schemas/ImageTagCreateEntry"
          type: array
          nullable: true
      type: object
      nullable: true
    ImageTagCreateEntry:
      properties:
        ImageId:
          format: uuid
          type: string
          nullable: false
        TagId:
          format: uuid
          type: string
          nullable: false
      type: object
      nullable: true
    ImageTagCreateSummary:
      properties:
        Created:
          items:
            $ref: "#/components/schemas/ImageTagCreateEntry"
          type: array
          nullable: true
        Duplicated:
          items:
            $ref: "#/components/schemas/ImageTagCreateEntry"
          type: array
          nullable: true
        Exceeded:
          items:
            $ref: "#/components/schemas/ImageTagCreateEntry"
          type: array
          nullable: true
      type: object
      nullable: true
    ImageTagPrediction:
      properties:
        Probability:
          format: float
          readOnly: true
          type: number
          nullable: false
        Tag:
          readOnly: true
          type: string
          nullable: true
        TagId:
          format: uuid
          readOnly: true
          type: string
          nullable: false
      type: object
      nullable: true
    ImageUrl:
      properties:
        Url:
          type: string
          nullable: true
      type: object
      nullable: true
    ImageUrlCreateBatch:
      properties:
        Images:
          items:
            $ref: "#/components/schemas/ImageUrlCreateEntry"
          type: array
          nullable: true
        TagIds:
          items:
            format: uuid
            type: string
            nullable: false
          type: array
          nullable: true
      type: object
      nullable: true
    ImageUrlCreateEntry:
      properties:
        TagIds:
          items:
            format: uuid
            type: string
            nullable: false
          type: array
          nullable: true
        Url:
          type: string
          nullable: true
      type: object
      nullable: true
    Iteration:
      description: Iteration model to be sent over JSON
      properties:
        Created:
          description: Gets the time this iteration was completed
          format: date-time
          readOnly: true
          type: string
          nullable: false
        DomainId:
          description: Get or sets a guid of the domain the iteration has been trained on
          format: uuid
          readOnly: true
          type: string
          nullable: true
        Exportable:
          description: Whether the iteration can be exported to another format for download
          readOnly: true
          type: boolean
          nullable: false
        Id:
          description: Gets the id of the iteration
          format: uuid
          readOnly: true
          type: string
          nullable: false
        IsDefault:
          description: Gets or sets a value indicating whether the iteration is the default
            iteration for the project
          type: boolean
          nullable: false
        LastModified:
          description: Gets the time this iteration was last modified
          format: date-time
          readOnly: true
          type: string
          nullable: false
        Name:
          description: Gets or sets the name of the iteration
          type: string
          nullable: true
        ProjectId:
          description: Gets the project id of the iteration
          format: uuid
          readOnly: true
          type: string
          nullable: false
        Status:
          description: Gets the current iteration status
          readOnly: true
          type: string
          nullable: true
        TrainedAt:
          description: Gets the time this iteration was last modified
          format: date-time
          readOnly: true
          type: string
          nullable: true
      type: object
      nullable: true
    IterationPerformance:
      description: Represents the detailed performance data for a trained iteration
      properties:
        PerTagPerformance:
          description: Gets the per-tag performance details for this iteration
          items:
            $ref: "#/components/schemas/TagPerformance"
          readOnly: true
          type: array
          nullable: true
        Precision:
          description: Gets the precision
          format: double
          readOnly: true
          type: number
          nullable: false
        PrecisionStdDeviation:
          description: Gets the standard deviation for the precision
          format: double
          readOnly: true
          type: number
          nullable: false
        Recall:
          description: Gets the recall
          format: double
          readOnly: true
          type: number
          nullable: false
        RecallStdDeviation:
          description: Gets the standard deviation for the recall
          format: double
          readOnly: true
          type: number
          nullable: false
      type: object
      nullable: true
    KeyPair:
      properties:
        PrimaryKey:
          type: string
          nullable: true
        SecondaryKey:
          type: string
          nullable: true
      type: object
      nullable: true
    PerProjectQuota:
      description: Represents a set of quotas for a given project
      properties:
        Images:
          $ref: "#/components/schemas/Quota"
        Iterations:
          $ref: "#/components/schemas/Quota"
        ProjectId:
          description: Gets the project id of the project this quota applies to
          format: uuid
          readOnly: true
          type: string
          nullable: false
        Tags:
          $ref: "#/components/schemas/Quota"
      type: object
      nullable: true
    Prediction:
      description: result of an image classification request
      properties:
        Created:
          format: date-time
          readOnly: true
          type: string
          nullable: false
        Id:
          format: uuid
          readOnly: true
          type: string
          nullable: false
        ImageUri:
          readOnly: true
          type: string
          nullable: true
        Iteration:
          format: uuid
          readOnly: true
          type: string
          nullable: false
        Predictions:
          items:
            $ref: "#/components/schemas/PredictionTag"
          readOnly: true
          type: array
          nullable: true
        Project:
          format: uuid
          readOnly: true
          type: string
          nullable: false
        ThumbnailUri:
          readOnly: true
          type: string
          nullable: true
      type: object
      nullable: true
    PredictionQuery:
      properties:
        Results:
          items:
            $ref: "#/components/schemas/Prediction"
          readOnly: true
          type: array
          nullable: true
        Token:
          $ref: "#/components/schemas/PredictionQueryToken"
      type: object
      nullable: true
    PredictionQueryTag:
      properties:
        Id:
          format: uuid
          readOnly: true
          type: string
          nullable: false
        MaxThreshold:
          format: float
          readOnly: true
          type: number
          nullable: false
        MinThreshold:
          format: float
          readOnly: true
          type: number
          nullable: false
      type: object
      nullable: true
    PredictionQueryToken:
      properties:
        Application:
          type: string
          nullable: true
        Continuation:
          type: string
          nullable: true
        EndTime:
          format: date-time
          type: string
          nullable: true
        IterationId:
          format: uuid
          type: string
          nullable: true
        MaxCount:
          format: int32
          type: integer
          nullable: false
        OrderBy:
          enum:
            - Newest
            - Oldest
            - Suggested
          type: string
          nullable: false
        Session:
          type: string
          nullable: true
        StartTime:
          format: date-time
          type: string
          nullable: true
        Tags:
          items:
            $ref: "#/components/schemas/PredictionQueryTag"
          type: array
          nullable: true
      type: object
      nullable: true
    PredictionTag:
      properties:
        Probability:
          format: float
          readOnly: true
          type: number
          nullable: false
        Tag:
          readOnly: true
          type: string
          nullable: true
        TagId:
          format: uuid
          readOnly: true
          type: string
          nullable: false
      type: object
      nullable: true
    Project:
      description: Represents a project
      properties:
        Created:
          description: Gets the date this project was created
          format: date-time
          readOnly: true
          type: string
          nullable: false
        CurrentIterationId:
          description: Gets the current iteration id
          format: uuid
          readOnly: true
          type: string
          nullable: true
        Description:
          description: Gets or sets the description of the project
          type: string
          nullable: true
        Id:
          description: Gets the project id
          format: uuid
          readOnly: true
          type: string
          nullable: false
        LastModified:
          description: Gets the date this project was last modified
          format: date-time
          readOnly: true
          type: string
          nullable: false
        Name:
          description: Gets or sets the name of the project
          type: string
          nullable: true
        Settings:
          $ref: "#/components/schemas/ProjectSettings"
        ThumbnailUri:
          description: Gets the thumbnail url representing the image
          readOnly: true
          type: string
          nullable: true
      type: object
      nullable: true
    ProjectSettings:
      description: Represents settings associated with a project
      properties:
        DomainId:
          description: Gets or sets the id of the Domain to use with this project
          format: uuid
          type: string
          nullable: false
      type: object
      nullable: true
    Quota:
      description: Represents a quota
      properties:
        TimeUntilReset:
          description: Gets the time remaining until the quota resets. Null if this quota
            does not reset.
          format: duration
          readOnly: true
          type: string
          nullable: true
        Total:
          description: The total allowable amount in the quota
          format: int32
          readOnly: true
          type: integer
          nullable: false
        Used:
          description: The amount of quota that has currently been used
          format: int32
          readOnly: true
          type: integer
          nullable: false
      type: object
      nullable: true
    Tag:
      description: Represents a Tag
      properties:
        Description:
          description: Gets or sets the description of the tag
          type: string
          nullable: true
        Id:
          description: Gets the Tag ID
          format: uuid
          readOnly: true
          type: string
          nullable: false
        ImageCount:
          description: Gets the number of images with this tag
          format: int32
          readOnly: true
          type: integer
          nullable: false
        Name:
          description: Gets or sets the name of the tag
          type: string
          nullable: true
      type: object
      nullable: true
    TagList:
      properties:
        Tags:
          items:
            $ref: "#/components/schemas/Tag"
          readOnly: true
          type: array
          nullable: true
        TotalTaggedImages:
          format: int32
          readOnly: true
          type: integer
          nullable: false
        TotalUntaggedImages:
          format: int32
          readOnly: true
          type: integer
          nullable: false
      type: object
      nullable: true
    TagPerformance:
      description: Represents performance data for a particular tag in a trained iteration
      properties:
        Id:
          format: uuid
          readOnly: true
          type: string
          nullable: false
        Name:
          readOnly: true
          type: string
          nullable: true
        Precision:
          description: Gets the precision
          format: double
          readOnly: true
          type: number
          nullable: false
        PrecisionStdDeviation:
          description: Gets the standard deviation for the precision
          format: double
          readOnly: true
          type: number
          nullable: false
        Recall:
          description: Gets the recall
          format: double
          readOnly: true
          type: number
          nullable: false
        RecallStdDeviation:
          description: Gets the standard deviation for the recall
          format: double
          readOnly: true
          type: number
          nullable: false
      type: object
      nullable: true
