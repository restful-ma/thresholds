openapi: 3.0.0
info:
  version: 2017-04-19
  x-release: v4
  title: AWS CodeStar
  description: <fullname>AWS CodeStar</fullname> <p>This is the API reference for AWS
    CodeStar. This reference provides descriptions of the operations and data
    types for the AWS CodeStar API along with usage examples.</p> <p>You can use
    the AWS CodeStar API to work with:</p> <p>Projects and their resources, by
    calling the following:</p> <ul> <li> <p> <code>DeleteProject</code>, which
    deletes a project.</p> </li> <li> <p> <code>DescribeProject</code>, which
    lists the attributes of a project.</p> </li> <li> <p>
    <code>ListProjects</code>, which lists all projects associated with your AWS
    account.</p> </li> <li> <p> <code>ListResources</code>, which lists the
    resources associated with a project.</p> </li> <li> <p>
    <code>ListTagsForProject</code>, which lists the tags associated with a
    project.</p> </li> <li> <p> <code>TagProject</code>, which adds tags to a
    project.</p> </li> <li> <p> <code>UntagProject</code>, which removes tags
    from a project.</p> </li> <li> <p> <code>UpdateProject</code>, which updates
    the attributes of a project.</p> </li> </ul> <p>Teams and team members, by
    calling the following:</p> <ul> <li> <p> <code>AssociateTeamMember</code>,
    which adds an IAM user to the team for a project.</p> </li> <li> <p>
    <code>DisassociateTeamMember</code>, which removes an IAM user from the team
    for a project.</p> </li> <li> <p> <code>ListTeamMembers</code>, which lists
    all the IAM users in the team for a project, including their roles and
    attributes.</p> </li> <li> <p> <code>UpdateTeamMember</code>, which updates
    a team member's attributes in a project.</p> </li> </ul> <p>Users, by
    calling the following:</p> <ul> <li> <p> <code>CreateUserProfile</code>,
    which creates a user profile that contains data associated with the user
    across all projects.</p> </li> <li> <p> <code>DeleteUserProfile</code>,
    which deletes all user profile information across all projects.</p> </li>
    <li> <p> <code>DescribeUserProfile</code>, which describes the profile of a
    user.</p> </li> <li> <p> <code>ListUserProfiles</code>, which lists all user
    profiles.</p> </li> <li> <p> <code>UpdateUserProfile</code>, which updates
    the profile for a user.</p> </li> </ul>
  x-logo:
    url: https://twitter.com/awscloud/profile_image?size=original
    backgroundColor: "#FFFFFF"
  termsOfService: https://aws.amazon.com/service-terms/
  contact:
    name: Mike Ralphson
    email: mike.ralphson@gmail.com
    url: https://github.com/mermade/aws2openapi
    x-twitter: PermittedSoc
  license:
    name: Apache 2.0 License
    url: http://www.apache.org/licenses/
  x-providerName: amazonaws.com
  x-serviceName: codestar
  x-origin:
    - contentType: application/json
      url: https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/codestar-2017-04-19.normal.json
      converter:
        url: https://github.com/mermade/aws2openapi
        version: 1.0.0
      x-apisguru-direct: true
  x-apiClientRegistration:
    url: https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct
  x-apisguru-categories:
    - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: https://docs.aws.amazon.com/codestar/
x-hasEquivalentPaths: true
security:
  - hmac: []
paths:
  /#X-Amz-Target=CodeStar_20170419.AssociateTeamMember:
    post:
      operationId: AssociateTeamMember
      description: Adds an IAM user to the team for an AWS CodeStar project.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AssociateTeamMemberResult"
        "480":
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
        "481":
          description: ProjectNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProjectNotFoundException"
        "482":
          description: TeamMemberAlreadyAssociatedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TeamMemberAlreadyAssociatedException"
        "483":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "484":
          description: InvalidServiceRoleException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidServiceRoleException"
        "485":
          description: ProjectConfigurationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProjectConfigurationException"
        "486":
          description: ConcurrentModificationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConcurrentModificationException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - CodeStar_20170419.AssociateTeamMember
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AssociateTeamMemberRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=CodeStar_20170419.CreateProject:
    post:
      operationId: CreateProject
      description: Creates a project, including project resources. This action creates a
        project based on a submitted project request. A set of source code files
        and a toolchain template file can be included with the project request.
        If these are not provided, an empty project is created.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateProjectResult"
        "480":
          description: ProjectAlreadyExistsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProjectAlreadyExistsException"
        "481":
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
        "482":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "483":
          description: ProjectCreationFailedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProjectCreationFailedException"
        "484":
          description: InvalidServiceRoleException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidServiceRoleException"
        "485":
          description: ProjectConfigurationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProjectConfigurationException"
        "486":
          description: ConcurrentModificationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConcurrentModificationException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - CodeStar_20170419.CreateProject
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateProjectRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=CodeStar_20170419.CreateUserProfile:
    post:
      operationId: CreateUserProfile
      description: Creates a profile for a user that includes user preferences, such as the
        display name and email address assocciated with the user, in AWS
        CodeStar. The user profile is not project-specific. Information in the
        user profile is displayed wherever the user's information appears to
        other users in AWS CodeStar.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateUserProfileResult"
        "480":
          description: UserProfileAlreadyExistsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserProfileAlreadyExistsException"
        "481":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - CodeStar_20170419.CreateUserProfile
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateUserProfileRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=CodeStar_20170419.DeleteProject:
    post:
      operationId: DeleteProject
      description: Deletes a project, including project resources. Does not delete users
        associated with the project, but does delete the IAM roles that allowed
        access to the project.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteProjectResult"
        "480":
          description: ConcurrentModificationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConcurrentModificationException"
        "481":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "482":
          description: InvalidServiceRoleException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidServiceRoleException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - CodeStar_20170419.DeleteProject
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeleteProjectRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=CodeStar_20170419.DeleteUserProfile:
    post:
      operationId: DeleteUserProfile
      description: Deletes a user profile in AWS CodeStar, including all personal
        preference data associated with that profile, such as display name and
        email address. It does not delete the history of that user, for example
        the history of commits made by that user.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteUserProfileResult"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - CodeStar_20170419.DeleteUserProfile
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeleteUserProfileRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=CodeStar_20170419.DescribeProject:
    post:
      operationId: DescribeProject
      description: Describes a project and its resources.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeProjectResult"
        "480":
          description: ProjectNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProjectNotFoundException"
        "481":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "482":
          description: InvalidServiceRoleException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidServiceRoleException"
        "483":
          description: ProjectConfigurationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProjectConfigurationException"
        "484":
          description: ConcurrentModificationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConcurrentModificationException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - CodeStar_20170419.DescribeProject
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DescribeProjectRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=CodeStar_20170419.DescribeUserProfile:
    post:
      operationId: DescribeUserProfile
      description: Describes a user in AWS CodeStar and the user attributes across all
        projects.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeUserProfileResult"
        "480":
          description: UserProfileNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserProfileNotFoundException"
        "481":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - CodeStar_20170419.DescribeUserProfile
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DescribeUserProfileRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=CodeStar_20170419.DisassociateTeamMember:
    post:
      operationId: DisassociateTeamMember
      description: Removes a user from a project. Removing a user from a project also
        removes the IAM policies from that user that allowed access to the
        project and its resources. Disassociating a team member does not remove
        that user's profile from AWS CodeStar. It does not remove the user from
        IAM.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DisassociateTeamMemberResult"
        "480":
          description: ProjectNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProjectNotFoundException"
        "481":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "482":
          description: InvalidServiceRoleException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidServiceRoleException"
        "483":
          description: ConcurrentModificationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConcurrentModificationException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - CodeStar_20170419.DisassociateTeamMember
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DisassociateTeamMemberRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=CodeStar_20170419.ListProjects:
    post:
      operationId: ListProjects
      description: Lists all projects in AWS CodeStar associated with your AWS account.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListProjectsResult"
        "480":
          description: InvalidNextTokenException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidNextTokenException"
        "481":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - CodeStar_20170419.ListProjects
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ListProjectsRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=CodeStar_20170419.ListResources:
    post:
      operationId: ListResources
      description: Lists resources associated with a project in AWS CodeStar.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListResourcesResult"
        "480":
          description: ProjectNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProjectNotFoundException"
        "481":
          description: InvalidNextTokenException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidNextTokenException"
        "482":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - CodeStar_20170419.ListResources
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ListResourcesRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=CodeStar_20170419.ListTagsForProject:
    post:
      operationId: ListTagsForProject
      description: Gets the tags for a project.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListTagsForProjectResult"
        "480":
          description: ProjectNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProjectNotFoundException"
        "481":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "482":
          description: InvalidNextTokenException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidNextTokenException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - CodeStar_20170419.ListTagsForProject
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ListTagsForProjectRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=CodeStar_20170419.ListTeamMembers:
    post:
      operationId: ListTeamMembers
      description: Lists all team members associated with a project.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListTeamMembersResult"
        "480":
          description: ProjectNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProjectNotFoundException"
        "481":
          description: InvalidNextTokenException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidNextTokenException"
        "482":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - CodeStar_20170419.ListTeamMembers
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ListTeamMembersRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=CodeStar_20170419.ListUserProfiles:
    post:
      operationId: ListUserProfiles
      description: Lists all the user profiles configured for your AWS account in AWS
        CodeStar.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListUserProfilesResult"
        "480":
          description: InvalidNextTokenException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidNextTokenException"
        "481":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - CodeStar_20170419.ListUserProfiles
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ListUserProfilesRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=CodeStar_20170419.TagProject:
    post:
      operationId: TagProject
      description: Adds tags to a project.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TagProjectResult"
        "480":
          description: ProjectNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProjectNotFoundException"
        "481":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "482":
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
        "483":
          description: ConcurrentModificationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConcurrentModificationException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - CodeStar_20170419.TagProject
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TagProjectRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=CodeStar_20170419.UntagProject:
    post:
      operationId: UntagProject
      description: Removes tags from a project.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UntagProjectResult"
        "480":
          description: ProjectNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProjectNotFoundException"
        "481":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "482":
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
        "483":
          description: ConcurrentModificationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConcurrentModificationException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - CodeStar_20170419.UntagProject
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UntagProjectRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=CodeStar_20170419.UpdateProject:
    post:
      operationId: UpdateProject
      description: Updates a project in AWS CodeStar.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateProjectResult"
        "480":
          description: ProjectNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProjectNotFoundException"
        "481":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - CodeStar_20170419.UpdateProject
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateProjectRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=CodeStar_20170419.UpdateTeamMember:
    post:
      operationId: UpdateTeamMember
      description: Updates a team member's attributes in an AWS CodeStar project. For
        example, you can change a team member's role in the project, or change
        whether they have remote access to project resources.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateTeamMemberResult"
        "480":
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
        "481":
          description: ProjectNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProjectNotFoundException"
        "482":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "483":
          description: InvalidServiceRoleException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidServiceRoleException"
        "484":
          description: ProjectConfigurationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProjectConfigurationException"
        "485":
          description: ConcurrentModificationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConcurrentModificationException"
        "486":
          description: TeamMemberNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TeamMemberNotFoundException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - CodeStar_20170419.UpdateTeamMember
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateTeamMemberRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=CodeStar_20170419.UpdateUserProfile:
    post:
      operationId: UpdateUserProfile
      description: "Updates a user's profile in AWS CodeStar. The user profile is not
        project-specific. Information in the user profile is displayed wherever
        the user's information appears to other users in AWS CodeStar. "
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateUserProfileResult"
        "480":
          description: UserProfileNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserProfileNotFoundException"
        "481":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - CodeStar_20170419.UpdateUserProfile
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateUserProfileRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
servers:
  - url: http://codestar.{region}.amazonaws.com
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-south-1
          - sa-east-1
        default: us-east-1
    description: The CodeStar multi-region endpoint
  - url: https://codestar.{region}.amazonaws.com
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-south-1
          - sa-east-1
        default: us-east-1
    description: The CodeStar multi-region endpoint
  - url: http://codestar.{region}.amazonaws.com.cn
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The CodeStar endpoint for China (Beijing) and China (Ningxia)
  - url: https://codestar.{region}.amazonaws.com.cn
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The CodeStar endpoint for China (Beijing) and China (Ningxia)
components:
  parameters:
    X-Amz-Content-Sha256:
      name: X-Amz-Content-Sha256
      in: header
      required: false
      schema:
        type: string
    X-Amz-Date:
      name: X-Amz-Date
      in: header
      required: false
      schema:
        type: string
    X-Amz-Algorithm:
      name: X-Amz-Algorithm
      in: header
      required: false
      schema:
        type: string
    X-Amz-Credential:
      name: X-Amz-Credential
      in: header
      required: false
      schema:
        type: string
    X-Amz-Security-Token:
      name: X-Amz-Security-Token
      in: header
      required: false
      schema:
        type: string
    X-Amz-Signature:
      name: X-Amz-Signature
      in: header
      required: false
      schema:
        type: string
    X-Amz-SignedHeaders:
      name: X-Amz-SignedHeaders
      in: header
      required: false
      schema:
        type: string
  securitySchemes:
    hmac:
      type: apiKey
      name: Authorization
      in: header
      description: Amazon Signature authorization v4
      x-amazon-apigateway-authtype: awsSigv4
  schemas:
    AssociateTeamMemberResult:
      type: object
      properties:
        clientRequestToken:
          $ref: "#/components/schemas/ClientRequestToken"
    AssociateTeamMemberRequest:
      type: object
      required:
        - projectId
        - userArn
        - projectRole
      properties:
        projectId:
          $ref: "#/components/schemas/ProjectId"
        clientRequestToken:
          $ref: "#/components/schemas/ClientRequestToken"
        userArn:
          $ref: "#/components/schemas/UserArn"
        projectRole:
          $ref: "#/components/schemas/Role"
        remoteAccessAllowed:
          $ref: "#/components/schemas/RemoteAccessAllowed"
    LimitExceededException: {}
    ProjectNotFoundException: {}
    TeamMemberAlreadyAssociatedException: {}
    ValidationException: {}
    InvalidServiceRoleException: {}
    ProjectConfigurationException: {}
    ConcurrentModificationException: {}
    CreateProjectResult:
      type: object
      required:
        - id
        - arn
      properties:
        id:
          $ref: "#/components/schemas/ProjectId"
        arn:
          $ref: "#/components/schemas/ProjectArn"
        clientRequestToken:
          $ref: "#/components/schemas/ClientRequestToken"
        projectTemplateId:
          $ref: "#/components/schemas/ProjectTemplateId"
    CreateProjectRequest:
      type: object
      required:
        - name
        - id
      properties:
        name:
          $ref: "#/components/schemas/ProjectName"
        id:
          $ref: "#/components/schemas/ProjectId"
        description:
          $ref: "#/components/schemas/ProjectDescription"
        clientRequestToken:
          $ref: "#/components/schemas/ClientRequestToken"
        sourceCode:
          $ref: "#/components/schemas/SourceCode"
        toolchain:
          $ref: "#/components/schemas/Toolchain"
        tags:
          $ref: "#/components/schemas/Tags"
    ProjectAlreadyExistsException: {}
    ProjectCreationFailedException: {}
    CreateUserProfileResult:
      type: object
      required:
        - userArn
      properties:
        userArn:
          $ref: "#/components/schemas/UserArn"
        displayName:
          $ref: "#/components/schemas/UserProfileDisplayName"
        emailAddress:
          $ref: "#/components/schemas/Email"
        sshPublicKey:
          $ref: "#/components/schemas/SshPublicKey"
        createdTimestamp:
          $ref: "#/components/schemas/CreatedTimestamp"
        lastModifiedTimestamp:
          $ref: "#/components/schemas/LastModifiedTimestamp"
    CreateUserProfileRequest:
      type: object
      required:
        - userArn
        - displayName
        - emailAddress
      properties:
        userArn:
          $ref: "#/components/schemas/UserArn"
        displayName:
          $ref: "#/components/schemas/UserProfileDisplayName"
        emailAddress:
          $ref: "#/components/schemas/Email"
        sshPublicKey:
          $ref: "#/components/schemas/SshPublicKey"
    UserProfileAlreadyExistsException: {}
    DeleteProjectResult:
      type: object
      properties:
        stackId:
          $ref: "#/components/schemas/StackId"
        projectArn:
          $ref: "#/components/schemas/ProjectArn"
    DeleteProjectRequest:
      type: object
      required:
        - id
      properties:
        id:
          $ref: "#/components/schemas/ProjectId"
        clientRequestToken:
          $ref: "#/components/schemas/ClientRequestToken"
        deleteStack:
          $ref: "#/components/schemas/DeleteStack"
    DeleteUserProfileResult:
      type: object
      required:
        - userArn
      properties:
        userArn:
          $ref: "#/components/schemas/UserArn"
    DeleteUserProfileRequest:
      type: object
      required:
        - userArn
      properties:
        userArn:
          $ref: "#/components/schemas/UserArn"
    DescribeProjectResult:
      type: object
      properties:
        name:
          $ref: "#/components/schemas/ProjectName"
        id:
          $ref: "#/components/schemas/ProjectId"
        arn:
          $ref: "#/components/schemas/ProjectArn"
        description:
          $ref: "#/components/schemas/ProjectDescription"
        clientRequestToken:
          $ref: "#/components/schemas/ClientRequestToken"
        createdTimeStamp:
          $ref: "#/components/schemas/CreatedTimestamp"
        stackId:
          $ref: "#/components/schemas/StackId"
        projectTemplateId:
          $ref: "#/components/schemas/ProjectTemplateId"
        status:
          $ref: "#/components/schemas/ProjectStatus"
    DescribeProjectRequest:
      type: object
      required:
        - id
      properties:
        id:
          $ref: "#/components/schemas/ProjectId"
    DescribeUserProfileResult:
      type: object
      required:
        - userArn
        - createdTimestamp
        - lastModifiedTimestamp
      properties:
        userArn:
          $ref: "#/components/schemas/UserArn"
        displayName:
          $ref: "#/components/schemas/UserProfileDisplayName"
        emailAddress:
          $ref: "#/components/schemas/Email"
        sshPublicKey:
          $ref: "#/components/schemas/SshPublicKey"
        createdTimestamp:
          $ref: "#/components/schemas/CreatedTimestamp"
        lastModifiedTimestamp:
          $ref: "#/components/schemas/LastModifiedTimestamp"
    DescribeUserProfileRequest:
      type: object
      required:
        - userArn
      properties:
        userArn:
          $ref: "#/components/schemas/UserArn"
    UserProfileNotFoundException: {}
    DisassociateTeamMemberResult:
      type: object
      properties: {}
    DisassociateTeamMemberRequest:
      type: object
      required:
        - projectId
        - userArn
      properties:
        projectId:
          $ref: "#/components/schemas/ProjectId"
        userArn:
          $ref: "#/components/schemas/UserArn"
    ListProjectsResult:
      type: object
      required:
        - projects
      properties:
        projects:
          $ref: "#/components/schemas/ProjectsList"
        nextToken:
          $ref: "#/components/schemas/PaginationToken"
    ListProjectsRequest:
      type: object
      properties:
        nextToken:
          $ref: "#/components/schemas/PaginationToken"
        maxResults:
          $ref: "#/components/schemas/MaxResults"
    InvalidNextTokenException: {}
    ListResourcesResult:
      type: object
      properties:
        resources:
          $ref: "#/components/schemas/ResourcesResult"
        nextToken:
          $ref: "#/components/schemas/PaginationToken"
    ListResourcesRequest:
      type: object
      required:
        - projectId
      properties:
        projectId:
          $ref: "#/components/schemas/ProjectId"
        nextToken:
          $ref: "#/components/schemas/PaginationToken"
        maxResults:
          $ref: "#/components/schemas/MaxResults"
    ListTagsForProjectResult:
      type: object
      properties:
        tags:
          $ref: "#/components/schemas/Tags"
        nextToken:
          $ref: "#/components/schemas/PaginationToken"
    ListTagsForProjectRequest:
      type: object
      required:
        - id
      properties:
        id:
          $ref: "#/components/schemas/ProjectId"
        nextToken:
          $ref: "#/components/schemas/PaginationToken"
        maxResults:
          $ref: "#/components/schemas/MaxResults"
    ListTeamMembersResult:
      type: object
      required:
        - teamMembers
      properties:
        teamMembers:
          $ref: "#/components/schemas/TeamMemberResult"
        nextToken:
          $ref: "#/components/schemas/PaginationToken"
    ListTeamMembersRequest:
      type: object
      required:
        - projectId
      properties:
        projectId:
          $ref: "#/components/schemas/ProjectId"
        nextToken:
          $ref: "#/components/schemas/PaginationToken"
        maxResults:
          $ref: "#/components/schemas/MaxResults"
    ListUserProfilesResult:
      type: object
      required:
        - userProfiles
      properties:
        userProfiles:
          $ref: "#/components/schemas/UserProfilesList"
        nextToken:
          $ref: "#/components/schemas/PaginationToken"
    ListUserProfilesRequest:
      type: object
      properties:
        nextToken:
          $ref: "#/components/schemas/PaginationToken"
        maxResults:
          $ref: "#/components/schemas/MaxResults"
    TagProjectResult:
      type: object
      properties:
        tags:
          $ref: "#/components/schemas/Tags"
    TagProjectRequest:
      type: object
      required:
        - id
        - tags
      properties:
        id:
          $ref: "#/components/schemas/ProjectId"
        tags:
          $ref: "#/components/schemas/Tags"
    UntagProjectResult:
      type: object
      properties: {}
    UntagProjectRequest:
      type: object
      required:
        - id
        - tags
      properties:
        id:
          $ref: "#/components/schemas/ProjectId"
        tags:
          $ref: "#/components/schemas/TagKeys"
    UpdateProjectResult:
      type: object
      properties: {}
    UpdateProjectRequest:
      type: object
      required:
        - id
      properties:
        id:
          $ref: "#/components/schemas/ProjectId"
        name:
          $ref: "#/components/schemas/ProjectName"
        description:
          $ref: "#/components/schemas/ProjectDescription"
    UpdateTeamMemberResult:
      type: object
      properties:
        userArn:
          $ref: "#/components/schemas/UserArn"
        projectRole:
          $ref: "#/components/schemas/Role"
        remoteAccessAllowed:
          $ref: "#/components/schemas/RemoteAccessAllowed"
    UpdateTeamMemberRequest:
      type: object
      required:
        - projectId
        - userArn
      properties:
        projectId:
          $ref: "#/components/schemas/ProjectId"
        userArn:
          $ref: "#/components/schemas/UserArn"
        projectRole:
          $ref: "#/components/schemas/Role"
        remoteAccessAllowed:
          $ref: "#/components/schemas/RemoteAccessAllowed"
    TeamMemberNotFoundException: {}
    UpdateUserProfileResult:
      type: object
      required:
        - userArn
      properties:
        userArn:
          $ref: "#/components/schemas/UserArn"
        displayName:
          $ref: "#/components/schemas/UserProfileDisplayName"
        emailAddress:
          $ref: "#/components/schemas/Email"
        sshPublicKey:
          $ref: "#/components/schemas/SshPublicKey"
        createdTimestamp:
          $ref: "#/components/schemas/CreatedTimestamp"
        lastModifiedTimestamp:
          $ref: "#/components/schemas/LastModifiedTimestamp"
    UpdateUserProfileRequest:
      type: object
      required:
        - userArn
      properties:
        userArn:
          $ref: "#/components/schemas/UserArn"
        displayName:
          $ref: "#/components/schemas/UserProfileDisplayName"
        emailAddress:
          $ref: "#/components/schemas/Email"
        sshPublicKey:
          $ref: "#/components/schemas/SshPublicKey"
    ProjectId:
      type: string
      pattern: ^[a-z][a-z0-9-]+$
      minLength: 2
      maxLength: 15
    ClientRequestToken:
      type: string
      pattern: ^[\w:/-]+$
      minLength: 1
      maxLength: 256
    UserArn:
      type: string
      pattern: ^arn:aws:iam::\d{12}:user(?:(\u002F)|(\u002F[\u0021-\u007E]+\u002F))[\w+=,.@-]+$
      minLength: 32
      maxLength: 95
    Role:
      type: string
      pattern: ^(Owner|Viewer|Contributor)$
    RemoteAccessAllowed:
      type: boolean
    BucketKey:
      type: string
    BucketName:
      type: string
      minLength: 3
      maxLength: 63
    CodeSource:
      type: object
      required:
        - s3
      properties:
        s3:
          $ref: "#/components/schemas/S3Location"
      description: The location where the source code files provided with the project
        request are stored. AWS CodeStar retrieves the files during project
        creation.
    CodeDestination:
      type: object
      properties:
        codeCommit:
          $ref: "#/components/schemas/CodeCommitCodeDestination"
        gitHub:
          $ref: "#/components/schemas/GitHubCodeDestination"
      description: The repository to be created in AWS CodeStar. Valid values are AWS
        CodeCommit or GitHub. After AWS CodeStar provisions the new repository,
        the source code files provided with the project request are placed in
        the repository.
    Code:
      type: object
      required:
        - source
        - destination
      properties:
        source:
          $ref: "#/components/schemas/CodeSource"
        destination:
          $ref: "#/components/schemas/CodeDestination"
      description: Location and destination information about the source code files
        provided with the project request. The source code is uploaded to the
        new project source repository after project creation.
    RepositoryName:
      type: string
      pattern: ^\S[\w.-]*$
      minLength: 1
      maxLength: 100
    CodeCommitCodeDestination:
      type: object
      required:
        - name
      properties:
        name:
          $ref: "#/components/schemas/RepositoryName"
      description: Information about the AWS CodeCommit repository to be created in AWS
        CodeStar. This is where the source code files provided with the project
        request will be uploaded after project creation.
    GitHubCodeDestination:
      type: object
      required:
        - name
        - type
        - owner
        - privateRepository
        - issuesEnabled
        - token
      properties:
        name:
          $ref: "#/components/schemas/RepositoryName"
        description:
          $ref: "#/components/schemas/RepositoryDescription"
        type:
          $ref: "#/components/schemas/RepositoryType"
        owner:
          $ref: "#/components/schemas/RepositoryOwner"
        privateRepository:
          $ref: "#/components/schemas/RepositoryIsPrivate"
        issuesEnabled:
          $ref: "#/components/schemas/RepositoryEnableIssues"
        token:
          $ref: "#/components/schemas/GitHubPersonalToken"
      description: Information about the GitHub repository to be created in AWS CodeStar.
        This is where the source code files provided with the project request
        will be uploaded after project creation.
    S3Location:
      type: object
      properties:
        bucketName:
          $ref: "#/components/schemas/BucketName"
        bucketKey:
          $ref: "#/components/schemas/BucketKey"
      description: The Amazon S3 location where the source code files provided with the
        project request are stored.
    ProjectName:
      type: string
      pattern: ^\S(.*\S)?$
      minLength: 1
      maxLength: 100
      format: password
    ProjectDescription:
      type: string
      pattern: ^$|^\S(.*\S)?$
      maxLength: 1024
      format: password
    SourceCode:
      type: array
      items:
        $ref: "#/components/schemas/Code"
    Toolchain:
      type: object
      required:
        - source
      properties:
        source:
          $ref: "#/components/schemas/ToolchainSource"
        roleArn:
          $ref: "#/components/schemas/RoleArn"
        stackParameters:
          $ref: "#/components/schemas/TemplateParameterMap"
      description: The toolchain template file provided with the project request. AWS
        CodeStar uses the template to provision the toolchain stack in AWS
        CloudFormation.
    Tags:
      type: object
      additionalProperties:
        $ref: "#/components/schemas/TagValue"
    ProjectArn:
      type: string
      pattern: ^arn:aws[^:\s]*:codestar:[^:\s]+:[0-9]{12}:project\/[a-z]([a-z0-9|-])+$
    ProjectTemplateId:
      type: string
      pattern: ^arn:aws[^:\s]{0,5}:codestar:[^:\s]+::project-template(\/(github|codecommit))?\/[a-z0-9-]+$
      minLength: 1
    UserProfileDisplayName:
      type: string
      pattern: ^\S(.*\S)?$
      minLength: 1
      maxLength: 64
      format: password
    Email:
      type: string
      pattern: ^[\w-.+]+@[\w-.+]+$
      minLength: 3
      maxLength: 128
      format: password
    SshPublicKey:
      type: string
      pattern: ^[\t\r\n\u0020-\u00FF]*$
      maxLength: 16384
    CreatedTimestamp:
      type: string
      format: date-time
    LastModifiedTimestamp:
      type: string
      format: date-time
    DeleteStack:
      type: boolean
    StackId:
      type: string
      pattern: ^arn:aws[^:\s]*:cloudformation:[^:\s]+:[0-9]{12}:stack\/[^:\s]+\/[^:\s]+$
    ProjectStatus:
      type: object
      required:
        - state
      properties:
        state:
          $ref: "#/components/schemas/State"
        reason:
          $ref: "#/components/schemas/Reason"
      description: An indication of whether a project creation or deletion is failed or
        successful.
    RepositoryDescription:
      type: string
      pattern: ^\S(.*\S)?$
      minLength: 1
      maxLength: 1000
    RepositoryType:
      type: string
      pattern: ^(user|organization|User|Organization)$
    RepositoryOwner:
      type: string
      pattern: ^\S(.*\S)?$
      minLength: 1
      maxLength: 100
    RepositoryIsPrivate:
      type: boolean
    RepositoryEnableIssues:
      type: boolean
    GitHubPersonalToken:
      type: string
      minLength: 1
      format: password
    PaginationToken:
      type: string
      pattern: ^[\w/+=]+$
      minLength: 1
      maxLength: 512
    MaxResults:
      type: integer
      minimum: 1
      maximum: 100
    ProjectsList:
      type: array
      items:
        $ref: "#/components/schemas/ProjectSummary"
    ResourcesResult:
      type: array
      items:
        $ref: "#/components/schemas/Resource"
    TeamMemberResult:
      type: array
      items:
        $ref: "#/components/schemas/TeamMember"
    UserProfilesList:
      type: array
      items:
        $ref: "#/components/schemas/UserProfileSummary"
    State:
      type: string
      pattern: ^(CreateInProgress|CreateComplete|CreateFailed|DeleteComplete|DeleteFailed|DeleteInProgress|UpdateComplete|UpdateInProgress|UpdateFailed|Unknown)$
    Reason:
      type: string
      pattern: ^$|^\S(.*\S)?$
      maxLength: 1024
    ProjectSummary:
      type: object
      properties:
        projectId:
          $ref: "#/components/schemas/ProjectId"
        projectArn:
          $ref: "#/components/schemas/ProjectArn"
      description: Information about the metadata for a project.
    ResourceId:
      type: string
      pattern: ^arn\:aws\:\S.*\:.*
      minLength: 11
    Resource:
      type: object
      required:
        - id
      properties:
        id:
          $ref: "#/components/schemas/ResourceId"
      description: Information about a resource for a project.
    RoleArn:
      type: string
      minLength: 1
      maxLength: 1224
    TagKey:
      type: string
      pattern: ^([\p{L}\p{Z}\p{N}_.:/=+\-@]*)$
      minLength: 1
      maxLength: 128
    TagKeys:
      type: array
      items:
        $ref: "#/components/schemas/TagKey"
    TagValue:
      type: string
      pattern: ^([\p{L}\p{Z}\p{N}_.:/=+\-@]*)$
      maxLength: 256
    TeamMember:
      type: object
      required:
        - userArn
        - projectRole
      properties:
        userArn:
          $ref: "#/components/schemas/UserArn"
        projectRole:
          $ref: "#/components/schemas/Role"
        remoteAccessAllowed:
          $ref: "#/components/schemas/RemoteAccessAllowed"
      description: Information about a team member in a project.
    TemplateParameterKey:
      type: string
      pattern: ^\S(.*\S)?$
      minLength: 1
      maxLength: 30
    TemplateParameterValue:
      type: string
      pattern: ^\S(.*\S)?$
      minLength: 1
      maxLength: 100
      format: password
    TemplateParameterMap:
      type: object
      maxProperties: 25
      additionalProperties:
        $ref: "#/components/schemas/TemplateParameterValue"
    ToolchainSource:
      type: object
      required:
        - s3
      properties:
        s3:
          $ref: "#/components/schemas/S3Location"
      description: The Amazon S3 location where the toolchain template file provided with
        the project request is stored. AWS CodeStar retrieves the file during
        project creation.
    UserProfileSummary:
      type: object
      properties:
        userArn:
          $ref: "#/components/schemas/UserArn"
        displayName:
          $ref: "#/components/schemas/UserProfileDisplayName"
        emailAddress:
          $ref: "#/components/schemas/Email"
        sshPublicKey:
          $ref: "#/components/schemas/SshPublicKey"
      description: Information about a user's profile in AWS CodeStar.
