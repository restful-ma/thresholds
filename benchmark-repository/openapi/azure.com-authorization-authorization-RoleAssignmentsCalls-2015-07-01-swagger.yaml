openapi: 3.0.0
info:
  description: Role based access control provides you a way to apply granular level policy
    administration down to individual resources or resource groups. These
    operations enable you to manage role definitions and role assignments. A
    role definition describes the set of actions that can be performed on
    resources. A role assignment grants access to Azure Active Directory users.
  title: AuthorizationManagementClient
  version: 2015-07-01
  x-apisguru-categories:
    - cloud
  x-logo:
    url: https://assets.onestore.ms/cdnfiles/onestorerolling-1606-01000/shell/v3/images/logo/microsoft.png
  x-origin:
    - format: swagger
      url: https://raw.githubusercontent.com/Azure/azure-rest-api-specs/master/specification/authorization/resource-manager/Microsoft.Authorization/stable/2015-07-01/authorization-RoleAssignmentsCalls.json
      version: "2.0"
  x-preferred: false
  x-providerName: azure.com
  x-serviceName: authorization-authorization-RoleAssignmentsCalls
  x-tags:
    - Azure
    - Microsoft
security:
  - azure_auth:
      - user_impersonation
paths:
  "/subscriptions/{subscriptionId}/providers/Microsoft.Authorization/roleAssignments":
    get:
      description: Gets all role assignments for the subscription.
      operationId: RoleAssignments_List
      parameters:
        - description: The filter to apply on the operation. Use $filter=atScope() to
            return all role assignments at or above the scope. Use
            $filter=principalId eq {id} to return all role assignments at, above
            or below the scope for the specified principal.
          in: query
          name: $filter
          required: false
          schema:
            type: string
        - $ref: "#/components/parameters/ApiVersionParameter"
        - $ref: "#/components/parameters/SubscriptionIdParameter"
      responses:
        "200":
          description: OK - Returns an array of role assignments.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RoleAssignmentListResult"
              examples:
                GetConfigurations:
                  $ref: "#/components/examples/GetConfigurations"
      tags:
        - RoleAssignments
      x-ms-odata: "#/components/schemas/RoleAssignmentFilter"
      x-ms-pageable:
        nextLinkName: nextLink
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Authorization/roleAssignments":
    get:
      description: Gets role assignments for a resource group.
      operationId: RoleAssignments_ListForResourceGroup
      parameters:
        - description: The name of the resource group.
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
          examples:
            GetConfigurations:
              value: rgname
        - description: The filter to apply on the operation. Use $filter=atScope() to
            return all role assignments at or above the scope. Use
            $filter=principalId eq {id} to return all role assignments at, above
            or below the scope for the specified principal.
          in: query
          name: $filter
          required: false
          schema:
            type: string
        - $ref: "#/components/parameters/ApiVersionParameter"
        - $ref: "#/components/parameters/SubscriptionIdParameter"
      responses:
        "200":
          description: OK - Returns an array of role assignments.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RoleAssignmentListResult"
              examples:
                GetConfigurations:
                  $ref: "#/components/examples/GetConfigurations"
      tags:
        - RoleAssignments
      x-ms-odata: "#/components/schemas/RoleAssignmentFilter"
      x-ms-pageable:
        nextLinkName: nextLink
  "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{parentResourcePath}/{resourceType}/{resourceName}/providers/Microsoft.Authorization/roleAssignments":
    get:
      description: Gets role assignments for a resource.
      operationId: RoleAssignments_ListForResource
      parameters:
        - description: The name of the resource group.
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
          examples:
            GetConfigurations:
              value: rgname
        - description: The namespace of the resource provider.
          in: path
          name: resourceProviderNamespace
          required: true
          schema:
            type: string
          examples:
            GetConfigurations:
              value: resourceProviderNamespace
        - description: The parent resource identity.
          in: path
          name: parentResourcePath
          required: true
          x-ms-skip-url-encoding: true
          schema:
            type: string
          examples:
            GetConfigurations:
              value: parentResourcePath
        - description: The resource type of the resource.
          in: path
          name: resourceType
          required: true
          x-ms-skip-url-encoding: true
          schema:
            type: string
          examples:
            GetConfigurations:
              value: resourceType
        - description: The name of the resource to get role assignments for.
          in: path
          name: resourceName
          required: true
          schema:
            type: string
          examples:
            GetConfigurations:
              value: resourceName
        - description: The filter to apply on the operation. Use $filter=atScope() to
            return all role assignments at or above the scope. Use
            $filter=principalId eq {id} to return all role assignments at, above
            or below the scope for the specified principal.
          in: query
          name: $filter
          required: false
          schema:
            type: string
        - $ref: "#/components/parameters/ApiVersionParameter"
        - $ref: "#/components/parameters/SubscriptionIdParameter"
      responses:
        "200":
          description: OK - Returns an array of role assignments.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RoleAssignmentListResult"
              examples:
                GetConfigurations:
                  $ref: "#/components/examples/GetConfigurations"
      tags:
        - RoleAssignments
      x-ms-odata: "#/components/schemas/RoleAssignmentFilter"
      x-ms-pageable:
        nextLinkName: nextLink
  "/{roleAssignmentId}":
    delete:
      description: Deletes a role assignment.
      operationId: RoleAssignments_DeleteById
      parameters:
        - description: "The fully qualified ID of the role assignment, including the scope,
            resource name and resource type. Use the format,
            /{scope}/providers/Microsoft.Authorization/roleAssignments/{roleAss\
            ignmentName}. Example:
            /subscriptions/{subId}/resourcegroups/{rgname}//providers/Microsoft\
            .Authorization/roleAssignments/{roleAssignmentName}."
          in: path
          name: roleAssignmentId
          required: true
          x-ms-skip-url-encoding: true
          schema:
            type: string
          examples:
            GetConfigurations:
              value: roleAssignmentId
        - $ref: "#/components/parameters/ApiVersionParameter"
      responses:
        "200":
          description: OK - Returns information about the role assignment.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RoleAssignment"
              examples:
                GetConfigurations:
                  $ref: "#/components/examples/GetConfigurations"
      tags:
        - RoleAssignments
    get:
      description: Gets a role assignment by ID.
      operationId: RoleAssignments_GetById
      parameters:
        - description: "The fully qualified ID of the role assignment, including the scope,
            resource name and resource type. Use the format,
            /{scope}/providers/Microsoft.Authorization/roleAssignments/{roleAss\
            ignmentName}. Example:
            /subscriptions/{subId}/resourcegroups/{rgname}//providers/Microsoft\
            .Authorization/roleAssignments/{roleAssignmentName}."
          in: path
          name: roleAssignmentId
          required: true
          x-ms-skip-url-encoding: true
          schema:
            type: string
          examples:
            GetConfigurations:
              value: roleassignmentId
        - $ref: "#/components/parameters/ApiVersionParameter"
      responses:
        "200":
          description: OK - Returns the role assignment.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RoleAssignment"
              examples:
                GetConfigurations:
                  $ref: "#/components/examples/GetConfigurations"
      tags:
        - RoleAssignments
    put:
      description: Creates a role assignment by ID.
      operationId: RoleAssignments_CreateById
      parameters:
        - description: "The fully qualified ID of the role assignment, including the scope,
            resource name and resource type. Use the format,
            /{scope}/providers/Microsoft.Authorization/roleAssignments/{roleAss\
            ignmentName}. Example:
            /subscriptions/{subId}/resourcegroups/{rgname}//providers/Microsoft\
            .Authorization/roleAssignments/{roleAssignmentName}."
          in: path
          name: roleAssignmentId
          required: true
          x-ms-skip-url-encoding: true
          schema:
            type: string
          examples:
            GetConfigurations:
              value: roleAssignmentId
        - $ref: "#/components/parameters/ApiVersionParameter"
      requestBody:
        $ref: "#/components/requestBodies/RoleAssignmentCreateParameters"
      responses:
        "201":
          description: Created - Returns the role assignment.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RoleAssignment"
              examples:
                GetConfigurations:
                  $ref: "#/components/examples/GetConfigurations"
      tags:
        - RoleAssignments
  "/{scope}/providers/Microsoft.Authorization/roleAssignments":
    get:
      description: Gets role assignments for a scope.
      operationId: RoleAssignments_ListForScope
      parameters:
        - description: The scope of the role assignments.
          in: path
          name: scope
          required: true
          x-ms-skip-url-encoding: true
          schema:
            type: string
          examples:
            GetConfigurations:
              value: scope
        - description: The filter to apply on the operation. Use $filter=atScope() to
            return all role assignments at or above the scope. Use
            $filter=principalId eq {id} to return all role assignments at, above
            or below the scope for the specified principal.
          in: query
          name: $filter
          required: false
          schema:
            type: string
        - $ref: "#/components/parameters/ApiVersionParameter"
      responses:
        "200":
          description: OK - Returns an array of role assignments.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RoleAssignmentListResult"
              examples:
                GetConfigurations:
                  $ref: "#/components/examples/GetConfigurations"
      tags:
        - RoleAssignments
      x-ms-odata: "#/components/schemas/RoleAssignmentFilter"
      x-ms-pageable:
        nextLinkName: nextLink
  "/{scope}/providers/Microsoft.Authorization/roleAssignments/{roleAssignmentName}":
    delete:
      description: Deletes a role assignment.
      operationId: RoleAssignments_Delete
      parameters:
        - description: The scope of the role assignment to delete.
          in: path
          name: scope
          required: true
          x-ms-skip-url-encoding: true
          schema:
            type: string
          examples:
            GetConfigurations:
              value: scope
        - description: The name of the role assignment to delete.
          in: path
          name: roleAssignmentName
          required: true
          schema:
            type: string
          examples:
            GetConfigurations:
              value: roleAssignmentName
        - $ref: "#/components/parameters/ApiVersionParameter"
      responses:
        "200":
          description: OK - Returns information about the role assignment.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RoleAssignment"
              examples:
                GetConfigurations:
                  $ref: "#/components/examples/GetConfigurations"
      tags:
        - RoleAssignments
    get:
      description: Get the specified role assignment.
      operationId: RoleAssignments_Get
      parameters:
        - description: The scope of the role assignment.
          in: path
          name: scope
          required: true
          x-ms-skip-url-encoding: true
          schema:
            type: string
          examples:
            GetConfigurations:
              value: scope
        - description: The name of the role assignment to get.
          in: path
          name: roleAssignmentName
          required: true
          schema:
            type: string
          examples:
            GetConfigurations:
              value: roleAssignmentName
        - $ref: "#/components/parameters/ApiVersionParameter"
      responses:
        "200":
          description: OK - Returns information about the role assignment.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RoleAssignment"
              examples:
                GetConfigurations:
                  $ref: "#/components/examples/GetConfigurations"
      tags:
        - RoleAssignments
    put:
      description: Creates a role assignment.
      operationId: RoleAssignments_Create
      parameters:
        - description: The scope of the role assignment to create. The scope can be any
            REST resource instance. For example, use
            '/subscriptions/{subscription-id}/' for a subscription,
            '/subscriptions/{subscription-id}/resourceGroups/{resource-group-name}'
            for a resource group, and
            '/subscriptions/{subscription-id}/resourceGroups/{resource-group-name}/providers/{resource-provider}/{resource-type}/{resource-name}'
            for a resource.
          in: path
          name: scope
          required: true
          x-ms-skip-url-encoding: true
          schema:
            type: string
          examples:
            GetConfigurations:
              value: scope
        - description: The name of the role assignment to create. It can be any valid GUID.
          in: path
          name: roleAssignmentName
          required: true
          schema:
            type: string
          examples:
            GetConfigurations:
              value: roleAssignmentName
        - $ref: "#/components/parameters/ApiVersionParameter"
      requestBody:
        $ref: "#/components/requestBodies/RoleAssignmentCreateParameters"
      responses:
        "201":
          description: Created - Returns information about the role assignment.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RoleAssignment"
              examples:
                GetConfigurations:
                  $ref: "#/components/examples/GetConfigurations"
      tags:
        - RoleAssignments
servers:
  - url: https://management.azure.com
components:
  examples:
    GetConfigurations:
      value:
        id: /subscriptions/subId/resourcegroups/rgname/providers/Microsoft.Authorization/roleAssignments/roleassignmentId
        name: roleassignmentId
        properties:
          principalId: Pid
          roleDefinitionId: /subscriptions/subId/providers/Microsoft.Authorization/roleDefinitions/roledefinitionId
          scope: /subscriptions/subId/resourcegroups/rgname
        type: Microsoft.Authorization/roleAssignments
  parameters:
    ApiVersionParameter:
      description: The API version to use for this operation.
      in: query
      name: api-version
      required: true
      schema:
        type: string
      examples:
        GetConfigurations:
          value: 2015-07-01
    SubscriptionIdParameter:
      description: The ID of the target subscription.
      in: path
      name: subscriptionId
      required: true
      schema:
        type: string
      examples:
        GetConfigurations:
          value: subId
  requestBodies:
    RoleAssignmentCreateParameters:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/RoleAssignmentCreateParameters"
      description: Parameters for the role assignment.
      required: true
  securitySchemes:
    azure_auth:
      description: Azure Active Directory OAuth2 Flow
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
          scopes:
            user_impersonation: impersonate your user account
  schemas:
    RoleAssignment:
      description: Role Assignments
      properties:
        id:
          description: The role assignment ID.
          readOnly: true
          type: string
        name:
          description: The role assignment name.
          readOnly: true
          type: string
        properties:
          $ref: "#/components/schemas/RoleAssignmentPropertiesWithScope"
        type:
          description: The role assignment type.
          readOnly: true
          type: string
    RoleAssignmentCreateParameters:
      description: Role assignment create parameters.
      properties:
        properties:
          $ref: "#/components/schemas/RoleAssignmentProperties"
      required:
        - properties
    RoleAssignmentFilter:
      description: Role Assignments filter
      properties:
        principalId:
          description: Returns role assignment of the specific principal.
          type: string
    RoleAssignmentListResult:
      description: Role assignment list operation result.
      properties:
        nextLink:
          description: The URL to use for getting the next set of results.
          type: string
        value:
          description: Role assignment list.
          items:
            $ref: "#/components/schemas/RoleAssignment"
          type: array
    RoleAssignmentProperties:
      description: Role assignment properties.
      properties:
        principalId:
          description: The principal ID assigned to the role. This maps to the ID inside
            the Active Directory. It can point to a user, service principal, or
            security group.
          type: string
        roleDefinitionId:
          description: The role definition ID used in the role assignment.
          type: string
      required:
        - roleDefinitionId
        - principalId
    RoleAssignmentPropertiesWithScope:
      description: Role assignment properties with scope.
      properties:
        principalId:
          description: The principal ID.
          type: string
        roleDefinitionId:
          description: The role definition ID.
          type: string
        scope:
          description: The role assignment scope.
          type: string
