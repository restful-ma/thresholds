openapi: 3.0.0
info:
  description: The Microsoft Azure Network management API provides a RESTful set of web
    services that interact with Microsoft Azure Networks service to manage your
    network resources. The API has entities that capture the relationship
    between an end user and the Microsoft Azure Networks service.
  title: NetworkManagementClient
  version: 2016-03-30
  x-apisguru-categories:
    - cloud
  x-logo:
    url: https://assets.onestore.ms/cdnfiles/onestorerolling-1606-01000/shell/v3/images/logo/microsoft.png
  x-origin:
    - format: swagger
      url: https://raw.githubusercontent.com/Azure/azure-rest-api-specs/master/specification/network/resource-manager/Microsoft.Network/stable/2016-03-30/network.json
      version: "2.0"
  x-preferred: false
  x-providerName: azure.com
  x-serviceName: network
  x-tags:
    - Azure
    - Microsoft
security:
  - azure_auth:
      - user_impersonation
paths:
  "/subscriptions/{subscriptionId}/providers/Microsoft.Network/applicationGateways":
    get:
      description: The List application gateway operation retrieves all the application
        gateways in a subscription.
      operationId: ApplicationGateways_ListAll
      parameters:
        - $ref: "#/components/parameters/ApiVersionParameter"
        - $ref: "#/components/parameters/SubscriptionIdParameter"
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApplicationGatewayListResult"
            text/json:
              schema:
                $ref: "#/components/schemas/ApplicationGatewayListResult"
      tags:
        - ApplicationGateways
      x-ms-pageable:
        nextLinkName: nextLink
  "/subscriptions/{subscriptionId}/providers/Microsoft.Network/expressRouteCircuits":
    get:
      description: The List ExpressRouteCircuit operation retrieves all the
        ExpressRouteCircuits in a subscription.
      operationId: ExpressRouteCircuits_ListAll
      parameters:
        - $ref: "#/components/parameters/ApiVersionParameter"
        - $ref: "#/components/parameters/SubscriptionIdParameter"
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ExpressRouteCircuitListResult"
            text/json:
              schema:
                $ref: "#/components/schemas/ExpressRouteCircuitListResult"
      tags:
        - ExpressRouteCircuits
      x-ms-pageable:
        nextLinkName: nextLink
  "/subscriptions/{subscriptionId}/providers/Microsoft.Network/expressRouteServiceProviders":
    get:
      description: The List ExpressRouteServiceProvider operation retrieves all the
        available ExpressRouteServiceProviders.
      operationId: ExpressRouteServiceProviders_List
      parameters:
        - $ref: "#/components/parameters/ApiVersionParameter"
        - $ref: "#/components/parameters/SubscriptionIdParameter"
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ExpressRouteServiceProviderListResult"
            text/json:
              schema:
                $ref: "#/components/schemas/ExpressRouteServiceProviderListResult"
      tags:
        - ExpressRouteServiceProviders
      x-ms-pageable:
        nextLinkName: nextLink
  "/subscriptions/{subscriptionId}/providers/Microsoft.Network/loadBalancers":
    get:
      description: The List loadBalancer operation retrieves all the load balancers in a
        subscription.
      operationId: LoadBalancers_ListAll
      parameters:
        - $ref: "#/components/parameters/ApiVersionParameter"
        - $ref: "#/components/parameters/SubscriptionIdParameter"
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LoadBalancerListResult"
            text/json:
              schema:
                $ref: "#/components/schemas/LoadBalancerListResult"
      tags:
        - LoadBalancers
      x-ms-pageable:
        nextLinkName: nextLink
  "/subscriptions/{subscriptionId}/providers/Microsoft.Network/locations/{location}/CheckDnsNameAvailability":
    get:
      description: Checks whether a domain name in the cloudapp.net zone is available for
        use.
      operationId: CheckDnsNameAvailability
      parameters:
        - description: The location of the domain name
          in: path
          name: location
          required: true
          schema:
            type: string
        - description: "The domain name to be verified. It must conform to the following
            regular expression: ^[a-z][a-z0-9-]{1,61}[a-z0-9]$."
          in: query
          name: domainNameLabel
          required: false
          schema:
            type: string
        - $ref: "#/components/parameters/ApiVersionParameter"
        - $ref: "#/components/parameters/SubscriptionIdParameter"
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DnsNameAvailabilityResult"
            text/json:
              schema:
                $ref: "#/components/schemas/DnsNameAvailabilityResult"
  "/subscriptions/{subscriptionId}/providers/Microsoft.Network/locations/{location}/usages":
    get:
      description: Lists compute usages for a subscription.
      operationId: Usages_List
      parameters:
        - description: The location upon which resource usage is queried.
          in: path
          name: location
          required: true
          schema:
            type: string
            pattern: ^[-\w\._]+$
        - $ref: "#/components/parameters/ApiVersionParameter"
        - $ref: "#/components/parameters/SubscriptionIdParameter"
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UsagesListResult"
            text/json:
              schema:
                $ref: "#/components/schemas/UsagesListResult"
      tags:
        - Usages
      x-ms-pageable: {}
  "/subscriptions/{subscriptionId}/providers/Microsoft.Network/networkInterfaces":
    get:
      description: The List networkInterfaces operation retrieves all the networkInterfaces
        in a subscription.
      operationId: NetworkInterfaces_ListAll
      parameters:
        - $ref: "#/components/parameters/ApiVersionParameter"
        - $ref: "#/components/parameters/SubscriptionIdParameter"
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NetworkInterfaceListResult"
            text/json:
              schema:
                $ref: "#/components/schemas/NetworkInterfaceListResult"
      tags:
        - NetworkInterfaces
      x-ms-pageable:
        nextLinkName: nextLink
  "/subscriptions/{subscriptionId}/providers/Microsoft.Network/networkSecurityGroups":
    get:
      description: The list NetworkSecurityGroups returns all network security groups in a
        subscription
      operationId: NetworkSecurityGroups_ListAll
      parameters:
        - $ref: "#/components/parameters/ApiVersionParameter"
        - $ref: "#/components/parameters/SubscriptionIdParameter"
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NetworkSecurityGroupListResult"
            text/json:
              schema:
                $ref: "#/components/schemas/NetworkSecurityGroupListResult"
      tags:
        - NetworkSecurityGroups
      x-ms-pageable:
        nextLinkName: nextLink
  "/subscriptions/{subscriptionId}/providers/Microsoft.Network/publicIPAddresses":
    get:
      description: The List publicIpAddress operation retrieves all the publicIpAddresses
        in a subscription.
      operationId: PublicIPAddresses_ListAll
      parameters:
        - $ref: "#/components/parameters/ApiVersionParameter"
        - $ref: "#/components/parameters/SubscriptionIdParameter"
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PublicIPAddressListResult"
            text/json:
              schema:
                $ref: "#/components/schemas/PublicIPAddressListResult"
      tags:
        - PublicIPAddresses
      x-ms-pageable:
        nextLinkName: nextLink
  "/subscriptions/{subscriptionId}/providers/Microsoft.Network/routeTables":
    get:
      description: The list RouteTables returns all route tables in a subscription
      operationId: RouteTables_ListAll
      parameters:
        - $ref: "#/components/parameters/ApiVersionParameter"
        - $ref: "#/components/parameters/SubscriptionIdParameter"
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RouteTableListResult"
            text/json:
              schema:
                $ref: "#/components/schemas/RouteTableListResult"
      tags:
        - RouteTables
      x-ms-pageable:
        nextLinkName: nextLink
  "/subscriptions/{subscriptionId}/providers/Microsoft.Network/virtualNetworks":
    get:
      description: The list VirtualNetwork returns all Virtual Networks in a subscription
      operationId: VirtualNetworks_ListAll
      parameters:
        - $ref: "#/components/parameters/ApiVersionParameter"
        - $ref: "#/components/parameters/SubscriptionIdParameter"
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/VirtualNetworkListResult"
            text/json:
              schema:
                $ref: "#/components/schemas/VirtualNetworkListResult"
      tags:
        - VirtualNetworks
      x-ms-pageable:
        nextLinkName: nextLink
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/applicationGateways":
    get:
      description: The List ApplicationGateway operation retrieves all the application
        gateways in a resource group.
      operationId: ApplicationGateways_List
      parameters:
        - description: The name of the resource group.
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/ApiVersionParameter"
        - $ref: "#/components/parameters/SubscriptionIdParameter"
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApplicationGatewayListResult"
            text/json:
              schema:
                $ref: "#/components/schemas/ApplicationGatewayListResult"
      tags:
        - ApplicationGateways
      x-ms-pageable:
        nextLinkName: nextLink
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/applicationGateways/{applicationGatewayName}":
    delete:
      description: The delete application gateway operation deletes the specified
        application gateway.
      operationId: ApplicationGateways_Delete
      parameters:
        - description: The name of the resource group.
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: The name of the application gateway.
          in: path
          name: applicationGatewayName
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/ApiVersionParameter"
        - $ref: "#/components/parameters/SubscriptionIdParameter"
      responses:
        "200":
          description: ""
        "202":
          description: ""
        "204":
          description: ""
      tags:
        - ApplicationGateways
      x-ms-long-running-operation: true
    get:
      description: The Get application gateway operation retrieves information about the
        specified application gateway.
      operationId: ApplicationGateways_Get
      parameters:
        - description: The name of the resource group.
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: The name of the application gateway.
          in: path
          name: applicationGatewayName
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/ApiVersionParameter"
        - $ref: "#/components/parameters/SubscriptionIdParameter"
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApplicationGateway"
            text/json:
              schema:
                $ref: "#/components/schemas/ApplicationGateway"
      tags:
        - ApplicationGateways
    put:
      description: The Put ApplicationGateway operation creates/updates a ApplicationGateway
      operationId: ApplicationGateways_CreateOrUpdate
      parameters:
        - description: The name of the resource group.
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: The name of the ApplicationGateway.
          in: path
          name: applicationGatewayName
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/ApiVersionParameter"
        - $ref: "#/components/parameters/SubscriptionIdParameter"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ApplicationGateway"
          text/json:
            schema:
              $ref: "#/components/schemas/ApplicationGateway"
        description: Parameters supplied to the create/delete ApplicationGateway operation
        required: true
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApplicationGateway"
            text/json:
              schema:
                $ref: "#/components/schemas/ApplicationGateway"
        "201":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApplicationGateway"
            text/json:
              schema:
                $ref: "#/components/schemas/ApplicationGateway"
      tags:
        - ApplicationGateways
      x-ms-long-running-operation: true
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/applicationGateways/{applicationGatewayName}/start":
    post:
      description: The Start ApplicationGateway operation starts application gateway in the
        specified resource group through Network resource provider.
      operationId: ApplicationGateways_Start
      parameters:
        - description: The name of the resource group.
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: The name of the application gateway.
          in: path
          name: applicationGatewayName
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/ApiVersionParameter"
        - $ref: "#/components/parameters/SubscriptionIdParameter"
      responses:
        "200":
          description: ""
        "202":
          description: ""
      tags:
        - ApplicationGateways
      x-ms-long-running-operation: true
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/applicationGateways/{applicationGatewayName}/stop":
    post:
      description: The STOP ApplicationGateway operation stops application gateway in the
        specified resource group through Network resource provider.
      operationId: ApplicationGateways_Stop
      parameters:
        - description: The name of the resource group.
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: The name of the application gateway.
          in: path
          name: applicationGatewayName
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/ApiVersionParameter"
        - $ref: "#/components/parameters/SubscriptionIdParameter"
      responses:
        "200":
          description: ""
        "202":
          description: ""
      tags:
        - ApplicationGateways
      x-ms-long-running-operation: true
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/connections":
    get:
      description: The List VirtualNetworkGatewayConnections operation retrieves all the
        virtual network gateways connections created.
      operationId: VirtualNetworkGatewayConnections_List
      parameters:
        - description: The name of the resource group.
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/ApiVersionParameter"
        - $ref: "#/components/parameters/SubscriptionIdParameter"
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/VirtualNetworkGatewayConnectionListResu\
                  lt"
            text/json:
              schema:
                $ref: "#/components/schemas/VirtualNetworkGatewayConnectionListResu\
                  lt"
      tags:
        - VirtualNetworkGatewayConnections
      x-ms-pageable:
        nextLinkName: nextLink
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/connections/{virtualNetworkGatewayConnectionName}":
    delete:
      description: The Delete VirtualNetworkGatewayConnection operation deletes the
        specified virtual network Gateway connection through Network resource
        provider.
      operationId: VirtualNetworkGatewayConnections_Delete
      parameters:
        - description: The name of the resource group.
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: The name of the virtual network gateway connection.
          in: path
          name: virtualNetworkGatewayConnectionName
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/ApiVersionParameter"
        - $ref: "#/components/parameters/SubscriptionIdParameter"
      responses:
        "200":
          description: ""
        "202":
          description: ""
        "204":
          description: ""
      tags:
        - VirtualNetworkGatewayConnections
      x-ms-long-running-operation: true
    get:
      description: The Get VirtualNetworkGatewayConnection operation retrieves information
        about the specified virtual network gateway connection through Network
        resource provider.
      operationId: VirtualNetworkGatewayConnections_Get
      parameters:
        - description: The name of the resource group.
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: The name of the virtual network gateway connection.
          in: path
          name: virtualNetworkGatewayConnectionName
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/ApiVersionParameter"
        - $ref: "#/components/parameters/SubscriptionIdParameter"
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/VirtualNetworkGatewayConnection"
            text/json:
              schema:
                $ref: "#/components/schemas/VirtualNetworkGatewayConnection"
      tags:
        - VirtualNetworkGatewayConnections
    put:
      description: The Put VirtualNetworkGatewayConnection operation creates/updates a
        virtual network gateway connection in the specified resource group
        through Network resource provider.
      operationId: VirtualNetworkGatewayConnections_CreateOrUpdate
      parameters:
        - description: The name of the resource group.
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: The name of the virtual network gateway connection.
          in: path
          name: virtualNetworkGatewayConnectionName
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/ApiVersionParameter"
        - $ref: "#/components/parameters/SubscriptionIdParameter"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/VirtualNetworkGatewayConnection"
          text/json:
            schema:
              $ref: "#/components/schemas/VirtualNetworkGatewayConnection"
        description: Parameters supplied to the Begin Create or update Virtual Network
          Gateway connection operation through Network resource provider.
        required: true
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/VirtualNetworkGatewayConnection"
            text/json:
              schema:
                $ref: "#/components/schemas/VirtualNetworkGatewayConnection"
        "201":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/VirtualNetworkGatewayConnection"
            text/json:
              schema:
                $ref: "#/components/schemas/VirtualNetworkGatewayConnection"
      tags:
        - VirtualNetworkGatewayConnections
      x-ms-long-running-operation: true
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/connections/{virtualNetworkGatewayConnectionName}/sharedkey":
    get:
      description: The Get VirtualNetworkGatewayConnectionSharedKey operation retrieves
        information about the specified virtual network gateway connection
        shared key through Network resource provider.
      operationId: VirtualNetworkGatewayConnections_GetSharedKey
      parameters:
        - description: The name of the resource group.
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: The virtual network gateway connection shared key name.
          in: path
          name: virtualNetworkGatewayConnectionName
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/ApiVersionParameter"
        - $ref: "#/components/parameters/SubscriptionIdParameter"
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConnectionSharedKeyResult"
            text/json:
              schema:
                $ref: "#/components/schemas/ConnectionSharedKeyResult"
      tags:
        - VirtualNetworkGatewayConnections
    put:
      description: The Put VirtualNetworkGatewayConnectionSharedKey operation sets the
        virtual network gateway connection shared key for passed virtual network
        gateway connection in the specified resource group through Network
        resource provider.
      operationId: VirtualNetworkGatewayConnections_SetSharedKey
      parameters:
        - description: The name of the resource group.
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: The virtual network gateway connection name.
          in: path
          name: virtualNetworkGatewayConnectionName
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/ApiVersionParameter"
        - $ref: "#/components/parameters/SubscriptionIdParameter"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ConnectionSharedKey"
          text/json:
            schema:
              $ref: "#/components/schemas/ConnectionSharedKey"
        description: Parameters supplied to the Begin Set Virtual Network Gateway
          connection Shared key operation through Network resource provider.
        required: true
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConnectionSharedKey"
            text/json:
              schema:
                $ref: "#/components/schemas/ConnectionSharedKey"
        "201":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConnectionSharedKey"
            text/json:
              schema:
                $ref: "#/components/schemas/ConnectionSharedKey"
      tags:
        - VirtualNetworkGatewayConnections
      x-ms-long-running-operation: true
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/connections/{virtualNetworkGatewayConnectionName}/sharedkey/reset":
    post:
      description: The VirtualNetworkGatewayConnectionResetSharedKey operation resets the
        virtual network gateway connection shared key for passed virtual network
        gateway connection in the specified resource group through Network
        resource provider.
      operationId: VirtualNetworkGatewayConnections_ResetSharedKey
      parameters:
        - description: The name of the resource group.
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: The virtual network gateway connection reset shared key Name.
          in: path
          name: virtualNetworkGatewayConnectionName
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/ApiVersionParameter"
        - $ref: "#/components/parameters/SubscriptionIdParameter"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ConnectionResetSharedKey"
          text/json:
            schema:
              $ref: "#/components/schemas/ConnectionResetSharedKey"
        description: Parameters supplied to the Begin Reset Virtual Network Gateway
          connection shared key operation through Network resource provider.
        required: true
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConnectionResetSharedKey"
            text/json:
              schema:
                $ref: "#/components/schemas/ConnectionResetSharedKey"
        "202":
          description: ""
      tags:
        - VirtualNetworkGatewayConnections
      x-ms-long-running-operation: true
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteCircuits":
    get:
      description: The List ExpressRouteCircuit operation retrieves all the
        ExpressRouteCircuits in a resource group.
      operationId: ExpressRouteCircuits_List
      parameters:
        - description: The name of the resource group.
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/ApiVersionParameter"
        - $ref: "#/components/parameters/SubscriptionIdParameter"
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ExpressRouteCircuitListResult"
            text/json:
              schema:
                $ref: "#/components/schemas/ExpressRouteCircuitListResult"
      tags:
        - ExpressRouteCircuits
      x-ms-pageable:
        nextLinkName: nextLink
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteCircuits/{circuitName}":
    delete:
      description: The delete ExpressRouteCircuit operation deletes the specified
        ExpressRouteCircuit.
      operationId: ExpressRouteCircuits_Delete
      parameters:
        - description: The name of the resource group.
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: The name of the express route Circuit.
          in: path
          name: circuitName
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/ApiVersionParameter"
        - $ref: "#/components/parameters/SubscriptionIdParameter"
      responses:
        "200":
          description: ""
        "202":
          description: ""
        "204":
          description: ""
      tags:
        - ExpressRouteCircuits
      x-ms-long-running-operation: true
    get:
      description: The Get ExpressRouteCircuit operation retrieves information about the
        specified ExpressRouteCircuit.
      operationId: ExpressRouteCircuits_Get
      parameters:
        - description: The name of the resource group.
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: The name of the circuit.
          in: path
          name: circuitName
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/ApiVersionParameter"
        - $ref: "#/components/parameters/SubscriptionIdParameter"
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ExpressRouteCircuit"
            text/json:
              schema:
                $ref: "#/components/schemas/ExpressRouteCircuit"
      tags:
        - ExpressRouteCircuits
    put:
      description: The Put ExpressRouteCircuit operation creates/updates a
        ExpressRouteCircuit
      operationId: ExpressRouteCircuits_CreateOrUpdate
      parameters:
        - description: The name of the resource group.
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: The name of the circuit.
          in: path
          name: circuitName
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/ApiVersionParameter"
        - $ref: "#/components/parameters/SubscriptionIdParameter"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ExpressRouteCircuit"
          text/json:
            schema:
              $ref: "#/components/schemas/ExpressRouteCircuit"
        description: Parameters supplied to the create/delete ExpressRouteCircuit operation
        required: true
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ExpressRouteCircuit"
            text/json:
              schema:
                $ref: "#/components/schemas/ExpressRouteCircuit"
        "201":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ExpressRouteCircuit"
            text/json:
              schema:
                $ref: "#/components/schemas/ExpressRouteCircuit"
      tags:
        - ExpressRouteCircuits
      x-ms-long-running-operation: true
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteCircuits/{circuitName}/authorizations":
    get:
      description: The List authorization operation retrieves all the authorizations in an
        ExpressRouteCircuit.
      operationId: ExpressRouteCircuitAuthorizations_List
      parameters:
        - description: The name of the resource group.
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: The name of the circuit.
          in: path
          name: circuitName
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/ApiVersionParameter"
        - $ref: "#/components/parameters/SubscriptionIdParameter"
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthorizationListResult"
            text/json:
              schema:
                $ref: "#/components/schemas/AuthorizationListResult"
      tags:
        - ExpressRouteCircuitAuthorizations
      x-ms-pageable:
        nextLinkName: nextLink
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteCircuits/{circuitName}/authorizations/{authorizationName}":
    delete:
      description: The delete authorization operation deletes the specified authorization
        from the specified ExpressRouteCircuit.
      operationId: ExpressRouteCircuitAuthorizations_Delete
      parameters:
        - description: The name of the resource group.
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: The name of the express route circuit.
          in: path
          name: circuitName
          required: true
          schema:
            type: string
        - description: The name of the authorization.
          in: path
          name: authorizationName
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/ApiVersionParameter"
        - $ref: "#/components/parameters/SubscriptionIdParameter"
      responses:
        "200":
          description: ""
        "202":
          description: ""
        "204":
          description: ""
      tags:
        - ExpressRouteCircuitAuthorizations
      x-ms-long-running-operation: true
    get:
      description: The GET authorization operation retrieves the specified authorization
        from the specified ExpressRouteCircuit.
      operationId: ExpressRouteCircuitAuthorizations_Get
      parameters:
        - description: The name of the resource group.
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: The name of the express route circuit.
          in: path
          name: circuitName
          required: true
          schema:
            type: string
        - description: The name of the authorization.
          in: path
          name: authorizationName
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/ApiVersionParameter"
        - $ref: "#/components/parameters/SubscriptionIdParameter"
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ExpressRouteCircuitAuthorization"
            text/json:
              schema:
                $ref: "#/components/schemas/ExpressRouteCircuitAuthorization"
      tags:
        - ExpressRouteCircuitAuthorizations
    put:
      description: The Put Authorization operation creates/updates an authorization in the
        specified ExpressRouteCircuits
      operationId: ExpressRouteCircuitAuthorizations_CreateOrUpdate
      parameters:
        - description: The name of the resource group.
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: The name of the express route circuit.
          in: path
          name: circuitName
          required: true
          schema:
            type: string
        - description: The name of the authorization.
          in: path
          name: authorizationName
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/ApiVersionParameter"
        - $ref: "#/components/parameters/SubscriptionIdParameter"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ExpressRouteCircuitAuthorization"
          text/json:
            schema:
              $ref: "#/components/schemas/ExpressRouteCircuitAuthorization"
        description: Parameters supplied to the create/update
          ExpressRouteCircuitAuthorization operation
        required: true
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ExpressRouteCircuitAuthorization"
            text/json:
              schema:
                $ref: "#/components/schemas/ExpressRouteCircuitAuthorization"
        "201":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ExpressRouteCircuitAuthorization"
            text/json:
              schema:
                $ref: "#/components/schemas/ExpressRouteCircuitAuthorization"
      tags:
        - ExpressRouteCircuitAuthorizations
      x-ms-long-running-operation: true
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteCircuits/{circuitName}/peerings":
    get:
      description: The List peering operation retrieves all the peerings in an
        ExpressRouteCircuit.
      operationId: ExpressRouteCircuitPeerings_List
      parameters:
        - description: The name of the resource group.
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: The name of the circuit.
          in: path
          name: circuitName
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/ApiVersionParameter"
        - $ref: "#/components/parameters/SubscriptionIdParameter"
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ExpressRouteCircuitPeeringListResult"
            text/json:
              schema:
                $ref: "#/components/schemas/ExpressRouteCircuitPeeringListResult"
      tags:
        - ExpressRouteCircuitPeerings
      x-ms-pageable:
        nextLinkName: nextLink
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteCircuits/{circuitName}/peerings/{peeringName}":
    delete:
      description: The delete peering operation deletes the specified peering from the
        ExpressRouteCircuit.
      operationId: ExpressRouteCircuitPeerings_Delete
      parameters:
        - description: The name of the resource group.
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: The name of the express route circuit.
          in: path
          name: circuitName
          required: true
          schema:
            type: string
        - description: The name of the peering.
          in: path
          name: peeringName
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/ApiVersionParameter"
        - $ref: "#/components/parameters/SubscriptionIdParameter"
      responses:
        "200":
          description: ""
        "202":
          description: ""
        "204":
          description: ""
      tags:
        - ExpressRouteCircuitPeerings
      x-ms-long-running-operation: true
    get:
      description: The GET peering operation retrieves the specified authorization from the
        ExpressRouteCircuit.
      operationId: ExpressRouteCircuitPeerings_Get
      parameters:
        - description: The name of the resource group.
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: The name of the express route circuit.
          in: path
          name: circuitName
          required: true
          schema:
            type: string
        - description: The name of the peering.
          in: path
          name: peeringName
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/ApiVersionParameter"
        - $ref: "#/components/parameters/SubscriptionIdParameter"
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ExpressRouteCircuitPeering"
            text/json:
              schema:
                $ref: "#/components/schemas/ExpressRouteCircuitPeering"
      tags:
        - ExpressRouteCircuitPeerings
    put:
      description: The Put Peering operation creates/updates an peering in the specified
        ExpressRouteCircuits
      operationId: ExpressRouteCircuitPeerings_CreateOrUpdate
      parameters:
        - description: The name of the resource group.
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: The name of the express route circuit.
          in: path
          name: circuitName
          required: true
          schema:
            type: string
        - description: The name of the peering.
          in: path
          name: peeringName
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/ApiVersionParameter"
        - $ref: "#/components/parameters/SubscriptionIdParameter"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ExpressRouteCircuitPeering"
          text/json:
            schema:
              $ref: "#/components/schemas/ExpressRouteCircuitPeering"
        description: Parameters supplied to the create/update ExpressRouteCircuit Peering
          operation
        required: true
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ExpressRouteCircuitPeering"
            text/json:
              schema:
                $ref: "#/components/schemas/ExpressRouteCircuitPeering"
        "201":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ExpressRouteCircuitPeering"
            text/json:
              schema:
                $ref: "#/components/schemas/ExpressRouteCircuitPeering"
      tags:
        - ExpressRouteCircuitPeerings
      x-ms-long-running-operation: true
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteCircuits/{circuitName}/peerings/{peeringName}/arpTables/{devicePath}":
    post:
      description: The ListArpTable from ExpressRouteCircuit operation retrieves the
        currently advertised arp table associated with the ExpressRouteCircuits
        in a resource group.
      operationId: ExpressRouteCircuits_ListArpTable
      parameters:
        - description: The name of the resource group.
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: The name of the circuit.
          in: path
          name: circuitName
          required: true
          schema:
            type: string
        - description: The name of the peering.
          in: path
          name: peeringName
          required: true
          schema:
            type: string
        - description: The path of the device.
          in: path
          name: devicePath
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/ApiVersionParameter"
        - $ref: "#/components/parameters/SubscriptionIdParameter"
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ExpressRouteCircuitsArpTableListResult"
            text/json:
              schema:
                $ref: "#/components/schemas/ExpressRouteCircuitsArpTableListResult"
        "202":
          description: ""
      tags:
        - ExpressRouteCircuitArpTable
      x-ms-long-running-operation: true
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteCircuits/{circuitName}/peerings/{peeringName}/routeTables/{devicePath}":
    post:
      description: The ListRoutesTable from ExpressRouteCircuit operation retrieves the
        currently advertised routes table associated with the
        ExpressRouteCircuits in a resource group.
      operationId: ExpressRouteCircuits_ListRoutesTable
      parameters:
        - description: The name of the resource group.
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: The name of the circuit.
          in: path
          name: circuitName
          required: true
          schema:
            type: string
        - description: The name of the peering.
          in: path
          name: peeringName
          required: true
          schema:
            type: string
        - description: The path of the device.
          in: path
          name: devicePath
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/ApiVersionParameter"
        - $ref: "#/components/parameters/SubscriptionIdParameter"
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ExpressRouteCircuitsRoutesTableListResu\
                  lt"
            text/json:
              schema:
                $ref: "#/components/schemas/ExpressRouteCircuitsRoutesTableListResu\
                  lt"
        "202":
          description: ""
      tags:
        - ExpressRouteCircuitRoutesTable
      x-ms-long-running-operation: true
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteCircuits/{circuitName}/peerings/{peeringName}/routeTablesSummary/{devicePath}":
    post:
      description: The ListRoutesTable from ExpressRouteCircuit operation retrieves the
        currently advertised routes table associated with the
        ExpressRouteCircuits in a resource group.
      operationId: ExpressRouteCircuits_ListRoutesTableSummary
      parameters:
        - description: The name of the resource group.
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: The name of the circuit.
          in: path
          name: circuitName
          required: true
          schema:
            type: string
        - description: The name of the peering.
          in: path
          name: peeringName
          required: true
          schema:
            type: string
        - description: The path of the device.
          in: path
          name: devicePath
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/ApiVersionParameter"
        - $ref: "#/components/parameters/SubscriptionIdParameter"
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ExpressRouteCircuitsRoutesTableSummaryL\
                  istResult"
            text/json:
              schema:
                $ref: "#/components/schemas/ExpressRouteCircuitsRoutesTableSummaryL\
                  istResult"
        "202":
          description: ""
      tags:
        - ExpressRouteCircuitRoutesTableSummary
      x-ms-long-running-operation: true
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteCircuits/{circuitName}/peerings/{peeringName}/stats":
    get:
      description: The GetPeeringStats ExpressRouteCircuit operation retrieves all the
        stats from a ExpressRouteCircuits in a resource group.
      operationId: ExpressRouteCircuits_GetPeeringStats
      parameters:
        - description: The name of the resource group.
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: The name of the circuit.
          in: path
          name: circuitName
          required: true
          schema:
            type: string
        - description: The name of the peering.
          in: path
          name: peeringName
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/ApiVersionParameter"
        - $ref: "#/components/parameters/SubscriptionIdParameter"
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ExpressRouteCircuitStats"
            text/json:
              schema:
                $ref: "#/components/schemas/ExpressRouteCircuitStats"
      tags:
        - ExpressRouteCircuitStats
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteCircuits/{circuitName}/stats":
    get:
      description: The GetStats ExpressRouteCircuit operation retrieves all the stats from
        a ExpressRouteCircuits in a resource group.
      operationId: ExpressRouteCircuits_GetStats
      parameters:
        - description: The name of the resource group.
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: The name of the circuit.
          in: path
          name: circuitName
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/ApiVersionParameter"
        - $ref: "#/components/parameters/SubscriptionIdParameter"
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ExpressRouteCircuitStats"
            text/json:
              schema:
                $ref: "#/components/schemas/ExpressRouteCircuitStats"
      tags:
        - ExpressRouteCircuitStats
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/loadBalancers":
    get:
      description: The List loadBalancer operation retrieves all the load balancers in a
        resource group.
      operationId: LoadBalancers_List
      parameters:
        - description: The name of the resource group.
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/ApiVersionParameter"
        - $ref: "#/components/parameters/SubscriptionIdParameter"
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LoadBalancerListResult"
            text/json:
              schema:
                $ref: "#/components/schemas/LoadBalancerListResult"
      tags:
        - LoadBalancers
      x-ms-pageable:
        nextLinkName: nextLink
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/loadBalancers/{loadBalancerName}":
    delete:
      description: The delete loadbalancer operation deletes the specified loadbalancer.
      operationId: LoadBalancers_Delete
      parameters:
        - description: The name of the resource group.
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: The name of the loadBalancer.
          in: path
          name: loadBalancerName
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/ApiVersionParameter"
        - $ref: "#/components/parameters/SubscriptionIdParameter"
      responses:
        "200":
          description: ""
        "202":
          description: ""
        "204":
          description: ""
      tags:
        - LoadBalancers
      x-ms-long-running-operation: true
    get:
      description: The Get network interface operation retrieves information about the
        specified network interface.
      operationId: LoadBalancers_Get
      parameters:
        - description: The name of the resource group.
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: The name of the loadBalancer.
          in: path
          name: loadBalancerName
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/ApiVersionParameter"
        - $ref: "#/components/parameters/SubscriptionIdParameter"
        - description: expand references resources.
          in: query
          name: $expand
          required: false
          schema:
            type: string
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LoadBalancer"
            text/json:
              schema:
                $ref: "#/components/schemas/LoadBalancer"
      tags:
        - LoadBalancers
    put:
      description: The Put LoadBalancer operation creates/updates a LoadBalancer
      operationId: LoadBalancers_CreateOrUpdate
      parameters:
        - description: The name of the resource group.
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: The name of the loadBalancer.
          in: path
          name: loadBalancerName
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/ApiVersionParameter"
        - $ref: "#/components/parameters/SubscriptionIdParameter"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LoadBalancer"
          text/json:
            schema:
              $ref: "#/components/schemas/LoadBalancer"
        description: Parameters supplied to the create/delete LoadBalancer operation
        required: true
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LoadBalancer"
            text/json:
              schema:
                $ref: "#/components/schemas/LoadBalancer"
        "201":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LoadBalancer"
            text/json:
              schema:
                $ref: "#/components/schemas/LoadBalancer"
      tags:
        - LoadBalancers
      x-ms-long-running-operation: true
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/localNetworkGateways":
    get:
      description: The List LocalNetworkGateways operation retrieves all the local network
        gateways stored.
      operationId: LocalNetworkGateways_List
      parameters:
        - description: The name of the resource group.
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/ApiVersionParameter"
        - $ref: "#/components/parameters/SubscriptionIdParameter"
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LocalNetworkGatewayListResult"
            text/json:
              schema:
                $ref: "#/components/schemas/LocalNetworkGatewayListResult"
      tags:
        - LocalNetworkGateways
      x-ms-pageable:
        nextLinkName: nextLink
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/localNetworkGateways/{localNetworkGatewayName}":
    delete:
      description: The Delete LocalNetworkGateway operation deletes the specified local
        network Gateway through Network resource provider.
      operationId: LocalNetworkGateways_Delete
      parameters:
        - description: The name of the resource group.
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: The name of the local network gateway.
          in: path
          name: localNetworkGatewayName
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/ApiVersionParameter"
        - $ref: "#/components/parameters/SubscriptionIdParameter"
      responses:
        "200":
          description: ""
        "202":
          description: ""
        "204":
          description: ""
      tags:
        - LocalNetworkGateways
      x-ms-long-running-operation: true
    get:
      description: The Get LocalNetworkGateway operation retrieves information about the
        specified local network gateway through Network resource provider.
      operationId: LocalNetworkGateways_Get
      parameters:
        - description: The name of the resource group.
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: The name of the local network gateway.
          in: path
          name: localNetworkGatewayName
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/ApiVersionParameter"
        - $ref: "#/components/parameters/SubscriptionIdParameter"
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LocalNetworkGateway"
            text/json:
              schema:
                $ref: "#/components/schemas/LocalNetworkGateway"
      tags:
        - LocalNetworkGateways
    put:
      description: The Put LocalNetworkGateway operation creates/updates a local network
        gateway in the specified resource group through Network resource
        provider.
      operationId: LocalNetworkGateways_CreateOrUpdate
      parameters:
        - description: The name of the resource group.
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: The name of the local network gateway.
          in: path
          name: localNetworkGatewayName
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/ApiVersionParameter"
        - $ref: "#/components/parameters/SubscriptionIdParameter"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LocalNetworkGateway"
          text/json:
            schema:
              $ref: "#/components/schemas/LocalNetworkGateway"
        description: Parameters supplied to the Begin Create or update Local Network
          Gateway operation through Network resource provider.
        required: true
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LocalNetworkGateway"
            text/json:
              schema:
                $ref: "#/components/schemas/LocalNetworkGateway"
        "201":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LocalNetworkGateway"
            text/json:
              schema:
                $ref: "#/components/schemas/LocalNetworkGateway"
      tags:
        - LocalNetworkGateways
      x-ms-long-running-operation: true
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkInterfaces":
    get:
      description: The List networkInterfaces operation retrieves all the networkInterfaces
        in a resource group.
      operationId: NetworkInterfaces_List
      parameters:
        - description: The name of the resource group.
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/ApiVersionParameter"
        - $ref: "#/components/parameters/SubscriptionIdParameter"
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NetworkInterfaceListResult"
            text/json:
              schema:
                $ref: "#/components/schemas/NetworkInterfaceListResult"
      tags:
        - NetworkInterfaces
      x-ms-pageable:
        nextLinkName: nextLink
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkInterfaces/{networkInterfaceName}":
    delete:
      description: The delete networkInterface operation deletes the specified
        networkInterface.
      operationId: NetworkInterfaces_Delete
      parameters:
        - description: The name of the resource group.
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: The name of the network interface.
          in: path
          name: networkInterfaceName
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/ApiVersionParameter"
        - $ref: "#/components/parameters/SubscriptionIdParameter"
      responses:
        "200":
          description: ""
        "202":
          description: ""
        "204":
          description: ""
      tags:
        - NetworkInterfaces
      x-ms-long-running-operation: true
    get:
      description: The Get network interface operation retrieves information about the
        specified network interface.
      operationId: NetworkInterfaces_Get
      parameters:
        - description: The name of the resource group.
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: The name of the network interface.
          in: path
          name: networkInterfaceName
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/ApiVersionParameter"
        - $ref: "#/components/parameters/SubscriptionIdParameter"
        - description: expand references resources.
          in: query
          name: $expand
          required: false
          schema:
            type: string
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NetworkInterface"
            text/json:
              schema:
                $ref: "#/components/schemas/NetworkInterface"
      tags:
        - NetworkInterfaces
    put:
      description: The Put NetworkInterface operation creates/updates a networkInterface
      operationId: NetworkInterfaces_CreateOrUpdate
      parameters:
        - description: The name of the resource group.
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: The name of the network interface.
          in: path
          name: networkInterfaceName
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/ApiVersionParameter"
        - $ref: "#/components/parameters/SubscriptionIdParameter"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NetworkInterface"
          text/json:
            schema:
              $ref: "#/components/schemas/NetworkInterface"
        description: Parameters supplied to the create/update NetworkInterface operation
        required: true
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NetworkInterface"
            text/json:
              schema:
                $ref: "#/components/schemas/NetworkInterface"
        "201":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NetworkInterface"
            text/json:
              schema:
                $ref: "#/components/schemas/NetworkInterface"
      tags:
        - NetworkInterfaces
      x-ms-long-running-operation: true
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkSecurityGroups":
    get:
      description: The list NetworkSecurityGroups returns all network security groups in a
        resource group
      operationId: NetworkSecurityGroups_List
      parameters:
        - description: The name of the resource group.
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/ApiVersionParameter"
        - $ref: "#/components/parameters/SubscriptionIdParameter"
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NetworkSecurityGroupListResult"
            text/json:
              schema:
                $ref: "#/components/schemas/NetworkSecurityGroupListResult"
      tags:
        - NetworkSecurityGroups
      x-ms-pageable:
        nextLinkName: nextLink
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkSecurityGroups/{networkSecurityGroupName}":
    delete:
      description: The Delete NetworkSecurityGroup operation deletes the specified network
        security group
      operationId: NetworkSecurityGroups_Delete
      parameters:
        - description: The name of the resource group.
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: The name of the network security group.
          in: path
          name: networkSecurityGroupName
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/ApiVersionParameter"
        - $ref: "#/components/parameters/SubscriptionIdParameter"
      responses:
        "200":
          description: ""
        "202":
          description: ""
        "204":
          description: ""
      tags:
        - NetworkSecurityGroups
      x-ms-long-running-operation: true
    get:
      description: The Get NetworkSecurityGroups operation retrieves information about the
        specified network security group.
      operationId: NetworkSecurityGroups_Get
      parameters:
        - description: The name of the resource group.
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: The name of the network security group.
          in: path
          name: networkSecurityGroupName
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/ApiVersionParameter"
        - $ref: "#/components/parameters/SubscriptionIdParameter"
        - description: expand references resources.
          in: query
          name: $expand
          required: false
          schema:
            type: string
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NetworkSecurityGroup"
            text/json:
              schema:
                $ref: "#/components/schemas/NetworkSecurityGroup"
      tags:
        - NetworkSecurityGroups
    put:
      description: The Put NetworkSecurityGroup operation creates/updates a network
        security group in the specified resource group.
      operationId: NetworkSecurityGroups_CreateOrUpdate
      parameters:
        - description: The name of the resource group.
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: The name of the network security group.
          in: path
          name: networkSecurityGroupName
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/ApiVersionParameter"
        - $ref: "#/components/parameters/SubscriptionIdParameter"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NetworkSecurityGroup"
          text/json:
            schema:
              $ref: "#/components/schemas/NetworkSecurityGroup"
        description: Parameters supplied to the create/update Network Security Group
          operation
        required: true
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NetworkSecurityGroup"
            text/json:
              schema:
                $ref: "#/components/schemas/NetworkSecurityGroup"
        "201":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NetworkSecurityGroup"
            text/json:
              schema:
                $ref: "#/components/schemas/NetworkSecurityGroup"
      tags:
        - NetworkSecurityGroups
      x-ms-long-running-operation: true
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkSecurityGroups/{networkSecurityGroupName}/securityRules":
    get:
      description: The List network security rule operation retrieves all the security
        rules in a network security group.
      operationId: SecurityRules_List
      parameters:
        - description: The name of the resource group.
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: The name of the network security group.
          in: path
          name: networkSecurityGroupName
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/ApiVersionParameter"
        - $ref: "#/components/parameters/SubscriptionIdParameter"
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SecurityRuleListResult"
            text/json:
              schema:
                $ref: "#/components/schemas/SecurityRuleListResult"
      tags:
        - SecurityRules
      x-ms-pageable:
        nextLinkName: nextLink
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkSecurityGroups/{networkSecurityGroupName}/securityRules/{securityRuleName}":
    delete:
      description: The delete network security rule operation deletes the specified network
        security rule.
      operationId: SecurityRules_Delete
      parameters:
        - description: The name of the resource group.
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: The name of the network security group.
          in: path
          name: networkSecurityGroupName
          required: true
          schema:
            type: string
        - description: The name of the security rule.
          in: path
          name: securityRuleName
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/ApiVersionParameter"
        - $ref: "#/components/parameters/SubscriptionIdParameter"
      responses:
        "200":
          description: ""
        "202":
          description: ""
        "204":
          description: ""
      tags:
        - SecurityRules
      x-ms-long-running-operation: true
    get:
      description: The Get NetworkSecurityRule operation retrieves information about the
        specified network security rule.
      operationId: SecurityRules_Get
      parameters:
        - description: The name of the resource group.
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: The name of the network security group.
          in: path
          name: networkSecurityGroupName
          required: true
          schema:
            type: string
        - description: The name of the security rule.
          in: path
          name: securityRuleName
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/ApiVersionParameter"
        - $ref: "#/components/parameters/SubscriptionIdParameter"
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SecurityRule"
            text/json:
              schema:
                $ref: "#/components/schemas/SecurityRule"
      tags:
        - SecurityRules
    put:
      description: The Put network security rule operation creates/updates a security rule
        in the specified network security group
      operationId: SecurityRules_CreateOrUpdate
      parameters:
        - description: The name of the resource group.
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: The name of the network security group.
          in: path
          name: networkSecurityGroupName
          required: true
          schema:
            type: string
        - description: The name of the security rule.
          in: path
          name: securityRuleName
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/ApiVersionParameter"
        - $ref: "#/components/parameters/SubscriptionIdParameter"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SecurityRule"
          text/json:
            schema:
              $ref: "#/components/schemas/SecurityRule"
        description: Parameters supplied to the create/update network security rule
          operation
        required: true
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SecurityRule"
            text/json:
              schema:
                $ref: "#/components/schemas/SecurityRule"
        "201":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SecurityRule"
            text/json:
              schema:
                $ref: "#/components/schemas/SecurityRule"
      tags:
        - SecurityRules
      x-ms-long-running-operation: true
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/publicIPAddresses":
    get:
      description: The List publicIpAddress operation retrieves all the publicIpAddresses
        in a resource group.
      operationId: PublicIPAddresses_List
      parameters:
        - description: The name of the resource group.
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/ApiVersionParameter"
        - $ref: "#/components/parameters/SubscriptionIdParameter"
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PublicIPAddressListResult"
            text/json:
              schema:
                $ref: "#/components/schemas/PublicIPAddressListResult"
      tags:
        - PublicIPAddresses
      x-ms-pageable:
        nextLinkName: nextLink
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/publicIPAddresses/{publicIpAddressName}":
    delete:
      description: The delete publicIpAddress operation deletes the specified
        publicIpAddress.
      operationId: PublicIPAddresses_Delete
      parameters:
        - description: The name of the resource group.
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: The name of the subnet.
          in: path
          name: publicIpAddressName
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/ApiVersionParameter"
        - $ref: "#/components/parameters/SubscriptionIdParameter"
      responses:
        "200":
          description: ""
        "202":
          description: ""
        "204":
          description: ""
      tags:
        - PublicIPAddresses
      x-ms-long-running-operation: true
    get:
      description: The Get publicIpAddress operation retrieves information about the
        specified pubicIpAddress
      operationId: PublicIPAddresses_Get
      parameters:
        - description: The name of the resource group.
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: The name of the subnet.
          in: path
          name: publicIpAddressName
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/ApiVersionParameter"
        - $ref: "#/components/parameters/SubscriptionIdParameter"
        - description: expand references resources.
          in: query
          name: $expand
          required: false
          schema:
            type: string
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PublicIPAddress"
            text/json:
              schema:
                $ref: "#/components/schemas/PublicIPAddress"
      tags:
        - PublicIPAddresses
    put:
      description: The Put PublicIPAddress operation creates/updates a stable/dynamic
        PublicIP address
      operationId: PublicIPAddresses_CreateOrUpdate
      parameters:
        - description: The name of the resource group.
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: The name of the publicIpAddress.
          in: path
          name: publicIpAddressName
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/ApiVersionParameter"
        - $ref: "#/components/parameters/SubscriptionIdParameter"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PublicIPAddress"
          text/json:
            schema:
              $ref: "#/components/schemas/PublicIPAddress"
        description: Parameters supplied to the create/update PublicIPAddress operation
        required: true
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PublicIPAddress"
            text/json:
              schema:
                $ref: "#/components/schemas/PublicIPAddress"
        "201":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PublicIPAddress"
            text/json:
              schema:
                $ref: "#/components/schemas/PublicIPAddress"
      tags:
        - PublicIPAddresses
      x-ms-long-running-operation: true
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/routeTables":
    get:
      description: The list RouteTables returns all route tables in a resource group
      operationId: RouteTables_List
      parameters:
        - description: The name of the resource group.
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/ApiVersionParameter"
        - $ref: "#/components/parameters/SubscriptionIdParameter"
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RouteTableListResult"
            text/json:
              schema:
                $ref: "#/components/schemas/RouteTableListResult"
      tags:
        - RouteTables
      x-ms-pageable:
        nextLinkName: nextLink
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/routeTables/{routeTableName}":
    delete:
      description: The Delete RouteTable operation deletes the specified Route Table
      operationId: RouteTables_Delete
      parameters:
        - description: The name of the resource group.
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: The name of the route table.
          in: path
          name: routeTableName
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/ApiVersionParameter"
        - $ref: "#/components/parameters/SubscriptionIdParameter"
      responses:
        "200":
          description: ""
        "202":
          description: ""
        "204":
          description: ""
      tags:
        - RouteTables
      x-ms-long-running-operation: true
    get:
      description: The Get RouteTables operation retrieves information about the specified
        route table.
      operationId: RouteTables_Get
      parameters:
        - description: The name of the resource group.
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: The name of the route table.
          in: path
          name: routeTableName
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/ApiVersionParameter"
        - $ref: "#/components/parameters/SubscriptionIdParameter"
        - description: expand references resources.
          in: query
          name: $expand
          required: false
          schema:
            type: string
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RouteTable"
            text/json:
              schema:
                $ref: "#/components/schemas/RouteTable"
      tags:
        - RouteTables
    put:
      description: The Put RouteTable operation creates/updates a route table in the
        specified resource group.
      operationId: RouteTables_CreateOrUpdate
      parameters:
        - description: The name of the resource group.
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: The name of the route table.
          in: path
          name: routeTableName
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/ApiVersionParameter"
        - $ref: "#/components/parameters/SubscriptionIdParameter"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RouteTable"
          text/json:
            schema:
              $ref: "#/components/schemas/RouteTable"
        description: Parameters supplied to the create/update Route Table operation
        required: true
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RouteTable"
            text/json:
              schema:
                $ref: "#/components/schemas/RouteTable"
        "201":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RouteTable"
            text/json:
              schema:
                $ref: "#/components/schemas/RouteTable"
      tags:
        - RouteTables
      x-ms-long-running-operation: true
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/routeTables/{routeTableName}/routes":
    get:
      description: The List network security rule operation retrieves all the routes in a
        route table.
      operationId: Routes_List
      parameters:
        - description: The name of the resource group.
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: The name of the route table.
          in: path
          name: routeTableName
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/ApiVersionParameter"
        - $ref: "#/components/parameters/SubscriptionIdParameter"
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RouteListResult"
            text/json:
              schema:
                $ref: "#/components/schemas/RouteListResult"
      tags:
        - Routes
      x-ms-pageable:
        nextLinkName: nextLink
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/routeTables/{routeTableName}/routes/{routeName}":
    delete:
      description: The delete route operation deletes the specified route from a route
        table.
      operationId: Routes_Delete
      parameters:
        - description: The name of the resource group.
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: The name of the route table.
          in: path
          name: routeTableName
          required: true
          schema:
            type: string
        - description: The name of the route.
          in: path
          name: routeName
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/ApiVersionParameter"
        - $ref: "#/components/parameters/SubscriptionIdParameter"
      responses:
        "200":
          description: ""
        "202":
          description: ""
        "204":
          description: ""
      tags:
        - Routes
      x-ms-long-running-operation: true
    get:
      description: The Get route operation retrieves information about the specified route
        from the route table.
      operationId: Routes_Get
      parameters:
        - description: The name of the resource group.
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: The name of the route table.
          in: path
          name: routeTableName
          required: true
          schema:
            type: string
        - description: The name of the route.
          in: path
          name: routeName
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/ApiVersionParameter"
        - $ref: "#/components/parameters/SubscriptionIdParameter"
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Route"
            text/json:
              schema:
                $ref: "#/components/schemas/Route"
      tags:
        - Routes
    put:
      description: The Put route operation creates/updates a route in the specified route
        table
      operationId: Routes_CreateOrUpdate
      parameters:
        - description: The name of the resource group.
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: The name of the route table.
          in: path
          name: routeTableName
          required: true
          schema:
            type: string
        - description: The name of the route.
          in: path
          name: routeName
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/ApiVersionParameter"
        - $ref: "#/components/parameters/SubscriptionIdParameter"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Route"
          text/json:
            schema:
              $ref: "#/components/schemas/Route"
        description: Parameters supplied to the create/update route operation
        required: true
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Route"
            text/json:
              schema:
                $ref: "#/components/schemas/Route"
        "201":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Route"
            text/json:
              schema:
                $ref: "#/components/schemas/Route"
      tags:
        - Routes
      x-ms-long-running-operation: true
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways":
    get:
      description: The List VirtualNetworkGateways operation retrieves all the virtual
        network gateways stored.
      operationId: VirtualNetworkGateways_List
      parameters:
        - description: The name of the resource group.
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/ApiVersionParameter"
        - $ref: "#/components/parameters/SubscriptionIdParameter"
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/VirtualNetworkGatewayListResult"
            text/json:
              schema:
                $ref: "#/components/schemas/VirtualNetworkGatewayListResult"
      tags:
        - VirtualNetworkGateways
      x-ms-pageable:
        nextLinkName: nextLink
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}":
    delete:
      description: The Delete VirtualNetworkGateway operation deletes the specified virtual
        network Gateway through Network resource provider.
      operationId: VirtualNetworkGateways_Delete
      parameters:
        - description: The name of the resource group.
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: The name of the virtual network gateway.
          in: path
          name: virtualNetworkGatewayName
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/ApiVersionParameter"
        - $ref: "#/components/parameters/SubscriptionIdParameter"
      responses:
        "200":
          description: ""
        "202":
          description: ""
        "204":
          description: ""
      tags:
        - VirtualNetworkGateways
      x-ms-long-running-operation: true
    get:
      description: The Get VirtualNetworkGateway operation retrieves information about the
        specified virtual network gateway through Network resource provider.
      operationId: VirtualNetworkGateways_Get
      parameters:
        - description: The name of the resource group.
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: The name of the virtual network gateway.
          in: path
          name: virtualNetworkGatewayName
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/ApiVersionParameter"
        - $ref: "#/components/parameters/SubscriptionIdParameter"
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/VirtualNetworkGateway"
            text/json:
              schema:
                $ref: "#/components/schemas/VirtualNetworkGateway"
      tags:
        - VirtualNetworkGateways
    put:
      description: The Put VirtualNetworkGateway operation creates/updates a virtual
        network gateway in the specified resource group through Network resource
        provider.
      operationId: VirtualNetworkGateways_CreateOrUpdate
      parameters:
        - description: The name of the resource group.
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: The name of the virtual network gateway.
          in: path
          name: virtualNetworkGatewayName
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/ApiVersionParameter"
        - $ref: "#/components/parameters/SubscriptionIdParameter"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/VirtualNetworkGateway"
          text/json:
            schema:
              $ref: "#/components/schemas/VirtualNetworkGateway"
        description: Parameters supplied to the Begin Create or update Virtual Network
          Gateway operation through Network resource provider.
        required: true
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/VirtualNetworkGateway"
            text/json:
              schema:
                $ref: "#/components/schemas/VirtualNetworkGateway"
        "201":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/VirtualNetworkGateway"
            text/json:
              schema:
                $ref: "#/components/schemas/VirtualNetworkGateway"
      tags:
        - VirtualNetworkGateways
      x-ms-long-running-operation: true
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}/generatevpnclientpackage":
    post:
      description: The Generatevpnclientpackage operation generates Vpn client package for
        P2S client of the virtual network gateway in the specified resource
        group through Network resource provider.
      operationId: VirtualNetworkGateways_Generatevpnclientpackage
      parameters:
        - description: The name of the resource group.
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: The name of the virtual network gateway.
          in: path
          name: virtualNetworkGatewayName
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/ApiVersionParameter"
        - $ref: "#/components/parameters/SubscriptionIdParameter"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/VpnClientParameters"
          text/json:
            schema:
              $ref: "#/components/schemas/VpnClientParameters"
        description: Parameters supplied to the Begin Generating  Virtual Network Gateway
          Vpn client package operation through Network resource provider.
        required: true
      responses:
        "202":
          description: Vpn client package url
          content:
            application/json:
              schema:
                type: string
            text/json:
              schema:
                type: string
      tags:
        - VirtualNetworkGateways
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}/reset":
    post:
      description: The Reset VirtualNetworkGateway operation resets the primary of the
        virtual network gateway in the specified resource group through Network
        resource provider.
      operationId: VirtualNetworkGateways_Reset
      parameters:
        - description: The name of the resource group.
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: The name of the virtual network gateway.
          in: path
          name: virtualNetworkGatewayName
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/ApiVersionParameter"
        - $ref: "#/components/parameters/SubscriptionIdParameter"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/VirtualNetworkGateway"
          text/json:
            schema:
              $ref: "#/components/schemas/VirtualNetworkGateway"
        description: Parameters supplied to the Begin Reset Virtual Network Gateway
          operation through Network resource provider.
        required: true
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/VirtualNetworkGateway"
            text/json:
              schema:
                $ref: "#/components/schemas/VirtualNetworkGateway"
        "202":
          description: ""
      tags:
        - VirtualNetworkGateways
      x-ms-long-running-operation: true
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks":
    get:
      description: The list VirtualNetwork returns all Virtual Networks in a resource group
      operationId: VirtualNetworks_List
      parameters:
        - description: The name of the resource group.
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/ApiVersionParameter"
        - $ref: "#/components/parameters/SubscriptionIdParameter"
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/VirtualNetworkListResult"
            text/json:
              schema:
                $ref: "#/components/schemas/VirtualNetworkListResult"
      tags:
        - VirtualNetworks
      x-ms-pageable:
        nextLinkName: nextLink
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}":
    delete:
      description: The Delete VirtualNetwork operation deletes the specified virtual network
      operationId: VirtualNetworks_Delete
      parameters:
        - description: The name of the resource group.
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: The name of the virtual network.
          in: path
          name: virtualNetworkName
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/ApiVersionParameter"
        - $ref: "#/components/parameters/SubscriptionIdParameter"
      responses:
        "200":
          description: ""
        "202":
          description: ""
        "204":
          description: ""
      tags:
        - VirtualNetworks
      x-ms-long-running-operation: true
    get:
      description: The Get VirtualNetwork operation retrieves information about the
        specified virtual network.
      operationId: VirtualNetworks_Get
      parameters:
        - description: The name of the resource group.
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: The name of the virtual network.
          in: path
          name: virtualNetworkName
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/ApiVersionParameter"
        - $ref: "#/components/parameters/SubscriptionIdParameter"
        - description: expand references resources.
          in: query
          name: $expand
          required: false
          schema:
            type: string
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/VirtualNetwork"
            text/json:
              schema:
                $ref: "#/components/schemas/VirtualNetwork"
      tags:
        - VirtualNetworks
    put:
      description: The Put VirtualNetwork operation creates/updates a virtual network in
        the specified resource group.
      operationId: VirtualNetworks_CreateOrUpdate
      parameters:
        - description: The name of the resource group.
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: The name of the virtual network.
          in: path
          name: virtualNetworkName
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/ApiVersionParameter"
        - $ref: "#/components/parameters/SubscriptionIdParameter"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/VirtualNetwork"
          text/json:
            schema:
              $ref: "#/components/schemas/VirtualNetwork"
        description: Parameters supplied to the create/update Virtual Network operation
        required: true
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/VirtualNetwork"
            text/json:
              schema:
                $ref: "#/components/schemas/VirtualNetwork"
        "201":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/VirtualNetwork"
            text/json:
              schema:
                $ref: "#/components/schemas/VirtualNetwork"
      tags:
        - VirtualNetworks
      x-ms-long-running-operation: true
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}/subnets":
    get:
      description: The List subnets operation retrieves all the subnets in a virtual
        network.
      operationId: Subnets_List
      parameters:
        - description: The name of the resource group.
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: The name of the virtual network.
          in: path
          name: virtualNetworkName
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/ApiVersionParameter"
        - $ref: "#/components/parameters/SubscriptionIdParameter"
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SubnetListResult"
            text/json:
              schema:
                $ref: "#/components/schemas/SubnetListResult"
      tags:
        - Subnets
      x-ms-pageable:
        nextLinkName: nextLink
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}/subnets/{subnetName}":
    delete:
      description: The delete subnet operation deletes the specified subnet.
      operationId: Subnets_Delete
      parameters:
        - description: The name of the resource group.
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: The name of the virtual network.
          in: path
          name: virtualNetworkName
          required: true
          schema:
            type: string
        - description: The name of the subnet.
          in: path
          name: subnetName
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/ApiVersionParameter"
        - $ref: "#/components/parameters/SubscriptionIdParameter"
      responses:
        "200":
          description: ""
        "202":
          description: ""
        "204":
          description: ""
      tags:
        - Subnets
      x-ms-long-running-operation: true
    get:
      description: The Get subnet operation retrieves information about the specified
        subnet.
      operationId: Subnets_Get
      parameters:
        - description: The name of the resource group.
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: The name of the virtual network.
          in: path
          name: virtualNetworkName
          required: true
          schema:
            type: string
        - description: The name of the subnet.
          in: path
          name: subnetName
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/ApiVersionParameter"
        - $ref: "#/components/parameters/SubscriptionIdParameter"
        - description: expand references resources.
          in: query
          name: $expand
          required: false
          schema:
            type: string
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Subnet"
            text/json:
              schema:
                $ref: "#/components/schemas/Subnet"
      tags:
        - Subnets
    put:
      description: The Put Subnet operation creates/updates a subnet in the specified
        virtual network
      operationId: Subnets_CreateOrUpdate
      parameters:
        - description: The name of the resource group.
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: The name of the virtual network.
          in: path
          name: virtualNetworkName
          required: true
          schema:
            type: string
        - description: The name of the subnet.
          in: path
          name: subnetName
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/ApiVersionParameter"
        - $ref: "#/components/parameters/SubscriptionIdParameter"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Subnet"
          text/json:
            schema:
              $ref: "#/components/schemas/Subnet"
        description: Parameters supplied to the create/update Subnet operation
        required: true
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Subnet"
            text/json:
              schema:
                $ref: "#/components/schemas/Subnet"
        "201":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Subnet"
            text/json:
              schema:
                $ref: "#/components/schemas/Subnet"
      tags:
        - Subnets
      x-ms-long-running-operation: true
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.Compute/virtualMachineScaleSets/{virtualMachineScaleSetName}/networkInterfaces":
    get:
      description: The list network interface operation retrieves information about all
        network interfaces in a virtual machine scale set.
      operationId: NetworkInterfaces_ListVirtualMachineScaleSetNetworkInterfaces
      parameters:
        - description: The name of the resource group.
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: The name of the virtual machine scale set.
          in: path
          name: virtualMachineScaleSetName
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/ApiVersionParameter"
        - $ref: "#/components/parameters/SubscriptionIdParameter"
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NetworkInterfaceListResult"
            text/json:
              schema:
                $ref: "#/components/schemas/NetworkInterfaceListResult"
      tags:
        - NetworkInterfaces
      x-ms-pageable:
        nextLinkName: nextLink
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.Compute/virtualMachineScaleSets/{virtualMachineScaleSetName}/virtualMachines/{virtualmachineIndex}/networkInterfaces":
    get:
      description: The list network interface operation retrieves information about all
        network interfaces in a virtual machine from a virtual machine scale
        set.
      operationId: NetworkInterfaces_ListVirtualMachineScaleSetVMNetworkInterfaces
      parameters:
        - description: The name of the resource group.
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: The name of the virtual machine scale set.
          in: path
          name: virtualMachineScaleSetName
          required: true
          schema:
            type: string
        - description: The virtual machine index.
          in: path
          name: virtualmachineIndex
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/ApiVersionParameter"
        - $ref: "#/components/parameters/SubscriptionIdParameter"
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NetworkInterfaceListResult"
            text/json:
              schema:
                $ref: "#/components/schemas/NetworkInterfaceListResult"
      tags:
        - NetworkInterfaces
      x-ms-pageable:
        nextLinkName: nextLink
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.Compute/virtualMachineScaleSets/{virtualMachineScaleSetName}/virtualMachines/{virtualmachineIndex}/networkInterfaces/{networkInterfaceName}":
    get:
      description: The Get network interface operation retrieves information about the
        specified network interface in a virtual machine scale set.
      operationId: NetworkInterfaces_GetVirtualMachineScaleSetNetworkInterface
      parameters:
        - description: The name of the resource group.
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: The name of the virtual machine scale set.
          in: path
          name: virtualMachineScaleSetName
          required: true
          schema:
            type: string
        - description: The virtual machine index.
          in: path
          name: virtualmachineIndex
          required: true
          schema:
            type: string
        - description: The name of the network interface.
          in: path
          name: networkInterfaceName
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/ApiVersionParameter"
        - $ref: "#/components/parameters/SubscriptionIdParameter"
        - description: expand references resources.
          in: query
          name: $expand
          required: false
          schema:
            type: string
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NetworkInterface"
            text/json:
              schema:
                $ref: "#/components/schemas/NetworkInterface"
      tags:
        - NetworkInterfaces
servers:
  - url: https://management.azure.com
components:
  parameters:
    ApiVersionParameter:
      description: Client Api Version.
      in: query
      name: api-version
      required: true
      schema:
        type: string
    SubscriptionIdParameter:
      description: Gets subscription credentials which uniquely identify Microsoft Azure
        subscription. The subscription ID forms part of the URI for every
        service call.
      in: path
      name: subscriptionId
      required: true
      schema:
        type: string
  securitySchemes:
    azure_auth:
      description: Azure Active Directory OAuth2 Flow
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
          scopes:
            user_impersonation: impersonate your user account
  schemas:
    AddressSpace:
      description: AddressSpace contains an array of IP address ranges that can be used by
        subnets
      properties:
        addressPrefixes:
          description: Gets or sets List of address blocks reserved for this virtual
            network in CIDR notation
          items:
            type: string
          type: array
    ApplicationGateway:
      allOf:
        - $ref: "#/components/schemas/Resource"
      description: ApplicationGateways resource
      properties:
        etag:
          description: Gets a unique read-only string that changes whenever the resource is
            updated
          type: string
        properties:
          $ref: "#/components/schemas/ApplicationGatewayPropertiesFormat"
    ApplicationGatewayBackendAddress:
      description: Backend Address of application gateway
      properties:
        fqdn:
          description: Gets or sets the dns name
          type: string
        ipAddress:
          description: Gets or sets the ip address
          type: string
    ApplicationGatewayBackendAddressPool:
      allOf:
        - $ref: "#/components/schemas/SubResource"
      description: Backend Address Pool of application gateway
      properties:
        etag:
          description: A unique read-only string that changes whenever the resource is
            updated
          type: string
        name:
          description: Gets name of the resource that is unique within a resource group.
            This name can be used to access the resource
          type: string
        properties:
          $ref: "#/components/schemas/ApplicationGatewayBackendAddressPoolPropertie\
            sFormat"
    ApplicationGatewayBackendAddressPoolPropertiesFormat:
      description: Properties of Backend Address Pool of application gateway
      properties:
        backendAddresses:
          description: Gets or sets the backend addresses
          items:
            $ref: "#/components/schemas/ApplicationGatewayBackendAddress"
          type: array
        backendIPConfigurations:
          description: Gets collection of references to IPs defined in NICs
          items:
            $ref: "#/components/schemas/NetworkInterfaceIPConfiguration"
          type: array
        provisioningState:
          description: Gets or sets Provisioning state of the backend address pool resource
            Updating/Deleting/Failed
          type: string
    ApplicationGatewayBackendHttpSettings:
      allOf:
        - $ref: "#/components/schemas/SubResource"
      description: Backend address pool settings of application gateway
      properties:
        etag:
          description: A unique read-only string that changes whenever the resource is
            updated
          type: string
        name:
          description: Gets name of the resource that is unique within a resource group.
            This name can be used to access the resource
          type: string
        properties:
          $ref: "#/components/schemas/ApplicationGatewayBackendHttpSettingsProperti\
            esFormat"
    ApplicationGatewayBackendHttpSettingsPropertiesFormat:
      description: Properties of Backend address pool settings of application gateway
      properties:
        cookieBasedAffinity:
          description: Gets or sets the cookie affinity
          enum:
            - Enabled
            - Disabled
          type: string
          x-ms-enum:
            modelAsString: true
            name: ApplicationGatewayCookieBasedAffinity
        port:
          description: Gets or sets the port
          format: int32
          type: integer
        probe:
          $ref: "#/components/schemas/SubResource"
        protocol:
          description: Gets or sets the protocol
          enum:
            - Http
            - Https
          type: string
          x-ms-enum:
            modelAsString: true
            name: ApplicationGatewayProtocol
        provisioningState:
          description: Gets or sets Provisioning state of the backend http settings
            resource Updating/Deleting/Failed
          type: string
        requestTimeout:
          description: Gets or sets request timeout
          format: int32
          type: integer
    ApplicationGatewayFrontendIPConfiguration:
      allOf:
        - $ref: "#/components/schemas/SubResource"
      description: Frontend IP configuration of application gateway
      properties:
        etag:
          description: A unique read-only string that changes whenever the resource is
            updated
          type: string
        name:
          description: Gets name of the resource that is unique within a resource group.
            This name can be used to access the resource
          type: string
        properties:
          $ref: "#/components/schemas/ApplicationGatewayFrontendIPConfigurationProp\
            ertiesFormat"
    ApplicationGatewayFrontendIPConfigurationPropertiesFormat:
      description: Properties of Frontend IP configuration of application gateway
      properties:
        privateIPAddress:
          description: Gets or sets the privateIPAddress of the Network Interface IP
            Configuration
          type: string
        privateIPAllocationMethod:
          description: Gets or sets PrivateIP allocation method (Static/Dynamic)
          enum:
            - Static
            - Dynamic
          type: string
          x-ms-enum:
            modelAsString: true
            name: IPAllocationMethod
        provisioningState:
          description: Gets or sets Provisioning state of the PublicIP resource
            Updating/Deleting/Failed
          type: string
        publicIPAddress:
          $ref: "#/components/schemas/SubResource"
        subnet:
          $ref: "#/components/schemas/SubResource"
    ApplicationGatewayFrontendPort:
      allOf:
        - $ref: "#/components/schemas/SubResource"
      description: Frontend Port of application gateway
      properties:
        etag:
          description: A unique read-only string that changes whenever the resource is
            updated
          type: string
        name:
          description: Gets name of the resource that is unique within a resource group.
            This name can be used to access the resource
          type: string
        properties:
          $ref: "#/components/schemas/ApplicationGatewayFrontendPortPropertiesFormat"
    ApplicationGatewayFrontendPortPropertiesFormat:
      description: Properties of Frontend Port of application gateway
      properties:
        port:
          description: Gets or sets the frontend port
          format: int32
          type: integer
        provisioningState:
          description: Gets or sets Provisioning state of the frontend port resource
            Updating/Deleting/Failed
          type: string
    ApplicationGatewayHttpListener:
      allOf:
        - $ref: "#/components/schemas/SubResource"
      description: Http listener of application gateway
      properties:
        etag:
          description: A unique read-only string that changes whenever the resource is
            updated
          type: string
        name:
          description: Gets name of the resource that is unique within a resource group.
            This name can be used to access the resource
          type: string
        properties:
          $ref: "#/components/schemas/ApplicationGatewayHttpListenerPropertiesFormat"
    ApplicationGatewayHttpListenerPropertiesFormat:
      description: Properties of Http listener of application gateway
      properties:
        frontendIPConfiguration:
          $ref: "#/components/schemas/SubResource"
        frontendPort:
          $ref: "#/components/schemas/SubResource"
        hostName:
          description: "Gets or sets the host name of http listener "
          type: string
        protocol:
          description: Gets or sets the protocol
          enum:
            - Http
            - Https
          type: string
          x-ms-enum:
            modelAsString: true
            name: ApplicationGatewayProtocol
        provisioningState:
          description: Gets or sets Provisioning state of the http listener resource
            Updating/Deleting/Failed
          type: string
        requireServerNameIndication:
          description: "Gets or sets the requireServerNameIndication of http listener "
          type: boolean
        sslCertificate:
          $ref: "#/components/schemas/SubResource"
    ApplicationGatewayIPConfiguration:
      allOf:
        - $ref: "#/components/schemas/SubResource"
      description: IP configuration of application gateway
      properties:
        etag:
          description: A unique read-only string that changes whenever the resource is
            updated
          type: string
        name:
          description: Gets name of the resource that is unique within a resource group.
            This name can be used to access the resource
          type: string
        properties:
          $ref: "#/components/schemas/ApplicationGatewayIPConfigurationPropertiesFo\
            rmat"
    ApplicationGatewayIPConfigurationPropertiesFormat:
      description: Properties of IP configuration of application gateway
      properties:
        provisioningState:
          description: Gets or sets Provisioning state of the application gateway subnet
            resource Updating/Deleting/Failed
          type: string
        subnet:
          $ref: "#/components/schemas/SubResource"
    ApplicationGatewayListResult:
      description: Response for ListLoadBalancers Api service call
      properties:
        nextLink:
          description: Gets the URL to get the next set of results.
          type: string
        value:
          description: Gets a list of ApplicationGateways in a resource group
          items:
            $ref: "#/components/schemas/ApplicationGateway"
          type: array
    ApplicationGatewayPathRule:
      allOf:
        - $ref: "#/components/schemas/SubResource"
      description: Path rule of URL path map of application gateway
      properties:
        etag:
          description: A unique read-only string that changes whenever the resource is
            updated
          type: string
        name:
          description: Gets name of the resource that is unique within a resource group.
            This name can be used to access the resource
          type: string
        properties:
          $ref: "#/components/schemas/ApplicationGatewayPathRulePropertiesFormat"
    ApplicationGatewayPathRulePropertiesFormat:
      description: Properties of probe of application gateway
      properties:
        backendAddressPool:
          $ref: "#/components/schemas/SubResource"
        backendHttpSettings:
          $ref: "#/components/schemas/SubResource"
        paths:
          description: Gets or sets the path rules of URL path map
          items:
            type: string
          type: array
        provisioningState:
          description: Gets or sets path rule of URL path map resource
            Updating/Deleting/Failed
          type: string
    ApplicationGatewayProbe:
      allOf:
        - $ref: "#/components/schemas/SubResource"
      description: Probe of application gateway
      properties:
        etag:
          description: A unique read-only string that changes whenever the resource is
            updated
          type: string
        name:
          description: Gets name of the resource that is unique within a resource group.
            This name can be used to access the resource
          type: string
        properties:
          $ref: "#/components/schemas/ApplicationGatewayProbePropertiesFormat"
    ApplicationGatewayProbePropertiesFormat:
      description: Properties of probe of application gateway
      properties:
        host:
          description: "Gets or sets the host to send probe to "
          type: string
        interval:
          description: "Gets or sets probing interval in seconds "
          format: int32
          type: integer
        path:
          description: "Gets or sets the relative path of probe "
          type: string
        protocol:
          description: Gets or sets the protocol
          enum:
            - Http
            - Https
          type: string
          x-ms-enum:
            modelAsString: true
            name: ApplicationGatewayProtocol
        provisioningState:
          description: Gets or sets Provisioning state of the backend http settings
            resource Updating/Deleting/Failed
          type: string
        timeout:
          description: "Gets or sets probing timeout in seconds "
          format: int32
          type: integer
        unhealthyThreshold:
          description: "Gets or sets probing unhealthy threshold "
          format: int32
          type: integer
    ApplicationGatewayPropertiesFormat:
      description: Properties of Application Gateway
      properties:
        backendAddressPools:
          description: Gets or sets backend address pool of application gateway resource
          items:
            $ref: "#/components/schemas/ApplicationGatewayBackendAddressPool"
          type: array
        backendHttpSettingsCollection:
          description: Gets or sets backend http settings of application gateway resource
          items:
            $ref: "#/components/schemas/ApplicationGatewayBackendHttpSettings"
          type: array
        frontendIPConfigurations:
          description: Gets or sets frontend IP addresses of application gateway resource
          items:
            $ref: "#/components/schemas/ApplicationGatewayFrontendIPConfiguration"
          type: array
        frontendPorts:
          description: Gets or sets frontend ports of application gateway resource
          items:
            $ref: "#/components/schemas/ApplicationGatewayFrontendPort"
          type: array
        gatewayIPConfigurations:
          description: Gets or sets subnets of application gateway resource
          items:
            $ref: "#/components/schemas/ApplicationGatewayIPConfiguration"
          type: array
        httpListeners:
          description: Gets or sets HTTP listeners of application gateway resource
          items:
            $ref: "#/components/schemas/ApplicationGatewayHttpListener"
          type: array
        operationalState:
          description: Gets operational state of application gateway resource
          enum:
            - Stopped
            - Starting
            - Running
            - Stopping
          readOnly: true
          type: string
          x-ms-enum:
            modelAsString: true
            name: ApplicationGatewayOperationalState
        probes:
          description: Gets or sets probes of application gateway resource
          items:
            $ref: "#/components/schemas/ApplicationGatewayProbe"
          type: array
        provisioningState:
          description: Gets or sets Provisioning state of the ApplicationGateway resource
            Updating/Deleting/Failed
          type: string
        requestRoutingRules:
          description: Gets or sets request routing rules of application gateway resource
          items:
            $ref: "#/components/schemas/ApplicationGatewayRequestRoutingRule"
          type: array
        resourceGuid:
          description: Gets or sets resource GUID property of the ApplicationGateway
            resource
          type: string
        sku:
          $ref: "#/components/schemas/ApplicationGatewaySku"
        sslCertificates:
          description: Gets or sets ssl certificates of application gateway resource
          items:
            $ref: "#/components/schemas/ApplicationGatewaySslCertificate"
          type: array
        urlPathMaps:
          description: Gets or sets URL path map of application gateway resource
          items:
            $ref: "#/components/schemas/ApplicationGatewayUrlPathMap"
          type: array
    ApplicationGatewayRequestRoutingRule:
      allOf:
        - $ref: "#/components/schemas/SubResource"
      description: Request routing rule of application gateway
      properties:
        etag:
          description: A unique read-only string that changes whenever the resource is
            updated
          type: string
        name:
          description: Gets name of the resource that is unique within a resource group.
            This name can be used to access the resource
          type: string
        properties:
          $ref: "#/components/schemas/ApplicationGatewayRequestRoutingRulePropertie\
            sFormat"
    ApplicationGatewayRequestRoutingRulePropertiesFormat:
      description: Properties of Request routing rule of application gateway
      properties:
        backendAddressPool:
          $ref: "#/components/schemas/SubResource"
        backendHttpSettings:
          $ref: "#/components/schemas/SubResource"
        httpListener:
          $ref: "#/components/schemas/SubResource"
        provisioningState:
          description: Gets or sets Provisioning state of the request routing rule resource
            Updating/Deleting/Failed
          type: string
        ruleType:
          description: Gets or sets the rule type
          enum:
            - Basic
            - PathBasedRouting
          type: string
          x-ms-enum:
            modelAsString: true
            name: ApplicationGatewayRequestRoutingRuleType
        urlPathMap:
          $ref: "#/components/schemas/SubResource"
    ApplicationGatewaySku:
      description: SKU of application gateway
      properties:
        capacity:
          description: Gets or sets capacity (instance count) of application gateway
          format: int32
          type: integer
        name:
          description: Gets or sets name of application gateway SKU
          enum:
            - Standard_Small
            - Standard_Medium
            - Standard_Large
          type: string
          x-ms-enum:
            modelAsString: true
            name: ApplicationGatewaySkuName
        tier:
          description: Gets or sets tier of application gateway
          enum:
            - Standard
          type: string
          x-ms-enum:
            modelAsString: true
            name: ApplicationGatewayTier
    ApplicationGatewaySslCertificate:
      allOf:
        - $ref: "#/components/schemas/SubResource"
      description: SSL certificates of application gateway
      properties:
        etag:
          description: A unique read-only string that changes whenever the resource is
            updated
          type: string
        name:
          description: Gets name of the resource that is unique within a resource group.
            This name can be used to access the resource
          type: string
        properties:
          $ref: "#/components/schemas/ApplicationGatewaySslCertificatePropertiesFor\
            mat"
    ApplicationGatewaySslCertificatePropertiesFormat:
      description: Properties of SSL certificates of application gateway
      properties:
        data:
          description: "Gets or sets the certificate data "
          type: string
        password:
          description: "Gets or sets the certificate password "
          type: string
        provisioningState:
          description: Gets or sets Provisioning state of the ssl certificate resource
            Updating/Deleting/Failed
          type: string
        publicCertData:
          description: "Gets or sets the certificate public data "
          type: string
    ApplicationGatewayUrlPathMap:
      allOf:
        - $ref: "#/components/schemas/SubResource"
      description: UrlPathMap of application gateway
      properties:
        etag:
          description: A unique read-only string that changes whenever the resource is
            updated
          type: string
        name:
          description: Gets name of the resource that is unique within a resource group.
            This name can be used to access the resource
          type: string
        properties:
          $ref: "#/components/schemas/ApplicationGatewayUrlPathMapPropertiesFormat"
    ApplicationGatewayUrlPathMapPropertiesFormat:
      description: Properties of probe of application gateway
      properties:
        defaultBackendAddressPool:
          $ref: "#/components/schemas/SubResource"
        defaultBackendHttpSettings:
          $ref: "#/components/schemas/SubResource"
        pathRules:
          description: Gets or sets path rule of URL path map resource
          items:
            $ref: "#/components/schemas/ApplicationGatewayPathRule"
          type: array
        provisioningState:
          description: Gets or sets Provisioning state of the backend http settings
            resource Updating/Deleting/Failed
          type: string
    AuthorizationListResult:
      description: Response for ListAuthorizations Api service callRetrieves all
        authorizations that belongs to an ExpressRouteCircuit
      properties:
        nextLink:
          description: Gets the URL to get the next set of results.
          type: string
        value:
          description: Gets the authorizations in an ExpressRoute Circuit
          items:
            $ref: "#/components/schemas/ExpressRouteCircuitAuthorization"
          type: array
    AuthorizationPropertiesFormat:
      properties:
        authorizationKey:
          description: Gets or sets the authorization key
          type: string
        authorizationUseStatus:
          description: Gets or sets AuthorizationUseStatus
          enum:
            - Available
            - InUse
          type: string
          x-ms-enum:
            modelAsString: true
            name: AuthorizationUseStatus
        provisioningState:
          description: Gets or sets Provisioning state of the PublicIP resource
            Updating/Deleting/Failed
          type: string
    AzureAsyncOperationResult:
      description: The response body contains the status of the specified asynchronous
        operation, indicating whether it has succeeded, is in progress, or has
        failed. Note that this status is distinct from the HTTP status code
        returned for the Get Operation Status operation itself. If the
        asynchronous operation succeeded, the response body includes the HTTP
        status code for the successful request. If the asynchronous operation
        failed, the response body includes the HTTP status code for the failed
        request and error information regarding the failure.
      properties:
        error:
          $ref: "#/components/schemas/Error"
        status:
          description: Status of the AzureAsyncOperation
          enum:
            - InProgress
            - Succeeded
            - Failed
          type: string
          x-ms-enum:
            modelAsString: true
            name: NetworkOperationStatus
    BackendAddressPool:
      allOf:
        - $ref: "#/components/schemas/SubResource"
      description: Pool of backend IP addresses
      properties:
        etag:
          description: A unique read-only string that changes whenever the resource is
            updated
          type: string
        name:
          description: Gets name of the resource that is unique within a resource group.
            This name can be used to access the resource
          type: string
        properties:
          $ref: "#/components/schemas/BackendAddressPoolPropertiesFormat"
    BackendAddressPoolPropertiesFormat:
      description: Properties of BackendAddressPool
      properties:
        backendIPConfigurations:
          description: Gets collection of references to IPs defined in NICs
          items:
            $ref: "#/components/schemas/NetworkInterfaceIPConfiguration"
          type: array
        loadBalancingRules:
          description: Gets Load Balancing rules that use this Backend Address Pool
          items:
            $ref: "#/components/schemas/SubResource"
          type: array
        outboundNatRule:
          $ref: "#/components/schemas/SubResource"
        provisioningState:
          description: Provisioning state of the PublicIP resource Updating/Deleting/Failed
          type: string
    BgpSettings:
      properties:
        asn:
          description: Gets or sets this BGP speaker's ASN
          format: int64
          type: integer
        bgpPeeringAddress:
          description: Gets or sets the BGP peering address and BGP identifier of this BGP
            speaker
          type: string
        peerWeight:
          description: Gets or sets the weight added to routes learned from this BGP speaker
          format: int32
          type: integer
    ConnectionResetSharedKey:
      properties:
        keyLength:
          description: The virtual network connection reset shared key length
          format: int64
          type: integer
    ConnectionSharedKey:
      description: Response for GetConnectionSharedKey Api service call
      properties:
        value:
          description: The virtual network connection shared key value
          type: string
    ConnectionSharedKeyResult:
      description: Response for CheckConnectionSharedKey Api service call
      properties:
        value:
          description: The virtual network connection shared key value
          type: string
    DhcpOptions:
      description: DHCPOptions contains an array of DNS servers available to VMs deployed
        in the virtual networkStandard DHCP option for a subnet overrides VNET
        DHCP options.
      properties:
        dnsServers:
          description: Gets or sets list of DNS servers IP addresses
          items:
            type: string
          type: array
    DnsNameAvailabilityResult:
      description: Response for CheckDnsNameAvailability Api service call
      properties:
        available:
          description: Domain availability (True/False)
          type: boolean
    Error:
      properties:
        code:
          type: string
        details:
          items:
            $ref: "#/components/schemas/ErrorDetails"
          type: array
        innerError:
          type: string
        message:
          type: string
        target:
          type: string
    ErrorDetails:
      properties:
        code:
          type: string
        message:
          type: string
        target:
          type: string
    ExpressRouteCircuit:
      allOf:
        - $ref: "#/components/schemas/Resource"
      description: ExpressRouteCircuit resource
      properties:
        etag:
          description: Gets a unique read-only string that changes whenever the resource is
            updated
          type: string
        properties:
          $ref: "#/components/schemas/ExpressRouteCircuitPropertiesFormat"
        sku:
          $ref: "#/components/schemas/ExpressRouteCircuitSku"
    ExpressRouteCircuitArpTable:
      description: The arp table associated with the ExpressRouteCircuit
      properties:
        age:
          description: Age.
          format: int32
          type: integer
        interface:
          description: Interface.
          type: string
        ipAddress:
          description: Gets ipAddress.
          type: string
        macAddress:
          description: Gets macAddress.
          type: string
    ExpressRouteCircuitAuthorization:
      allOf:
        - $ref: "#/components/schemas/SubResource"
      description: Authorization in a ExpressRouteCircuit resource
      properties:
        etag:
          description: A unique read-only string that changes whenever the resource is
            updated
          type: string
        name:
          description: Gets name of the resource that is unique within a resource group.
            This name can be used to access the resource
          type: string
        properties:
          $ref: "#/components/schemas/AuthorizationPropertiesFormat"
    ExpressRouteCircuitListResult:
      description: Response for ListExpressRouteCircuit Api service call
      properties:
        nextLink:
          description: Gets the URL to get the next set of results.
          type: string
        value:
          description: Gets a list of ExpressRouteCircuits in a resource group
          items:
            $ref: "#/components/schemas/ExpressRouteCircuit"
          type: array
    ExpressRouteCircuitPeering:
      allOf:
        - $ref: "#/components/schemas/SubResource"
      description: Peering in a ExpressRouteCircuit resource
      properties:
        etag:
          description: A unique read-only string that changes whenever the resource is
            updated
          type: string
        name:
          description: Gets name of the resource that is unique within a resource group.
            This name can be used to access the resource
          type: string
        properties:
          $ref: "#/components/schemas/ExpressRouteCircuitPeeringPropertiesFormat"
    ExpressRouteCircuitPeeringConfig:
      description: Specifies the peering config
      properties:
        advertisedPublicPrefixes:
          description: Gets or sets the reference of AdvertisedPublicPrefixes
          items:
            type: string
          type: array
        advertisedPublicPrefixesState:
          description: "Gets or sets AdvertisedPublicPrefixState of the Peering resource "
          enum:
            - NotConfigured
            - Configuring
            - Configured
            - ValidationNeeded
          type: string
          x-ms-enum:
            modelAsString: true
            name: ExpressRouteCircuitPeeringAdvertisedPublicPrefixState
        customerASN:
          description: Gets or Sets CustomerAsn of the peering.
          format: int32
          type: integer
        routingRegistryName:
          description: Gets or Sets RoutingRegistryName of the config.
          type: string
    ExpressRouteCircuitPeeringListResult:
      description: Response for ListPeering Api service callRetrieves all Peerings that
        belongs to an ExpressRouteCircuit
      properties:
        nextLink:
          description: Gets the URL to get the next set of results.
          type: string
        value:
          description: Gets the peerings in an express route circuit
          items:
            $ref: "#/components/schemas/ExpressRouteCircuitPeering"
          type: array
    ExpressRouteCircuitPeeringPropertiesFormat:
      properties:
        azureASN:
          description: Gets or sets the azure ASN
          format: int32
          type: integer
        microsoftPeeringConfig:
          $ref: "#/components/schemas/ExpressRouteCircuitPeeringConfig"
        peerASN:
          description: Gets or sets the peer ASN
          format: int32
          type: integer
        peeringType:
          description: Gets or sets PeeringType
          enum:
            - AzurePublicPeering
            - AzurePrivatePeering
            - MicrosoftPeering
          type: string
          x-ms-enum:
            modelAsString: true
            name: ExpressRouteCircuitPeeringType
        primaryAzurePort:
          description: Gets or sets the primary port
          type: string
        primaryPeerAddressPrefix:
          description: Gets or sets the primary address prefix
          type: string
        provisioningState:
          description: Gets or sets Provisioning state of the PublicIP resource
            Updating/Deleting/Failed
          type: string
        secondaryAzurePort:
          description: Gets or sets the secondary port
          type: string
        secondaryPeerAddressPrefix:
          description: Gets or sets the secondary address prefix
          type: string
        sharedKey:
          description: Gets or sets the shared key
          type: string
        state:
          description: Gets or sets state of Peering
          enum:
            - Disabled
            - Enabled
          type: string
          x-ms-enum:
            modelAsString: true
            name: ExpressRouteCircuitPeeringState
        stats:
          $ref: "#/components/schemas/ExpressRouteCircuitStats"
        vlanId:
          description: Gets or sets the vlan id
          format: int32
          type: integer
    ExpressRouteCircuitPropertiesFormat:
      description: Properties of ExpressRouteCircuit
      properties:
        allowClassicOperations:
          description: allow classic operations
          type: boolean
        authorizations:
          description: Gets or sets list of authorizations
          items:
            $ref: "#/components/schemas/ExpressRouteCircuitAuthorization"
          type: array
        circuitProvisioningState:
          description: "Gets or sets CircuitProvisioningState state of the resource "
          type: string
        peerings:
          description: Gets or sets list of peerings
          items:
            $ref: "#/components/schemas/ExpressRouteCircuitPeering"
          type: array
        provisioningState:
          description: Gets or sets Provisioning state of the PublicIP resource
            Updating/Deleting/Failed
          type: string
        serviceKey:
          description: Gets or sets ServiceKey
          type: string
        serviceProviderNotes:
          description: Gets or sets ServiceProviderNotes
          type: string
        serviceProviderProperties:
          $ref: "#/components/schemas/ExpressRouteCircuitServiceProviderProperties"
        serviceProviderProvisioningState:
          description: "Gets or sets ServiceProviderProvisioningState state of the resource
            "
          enum:
            - NotProvisioned
            - Provisioning
            - Provisioned
            - Deprovisioning
          type: string
          x-ms-enum:
            modelAsString: true
            name: ServiceProviderProvisioningState
    ExpressRouteCircuitRoutesTable:
      description: The routes table associated with the ExpressRouteCircuit
      properties:
        locPrf:
          description: locPrf.
          type: string
        network:
          description: network.
          type: string
        nextHop:
          description: nextHop
          type: string
        path:
          description: path .
          type: string
        weight:
          description: weight.
          format: int32
          type: integer
    ExpressRouteCircuitRoutesTableSummary:
      description: The routes table associated with the ExpressRouteCircuit
      properties:
        as:
          description: Autonomous system number.
          format: int32
          type: integer
        neighbor:
          description: Neighbor.
          type: string
        statePfxRcd:
          description: Current state of the BGP session, and the number of prefixes that
            have been received from a neighbor or peer group.
          type: string
        upDown:
          description: The length of time that the BGP session has been in the Established
            state, or the current status if not in the Established state.
          type: string
        v:
          description: BGP version number spoken to the neighbor.
          format: int32
          type: integer
    ExpressRouteCircuitServiceProviderProperties:
      description: Contains ServiceProviderProperties in an ExpressRouteCircuit
      properties:
        bandwidthInMbps:
          description: Gets or sets BandwidthInMbps.
          format: int32
          type: integer
        peeringLocation:
          description: Gets or sets peering location.
          type: string
        serviceProviderName:
          description: Gets or sets serviceProviderName.
          type: string
    ExpressRouteCircuitSku:
      description: Contains sku in an ExpressRouteCircuit
      properties:
        family:
          description: Gets or sets family of the sku.
          enum:
            - UnlimitedData
            - MeteredData
          type: string
          x-ms-enum:
            modelAsString: true
            name: ExpressRouteCircuitSkuFamily
        name:
          description: Gets or sets name of the sku.
          type: string
        tier:
          description: Gets or sets tier of the sku.
          enum:
            - Standard
            - Premium
          type: string
          x-ms-enum:
            modelAsString: true
            name: ExpressRouteCircuitSkuTier
    ExpressRouteCircuitStats:
      description: Contains Stats associated with the peering
      properties:
        primarybytesIn:
          description: Gets BytesIn of the peering.
          format: int64
          type: integer
        primarybytesOut:
          description: Gets BytesOut of the peering.
          format: int64
          type: integer
        secondarybytesIn:
          description: Gets BytesIn of the peering.
          format: int64
          type: integer
        secondarybytesOut:
          description: Gets BytesOut of the peering.
          format: int64
          type: integer
    ExpressRouteCircuitsArpTableListResult:
      description: Response for ListArpTable associated with the Express Route Circuits Api
      properties:
        nextLink:
          description: Gets the URL to get the next set of results.
          type: string
        value:
          description: Gets List of ArpTable
          items:
            $ref: "#/components/schemas/ExpressRouteCircuitArpTable"
          type: array
    ExpressRouteCircuitsRoutesTableListResult:
      description: Response for ListRoutesTable associated with the Express Route Circuits
        Api
      properties:
        nextLink:
          description: Gets the URL to get the next set of results.
          type: string
        value:
          description: Gets List of RoutesTable
          items:
            $ref: "#/components/schemas/ExpressRouteCircuitRoutesTable"
          type: array
    ExpressRouteCircuitsRoutesTableSummaryListResult:
      description: Response for ListRoutesTable associated with the Express Route Circuits
        Api
      properties:
        nextLink:
          description: Gets the URL to get the next set of results.
          type: string
        value:
          description: Gets List of RoutesTable
          items:
            $ref: "#/components/schemas/ExpressRouteCircuitRoutesTableSummary"
          type: array
    ExpressRouteServiceProvider:
      allOf:
        - $ref: "#/components/schemas/Resource"
      description: ExpressRouteResourceProvider object
      properties:
        properties:
          $ref: "#/components/schemas/ExpressRouteServiceProviderPropertiesFormat"
    ExpressRouteServiceProviderBandwidthsOffered:
      description: Contains Bandwidths offered in ExpressRouteServiceProviders
      properties:
        offerName:
          description: Gets the OfferName
          type: string
        valueInMbps:
          description: Gets the ValueInMbps.
          format: int32
          type: integer
    ExpressRouteServiceProviderListResult:
      description: Response for ListExpressRouteServiceProvider Api service call
      properties:
        nextLink:
          description: Gets the URL to get the next set of results.
          type: string
        value:
          description: Gets List of ExpressRouteResourceProvider
          items:
            $ref: "#/components/schemas/ExpressRouteServiceProvider"
          type: array
    ExpressRouteServiceProviderPropertiesFormat:
      description: Properties of ExpressRouteServiceProvider
      properties:
        bandwidthsOffered:
          description: Gets or bandwidths offered
          items:
            $ref: "#/components/schemas/ExpressRouteServiceProviderBandwidthsOffered"
          type: array
        peeringLocations:
          description: Gets or list of peering locations
          items:
            type: string
          type: array
        provisioningState:
          description: "Gets or sets Provisioning state of the resource "
          type: string
    FrontendIPConfiguration:
      allOf:
        - $ref: "#/components/schemas/SubResource"
      description: Frontend IP address of the load balancer
      properties:
        etag:
          description: A unique read-only string that changes whenever the resource is
            updated
          type: string
        name:
          description: Gets name of the resource that is unique within a resource group.
            This name can be used to access the resource
          type: string
        properties:
          $ref: "#/components/schemas/FrontendIPConfigurationPropertiesFormat"
    FrontendIPConfigurationPropertiesFormat:
      description: Properties of Frontend IP Configuration of the load balancer
      properties:
        inboundNatPools:
          description: Read only.Inbound pools URIs that use this frontend IP
          items:
            $ref: "#/components/schemas/SubResource"
          type: array
        inboundNatRules:
          description: Read only.Inbound rules URIs that use this frontend IP
          items:
            $ref: "#/components/schemas/SubResource"
          type: array
        loadBalancingRules:
          description: Gets Load Balancing rules URIs that use this frontend IP
          items:
            $ref: "#/components/schemas/SubResource"
          type: array
        outboundNatRules:
          description: Read only.Outbound rules URIs that use this frontend IP
          items:
            $ref: "#/components/schemas/SubResource"
          type: array
        privateIPAddress:
          description: Gets or sets the privateIPAddress of the IP Configuration
          type: string
        privateIPAllocationMethod:
          description: Gets or sets PrivateIP allocation method (Static/Dynamic)
          enum:
            - Static
            - Dynamic
          type: string
          x-ms-enum:
            modelAsString: true
            name: IPAllocationMethod
        provisioningState:
          description: Gets or sets Provisioning state of the PublicIP resource
            Updating/Deleting/Failed
          type: string
        publicIPAddress:
          $ref: "#/components/schemas/PublicIPAddress"
        subnet:
          $ref: "#/components/schemas/Subnet"
    IPConfiguration:
      allOf:
        - $ref: "#/components/schemas/SubResource"
      description: IPConfiguration
      properties:
        etag:
          description: A unique read-only string that changes whenever the resource is
            updated
          type: string
        name:
          description: Gets name of the resource that is unique within a resource group.
            This name can be used to access the resource
          type: string
        properties:
          $ref: "#/components/schemas/IPConfigurationPropertiesFormat"
    IPConfigurationPropertiesFormat:
      description: Properties of IPConfiguration
      properties:
        privateIPAddress:
          description: Gets or sets the privateIPAddress of the IP Configuration
          type: string
        privateIPAllocationMethod:
          description: Gets or sets PrivateIP allocation method (Static/Dynamic)
          enum:
            - Static
            - Dynamic
          type: string
          x-ms-enum:
            modelAsString: true
            name: IPAllocationMethod
        provisioningState:
          description: Gets or sets Provisioning state of the PublicIP resource
            Updating/Deleting/Failed
          type: string
        publicIPAddress:
          $ref: "#/components/schemas/PublicIPAddress"
        subnet:
          $ref: "#/components/schemas/Subnet"
    InboundNatPool:
      allOf:
        - $ref: "#/components/schemas/SubResource"
      description: Inbound NAT pool of the loadbalancer
      properties:
        etag:
          description: A unique read-only string that changes whenever the resource is
            updated
          type: string
        name:
          description: Gets name of the resource that is unique within a resource group.
            This name can be used to access the resource
          type: string
        properties:
          $ref: "#/components/schemas/InboundNatPoolPropertiesFormat"
    InboundNatPoolPropertiesFormat:
      description: Properties of Inbound NAT pool
      properties:
        backendPort:
          description: Gets or sets a port used for internal connections on the endpoint.
            The localPort attribute maps the eternal port of the endpoint to an
            internal port on a role. This is useful in scenarios where a role
            must communicate to an internal component on a port that is
            different from the one that is exposed externally. If not specified,
            the value of localPort is the same as the port attribute. Set the
            value of localPort to '*' to automatically assign an unallocated
            port that is discoverable using the runtime API
          format: int32
          type: integer
        frontendIPConfiguration:
          $ref: "#/components/schemas/SubResource"
        frontendPortRangeEnd:
          description: Gets or sets the ending port range for the NAT pool. You can specify
            any port number you choose, but the port numbers specified for each
            role in the service must be unique. Possible values range between 1
            and 65535, inclusive
          format: int32
          type: integer
        frontendPortRangeStart:
          description: Gets or sets the starting port range for the NAT pool. You can
            specify any port number you choose, but the port numbers specified
            for each role in the service must be unique. Possible values range
            between 1 and 65535, inclusive
          format: int32
          type: integer
        protocol:
          description: Gets or sets the transport protocol for the external endpoint.
            Possible values are Udp or Tcp
          enum:
            - Udp
            - Tcp
          type: string
          x-ms-enum:
            modelAsString: true
            name: TransportProtocol
        provisioningState:
          description: Gets or sets Provisioning state of the PublicIP resource
            Updating/Deleting/Failed
          type: string
      required:
        - protocol
        - frontendPortRangeStart
        - frontendPortRangeEnd
        - backendPort
    InboundNatRule:
      allOf:
        - $ref: "#/components/schemas/SubResource"
      description: Inbound NAT rule of the loadbalancer
      properties:
        etag:
          description: A unique read-only string that changes whenever the resource is
            updated
          type: string
        name:
          description: Gets name of the resource that is unique within a resource group.
            This name can be used to access the resource
          type: string
        properties:
          $ref: "#/components/schemas/InboundNatRulePropertiesFormat"
    InboundNatRulePropertiesFormat:
      description: Properties of Inbound NAT rule
      properties:
        backendIPConfiguration:
          $ref: "#/components/schemas/NetworkInterfaceIPConfiguration"
        backendPort:
          description: Gets or sets a port used for internal connections on the endpoint.
            The localPort attribute maps the eternal port of the endpoint to an
            internal port on a role. This is useful in scenarios where a role
            must communicate to an internal component on a port that is
            different from the one that is exposed externally. If not specified,
            the value of localPort is the same as the port attribute. Set the
            value of localPort to '*' to automatically assign an unallocated
            port that is discoverable using the runtime API
          format: int32
          type: integer
        enableFloatingIP:
          description: Configures a virtual machine's endpoint for the floating IP
            capability required to configure a SQL AlwaysOn availability Group.
            This setting is required when using the SQL Always ON availability
            Groups in SQL server. This setting can't be changed after you create
            the endpoint
          type: boolean
        frontendIPConfiguration:
          $ref: "#/components/schemas/SubResource"
        frontendPort:
          description: Gets or sets the port for the external endpoint. You can specify any
            port number you choose, but the port numbers specified for each role
            in the service must be unique. Possible values range between 1 and
            65535, inclusive
          format: int32
          type: integer
        idleTimeoutInMinutes:
          description: Gets or sets the timeout for the Tcp idle connection. The value can
            be set between 4 and 30 minutes. The default value is 4 minutes.
            This element is only used when the protocol is set to Tcp
          format: int32
          type: integer
        protocol:
          description: Gets or sets the transport protocol for the external endpoint.
            Possible values are Udp or Tcp
          enum:
            - Udp
            - Tcp
          type: string
          x-ms-enum:
            modelAsString: true
            name: TransportProtocol
        provisioningState:
          description: Gets or sets Provisioning state of the PublicIP resource
            Updating/Deleting/Failed
          type: string
    LoadBalancer:
      allOf:
        - $ref: "#/components/schemas/Resource"
      description: LoadBalancer resource
      properties:
        etag:
          description: Gets a unique read-only string that changes whenever the resource is
            updated
          type: string
        properties:
          $ref: "#/components/schemas/LoadBalancerPropertiesFormat"
    LoadBalancerListResult:
      description: Response for ListLoadBalancers Api service call
      properties:
        nextLink:
          description: Gets the URL to get the next set of results.
          type: string
        value:
          description: Gets a list of LoadBalancers in a resource group
          items:
            $ref: "#/components/schemas/LoadBalancer"
          type: array
    LoadBalancerPropertiesFormat:
      description: Properties of Load Balancer
      properties:
        backendAddressPools:
          description: Gets or sets Pools of backend IP addresses
          items:
            $ref: "#/components/schemas/BackendAddressPool"
          type: array
        frontendIPConfigurations:
          description: Gets or sets frontend IP addresses of the load balancer
          items:
            $ref: "#/components/schemas/FrontendIPConfiguration"
          type: array
        inboundNatPools:
          description: Gets or sets inbound NAT pools
          items:
            $ref: "#/components/schemas/InboundNatPool"
          type: array
        inboundNatRules:
          description: Gets or sets list of inbound rules
          items:
            $ref: "#/components/schemas/InboundNatRule"
          type: array
        loadBalancingRules:
          description: Gets or sets load balancing rules
          items:
            $ref: "#/components/schemas/LoadBalancingRule"
          type: array
        outboundNatRules:
          description: Gets or sets outbound NAT rules
          items:
            $ref: "#/components/schemas/OutboundNatRule"
          type: array
        probes:
          description: Gets or sets list of Load balancer probes
          items:
            $ref: "#/components/schemas/Probe"
          type: array
        provisioningState:
          description: Gets or sets Provisioning state of the PublicIP resource
            Updating/Deleting/Failed
          type: string
        resourceGuid:
          description: Gets or sets resource GUID property of the Load balancer resource
          type: string
    LoadBalancingRule:
      allOf:
        - $ref: "#/components/schemas/SubResource"
      description: Rules of the load balancer
      properties:
        etag:
          description: A unique read-only string that changes whenever the resource is
            updated
          type: string
        name:
          description: Gets name of the resource that is unique within a resource group.
            This name can be used to access the resource
          type: string
        properties:
          $ref: "#/components/schemas/LoadBalancingRulePropertiesFormat"
    LoadBalancingRulePropertiesFormat:
      description: Properties of the load balancer
      properties:
        backendAddressPool:
          $ref: "#/components/schemas/SubResource"
        backendPort:
          description: Gets or sets a port used for internal connections on the endpoint.
            The localPort attribute maps the eternal port of the endpoint to an
            internal port on a role. This is useful in scenarios where a role
            must communicate to an internal component on a port that is
            different from the one that is exposed externally. If not specified,
            the value of localPort is the same as the port attribute. Set the
            value of localPort to '*' to automatically assign an unallocated
            port that is discoverable using the runtime API
          format: int32
          type: integer
        enableFloatingIP:
          description: Configures a virtual machine's endpoint for the floating IP
            capability required to configure a SQL AlwaysOn availability Group.
            This setting is required when using the SQL Always ON availability
            Groups in SQL server. This setting can't be changed after you create
            the endpoint
          type: boolean
        frontendIPConfiguration:
          $ref: "#/components/schemas/SubResource"
        frontendPort:
          description: Gets or sets the port for the external endpoint. You can specify any
            port number you choose, but the port numbers specified for each role
            in the service must be unique. Possible values range between 1 and
            65535, inclusive
          format: int32
          type: integer
        idleTimeoutInMinutes:
          description: Gets or sets the timeout for the Tcp idle connection. The value can
            be set between 4 and 30 minutes. The default value is 4 minutes.
            This element is only used when the protocol is set to Tcp
          format: int32
          type: integer
        loadDistribution:
          description: Gets or sets the load distribution policy for this rule
          enum:
            - Default
            - SourceIP
            - SourceIPProtocol
          type: string
          x-ms-enum:
            modelAsString: true
            name: LoadDistribution
        probe:
          $ref: "#/components/schemas/SubResource"
        protocol:
          description: Gets or sets the transport protocol for the external endpoint.
            Possible values are Udp or Tcp
          enum:
            - Udp
            - Tcp
          type: string
          x-ms-enum:
            modelAsString: true
            name: TransportProtocol
        provisioningState:
          description: Gets or sets Provisioning state of the PublicIP resource
            Updating/Deleting/Failed
          type: string
      required:
        - protocol
        - frontendPort
    LocalNetworkGateway:
      allOf:
        - $ref: "#/components/schemas/Resource"
      description: A common class for general resource information
      properties:
        etag:
          description: Gets a unique read-only string that changes whenever the resource is
            updated
          type: string
        properties:
          $ref: "#/components/schemas/LocalNetworkGatewayPropertiesFormat"
    LocalNetworkGatewayListResult:
      description: Response for ListLocalNetworkGateways Api service call
      properties:
        nextLink:
          description: Gets the URL to get the next set of results.
          type: string
        value:
          description: Gets List of LocalNetworkGateways that exists in a resource group
          items:
            $ref: "#/components/schemas/LocalNetworkGateway"
          type: array
    LocalNetworkGatewayPropertiesFormat:
      description: LocalNetworkGateway properties
      properties:
        bgpSettings:
          $ref: "#/components/schemas/BgpSettings"
        gatewayIpAddress:
          description: IP address of local network gateway.
          type: string
        localNetworkAddressSpace:
          $ref: "#/components/schemas/AddressSpace"
        provisioningState:
          description: Gets or sets Provisioning state of the LocalNetworkGateway resource
            Updating/Deleting/Failed
          type: string
        resourceGuid:
          description: Gets or sets resource GUID property of the LocalNetworkGateway
            resource
          type: string
    NetworkInterface:
      allOf:
        - $ref: "#/components/schemas/Resource"
      description: A NetworkInterface in a resource group
      properties:
        etag:
          description: Gets a unique read-only string that changes whenever the resource is
            updated
          type: string
        properties:
          $ref: "#/components/schemas/NetworkInterfacePropertiesFormat"
    NetworkInterfaceDnsSettings:
      description: Dns Settings of a network interface
      properties:
        appliedDnsServers:
          description: Gets or sets list of Applied DNS servers IP addresses
          items:
            type: string
          type: array
        dnsServers:
          description: Gets or sets list of DNS servers IP addresses
          items:
            type: string
          type: array
        internalDnsNameLabel:
          description: Gets or sets the Internal DNS name
          type: string
        internalDomainNameSuffix:
          description: Gets or sets internal domain name suffix of the NIC.
          type: string
        internalFqdn:
          description: Gets or sets the internal FQDN.
          type: string
    NetworkInterfaceIPConfiguration:
      allOf:
        - $ref: "#/components/schemas/SubResource"
      description: IPConfiguration in a NetworkInterface
      properties:
        etag:
          description: A unique read-only string that changes whenever the resource is
            updated
          type: string
        name:
          description: Gets name of the resource that is unique within a resource group.
            This name can be used to access the resource
          type: string
        properties:
          $ref: "#/components/schemas/NetworkInterfaceIPConfigurationPropertiesForm\
            at"
    NetworkInterfaceIPConfigurationPropertiesFormat:
      description: Properties of IPConfiguration
      properties:
        applicationGatewayBackendAddressPools:
          description: Gets or sets the reference of ApplicationGatewayBackendAddressPool
            resource
          items:
            $ref: "#/components/schemas/ApplicationGatewayBackendAddressPool"
          type: array
        loadBalancerBackendAddressPools:
          description: Gets or sets the reference of LoadBalancerBackendAddressPool resource
          items:
            $ref: "#/components/schemas/BackendAddressPool"
          type: array
        loadBalancerInboundNatRules:
          description: Gets or sets list of references of LoadBalancerInboundNatRules
          items:
            $ref: "#/components/schemas/InboundNatRule"
          type: array
        primary:
          description: Gets whether this is a primary customer address on the NIC
          type: boolean
        privateIPAddress:
          type: string
        privateIPAddressVersion:
          description: Gets or sets PrivateIP address version (IPv4/IPv6)
          enum:
            - IPv4
            - IPv6
          type: string
          x-ms-enum:
            modelAsString: true
            name: IPVersion
        privateIPAllocationMethod:
          description: Gets or sets PrivateIP allocation method (Static/Dynamic)
          enum:
            - Static
            - Dynamic
          type: string
          x-ms-enum:
            modelAsString: true
            name: IPAllocationMethod
        provisioningState:
          type: string
        publicIPAddress:
          $ref: "#/components/schemas/PublicIPAddress"
        subnet:
          $ref: "#/components/schemas/Subnet"
    NetworkInterfaceListResult:
      description: Response for ListNetworkInterface Api service call
      properties:
        nextLink:
          description: Gets the URL to get the next set of results.
          type: string
        value:
          description: Gets or sets list of NetworkInterfaces in a resource group
          items:
            $ref: "#/components/schemas/NetworkInterface"
          type: array
    NetworkInterfacePropertiesFormat:
      description: "NetworkInterface properties. "
      properties:
        dnsSettings:
          $ref: "#/components/schemas/NetworkInterfaceDnsSettings"
        enableIPForwarding:
          description: Gets or sets whether IPForwarding is enabled on the NIC
          type: boolean
        ipConfigurations:
          description: Gets or sets list of IPConfigurations of the NetworkInterface
          items:
            $ref: "#/components/schemas/NetworkInterfaceIPConfiguration"
          type: array
        macAddress:
          description: Gets the MAC Address of the network interface
          type: string
        networkSecurityGroup:
          $ref: "#/components/schemas/NetworkSecurityGroup"
        primary:
          description: Gets whether this is a primary NIC on a virtual machine
          type: boolean
        provisioningState:
          description: Gets or sets Provisioning state of the PublicIP resource
            Updating/Deleting/Failed
          type: string
        resourceGuid:
          description: Gets or sets resource GUID property of the network interface resource
          type: string
        virtualMachine:
          $ref: "#/components/schemas/SubResource"
    NetworkSecurityGroup:
      allOf:
        - $ref: "#/components/schemas/Resource"
      description: NetworkSecurityGroup resource
      properties:
        etag:
          description: Gets a unique read-only string that changes whenever the resource is
            updated
          type: string
        properties:
          $ref: "#/components/schemas/NetworkSecurityGroupPropertiesFormat"
    NetworkSecurityGroupListResult:
      description: Response for ListNetworkSecurityGroups Api service call
      properties:
        nextLink:
          description: Gets the URL to get the next set of results.
          type: string
        value:
          description: Gets List of NetworkSecurityGroups in a resource group
          items:
            $ref: "#/components/schemas/NetworkSecurityGroup"
          type: array
    NetworkSecurityGroupPropertiesFormat:
      description: Network Security Group resource
      properties:
        defaultSecurityRules:
          description: Gets or sets Default security rules of network security group
          items:
            $ref: "#/components/schemas/SecurityRule"
          type: array
        networkInterfaces:
          description: Gets collection of references to Network Interfaces
          items:
            $ref: "#/components/schemas/NetworkInterface"
          type: array
        provisioningState:
          description: Gets or sets Provisioning state of the PublicIP resource
            Updating/Deleting/Failed
          type: string
        resourceGuid:
          description: Gets or sets resource GUID property of the network security group
            resource
          type: string
        securityRules:
          description: Gets or sets Security rules of network security group
          items:
            $ref: "#/components/schemas/SecurityRule"
          type: array
        subnets:
          description: Gets collection of references to subnets
          items:
            $ref: "#/components/schemas/Subnet"
          type: array
    OutboundNatRule:
      allOf:
        - $ref: "#/components/schemas/SubResource"
      description: Outbound NAT pool of the loadbalancer
      properties:
        etag:
          description: A unique read-only string that changes whenever the resource is
            updated
          type: string
        name:
          description: Gets name of the resource that is unique within a resource group.
            This name can be used to access the resource
          type: string
        properties:
          $ref: "#/components/schemas/OutboundNatRulePropertiesFormat"
    OutboundNatRulePropertiesFormat:
      description: Outbound NAT pool of the loadbalancer
      properties:
        allocatedOutboundPorts:
          description: Gets or sets the number of outbound ports to be used for SNAT
          format: int32
          type: integer
        backendAddressPool:
          $ref: "#/components/schemas/SubResource"
        frontendIPConfigurations:
          description: Gets or sets Frontend IP addresses of the load balancer
          items:
            $ref: "#/components/schemas/SubResource"
          type: array
        provisioningState:
          description: Gets or sets Provisioning state of the PublicIP resource
            Updating/Deleting/Failed
          type: string
      required:
        - backendAddressPool
    Probe:
      allOf:
        - $ref: "#/components/schemas/SubResource"
      description: Load balancer Probe
      properties:
        etag:
          description: A unique read-only string that changes whenever the resource is
            updated
          type: string
        name:
          description: Gets name of the resource that is unique within a resource group.
            This name can be used to access the resource
          type: string
        properties:
          $ref: "#/components/schemas/ProbePropertiesFormat"
    ProbePropertiesFormat:
      properties:
        intervalInSeconds:
          description: Gets or sets the interval, in seconds, for how frequently to probe
            the endpoint for health status. Typically, the interval is slightly
            less than half the allocated timeout period (in seconds) which
            allows two full probes before taking the instance out of rotation.
            The default value is 15, the minimum value is 5
          format: int32
          type: integer
        loadBalancingRules:
          description: Gets Load balancer rules that use this probe
          items:
            $ref: "#/components/schemas/SubResource"
          type: array
        numberOfProbes:
          description: "Gets or sets the number of probes where if no response, will result
            in stopping further traffic from being delivered to the endpoint.
            This values allows endpoints to be taken out of rotation faster or
            slower than the typical times used in Azure. "
          format: int32
          type: integer
        port:
          description: Gets or sets Port for communicating the probe. Possible values range
            from 1 to 65535, inclusive.
          format: int32
          type: integer
        protocol:
          description: Gets or sets the protocol of the end point. Possible values are http
            pr Tcp. If Tcp is specified, a received ACK is required for the
            probe to be successful. If http is specified,a 200 OK response from
            the specifies URI is required for the probe to be successful
          enum:
            - Http
            - Tcp
          type: string
          x-ms-enum:
            modelAsString: true
            name: ProbeProtocol
        provisioningState:
          description: Gets or sets Provisioning state of the PublicIP resource
            Updating/Deleting/Failed
          type: string
        requestPath:
          description: Gets or sets the URI used for requesting health status from the VM.
            Path is required if a protocol is set to http. Otherwise, it is not
            allowed. There is no default value
          type: string
      required:
        - protocol
        - port
    PublicIPAddress:
      allOf:
        - $ref: "#/components/schemas/Resource"
      description: PublicIPAddress resource
      properties:
        etag:
          description: Gets a unique read-only string that changes whenever the resource is
            updated
          type: string
        properties:
          $ref: "#/components/schemas/PublicIPAddressPropertiesFormat"
    PublicIPAddressDnsSettings:
      description: Contains FQDN of the DNS record associated with the public IP address
      properties:
        domainNameLabel:
          description: Gets or sets the Domain name label.The concatenation of the domain
            name label and the regionalized DNS zone make up the fully qualified
            domain name associated with the public IP address. If a domain name
            label is specified, an A DNS record is created for the public IP in
            the Microsoft Azure DNS system.
          type: string
        fqdn:
          description: Gets the FQDN, Fully qualified domain name of the A DNS record
            associated with the public IP. This is the concatenation of the
            domainNameLabel and the regionalized DNS zone.
          type: string
        reverseFqdn:
          description: "Gets or Sets the Reverse FQDN. A user-visible, fully qualified
            domain name that resolves to this public IP address. If the
            reverseFqdn is specified, then a PTR DNS record is created pointing
            from the IP address in the in-addr.arpa domain to the reverse FQDN.
            "
          type: string
    PublicIPAddressListResult:
      description: Response for ListPublicIpAddresses Api service call
      properties:
        nextLink:
          description: Gets the URL to get the next set of results.
          type: string
        value:
          description: Gets List of publicIP addresses that exists in a resource group
          items:
            $ref: "#/components/schemas/PublicIPAddress"
          type: array
    PublicIPAddressPropertiesFormat:
      description: PublicIpAddress properties
      properties:
        dnsSettings:
          $ref: "#/components/schemas/PublicIPAddressDnsSettings"
        idleTimeoutInMinutes:
          description: Gets or sets the idle timeout of the public IP address
          format: int32
          type: integer
        ipAddress:
          type: string
        ipConfiguration:
          $ref: "#/components/schemas/IPConfiguration"
        provisioningState:
          description: Gets or sets Provisioning state of the PublicIP resource
            Updating/Deleting/Failed
          type: string
        publicIPAddressVersion:
          description: Gets or sets PublicIP address version (IPv4/IPv6)
          enum:
            - IPv4
            - IPv6
          type: string
          x-ms-enum:
            modelAsString: true
            name: IPVersion
        publicIPAllocationMethod:
          description: Gets or sets PublicIP allocation method (Static/Dynamic)
          enum:
            - Static
            - Dynamic
          type: string
          x-ms-enum:
            modelAsString: true
            name: IPAllocationMethod
        resourceGuid:
          description: Gets or sets resource GUID property of the PublicIP resource
          type: string
    Resource:
      properties:
        id:
          description: Resource Id
          type: string
        location:
          description: Resource location
          type: string
        name:
          description: Resource name
          readOnly: true
          type: string
        tags:
          additionalProperties:
            type: string
          description: Resource tags
          type: object
        type:
          description: Resource type
          readOnly: true
          type: string
      x-ms-azure-resource: true
    Route:
      allOf:
        - $ref: "#/components/schemas/SubResource"
      description: Route resource
      properties:
        etag:
          description: A unique read-only string that changes whenever the resource is
            updated
          type: string
        name:
          description: Gets name of the resource that is unique within a resource group.
            This name can be used to access the resource
          type: string
        properties:
          $ref: "#/components/schemas/RoutePropertiesFormat"
    RouteListResult:
      description: Response for ListRoute Api service call
      properties:
        nextLink:
          description: Gets the URL to get the next set of results.
          type: string
        value:
          description: Gets List of Routes in a resource group
          items:
            $ref: "#/components/schemas/Route"
          type: array
    RoutePropertiesFormat:
      description: Route resource
      properties:
        addressPrefix:
          description: Gets or sets the destination CIDR to which the route applies.
          type: string
        nextHopIpAddress:
          description: Gets or sets the IP address packets should be forwarded to. Next hop
            values are only allowed in routes where the next hop type is
            VirtualAppliance.
          type: string
        nextHopType:
          description: Gets or sets the type of Azure hop the packet should be sent to.
          enum:
            - VirtualNetworkGateway
            - VnetLocal
            - Internet
            - VirtualAppliance
            - None
          type: string
          x-ms-enum:
            modelAsString: true
            name: RouteNextHopType
        provisioningState:
          description: Gets or sets Provisioning state of the resource
            Updating/Deleting/Failed
          type: string
      required:
        - nextHopType
    RouteTable:
      allOf:
        - $ref: "#/components/schemas/Resource"
      description: RouteTable resource
      properties:
        etag:
          description: Gets a unique read-only string that changes whenever the resource is
            updated
          type: string
        properties:
          $ref: "#/components/schemas/RouteTablePropertiesFormat"
    RouteTableListResult:
      description: Response for ListRouteTable Api service call
      properties:
        nextLink:
          description: Gets the URL to get the next set of results.
          type: string
        value:
          description: Gets List of RouteTables in a resource group
          items:
            $ref: "#/components/schemas/RouteTable"
          type: array
    RouteTablePropertiesFormat:
      description: Route Table resource
      properties:
        provisioningState:
          description: Gets or sets Provisioning state of the resource
            Updating/Deleting/Failed
          type: string
        routes:
          description: Gets or sets Routes in a Route Table
          items:
            $ref: "#/components/schemas/Route"
          type: array
        subnets:
          description: Gets collection of references to subnets
          items:
            $ref: "#/components/schemas/Subnet"
          type: array
    SecurityRule:
      allOf:
        - $ref: "#/components/schemas/SubResource"
      description: Network security rule
      properties:
        etag:
          description: A unique read-only string that changes whenever the resource is
            updated
          type: string
        name:
          description: Gets name of the resource that is unique within a resource group.
            This name can be used to access the resource
          type: string
        properties:
          $ref: "#/components/schemas/SecurityRulePropertiesFormat"
    SecurityRuleListResult:
      description: Response for ListSecurityRule Api service callRetrieves all security
        rules that belongs to a network security group
      properties:
        nextLink:
          description: Gets the URL to get the next set of results.
          type: string
        value:
          description: Gets security rules in a network security group
          items:
            $ref: "#/components/schemas/SecurityRule"
          type: array
    SecurityRulePropertiesFormat:
      properties:
        access:
          description: Gets or sets network traffic is allowed or denied. Possible values
            are 'Allow' and 'Deny'
          enum:
            - Allow
            - Deny
          type: string
          x-ms-enum:
            modelAsString: true
            name: SecurityRuleAccess
        description:
          description: Gets or sets a description for this rule. Restricted to 140 chars.
          type: string
        destinationAddressPrefix:
          description: "Gets or sets destination address prefix. CIDR or source IP range.
            Asterisk '*' can also be used to match all source IPs. Default tags
            such as 'VirtualNetwork', 'AzureLoadBalancer' and 'Internet' can
            also be used. "
          type: string
        destinationPortRange:
          description: Gets or sets Destination Port or Range. Integer or range between 0
            and 65535. Asterisk '*' can also be used to match all ports.
          type: string
        direction:
          description: Gets or sets the direction of the rule.InBound or Outbound. The
            direction specifies if rule will be evaluated on incoming or
            outgoing traffic.
          enum:
            - Inbound
            - Outbound
          type: string
          x-ms-enum:
            modelAsString: true
            name: SecurityRuleDirection
        priority:
          description: Gets or sets the priority of the rule. The value can be between 100
            and 4096. The priority number must be unique for each rule in the
            collection. The lower the priority number, the higher the priority
            of the rule.
          format: int32
          type: integer
        protocol:
          description: Gets or sets Network protocol this rule applies to. Can be Tcp, Udp
            or All(*).
          enum:
            - Tcp
            - Udp
            - "*"
          type: string
          x-ms-enum:
            modelAsString: true
            name: SecurityRuleProtocol
        provisioningState:
          description: Gets or sets Provisioning state of the PublicIP resource
            Updating/Deleting/Failed
          type: string
        sourceAddressPrefix:
          description: "Gets or sets source address prefix. CIDR or source IP range.
            Asterisk '*' can also be used to match all source IPs. Default tags
            such as 'VirtualNetwork', 'AzureLoadBalancer' and 'Internet' can
            also be used. If this is an ingress rule, specifies where network
            traffic originates from. "
          type: string
        sourcePortRange:
          description: Gets or sets Source Port or Range. Integer or range between 0 and
            65535. Asterisk '*' can also be used to match all ports.
          type: string
      required:
        - protocol
        - sourceAddressPrefix
        - destinationAddressPrefix
        - access
        - direction
    SubResource:
      properties:
        id:
          description: Resource Id
          type: string
      x-ms-azure-resource: true
    Subnet:
      allOf:
        - $ref: "#/components/schemas/SubResource"
      description: Subnet in a VirtualNetwork resource
      properties:
        etag:
          description: A unique read-only string that changes whenever the resource is
            updated
          type: string
        name:
          description: Gets name of the resource that is unique within a resource group.
            This name can be used to access the resource
          type: string
        properties:
          $ref: "#/components/schemas/SubnetPropertiesFormat"
    SubnetListResult:
      description: Response for ListSubnets Api service callRetrieves all subnet that
        belongs to a virtual network
      properties:
        nextLink:
          description: Gets the URL to get the next set of results.
          type: string
        value:
          description: Gets the subnets in a virtual network
          items:
            $ref: "#/components/schemas/Subnet"
          type: array
    SubnetPropertiesFormat:
      properties:
        addressPrefix:
          description: Gets or sets Address prefix for the subnet.
          type: string
        ipConfigurations:
          description: Gets array of references to the network interface IP configurations
            using subnet
          items:
            $ref: "#/components/schemas/IPConfiguration"
          type: array
        networkSecurityGroup:
          $ref: "#/components/schemas/NetworkSecurityGroup"
        provisioningState:
          description: Gets or sets Provisioning state of the PublicIP resource
            Updating/Deleting/Failed
          type: string
        routeTable:
          $ref: "#/components/schemas/RouteTable"
    Usage:
      description: Describes Network Resource Usage.
      properties:
        currentValue:
          description: Gets or sets the current value of the usage.
          format: int64
          type: integer
        limit:
          description: Gets or sets the limit of usage.
          format: int64
          type: integer
        name:
          $ref: "#/components/schemas/UsageName"
        unit:
          description: Gets or sets an enum describing the unit of measurement.
          enum:
            - Count
          type: string
          x-ms-enum:
            modelAsString: true
            name: UsageUnit
      required:
        - unit
        - currentValue
        - limit
        - name
    UsageName:
      description: The Usage Names.
      properties:
        localizedValue:
          description: Gets or sets a localized string describing the resource name.
          type: string
        value:
          description: Gets or sets a string describing the resource name.
          type: string
    UsagesListResult:
      description: The List Usages operation response.
      properties:
        value:
          description: Gets or sets the list Network Resource Usages.
          items:
            $ref: "#/components/schemas/Usage"
          type: array
    VirtualNetwork:
      allOf:
        - $ref: "#/components/schemas/Resource"
      description: Virtual Network resource
      properties:
        etag:
          description: Gets a unique read-only string that changes whenever the resource is
            updated
          type: string
        properties:
          $ref: "#/components/schemas/VirtualNetworkPropertiesFormat"
    VirtualNetworkGateway:
      allOf:
        - $ref: "#/components/schemas/Resource"
      description: A common class for general resource information
      properties:
        etag:
          description: Gets a unique read-only string that changes whenever the resource is
            updated
          type: string
        properties:
          $ref: "#/components/schemas/VirtualNetworkGatewayPropertiesFormat"
    VirtualNetworkGatewayConnection:
      allOf:
        - $ref: "#/components/schemas/Resource"
      description: A common class for general resource information
      properties:
        etag:
          description: Gets a unique read-only string that changes whenever the resource is
            updated
          type: string
        properties:
          $ref: "#/components/schemas/VirtualNetworkGatewayConnectionPropertiesForm\
            at"
    VirtualNetworkGatewayConnectionListResult:
      description: Response for ListVirtualNetworkGatewayConnections Api service call
      properties:
        nextLink:
          description: Gets the URL to get the next set of results.
          type: string
        value:
          description: Gets List of VirtualNetworkGatewayConnections that exists in a
            resource group
          items:
            $ref: "#/components/schemas/VirtualNetworkGatewayConnection"
          type: array
    VirtualNetworkGatewayConnectionPropertiesFormat:
      description: VirtualNetworkGatewayConnection properties
      properties:
        authorizationKey:
          description: The authorizationKey.
          type: string
        connectionStatus:
          description: Virtual network Gateway connection status
          enum:
            - Unknown
            - Connecting
            - Connected
            - NotConnected
          type: string
          x-ms-enum:
            modelAsString: true
            name: VirtualNetworkGatewayConnectionStatus
        connectionType:
          description: Gateway connection type IPsec/Dedicated/VpnClient/Vnet2Vnet
          enum:
            - IPsec
            - Vnet2Vnet
            - ExpressRoute
            - VPNClient
          type: string
          x-ms-enum:
            modelAsString: true
            name: VirtualNetworkGatewayConnectionType
        egressBytesTransferred:
          description: The Egress Bytes Transferred in this connection
          format: int64
          type: integer
        enableBgp:
          description: EnableBgp Flag
          type: boolean
        ingressBytesTransferred:
          description: The Ingress Bytes Transferred in this connection
          format: int64
          type: integer
        localNetworkGateway2:
          $ref: "#/components/schemas/LocalNetworkGateway"
        peer:
          $ref: "#/components/schemas/SubResource"
        provisioningState:
          description: Gets or sets Provisioning state of the
            VirtualNetworkGatewayConnection resource Updating/Deleting/Failed
          type: string
        resourceGuid:
          description: Gets or sets resource GUID property of the
            VirtualNetworkGatewayConnection resource
          type: string
        routingWeight:
          description: The Routing weight.
          format: int32
          type: integer
        sharedKey:
          description: The IPsec share key.
          type: string
        virtualNetworkGateway1:
          $ref: "#/components/schemas/VirtualNetworkGateway"
        virtualNetworkGateway2:
          $ref: "#/components/schemas/VirtualNetworkGateway"
    VirtualNetworkGatewayIPConfiguration:
      allOf:
        - $ref: "#/components/schemas/SubResource"
      description: IpConfiguration for Virtual network gateway
      properties:
        etag:
          description: A unique read-only string that changes whenever the resource is
            updated
          type: string
        name:
          description: Gets name of the resource that is unique within a resource group.
            This name can be used to access the resource
          type: string
        properties:
          $ref: "#/components/schemas/VirtualNetworkGatewayIPConfigurationPropertie\
            sFormat"
    VirtualNetworkGatewayIPConfigurationPropertiesFormat:
      description: Properties of VirtualNetworkGatewayIPConfiguration
      properties:
        privateIPAddress:
          description: Gets or sets the privateIPAddress of the IP Configuration
          type: string
        privateIPAllocationMethod:
          description: Gets or sets PrivateIP allocation method (Static/Dynamic)
          enum:
            - Static
            - Dynamic
          type: string
          x-ms-enum:
            modelAsString: true
            name: IPAllocationMethod
        provisioningState:
          description: Gets or sets Provisioning state of the PublicIP resource
            Updating/Deleting/Failed
          type: string
        publicIPAddress:
          $ref: "#/components/schemas/SubResource"
        subnet:
          $ref: "#/components/schemas/SubResource"
    VirtualNetworkGatewayListResult:
      description: Response for ListVirtualNetworkGateways Api service call
      properties:
        nextLink:
          description: Gets the URL to get the next set of results.
          type: string
        value:
          description: Gets List of VirtualNetworkGateways that exists in a resource group
          items:
            $ref: "#/components/schemas/VirtualNetworkGateway"
          type: array
    VirtualNetworkGatewayPropertiesFormat:
      description: VirtualNetworkGateway properties
      properties:
        bgpSettings:
          $ref: "#/components/schemas/BgpSettings"
        enableBgp:
          description: EnableBgp Flag
          type: boolean
        gatewayDefaultSite:
          $ref: "#/components/schemas/SubResource"
        gatewayType:
          description: The type of this virtual network gateway.
          enum:
            - Vpn
            - ExpressRoute
          type: string
          x-ms-enum:
            modelAsString: true
            name: VirtualNetworkGatewayType
        ipConfigurations:
          description: IpConfigurations for Virtual network gateway.
          items:
            $ref: "#/components/schemas/VirtualNetworkGatewayIPConfiguration"
          type: array
        provisioningState:
          description: Gets or sets Provisioning state of the VirtualNetworkGateway
            resource Updating/Deleting/Failed
          type: string
        resourceGuid:
          description: Gets or sets resource GUID property of the VirtualNetworkGateway
            resource
          type: string
        sku:
          $ref: "#/components/schemas/VirtualNetworkGatewaySku"
        vpnClientConfiguration:
          $ref: "#/components/schemas/VpnClientConfiguration"
        vpnType:
          description: The type of this virtual network gateway.
          enum:
            - PolicyBased
            - RouteBased
          type: string
          x-ms-enum:
            modelAsString: true
            name: VpnType
    VirtualNetworkGatewaySku:
      description: VirtualNetworkGatewaySku details
      properties:
        capacity:
          description: The capacity
          format: int32
          type: integer
        name:
          description: Gateway sku name -Basic/HighPerformance/Standard
          enum:
            - Basic
            - HighPerformance
            - Standard
          type: string
          x-ms-enum:
            modelAsString: true
            name: VirtualNetworkGatewaySkuName
        tier:
          description: Gateway sku tier -Basic/HighPerformance/Standard
          enum:
            - Basic
            - HighPerformance
            - Standard
          type: string
          x-ms-enum:
            modelAsString: true
            name: VirtualNetworkGatewaySkuTier
    VirtualNetworkListResult:
      description: Response for ListVirtualNetworks Api service call
      properties:
        nextLink:
          description: Gets the URL to get the next set of results.
          type: string
        value:
          description: Gets list of VirtualNetworks in a resource group
          items:
            $ref: "#/components/schemas/VirtualNetwork"
          type: array
    VirtualNetworkPropertiesFormat:
      properties:
        addressSpace:
          $ref: "#/components/schemas/AddressSpace"
        dhcpOptions:
          $ref: "#/components/schemas/DhcpOptions"
        provisioningState:
          description: Gets or sets Provisioning state of the PublicIP resource
            Updating/Deleting/Failed
          type: string
        resourceGuid:
          description: Gets or sets resource GUID property of the VirtualNetwork resource
          type: string
        subnets:
          description: Gets or sets List of subnets in a VirtualNetwork
          items:
            $ref: "#/components/schemas/Subnet"
          type: array
    VpnClientConfiguration:
      description: VpnClientConfiguration for P2S client
      properties:
        vpnClientAddressPool:
          $ref: "#/components/schemas/AddressSpace"
        vpnClientRevokedCertificates:
          description: VpnClientRevokedCertificate for Virtual network gateway.
          items:
            $ref: "#/components/schemas/VpnClientRevokedCertificate"
          type: array
        vpnClientRootCertificates:
          description: VpnClientRootCertificate for Virtual network gateway.
          items:
            $ref: "#/components/schemas/VpnClientRootCertificate"
          type: array
    VpnClientParameters:
      description: VpnClientParameters
      properties:
        ProcessorArchitecture:
          description: VPN client Processor Architecture -Amd64/X86
          enum:
            - Amd64
            - X86
          type: string
          x-ms-enum:
            modelAsString: true
            name: ProcessorArchitecture
    VpnClientRevokedCertificate:
      allOf:
        - $ref: "#/components/schemas/SubResource"
      description: VPN client revoked certificate of virtual network gateway
      properties:
        etag:
          description: A unique read-only string that changes whenever the resource is
            updated
          type: string
        name:
          description: Gets name of the resource that is unique within a resource group.
            This name can be used to access the resource
          type: string
        properties:
          $ref: "#/components/schemas/VpnClientRevokedCertificatePropertiesFormat"
    VpnClientRevokedCertificatePropertiesFormat:
      description: Properties of the revoked VPN client certificate of virtual network
        gateway
      properties:
        provisioningState:
          description: Gets or sets Provisioning state of the VPN client revoked
            certificate resource Updating/Deleting/Failed
          type: string
        thumbprint:
          description: Gets or sets the revoked Vpn client certificate thumbprint
          type: string
    VpnClientRootCertificate:
      allOf:
        - $ref: "#/components/schemas/SubResource"
      description: VPN client root certificate of virtual network gateway
      properties:
        etag:
          description: A unique read-only string that changes whenever the resource is
            updated
          type: string
        name:
          description: Gets name of the resource that is unique within a resource group.
            This name can be used to access the resource
          type: string
        properties:
          $ref: "#/components/schemas/VpnClientRootCertificatePropertiesFormat"
    VpnClientRootCertificatePropertiesFormat:
      description: Properties of SSL certificates of application gateway
      properties:
        provisioningState:
          description: Gets or sets Provisioning state of the VPN client root certificate
            resource Updating/Deleting/Failed
          type: string
        publicCertData:
          description: Gets or sets the certificate public data
          type: string
