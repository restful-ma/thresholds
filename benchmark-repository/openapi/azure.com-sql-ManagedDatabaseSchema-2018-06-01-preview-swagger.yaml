openapi: 3.0.0
info:
  description: The Azure SQL Database management API provides a RESTful set of web APIs
    that interact with Azure SQL Database services to manage your databases. The
    API enables users to create, retrieve, update, and delete databases,
    servers, and other entities.
  title: SqlManagementClient
  version: 2018-06-01-preview
  x-apisguru-categories:
    - cloud
  x-logo:
    url: https://assets.onestore.ms/cdnfiles/onestorerolling-1606-01000/shell/v3/images/logo/microsoft.png
  x-origin:
    - format: swagger
      url: https://raw.githubusercontent.com/Azure/azure-rest-api-specs/master/specification/sql/resource-manager/Microsoft.Sql/preview/2018-06-01-preview/ManagedDatabaseSchema.json
      version: "2.0"
  x-providerName: azure.com
  x-serviceName: sql-ManagedDatabaseSchema
  x-tags:
    - Azure
    - Microsoft
paths:
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/managedInstances/{managedInstanceName}/databases/{databaseName}/schemas":
    get:
      description: List managed database schemas
      operationId: ManagedDatabaseSchemas_ListByDatabase
      parameters:
        - $ref: "#/components/parameters/ResourceGroupParameter"
        - $ref: "#/components/parameters/ManagedInstanceNameParameter"
        - $ref: "#/components/parameters/DatabaseNameParameter"
        - description: An OData filter expression that filters elements in the collection.
          in: query
          name: $filter
          required: false
          schema:
            type: string
        - $ref: "#/components/parameters/SubscriptionIdParameter"
        - $ref: "#/components/parameters/ApiVersionParameter"
      responses:
        "200":
          description: Successfully retrieved managed database schemas.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DatabaseSchemaListResult"
              examples:
                List managed database schemas:
                  $ref: "#/components/examples/List_managed_database_schemas"
        default:
          description: >-
            *** Error Responses: ***

             * 404 SubscriptionDoesNotHaveServer - The requested server was not found

             * 404 SourceDatabaseNotFound - The source database does not exist.

             * 404 DatabaseDoesNotExist - User has specified a database name that does not exist on this server instance.

             * 404 InvalidDatabaseSchema - Schema is missing in database.

             * 404 InvalidDatabaseTable - Table is missing in database.

             * 404 InvalidDatabaseColumn - Column is missing in table.
      tags:
        - ManagedDatabaseSchemas
      x-ms-odata: "#/components/schemas/DatabaseSchema"
      x-ms-pageable:
        nextLinkName: nextLink
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/managedInstances/{managedInstanceName}/databases/{databaseName}/schemas/{schemaName}":
    get:
      description: Get managed database schema
      operationId: ManagedDatabaseSchemas_Get
      parameters:
        - $ref: "#/components/parameters/ResourceGroupParameter"
        - $ref: "#/components/parameters/ManagedInstanceNameParameter"
        - $ref: "#/components/parameters/DatabaseNameParameter"
        - description: The name of the schema.
          in: path
          name: schemaName
          required: true
          schema:
            type: string
          examples:
            Get managed database schema:
              value: dbo
        - $ref: "#/components/parameters/SubscriptionIdParameter"
        - $ref: "#/components/parameters/ApiVersionParameter"
      responses:
        "200":
          description: Successfully retrieved managed database schema.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DatabaseSchema"
              examples:
                Get managed database schema:
                  $ref: "#/components/examples/Get_managed_database_schema"
        default:
          description: >-
            *** Error Responses: ***

             * 404 SubscriptionDoesNotHaveServer - The requested server was not found

             * 404 SourceDatabaseNotFound - The source database does not exist.

             * 404 DatabaseDoesNotExist - User has specified a database name that does not exist on this server instance.

             * 404 InvalidDatabaseSchema - Schema is missing in database.

             * 404 InvalidDatabaseTable - Table is missing in database.

             * 404 InvalidDatabaseColumn - Column is missing in table.
      tags:
        - ManagedDatabaseSchemas
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/managedInstances/{managedInstanceName}/databases/{databaseName}/schemas/{schemaName}/tables":
    get:
      description: List managed database tables
      operationId: ManagedDatabaseTables_ListBySchema
      parameters:
        - $ref: "#/components/parameters/ResourceGroupParameter"
        - $ref: "#/components/parameters/ManagedInstanceNameParameter"
        - $ref: "#/components/parameters/DatabaseNameParameter"
        - description: The name of the schema.
          in: path
          name: schemaName
          required: true
          schema:
            type: string
          examples:
            List managed database tables:
              value: dbo
        - description: An OData filter expression that filters elements in the collection.
          in: query
          name: $filter
          required: false
          schema:
            type: string
        - $ref: "#/components/parameters/SubscriptionIdParameter"
        - $ref: "#/components/parameters/ApiVersionParameter"
      responses:
        "200":
          description: Successfully retrieved managed database tables.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DatabaseTableListResult"
              examples:
                List managed database tables:
                  $ref: "#/components/examples/List_managed_database_tables"
        default:
          description: >-
            *** Error Responses: ***

             * 404 SubscriptionDoesNotHaveServer - The requested server was not found

             * 404 SourceDatabaseNotFound - The source database does not exist.

             * 404 DatabaseDoesNotExist - User has specified a database name that does not exist on this server instance.

             * 404 InvalidDatabaseSchema - Schema is missing in database.

             * 404 InvalidDatabaseTable - Table is missing in database.

             * 404 InvalidDatabaseColumn - Column is missing in table.
      tags:
        - ManagedDatabaseTables
      x-ms-odata: "#/components/schemas/DatabaseTable"
      x-ms-pageable:
        nextLinkName: nextLink
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/managedInstances/{managedInstanceName}/databases/{databaseName}/schemas/{schemaName}/tables/{tableName}":
    get:
      description: Get managed database table
      operationId: ManagedDatabaseTables_Get
      parameters:
        - $ref: "#/components/parameters/ResourceGroupParameter"
        - $ref: "#/components/parameters/ManagedInstanceNameParameter"
        - $ref: "#/components/parameters/DatabaseNameParameter"
        - description: The name of the schema.
          in: path
          name: schemaName
          required: true
          schema:
            type: string
          examples:
            Get managed database table:
              value: dbo
        - description: The name of the table.
          in: path
          name: tableName
          required: true
          schema:
            type: string
          examples:
            Get managed database table:
              value: table1
        - $ref: "#/components/parameters/SubscriptionIdParameter"
        - $ref: "#/components/parameters/ApiVersionParameter"
      responses:
        "200":
          description: Successfully retrieved managed database table.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DatabaseTable"
              examples:
                Get managed database table:
                  $ref: "#/components/examples/Get_managed_database_table"
        default:
          description: >-
            *** Error Responses: ***

             * 404 SubscriptionDoesNotHaveServer - The requested server was not found

             * 404 SourceDatabaseNotFound - The source database does not exist.

             * 404 DatabaseDoesNotExist - User has specified a database name that does not exist on this server instance.

             * 404 InvalidDatabaseSchema - Schema is missing in database.

             * 404 InvalidDatabaseTable - Table is missing in database.

             * 404 InvalidDatabaseColumn - Column is missing in table.
      tags:
        - ManagedDatabaseTables
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/managedInstances/{managedInstanceName}/databases/{databaseName}/schemas/{schemaName}/tables/{tableName}/columns":
    get:
      description: List managed database columns
      operationId: ManagedDatabaseColumns_ListByTable
      parameters:
        - $ref: "#/components/parameters/ResourceGroupParameter"
        - $ref: "#/components/parameters/ManagedInstanceNameParameter"
        - $ref: "#/components/parameters/DatabaseNameParameter"
        - description: The name of the schema.
          in: path
          name: schemaName
          required: true
          schema:
            type: string
          examples:
            List managed database columns:
              value: dbo
        - description: The name of the table.
          in: path
          name: tableName
          required: true
          schema:
            type: string
          examples:
            List managed database columns:
              value: table1
        - description: An OData filter expression that filters elements in the collection.
          in: query
          name: $filter
          required: false
          schema:
            type: string
        - $ref: "#/components/parameters/SubscriptionIdParameter"
        - $ref: "#/components/parameters/ApiVersionParameter"
      responses:
        "200":
          description: Successfully retrieved managed database columns.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DatabaseColumnListResult"
              examples:
                List managed database columns:
                  $ref: "#/components/examples/List_managed_database_columns"
        default:
          description: >-
            *** Error Responses: ***

             * 404 SubscriptionDoesNotHaveServer - The requested server was not found

             * 404 SourceDatabaseNotFound - The source database does not exist.

             * 404 DatabaseDoesNotExist - User has specified a database name that does not exist on this server instance.

             * 404 InvalidDatabaseSchema - Schema is missing in database.

             * 404 InvalidDatabaseTable - Table is missing in database.

             * 404 InvalidDatabaseColumn - Column is missing in table.
      tags:
        - ManagedDatabaseColumns
      x-ms-odata: "#/components/schemas/DatabaseColumn"
      x-ms-pageable:
        nextLinkName: nextLink
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/managedInstances/{managedInstanceName}/databases/{databaseName}/schemas/{schemaName}/tables/{tableName}/columns/{columnName}":
    get:
      description: Get managed database column
      operationId: ManagedDatabaseColumns_Get
      parameters:
        - $ref: "#/components/parameters/ResourceGroupParameter"
        - $ref: "#/components/parameters/ManagedInstanceNameParameter"
        - $ref: "#/components/parameters/DatabaseNameParameter"
        - description: The name of the schema.
          in: path
          name: schemaName
          required: true
          schema:
            type: string
          examples:
            Get managed database column:
              value: dbo
        - description: The name of the table.
          in: path
          name: tableName
          required: true
          schema:
            type: string
          examples:
            Get managed database column:
              value: table1
        - description: The name of the column.
          in: path
          name: columnName
          required: true
          schema:
            type: string
          examples:
            Get managed database column:
              value: column1
        - $ref: "#/components/parameters/SubscriptionIdParameter"
        - $ref: "#/components/parameters/ApiVersionParameter"
      responses:
        "200":
          description: Successfully retrieved managed database column.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DatabaseColumn"
              examples:
                Get managed database column:
                  $ref: "#/components/examples/Get_managed_database_column"
        default:
          description: >-
            *** Error Responses: ***

             * 404 SubscriptionDoesNotHaveServer - The requested server was not found

             * 404 SourceDatabaseNotFound - The source database does not exist.

             * 404 DatabaseDoesNotExist - User has specified a database name that does not exist on this server instance.

             * 404 InvalidDatabaseSchema - Schema is missing in database.

             * 404 InvalidDatabaseTable - Table is missing in database.

             * 404 InvalidDatabaseColumn - Column is missing in table.
      tags:
        - ManagedDatabaseColumns
servers:
  - url: https://management.azure.com
components:
  examples:
    List_managed_database_schemas:
      value:
        value:
          - id: /subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/myRG/providers/Microsoft.Sql/managedInstances/myManagedInstanceName/databases/myDatabase/schemas/dbo
            name: dbo
            type: Microsoft.Sql/managedInstances/databases/schemas
          - id: /subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/myRG/providers/Microsoft.Sql/managedInstances/myManagedInstanceName/databases/myDatabase/schemas/schema2
            name: schema2
            type: Microsoft.Sql/managedInstances/databases/schemas
    Get_managed_database_schema:
      value:
        id: /subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/myRG/providers/Microsoft.Sql/managedInstances/myManagedInstanceName/databases/myDatabase/schemas/dbo
        name: dbo
        type: Microsoft.Sql/managedInstances/databases/schemas
    List_managed_database_tables:
      value:
        value:
          - id: /subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/myRG/providers/Microsoft.Sql/managedInstances/myManagedInstanceName/databases/myDatabase/schemas/dbo/tables/table1
            name: table1
            type: Microsoft.Sql/managedInstances/databases/schemas/tables
          - id: /subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/myRG/providers/Microsoft.Sql/managedInstances/myManagedInstanceName/databases/myDatabase/schemas/dbo/tables/table2
            name: table2
            type: Microsoft.Sql/managedInstances/databases/schemas/tables
    Get_managed_database_table:
      value:
        id: /subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/myRG/providers/Microsoft.Sql/managedInstances/myManagedInstanceName/databases/myDatabase/schemas/dbo/tables/table1
        name: table1
        type: Microsoft.Sql/managedInstances/databases/schemas/tables
    List_managed_database_columns:
      value:
        value:
          - id: /subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/myRG/providers/Microsoft.Sql/managedInstances/myManagedInstanceName/databases/myDatabase/schemas/dbo/tables/table1/columns/col1
            name: col1
            properties:
              columnType: nvarchar
            type: Microsoft.Sql/managedInstances/databases/schemas/tables/columns
          - id: /subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/myRG/providers/Microsoft.Sql/managedInstances/myManagedInstanceName/databases/myDatabase/schemas/dbo/tables/table1/columns/col2
            name: col2
            properties:
              columnType: bit
            type: Microsoft.Sql/managedInstances/databases/schemas/tables/columns
    Get_managed_database_column:
      value:
        id: /subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/myRG/providers/Microsoft.Sql/managedInstances/myManagedInstanceName/databases/myDatabase/schemas/dbo/tables/table1/columns/column1
        name: column1
        properties:
          columnType: bit
        type: Microsoft.Sql/managedInstances/databases/schemas/tables/columns
  parameters:
    ApiVersionParameter:
      description: The API version to use for the request.
      in: query
      name: api-version
      required: true
      x-ms-parameter-location: client
      schema:
        type: string
      examples:
        List managed database schemas:
          value: 2018-06-01-preview
        Get managed database schema:
          value: 2018-06-01-preview
        List managed database tables:
          value: 2018-06-01-preview
        Get managed database table:
          value: 2018-06-01-preview
        List managed database columns:
          value: 2018-06-01-preview
        Get managed database column:
          value: 2018-06-01-preview
    DatabaseNameParameter:
      description: The name of the database.
      in: path
      name: databaseName
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
      examples:
        List managed database schemas:
          value: myDatabase
        Get managed database schema:
          value: myDatabase
        List managed database tables:
          value: myDatabase
        Get managed database table:
          value: myDatabase
        List managed database columns:
          value: myDatabase
        Get managed database column:
          value: myDatabase
    ManagedInstanceNameParameter:
      description: The name of the managed instance.
      in: path
      name: managedInstanceName
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
      examples:
        List managed database schemas:
          value: myManagedInstanceName
        Get managed database schema:
          value: myManagedInstanceName
        List managed database tables:
          value: myManagedInstanceName
        Get managed database table:
          value: myManagedInstanceName
        List managed database columns:
          value: myManagedInstanceName
        Get managed database column:
          value: myManagedInstanceName
    ResourceGroupParameter:
      description: The name of the resource group that contains the resource. You can
        obtain this value from the Azure Resource Manager API or the portal.
      in: path
      name: resourceGroupName
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
      examples:
        List managed database schemas:
          value: myRG
        Get managed database schema:
          value: myRG
        List managed database tables:
          value: myRG
        Get managed database table:
          value: myRG
        List managed database columns:
          value: myRG
        Get managed database column:
          value: myRG
    SqlVirtualMachineContainerNameParameter:
      description: The name of the SqlVirtualMachineContainer.
      in: path
      name: sqlVirtualMachineContainerName
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    SqlVirtualMachineInstanceNameParameter:
      description: The name of the SqlVirtualMachineInstance.
      in: path
      name: sqlVirtualMachineInstanceName
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    SubscriptionIdParameter:
      description: The subscription ID that identifies an Azure subscription.
      in: path
      name: subscriptionId
      required: true
      x-ms-parameter-location: client
      schema:
        type: string
      examples:
        List managed database schemas:
          value: 00000000-1111-2222-3333-444444444444
        Get managed database schema:
          value: 00000000-1111-2222-3333-444444444444
        List managed database tables:
          value: 00000000-1111-2222-3333-444444444444
        Get managed database table:
          value: 00000000-1111-2222-3333-444444444444
        List managed database columns:
          value: 00000000-1111-2222-3333-444444444444
        Get managed database column:
          value: 00000000-1111-2222-3333-444444444444
    VirtualClusterNameParameter:
      description: The name of the virtual cluster.
      in: path
      name: virtualClusterName
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
  securitySchemes:
    azure_auth:
      description: Azure Active Directory OAuth2 Flow
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
          scopes:
            user_impersonation: impersonate your user account
  schemas:
    DatabaseColumn:
      allOf:
        - $ref: "#/components/schemas/ProxyResource"
      description: A database column resource.
      properties:
        properties:
          $ref: "#/components/schemas/DatabaseColumnProperties"
      type: object
    DatabaseColumnListResult:
      description: A list of database columns.
      properties:
        nextLink:
          description: Link to retrieve next page of results.
          readOnly: true
          type: string
        value:
          description: Array of results.
          items:
            $ref: "#/components/schemas/DatabaseColumn"
          readOnly: true
          type: array
      type: object
    DatabaseColumnProperties:
      description: Database column properties.
      properties:
        columnType:
          description: The column data type.
          enum:
            - image
            - text
            - uniqueidentifier
            - date
            - time
            - datetime2
            - datetimeoffset
            - tinyint
            - smallint
            - int
            - smalldatetime
            - real
            - money
            - datetime
            - float
            - sql_variant
            - ntext
            - bit
            - decimal
            - numeric
            - smallmoney
            - bigint
            - hierarchyid
            - geometry
            - geography
            - varbinary
            - varchar
            - binary
            - char
            - timestamp
            - nvarchar
            - nchar
            - xml
            - sysname
          type: string
          x-ms-enum:
            modelAsString: true
            name: ColumnDataType
      type: object
    DatabaseSchema:
      allOf:
        - $ref: "#/components/schemas/ProxyResource"
      description: A database schema resource.
      properties: {}
      type: object
    DatabaseSchemaListResult:
      description: A list of database schemas.
      properties:
        nextLink:
          description: Link to retrieve next page of results.
          readOnly: true
          type: string
        value:
          description: Array of results.
          items:
            $ref: "#/components/schemas/DatabaseSchema"
          readOnly: true
          type: array
      type: object
    DatabaseTable:
      allOf:
        - $ref: "#/components/schemas/ProxyResource"
      description: A database table resource.
      properties: {}
      type: object
    DatabaseTableListResult:
      description: A list of database tables.
      properties:
        nextLink:
          description: Link to retrieve next page of results.
          readOnly: true
          type: string
        value:
          description: Array of results.
          items:
            $ref: "#/components/schemas/DatabaseTable"
          readOnly: true
          type: array
      type: object
    ProxyResource:
      allOf:
        - $ref: "#/components/schemas/Resource"
      description: ARM proxy resource.
      properties: {}
      type: object
    Resource:
      description: ARM resource.
      properties:
        id:
          description: Resource ID.
          readOnly: true
          type: string
        name:
          description: Resource name.
          readOnly: true
          type: string
        type:
          description: Resource type.
          readOnly: true
          type: string
      type: object
      x-ms-azure-resource: true
