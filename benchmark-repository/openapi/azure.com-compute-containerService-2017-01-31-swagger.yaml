openapi: 3.0.0
info:
  description: The Container Service Client.
  title: ContainerServiceClient
  version: 2017-01-31
  x-apisguru-categories:
    - cloud
  x-logo:
    url: https://assets.onestore.ms/cdnfiles/onestorerolling-1606-01000/shell/v3/images/logo/microsoft.png
  x-origin:
    - format: swagger
      url: https://raw.githubusercontent.com/Azure/azure-rest-api-specs/master/specification/compute/resource-manager/Microsoft.ContainerService/stable/2017-01-31/containerService.json
      version: "2.0"
  x-preferred: true
  x-providerName: azure.com
  x-serviceName: compute-containerService
  x-tags:
    - Azure
    - Microsoft
security:
  - azure_auth:
      - user_impersonation
paths:
  "/subscriptions/{subscriptionId}/providers/Microsoft.ContainerService/containerServices":
    get:
      description: Gets a list of container services in the specified subscription. The
        operation returns properties of each container service including state,
        orchestrator, number of masters and agents, and FQDNs of masters and
        agents.
      operationId: ContainerServices_List
      parameters:
        - $ref: "#/components/parameters/ApiVersionParameter"
        - $ref: "#/components/parameters/SubscriptionIdParameter"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ContainerServiceListResult"
              examples:
                List Container Services:
                  $ref: "#/components/examples/List_Container_Services"
      summary: Gets a list of container services in the specified subscription.
      tags:
        - ContainerServices
      x-ms-pageable:
        nextLinkName: nextLink
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/containerServices":
    get:
      description: Gets a list of container services in the specified subscription and
        resource group. The operation returns properties of each container
        service including state, orchestrator, number of masters and agents, and
        FQDNs of masters and agents.
      operationId: ContainerServices_ListByResourceGroup
      parameters:
        - description: The name of the resource group.
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
          examples:
            List Container Services by Resource Group:
              value: rg1
        - $ref: "#/components/parameters/ApiVersionParameter"
        - $ref: "#/components/parameters/SubscriptionIdParameter"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ContainerServiceListResult"
              examples:
                List Container Services by Resource Group:
                  $ref: "#/components/examples/List_Container_Services_by_Resource_\
                    Group"
      summary: Gets a list of container services in the specified resource group.
      tags:
        - ContainerService
      x-ms-pageable:
        nextLinkName: nextLink
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/containerServices/{containerServiceName}":
    delete:
      description: Deletes the specified container service in the specified subscription
        and resource group. The operation does not delete other resources
        created as part of creating a container service, including storage
        accounts, VMs, and availability sets. All the other resources created
        with the container service are part of the same resource group and can
        be deleted individually.
      operationId: ContainerServices_Delete
      parameters:
        - description: The name of the resource group.
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
          examples:
            Delete Container Service:
              value: rg1
        - description: The name of the container service in the specified subscription and
            resource group.
          in: path
          name: containerServiceName
          required: true
          schema:
            type: string
          examples:
            Delete Container Service:
              value: acs1
        - $ref: "#/components/parameters/ApiVersionParameter"
        - $ref: "#/components/parameters/SubscriptionIdParameter"
      responses:
        "202":
          description: Accepted
        "204":
          description: Not found
      summary: Deletes the specified container service.
      tags:
        - ContainerService
      x-ms-long-running-operation: true
    get:
      description: "Gets the properties of the specified container service in the specified
        subscription and resource group. The operation returns the properties
        including state, orchestrator, number of masters and agents, and FQDNs
        of masters and agents. "
      operationId: ContainerServices_Get
      parameters:
        - description: The name of the resource group.
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
          examples:
            Get Container Service:
              value: rg1
        - description: The name of the container service in the specified subscription and
            resource group.
          in: path
          name: containerServiceName
          required: true
          schema:
            type: string
          examples:
            Get Container Service:
              value: acs1
        - $ref: "#/components/parameters/ApiVersionParameter"
        - $ref: "#/components/parameters/SubscriptionIdParameter"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ContainerService"
              examples:
                Get Container Service:
                  $ref: "#/components/examples/Get_Container_Service"
      summary: Gets the properties of the specified container service.
      tags:
        - ContainerService
    put:
      description: Creates or updates a container service with the specified configuration
        of orchestrator, masters, and agents.
      operationId: ContainerServices_CreateOrUpdate
      parameters:
        - description: The name of the resource group.
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
          examples:
            Create/Update Container Service:
              value: rg1
        - description: The name of the container service in the specified subscription and
            resource group.
          in: path
          name: containerServiceName
          required: true
          schema:
            type: string
          examples:
            Create/Update Container Service:
              value: acs1
        - $ref: "#/components/parameters/ApiVersionParameter"
        - $ref: "#/components/parameters/SubscriptionIdParameter"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ContainerService"
        description: Parameters supplied to the Create or Update a Container Service
          operation.
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ContainerService"
              examples:
                Create/Update Container Service:
                  $ref: "#/components/examples/Create_Update_Container_Service"
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ContainerService"
              examples:
                Create/Update Container Service:
                  $ref: "#/components/examples/Create_Update_Container_Service"
        "202":
          description: Accepted
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ContainerService"
              examples:
                Create/Update Container Service:
                  $ref: "#/components/examples/Create_Update_Container_Service"
      summary: Creates or updates a container service.
      tags:
        - ContainerServices
      x-ms-long-running-operation: true
servers:
  - url: https://management.azure.com
components:
  examples:
    List_Container_Services:
      value:
        value:
          - id: /subscriptions/subid1/resourceGroups/RG1/providers/Microsoft.ContainerService/containerServices/acs1
            location: location1
            name: acs1
            properties:
              agentPoolProfiles:
                - count: 3
                  dnsPrefix: acs1-rg1-e240e5agent
                  fqdn: acs1-rg1-e240e5agent.location1.cloudapp.azure.com
                  name: agentpool0
                  vmSize: Standard_D2_v2
              diagnosticsProfile:
                vmDiagnostics:
                  enabled: true
                  storageUri: https://mjwjtrv73stvgdiag0.blob.core.windows.net/
              linuxProfile:
                adminUsername: azureuser
                ssh:
                  publicKeys:
                    - keyData: |
                        ssh-rsa AAAAB3NzaC1y...+0vNzo1FAdQ== user@hostname.local
              masterProfile:
                count: 1
                dnsPrefix: acs1-rg1-e240e5mgmt
                fqdn: acs1-rg1-e240e5mgmt.location1.cloudapp.azure.com
              orchestratorProfile:
                orchestratorType: DCOS
              provisioningState: Succeeded
            type: Microsoft.ContainerService/ContainerServices
          - id: /subscriptions/subid1/resourceGroups/RG1/providers/Microsoft.ContainerService/containerServices/acs2
            location: location1
            name: acs2
            properties:
              agentPoolProfiles:
                - count: 3
                  dnsPrefix: acs2-rg1-e240e5agent
                  name: agentpool0
                  vmSize: Standard_D2_v2
              diagnosticsProfile:
                vmDiagnostics:
                  enabled: true
              linuxProfile:
                adminUsername: azureuser
                ssh:
                  publicKeys:
                    - keyData: |
                        ssh-rsa AAAAB3NzaC1y...+0vNzo1FAdQ== user@hostname.local
              masterProfile:
                count: 1
                dnsPrefix: acs2-rg1-e240e5mgmt
              orchestratorProfile:
                orchestratorType: DCOS
              provisioningState: Creating
            type: Microsoft.ContainerService/ContainerServices
    List_Container_Services_by_Resource_Group:
      value:
        value:
          - id: /subscriptions/subid1/resourceGroups/RG1/providers/Microsoft.ContainerService/containerServices/acs1
            location: location1
            name: acs1
            properties:
              agentPoolProfiles:
                - count: 3
                  dnsPrefix: acs1-rg1-e240e5agent
                  fqdn: acs1-rg1-e240e5agent.location1.cloudapp.azure.com
                  name: agentpool0
                  vmSize: Standard_D2_v2
              diagnosticsProfile:
                vmDiagnostics:
                  enabled: true
                  storageUri: https://mjwjtrv73stvgdiag0.blob.core.windows.net/
              linuxProfile:
                adminUsername: azureuser
                ssh:
                  publicKeys:
                    - keyData: |
                        ssh-rsa AAAAB3NzaC1y...+0vNzo1FAdQ== user@hostname.local
              masterProfile:
                count: 1
                dnsPrefix: acs1-rg1-e240e5mgmt
                fqdn: acs1-rg1-e240e5mgmt.location1.cloudapp.azure.com
              orchestratorProfile:
                orchestratorType: DCOS
              provisioningState: Succeeded
            type: Microsoft.ContainerService/ContainerServices
          - id: /subscriptions/subid1/resourceGroups/RG1/providers/Microsoft.ContainerService/containerServices/acs2
            location: location1
            name: acs2
            properties:
              agentPoolProfiles:
                - count: 3
                  dnsPrefix: acs2-rg1-e240e5agent
                  name: agentpool0
                  vmSize: Standard_D2_v2
              diagnosticsProfile:
                vmDiagnostics:
                  enabled: true
              linuxProfile:
                adminUsername: azureuser
                ssh:
                  publicKeys:
                    - keyData: |
                        ssh-rsa AAAAB3NzaC1y...+0vNzo1FAdQ== user@hostname.local
              masterProfile:
                count: 1
                dnsPrefix: acs2-rg1-e240e5mgmt
              orchestratorProfile:
                orchestratorType: DCOS
              provisioningState: Creating
            type: Microsoft.ContainerService/ContainerServices
    Get_Container_Service:
      value:
        id: /subscriptions/subid1/resourceGroups/rg1/providers/Microsoft.ContainerService/containerServices/acs1
        location: location1
        name: acs1
        properties:
          agentPoolProfiles:
            - count: 3
              dnsPrefix: acs1-rg1-e240e5agent
              fqdn: acs1-rg1-e240e5agent.location1.cloudapp.azure.com
              name: agentpool0
              vmSize: Standard_D2_v2
          diagnosticsProfile:
            vmDiagnostics:
              enabled: true
              storageUri: https://mjwjtrv73stvgdiag0.blob.core.windows.net/
          linuxProfile:
            adminUsername: azureuser
            ssh:
              publicKeys:
                - keyData: |
                    ssh-rsa AAAAB3NzaC1y...+0vNzo1FAdQ== user@hostname.local
          masterProfile:
            count: 1
            dnsPrefix: acs1-rg1-e240e5mgmt
            fqdn: acs1-rg1-e240e5mgmt.location1.cloudapp.azure.com
          orchestratorProfile:
            orchestratorType: DCOS
          provisioningState: Succeeded
        type: Microsoft.ContainerService/ContainerServices
    Create_Update_Container_Service:
      value:
        id: /subscriptions/subid1/resourceGroups/rg1/providers/Microsoft.ContainerService/containerServices/acs1
        location: location1
        name: acs1
        properties:
          agentPoolProfiles:
            - count: 3
              dnsPrefix: acs1-rg1-e240e5agent
              fqdn: acs1-rg1-e240e5agent.location1.cloudapp.azure.com
              name: agentpool0
              vmSize: Standard_D2_v2
          diagnosticsProfile:
            vmDiagnostics:
              enabled: true
              storageUri: https://mjwjtrv73stvgdiag0.blob.core.windows.net/
          linuxProfile:
            adminUsername: azureuser
            ssh:
              publicKeys:
                - keyData: |
                    ssh-rsa AAAAB3NzaC1y...+0vNzo1FAdQ== user@hostname.local
          masterProfile:
            count: 1
            dnsPrefix: acs1-rg1-e240e5mgmt
            fqdn: acs1-rg1-e240e5mgmt.location1.cloudapp.azure.com
          orchestratorProfile:
            orchestratorType: DCOS
          provisioningState: Creating
        type: Microsoft.ContainerService/ContainerServices
  parameters:
    ApiVersionParameter:
      description: Client Api Version.
      in: query
      name: api-version
      required: true
      schema:
        type: string
      examples:
        List Container Services:
          value: 2017-01-31
        List Container Services by Resource Group:
          value: 2017-01-31
        Delete Container Service:
          value: 2017-01-31
        Get Container Service:
          value: 2017-01-31
        Create/Update Container Service:
          value: 2017-01-31
    SubscriptionIdParameter:
      description: Subscription credentials which uniquely identify Microsoft Azure
        subscription. The subscription ID forms part of the URI for every
        service call.
      in: path
      name: subscriptionId
      required: true
      schema:
        type: string
      examples:
        List Container Services:
          value: subid1
        List Container Services by Resource Group:
          value: subid1
        Delete Container Service:
          value: subid1
        Get Container Service:
          value: subid1
        Create/Update Container Service:
          value: subid1
  securitySchemes:
    azure_auth:
      description: Azure Active Directory OAuth2 Flow
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
          scopes:
            user_impersonation: impersonate your user account
  schemas:
    ContainerService:
      allOf:
        - $ref: "#/components/schemas/Resource"
      description: Container service.
      properties:
        properties:
          $ref: "#/components/schemas/ContainerServiceProperties"
    ContainerServiceAgentPoolProfile:
      description: Profile for the container service agent pool.
      properties:
        count:
          default: 1
          description: "Number of agents (VMs) to host docker containers. Allowed values
            must be in the range of 1 to 100 (inclusive). The default value is
            1. "
          format: int32
          maximum: 100
          minimum: 1
          type: integer
        dnsPrefix:
          description: DNS prefix to be used to create the FQDN for the agent pool.
          type: string
        fqdn:
          description: FQDN for the agent pool.
          readOnly: true
          type: string
        name:
          description: Unique name of the agent pool profile in the context of the
            subscription and resource group.
          type: string
        vmSize:
          description: Size of agent VMs.
          enum:
            - Standard_A0
            - Standard_A1
            - Standard_A2
            - Standard_A3
            - Standard_A4
            - Standard_A5
            - Standard_A6
            - Standard_A7
            - Standard_A8
            - Standard_A9
            - Standard_A10
            - Standard_A11
            - Standard_D1
            - Standard_D2
            - Standard_D3
            - Standard_D4
            - Standard_D11
            - Standard_D12
            - Standard_D13
            - Standard_D14
            - Standard_D1_v2
            - Standard_D2_v2
            - Standard_D3_v2
            - Standard_D4_v2
            - Standard_D5_v2
            - Standard_D11_v2
            - Standard_D12_v2
            - Standard_D13_v2
            - Standard_D14_v2
            - Standard_G1
            - Standard_G2
            - Standard_G3
            - Standard_G4
            - Standard_G5
            - Standard_DS1
            - Standard_DS2
            - Standard_DS3
            - Standard_DS4
            - Standard_DS11
            - Standard_DS12
            - Standard_DS13
            - Standard_DS14
            - Standard_GS1
            - Standard_GS2
            - Standard_GS3
            - Standard_GS4
            - Standard_GS5
          type: string
          x-ms-enum:
            modelAsString: true
            name: ContainerServiceVMSizeTypes
      required:
        - name
        - dnsPrefix
        - count
        - vmSize
    ContainerServiceCustomProfile:
      description: Properties to configure a custom container service cluster.
      properties:
        orchestrator:
          description: The name of the custom orchestrator to use.
          type: string
      required:
        - orchestrator
    ContainerServiceDiagnosticsProfile:
      properties:
        vmDiagnostics:
          $ref: "#/components/schemas/ContainerServiceVMDiagnostics"
      required:
        - vmDiagnostics
    ContainerServiceLinuxProfile:
      description: Profile for Linux VMs in the container service cluster.
      properties:
        adminUsername:
          description: The administrator username to use for Linux VMs.
          pattern: ^[a-z][a-z0-9_-]*$
          type: string
        ssh:
          $ref: "#/components/schemas/ContainerServiceSshConfiguration"
      required:
        - adminUsername
        - ssh
    ContainerServiceListResult:
      description: The response from the List Container Services operation.
      properties:
        nextLink:
          description: The URL to get the next set of container service results.
          type: string
        value:
          description: the list of container services.
          items:
            $ref: "#/components/schemas/ContainerService"
          type: array
    ContainerServiceMasterProfile:
      description: Profile for the container service master.
      properties:
        count:
          default: 1
          description: Number of masters (VMs) in the container service cluster. Allowed
            values are 1, 3, and 5. The default value is 1.
          enum:
            - 1
            - 3
            - 5
          format: int32
          type: integer
        dnsPrefix:
          description: DNS prefix to be used to create the FQDN for master.
          type: string
        fqdn:
          description: FQDN for the master.
          readOnly: true
          type: string
      required:
        - dnsPrefix
    ContainerServiceOrchestratorProfile:
      description: Profile for the container service orchestrator.
      properties:
        orchestratorType:
          description: The orchestrator to use to manage container service cluster
            resources. Valid values are Swarm, DCOS, and Custom.
          enum:
            - Swarm
            - DCOS
            - Custom
            - Kubernetes
          type: string
          x-ms-enum:
            modelAsString: false
            name: ContainerServiceOrchestratorTypes
      required:
        - orchestratorType
    ContainerServiceProperties:
      description: Properties of the container service.
      properties:
        agentPoolProfiles:
          description: Properties of the agent pool.
          items:
            $ref: "#/components/schemas/ContainerServiceAgentPoolProfile"
          type: array
        customProfile:
          $ref: "#/components/schemas/ContainerServiceCustomProfile"
        diagnosticsProfile:
          $ref: "#/components/schemas/ContainerServiceDiagnosticsProfile"
        linuxProfile:
          $ref: "#/components/schemas/ContainerServiceLinuxProfile"
        masterProfile:
          $ref: "#/components/schemas/ContainerServiceMasterProfile"
        orchestratorProfile:
          $ref: "#/components/schemas/ContainerServiceOrchestratorProfile"
        provisioningState:
          description: the current deployment or provisioning state, which only appears in
            the response.
          readOnly: true
          type: string
        servicePrincipalProfile:
          $ref: "#/components/schemas/ContainerServiceServicePrincipalProfile"
        windowsProfile:
          $ref: "#/components/schemas/ContainerServiceWindowsProfile"
      required:
        - masterProfile
        - agentPoolProfiles
        - linuxProfile
    ContainerServiceServicePrincipalProfile:
      description: Information about a service principal identity for the cluster to use
        for manipulating Azure APIs.
      properties:
        clientId:
          description: The ID for the service principal.
          type: string
        secret:
          description: The secret password associated with the service principal.
          type: string
      required:
        - clientId
        - secret
    ContainerServiceSshConfiguration:
      description: SSH configuration for Linux-based VMs running on Azure.
      properties:
        publicKeys:
          description: the list of SSH public keys used to authenticate with Linux-based
            VMs.
          items:
            $ref: "#/components/schemas/ContainerServiceSshPublicKey"
          type: array
      required:
        - publicKeys
    ContainerServiceSshPublicKey:
      description: Contains information about SSH certificate public key data.
      properties:
        keyData:
          description: Certificate public key used to authenticate with VMs through SSH.
            The certificate must be in PEM format with or without headers.
          type: string
      required:
        - keyData
    ContainerServiceVMDiagnostics:
      description: Profile for diagnostics on the container service VMs.
      properties:
        enabled:
          description: Whether the VM diagnostic agent is provisioned on the VM.
          type: boolean
        storageUri:
          description: The URI of the storage account where diagnostics are stored.
          readOnly: true
          type: string
      required:
        - enabled
    ContainerServiceWindowsProfile:
      description: Profile for Windows VMs in the container service cluster.
      properties:
        adminPassword:
          description: The administrator password to use for Windows VMs.
          pattern: ^(?=.*[a-z])(?=.*[A-Z])(?=.*[!@#$%\^&\*\(\)])[a-zA-Z\d!@#$%\^&\*\(\)]{12,123}$
          type: string
        adminUsername:
          description: The administrator username to use for Windows VMs.
          pattern: ^[a-zA-Z0-9]+([._]?[a-zA-Z0-9]+)*$
          type: string
      required:
        - adminUsername
        - adminPassword
    Resource:
      description: The Resource model definition.
      properties:
        id:
          description: Resource Id
          readOnly: true
          type: string
        location:
          description: Resource location
          type: string
        name:
          description: Resource name
          readOnly: true
          type: string
        tags:
          additionalProperties:
            type: string
          description: Resource tags
          type: object
        type:
          description: Resource type
          readOnly: true
          type: string
      required:
        - location
      x-ms-azure-resource: true
