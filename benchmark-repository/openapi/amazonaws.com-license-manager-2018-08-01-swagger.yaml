openapi: 3.0.0
info:
  version: 2018-08-01
  x-release: v4
  title: AWS License Manager
  description: <fullname> AWS License Manager </fullname> <p> <i>This is the AWS License
    Manager API Reference.</i> It provides descriptions, syntax, and usage
    examples for each of the actions and data types for License Manager. The
    topic for each action shows the Query API request parameters and the XML
    response. You can also view the XML request elements in the WSDL. </p> <p>
    Alternatively, you can use one of the AWS SDKs to access an API that's
    tailored to the programming language or platform that you're using. For more
    information, see <a href="http://aws.amazon.com/tools/#SDKs">AWS SDKs</a>.
    </p>
  x-logo:
    url: https://twitter.com/awscloud/profile_image?size=original
    backgroundColor: "#FFFFFF"
  termsOfService: https://aws.amazon.com/service-terms/
  contact:
    name: Mike Ralphson
    email: mike.ralphson@gmail.com
    url: https://github.com/mermade/aws2openapi
    x-twitter: PermittedSoc
  license:
    name: Apache 2.0 License
    url: http://www.apache.org/licenses/
  x-providerName: amazonaws.com
  x-serviceName: license-manager
  x-origin:
    - contentType: application/json
      url: https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/license-manager-2018-08-01.normal.json
      converter:
        url: https://github.com/mermade/aws2openapi
        version: 1.0.0
      x-apisguru-direct: true
  x-apiClientRegistration:
    url: https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct
  x-apisguru-categories:
    - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: https://docs.aws.amazon.com/license-manager/
x-hasEquivalentPaths: true
security:
  - hmac: []
paths:
  /#X-Amz-Target=AWSLicenseManager.CreateLicenseConfiguration:
    post:
      operationId: CreateLicenseConfiguration
      description: Creates a new license configuration object. A license configuration is
        an abstraction of a customer license agreement that can be consumed and
        enforced by License Manager. Components include specifications for the
        license type (licensing by instance, socket, CPU, or VCPU), tenancy
        (shared tenancy, Amazon EC2 Dedicated Instance, Amazon EC2 Dedicated
        Host, or any of these), host affinity (how long a VM must be associated
        with a host), the number of licenses purchased and used.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateLicenseConfigurationResponse"
        "480":
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterValueException"
        "481":
          description: ServerInternalException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServerInternalException"
        "482":
          description: ResourceLimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceLimitExceededException"
        "483":
          description: AuthorizationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthorizationException"
        "484":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "485":
          description: RateLimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RateLimitExceededException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSLicenseManager.CreateLicenseConfiguration
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateLicenseConfigurationRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSLicenseManager.DeleteLicenseConfiguration:
    post:
      operationId: DeleteLicenseConfiguration
      description: Deletes an existing license configuration. This action fails if the
        configuration is in use.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteLicenseConfigurationResponse"
        "480":
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterValueException"
        "481":
          description: ServerInternalException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServerInternalException"
        "482":
          description: AuthorizationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthorizationException"
        "483":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "484":
          description: RateLimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RateLimitExceededException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSLicenseManager.DeleteLicenseConfiguration
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeleteLicenseConfigurationRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSLicenseManager.GetLicenseConfiguration:
    post:
      operationId: GetLicenseConfiguration
      description: Returns a detailed description of a license configuration.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetLicenseConfigurationResponse"
        "480":
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterValueException"
        "481":
          description: ServerInternalException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServerInternalException"
        "482":
          description: AuthorizationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthorizationException"
        "483":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "484":
          description: RateLimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RateLimitExceededException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSLicenseManager.GetLicenseConfiguration
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GetLicenseConfigurationRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSLicenseManager.GetServiceSettings:
    post:
      operationId: GetServiceSettings
      description: "Gets License Manager settings for a region. Exposes the configured S3
        bucket, SNS topic, etc., for inspection. "
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetServiceSettingsResponse"
        "480":
          description: ServerInternalException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServerInternalException"
        "481":
          description: AuthorizationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthorizationException"
        "482":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "483":
          description: RateLimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RateLimitExceededException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSLicenseManager.GetServiceSettings
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GetServiceSettingsRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSLicenseManager.ListAssociationsForLicenseConfiguration:
    post:
      operationId: ListAssociationsForLicenseConfiguration
      description: Lists the resource associations for a license configuration. Resource
        associations need not consume licenses from a license configuration. For
        example, an AMI or a stopped instance may not consume a license
        (depending on the license rules). Use this operation to find all
        resources associated with a license configuration.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListAssociationsForLicenseConfiguration\
                  Response"
        "480":
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterValueException"
        "481":
          description: FilterLimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FilterLimitExceededException"
        "482":
          description: ServerInternalException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServerInternalException"
        "483":
          description: AuthorizationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthorizationException"
        "484":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "485":
          description: RateLimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RateLimitExceededException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSLicenseManager.ListAssociationsForLicenseConfiguration
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ListAssociationsForLicenseConfigurationRe\
                quest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSLicenseManager.ListLicenseConfigurations:
    post:
      operationId: ListLicenseConfigurations
      description: Lists license configuration objects for an account, each containing the
        name, description, license type, and other license terms modeled from a
        license agreement.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListLicenseConfigurationsResponse"
        "480":
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterValueException"
        "481":
          description: ServerInternalException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServerInternalException"
        "482":
          description: FilterLimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FilterLimitExceededException"
        "483":
          description: AuthorizationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthorizationException"
        "484":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "485":
          description: RateLimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RateLimitExceededException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSLicenseManager.ListLicenseConfigurations
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ListLicenseConfigurationsRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSLicenseManager.ListLicenseSpecificationsForResource:
    post:
      operationId: ListLicenseSpecificationsForResource
      description: Returns the license configuration for a resource.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListLicenseSpecificationsForResourceRes\
                  ponse"
        "480":
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterValueException"
        "481":
          description: ServerInternalException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServerInternalException"
        "482":
          description: AuthorizationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthorizationException"
        "483":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "484":
          description: RateLimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RateLimitExceededException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSLicenseManager.ListLicenseSpecificationsForResource
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ListLicenseSpecificationsForResourceReque\
                st"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSLicenseManager.ListResourceInventory:
    post:
      operationId: ListResourceInventory
      description: Returns a detailed list of resources.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListResourceInventoryResponse"
        "480":
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterValueException"
        "481":
          description: ServerInternalException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServerInternalException"
        "482":
          description: FilterLimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FilterLimitExceededException"
        "483":
          description: FailedDependencyException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedDependencyException"
        "484":
          description: AuthorizationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthorizationException"
        "485":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "486":
          description: RateLimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RateLimitExceededException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSLicenseManager.ListResourceInventory
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ListResourceInventoryRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSLicenseManager.ListTagsForResource:
    post:
      operationId: ListTagsForResource
      description: Lists tags attached to a resource.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListTagsForResourceResponse"
        "480":
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterValueException"
        "481":
          description: ServerInternalException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServerInternalException"
        "482":
          description: AuthorizationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthorizationException"
        "483":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "484":
          description: RateLimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RateLimitExceededException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSLicenseManager.ListTagsForResource
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ListTagsForResourceRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSLicenseManager.ListUsageForLicenseConfiguration:
    post:
      operationId: ListUsageForLicenseConfiguration
      description: Lists all license usage records for a license configuration, displaying
        license consumption details by resource at a selected point in time. Use
        this action to audit the current license consumption for any license
        inventory and configuration.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListUsageForLicenseConfigurationResponse"
        "480":
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterValueException"
        "481":
          description: FilterLimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FilterLimitExceededException"
        "482":
          description: ServerInternalException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServerInternalException"
        "483":
          description: AuthorizationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthorizationException"
        "484":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "485":
          description: RateLimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RateLimitExceededException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSLicenseManager.ListUsageForLicenseConfiguration
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ListUsageForLicenseConfigurationRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSLicenseManager.TagResource:
    post:
      operationId: TagResource
      description: Attach one of more tags to any resource.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TagResourceResponse"
        "480":
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterValueException"
        "481":
          description: ServerInternalException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServerInternalException"
        "482":
          description: AuthorizationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthorizationException"
        "483":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "484":
          description: RateLimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RateLimitExceededException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSLicenseManager.TagResource
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TagResourceRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSLicenseManager.UntagResource:
    post:
      operationId: UntagResource
      description: Remove tags from a resource.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UntagResourceResponse"
        "480":
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterValueException"
        "481":
          description: ServerInternalException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServerInternalException"
        "482":
          description: AuthorizationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthorizationException"
        "483":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "484":
          description: RateLimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RateLimitExceededException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSLicenseManager.UntagResource
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UntagResourceRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSLicenseManager.UpdateLicenseConfiguration:
    post:
      operationId: UpdateLicenseConfiguration
      description: Modifies the attributes of an existing license configuration object. A
        license configuration is an abstraction of a customer license agreement
        that can be consumed and enforced by License Manager. Components include
        specifications for the license type (Instances, cores, sockets, VCPUs),
        tenancy (shared or Dedicated Host), host affinity (how long a VM is
        associated with a host), the number of licenses purchased and used.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateLicenseConfigurationResponse"
        "480":
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterValueException"
        "481":
          description: ServerInternalException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServerInternalException"
        "482":
          description: AuthorizationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthorizationException"
        "483":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "484":
          description: RateLimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RateLimitExceededException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSLicenseManager.UpdateLicenseConfiguration
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateLicenseConfigurationRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSLicenseManager.UpdateLicenseSpecificationsForResource:
    post:
      operationId: UpdateLicenseSpecificationsForResource
      description: Adds or removes license configurations for a specified AWS resource.
        This operation currently supports updating the license specifications of
        AMIs, instances, and hosts. Launch templates and AWS CloudFormation
        templates are not managed from this operation as those resources send
        the license configurations directly to a resource creation operation,
        such as <code>RunInstances</code>.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateLicenseSpecificationsForResourceR\
                  esponse"
        "480":
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterValueException"
        "481":
          description: InvalidResourceStateException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidResourceStateException"
        "482":
          description: LicenseUsageException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LicenseUsageException"
        "483":
          description: ServerInternalException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServerInternalException"
        "484":
          description: AuthorizationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthorizationException"
        "485":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "486":
          description: RateLimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RateLimitExceededException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSLicenseManager.UpdateLicenseSpecificationsForResource
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateLicenseSpecificationsForResourceReq\
                uest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSLicenseManager.UpdateServiceSettings:
    post:
      operationId: UpdateServiceSettings
      description: Updates License Manager service settings.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateServiceSettingsResponse"
        "480":
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterValueException"
        "481":
          description: ServerInternalException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServerInternalException"
        "482":
          description: AuthorizationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthorizationException"
        "483":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "484":
          description: RateLimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RateLimitExceededException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSLicenseManager.UpdateServiceSettings
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateServiceSettingsRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
servers:
  - url: http://license-manager.{region}.amazonaws.com
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-south-1
          - sa-east-1
        default: us-east-1
    description: The AWS License Manager multi-region endpoint
  - url: https://license-manager.{region}.amazonaws.com
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-south-1
          - sa-east-1
        default: us-east-1
    description: The AWS License Manager multi-region endpoint
  - url: http://license-manager.{region}.amazonaws.com.cn
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The AWS License Manager endpoint for China (Beijing) and China (Ningxia)
  - url: https://license-manager.{region}.amazonaws.com.cn
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The AWS License Manager endpoint for China (Beijing) and China (Ningxia)
components:
  parameters:
    X-Amz-Content-Sha256:
      name: X-Amz-Content-Sha256
      in: header
      required: false
      schema:
        type: string
    X-Amz-Date:
      name: X-Amz-Date
      in: header
      required: false
      schema:
        type: string
    X-Amz-Algorithm:
      name: X-Amz-Algorithm
      in: header
      required: false
      schema:
        type: string
    X-Amz-Credential:
      name: X-Amz-Credential
      in: header
      required: false
      schema:
        type: string
    X-Amz-Security-Token:
      name: X-Amz-Security-Token
      in: header
      required: false
      schema:
        type: string
    X-Amz-Signature:
      name: X-Amz-Signature
      in: header
      required: false
      schema:
        type: string
    X-Amz-SignedHeaders:
      name: X-Amz-SignedHeaders
      in: header
      required: false
      schema:
        type: string
  securitySchemes:
    hmac:
      type: apiKey
      name: Authorization
      in: header
      description: Amazon Signature authorization v4
      x-amazon-apigateway-authtype: awsSigv4
  schemas:
    CreateLicenseConfigurationResponse:
      type: object
      properties:
        LicenseConfigurationArn:
          $ref: "#/components/schemas/String"
    CreateLicenseConfigurationRequest:
      type: object
      required:
        - Name
        - LicenseCountingType
      properties:
        Name:
          $ref: "#/components/schemas/String"
        Description:
          $ref: "#/components/schemas/String"
        LicenseCountingType:
          $ref: "#/components/schemas/LicenseCountingType"
        LicenseCount:
          $ref: "#/components/schemas/BoxLong"
        LicenseCountHardLimit:
          $ref: "#/components/schemas/BoxBoolean"
        LicenseRules:
          $ref: "#/components/schemas/StringList"
        Tags:
          $ref: "#/components/schemas/TagList"
    InvalidParameterValueException: {}
    ServerInternalException: {}
    ResourceLimitExceededException: {}
    AuthorizationException: {}
    AccessDeniedException: {}
    RateLimitExceededException: {}
    DeleteLicenseConfigurationResponse:
      type: object
      properties: {}
    DeleteLicenseConfigurationRequest:
      type: object
      required:
        - LicenseConfigurationArn
      properties:
        LicenseConfigurationArn:
          $ref: "#/components/schemas/String"
    GetLicenseConfigurationResponse:
      type: object
      properties:
        LicenseConfigurationId:
          $ref: "#/components/schemas/String"
        LicenseConfigurationArn:
          $ref: "#/components/schemas/String"
        Name:
          $ref: "#/components/schemas/String"
        Description:
          $ref: "#/components/schemas/String"
        LicenseCountingType:
          $ref: "#/components/schemas/LicenseCountingType"
        LicenseRules:
          $ref: "#/components/schemas/StringList"
        LicenseCount:
          $ref: "#/components/schemas/BoxLong"
        LicenseCountHardLimit:
          $ref: "#/components/schemas/BoxBoolean"
        ConsumedLicenses:
          $ref: "#/components/schemas/BoxLong"
        Status:
          $ref: "#/components/schemas/String"
        OwnerAccountId:
          $ref: "#/components/schemas/String"
        ConsumedLicenseSummaryList:
          $ref: "#/components/schemas/ConsumedLicenseSummaryList"
        ManagedResourceSummaryList:
          $ref: "#/components/schemas/ManagedResourceSummaryList"
        Tags:
          $ref: "#/components/schemas/TagList"
    GetLicenseConfigurationRequest:
      type: object
      required:
        - LicenseConfigurationArn
      properties:
        LicenseConfigurationArn:
          $ref: "#/components/schemas/String"
    GetServiceSettingsResponse:
      type: object
      properties:
        S3BucketArn:
          $ref: "#/components/schemas/String"
        SnsTopicArn:
          $ref: "#/components/schemas/String"
        OrganizationConfiguration:
          $ref: "#/components/schemas/OrganizationConfiguration"
        EnableCrossAccountsDiscovery:
          $ref: "#/components/schemas/BoxBoolean"
    GetServiceSettingsRequest:
      type: object
      properties: {}
    ListAssociationsForLicenseConfigurationResponse:
      type: object
      properties:
        LicenseConfigurationAssociations:
          $ref: "#/components/schemas/LicenseConfigurationAssociations"
        NextToken:
          $ref: "#/components/schemas/String"
    ListAssociationsForLicenseConfigurationRequest:
      type: object
      required:
        - LicenseConfigurationArn
      properties:
        LicenseConfigurationArn:
          $ref: "#/components/schemas/String"
        MaxResults:
          $ref: "#/components/schemas/BoxInteger"
        NextToken:
          $ref: "#/components/schemas/String"
    FilterLimitExceededException: {}
    ListLicenseConfigurationsResponse:
      type: object
      properties:
        LicenseConfigurations:
          $ref: "#/components/schemas/LicenseConfigurations"
        NextToken:
          $ref: "#/components/schemas/String"
    ListLicenseConfigurationsRequest:
      type: object
      properties:
        LicenseConfigurationArns:
          $ref: "#/components/schemas/StringList"
        MaxResults:
          $ref: "#/components/schemas/BoxInteger"
        NextToken:
          $ref: "#/components/schemas/String"
        Filters:
          $ref: "#/components/schemas/Filters"
    ListLicenseSpecificationsForResourceResponse:
      type: object
      properties:
        LicenseSpecifications:
          $ref: "#/components/schemas/LicenseSpecifications"
        NextToken:
          $ref: "#/components/schemas/String"
    ListLicenseSpecificationsForResourceRequest:
      type: object
      required:
        - ResourceArn
      properties:
        ResourceArn:
          $ref: "#/components/schemas/String"
        MaxResults:
          $ref: "#/components/schemas/BoxInteger"
        NextToken:
          $ref: "#/components/schemas/String"
    ListResourceInventoryResponse:
      type: object
      properties:
        ResourceInventoryList:
          $ref: "#/components/schemas/ResourceInventoryList"
        NextToken:
          $ref: "#/components/schemas/String"
    ListResourceInventoryRequest:
      type: object
      properties:
        MaxResults:
          $ref: "#/components/schemas/BoxInteger"
        NextToken:
          $ref: "#/components/schemas/String"
        Filters:
          $ref: "#/components/schemas/InventoryFilterList"
    FailedDependencyException: {}
    ListTagsForResourceResponse:
      type: object
      properties:
        Tags:
          $ref: "#/components/schemas/TagList"
    ListTagsForResourceRequest:
      type: object
      required:
        - ResourceArn
      properties:
        ResourceArn:
          $ref: "#/components/schemas/String"
    ListUsageForLicenseConfigurationResponse:
      type: object
      properties:
        LicenseConfigurationUsageList:
          $ref: "#/components/schemas/LicenseConfigurationUsageList"
        NextToken:
          $ref: "#/components/schemas/String"
    ListUsageForLicenseConfigurationRequest:
      type: object
      required:
        - LicenseConfigurationArn
      properties:
        LicenseConfigurationArn:
          $ref: "#/components/schemas/String"
        MaxResults:
          $ref: "#/components/schemas/BoxInteger"
        NextToken:
          $ref: "#/components/schemas/String"
        Filters:
          $ref: "#/components/schemas/Filters"
    TagResourceResponse:
      type: object
      properties: {}
    TagResourceRequest:
      type: object
      required:
        - ResourceArn
        - Tags
      properties:
        ResourceArn:
          $ref: "#/components/schemas/String"
        Tags:
          $ref: "#/components/schemas/TagList"
    UntagResourceResponse:
      type: object
      properties: {}
    UntagResourceRequest:
      type: object
      required:
        - ResourceArn
        - TagKeys
      properties:
        ResourceArn:
          $ref: "#/components/schemas/String"
        TagKeys:
          $ref: "#/components/schemas/TagKeyList"
    UpdateLicenseConfigurationResponse:
      type: object
      properties: {}
    UpdateLicenseConfigurationRequest:
      type: object
      required:
        - LicenseConfigurationArn
      properties:
        LicenseConfigurationArn:
          $ref: "#/components/schemas/String"
        LicenseConfigurationStatus:
          $ref: "#/components/schemas/LicenseConfigurationStatus"
        LicenseRules:
          $ref: "#/components/schemas/StringList"
        LicenseCount:
          $ref: "#/components/schemas/BoxLong"
        LicenseCountHardLimit:
          $ref: "#/components/schemas/BoxBoolean"
        Name:
          $ref: "#/components/schemas/String"
        Description:
          $ref: "#/components/schemas/String"
    UpdateLicenseSpecificationsForResourceResponse:
      type: object
      properties: {}
    UpdateLicenseSpecificationsForResourceRequest:
      type: object
      required:
        - ResourceArn
      properties:
        ResourceArn:
          $ref: "#/components/schemas/String"
        AddLicenseSpecifications:
          $ref: "#/components/schemas/LicenseSpecifications"
        RemoveLicenseSpecifications:
          $ref: "#/components/schemas/LicenseSpecifications"
    InvalidResourceStateException: {}
    LicenseUsageException: {}
    UpdateServiceSettingsResponse:
      type: object
      properties: {}
    UpdateServiceSettingsRequest:
      type: object
      properties:
        S3BucketArn:
          $ref: "#/components/schemas/String"
        SnsTopicArn:
          $ref: "#/components/schemas/String"
        OrganizationConfiguration:
          $ref: "#/components/schemas/OrganizationConfiguration"
        EnableCrossAccountsDiscovery:
          $ref: "#/components/schemas/BoxBoolean"
    Boolean:
      type: boolean
    BoxBoolean:
      type: boolean
    BoxInteger:
      type: integer
    BoxLong:
      type: integer
    ResourceType:
      type: string
      enum:
        - EC2_INSTANCE
        - EC2_HOST
        - EC2_AMI
    ConsumedLicenseSummary:
      type: object
      properties:
        ResourceType:
          $ref: "#/components/schemas/ResourceType"
        ConsumedLicenses:
          $ref: "#/components/schemas/BoxLong"
      description: Details about license consumption.
    ConsumedLicenseSummaryList:
      type: array
      items:
        $ref: "#/components/schemas/ConsumedLicenseSummary"
    String:
      type: string
    LicenseCountingType:
      type: string
      enum:
        - vCPU
        - Instance
        - Core
        - Socket
    StringList:
      type: array
      items:
        $ref: "#/components/schemas/String"
    TagList:
      type: array
      items:
        $ref: "#/components/schemas/Tag"
    DateTime:
      type: string
      format: date-time
    FilterName:
      type: string
    FilterValues:
      type: array
      items:
        $ref: "#/components/schemas/FilterValue"
    Filter:
      type: object
      properties:
        Name:
          $ref: "#/components/schemas/FilterName"
        Values:
          $ref: "#/components/schemas/FilterValues"
      description: A filter name and value pair that is used to return a more specific list
        of results from a describe operation. Filters can be used to match a set
        of resources by specific criteria, such as tags, attributes, or IDs. The
        filters supported by a <code>Describe</code> operation are documented
        with the <code>Describe</code> operation.
    FilterValue:
      type: string
    Filters:
      type: array
      items:
        $ref: "#/components/schemas/Filter"
    ManagedResourceSummaryList:
      type: array
      items:
        $ref: "#/components/schemas/ManagedResourceSummary"
    OrganizationConfiguration:
      type: object
      required:
        - EnableIntegration
      properties:
        EnableIntegration:
          $ref: "#/components/schemas/Boolean"
      description: Object containing configuration information for AWS Organizations.
    InventoryFilterCondition:
      type: string
      enum:
        - EQUALS
        - NOT_EQUALS
        - BEGINS_WITH
        - CONTAINS
    InventoryFilter:
      type: object
      required:
        - Name
        - Condition
      properties:
        Name:
          $ref: "#/components/schemas/String"
        Condition:
          $ref: "#/components/schemas/InventoryFilterCondition"
        Value:
          $ref: "#/components/schemas/String"
      description: An inventory filter object.
    InventoryFilterList:
      type: array
      items:
        $ref: "#/components/schemas/InventoryFilter"
    LicenseConfiguration:
      type: object
      properties:
        LicenseConfigurationId:
          $ref: "#/components/schemas/String"
        LicenseConfigurationArn:
          $ref: "#/components/schemas/String"
        Name:
          $ref: "#/components/schemas/String"
        Description:
          $ref: "#/components/schemas/String"
        LicenseCountingType:
          $ref: "#/components/schemas/LicenseCountingType"
        LicenseRules:
          $ref: "#/components/schemas/StringList"
        LicenseCount:
          $ref: "#/components/schemas/BoxLong"
        LicenseCountHardLimit:
          $ref: "#/components/schemas/BoxBoolean"
        ConsumedLicenses:
          $ref: "#/components/schemas/BoxLong"
        Status:
          $ref: "#/components/schemas/String"
        OwnerAccountId:
          $ref: "#/components/schemas/String"
        ConsumedLicenseSummaryList:
          $ref: "#/components/schemas/ConsumedLicenseSummaryList"
        ManagedResourceSummaryList:
          $ref: "#/components/schemas/ManagedResourceSummaryList"
      description: A license configuration is an abstraction of a customer license
        agreement that can be consumed and enforced by License Manager.
        Components include specifications for the license type (licensing by
        instance, socket, CPU, or VCPU), tenancy (shared tenancy, Amazon EC2
        Dedicated Instance, Amazon EC2 Dedicated Host, or any of these), host
        affinity (how long a VM must be associated with a host), the number of
        licenses purchased and used.
    LicenseConfigurationAssociation:
      type: object
      properties:
        ResourceArn:
          $ref: "#/components/schemas/String"
        ResourceType:
          $ref: "#/components/schemas/ResourceType"
        ResourceOwnerId:
          $ref: "#/components/schemas/String"
        AssociationTime:
          $ref: "#/components/schemas/DateTime"
      description: Describes a server resource that is associated with a license
        configuration.
    LicenseConfigurationAssociations:
      type: array
      items:
        $ref: "#/components/schemas/LicenseConfigurationAssociation"
    LicenseConfigurationStatus:
      type: string
      enum:
        - AVAILABLE
        - DISABLED
    LicenseConfigurationUsage:
      type: object
      properties:
        ResourceArn:
          $ref: "#/components/schemas/String"
        ResourceType:
          $ref: "#/components/schemas/ResourceType"
        ResourceStatus:
          $ref: "#/components/schemas/String"
        ResourceOwnerId:
          $ref: "#/components/schemas/String"
        AssociationTime:
          $ref: "#/components/schemas/DateTime"
        ConsumedLicenses:
          $ref: "#/components/schemas/BoxLong"
      description: Contains details of the usage of each resource from the license pool.
    LicenseConfigurationUsageList:
      type: array
      items:
        $ref: "#/components/schemas/LicenseConfigurationUsage"
    LicenseConfigurations:
      type: array
      items:
        $ref: "#/components/schemas/LicenseConfiguration"
    LicenseSpecification:
      type: object
      required:
        - LicenseConfigurationArn
      properties:
        LicenseConfigurationArn:
          $ref: "#/components/schemas/String"
      description: Object used for associating a license configuration with a resource.
    LicenseSpecifications:
      type: array
      items:
        $ref: "#/components/schemas/LicenseSpecification"
    ResourceInventoryList:
      type: array
      items:
        $ref: "#/components/schemas/ResourceInventory"
    ManagedResourceSummary:
      type: object
      properties:
        ResourceType:
          $ref: "#/components/schemas/ResourceType"
        AssociationCount:
          $ref: "#/components/schemas/BoxLong"
      description: Summary for a resource.
    ResourceInventory:
      type: object
      properties:
        ResourceId:
          $ref: "#/components/schemas/String"
        ResourceType:
          $ref: "#/components/schemas/ResourceType"
        ResourceArn:
          $ref: "#/components/schemas/String"
        Platform:
          $ref: "#/components/schemas/String"
        PlatformVersion:
          $ref: "#/components/schemas/String"
        ResourceOwningAccountId:
          $ref: "#/components/schemas/String"
      description: A set of attributes that describe a resource.
    Tag:
      type: object
      properties:
        Key:
          $ref: "#/components/schemas/String"
        Value:
          $ref: "#/components/schemas/String"
      description: Tag for a resource in a key-value format.
    TagKeyList:
      type: array
      items:
        $ref: "#/components/schemas/String"
