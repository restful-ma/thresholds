openapi: 3.0.0
info:
  version: 2016-11-23
  x-release: v4
  title: AWS Step Functions
  description: <fullname>AWS Step Functions</fullname> <p>AWS Step Functions is a service
    that lets you coordinate the components of distributed applications and
    microservices using visual workflows.</p> <p>You can use Step Functions to
    build applications from individual components, each of which performs a
    discrete function, or <i>task</i>, allowing you to scale and change
    applications quickly. Step Functions provides a console that helps visualize
    the components of your application as a series of steps. Step Functions
    automatically triggers and tracks each step, and retries steps when there
    are errors, so your application executes predictably and in the right order
    every time. Step Functions logs the state of each step, so you can quickly
    diagnose and debug any issues.</p> <p>Step Functions manages operations and
    underlying infrastructure to ensure your application is available at any
    scale. You can run tasks on AWS, your own servers, or any system that has
    access to AWS. You can access and use Step Functions using the console, the
    AWS SDKs, or an HTTP API. For more information about Step Functions, see the
    <i> <a
    href="https://docs.aws.amazon.com/step-functions/latest/dg/welcome.html">AWS
    Step Functions Developer Guide</a> </i>.</p>
  x-logo:
    url: https://twitter.com/awscloud/profile_image?size=original
    backgroundColor: "#FFFFFF"
  termsOfService: https://aws.amazon.com/service-terms/
  contact:
    name: Mike Ralphson
    email: mike.ralphson@gmail.com
    url: https://github.com/mermade/aws2openapi
    x-twitter: PermittedSoc
  license:
    name: Apache 2.0 License
    url: http://www.apache.org/licenses/
  x-providerName: amazonaws.com
  x-serviceName: states
  x-origin:
    - contentType: application/json
      url: https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/states-2016-11-23.normal.json
      converter:
        url: https://github.com/mermade/aws2openapi
        version: 1.0.0
      x-apisguru-direct: true
  x-apiClientRegistration:
    url: https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct
  x-apisguru-categories:
    - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: https://docs.aws.amazon.com/states/
x-hasEquivalentPaths: true
security:
  - hmac: []
paths:
  /#X-Amz-Target=AWSStepFunctions.CreateActivity:
    post:
      operationId: CreateActivity
      description: <p>Creates an activity. An activity is a task that you write in any
        programming language and host on any machine that has access to AWS Step
        Functions. Activities must poll Step Functions using the
        <code>GetActivityTask</code> API action and respond using
        <code>SendTask*</code> API actions. This function lets Step Functions
        know the existence of your activity and returns an identifier for use in
        a state machine and when polling from the activity.</p> <note> <p>This
        operation is eventually consistent. The results are best effort and may
        not reflect very recent updates and changes.</p> </note> <note> <p>
        <code>CreateActivity</code> is an idempotent API. Subsequent requests
        won’t create a duplicate resource if it was already created.
        <code>CreateActivity</code>'s idempotency check is based on the activity
        <code>name</code>. If a following request has different
        <code>tags</code> values, Step Functions will ignore these differences
        and treat it as an idempotent request of the previous. In this case,
        <code>tags</code> will not be updated, even if they are different.</p>
        </note>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateActivityOutput"
        "480":
          description: ActivityLimitExceeded
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ActivityLimitExceeded"
        "481":
          description: InvalidName
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidName"
        "482":
          description: TooManyTags
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TooManyTags"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSStepFunctions.CreateActivity
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateActivityInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSStepFunctions.CreateStateMachine:
    post:
      operationId: CreateStateMachine
      description: <p>Creates a state machine. A state machine consists of a collection of
        states that can do work (<code>Task</code> states), determine to which
        states to transition next (<code>Choice</code> states), stop an
        execution with an error (<code>Fail</code> states), and so on. State
        machines are specified using a JSON-based, structured language.</p>
        <note> <p>This operation is eventually consistent. The results are best
        effort and may not reflect very recent updates and changes.</p> </note>
        <note> <p> <code>CreateStateMachine</code> is an idempotent API.
        Subsequent requests won’t create a duplicate resource if it was already
        created. <code>CreateStateMachine</code>'s idempotency check is based on
        the state machine <code>name</code> and <code>definition</code>. If a
        following request has a different <code>roleArn</code> or
        <code>tags</code>, Step Functions will ignore these differences and
        treat it as an idempotent request of the previous. In this case,
        <code>roleArn</code> and <code>tags</code> will not be updated, even if
        they are different.</p> </note>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateStateMachineOutput"
        "480":
          description: InvalidArn
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidArn"
        "481":
          description: InvalidDefinition
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidDefinition"
        "482":
          description: InvalidName
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidName"
        "483":
          description: StateMachineAlreadyExists
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StateMachineAlreadyExists"
        "484":
          description: StateMachineDeleting
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StateMachineDeleting"
        "485":
          description: StateMachineLimitExceeded
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StateMachineLimitExceeded"
        "486":
          description: TooManyTags
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TooManyTags"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSStepFunctions.CreateStateMachine
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateStateMachineInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSStepFunctions.DeleteActivity:
    post:
      operationId: DeleteActivity
      description: Deletes an activity.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteActivityOutput"
        "480":
          description: InvalidArn
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidArn"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSStepFunctions.DeleteActivity
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeleteActivityInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSStepFunctions.DeleteStateMachine:
    post:
      operationId: DeleteStateMachine
      description: "<p>Deletes a state machine. This is an asynchronous operation: It sets
        the state machine's status to <code>DELETING</code> and begins the
        deletion process. Each state machine execution is deleted the next time
        it makes a state transition.</p> <note> <p>The state machine itself is
        deleted after all executions are completed or deleted.</p> </note>"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteStateMachineOutput"
        "480":
          description: InvalidArn
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidArn"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSStepFunctions.DeleteStateMachine
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeleteStateMachineInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSStepFunctions.DescribeActivity:
    post:
      operationId: DescribeActivity
      description: <p>Describes an activity.</p> <note> <p>This operation is eventually
        consistent. The results are best effort and may not reflect very recent
        updates and changes.</p> </note>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeActivityOutput"
        "480":
          description: ActivityDoesNotExist
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ActivityDoesNotExist"
        "481":
          description: InvalidArn
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidArn"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSStepFunctions.DescribeActivity
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DescribeActivityInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSStepFunctions.DescribeExecution:
    post:
      operationId: DescribeExecution
      description: <p>Describes an execution.</p> <note> <p>This operation is eventually
        consistent. The results are best effort and may not reflect very recent
        updates and changes.</p> </note>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeExecutionOutput"
        "480":
          description: ExecutionDoesNotExist
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ExecutionDoesNotExist"
        "481":
          description: InvalidArn
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidArn"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSStepFunctions.DescribeExecution
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DescribeExecutionInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSStepFunctions.DescribeStateMachine:
    post:
      operationId: DescribeStateMachine
      description: <p>Describes a state machine.</p> <note> <p>This operation is eventually
        consistent. The results are best effort and may not reflect very recent
        updates and changes.</p> </note>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeStateMachineOutput"
        "480":
          description: InvalidArn
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidArn"
        "481":
          description: StateMachineDoesNotExist
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StateMachineDoesNotExist"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSStepFunctions.DescribeStateMachine
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DescribeStateMachineInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSStepFunctions.DescribeStateMachineForExecution:
    post:
      operationId: DescribeStateMachineForExecution
      description: <p>Describes the state machine associated with a specific execution.</p>
        <note> <p>This operation is eventually consistent. The results are best
        effort and may not reflect very recent updates and changes.</p> </note>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeStateMachineForExecutionOutput"
        "480":
          description: ExecutionDoesNotExist
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ExecutionDoesNotExist"
        "481":
          description: InvalidArn
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidArn"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSStepFunctions.DescribeStateMachineForExecution
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DescribeStateMachineForExecutionInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSStepFunctions.GetActivityTask:
    post:
      operationId: GetActivityTask
      description: <p>Used by workers to retrieve a task (with the specified activity ARN)
        which has been scheduled for execution by a running state machine. This
        initiates a long poll, where the service holds the HTTP connection open
        and responds as soon as a task becomes available (i.e. an execution of a
        task of this type is needed.) The maximum time the service holds on to
        the request before responding is 60 seconds. If no task is available
        within 60 seconds, the poll returns a <code>taskToken</code> with a null
        string.</p> <important> <p>Workers should set their client side socket
        timeout to at least 65 seconds (5 seconds higher than the maximum time
        the service may hold the poll request).</p> <p>Polling with
        <code>GetActivityTask</code> can cause latency in some implementations.
        See <a
        href="https://docs.aws.amazon.com/step-functions/latest/dg/bp-activity-pollers.html">Avoid
        Latency When Polling for Activity Tasks</a> in the Step Functions
        Developer Guide.</p> </important>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetActivityTaskOutput"
        "480":
          description: ActivityDoesNotExist
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ActivityDoesNotExist"
        "481":
          description: ActivityWorkerLimitExceeded
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ActivityWorkerLimitExceeded"
        "482":
          description: InvalidArn
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidArn"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSStepFunctions.GetActivityTask
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GetActivityTaskInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSStepFunctions.GetExecutionHistory:
    post:
      operationId: GetExecutionHistory
      description: <p>Returns the history of the specified execution as a list of events.
        By default, the results are returned in ascending order of the
        <code>timeStamp</code> of the events. Use the <code>reverseOrder</code>
        parameter to get the latest events first.</p> <p>If
        <code>nextToken</code> is returned, there are more results available.
        The value of <code>nextToken</code> is a unique pagination token for
        each page. Make the call again using the returned token to retrieve the
        next page. Keep all other arguments unchanged. Each pagination token
        expires after 24 hours. Using an expired pagination token will return an
        <i>HTTP 400 InvalidToken</i> error.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetExecutionHistoryOutput"
        "480":
          description: ExecutionDoesNotExist
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ExecutionDoesNotExist"
        "481":
          description: InvalidArn
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidArn"
        "482":
          description: InvalidToken
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidToken"
      parameters:
        - name: maxResults
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: nextToken
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSStepFunctions.GetExecutionHistory
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GetExecutionHistoryInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSStepFunctions.ListActivities:
    post:
      operationId: ListActivities
      description: <p>Lists the existing activities.</p> <p>If <code>nextToken</code> is
        returned, there are more results available. The value of
        <code>nextToken</code> is a unique pagination token for each page. Make
        the call again using the returned token to retrieve the next page. Keep
        all other arguments unchanged. Each pagination token expires after 24
        hours. Using an expired pagination token will return an <i>HTTP 400
        InvalidToken</i> error.</p> <note> <p>This operation is eventually
        consistent. The results are best effort and may not reflect very recent
        updates and changes.</p> </note>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListActivitiesOutput"
        "480":
          description: InvalidToken
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidToken"
      parameters:
        - name: maxResults
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: nextToken
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSStepFunctions.ListActivities
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ListActivitiesInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSStepFunctions.ListExecutions:
    post:
      operationId: ListExecutions
      description: <p>Lists the executions of a state machine that meet the filtering
        criteria. Results are sorted by time, with the most recent execution
        first.</p> <p>If <code>nextToken</code> is returned, there are more
        results available. The value of <code>nextToken</code> is a unique
        pagination token for each page. Make the call again using the returned
        token to retrieve the next page. Keep all other arguments unchanged.
        Each pagination token expires after 24 hours. Using an expired
        pagination token will return an <i>HTTP 400 InvalidToken</i> error.</p>
        <note> <p>This operation is eventually consistent. The results are best
        effort and may not reflect very recent updates and changes.</p> </note>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListExecutionsOutput"
        "480":
          description: InvalidArn
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidArn"
        "481":
          description: InvalidToken
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidToken"
        "482":
          description: StateMachineDoesNotExist
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StateMachineDoesNotExist"
      parameters:
        - name: maxResults
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: nextToken
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSStepFunctions.ListExecutions
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ListExecutionsInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSStepFunctions.ListStateMachines:
    post:
      operationId: ListStateMachines
      description: <p>Lists the existing state machines.</p> <p>If <code>nextToken</code>
        is returned, there are more results available. The value of
        <code>nextToken</code> is a unique pagination token for each page. Make
        the call again using the returned token to retrieve the next page. Keep
        all other arguments unchanged. Each pagination token expires after 24
        hours. Using an expired pagination token will return an <i>HTTP 400
        InvalidToken</i> error.</p> <note> <p>This operation is eventually
        consistent. The results are best effort and may not reflect very recent
        updates and changes.</p> </note>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListStateMachinesOutput"
        "480":
          description: InvalidToken
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidToken"
      parameters:
        - name: maxResults
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: nextToken
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSStepFunctions.ListStateMachines
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ListStateMachinesInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSStepFunctions.ListTagsForResource:
    post:
      operationId: ListTagsForResource
      description: "<p>List tags for a given resource.</p> <p>Tags may only contain Unicode
        letters, digits, white space, or these symbols: <code>_ . : / = + -
        @</code>.</p>"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListTagsForResourceOutput"
        "480":
          description: InvalidArn
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidArn"
        "481":
          description: ResourceNotFound
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFound"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSStepFunctions.ListTagsForResource
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ListTagsForResourceInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSStepFunctions.SendTaskFailure:
    post:
      operationId: SendTaskFailure
      description: Used by activity workers and task states using the <a
        href="https://docs.aws.amazon.com/step-functions/latest/dg/connect-to-resource.html#connect-wait-token">callback</a>
        pattern to report that the task identified by the <code>taskToken</code>
        failed.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SendTaskFailureOutput"
        "480":
          description: TaskDoesNotExist
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TaskDoesNotExist"
        "481":
          description: InvalidToken
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidToken"
        "482":
          description: TaskTimedOut
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TaskTimedOut"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSStepFunctions.SendTaskFailure
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SendTaskFailureInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSStepFunctions.SendTaskHeartbeat:
    post:
      operationId: SendTaskHeartbeat
      description: <p>Used by activity workers and task states using the <a
        href="https://docs.aws.amazon.com/step-functions/latest/dg/connect-to-resource.html#connect-wait-token">callback</a>
        pattern to report to Step Functions that the task represented by the
        specified <code>taskToken</code> is still making progress. This action
        resets the <code>Heartbeat</code> clock. The <code>Heartbeat</code>
        threshold is specified in the state machine's Amazon States Language
        definition (<code>HeartbeatSeconds</code>). This action does not in
        itself create an event in the execution history. However, if the task
        times out, the execution history contains an
        <code>ActivityTimedOut</code> entry for activities, or a
        <code>TaskTimedOut</code> entry for for tasks using the <a
        href="https://docs.aws.amazon.com/step-functions/latest/dg/connect-to-resource.html#connect-sync">job
        run</a> or <a
        href="https://docs.aws.amazon.com/step-functions/latest/dg/connect-to-resource.html#connect-wait-token">callback</a>
        pattern.</p> <note> <p>The <code>Timeout</code> of a task, defined in
        the state machine's Amazon States Language definition, is its maximum
        allowed duration, regardless of the number of <a>SendTaskHeartbeat</a>
        requests received. Use <code>HeartbeatSeconds</code> to configure the
        timeout interval for heartbeats.</p> </note>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SendTaskHeartbeatOutput"
        "480":
          description: TaskDoesNotExist
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TaskDoesNotExist"
        "481":
          description: InvalidToken
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidToken"
        "482":
          description: TaskTimedOut
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TaskTimedOut"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSStepFunctions.SendTaskHeartbeat
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SendTaskHeartbeatInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSStepFunctions.SendTaskSuccess:
    post:
      operationId: SendTaskSuccess
      description: Used by activity workers and task states using the <a
        href="https://docs.aws.amazon.com/step-functions/latest/dg/connect-to-resource.html#connect-wait-token">callback</a>
        pattern to report that the task identified by the <code>taskToken</code>
        completed successfully.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SendTaskSuccessOutput"
        "480":
          description: TaskDoesNotExist
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TaskDoesNotExist"
        "481":
          description: InvalidOutput
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidOutput"
        "482":
          description: InvalidToken
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidToken"
        "483":
          description: TaskTimedOut
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TaskTimedOut"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSStepFunctions.SendTaskSuccess
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SendTaskSuccessInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSStepFunctions.StartExecution:
    post:
      operationId: StartExecution
      description: <p>Starts a state machine execution.</p> <note> <p>
        <code>StartExecution</code> is idempotent. If
        <code>StartExecution</code> is called with the same name and input as a
        running execution, the call will succeed and return the same response as
        the original request. If the execution is closed or if the input is
        different, it will return a 400 <code>ExecutionAlreadyExists</code>
        error. Names can be reused after 90 days. </p> </note>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StartExecutionOutput"
        "480":
          description: ExecutionLimitExceeded
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ExecutionLimitExceeded"
        "481":
          description: ExecutionAlreadyExists
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ExecutionAlreadyExists"
        "482":
          description: InvalidArn
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidArn"
        "483":
          description: InvalidExecutionInput
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidExecutionInput"
        "484":
          description: InvalidName
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidName"
        "485":
          description: StateMachineDoesNotExist
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StateMachineDoesNotExist"
        "486":
          description: StateMachineDeleting
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StateMachineDeleting"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSStepFunctions.StartExecution
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/StartExecutionInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSStepFunctions.StopExecution:
    post:
      operationId: StopExecution
      description: Stops an execution.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StopExecutionOutput"
        "480":
          description: ExecutionDoesNotExist
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ExecutionDoesNotExist"
        "481":
          description: InvalidArn
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidArn"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSStepFunctions.StopExecution
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/StopExecutionInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSStepFunctions.TagResource:
    post:
      operationId: TagResource
      description: '<p>Add a tag to a Step Functions resource.</p> <p>An array of key-value
        pairs. For more information, see <a
        href="https://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/cost-alloc-tags.html">Using
        Cost Allocation Tags</a> in the <i>AWS Billing and Cost Management User
        Guide</i>, and <a
        href="https://docs.aws.amazon.com/IAM/latest/UserGuide/access_iam-tags.html">Controlling
        Access Using IAM Tags</a>.</p> <p>Tags may only contain Unicode letters,
        digits, white space, or these symbols: <code>_ . : / = + -
        @</code>.</p>'
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TagResourceOutput"
        "480":
          description: InvalidArn
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidArn"
        "481":
          description: ResourceNotFound
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFound"
        "482":
          description: TooManyTags
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TooManyTags"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSStepFunctions.TagResource
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TagResourceInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSStepFunctions.UntagResource:
    post:
      operationId: UntagResource
      description: Remove a tag from a Step Functions resource
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UntagResourceOutput"
        "480":
          description: InvalidArn
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidArn"
        "481":
          description: ResourceNotFound
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFound"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSStepFunctions.UntagResource
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UntagResourceInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSStepFunctions.UpdateStateMachine:
    post:
      operationId: UpdateStateMachine
      description: <p>Updates an existing state machine by modifying its
        <code>definition</code> and/or <code>roleArn</code>. Running executions
        will continue to use the previous <code>definition</code> and
        <code>roleArn</code>. You must include at least one of
        <code>definition</code> or <code>roleArn</code> or you will receive a
        <code>MissingRequiredParameter</code> error.</p> <note> <p>All
        <code>StartExecution</code> calls within a few seconds will use the
        updated <code>definition</code> and <code>roleArn</code>. Executions
        started immediately after calling <code>UpdateStateMachine</code> may
        use the previous state machine <code>definition</code> and
        <code>roleArn</code>. </p> </note>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateStateMachineOutput"
        "480":
          description: InvalidArn
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidArn"
        "481":
          description: InvalidDefinition
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidDefinition"
        "482":
          description: MissingRequiredParameter
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MissingRequiredParameter"
        "483":
          description: StateMachineDeleting
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StateMachineDeleting"
        "484":
          description: StateMachineDoesNotExist
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StateMachineDoesNotExist"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSStepFunctions.UpdateStateMachine
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateStateMachineInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
servers:
  - url: http://states.{region}.amazonaws.com
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-south-1
          - sa-east-1
        default: us-east-1
    description: The AWS SFN multi-region endpoint
  - url: https://states.{region}.amazonaws.com
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-south-1
          - sa-east-1
        default: us-east-1
    description: The AWS SFN multi-region endpoint
  - url: http://states.{region}.amazonaws.com.cn
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The AWS SFN endpoint for China (Beijing) and China (Ningxia)
  - url: https://states.{region}.amazonaws.com.cn
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The AWS SFN endpoint for China (Beijing) and China (Ningxia)
components:
  parameters:
    X-Amz-Content-Sha256:
      name: X-Amz-Content-Sha256
      in: header
      required: false
      schema:
        type: string
    X-Amz-Date:
      name: X-Amz-Date
      in: header
      required: false
      schema:
        type: string
    X-Amz-Algorithm:
      name: X-Amz-Algorithm
      in: header
      required: false
      schema:
        type: string
    X-Amz-Credential:
      name: X-Amz-Credential
      in: header
      required: false
      schema:
        type: string
    X-Amz-Security-Token:
      name: X-Amz-Security-Token
      in: header
      required: false
      schema:
        type: string
    X-Amz-Signature:
      name: X-Amz-Signature
      in: header
      required: false
      schema:
        type: string
    X-Amz-SignedHeaders:
      name: X-Amz-SignedHeaders
      in: header
      required: false
      schema:
        type: string
  securitySchemes:
    hmac:
      type: apiKey
      name: Authorization
      in: header
      description: Amazon Signature authorization v4
      x-amazon-apigateway-authtype: awsSigv4
  schemas:
    CreateActivityOutput:
      type: object
      required:
        - activityArn
        - creationDate
      properties:
        activityArn:
          $ref: "#/components/schemas/Arn"
        creationDate:
          $ref: "#/components/schemas/Timestamp"
    CreateActivityInput:
      type: object
      required:
        - name
      properties:
        name:
          $ref: "#/components/schemas/Name"
        tags:
          $ref: "#/components/schemas/TagList"
    ActivityLimitExceeded: {}
    InvalidName: {}
    TooManyTags: {}
    CreateStateMachineOutput:
      type: object
      required:
        - stateMachineArn
        - creationDate
      properties:
        stateMachineArn:
          $ref: "#/components/schemas/Arn"
        creationDate:
          $ref: "#/components/schemas/Timestamp"
    CreateStateMachineInput:
      type: object
      required:
        - name
        - definition
        - roleArn
      properties:
        name:
          $ref: "#/components/schemas/Name"
        definition:
          $ref: "#/components/schemas/Definition"
        roleArn:
          $ref: "#/components/schemas/Arn"
        tags:
          $ref: "#/components/schemas/TagList"
    InvalidArn: {}
    InvalidDefinition: {}
    StateMachineAlreadyExists: {}
    StateMachineDeleting: {}
    StateMachineLimitExceeded: {}
    DeleteActivityOutput:
      type: object
      properties: {}
    DeleteActivityInput:
      type: object
      required:
        - activityArn
      properties:
        activityArn:
          $ref: "#/components/schemas/Arn"
    DeleteStateMachineOutput:
      type: object
      properties: {}
    DeleteStateMachineInput:
      type: object
      required:
        - stateMachineArn
      properties:
        stateMachineArn:
          $ref: "#/components/schemas/Arn"
    DescribeActivityOutput:
      type: object
      required:
        - activityArn
        - name
        - creationDate
      properties:
        activityArn:
          $ref: "#/components/schemas/Arn"
        name:
          $ref: "#/components/schemas/Name"
        creationDate:
          $ref: "#/components/schemas/Timestamp"
    DescribeActivityInput:
      type: object
      required:
        - activityArn
      properties:
        activityArn:
          $ref: "#/components/schemas/Arn"
    ActivityDoesNotExist: {}
    DescribeExecutionOutput:
      type: object
      required:
        - executionArn
        - stateMachineArn
        - status
        - startDate
        - input
      properties:
        executionArn:
          $ref: "#/components/schemas/Arn"
        stateMachineArn:
          $ref: "#/components/schemas/Arn"
        name:
          $ref: "#/components/schemas/Name"
        status:
          $ref: "#/components/schemas/ExecutionStatus"
        startDate:
          $ref: "#/components/schemas/Timestamp"
        stopDate:
          $ref: "#/components/schemas/Timestamp"
        input:
          $ref: "#/components/schemas/SensitiveData"
        output:
          $ref: "#/components/schemas/SensitiveData"
    DescribeExecutionInput:
      type: object
      required:
        - executionArn
      properties:
        executionArn:
          $ref: "#/components/schemas/Arn"
    ExecutionDoesNotExist: {}
    DescribeStateMachineOutput:
      type: object
      required:
        - stateMachineArn
        - name
        - definition
        - roleArn
        - creationDate
      properties:
        stateMachineArn:
          $ref: "#/components/schemas/Arn"
        name:
          $ref: "#/components/schemas/Name"
        status:
          $ref: "#/components/schemas/StateMachineStatus"
        definition:
          $ref: "#/components/schemas/Definition"
        roleArn:
          $ref: "#/components/schemas/Arn"
        creationDate:
          $ref: "#/components/schemas/Timestamp"
    DescribeStateMachineInput:
      type: object
      required:
        - stateMachineArn
      properties:
        stateMachineArn:
          $ref: "#/components/schemas/Arn"
    StateMachineDoesNotExist: {}
    DescribeStateMachineForExecutionOutput:
      type: object
      required:
        - stateMachineArn
        - name
        - definition
        - roleArn
        - updateDate
      properties:
        stateMachineArn:
          $ref: "#/components/schemas/Arn"
        name:
          $ref: "#/components/schemas/Name"
        definition:
          $ref: "#/components/schemas/Definition"
        roleArn:
          $ref: "#/components/schemas/Arn"
        updateDate:
          $ref: "#/components/schemas/Timestamp"
    DescribeStateMachineForExecutionInput:
      type: object
      required:
        - executionArn
      properties:
        executionArn:
          $ref: "#/components/schemas/Arn"
    GetActivityTaskOutput:
      type: object
      properties:
        taskToken:
          $ref: "#/components/schemas/TaskToken"
        input:
          $ref: "#/components/schemas/SensitiveDataJobInput"
    GetActivityTaskInput:
      type: object
      required:
        - activityArn
      properties:
        activityArn:
          $ref: "#/components/schemas/Arn"
        workerName:
          $ref: "#/components/schemas/Name"
    ActivityWorkerLimitExceeded: {}
    GetExecutionHistoryOutput:
      type: object
      required:
        - events
      properties:
        events:
          $ref: "#/components/schemas/HistoryEventList"
        nextToken:
          $ref: "#/components/schemas/PageToken"
    GetExecutionHistoryInput:
      type: object
      required:
        - executionArn
      properties:
        executionArn:
          $ref: "#/components/schemas/Arn"
        maxResults:
          $ref: "#/components/schemas/PageSize"
        reverseOrder:
          $ref: "#/components/schemas/ReverseOrder"
        nextToken:
          $ref: "#/components/schemas/PageToken"
    InvalidToken: {}
    ListActivitiesOutput:
      type: object
      required:
        - activities
      properties:
        activities:
          $ref: "#/components/schemas/ActivityList"
        nextToken:
          $ref: "#/components/schemas/PageToken"
    ListActivitiesInput:
      type: object
      properties:
        maxResults:
          $ref: "#/components/schemas/PageSize"
        nextToken:
          $ref: "#/components/schemas/PageToken"
    ListExecutionsOutput:
      type: object
      required:
        - executions
      properties:
        executions:
          $ref: "#/components/schemas/ExecutionList"
        nextToken:
          $ref: "#/components/schemas/ListExecutionsPageToken"
    ListExecutionsInput:
      type: object
      required:
        - stateMachineArn
      properties:
        stateMachineArn:
          $ref: "#/components/schemas/Arn"
        statusFilter:
          $ref: "#/components/schemas/ExecutionStatus"
        maxResults:
          $ref: "#/components/schemas/PageSize"
        nextToken:
          $ref: "#/components/schemas/ListExecutionsPageToken"
    ListStateMachinesOutput:
      type: object
      required:
        - stateMachines
      properties:
        stateMachines:
          $ref: "#/components/schemas/StateMachineList"
        nextToken:
          $ref: "#/components/schemas/PageToken"
    ListStateMachinesInput:
      type: object
      properties:
        maxResults:
          $ref: "#/components/schemas/PageSize"
        nextToken:
          $ref: "#/components/schemas/PageToken"
    ListTagsForResourceOutput:
      type: object
      properties:
        tags:
          $ref: "#/components/schemas/TagList"
    ListTagsForResourceInput:
      type: object
      required:
        - resourceArn
      properties:
        resourceArn:
          $ref: "#/components/schemas/Arn"
    ResourceNotFound: {}
    SendTaskFailureOutput:
      type: object
      properties: {}
    SendTaskFailureInput:
      type: object
      required:
        - taskToken
      properties:
        taskToken:
          $ref: "#/components/schemas/TaskToken"
        error:
          $ref: "#/components/schemas/SensitiveError"
        cause:
          $ref: "#/components/schemas/SensitiveCause"
    TaskDoesNotExist: {}
    TaskTimedOut: {}
    SendTaskHeartbeatOutput:
      type: object
      properties: {}
    SendTaskHeartbeatInput:
      type: object
      required:
        - taskToken
      properties:
        taskToken:
          $ref: "#/components/schemas/TaskToken"
    SendTaskSuccessOutput:
      type: object
      properties: {}
    SendTaskSuccessInput:
      type: object
      required:
        - taskToken
        - output
      properties:
        taskToken:
          $ref: "#/components/schemas/TaskToken"
        output:
          $ref: "#/components/schemas/SensitiveData"
    InvalidOutput: {}
    StartExecutionOutput:
      type: object
      required:
        - executionArn
        - startDate
      properties:
        executionArn:
          $ref: "#/components/schemas/Arn"
        startDate:
          $ref: "#/components/schemas/Timestamp"
    StartExecutionInput:
      type: object
      required:
        - stateMachineArn
      properties:
        stateMachineArn:
          $ref: "#/components/schemas/Arn"
        name:
          $ref: "#/components/schemas/Name"
        input:
          $ref: "#/components/schemas/SensitiveData"
    ExecutionLimitExceeded: {}
    ExecutionAlreadyExists: {}
    InvalidExecutionInput: {}
    StopExecutionOutput:
      type: object
      required:
        - stopDate
      properties:
        stopDate:
          $ref: "#/components/schemas/Timestamp"
    StopExecutionInput:
      type: object
      required:
        - executionArn
      properties:
        executionArn:
          $ref: "#/components/schemas/Arn"
        error:
          $ref: "#/components/schemas/SensitiveError"
        cause:
          $ref: "#/components/schemas/SensitiveCause"
    TagResourceOutput:
      type: object
      properties: {}
    TagResourceInput:
      type: object
      required:
        - resourceArn
        - tags
      properties:
        resourceArn:
          $ref: "#/components/schemas/Arn"
        tags:
          $ref: "#/components/schemas/TagList"
    UntagResourceOutput:
      type: object
      properties: {}
    UntagResourceInput:
      type: object
      required:
        - resourceArn
        - tagKeys
      properties:
        resourceArn:
          $ref: "#/components/schemas/Arn"
        tagKeys:
          $ref: "#/components/schemas/TagKeyList"
    UpdateStateMachineOutput:
      type: object
      required:
        - updateDate
      properties:
        updateDate:
          $ref: "#/components/schemas/Timestamp"
    UpdateStateMachineInput:
      type: object
      required:
        - stateMachineArn
      properties:
        stateMachineArn:
          $ref: "#/components/schemas/Arn"
        definition:
          $ref: "#/components/schemas/Definition"
        roleArn:
          $ref: "#/components/schemas/Arn"
    MissingRequiredParameter: {}
    SensitiveError:
      type: string
      minLength: 0
      maxLength: 256
      format: password
    SensitiveCause:
      type: string
      minLength: 0
      maxLength: 32768
      format: password
    ActivityFailedEventDetails:
      type: object
      properties:
        error:
          $ref: "#/components/schemas/SensitiveError"
        cause:
          $ref: "#/components/schemas/SensitiveCause"
      description: Contains details about an activity that failed during an execution.
    ActivityListItem:
      type: object
      required:
        - activityArn
        - name
        - creationDate
      properties:
        activityArn:
          $ref: "#/components/schemas/Arn"
        name:
          $ref: "#/components/schemas/Name"
        creationDate:
          $ref: "#/components/schemas/Timestamp"
      description: Contains details about an activity.
    ActivityList:
      type: array
      items:
        $ref: "#/components/schemas/ActivityListItem"
    Arn:
      type: string
      minLength: 1
      maxLength: 256
    Name:
      type: string
      minLength: 1
      maxLength: 80
    Timestamp:
      type: string
      format: date-time
    ActivityScheduleFailedEventDetails:
      type: object
      properties:
        error:
          $ref: "#/components/schemas/SensitiveError"
        cause:
          $ref: "#/components/schemas/SensitiveCause"
      description: Contains details about an activity schedule failure that occurred during
        an execution.
    SensitiveData:
      type: string
      maxLength: 32768
      format: password
    TimeoutInSeconds:
      type: integer
    ActivityScheduledEventDetails:
      type: object
      required:
        - resource
      properties:
        resource:
          $ref: "#/components/schemas/Arn"
        input:
          $ref: "#/components/schemas/SensitiveData"
        timeoutInSeconds:
          $ref: "#/components/schemas/TimeoutInSeconds"
        heartbeatInSeconds:
          $ref: "#/components/schemas/TimeoutInSeconds"
      description: Contains details about an activity scheduled during an execution.
    Identity:
      type: string
      maxLength: 256
    ActivityStartedEventDetails:
      type: object
      properties:
        workerName:
          $ref: "#/components/schemas/Identity"
      description: Contains details about the start of an activity during an execution.
    ActivitySucceededEventDetails:
      type: object
      properties:
        output:
          $ref: "#/components/schemas/SensitiveData"
      description: Contains details about an activity that successfully terminated during
        an execution.
    ActivityTimedOutEventDetails:
      type: object
      properties:
        error:
          $ref: "#/components/schemas/SensitiveError"
        cause:
          $ref: "#/components/schemas/SensitiveCause"
      description: Contains details about an activity timeout that occurred during an
        execution.
    ConnectorParameters:
      type: string
      minLength: 0
      maxLength: 32768
      format: password
    TagList:
      type: array
      items:
        $ref: "#/components/schemas/Tag"
    Definition:
      type: string
      minLength: 1
      maxLength: 1048576
      format: password
    ExecutionStatus:
      type: string
      enum:
        - RUNNING
        - SUCCEEDED
        - FAILED
        - TIMED_OUT
        - ABORTED
    StateMachineStatus:
      type: string
      enum:
        - ACTIVE
        - DELETING
    EventId:
      type: integer
    ExecutionAbortedEventDetails:
      type: object
      properties:
        error:
          $ref: "#/components/schemas/SensitiveError"
        cause:
          $ref: "#/components/schemas/SensitiveCause"
      description: Contains details about an abort of an execution.
    ExecutionFailedEventDetails:
      type: object
      properties:
        error:
          $ref: "#/components/schemas/SensitiveError"
        cause:
          $ref: "#/components/schemas/SensitiveCause"
      description: Contains details about an execution failure event.
    ExecutionListItem:
      type: object
      required:
        - executionArn
        - stateMachineArn
        - name
        - status
        - startDate
      properties:
        executionArn:
          $ref: "#/components/schemas/Arn"
        stateMachineArn:
          $ref: "#/components/schemas/Arn"
        name:
          $ref: "#/components/schemas/Name"
        status:
          $ref: "#/components/schemas/ExecutionStatus"
        startDate:
          $ref: "#/components/schemas/Timestamp"
        stopDate:
          $ref: "#/components/schemas/Timestamp"
      description: Contains details about an execution.
    ExecutionList:
      type: array
      items:
        $ref: "#/components/schemas/ExecutionListItem"
    ExecutionStartedEventDetails:
      type: object
      properties:
        input:
          $ref: "#/components/schemas/SensitiveData"
        roleArn:
          $ref: "#/components/schemas/Arn"
      description: Contains details about the start of the execution.
    ExecutionSucceededEventDetails:
      type: object
      properties:
        output:
          $ref: "#/components/schemas/SensitiveData"
      description: Contains details about the successful termination of the execution.
    ExecutionTimedOutEventDetails:
      type: object
      properties:
        error:
          $ref: "#/components/schemas/SensitiveError"
        cause:
          $ref: "#/components/schemas/SensitiveCause"
      description: Contains details about the execution timeout that occurred during the
        execution.
    TaskToken:
      type: string
      minLength: 1
      maxLength: 1024
    SensitiveDataJobInput:
      type: string
      maxLength: 65536
      format: password
    PageSize:
      type: integer
      minimum: 0
      maximum: 1000
    ReverseOrder:
      type: boolean
    PageToken:
      type: string
      minLength: 1
      maxLength: 1024
    HistoryEventList:
      type: array
      description: Contains details about the events that occurred during an execution.
      items:
        $ref: "#/components/schemas/HistoryEvent"
    HistoryEventType:
      type: string
      enum:
        - ActivityFailed
        - ActivityScheduled
        - ActivityScheduleFailed
        - ActivityStarted
        - ActivitySucceeded
        - ActivityTimedOut
        - ChoiceStateEntered
        - ChoiceStateExited
        - ExecutionAborted
        - ExecutionFailed
        - ExecutionStarted
        - ExecutionSucceeded
        - ExecutionTimedOut
        - FailStateEntered
        - LambdaFunctionFailed
        - LambdaFunctionScheduled
        - LambdaFunctionScheduleFailed
        - LambdaFunctionStarted
        - LambdaFunctionStartFailed
        - LambdaFunctionSucceeded
        - LambdaFunctionTimedOut
        - MapIterationAborted
        - MapIterationFailed
        - MapIterationStarted
        - MapIterationSucceeded
        - MapStateAborted
        - MapStateEntered
        - MapStateExited
        - MapStateFailed
        - MapStateStarted
        - MapStateSucceeded
        - ParallelStateAborted
        - ParallelStateEntered
        - ParallelStateExited
        - ParallelStateFailed
        - ParallelStateStarted
        - ParallelStateSucceeded
        - PassStateEntered
        - PassStateExited
        - SucceedStateEntered
        - SucceedStateExited
        - TaskFailed
        - TaskScheduled
        - TaskStarted
        - TaskStartFailed
        - TaskStateAborted
        - TaskStateEntered
        - TaskStateExited
        - TaskSubmitFailed
        - TaskSubmitted
        - TaskSucceeded
        - TaskTimedOut
        - WaitStateAborted
        - WaitStateEntered
        - WaitStateExited
    TaskFailedEventDetails:
      type: object
      required:
        - resourceType
        - resource
      properties:
        resourceType:
          $ref: "#/components/schemas/Name"
        resource:
          $ref: "#/components/schemas/Name"
        error:
          $ref: "#/components/schemas/SensitiveError"
        cause:
          $ref: "#/components/schemas/SensitiveCause"
      description: Contains details about a task failure event.
    TaskScheduledEventDetails:
      type: object
      required:
        - resourceType
        - resource
        - region
        - parameters
      properties:
        resourceType:
          $ref: "#/components/schemas/Name"
        resource:
          $ref: "#/components/schemas/Name"
        region:
          $ref: "#/components/schemas/Name"
        parameters:
          $ref: "#/components/schemas/ConnectorParameters"
        timeoutInSeconds:
          $ref: "#/components/schemas/TimeoutInSeconds"
      description: Contains details about a task scheduled during an execution.
    TaskStartFailedEventDetails:
      type: object
      required:
        - resourceType
        - resource
      properties:
        resourceType:
          $ref: "#/components/schemas/Name"
        resource:
          $ref: "#/components/schemas/Name"
        error:
          $ref: "#/components/schemas/SensitiveError"
        cause:
          $ref: "#/components/schemas/SensitiveCause"
      description: Contains details about a task that failed to start during an execution.
    TaskStartedEventDetails:
      type: object
      required:
        - resourceType
        - resource
      properties:
        resourceType:
          $ref: "#/components/schemas/Name"
        resource:
          $ref: "#/components/schemas/Name"
      description: Contains details about the start of a task during an execution.
    TaskSubmitFailedEventDetails:
      type: object
      required:
        - resourceType
        - resource
      properties:
        resourceType:
          $ref: "#/components/schemas/Name"
        resource:
          $ref: "#/components/schemas/Name"
        error:
          $ref: "#/components/schemas/SensitiveError"
        cause:
          $ref: "#/components/schemas/SensitiveCause"
      description: Contains details about a task that failed to submit during an execution.
    TaskSubmittedEventDetails:
      type: object
      required:
        - resourceType
        - resource
      properties:
        resourceType:
          $ref: "#/components/schemas/Name"
        resource:
          $ref: "#/components/schemas/Name"
        output:
          $ref: "#/components/schemas/SensitiveData"
      description: Contains details about a task submitted to a resource .
    TaskSucceededEventDetails:
      type: object
      required:
        - resourceType
        - resource
      properties:
        resourceType:
          $ref: "#/components/schemas/Name"
        resource:
          $ref: "#/components/schemas/Name"
        output:
          $ref: "#/components/schemas/SensitiveData"
      description: Contains details about the successful completion of a task state.
    TaskTimedOutEventDetails:
      type: object
      required:
        - resourceType
        - resource
      properties:
        resourceType:
          $ref: "#/components/schemas/Name"
        resource:
          $ref: "#/components/schemas/Name"
        error:
          $ref: "#/components/schemas/SensitiveError"
        cause:
          $ref: "#/components/schemas/SensitiveCause"
      description: Contains details about a resource timeout that occurred during an
        execution.
    MapStateStartedEventDetails:
      type: object
      properties:
        length:
          $ref: "#/components/schemas/UnsignedInteger"
      description: Details about a Map state that was started.
    MapIterationEventDetails:
      type: object
      properties:
        name:
          $ref: "#/components/schemas/Name"
        index:
          $ref: "#/components/schemas/UnsignedInteger"
      description: Contains details about an iteration of a Map state.
    LambdaFunctionFailedEventDetails:
      type: object
      properties:
        error:
          $ref: "#/components/schemas/SensitiveError"
        cause:
          $ref: "#/components/schemas/SensitiveCause"
      description: Contains details about a lambda function that failed during an execution.
    LambdaFunctionScheduleFailedEventDetails:
      type: object
      properties:
        error:
          $ref: "#/components/schemas/SensitiveError"
        cause:
          $ref: "#/components/schemas/SensitiveCause"
      description: Contains details about a failed lambda function schedule event that
        occurred during an execution.
    LambdaFunctionScheduledEventDetails:
      type: object
      required:
        - resource
      properties:
        resource:
          $ref: "#/components/schemas/Arn"
        input:
          $ref: "#/components/schemas/SensitiveData"
        timeoutInSeconds:
          $ref: "#/components/schemas/TimeoutInSeconds"
      description: Contains details about a lambda function scheduled during an execution.
    LambdaFunctionStartFailedEventDetails:
      type: object
      properties:
        error:
          $ref: "#/components/schemas/SensitiveError"
        cause:
          $ref: "#/components/schemas/SensitiveCause"
      description: Contains details about a lambda function that failed to start during an
        execution.
    LambdaFunctionSucceededEventDetails:
      type: object
      properties:
        output:
          $ref: "#/components/schemas/SensitiveData"
      description: Contains details about a lambda function that successfully terminated
        during an execution.
    LambdaFunctionTimedOutEventDetails:
      type: object
      properties:
        error:
          $ref: "#/components/schemas/SensitiveError"
        cause:
          $ref: "#/components/schemas/SensitiveCause"
      description: Contains details about a lambda function timeout that occurred during an
        execution.
    StateEnteredEventDetails:
      type: object
      required:
        - name
      properties:
        name:
          $ref: "#/components/schemas/Name"
        input:
          $ref: "#/components/schemas/SensitiveData"
      description: Contains details about a state entered during an execution.
    StateExitedEventDetails:
      type: object
      required:
        - name
      properties:
        name:
          $ref: "#/components/schemas/Name"
        output:
          $ref: "#/components/schemas/SensitiveData"
      description: Contains details about an exit from a state during an execution.
    HistoryEvent:
      type: object
      required:
        - timestamp
        - type
        - id
      properties:
        timestamp:
          $ref: "#/components/schemas/Timestamp"
        type:
          $ref: "#/components/schemas/HistoryEventType"
        id:
          $ref: "#/components/schemas/EventId"
        previousEventId:
          $ref: "#/components/schemas/EventId"
        activityFailedEventDetails:
          $ref: "#/components/schemas/ActivityFailedEventDetails"
        activityScheduleFailedEventDetails:
          $ref: "#/components/schemas/ActivityScheduleFailedEventDetails"
        activityScheduledEventDetails:
          $ref: "#/components/schemas/ActivityScheduledEventDetails"
        activityStartedEventDetails:
          $ref: "#/components/schemas/ActivityStartedEventDetails"
        activitySucceededEventDetails:
          $ref: "#/components/schemas/ActivitySucceededEventDetails"
        activityTimedOutEventDetails:
          $ref: "#/components/schemas/ActivityTimedOutEventDetails"
        taskFailedEventDetails:
          $ref: "#/components/schemas/TaskFailedEventDetails"
        taskScheduledEventDetails:
          $ref: "#/components/schemas/TaskScheduledEventDetails"
        taskStartFailedEventDetails:
          $ref: "#/components/schemas/TaskStartFailedEventDetails"
        taskStartedEventDetails:
          $ref: "#/components/schemas/TaskStartedEventDetails"
        taskSubmitFailedEventDetails:
          $ref: "#/components/schemas/TaskSubmitFailedEventDetails"
        taskSubmittedEventDetails:
          $ref: "#/components/schemas/TaskSubmittedEventDetails"
        taskSucceededEventDetails:
          $ref: "#/components/schemas/TaskSucceededEventDetails"
        taskTimedOutEventDetails:
          $ref: "#/components/schemas/TaskTimedOutEventDetails"
        executionFailedEventDetails:
          $ref: "#/components/schemas/ExecutionFailedEventDetails"
        executionStartedEventDetails:
          $ref: "#/components/schemas/ExecutionStartedEventDetails"
        executionSucceededEventDetails:
          $ref: "#/components/schemas/ExecutionSucceededEventDetails"
        executionAbortedEventDetails:
          $ref: "#/components/schemas/ExecutionAbortedEventDetails"
        executionTimedOutEventDetails:
          $ref: "#/components/schemas/ExecutionTimedOutEventDetails"
        mapStateStartedEventDetails:
          $ref: "#/components/schemas/MapStateStartedEventDetails"
        mapIterationStartedEventDetails:
          $ref: "#/components/schemas/MapIterationEventDetails"
        mapIterationSucceededEventDetails:
          $ref: "#/components/schemas/MapIterationEventDetails"
        mapIterationFailedEventDetails:
          $ref: "#/components/schemas/MapIterationEventDetails"
        mapIterationAbortedEventDetails:
          $ref: "#/components/schemas/MapIterationEventDetails"
        lambdaFunctionFailedEventDetails:
          $ref: "#/components/schemas/LambdaFunctionFailedEventDetails"
        lambdaFunctionScheduleFailedEventDetails:
          $ref: "#/components/schemas/LambdaFunctionScheduleFailedEventDetails"
        lambdaFunctionScheduledEventDetails:
          $ref: "#/components/schemas/LambdaFunctionScheduledEventDetails"
        lambdaFunctionStartFailedEventDetails:
          $ref: "#/components/schemas/LambdaFunctionStartFailedEventDetails"
        lambdaFunctionSucceededEventDetails:
          $ref: "#/components/schemas/LambdaFunctionSucceededEventDetails"
        lambdaFunctionTimedOutEventDetails:
          $ref: "#/components/schemas/LambdaFunctionTimedOutEventDetails"
        stateEnteredEventDetails:
          $ref: "#/components/schemas/StateEnteredEventDetails"
        stateExitedEventDetails:
          $ref: "#/components/schemas/StateExitedEventDetails"
      description: Contains details about the events of an execution.
    ListExecutionsPageToken:
      type: string
      minLength: 1
      maxLength: 3096
    StateMachineList:
      type: array
      items:
        $ref: "#/components/schemas/StateMachineListItem"
    UnsignedInteger:
      type: integer
      minimum: 0
    StateMachineListItem:
      type: object
      required:
        - stateMachineArn
        - name
        - creationDate
      properties:
        stateMachineArn:
          $ref: "#/components/schemas/Arn"
        name:
          $ref: "#/components/schemas/Name"
        creationDate:
          $ref: "#/components/schemas/Timestamp"
      description: Contains details about the state machine.
    TagKey:
      type: string
      minLength: 1
      maxLength: 128
    TagValue:
      type: string
      minLength: 0
      maxLength: 256
    Tag:
      type: object
      properties:
        key:
          $ref: "#/components/schemas/TagKey"
        value:
          $ref: "#/components/schemas/TagValue"
      description: '<p>Tags are key-value pairs that can be associated with Step Functions
        state machines and activities.</p> <p>An array of key-value pairs. For
        more information, see <a
        href="https://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/cost-alloc-tags.html">Using
        Cost Allocation Tags</a> in the <i>AWS Billing and Cost Management User
        Guide</i>, and <a
        href="https://docs.aws.amazon.com/IAM/latest/UserGuide/access_iam-tags.html">Controlling
        Access Using IAM Tags</a>.</p> <p>Tags may only contain Unicode letters,
        digits, white space, or these symbols: <code>_ . : / = + -
        @</code>.</p>'
    TagKeyList:
      type: array
      items:
        $ref: "#/components/schemas/TagKey"
