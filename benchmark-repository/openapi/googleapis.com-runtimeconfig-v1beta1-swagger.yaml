openapi: 3.0.0
info:
  contact:
    name: Google
    url: https://google.com
  description: The Runtime Configurator allows you to dynamically configure and expose
    variables through Google Cloud Platform. In addition, you can also set
    Watchers and Waiters that will watch for changes to your data and return
    based on certain conditions.
  license:
    name: Creative Commons Attribution 3.0
    url: http://creativecommons.org/licenses/by/3.0/
  termsOfService: https://developers.google.com/terms/
  title: Cloud Runtime Configuration
  version: v1beta1
  x-apiClientRegistration:
    url: https://console.developers.google.com
  x-apisguru-categories:
    - cloud
  x-logo:
    url: https://www.google.com/images/branding/googlelogo/2x/googlelogo_color_272x92dp.png
  x-origin:
    - converter:
        url: https://github.com/lucybot/api-spec-converter
        version: 2.7.31
      format: google
      url: https://runtimeconfig.googleapis.com/$discovery/rest?version=v1beta1
      version: v1
  x-preferred: false
  x-providerName: googleapis.com
  x-serviceName: runtimeconfig
externalDocs:
  url: https://cloud.google.com/deployment-manager/runtime-configurator/
tags:
  - name: projects
paths:
  "/v1beta1/{name}":
    delete:
      description: |-
        Deletes a variable or multiple variables.

        If you specify a variable name, then that variable is deleted. If you
        specify a prefix and `recursive` is true, then all variables with that
        prefix are deleted. You must set a `recursive` to true if you delete
        variables by prefix.
      operationId: runtimeconfig.projects.configs.variables.delete
      parameters:
        - description: >-
            The name of the variable to delete, in the format:


            `projects/[PROJECT_ID]/configs/[CONFIG_NAME]/variables/[VARIABLE_NAME]`
          in: path
          name: name
          required: true
          x-reservedExpansion: true
          schema:
            type: string
        - description: |-
            Set to `true` to recursively delete multiple variables with the same
            prefix.
          in: query
          name: recursive
          schema:
            type: boolean
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Empty"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloudruntimeconfig
          Oauth2c:
            - https://www.googleapis.com/auth/cloudruntimeconfig
      tags:
        - projects
    get:
      description: Gets information about a single variable.
      operationId: runtimeconfig.projects.configs.variables.get
      parameters:
        - description: >-
            The name of the variable to return, in the format:


            `projects/[PROJECT_ID]/configs/[CONFIG_NAME]/variables/[VARIBLE_NAME]`
          in: path
          name: name
          required: true
          x-reservedExpansion: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Variable"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloudruntimeconfig
          Oauth2c:
            - https://www.googleapis.com/auth/cloudruntimeconfig
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/upload_protocol"
    put:
      description: Updates an existing variable with a new value.
      operationId: runtimeconfig.projects.configs.variables.update
      parameters:
        - description: >-
            The name of the variable to update, in the format:


            `projects/[PROJECT_ID]/configs/[CONFIG_NAME]/variables/[VARIABLE_NAME]`
          in: path
          name: name
          required: true
          x-reservedExpansion: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/Variable"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Variable"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloudruntimeconfig
          Oauth2c:
            - https://www.googleapis.com/auth/cloudruntimeconfig
      tags:
        - projects
  "/v1beta1/{name}:watch":
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/upload_protocol"
    post:
      description: >-
        Watches a specific variable and waits for a change in the variable's
        value.

        When there is a change, this method returns the new value or times out.


        If a variable is deleted while being watched, the `variableState` state is

        set to `DELETED` and the method returns the last known variable `value`.


        If you set the deadline for watching to a larger value than internal

        timeout (60 seconds), the current variable value is returned and the

        `variableState` will be `VARIABLE_STATE_UNSPECIFIED`.


        To learn more about creating a watcher, read the

        [Watching a Variable for

        Changes](/deployment-manager/runtime-configurator/watching-a-variable)

        documentation.
      operationId: runtimeconfig.projects.configs.variables.watch
      parameters:
        - description: |-
            The name of the variable to watch, in the format:

            `projects/[PROJECT_ID]/configs/[CONFIG_NAME]`
          in: path
          name: name
          required: true
          x-reservedExpansion: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/WatchVariableRequest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Variable"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloudruntimeconfig
          Oauth2c:
            - https://www.googleapis.com/auth/cloudruntimeconfig
      tags:
        - projects
  "/v1beta1/{parent}/configs":
    get:
      description: Lists all the RuntimeConfig resources within project.
      operationId: runtimeconfig.projects.configs.list
      parameters:
        - description: >-
            Specifies the number of results to return per page. If there are
            fewer

            elements than the specified number, returns all elements.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: |-
            Specifies a page token to use. Set `pageToken` to a `nextPageToken`
            returned by a previous list request to get the next page of results.
          in: query
          name: pageToken
          schema:
            type: string
        - description: >-
            The [project

            ID](https://support.google.com/cloud/answer/6158840?hl=en&ref_topic=6158848)

            for this request, in the format `projects/[PROJECT_ID]`.
          in: path
          name: parent
          required: true
          x-reservedExpansion: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ListConfigsResponse"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloudruntimeconfig
          Oauth2c:
            - https://www.googleapis.com/auth/cloudruntimeconfig
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/upload_protocol"
    post:
      description: |-
        Creates a new RuntimeConfig resource. The configuration name must be
        unique within project.
      operationId: runtimeconfig.projects.configs.create
      parameters:
        - description: >-
            The [project

            ID](https://support.google.com/cloud/answer/6158840?hl=en&ref_topic=6158848)

            for this request, in the format `projects/[PROJECT_ID]`.
          in: path
          name: parent
          required: true
          x-reservedExpansion: true
          schema:
            type: string
        - description: |-
            An optional but recommended unique `request_id`. If the server
            receives two `create()` requests  with the same
            `request_id`, then the second request will be ignored and the
            first resource created and stored in the backend is returned.
            Empty `request_id` fields are ignored.

            It is responsibility of the client to ensure uniqueness of the
            `request_id` strings.

            `request_id` strings are limited to 64 characters.
          in: query
          name: requestId
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RuntimeConfig"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/RuntimeConfig"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloudruntimeconfig
          Oauth2c:
            - https://www.googleapis.com/auth/cloudruntimeconfig
      tags:
        - projects
  "/v1beta1/{parent}/variables":
    get:
      description: |-
        Lists variables within given a configuration, matching any provided
        filters. This only lists variable names, not the values, unless
        `return_values` is true, in which case only variables that user has IAM
        permission to GetVariable will be returned.
      operationId: runtimeconfig.projects.configs.variables.list
      parameters:
        - description: >-
            Filters variables by matching the specified filter. For example:


            `projects/example-project/config/[CONFIG_NAME]/variables/example-variable`.
          in: query
          name: filter
          schema:
            type: string
        - description: >-
            Specifies the number of results to return per page. If there are
            fewer

            elements than the specified number, returns all elements.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: |-
            Specifies a page token to use. Set `pageToken` to a `nextPageToken`
            returned by a previous list request to get the next page of results.
          in: query
          name: pageToken
          schema:
            type: string
        - description: >-
            The path to the RuntimeConfig resource for which you want to list

            variables. The configuration must exist beforehand; the path must be in the

            format:


            `projects/[PROJECT_ID]/configs/[CONFIG_NAME]`
          in: path
          name: parent
          required: true
          x-reservedExpansion: true
          schema:
            type: string
        - description: >-
            The flag indicates whether the user wants to return values of
            variables.

            If true, then only those variables that user has IAM GetVariable permission

            will be returned along with their values.
          in: query
          name: returnValues
          schema:
            type: boolean
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ListVariablesResponse"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloudruntimeconfig
          Oauth2c:
            - https://www.googleapis.com/auth/cloudruntimeconfig
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/upload_protocol"
    post:
      description: >-
        Creates a variable within the given configuration. You cannot create

        a variable with a name that is a prefix of an existing variable name, or a

        name that has an existing variable name as a prefix.


        To learn more about creating a variable, read the

        [Setting and Getting

        Data](/deployment-manager/runtime-configurator/set-and-get-variables)

        documentation.
      operationId: runtimeconfig.projects.configs.variables.create
      parameters:
        - description: >-
            The path to the RutimeConfig resource that this variable should
            belong to.

            The configuration must exist beforehand; the path must be in the format:


            `projects/[PROJECT_ID]/configs/[CONFIG_NAME]`
          in: path
          name: parent
          required: true
          x-reservedExpansion: true
          schema:
            type: string
        - description: |-
            An optional but recommended unique `request_id`. If the server
            receives two `create()` requests  with the same
            `request_id`, then the second request will be ignored and the
            first resource created and stored in the backend is returned.
            Empty `request_id` fields are ignored.

            It is responsibility of the client to ensure uniqueness of the
            `request_id` strings.

            `request_id` strings are limited to 64 characters.
          in: query
          name: requestId
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/Variable"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Variable"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloudruntimeconfig
          Oauth2c:
            - https://www.googleapis.com/auth/cloudruntimeconfig
      tags:
        - projects
  "/v1beta1/{parent}/waiters":
    get:
      description: List waiters within the given configuration.
      operationId: runtimeconfig.projects.configs.waiters.list
      parameters:
        - description: >-
            Specifies the number of results to return per page. If there are
            fewer

            elements than the specified number, returns all elements.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: |-
            Specifies a page token to use. Set `pageToken` to a `nextPageToken`
            returned by a previous list request to get the next page of results.
          in: query
          name: pageToken
          schema:
            type: string
        - description: >-
            The path to the configuration for which you want to get a list of
            waiters.

            The configuration must exist beforehand; the path must be in the format:


            `projects/[PROJECT_ID]/configs/[CONFIG_NAME]`
          in: path
          name: parent
          required: true
          x-reservedExpansion: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ListWaitersResponse"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloudruntimeconfig
          Oauth2c:
            - https://www.googleapis.com/auth/cloudruntimeconfig
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/upload_protocol"
    post:
      description: >-
        Creates a Waiter resource. This operation returns a long-running
        Operation

        resource which can be polled for completion. However, a waiter with the

        given name will exist (and can be retrieved) prior to the operation

        completing. If the operation fails, the failed Waiter resource will

        still exist and must be deleted prior to subsequent creation attempts.
      operationId: runtimeconfig.projects.configs.waiters.create
      parameters:
        - description: >-
            The path to the configuration that will own the waiter.

            The configuration must exist beforehand; the path must be in the format:


            `projects/[PROJECT_ID]/configs/[CONFIG_NAME]`.
          in: path
          name: parent
          required: true
          x-reservedExpansion: true
          schema:
            type: string
        - description: |-
            An optional but recommended unique `request_id`. If the server
            receives two `create()` requests  with the same
            `request_id`, then the second request will be ignored and the
            first resource created and stored in the backend is returned.
            Empty `request_id` fields are ignored.

            It is responsibility of the client to ensure uniqueness of the
            `request_id` strings.

            `request_id` strings are limited to 64 characters.
          in: query
          name: requestId
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Waiter"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloudruntimeconfig
          Oauth2c:
            - https://www.googleapis.com/auth/cloudruntimeconfig
      tags:
        - projects
  "/v1beta1/{resource}:getIamPolicy":
    get:
      description: >-
        Gets the access control policy for a resource.

        Returns an empty policy if the resource exists and does not have a policy

        set.
      operationId: runtimeconfig.projects.configs.getIamPolicy
      parameters:
        - description: >-
            Optional. The policy format version to be returned.


            Valid values are 0, 1, and 3. Requests specifying an invalid value will be

            rejected.


            Requests for policies with any conditional bindings must specify version 3.

            Policies without any conditional bindings may specify any valid value or

            leave the field unset.
          in: query
          name: options.requestedPolicyVersion
          schema:
            type: integer
        - description: >-
            REQUIRED: The resource for which the policy is being requested.

            See the operation documentation for the appropriate value for this field.
          in: path
          name: resource
          required: true
          x-reservedExpansion: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Policy"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloudruntimeconfig
          Oauth2c:
            - https://www.googleapis.com/auth/cloudruntimeconfig
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/upload_protocol"
  "/v1beta1/{resource}:setIamPolicy":
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/upload_protocol"
    post:
      description: |-
        Sets the access control policy on the specified resource. Replaces any
        existing policy.
      operationId: runtimeconfig.projects.configs.setIamPolicy
      parameters:
        - description: >-
            REQUIRED: The resource for which the policy is being specified.

            See the operation documentation for the appropriate value for this field.
          in: path
          name: resource
          required: true
          x-reservedExpansion: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SetIamPolicyRequest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Policy"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloudruntimeconfig
          Oauth2c:
            - https://www.googleapis.com/auth/cloudruntimeconfig
      tags:
        - projects
  "/v1beta1/{resource}:testIamPermissions":
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/upload_protocol"
    post:
      description: >-
        Returns permissions that a caller has on the specified resource.

        If the resource does not exist, this will return an empty set of

        permissions, not a NOT_FOUND error.


        Note: This operation is designed to be used for building permission-aware

        UIs and command-line tools, not for authorization checking. This operation

        may "fail open" without warning.
      operationId: runtimeconfig.projects.configs.variables.testIamPermissions
      parameters:
        - description: >-
            REQUIRED: The resource for which the policy detail is being
            requested.

            See the operation documentation for the appropriate value for this field.
          in: path
          name: resource
          required: true
          x-reservedExpansion: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TestIamPermissionsRequest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/TestIamPermissionsResponse"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloudruntimeconfig
          Oauth2c:
            - https://www.googleapis.com/auth/cloudruntimeconfig
      tags:
        - projects
servers:
  - url: https://runtimeconfig.googleapis.com/
components:
  parameters:
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
          - media
          - proto
        default: json
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    key:
      description: API key. Your API key identifies your project and provides you with API
        access, quota, and reports. Required unless you provide an OAuth 2.0
        token.
      in: query
      name: key
      schema:
        type: string
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
        default: true
    quotaUser:
      description: Available to use for quota purposes for server-side applications. Can be
        any arbitrary string assigned to a user, but should not exceed 40
        characters.
      in: query
      name: quotaUser
      schema:
        type: string
    uploadType:
      description: Legacy upload protocol for media (e.g. "media", "multipart").
      in: query
      name: uploadType
      schema:
        type: string
    upload_protocol:
      description: Upload protocol for media (e.g. "raw", "multipart").
      in: query
      name: upload_protocol
      schema:
        type: string
    _.xgafv:
      description: V1 error format.
      in: query
      name: $.xgafv
      schema:
        type: string
        enum:
          - "1"
          - "2"
  requestBodies:
    Variable:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Variable"
  securitySchemes:
    Oauth2:
      description: Oauth 2.0 implicit authentication
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes:
            https://www.googleapis.com/auth/cloud-platform: View and manage your data across Google Cloud Platform services
            https://www.googleapis.com/auth/cloudruntimeconfig: Manage your Google Cloud Platform services' runtime configuration
    Oauth2c:
      description: Oauth 2.0 accessCode authentication
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          tokenUrl: https://accounts.google.com/o/oauth2/token
          scopes:
            https://www.googleapis.com/auth/cloud-platform: View and manage your data across Google Cloud Platform services
            https://www.googleapis.com/auth/cloudruntimeconfig: Manage your Google Cloud Platform services' runtime configuration
  schemas:
    Binding:
      description: Associates `members` with a `role`.
      properties:
        condition:
          $ref: "#/components/schemas/Expr"
        members:
          description: >+
            Specifies the identities requesting access for a Cloud Platform
            resource.

            `members` can have the following values:


            * `allUsers`: A special identifier that represents anyone who is
               on the internet; with or without a Google account.

            * `allAuthenticatedUsers`: A special identifier that represents anyone
               who is authenticated with a Google account or a service account.

            * `user:{emailid}`: An email address that represents a specific Google
               account. For example, `alice@example.com` .


            * `serviceAccount:{emailid}`: An email address that represents a service
               account. For example, `my-other-app@appspot.gserviceaccount.com`.

            * `group:{emailid}`: An email address that represents a Google group.
               For example, `admins@example.com`.


            * `domain:{domain}`: The G Suite domain (primary) that represents all the
               users of that domain. For example, `google.com` or `example.com`.

          items:
            type: string
          type: array
        role:
          description: |-
            Role that is assigned to `members`.
            For example, `roles/viewer`, `roles/editor`, or `roles/owner`.
          type: string
      type: object
    Cardinality:
      description: >-
        A Cardinality condition for the Waiter resource. A cardinality condition
        is

        met when the number of variables under a specified path prefix reaches a

        predefined number. For example, if you set a Cardinality condition where

        the `path` is set to `/foo` and the number of paths is set to `2`, the

        following variables would meet the condition in a RuntimeConfig resource:


        + `/foo/variable1 = "value1"`

        + `/foo/variable2 = "value2"`

        + `/bar/variable3 = "value3"`


        It would not satisfy the same condition with the `number` set to

        `3`, however, because there is only 2 paths that start with `/foo`.

        Cardinality conditions are recursive; all subtrees under the specific

        path prefix are counted.
      properties:
        number:
          description: |-
            The number variables under the `path` that must exist to meet this
            condition. Defaults to 1 if not specified.
          format: int32
          type: integer
        path:
          description: The root of the variable subtree to monitor. For example, `/foo`.
          type: string
      type: object
    Empty:
      description: >-
        A generic empty message that you can re-use to avoid defining duplicated

        empty messages in your APIs. A typical example is to use it as the request

        or the response type of an API method. For instance:

            service Foo {
              rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);
            }

        The JSON representation for `Empty` is empty JSON object `{}`.
      properties: {}
      type: object
    EndCondition:
      description: The condition that a Waiter resource is waiting for.
      properties:
        cardinality:
          $ref: "#/components/schemas/Cardinality"
      type: object
    Expr:
      description: |-
        Represents an expression text. Example:

            title: "User account presence"
            description: "Determines whether the request has a user account"
            expression: "size(request.user) > 0"
      properties:
        description:
          description: >-
            An optional description of the expression. This is a longer text
            which

            describes the expression, e.g. when hovered over it in a UI.
          type: string
        expression:
          description: |-
            Textual representation of an expression in
            Common Expression Language syntax.

            The application context of the containing message determines which
            well-known feature set of CEL is supported.
          type: string
        location:
          description: >-
            An optional string indicating the location of the expression for
            error

            reporting, e.g. a file name and a position in the file.
          type: string
        title:
          description: |-
            An optional title for the expression, i.e. a short string describing
            its purpose. This can be used e.g. in UIs which allow to enter the
            expression.
          type: string
      type: object
    ListConfigsResponse:
      description: |-
        `ListConfigs()` returns the following response. The order of returned
        objects is arbitrary; that is, it is not ordered in any particular way.
      properties:
        configs:
          description: >-
            A list of the configurations in the project. The order of returned

            objects is arbitrary; that is, it is not ordered in any particular way.
          items:
            $ref: "#/components/schemas/RuntimeConfig"
          type: array
        nextPageToken:
          description: >-
            This token allows you to get the next page of results for list
            requests.

            If the number of results is larger than `pageSize`, use the `nextPageToken`

            as a value for the query parameter `pageToken` in the next list request.

            Subsequent list requests will have their own `nextPageToken` to continue

            paging through the results
          type: string
      type: object
    ListVariablesResponse:
      description: Response for the `ListVariables()` method.
      properties:
        nextPageToken:
          description: >-
            This token allows you to get the next page of results for list
            requests.

            If the number of results is larger than `pageSize`, use the `nextPageToken`

            as a value for the query parameter `pageToken` in the next list request.

            Subsequent list requests will have their own `nextPageToken` to continue

            paging through the results
          type: string
        variables:
          description: |-
            A list of variables and their values. The order of returned variable
            objects is arbitrary.
          items:
            $ref: "#/components/schemas/Variable"
          type: array
      type: object
    ListWaitersResponse:
      description: |-
        Response for the `ListWaiters()` method.
        Order of returned waiter objects is arbitrary.
      properties:
        nextPageToken:
          description: >-
            This token allows you to get the next page of results for list
            requests.

            If the number of results is larger than `pageSize`, use the `nextPageToken`

            as a value for the query parameter `pageToken` in the next list request.

            Subsequent list requests will have their own `nextPageToken` to continue

            paging through the results
          type: string
        waiters:
          description: Found waiters in the project.
          items:
            $ref: "#/components/schemas/Waiter"
          type: array
      type: object
    Operation:
      description: >-
        This resource represents a long-running operation that is the result of
        a

        network API call.
      properties:
        done:
          description: >-
            If the value is `false`, it means the operation is still in
            progress.

            If `true`, the operation is completed, and either `error` or `response` is

            available.
          type: boolean
        error:
          $ref: "#/components/schemas/Status"
        metadata:
          additionalProperties:
            description: Properties of the object. Contains field @type with type URL.
          description: >-
            Service-specific metadata associated with the operation.  It
            typically

            contains progress information and common metadata such as create time.

            Some services might not provide such metadata.  Any method that returns a

            long-running operation should document the metadata type, if any.
          type: object
        name:
          description: >-
            The server-assigned name, which is only unique within the same
            service that

            originally returns it. If you use the default HTTP mapping, the

            `name` should be a resource name ending with `operations/{unique_id}`.
          type: string
        response:
          additionalProperties:
            description: Properties of the object. Contains field @type with type URL.
          description: >-
            The normal response of the operation in case of success.  If the
            original

            method returns no data on success, such as `Delete`, the response is

            `google.protobuf.Empty`.  If the original method is standard

            `Get`/`Create`/`Update`, the response should be the resource.  For other

            methods, the response should have the type `XxxResponse`, where `Xxx`

            is the original method name.  For example, if the original method name

            is `TakeSnapshot()`, the inferred response type is

            `TakeSnapshotResponse`.
          type: object
      type: object
    Policy:
      description: >-
        Defines an Identity and Access Management (IAM) policy. It is used to

        specify access control policies for Cloud Platform resources.



        A `Policy` is a collection of `bindings`. A `binding` binds one or more

        `members` to a single `role`. Members can be user accounts, service accounts,

        Google groups, and domains (such as G Suite). A `role` is a named list of

        permissions (defined by IAM or configured by users). A `binding` can

        optionally specify a `condition`, which is a logic expression that further

        constrains the role binding based on attributes about the request and/or

        target resource.


        **JSON Example**

            {
              "bindings": [
                {
                  "role": "roles/resourcemanager.organizationAdmin",
                  "members": [
                    "user:mike@example.com",
                    "group:admins@example.com",
                    "domain:google.com",
                    "serviceAccount:my-project-id@appspot.gserviceaccount.com"
                  ]
                },
                {
                  "role": "roles/resourcemanager.organizationViewer",
                  "members": ["user:eve@example.com"],
                  "condition": {
                    "title": "expirable access",
                    "description": "Does not grant access after Sep 2020",
                    "expression": "request.time <
                    timestamp('2020-10-01T00:00:00.000Z')",
                  }
                }
              ]
            }

        **YAML Example**

            bindings:
            - members:
              - user:mike@example.com
              - group:admins@example.com
              - domain:google.com
              - serviceAccount:my-project-id@appspot.gserviceaccount.com
              role: roles/resourcemanager.organizationAdmin
            - members:
              - user:eve@example.com
              role: roles/resourcemanager.organizationViewer
              condition:
                title: expirable access
                description: Does not grant access after Sep 2020
                expression: request.time < timestamp('2020-10-01T00:00:00.000Z')

        For a description of IAM and its features, see the

        [IAM developer's guide](https://cloud.google.com/iam/docs).
      properties:
        bindings:
          description: |-
            Associates a list of `members` to a `role`. Optionally may specify a
            `condition` that determines when binding is in effect.
            `bindings` with no members will result in an error.
          items:
            $ref: "#/components/schemas/Binding"
          type: array
        etag:
          description: >-
            `etag` is used for optimistic concurrency control as a way to help

            prevent simultaneous updates of a policy from overwriting each other.

            It is strongly suggested that systems make use of the `etag` in the

            read-modify-write cycle to perform policy updates in order to avoid race

            conditions: An `etag` is returned in the response to `getIamPolicy`, and

            systems are expected to put that etag in the request to `setIamPolicy` to

            ensure that their change will be applied to the same version of the policy.


            If no `etag` is provided in the call to `setIamPolicy`, then the existing

            policy is overwritten. Due to blind-set semantics of an etag-less policy,

            'setIamPolicy' will not fail even if either of incoming or stored policy

            does not meet the version requirements.
          format: byte
          type: string
        version:
          description: >-
            Specifies the format of the policy.


            Valid values are 0, 1, and 3. Requests specifying an invalid value will be

            rejected.


            Operations affecting conditional bindings must specify version 3. This can

            be either setting a conditional policy, modifying a conditional binding,

            or removing a conditional binding from the stored conditional policy.

            Operations on non-conditional policies may specify any valid value or

            leave the field unset.


            If no etag is provided in the call to `setIamPolicy`, any version

            compliance checks on the incoming and/or stored policy is skipped.
          format: int32
          type: integer
      type: object
    RuntimeConfig:
      description: >-
        A RuntimeConfig resource is the primary resource in the Cloud
        RuntimeConfig

        service. A RuntimeConfig resource consists of metadata and a hierarchy of

        variables.
      properties:
        description:
          description: An optional description of the RuntimeConfig object.
          type: string
        name:
          description: >-
            The resource name of a runtime config. The name must have the
            format:

                projects/[PROJECT_ID]/configs/[CONFIG_NAME]

            The `[PROJECT_ID]` must be a valid project ID, and `[CONFIG_NAME]` is an

            arbitrary name that matches the

            `[0-9A-Za-z](?:[_.A-Za-z0-9-]{0,62}[_.A-Za-z0-9])?` regular expression.

            The length of `[CONFIG_NAME]` must be less than 64 characters.


            You pick the RuntimeConfig resource name, but the server will validate that

            the name adheres to this format. After you create the resource, you cannot

            change the resource's name.
          type: string
      type: object
    SetIamPolicyRequest:
      description: Request message for `SetIamPolicy` method.
      properties:
        policy:
          $ref: "#/components/schemas/Policy"
      type: object
    Status:
      description: >-
        The `Status` type defines a logical error model that is suitable for

        different programming environments, including REST APIs and RPC APIs. It is

        used by [gRPC](https://github.com/grpc). Each `Status` message contains

        three pieces of data: error code, error message, and error details.


        You can find out more about this error model and how to work with it in the

        [API Design Guide](https://cloud.google.com/apis/design/errors).
      properties:
        code:
          description: The status code, which should be an enum value of google.rpc.Code.
          format: int32
          type: integer
        details:
          description: >-
            A list of messages that carry the error details.  There is a common
            set of

            message types for APIs to use.
          items:
            additionalProperties:
              description: Properties of the object. Contains field @type with type URL.
            type: object
          type: array
        message:
          description: |-
            A developer-facing error message, which should be in English. Any
            user-facing error message should be localized and sent in the
            google.rpc.Status.details field, or localized by the client.
          type: string
      type: object
    TestIamPermissionsRequest:
      description: Request message for `TestIamPermissions` method.
      properties:
        permissions:
          description: >-
            The set of permissions to check for the `resource`. Permissions with

            wildcards (such as '*' or 'storage.*') are not allowed. For more

            information see

            [IAM Overview](https://cloud.google.com/iam/docs/overview#permissions).
          items:
            type: string
          type: array
      type: object
    TestIamPermissionsResponse:
      description: Response message for `TestIamPermissions` method.
      properties:
        permissions:
          description: |-
            A subset of `TestPermissionsRequest.permissions` that the caller is
            allowed.
          items:
            type: string
          type: array
      type: object
    Variable:
      description: >-
        Describes a single variable within a RuntimeConfig resource.

        The name denotes the hierarchical variable name. For example,

        `ports/serving_port` is a valid variable name. The variable value is an

        opaque string and only leaf variables can have values (that is, variables

        that do not have any child variables).
      properties:
        name:
          description: >-
            The name of the variable resource, in the format:

                projects/[PROJECT_ID]/configs/[CONFIG_NAME]/variables/[VARIABLE_NAME]

            The `[PROJECT_ID]` must be a valid project ID, `[CONFIG_NAME]` must be a

            valid RuntimeConfig resource and `[VARIABLE_NAME]` follows Unix file system

            file path naming.


            The `[VARIABLE_NAME]` can contain ASCII letters, numbers, slashes and

            dashes. Slashes are used as path element separators and are not part of the

            `[VARIABLE_NAME]` itself, so `[VARIABLE_NAME]` must contain at least one

            non-slash character. Multiple slashes are coalesced into single slash

            character. Each path segment should match

            [0-9A-Za-z](?:[_.A-Za-z0-9-]{0,62}[_.A-Za-z0-9])? regular expression.

            The length of a `[VARIABLE_NAME]` must be less than 256 characters.


            Once you create a variable, you cannot change the variable name.
          type: string
        state:
          description: |-
            Output only. The current state of the variable. The variable state
            indicates the outcome of the `variables().watch` call and is visible
            through the `get` and `list` calls.
          enum:
            - VARIABLE_STATE_UNSPECIFIED
            - UPDATED
            - DELETED
          type: string
        text:
          description: >-
            The string value of the variable. The length of the value must be
            less

            than 4096 bytes. Empty values are also accepted. For example,

            `text: "my text value"`. The string must be valid UTF-8.
          type: string
        updateTime:
          description: |-
            Output only. The time of the last variable update.
            Timestamp will be UTC timestamp.
          format: google-datetime
          type: string
        value:
          description: >-
            The binary value of the variable. The length of the value must be
            less

            than 4096 bytes. Empty values are also accepted. The value must be

            base64 encoded, and must comply with IETF RFC4648

            (https://www.ietf.org/rfc/rfc4648.txt). Only one of `value` or `text`

            can be set.
          format: byte
          type: string
      type: object
    Waiter:
      description: >-
        A Waiter resource waits for some end condition within a RuntimeConfig

        resource to be met before it returns. For example, assume you have a

        distributed system where each node writes to a Variable resource indicating

        the node's readiness as part of the startup process.


        You then configure a Waiter resource with the success condition set to wait

        until some number of nodes have checked in. Afterwards, your application

        runs some arbitrary code after the condition has been met and the waiter

        returns successfully.


        Once created, a Waiter resource is immutable.


        To learn more about using waiters, read the

        [Creating a

        Waiter](/deployment-manager/runtime-configurator/creating-a-waiter)

        documentation.
      properties:
        createTime:
          description: >-
            Output only. The instant at which this Waiter resource was created.
            Adding

            the value of `timeout` to this instant yields the timeout deadline for the

            waiter.
          format: google-datetime
          type: string
        done:
          description: >-
            Output only. If the value is `false`, it means the waiter is still
            waiting

            for one of its conditions to be met.


            If true, the waiter has finished. If the waiter finished due to a timeout

            or failure, `error` will be set.
          type: boolean
        error:
          $ref: "#/components/schemas/Status"
        failure:
          $ref: "#/components/schemas/EndCondition"
        name:
          description: >-
            The name of the Waiter resource, in the format:

                projects/[PROJECT_ID]/configs/[CONFIG_NAME]/waiters/[WAITER_NAME]

            The `[PROJECT_ID]` must be a valid Google Cloud project ID,

            the `[CONFIG_NAME]` must be a valid RuntimeConfig resource, the

            `[WAITER_NAME]` must match RFC 1035 segment specification, and the length

            of `[WAITER_NAME]` must be less than 64 bytes.


            After you create a Waiter resource, you cannot change the resource name.
          type: string
        success:
          $ref: "#/components/schemas/EndCondition"
        timeout:
          description: >-
            [Required] Specifies the timeout of the waiter in seconds, beginning
            from

            the instant that `waiters().create` method is called. If this time elapses

            before the success or failure conditions are met, the waiter fails and sets

            the `error` code to `DEADLINE_EXCEEDED`.
          format: google-duration
          type: string
      type: object
    WatchVariableRequest:
      description: Request for the `WatchVariable()` method.
      properties:
        newerThan:
          description: >-
            If specified, checks the current timestamp of the variable and if
            the

            current timestamp is newer than `newerThan` timestamp, the method returns

            immediately.


            If not specified or the variable has an older timestamp, the watcher waits

            for a the value to change before returning.
          format: google-datetime
          type: string
      type: object
