openapi: 3.0.0
info:
  contact:
    name: Google
    url: https://google.com
  description: The Deployment Manager API allows users to declaratively configure, deploy
    and run complex solutions on the Google Cloud Platform.
  license:
    name: Creative Commons Attribution 3.0
    url: http://creativecommons.org/licenses/by/3.0/
  termsOfService: https://developers.google.com/terms/
  title: Google Cloud Deployment Manager Alpha
  version: alpha
  x-apiClientRegistration:
    url: https://console.developers.google.com
  x-logo:
    url: https://cloud.google.com/_static/images/new-gcp-logo.png
  x-origin:
    - converter:
        url: https://github.com/lucybot/api-spec-converter
        version: 2.7.31
      format: google
      url: https://www.googleapis.com/discovery/v1/apis/deploymentmanager/alpha/rest
      version: v1
  x-preferred: false
  x-providerName: googleapis.com
  x-serviceName: deploymentmanager
externalDocs:
  url: https://cloud.google.com/deployment-manager/
tags:
  - name: compositeTypes
  - name: deployments
  - name: manifests
  - name: operations
  - name: resources
  - name: typeProviders
  - name: types
paths:
  "/{project}/global/compositeTypes":
    get:
      description: Lists all composite types for Deployment Manager.
      operationId: deploymentmanager.compositeTypes.list
      parameters:
        - description: >-
            A filter expression that filters resources listed in the response.
            The expression must specify the field name, a comparison operator,
            and the value that you want to use for filtering. The value must be
            a string, a number, or a boolean. The comparison operator must be
            either =, !=, >, or <.


            For example, if you are filtering Compute Engine instances, you can exclude instances named example-instance by specifying name != example-instance.


            You can also filter nested fields. For example, you could specify scheduling.automaticRestart = false to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels.


            To filter on multiple expressions, provide each separate expression within parentheses. For example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default, each expression is an AND expression. However, you can include AND and OR expressions explicitly. For example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true).
          in: query
          name: filter
          schema:
            type: string
        - description: "The maximum number of results per page that should be returned. If
            the number of available results is larger than maxResults, Compute
            Engine returns a nextPageToken that can be used to get the next page
            of results in subsequent list requests. Acceptable values are 0 to
            500, inclusive. (Default: 500)"
          in: query
          name: maxResults
          schema:
            type: integer
            minimum: 0
            default: 500
        - description: >-
            Sorts list results by a certain order. By default, results are
            returned in alphanumerical order based on the resource name.


            You can also sort results in descending order based on the creation timestamp using orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first.


            Currently, only sorting by name or creationTimestamp desc is supported.
          in: query
          name: orderBy
          schema:
            type: string
        - description: Specifies a page token to use. Set pageToken to the nextPageToken
            returned by a previous list request to get the next page of results.
          in: query
          name: pageToken
          schema:
            type: string
        - description: The project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/CompositeTypesListResponse"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform.read-only
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform.read-only
        - Oauth2:
            - https://www.googleapis.com/auth/ndev.cloudman
          Oauth2c:
            - https://www.googleapis.com/auth/ndev.cloudman
        - Oauth2:
            - https://www.googleapis.com/auth/ndev.cloudman.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/ndev.cloudman.readonly
      tags:
        - compositeTypes
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Creates a composite type.
      operationId: deploymentmanager.compositeTypes.insert
      parameters:
        - description: The project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/CompositeType"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/ndev.cloudman
          Oauth2c:
            - https://www.googleapis.com/auth/ndev.cloudman
      tags:
        - compositeTypes
  "/{project}/global/compositeTypes/{compositeType}":
    delete:
      description: Deletes a composite type.
      operationId: deploymentmanager.compositeTypes.delete
      parameters:
        - description: The name of the type for this request.
          in: path
          name: compositeType
          required: true
          schema:
            type: string
        - description: The project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/ndev.cloudman
          Oauth2c:
            - https://www.googleapis.com/auth/ndev.cloudman
      tags:
        - compositeTypes
    get:
      description: Gets information about a specific composite type.
      operationId: deploymentmanager.compositeTypes.get
      parameters:
        - description: The name of the composite type for this request.
          in: path
          name: compositeType
          required: true
          schema:
            type: string
        - description: The project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/CompositeType"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform.read-only
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform.read-only
        - Oauth2:
            - https://www.googleapis.com/auth/ndev.cloudman
          Oauth2c:
            - https://www.googleapis.com/auth/ndev.cloudman
        - Oauth2:
            - https://www.googleapis.com/auth/ndev.cloudman.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/ndev.cloudman.readonly
      tags:
        - compositeTypes
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    patch:
      description: Updates a composite type. This method supports patch semantics.
      operationId: deploymentmanager.compositeTypes.patch
      parameters:
        - description: The name of the composite type for this request.
          in: path
          name: compositeType
          required: true
          schema:
            type: string
        - description: The project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/CompositeType"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/ndev.cloudman
          Oauth2c:
            - https://www.googleapis.com/auth/ndev.cloudman
      tags:
        - compositeTypes
    put:
      description: Updates a composite type.
      operationId: deploymentmanager.compositeTypes.update
      parameters:
        - description: The name of the composite type for this request.
          in: path
          name: compositeType
          required: true
          schema:
            type: string
        - description: The project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/CompositeType"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/ndev.cloudman
          Oauth2c:
            - https://www.googleapis.com/auth/ndev.cloudman
      tags:
        - compositeTypes
  "/{project}/global/deployments":
    get:
      description: Lists all deployments for a given project.
      operationId: deploymentmanager.deployments.list
      parameters:
        - description: >-
            A filter expression that filters resources listed in the response.
            The expression must specify the field name, a comparison operator,
            and the value that you want to use for filtering. The value must be
            a string, a number, or a boolean. The comparison operator must be
            either =, !=, >, or <.


            For example, if you are filtering Compute Engine instances, you can exclude instances named example-instance by specifying name != example-instance.


            You can also filter nested fields. For example, you could specify scheduling.automaticRestart = false to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels.


            To filter on multiple expressions, provide each separate expression within parentheses. For example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default, each expression is an AND expression. However, you can include AND and OR expressions explicitly. For example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true).
          in: query
          name: filter
          schema:
            type: string
        - description: "The maximum number of results per page that should be returned. If
            the number of available results is larger than maxResults, Compute
            Engine returns a nextPageToken that can be used to get the next page
            of results in subsequent list requests. Acceptable values are 0 to
            500, inclusive. (Default: 500)"
          in: query
          name: maxResults
          schema:
            type: integer
            minimum: 0
            default: 500
        - description: >-
            Sorts list results by a certain order. By default, results are
            returned in alphanumerical order based on the resource name.


            You can also sort results in descending order based on the creation timestamp using orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first.


            Currently, only sorting by name or creationTimestamp desc is supported.
          in: query
          name: orderBy
          schema:
            type: string
        - description: Specifies a page token to use. Set pageToken to the nextPageToken
            returned by a previous list request to get the next page of results.
          in: query
          name: pageToken
          schema:
            type: string
        - description: The project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/DeploymentsListResponse"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform.read-only
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform.read-only
        - Oauth2:
            - https://www.googleapis.com/auth/ndev.cloudman
          Oauth2c:
            - https://www.googleapis.com/auth/ndev.cloudman
        - Oauth2:
            - https://www.googleapis.com/auth/ndev.cloudman.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/ndev.cloudman.readonly
      tags:
        - deployments
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Creates a deployment and all of the resources described by the
        deployment manifest.
      operationId: deploymentmanager.deployments.insert
      parameters:
        - description: Sets the policy to use for creating new resources.
          in: query
          name: createPolicy
          schema:
            type: string
            enum:
              - ACQUIRE
              - CREATE
              - CREATE_OR_ACQUIRE
            default: CREATE_OR_ACQUIRE
        - description: If set to true, creates a deployment and creates "shell" resources
            but does not actually instantiate these resources. This allows you
            to preview what your deployment looks like. After previewing a
            deployment, you can deploy your resources by making a request with
            the update() method or you can use the cancelPreview() method to
            cancel the preview altogether. Note that the deployment will still
            exist after you cancel the preview and you must separately delete
            this deployment if you want to remove it.
          in: query
          name: preview
          schema:
            type: boolean
        - description: The project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/Deployment"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/ndev.cloudman
          Oauth2c:
            - https://www.googleapis.com/auth/ndev.cloudman
      tags:
        - deployments
  "/{project}/global/deployments/{deployment}":
    delete:
      description: Deletes a deployment and all of the resources in the deployment.
      operationId: deploymentmanager.deployments.delete
      parameters:
        - description: Sets the policy to use for deleting resources.
          in: query
          name: deletePolicy
          schema:
            type: string
            enum:
              - ABANDON
              - DELETE
            default: DELETE
        - description: The name of the deployment for this request.
          in: path
          name: deployment
          required: true
          schema:
            type: string
        - description: The project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/ndev.cloudman
          Oauth2c:
            - https://www.googleapis.com/auth/ndev.cloudman
      tags:
        - deployments
    get:
      description: Gets information about a specific deployment.
      operationId: deploymentmanager.deployments.get
      parameters:
        - description: The name of the deployment for this request.
          in: path
          name: deployment
          required: true
          schema:
            type: string
        - description: The project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Deployment"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform.read-only
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform.read-only
        - Oauth2:
            - https://www.googleapis.com/auth/ndev.cloudman
          Oauth2c:
            - https://www.googleapis.com/auth/ndev.cloudman
        - Oauth2:
            - https://www.googleapis.com/auth/ndev.cloudman.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/ndev.cloudman.readonly
      tags:
        - deployments
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    patch:
      description: Updates a deployment and all of the resources described by the
        deployment manifest. This method supports patch semantics.
      operationId: deploymentmanager.deployments.patch
      parameters:
        - description: Sets the policy to use for creating new resources.
          in: query
          name: createPolicy
          schema:
            type: string
            enum:
              - ACQUIRE
              - CREATE
              - CREATE_OR_ACQUIRE
            default: CREATE_OR_ACQUIRE
        - description: Sets the policy to use for deleting resources.
          in: query
          name: deletePolicy
          schema:
            type: string
            enum:
              - ABANDON
              - DELETE
            default: DELETE
        - description: The name of the deployment for this request.
          in: path
          name: deployment
          required: true
          schema:
            type: string
        - description: If set to true, updates the deployment and creates and updates the
            "shell" resources but does not actually alter or instantiate these
            resources. This allows you to preview what your deployment will look
            like. You can use this intent to preview how an update would affect
            your deployment. You must provide a target.config with a
            configuration if this is set to true. After previewing a deployment,
            you can deploy your resources by making a request with the update()
            or you can cancelPreview() to remove the preview altogether. Note
            that the deployment will still exist after you cancel the preview
            and you must separately delete this deployment if you want to remove
            it.
          in: query
          name: preview
          schema:
            type: boolean
            default: false
        - description: The project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/Deployment"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/ndev.cloudman
          Oauth2c:
            - https://www.googleapis.com/auth/ndev.cloudman
      tags:
        - deployments
    put:
      description: Updates a deployment and all of the resources described by the
        deployment manifest.
      operationId: deploymentmanager.deployments.update
      parameters:
        - description: Sets the policy to use for creating new resources.
          in: query
          name: createPolicy
          schema:
            type: string
            enum:
              - ACQUIRE
              - CREATE
              - CREATE_OR_ACQUIRE
            default: CREATE_OR_ACQUIRE
        - description: Sets the policy to use for deleting resources.
          in: query
          name: deletePolicy
          schema:
            type: string
            enum:
              - ABANDON
              - DELETE
            default: DELETE
        - description: The name of the deployment for this request.
          in: path
          name: deployment
          required: true
          schema:
            type: string
        - description: If set to true, updates the deployment and creates and updates the
            "shell" resources but does not actually alter or instantiate these
            resources. This allows you to preview what your deployment will look
            like. You can use this intent to preview how an update would affect
            your deployment. You must provide a target.config with a
            configuration if this is set to true. After previewing a deployment,
            you can deploy your resources by making a request with the update()
            or you can cancelPreview() to remove the preview altogether. Note
            that the deployment will still exist after you cancel the preview
            and you must separately delete this deployment if you want to remove
            it.
          in: query
          name: preview
          schema:
            type: boolean
            default: false
        - description: The project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/Deployment"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/ndev.cloudman
          Oauth2c:
            - https://www.googleapis.com/auth/ndev.cloudman
      tags:
        - deployments
  "/{project}/global/deployments/{deployment}/cancelPreview":
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Cancels and removes the preview currently associated with the deployment.
      operationId: deploymentmanager.deployments.cancelPreview
      parameters:
        - description: The name of the deployment for this request.
          in: path
          name: deployment
          required: true
          schema:
            type: string
        - description: The project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeploymentsCancelPreviewRequest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/ndev.cloudman
          Oauth2c:
            - https://www.googleapis.com/auth/ndev.cloudman
      tags:
        - deployments
  "/{project}/global/deployments/{deployment}/manifests":
    get:
      description: Lists all manifests for a given deployment.
      operationId: deploymentmanager.manifests.list
      parameters:
        - description: The name of the deployment for this request.
          in: path
          name: deployment
          required: true
          schema:
            type: string
        - description: >-
            A filter expression that filters resources listed in the response.
            The expression must specify the field name, a comparison operator,
            and the value that you want to use for filtering. The value must be
            a string, a number, or a boolean. The comparison operator must be
            either =, !=, >, or <.


            For example, if you are filtering Compute Engine instances, you can exclude instances named example-instance by specifying name != example-instance.


            You can also filter nested fields. For example, you could specify scheduling.automaticRestart = false to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels.


            To filter on multiple expressions, provide each separate expression within parentheses. For example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default, each expression is an AND expression. However, you can include AND and OR expressions explicitly. For example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true).
          in: query
          name: filter
          schema:
            type: string
        - description: "The maximum number of results per page that should be returned. If
            the number of available results is larger than maxResults, Compute
            Engine returns a nextPageToken that can be used to get the next page
            of results in subsequent list requests. Acceptable values are 0 to
            500, inclusive. (Default: 500)"
          in: query
          name: maxResults
          schema:
            type: integer
            minimum: 0
            default: 500
        - description: >-
            Sorts list results by a certain order. By default, results are
            returned in alphanumerical order based on the resource name.


            You can also sort results in descending order based on the creation timestamp using orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first.


            Currently, only sorting by name or creationTimestamp desc is supported.
          in: query
          name: orderBy
          schema:
            type: string
        - description: Specifies a page token to use. Set pageToken to the nextPageToken
            returned by a previous list request to get the next page of results.
          in: query
          name: pageToken
          schema:
            type: string
        - description: The project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ManifestsListResponse"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform.read-only
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform.read-only
        - Oauth2:
            - https://www.googleapis.com/auth/ndev.cloudman
          Oauth2c:
            - https://www.googleapis.com/auth/ndev.cloudman
        - Oauth2:
            - https://www.googleapis.com/auth/ndev.cloudman.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/ndev.cloudman.readonly
      tags:
        - manifests
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
  "/{project}/global/deployments/{deployment}/manifests/{manifest}":
    get:
      description: Gets information about a specific manifest.
      operationId: deploymentmanager.manifests.get
      parameters:
        - description: The name of the deployment for this request.
          in: path
          name: deployment
          required: true
          schema:
            type: string
        - description: The name of the manifest for this request.
          in: path
          name: manifest
          required: true
          schema:
            type: string
        - description: The project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Manifest"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform.read-only
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform.read-only
        - Oauth2:
            - https://www.googleapis.com/auth/ndev.cloudman
          Oauth2c:
            - https://www.googleapis.com/auth/ndev.cloudman
        - Oauth2:
            - https://www.googleapis.com/auth/ndev.cloudman.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/ndev.cloudman.readonly
      tags:
        - manifests
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
  "/{project}/global/deployments/{deployment}/resources":
    get:
      description: Lists all resources in a given deployment.
      operationId: deploymentmanager.resources.list
      parameters:
        - description: The name of the deployment for this request.
          in: path
          name: deployment
          required: true
          schema:
            type: string
        - description: >-
            A filter expression that filters resources listed in the response.
            The expression must specify the field name, a comparison operator,
            and the value that you want to use for filtering. The value must be
            a string, a number, or a boolean. The comparison operator must be
            either =, !=, >, or <.


            For example, if you are filtering Compute Engine instances, you can exclude instances named example-instance by specifying name != example-instance.


            You can also filter nested fields. For example, you could specify scheduling.automaticRestart = false to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels.


            To filter on multiple expressions, provide each separate expression within parentheses. For example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default, each expression is an AND expression. However, you can include AND and OR expressions explicitly. For example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true).
          in: query
          name: filter
          schema:
            type: string
        - description: "The maximum number of results per page that should be returned. If
            the number of available results is larger than maxResults, Compute
            Engine returns a nextPageToken that can be used to get the next page
            of results in subsequent list requests. Acceptable values are 0 to
            500, inclusive. (Default: 500)"
          in: query
          name: maxResults
          schema:
            type: integer
            minimum: 0
            default: 500
        - description: >-
            Sorts list results by a certain order. By default, results are
            returned in alphanumerical order based on the resource name.


            You can also sort results in descending order based on the creation timestamp using orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first.


            Currently, only sorting by name or creationTimestamp desc is supported.
          in: query
          name: orderBy
          schema:
            type: string
        - description: Specifies a page token to use. Set pageToken to the nextPageToken
            returned by a previous list request to get the next page of results.
          in: query
          name: pageToken
          schema:
            type: string
        - description: The project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ResourcesListResponse"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform.read-only
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform.read-only
        - Oauth2:
            - https://www.googleapis.com/auth/ndev.cloudman
          Oauth2c:
            - https://www.googleapis.com/auth/ndev.cloudman
        - Oauth2:
            - https://www.googleapis.com/auth/ndev.cloudman.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/ndev.cloudman.readonly
      tags:
        - resources
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
  "/{project}/global/deployments/{deployment}/resources/{resource}":
    get:
      description: Gets information about a single resource.
      operationId: deploymentmanager.resources.get
      parameters:
        - description: The name of the deployment for this request.
          in: path
          name: deployment
          required: true
          schema:
            type: string
        - description: The project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: The name of the resource for this request.
          in: path
          name: resource
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Resource"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform.read-only
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform.read-only
        - Oauth2:
            - https://www.googleapis.com/auth/ndev.cloudman
          Oauth2c:
            - https://www.googleapis.com/auth/ndev.cloudman
        - Oauth2:
            - https://www.googleapis.com/auth/ndev.cloudman.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/ndev.cloudman.readonly
      tags:
        - resources
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
  "/{project}/global/deployments/{deployment}/stop":
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Stops an ongoing operation. This does not roll back any work that has
        already been completed, but prevents any new work from being started.
      operationId: deploymentmanager.deployments.stop
      parameters:
        - description: The name of the deployment for this request.
          in: path
          name: deployment
          required: true
          schema:
            type: string
        - description: The project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeploymentsStopRequest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/ndev.cloudman
          Oauth2c:
            - https://www.googleapis.com/auth/ndev.cloudman
      tags:
        - deployments
  "/{project}/global/deployments/{resource}/getIamPolicy":
    get:
      description: Gets the access control policy for a resource. May be empty if no such
        policy or resource exists.
      operationId: deploymentmanager.deployments.getIamPolicy
      parameters:
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: Name or id of the resource for this request.
          in: path
          name: resource
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Policy"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/ndev.cloudman
          Oauth2c:
            - https://www.googleapis.com/auth/ndev.cloudman
      tags:
        - deployments
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
  "/{project}/global/deployments/{resource}/setIamPolicy":
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Sets the access control policy on the specified resource. Replaces any
        existing policy.
      operationId: deploymentmanager.deployments.setIamPolicy
      parameters:
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: Name or id of the resource for this request.
          in: path
          name: resource
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GlobalSetPolicyRequest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Policy"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/ndev.cloudman
          Oauth2c:
            - https://www.googleapis.com/auth/ndev.cloudman
      tags:
        - deployments
  "/{project}/global/deployments/{resource}/testIamPermissions":
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Returns permissions that a caller has on the specified resource.
      operationId: deploymentmanager.deployments.testIamPermissions
      parameters:
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: Name or id of the resource for this request.
          in: path
          name: resource
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TestPermissionsRequest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/TestPermissionsResponse"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/ndev.cloudman
          Oauth2c:
            - https://www.googleapis.com/auth/ndev.cloudman
      tags:
        - deployments
  "/{project}/global/operations":
    get:
      description: Lists all operations for a project.
      operationId: deploymentmanager.operations.list
      parameters:
        - description: >-
            A filter expression that filters resources listed in the response.
            The expression must specify the field name, a comparison operator,
            and the value that you want to use for filtering. The value must be
            a string, a number, or a boolean. The comparison operator must be
            either =, !=, >, or <.


            For example, if you are filtering Compute Engine instances, you can exclude instances named example-instance by specifying name != example-instance.


            You can also filter nested fields. For example, you could specify scheduling.automaticRestart = false to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels.


            To filter on multiple expressions, provide each separate expression within parentheses. For example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default, each expression is an AND expression. However, you can include AND and OR expressions explicitly. For example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true).
          in: query
          name: filter
          schema:
            type: string
        - description: "The maximum number of results per page that should be returned. If
            the number of available results is larger than maxResults, Compute
            Engine returns a nextPageToken that can be used to get the next page
            of results in subsequent list requests. Acceptable values are 0 to
            500, inclusive. (Default: 500)"
          in: query
          name: maxResults
          schema:
            type: integer
            minimum: 0
            default: 500
        - description: >-
            Sorts list results by a certain order. By default, results are
            returned in alphanumerical order based on the resource name.


            You can also sort results in descending order based on the creation timestamp using orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first.


            Currently, only sorting by name or creationTimestamp desc is supported.
          in: query
          name: orderBy
          schema:
            type: string
        - description: Specifies a page token to use. Set pageToken to the nextPageToken
            returned by a previous list request to get the next page of results.
          in: query
          name: pageToken
          schema:
            type: string
        - description: The project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/OperationsListResponse"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform.read-only
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform.read-only
        - Oauth2:
            - https://www.googleapis.com/auth/ndev.cloudman
          Oauth2c:
            - https://www.googleapis.com/auth/ndev.cloudman
        - Oauth2:
            - https://www.googleapis.com/auth/ndev.cloudman.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/ndev.cloudman.readonly
      tags:
        - operations
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
  "/{project}/global/operations/{operation}":
    get:
      description: Gets information about a specific operation.
      operationId: deploymentmanager.operations.get
      parameters:
        - description: The name of the operation for this request.
          in: path
          name: operation
          required: true
          schema:
            type: string
        - description: The project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform.read-only
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform.read-only
        - Oauth2:
            - https://www.googleapis.com/auth/ndev.cloudman
          Oauth2c:
            - https://www.googleapis.com/auth/ndev.cloudman
        - Oauth2:
            - https://www.googleapis.com/auth/ndev.cloudman.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/ndev.cloudman.readonly
      tags:
        - operations
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
  "/{project}/global/typeProviders":
    get:
      description: Lists all resource type providers for Deployment Manager.
      operationId: deploymentmanager.typeProviders.list
      parameters:
        - description: >-
            A filter expression that filters resources listed in the response.
            The expression must specify the field name, a comparison operator,
            and the value that you want to use for filtering. The value must be
            a string, a number, or a boolean. The comparison operator must be
            either =, !=, >, or <.


            For example, if you are filtering Compute Engine instances, you can exclude instances named example-instance by specifying name != example-instance.


            You can also filter nested fields. For example, you could specify scheduling.automaticRestart = false to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels.


            To filter on multiple expressions, provide each separate expression within parentheses. For example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default, each expression is an AND expression. However, you can include AND and OR expressions explicitly. For example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true).
          in: query
          name: filter
          schema:
            type: string
        - description: "The maximum number of results per page that should be returned. If
            the number of available results is larger than maxResults, Compute
            Engine returns a nextPageToken that can be used to get the next page
            of results in subsequent list requests. Acceptable values are 0 to
            500, inclusive. (Default: 500)"
          in: query
          name: maxResults
          schema:
            type: integer
            minimum: 0
            default: 500
        - description: >-
            Sorts list results by a certain order. By default, results are
            returned in alphanumerical order based on the resource name.


            You can also sort results in descending order based on the creation timestamp using orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first.


            Currently, only sorting by name or creationTimestamp desc is supported.
          in: query
          name: orderBy
          schema:
            type: string
        - description: Specifies a page token to use. Set pageToken to the nextPageToken
            returned by a previous list request to get the next page of results.
          in: query
          name: pageToken
          schema:
            type: string
        - description: The project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/TypeProvidersListResponse"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform.read-only
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform.read-only
        - Oauth2:
            - https://www.googleapis.com/auth/ndev.cloudman
          Oauth2c:
            - https://www.googleapis.com/auth/ndev.cloudman
        - Oauth2:
            - https://www.googleapis.com/auth/ndev.cloudman.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/ndev.cloudman.readonly
      tags:
        - typeProviders
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Creates a type provider.
      operationId: deploymentmanager.typeProviders.insert
      parameters:
        - description: The project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/TypeProvider"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/ndev.cloudman
          Oauth2c:
            - https://www.googleapis.com/auth/ndev.cloudman
      tags:
        - typeProviders
  "/{project}/global/typeProviders/{typeProvider}":
    delete:
      description: Deletes a type provider.
      operationId: deploymentmanager.typeProviders.delete
      parameters:
        - description: The project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: The name of the type provider for this request.
          in: path
          name: typeProvider
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/ndev.cloudman
          Oauth2c:
            - https://www.googleapis.com/auth/ndev.cloudman
      tags:
        - typeProviders
    get:
      description: Gets information about a specific type provider.
      operationId: deploymentmanager.typeProviders.get
      parameters:
        - description: The project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: The name of the type provider for this request.
          in: path
          name: typeProvider
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/TypeProvider"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform.read-only
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform.read-only
        - Oauth2:
            - https://www.googleapis.com/auth/ndev.cloudman
          Oauth2c:
            - https://www.googleapis.com/auth/ndev.cloudman
        - Oauth2:
            - https://www.googleapis.com/auth/ndev.cloudman.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/ndev.cloudman.readonly
      tags:
        - typeProviders
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    patch:
      description: Updates a type provider. This method supports patch semantics.
      operationId: deploymentmanager.typeProviders.patch
      parameters:
        - description: The project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: The name of the type provider for this request.
          in: path
          name: typeProvider
          required: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/TypeProvider"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/ndev.cloudman
          Oauth2c:
            - https://www.googleapis.com/auth/ndev.cloudman
      tags:
        - typeProviders
    put:
      description: Updates a type provider.
      operationId: deploymentmanager.typeProviders.update
      parameters:
        - description: The project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: The name of the type provider for this request.
          in: path
          name: typeProvider
          required: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/TypeProvider"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/ndev.cloudman
          Oauth2c:
            - https://www.googleapis.com/auth/ndev.cloudman
      tags:
        - typeProviders
  "/{project}/global/typeProviders/{typeProvider}/types":
    get:
      description: Lists all the type info for a TypeProvider.
      operationId: deploymentmanager.typeProviders.listTypes
      parameters:
        - description: >-
            A filter expression that filters resources listed in the response.
            The expression must specify the field name, a comparison operator,
            and the value that you want to use for filtering. The value must be
            a string, a number, or a boolean. The comparison operator must be
            either =, !=, >, or <.


            For example, if you are filtering Compute Engine instances, you can exclude instances named example-instance by specifying name != example-instance.


            You can also filter nested fields. For example, you could specify scheduling.automaticRestart = false to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels.


            To filter on multiple expressions, provide each separate expression within parentheses. For example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default, each expression is an AND expression. However, you can include AND and OR expressions explicitly. For example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true).
          in: query
          name: filter
          schema:
            type: string
        - description: "The maximum number of results per page that should be returned. If
            the number of available results is larger than maxResults, Compute
            Engine returns a nextPageToken that can be used to get the next page
            of results in subsequent list requests. Acceptable values are 0 to
            500, inclusive. (Default: 500)"
          in: query
          name: maxResults
          schema:
            type: integer
            minimum: 0
            default: 500
        - description: >-
            Sorts list results by a certain order. By default, results are
            returned in alphanumerical order based on the resource name.


            You can also sort results in descending order based on the creation timestamp using orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first.


            Currently, only sorting by name or creationTimestamp desc is supported.
          in: query
          name: orderBy
          schema:
            type: string
        - description: Specifies a page token to use. Set pageToken to the nextPageToken
            returned by a previous list request to get the next page of results.
          in: query
          name: pageToken
          schema:
            type: string
        - description: The project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: The name of the type provider for this request.
          in: path
          name: typeProvider
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/TypeProvidersListTypesResponse"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform.read-only
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform.read-only
        - Oauth2:
            - https://www.googleapis.com/auth/ndev.cloudman
          Oauth2c:
            - https://www.googleapis.com/auth/ndev.cloudman
        - Oauth2:
            - https://www.googleapis.com/auth/ndev.cloudman.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/ndev.cloudman.readonly
      tags:
        - typeProviders
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
  "/{project}/global/typeProviders/{typeProvider}/types/{type}":
    get:
      description: Gets a type info for a type provided by a TypeProvider.
      operationId: deploymentmanager.typeProviders.getType
      parameters:
        - description: The project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: The name of the type provider type for this request.
          in: path
          name: type
          required: true
          schema:
            type: string
        - description: The name of the type provider for this request.
          in: path
          name: typeProvider
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/TypeInfo"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform.read-only
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform.read-only
        - Oauth2:
            - https://www.googleapis.com/auth/ndev.cloudman
          Oauth2c:
            - https://www.googleapis.com/auth/ndev.cloudman
        - Oauth2:
            - https://www.googleapis.com/auth/ndev.cloudman.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/ndev.cloudman.readonly
      tags:
        - typeProviders
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
  "/{project}/global/types":
    get:
      description: Lists all resource types for Deployment Manager.
      operationId: deploymentmanager.types.list
      parameters:
        - description: >-
            A filter expression that filters resources listed in the response.
            The expression must specify the field name, a comparison operator,
            and the value that you want to use for filtering. The value must be
            a string, a number, or a boolean. The comparison operator must be
            either =, !=, >, or <.


            For example, if you are filtering Compute Engine instances, you can exclude instances named example-instance by specifying name != example-instance.


            You can also filter nested fields. For example, you could specify scheduling.automaticRestart = false to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels.


            To filter on multiple expressions, provide each separate expression within parentheses. For example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default, each expression is an AND expression. However, you can include AND and OR expressions explicitly. For example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true).
          in: query
          name: filter
          schema:
            type: string
        - description: "The maximum number of results per page that should be returned. If
            the number of available results is larger than maxResults, Compute
            Engine returns a nextPageToken that can be used to get the next page
            of results in subsequent list requests. Acceptable values are 0 to
            500, inclusive. (Default: 500)"
          in: query
          name: maxResults
          schema:
            type: integer
            minimum: 0
            default: 500
        - description: >-
            Sorts list results by a certain order. By default, results are
            returned in alphanumerical order based on the resource name.


            You can also sort results in descending order based on the creation timestamp using orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first.


            Currently, only sorting by name or creationTimestamp desc is supported.
          in: query
          name: orderBy
          schema:
            type: string
        - description: Specifies a page token to use. Set pageToken to the nextPageToken
            returned by a previous list request to get the next page of results.
          in: query
          name: pageToken
          schema:
            type: string
        - description: The project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/TypesListResponse"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform.read-only
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform.read-only
        - Oauth2:
            - https://www.googleapis.com/auth/ndev.cloudman
          Oauth2c:
            - https://www.googleapis.com/auth/ndev.cloudman
        - Oauth2:
            - https://www.googleapis.com/auth/ndev.cloudman.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/ndev.cloudman.readonly
      tags:
        - types
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Creates a type.
      operationId: deploymentmanager.types.insert
      parameters:
        - description: The project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/Type"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/ndev.cloudman
          Oauth2c:
            - https://www.googleapis.com/auth/ndev.cloudman
      tags:
        - types
  "/{project}/global/types/{type}":
    delete:
      description: Deletes a type and all of the resources in the type.
      operationId: deploymentmanager.types.delete
      parameters:
        - description: The project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: The name of the type for this request.
          in: path
          name: type
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/ndev.cloudman
          Oauth2c:
            - https://www.googleapis.com/auth/ndev.cloudman
      tags:
        - types
    get:
      description: Gets information about a specific type.
      operationId: deploymentmanager.types.get
      parameters:
        - description: The project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: The name of the type for this request.
          in: path
          name: type
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Type"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform.read-only
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform.read-only
        - Oauth2:
            - https://www.googleapis.com/auth/ndev.cloudman
          Oauth2c:
            - https://www.googleapis.com/auth/ndev.cloudman
        - Oauth2:
            - https://www.googleapis.com/auth/ndev.cloudman.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/ndev.cloudman.readonly
      tags:
        - types
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    patch:
      description: Updates a type. This method supports patch semantics.
      operationId: deploymentmanager.types.patch
      parameters:
        - description: The project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: The name of the type for this request.
          in: path
          name: type
          required: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/Type"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/ndev.cloudman
          Oauth2c:
            - https://www.googleapis.com/auth/ndev.cloudman
      tags:
        - types
    put:
      description: Updates a type.
      operationId: deploymentmanager.types.update
      parameters:
        - description: The project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: The name of the type for this request.
          in: path
          name: type
          required: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/Type"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/ndev.cloudman
          Oauth2c:
            - https://www.googleapis.com/auth/ndev.cloudman
      tags:
        - types
servers:
  - url: https://www.googleapis.com/deploymentmanager/alpha/projects
components:
  parameters:
    alt:
      description: Data format for the response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
        default: json
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    key:
      description: API key. Your API key identifies your project and provides you with API
        access, quota, and reports. Required unless you provide an OAuth 2.0
        token.
      in: query
      name: key
      schema:
        type: string
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
        default: true
    quotaUser:
      description: An opaque string that represents a user for quota purposes. Must not
        exceed 40 characters.
      in: query
      name: quotaUser
      schema:
        type: string
    userIp:
      description: Deprecated. Please use quotaUser instead.
      in: query
      name: userIp
      schema:
        type: string
  requestBodies:
    TypeProvider:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/TypeProvider"
    CompositeType:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/CompositeType"
    Deployment:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Deployment"
    Type:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Type"
  securitySchemes:
    Oauth2:
      description: Oauth 2.0 implicit authentication
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes:
            https://www.googleapis.com/auth/cloud-platform: View and manage your data across Google Cloud Platform services
            https://www.googleapis.com/auth/cloud-platform.read-only: View your data across Google Cloud Platform services
            https://www.googleapis.com/auth/ndev.cloudman: View and manage your Google Cloud Platform management resources
              and deployment status information
            https://www.googleapis.com/auth/ndev.cloudman.readonly: View your Google Cloud Platform management resources and
              deployment status information
    Oauth2c:
      description: Oauth 2.0 accessCode authentication
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          tokenUrl: https://accounts.google.com/o/oauth2/token
          scopes:
            https://www.googleapis.com/auth/cloud-platform: View and manage your data across Google Cloud Platform services
            https://www.googleapis.com/auth/cloud-platform.read-only: View your data across Google Cloud Platform services
            https://www.googleapis.com/auth/ndev.cloudman: View and manage your Google Cloud Platform management resources
              and deployment status information
            https://www.googleapis.com/auth/ndev.cloudman.readonly: View your Google Cloud Platform management resources and
              deployment status information
  schemas:
    AsyncOptions:
      description: Async options that determine when a resource should finish.
      properties:
        methodMatch:
          description: Method regex where this policy will apply.
          type: string
        pollingOptions:
          $ref: "#/components/schemas/PollingOptions"
      type: object
    AuditConfig:
      description: >-
        Specifies the audit configuration for a service. The configuration
        determines which permission types are logged, and what identities, if
        any, are exempted from logging. An AuditConfig must have one or more
        AuditLogConfigs.


        If there are AuditConfigs for both `allServices` and a specific service, the union of the two AuditConfigs is used for that service: the log_types specified in each AuditConfig are enabled, and the exempted_members in each AuditLogConfig are exempted.


        Example Policy with multiple AuditConfigs:


        { "audit_configs": [ { "service": "allServices" "audit_log_configs": [ { "log_type": "DATA_READ", "exempted_members": [ "user:foo@gmail.com" ] }, { "log_type": "DATA_WRITE", }, { "log_type": "ADMIN_READ", } ] }, { "service": "fooservice.googleapis.com" "audit_log_configs": [ { "log_type": "DATA_READ", }, { "log_type": "DATA_WRITE", "exempted_members": [ "user:bar@gmail.com" ] } ] } ] }


        For fooservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ logging. It also exempts foo@gmail.com from DATA_READ logging, and bar@gmail.com from DATA_WRITE logging.
      properties:
        auditLogConfigs:
          description: The configuration for logging of each type of permission.
          items:
            $ref: "#/components/schemas/AuditLogConfig"
          type: array
        exemptedMembers:
          description: ""
          items:
            type: string
          type: array
        service:
          description: Specifies a service that will be enabled for audit logging. For
            example, `storage.googleapis.com`, `cloudsql.googleapis.com`.
            `allServices` is a special value that covers all services.
          type: string
      type: object
    AuditLogConfig:
      description: >-
        Provides the configuration for logging a type of permissions. Example:


        { "audit_log_configs": [ { "log_type": "DATA_READ", "exempted_members": [ "user:foo@gmail.com" ] }, { "log_type": "DATA_WRITE", } ] }


        This enables 'DATA_READ' and 'DATA_WRITE' logging, while exempting foo@gmail.com from DATA_READ logging.
      properties:
        exemptedMembers:
          description: Specifies the identities that do not cause logging for this type of
            permission. Follows the same format of [Binding.members][].
          items:
            type: string
          type: array
        logType:
          description: The log type that this config enables.
          type: string
      type: object
    AuthorizationLoggingOptions:
      description: Authorization-related information used by Cloud Audit Logging.
      properties:
        permissionType:
          description: The type of the permission that was checked.
          type: string
      type: object
    BasicAuth:
      description: Basic Auth used as a credential.
      properties:
        password:
          type: string
        user:
          type: string
      type: object
    Binding:
      description: Associates `members` with a `role`.
      properties:
        condition:
          $ref: "#/components/schemas/Expr"
        members:
          description: >-
            Specifies the identities requesting access for a Cloud Platform
            resource. `members` can have the following values:


            * `allUsers`: A special identifier that represents anyone who is on the internet; with or without a Google account.


            * `allAuthenticatedUsers`: A special identifier that represents anyone who is authenticated with a Google account or a service account.


            * `user:{emailid}`: An email address that represents a specific Google account. For example, `alice@gmail.com` .




            * `serviceAccount:{emailid}`: An email address that represents a service account. For example, `my-other-app@appspot.gserviceaccount.com`.


            * `group:{emailid}`: An email address that represents a Google group. For example, `admins@example.com`.




            * `domain:{domain}`: A Google Apps domain name that represents all the users of that domain. For example, `google.com` or `example.com`.
          items:
            type: string
          type: array
        role:
          description: Role that is assigned to `members`. For example, `roles/viewer`,
            `roles/editor`, or `roles/owner`.
          type: string
      type: object
    CollectionOverride:
      description: CollectionOverride allows resource handling overrides for specific
        resources within a BaseType
      properties:
        collection:
          description: The collection that identifies this resource within its service.
          type: string
        methodMap:
          $ref: "#/components/schemas/MethodMap"
        options:
          $ref: "#/components/schemas/Options"
      type: object
    CompositeType:
      description: Holds the composite type.
      properties:
        description:
          description: An optional textual description of the resource; provided by the
            client when the resource is created.
          type: string
        id:
          format: uint64
          type: string
        insertTime:
          description: Output only. Creation timestamp in RFC3339 text format.
          type: string
        labels:
          description: "Map of labels; provided by the client when the resource is created
            or updated. Specifically: Label keys must be between 1 and 63
            characters long and must conform to the following regular
            expression: [a-z]([-a-z0-9]*[a-z0-9])? Label values must be between
            0 and 63 characters long and must conform to the regular expression
            ([a-z]([-a-z0-9]*[a-z0-9])?)?"
          items:
            $ref: "#/components/schemas/CompositeTypeLabelEntry"
          type: array
        name:
          description: "Name of the composite type, must follow the expression:
            [a-z]([-a-z0-9_.]{0,61}[a-z0-9])?."
          type: string
        operation:
          $ref: "#/components/schemas/Operation"
        selfLink:
          description: Output only. Server defined URL for the resource.
          type: string
        status:
          type: string
        templateContents:
          $ref: "#/components/schemas/TemplateContents"
      type: object
    CompositeTypeLabelEntry:
      properties:
        key:
          type: string
        value:
          type: string
      type: object
    CompositeTypesListResponse:
      description: A response that returns all Composite Types supported by Deployment
        Manager
      properties:
        compositeTypes:
          description: Output only. A list of resource composite types supported by
            Deployment Manager.
          items:
            $ref: "#/components/schemas/CompositeType"
          type: array
        nextPageToken:
          description: A token used to continue a truncated list request.
          type: string
      type: object
    Condition:
      description: A condition to be met.
      properties:
        iam:
          description: Trusted attributes supplied by the IAM system.
          type: string
        op:
          description: An operator to apply the subject with.
          type: string
        svc:
          description: Trusted attributes discharged by the service.
          type: string
        sys:
          description: Trusted attributes supplied by any service that owns resources and
            uses the IAM system for access control.
          type: string
        value:
          description: DEPRECATED. Use 'values' instead.
          type: string
        values:
          description: The objects of the condition. This is mutually exclusive with
            'value'.
          items:
            type: string
          type: array
      type: object
    ConfigFile:
      description: ""
      properties:
        content:
          description: The contents of the file.
          type: string
      type: object
    ConfigurableService:
      description: BaseType that describes a service-backed Type.
      properties:
        collectionOverrides:
          description: Allows resource handling overrides for specific collections
          items:
            $ref: "#/components/schemas/CollectionOverride"
          type: array
        credential:
          $ref: "#/components/schemas/Credential"
        descriptorUrl:
          description: Descriptor Url for the this type.
          type: string
        options:
          $ref: "#/components/schemas/Options"
      type: object
    Credential:
      description: The credential used by Deployment Manager and TypeProvider. Only one of
        the options is permitted.
      properties:
        basicAuth:
          $ref: "#/components/schemas/BasicAuth"
        serviceAccount:
          $ref: "#/components/schemas/ServiceAccount"
        useProjectDefault:
          description: Specify to use the project default credential, only supported by
            Deployment.
          type: boolean
      type: object
    Deployment:
      description: ""
      properties:
        credential:
          $ref: "#/components/schemas/Credential"
        description:
          description: An optional user-provided description of the deployment.
          type: string
        fingerprint:
          description: >-
            Provides a fingerprint to use in requests to modify a deployment,
            such as update(), stop(), and cancelPreview() requests. A
            fingerprint is a randomly generated value that must be provided with
            update(), stop(), and cancelPreview() requests to perform optimistic
            locking. This ensures optimistic concurrency so that only one
            request happens at a time.


            The fingerprint is initially generated by Deployment Manager and changes after every request to modify data. To get the latest fingerprint value, perform a get() request to a deployment.
          format: byte
          type: string
        id:
          format: uint64
          type: string
        insertTime:
          description: Output only. Creation timestamp in RFC3339 text format.
          type: string
        labels:
          description: "Map of labels; provided by the client when the resource is created
            or updated. Specifically: Label keys must be between 1 and 63
            characters long and must conform to the following regular
            expression: [a-z]([-a-z0-9]*[a-z0-9])? Label values must be between
            0 and 63 characters long and must conform to the regular expression
            ([a-z]([-a-z0-9]*[a-z0-9])?)?"
          items:
            $ref: "#/components/schemas/DeploymentLabelEntry"
          type: array
        manifest:
          description: Output only. URL of the manifest representing the last manifest that
            was successfully deployed.
          type: string
        name:
          description: Name of the resource; provided by the client when the resource is
            created. The name must be 1-63 characters long, and comply with
            RFC1035. Specifically, the name must be 1-63 characters long and
            match the regular expression [a-z]([-a-z0-9]*[a-z0-9])? which means
            the first character must be a lowercase letter, and all following
            characters must be a dash, lowercase letter, or digit, except the
            last character, which cannot be a dash.
          type: string
        operation:
          $ref: "#/components/schemas/Operation"
        outputs:
          description: Output only. Map of outputs from the last manifest that deployed
            successfully.
          items:
            $ref: "#/components/schemas/DeploymentOutputsEntry"
          type: array
        selfLink:
          description: Output only. Server defined URL for the resource.
          type: string
        target:
          $ref: "#/components/schemas/TargetConfiguration"
        update:
          $ref: "#/components/schemas/DeploymentUpdate"
        updateTime:
          description: Output only. Update timestamp in RFC3339 text format.
          type: string
      type: object
    DeploymentLabelEntry:
      properties:
        key:
          type: string
        value:
          type: string
      type: object
    DeploymentOutputsEntry:
      properties:
        key:
          type: string
        value:
          type: string
      type: object
    DeploymentUpdate:
      description: ""
      properties:
        credential:
          $ref: "#/components/schemas/Credential"
        description:
          description: Output only. An optional user-provided description of the deployment
            after the current update has been applied.
          type: string
        labels:
          description: "Output only. Map of labels; provided by the client when the
            resource is created or updated. Specifically: Label keys must be
            between 1 and 63 characters long and must conform to the following
            regular expression: [a-z]([-a-z0-9]*[a-z0-9])? Label values must be
            between 0 and 63 characters long and must conform to the regular
            expression ([a-z]([-a-z0-9]*[a-z0-9])?)?"
          items:
            $ref: "#/components/schemas/DeploymentUpdateLabelEntry"
          type: array
        manifest:
          description: Output only. URL of the manifest representing the update
            configuration of this deployment.
          type: string
      type: object
    DeploymentUpdateLabelEntry:
      properties:
        key:
          type: string
        value:
          type: string
      type: object
    DeploymentsCancelPreviewRequest:
      description: ""
      properties:
        fingerprint:
          description: >-
            Specifies a fingerprint for cancelPreview() requests. A fingerprint
            is a randomly generated value that must be provided in
            cancelPreview() requests to perform optimistic locking. This ensures
            optimistic concurrency so that the deployment does not have
            conflicting requests (e.g. if someone attempts to make a new update
            request while another user attempts to cancel a preview, this would
            prevent one of the requests).


            The fingerprint is initially generated by Deployment Manager and changes after every request to modify a deployment. To get the latest fingerprint value, perform a get() request on the deployment.
          format: byte
          type: string
      type: object
    DeploymentsListResponse:
      description: A response containing a partial list of deployments and a page token
        used to build the next request if the request has been truncated.
      properties:
        deployments:
          description: Output only. The deployments contained in this response.
          items:
            $ref: "#/components/schemas/Deployment"
          type: array
        nextPageToken:
          description: Output only. A token used to continue a truncated list request.
          type: string
      type: object
    DeploymentsStopRequest:
      description: ""
      properties:
        fingerprint:
          description: >-
            Specifies a fingerprint for stop() requests. A fingerprint is a
            randomly generated value that must be provided in stop() requests to
            perform optimistic locking. This ensures optimistic concurrency so
            that the deployment does not have conflicting requests (e.g. if
            someone attempts to make a new update request while another user
            attempts to stop an ongoing update request, this would prevent a
            collision).


            The fingerprint is initially generated by Deployment Manager and changes after every request to modify a deployment. To get the latest fingerprint value, perform a get() request on the deployment.
          format: byte
          type: string
      type: object
    Diagnostic:
      description: ""
      properties:
        field:
          description: JsonPath expression on the resource that if non empty, indicates
            that this field needs to be extracted as a diagnostic.
          type: string
        level:
          description: Level to record this diagnostic.
          type: string
      type: object
    Expr:
      description: >-
        Represents an expression text. Example:


        title: "User account presence" description: "Determines whether the request has a user account" expression: "size(request.user) > 0"
      properties:
        description:
          description: An optional description of the expression. This is a longer text
            which describes the expression, e.g. when hovered over it in a UI.
          type: string
        expression:
          description: >-
            Textual representation of an expression in Common Expression
            Language syntax.


            The application context of the containing message determines which well-known feature set of CEL is supported.
          type: string
        location:
          description: An optional string indicating the location of the expression for
            error reporting, e.g. a file name and a position in the file.
          type: string
        title:
          description: An optional title for the expression, i.e. a short string describing
            its purpose. This can be used e.g. in UIs which allow to enter the
            expression.
          type: string
      type: object
    GlobalSetPolicyRequest:
      properties:
        bindings:
          description: Flatten Policy to create a backward compatible wire-format.
            Deprecated. Use 'policy' to specify bindings.
          items:
            $ref: "#/components/schemas/Binding"
          type: array
        etag:
          description: Flatten Policy to create a backward compatible wire-format.
            Deprecated. Use 'policy' to specify the etag.
          format: byte
          type: string
        policy:
          $ref: "#/components/schemas/Policy"
      type: object
    ImportFile:
      description: ""
      properties:
        content:
          description: The contents of the file.
          type: string
        name:
          description: The name of the file.
          type: string
      type: object
    InputMapping:
      description: InputMapping creates a 'virtual' property that will be injected into the
        properties before sending the request to the underlying API.
      properties:
        fieldName:
          description: The name of the field that is going to be injected.
          type: string
        location:
          description: The location where this mapping applies.
          type: string
        methodMatch:
          description: Regex to evaluate on method to decide if input applies.
          type: string
        value:
          description: A jsonPath expression to select an element.
          type: string
      type: object
    LogConfig:
      description: Specifies what kind of log the caller must write
      properties:
        cloudAudit:
          $ref: "#/components/schemas/LogConfigCloudAuditOptions"
        counter:
          $ref: "#/components/schemas/LogConfigCounterOptions"
        dataAccess:
          $ref: "#/components/schemas/LogConfigDataAccessOptions"
      type: object
    LogConfigCloudAuditOptions:
      description: Write a Cloud Audit log
      properties:
        authorizationLoggingOptions:
          $ref: "#/components/schemas/AuthorizationLoggingOptions"
        logName:
          description: The log_name to populate in the Cloud Audit Record.
          type: string
      type: object
    LogConfigCounterOptions:
      description: >-
        Increment a streamz counter with the specified metric and field names.


        Metric names should start with a '/', generally be lowercase-only, and end in "_count". Field names should not contain an initial slash. The actual exported metric names will have "/iam/policy" prepended.


        Field names correspond to IAM request parameters and field values are their respective values.


        Supported field names: - "authority", which is "[token]" if IAMContext.token is present, otherwise the value of IAMContext.authority_selector if present, and otherwise a representation of IAMContext.principal; or - "iam_principal", a representation of IAMContext.principal even if a token or authority selector is present; or - "" (empty string), resulting in a counter with no fields.


        Examples: counter { metric: "/debug_access_count" field: "iam_principal" } ==> increment counter /iam/policy/backend_debug_access_count {iam_principal=[value of IAMContext.principal]}


        At this time we do not support multiple field names (though this may be supported in the future).
      properties:
        field:
          description: The field value to attribute.
          type: string
        metric:
          description: The metric to update.
          type: string
      type: object
    LogConfigDataAccessOptions:
      description: Write a Data Access (Gin) log
      properties:
        logMode:
          description: >-
            Whether Gin logging should happen in a fail-closed manner at the
            caller. This is relevant only in the LocalIAM implementation, for
            now.


            NOTE: Logging to Gin in a fail-closed manner is currently unsupported while work is being done to satisfy the requirements of go/345. Currently, setting LOG_FAIL_CLOSED mode will have no effect, but still exists because there is active work being done to support it (b/115874152).
          type: string
      type: object
    Manifest:
      description: ""
      properties:
        config:
          $ref: "#/components/schemas/ConfigFile"
        expandedConfig:
          description: Output only. The fully-expanded configuration file, including any
            templates and references.
          type: string
        id:
          format: uint64
          type: string
        imports:
          description: Output only. The imported files for this manifest.
          items:
            $ref: "#/components/schemas/ImportFile"
          type: array
        insertTime:
          description: Output only. Creation timestamp in RFC3339 text format.
          type: string
        layout:
          description: Output only. The YAML layout for this manifest.
          type: string
        name:
          description: |-
            Output only.

            The name of the manifest.
          type: string
        selfLink:
          description: Output only. Self link for the manifest.
          type: string
      type: object
    ManifestsListResponse:
      description: A response containing a partial list of manifests and a page token used
        to build the next request if the request has been truncated.
      properties:
        manifests:
          description: Output only. Manifests contained in this list response.
          items:
            $ref: "#/components/schemas/Manifest"
          type: array
        nextPageToken:
          description: Output only. A token used to continue a truncated list request.
          type: string
      type: object
    MethodMap:
      description: Deployment Manager will call these methods during the events of
        creation/deletion/update/get/setIamPolicy
      properties:
        create:
          description: The action identifier for the create method to be used for this
            collection
          type: string
        delete:
          description: The action identifier for the delete method to be used for this
            collection
          type: string
        get:
          description: The action identifier for the get method to be used for this
            collection
          type: string
        setIamPolicy:
          description: The action identifier for the setIamPolicy method to be used for
            this collection
          type: string
        update:
          description: The action identifier for the update method to be used for this
            collection
          type: string
      type: object
    Operation:
      description: An Operation resource, used to manage asynchronous API requests. (==
        resource_for v1.globalOperations ==) (== resource_for
        beta.globalOperations ==) (== resource_for v1.regionOperations ==) (==
        resource_for beta.regionOperations ==) (== resource_for
        v1.zoneOperations ==) (== resource_for beta.zoneOperations ==)
      properties:
        clientOperationId:
          description: "[Output Only] The value of `requestId` if you provided it in the
            request. Not present otherwise."
          type: string
        creationTimestamp:
          description: "[Deprecated] This field is deprecated."
          type: string
        description:
          description: "[Output Only] A textual description of the operation, which is set
            when the operation is created."
          type: string
        endTime:
          description: "[Output Only] The time that this operation was completed. This
            value is in RFC3339 text format."
          type: string
        error:
          description: "[Output Only] If errors are generated during processing of the
            operation, this field will be populated."
          properties:
            errors:
              description: "[Output Only] The array of errors encountered while processing
                this operation."
              items:
                properties:
                  code:
                    description: "[Output Only] The error type identifier for this error."
                    type: string
                  location:
                    description: "[Output Only] Indicates the field in the request that
                      caused the error. This property is optional."
                    type: string
                  message:
                    description: "[Output Only] An optional, human-readable error message."
                    type: string
                type: object
              type: array
          type: object
        httpErrorMessage:
          description: "[Output Only] If the operation fails, this field contains the HTTP
            error message that was returned, such as NOT FOUND."
          type: string
        httpErrorStatusCode:
          description: "[Output Only] If the operation fails, this field contains the HTTP
            error status code that was returned. For example, a 404 means the
            resource was not found."
          format: int32
          type: integer
        id:
          description: "[Output Only] The unique identifier for the resource. This
            identifier is defined by the server."
          format: uint64
          type: string
        insertTime:
          description: "[Output Only] The time that this operation was requested. This
            value is in RFC3339 text format."
          type: string
        kind:
          default: deploymentmanager#operation
          description: "[Output Only] Type of the resource. Always compute#operation for
            Operation resources."
          type: string
        name:
          description: "[Output Only] Name of the resource."
          type: string
        operationType:
          description: "[Output Only] The type of operation, such as insert, update, or
            delete, and so on."
          type: string
        progress:
          description: "[Output Only] An optional progress indicator that ranges from 0 to
            100. There is no requirement that this be linear or support any
            granularity of operations. This should not be used to guess when the
            operation will be complete. This number should monotonically
            increase as the operation progresses."
          format: int32
          type: integer
        region:
          description: "[Output Only] The URL of the region where the operation resides.
            Only available when performing regional operations. You must specify
            this field as part of the HTTP request URL. It is not settable as a
            field in the request body."
          type: string
        selfLink:
          description: "[Output Only] Server-defined URL for the resource."
          type: string
        startTime:
          description: "[Output Only] The time that this operation was started by the
            server. This value is in RFC3339 text format."
          type: string
        status:
          description: "[Output Only] The status of the operation, which can be one of the
            following: PENDING, RUNNING, or DONE."
          type: string
        statusMessage:
          description: "[Output Only] An optional textual description of the current status
            of the operation."
          type: string
        targetId:
          description: "[Output Only] The unique target ID, which identifies a specific
            incarnation of the target resource."
          format: uint64
          type: string
        targetLink:
          description: "[Output Only] The URL of the resource that the operation modifies.
            For operations related to creating a snapshot, this points to the
            persistent disk that the snapshot was created from."
          type: string
        user:
          description: "[Output Only] User who requested the operation, for example:
            user@example.com."
          type: string
        warnings:
          description: "[Output Only] If warning messages are generated during processing
            of the operation, this field will be populated."
          items:
            properties:
              code:
                description: "[Output Only] A warning code, if applicable. For example,
                  Compute Engine returns NO_RESULTS_ON_PAGE if there are no
                  results in the response."
                type: string
              data:
                description: >-
                  [Output Only] Metadata about this warning in key: value
                  format. For example:

                  "data": [ { "key": "scope", "value": "zones/us-east1-d" }
                items:
                  properties:
                    key:
                      description: "[Output Only] A key that provides more detail on the
                        warning being returned. For example, for warnings where
                        there are no results in a list request for a particular
                        zone, this key might be scope and the key value might be
                        the zone name. Other examples might be a key indicating
                        a deprecated resource and a suggested replacement, or a
                        warning about invalid network settings (for example, if
                        an instance attempts to perform IP forwarding but is not
                        enabled for IP forwarding)."
                      type: string
                    value:
                      description: "[Output Only] A warning data value corresponding to the
                        key."
                      type: string
                  type: object
                type: array
              message:
                description: "[Output Only] A human-readable description of the warning
                  code."
                type: string
            type: object
          type: array
        zone:
          description: "[Output Only] The URL of the zone where the operation resides. Only
            available when performing per-zone operations. You must specify this
            field as part of the HTTP request URL. It is not settable as a field
            in the request body."
          type: string
      type: object
    OperationsListResponse:
      description: A response containing a partial list of operations and a page token used
        to build the next request if the request has been truncated.
      properties:
        nextPageToken:
          description: Output only. A token used to continue a truncated list request.
          type: string
        operations:
          description: Output only. Operations contained in this list response.
          items:
            $ref: "#/components/schemas/Operation"
          type: array
      type: object
    Options:
      description: Options allows customized resource handling by Deployment Manager.
      properties:
        asyncOptions:
          description: Options regarding how to thread async requests.
          items:
            $ref: "#/components/schemas/AsyncOptions"
          type: array
        inputMappings:
          description: The mappings that apply for requests.
          items:
            $ref: "#/components/schemas/InputMapping"
          type: array
        nameProperty:
          description: The json path to the field in the resource JSON body into which the
            resource name should be mapped. Leaving this empty indicates that
            there should be no mapping performed.
          type: string
        validationOptions:
          $ref: "#/components/schemas/ValidationOptions"
      type: object
    Policy:
      description: >-
        Defines an Identity and Access Management (IAM) policy. It is used to
        specify access control policies for Cloud Platform resources.




        A `Policy` consists of a list of `bindings`. A `binding` binds a list of `members` to a `role`, where the members can be user accounts, Google groups, Google domains, and service accounts. A `role` is a named list of permissions defined by IAM.


        **JSON Example**


        { "bindings": [ { "role": "roles/owner", "members": [ "user:mike@example.com", "group:admins@example.com", "domain:google.com", "serviceAccount:my-other-app@appspot.gserviceaccount.com" ] }, { "role": "roles/viewer", "members": ["user:sean@example.com"] } ] }


        **YAML Example**


        bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-other-app@appspot.gserviceaccount.com role: roles/owner - members: - user:sean@example.com role: roles/viewer




        For a description of IAM and its features, see the [IAM developer's guide](https://cloud.google.com/iam/docs).
      properties:
        auditConfigs:
          description: Specifies cloud audit logging configuration for this policy.
          items:
            $ref: "#/components/schemas/AuditConfig"
          type: array
        bindings:
          description: Associates a list of `members` to a `role`. `bindings` with no
            members will result in an error.
          items:
            $ref: "#/components/schemas/Binding"
          type: array
        etag:
          description: >-
            `etag` is used for optimistic concurrency control as a way to help
            prevent simultaneous updates of a policy from overwriting each
            other. It is strongly suggested that systems make use of the `etag`
            in the read-modify-write cycle to perform policy updates in order to
            avoid race conditions: An `etag` is returned in the response to
            `getIamPolicy`, and systems are expected to put that etag in the
            request to `setIamPolicy` to ensure that their change will be
            applied to the same version of the policy.


            If no `etag` is provided in the call to `setIamPolicy`, then the existing policy is overwritten blindly.
          format: byte
          type: string
        iamOwned:
          description: ""
          type: boolean
        rules:
          description: "If more than one rule is specified, the rules are applied in the
            following manner: - All matching LOG rules are always applied. - If
            any DENY/DENY_WITH_LOG rule matches, permission is denied. Logging
            will be applied if one or more matching rule requires logging. -
            Otherwise, if any ALLOW/ALLOW_WITH_LOG rule matches, permission is
            granted. Logging will be applied if one or more matching rule
            requires logging. - Otherwise, if no rule applies, permission is
            denied."
          items:
            $ref: "#/components/schemas/Rule"
          type: array
        version:
          description: Deprecated.
          format: int32
          type: integer
      type: object
    PollingOptions:
      description: ""
      properties:
        diagnostics:
          description: An array of diagnostics to be collected by Deployment Manager, these
            diagnostics will be displayed to the user.
          items:
            $ref: "#/components/schemas/Diagnostic"
          type: array
        failCondition:
          description: JsonPath expression that determines if the request failed.
          type: string
        finishCondition:
          description: JsonPath expression that determines if the request is completed.
          type: string
        pollingLink:
          description: JsonPath expression that evaluates to string, it indicates where to
            poll.
          type: string
        targetLink:
          description: JsonPath expression, after polling is completed, indicates where to
            fetch the resource.
          type: string
      type: object
    Resource:
      description: ""
      properties:
        accessControl:
          $ref: "#/components/schemas/ResourceAccessControl"
        finalProperties:
          description: Output only. The evaluated properties of the resource with
            references expanded. Returned as serialized YAML.
          type: string
        id:
          format: uint64
          type: string
        insertTime:
          description: Output only. Creation timestamp in RFC3339 text format.
          type: string
        lastUsedCredential:
          $ref: "#/components/schemas/Credential"
        manifest:
          description: Output only. URL of the manifest representing the current
            configuration of this resource.
          type: string
        name:
          description: Output only. The name of the resource as it appears in the YAML
            config.
          type: string
        properties:
          description: Output only. The current properties of the resource before any
            references have been filled in. Returned as serialized YAML.
          type: string
        runtimePolicies:
          description: Output only. In case this is an action, it will show the
            runtimePolicies on which this action will run in the deployment
          items:
            type: string
          type: array
        type:
          description: Output only. The type of the resource, for example
            compute.v1.instance, or cloudfunctions.v1beta1.function.
          type: string
        update:
          $ref: "#/components/schemas/ResourceUpdate"
        updateTime:
          description: Output only. Update timestamp in RFC3339 text format.
          type: string
        url:
          description: Output only. The URL of the actual resource.
          type: string
        warnings:
          description: Output only. If warning messages are generated during processing of
            this resource, this field will be populated.
          items:
            properties:
              code:
                description: "[Output Only] A warning code, if applicable. For example,
                  Compute Engine returns NO_RESULTS_ON_PAGE if there are no
                  results in the response."
                type: string
              data:
                description: >-
                  [Output Only] Metadata about this warning in key: value
                  format. For example:

                  "data": [ { "key": "scope", "value": "zones/us-east1-d" }
                items:
                  properties:
                    key:
                      description: "[Output Only] A key that provides more detail on the
                        warning being returned. For example, for warnings where
                        there are no results in a list request for a particular
                        zone, this key might be scope and the key value might be
                        the zone name. Other examples might be a key indicating
                        a deprecated resource and a suggested replacement, or a
                        warning about invalid network settings (for example, if
                        an instance attempts to perform IP forwarding but is not
                        enabled for IP forwarding)."
                      type: string
                    value:
                      description: "[Output Only] A warning data value corresponding to the
                        key."
                      type: string
                  type: object
                type: array
              message:
                description: "[Output Only] A human-readable description of the warning
                  code."
                type: string
            type: object
          type: array
      type: object
    ResourceAccessControl:
      description: The access controls set on the resource.
      properties:
        gcpIamPolicy:
          description: The GCP IAM Policy to set on the resource.
          type: string
      type: object
    ResourceUpdate:
      description: ""
      properties:
        accessControl:
          $ref: "#/components/schemas/ResourceAccessControl"
        credential:
          $ref: "#/components/schemas/Credential"
        error:
          description: Output only. If errors are generated during update of the resource,
            this field will be populated.
          properties:
            errors:
              description: "[Output Only] The array of errors encountered while processing
                this operation."
              items:
                properties:
                  code:
                    description: "[Output Only] The error type identifier for this error."
                    type: string
                  location:
                    description: "[Output Only] Indicates the field in the request that
                      caused the error. This property is optional."
                    type: string
                  message:
                    description: "[Output Only] An optional, human-readable error message."
                    type: string
                type: object
              type: array
          type: object
        finalProperties:
          description: Output only. The expanded properties of the resource with reference
            values expanded. Returned as serialized YAML.
          type: string
        intent:
          description: "Output only. The intent of the resource: PREVIEW, UPDATE, or
            CANCEL."
          type: string
        manifest:
          description: Output only. URL of the manifest representing the update
            configuration of this resource.
          type: string
        properties:
          description: Output only. The set of updated properties for this resource, before
            references are expanded. Returned as serialized YAML.
          type: string
        runtimePolicies:
          description: Output only. In case this is an action, it will show the
            runtimePolicies that this action will have after updating the
            deployment.
          items:
            type: string
          type: array
        state:
          description: Output only. The state of the resource.
          type: string
        warnings:
          description: Output only. If warning messages are generated during processing of
            this resource, this field will be populated.
          items:
            properties:
              code:
                description: "[Output Only] A warning code, if applicable. For example,
                  Compute Engine returns NO_RESULTS_ON_PAGE if there are no
                  results in the response."
                type: string
              data:
                description: >-
                  [Output Only] Metadata about this warning in key: value
                  format. For example:

                  "data": [ { "key": "scope", "value": "zones/us-east1-d" }
                items:
                  properties:
                    key:
                      description: "[Output Only] A key that provides more detail on the
                        warning being returned. For example, for warnings where
                        there are no results in a list request for a particular
                        zone, this key might be scope and the key value might be
                        the zone name. Other examples might be a key indicating
                        a deprecated resource and a suggested replacement, or a
                        warning about invalid network settings (for example, if
                        an instance attempts to perform IP forwarding but is not
                        enabled for IP forwarding)."
                      type: string
                    value:
                      description: "[Output Only] A warning data value corresponding to the
                        key."
                      type: string
                  type: object
                type: array
              message:
                description: "[Output Only] A human-readable description of the warning
                  code."
                type: string
            type: object
          type: array
      type: object
    ResourcesListResponse:
      description: A response containing a partial list of resources and a page token used
        to build the next request if the request has been truncated.
      properties:
        nextPageToken:
          description: A token used to continue a truncated list request.
          type: string
        resources:
          description: Resources contained in this list response.
          items:
            $ref: "#/components/schemas/Resource"
          type: array
      type: object
    Rule:
      description: A rule to be applied in a Policy.
      properties:
        action:
          description: Required
          type: string
        conditions:
          description: Additional restrictions that must be met. All conditions must pass
            for the rule to match.
          items:
            $ref: "#/components/schemas/Condition"
          type: array
        description:
          description: Human-readable description of the rule.
          type: string
        ins:
          description: If one or more 'in' clauses are specified, the rule matches if the
            PRINCIPAL/AUTHORITY_SELECTOR is in at least one of these entries.
          items:
            type: string
          type: array
        logConfigs:
          description: The config returned to callers of tech.iam.IAM.CheckPolicy for any
            entries that match the LOG action.
          items:
            $ref: "#/components/schemas/LogConfig"
          type: array
        notIns:
          description: If one or more 'not_in' clauses are specified, the rule matches if
            the PRINCIPAL/AUTHORITY_SELECTOR is in none of the entries.
          items:
            type: string
          type: array
        permissions:
          description: A permission is a string of form '..' (e.g.,
            'storage.buckets.list'). A value of '*' matches all permissions, and
            a verb part of '*' (e.g., 'storage.buckets.*') matches all verbs.
          items:
            type: string
          type: array
      type: object
    ServiceAccount:
      description: Service Account used as a credential.
      properties:
        email:
          description: The IAM service account email address like
            test@myproject.iam.gserviceaccount.com
          type: string
      type: object
    TargetConfiguration:
      description: ""
      properties:
        config:
          $ref: "#/components/schemas/ConfigFile"
        imports:
          description: Specifies any files to import for this configuration. This can be
            used to import templates or other files. For example, you might
            import a text file in order to use the file in a template.
          items:
            $ref: "#/components/schemas/ImportFile"
          type: array
      type: object
    TemplateContents:
      description: Files that make up the template contents of a template type.
      properties:
        imports:
          description: Import files referenced by the main template.
          items:
            $ref: "#/components/schemas/ImportFile"
          type: array
        interpreter:
          description: Which interpreter (python or jinja) should be used during expansion.
          type: string
        mainTemplate:
          description: The filename of the mainTemplate
          type: string
        schema:
          description: The contents of the template schema.
          type: string
        template:
          description: The contents of the main template file.
          type: string
      type: object
    TestPermissionsRequest:
      properties:
        permissions:
          description: The set of permissions to check for the 'resource'. Permissions with
            wildcards (such as '*' or 'storage.*') are not allowed.
          items:
            type: string
          type: array
      type: object
    TestPermissionsResponse:
      properties:
        permissions:
          description: A subset of `TestPermissionsRequest.permissions` that the caller is
            allowed.
          items:
            type: string
          type: array
      type: object
    Type:
      description: A resource type supported by Deployment Manager.
      properties:
        configurableService:
          $ref: "#/components/schemas/ConfigurableService"
        description:
          description: An optional textual description of the resource; provided by the
            client when the resource is created.
          type: string
        id:
          format: uint64
          type: string
        insertTime:
          description: Output only. Creation timestamp in RFC3339 text format.
          type: string
        labels:
          description: "Map of labels; provided by the client when the resource is created
            or updated. Specifically: Label keys must be between 1 and 63
            characters long and must conform to the following regular
            expression: [a-z]([-a-z0-9]*[a-z0-9])? Label values must be between
            0 and 63 characters long and must conform to the regular expression
            ([a-z]([-a-z0-9]*[a-z0-9])?)?"
          items:
            $ref: "#/components/schemas/TypeLabelEntry"
          type: array
        name:
          description: Name of the type.
          type: string
        operation:
          $ref: "#/components/schemas/Operation"
        selfLink:
          description: Output only. Server defined URL for the resource.
          type: string
      type: object
    TypeInfo:
      description: Type Information. Contains detailed information about a composite type,
        base type, or base type with specific collection.
      properties:
        description:
          description: The description of the type.
          type: string
        documentationLink:
          description: For swagger 2.0 externalDocs field will be used. For swagger 1.2
            this field will be empty.
          type: string
        kind:
          description: Output only. Type of the output. Always deploymentManager#TypeInfo
            for TypeInfo.
          type: string
        name:
          description: The base type or composite type name.
          type: string
        schema:
          $ref: "#/components/schemas/TypeInfoSchemaInfo"
        selfLink:
          description: Output only. Self link for the type provider.
          type: string
        title:
          description: The title on the API descriptor URL provided.
          type: string
      type: object
    TypeInfoSchemaInfo:
      description: ""
      properties:
        input:
          description: "The properties that this composite type or base type collection
            accept as input, represented as a json blob, format is: JSON Schema
            Draft V4"
          type: string
        output:
          description: "The properties that this composite type or base type collection
            exposes as output, these properties can be used for references,
            represented as json blob, format is: JSON Schema Draft V4"
          type: string
      type: object
    TypeLabelEntry:
      properties:
        key:
          type: string
        value:
          type: string
      type: object
    TypeProvider:
      description: A type provider that describes a service-backed Type.
      properties:
        collectionOverrides:
          description: Allows resource handling overrides for specific collections
          items:
            $ref: "#/components/schemas/CollectionOverride"
          type: array
        credential:
          $ref: "#/components/schemas/Credential"
        description:
          description: An optional textual description of the resource; provided by the
            client when the resource is created.
          type: string
        descriptorUrl:
          description: Descriptor Url for the this type provider.
          type: string
        id:
          description: Output only. Unique identifier for the resource defined by the
            server.
          format: uint64
          type: string
        insertTime:
          description: Output only. Creation timestamp in RFC3339 text format.
          type: string
        labels:
          description: "Map of labels; provided by the client when the resource is created
            or updated. Specifically: Label keys must be between 1 and 63
            characters long and must conform to the following regular
            expression: [a-z]([-a-z0-9]*[a-z0-9])? Label values must be between
            0 and 63 characters long and must conform to the regular expression
            ([a-z]([-a-z0-9]*[a-z0-9])?)?"
          items:
            $ref: "#/components/schemas/TypeProviderLabelEntry"
          type: array
        name:
          description: Name of the resource; provided by the client when the resource is
            created. The name must be 1-63 characters long, and comply with
            RFC1035. Specifically, the name must be 1-63 characters long and
            match the regular expression [a-z]([-a-z0-9]*[a-z0-9])? which means
            the first character must be a lowercase letter, and all following
            characters must be a dash, lowercase letter, or digit, except the
            last character, which cannot be a dash.
          type: string
        operation:
          $ref: "#/components/schemas/Operation"
        options:
          $ref: "#/components/schemas/Options"
        selfLink:
          description: Output only. Self link for the type provider.
          type: string
      type: object
    TypeProviderLabelEntry:
      properties:
        key:
          type: string
        value:
          type: string
      type: object
    TypeProvidersListResponse:
      description: A response that returns all Type Providers supported by Deployment
        Manager
      properties:
        nextPageToken:
          description: A token used to continue a truncated list request.
          type: string
        typeProviders:
          description: Output only. A list of resource type providers supported by
            Deployment Manager.
          items:
            $ref: "#/components/schemas/TypeProvider"
          type: array
      type: object
    TypeProvidersListTypesResponse:
      description: ""
      properties:
        nextPageToken:
          description: A token used to continue a truncated list request.
          type: string
        types:
          description: Output only. A list of resource type info.
          items:
            $ref: "#/components/schemas/TypeInfo"
          type: array
      type: object
    TypesListResponse:
      description: A response that returns all Types supported by Deployment Manager
      properties:
        nextPageToken:
          description: A token used to continue a truncated list request.
          type: string
        types:
          description: Output only. A list of resource types supported by Deployment
            Manager.
          items:
            $ref: "#/components/schemas/Type"
          type: array
      type: object
    ValidationOptions:
      description: Options for how to validate and process properties on a resource.
      properties:
        schemaValidation:
          description: Customize how deployment manager will validate the resource against
            schema errors.
          type: string
        undeclaredProperties:
          description: Specify what to do with extra properties when executing a request.
          type: string
      type: object
